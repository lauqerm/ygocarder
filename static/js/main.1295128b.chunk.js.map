{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","pendulumSubstituteMap","ArtFinishMap","art","OtherFinishTypeMap","attribute","sticker","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","otherFinish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","createCanvas","canvas","document","createElement","context","getContext","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","filter","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader$split$filter","_reader14","_reader15","_reader16","_reader17","_ref4","_reader18","_reader19","_reader20","_ref5","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader40","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","mirrorPendulumScale","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","useItalic","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","isNormal","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","drawLinkRatingText","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","isSpeedSkill","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","_otherFinish$","attributeCanvas","attributeContext","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishContext","drawStar","_otherFinish$2","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starContext","starFinishCanvas","starFinishContext","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","effectIndexSize","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","iconCanvas","iconContext","iconFinishCanvas","iconFinishContext","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","CombinedSliderContainer","PopoverButton","$active","$softMode","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","footer","Tabs","TabPane","tab","answer","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","onMouseOut","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","naturalWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","currentPendulumFrame","_bottomFrameOptionGri","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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d,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,U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KAAM,IAAKxD,MAAO,EAAM,MAEjCyhB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACF/L,KAAK,MACPgM,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFhM,KAAK,OAELoM,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEhe,KAAM,KAAMxD,MAAO,GAC7B,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,QAAW,CAAEwD,KAAM,KAAMxD,MAAO,GAChC,GAAM,CAAEwD,KAAM,KAAMxD,MAAO,GAC3B,WAAc,CAAEwD,KAAM,KAAMxD,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAEwD,KAAM,IAAKxD,MAAO,OAEtCyhB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACF/L,KAAK,MACPgM,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFhM,KAAK,OAGEqM,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACP9e,KAAMue,KAIH,MAAM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","file":"static/js/main.1295128b.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\n\nexport const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n        {\n            value: 'fit' as const,\n            label: dictionary?.fit,\n        },\n        {\n            value: 'full' as const,\n            label: dictionary?.full,\n        },\n        {\n            value: 'frame' as const,\n            label: dictionary?.frame,\n        },\n    ];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxRef: React.RefObject<{\n        draw: (exportCanvas: HTMLCanvasElement) => void,\n    }>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    maximumScale: 2,\n    topToPendulumStructure: 210,\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\n    topToPendulumStructureFrame: 185,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    pendulumIconFrameWidth: 813,\n    pendulumIconFrameHeight: 100,\n    pendulumFrameWidth: 753,\n    pendulumFrameHeight: 955,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n    finishTypeCardWidth: 702,\n    finishTypeCardHeight: 200,\n    stickerSize: 52,\n    attributeSize: 77,\n    attributeY: 55,\n    attributeX: 678,\n    stickerX: 739.1438,\n    stickerY: 1110.938,\n    iconWidth: 43,\n    iconHeight: 44,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /**\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    pendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.236,\n        backgroundRatio: 1.236,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artRatio: 1.236,\n        type: 'pendulumSmall' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\n     * Even though the image size does not change, the image frame does become larger.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     *  */\n    extendedPendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.236,\n        type: 'extendedPendulumSmall' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\n     * This results a taller visible image, but shorter image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumSmall: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.055,\n        backgroundRatio: 1.055,\n        artFrameWidth: 702,\n        artFrameHeight: 568,\n        artFrameY: 213,\n        artRatio: 1.236,\n        type: 'truePendulumSmall' as const,\n    },\n    /**\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\n     * It is only used for series 9 Pendulum cards, which is deprecated.\n     * */\n    truePendulumLarge: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1,\n        backgroundRatio: 1,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulumLarge' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n    pendulumSize?: PendulumSize,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\n\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\n    if (normalizedBoundless || body < 100) {\n        distributionMode = isPendulum\n            ? 'fullPendulum'\n            : 'fullCard';\n    } else {\n        if (isPendulum) {\n            if (text < 100) {\n                distributionMode = pendulumSize === 'small'\n                    ? 'extendedPendulumSmall'\n                    : 'extendedPendulum';\n            } else {\n                if (pendulum < 100) {\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\n                } else {\n                    distributionMode = pendulumSize === 'small'\n                        ? 'pendulumSmall'\n                        : 'pendulum';\n                }\n            }\n        } else {\n            distributionMode = text < 100\n                ? 'extendedCard'\n                : 'normal';\n        }\n    }\n\n    const result = CardArtCanvasCoordinateMap[distributionMode];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n    {\n        name: 'MAGIC',\n        nameKey: 'input.attribute.magic',\n        label: 'Laugh',\n        color: '#1b8f83',\n        isCreative: true,\n        isOption: true,\n        supportFormat: ['tcg', 'ocg'],\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.full.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.full.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    embossPitch: 90,\n    embossYaw: 90,\n    embossThickness: 0,\n    hasEmboss: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    hasEmboss: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo'\n| 'embossGold' | 'embossPlatinum';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n    embossGold: {\n        key: 'embossGold',\n        label: 'Embossed Gold',\n        image: 'asset/image/other/name-emboss-gold.png',\n        value: createPresetNameStyle({\n            preset: 'embossGold',\n            fillStyle: '#d09b0e',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#333333',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n    embossPlatinum: {\n        key: 'embossPlatinum',\n        label: 'Embossed Platinum',\n        image: 'asset/image/other/name-emboss-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'embossPlatinum',\n            fillStyle: '#c0c0c0',\n            hasEmboss: true,\n            embossPitch: 90,\n            embossYaw: 90,\n            hasShadow: true,\n            shadowBlur: 2,\n            shadowColor: '#4d4d4d',\n            shadowOffsetX: -1,\n            shadowOffsetY: 1,\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\nexport const PendulumSizeMap = {\n    small: {\n        key: 'small' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.small.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 95,\n        pendulumBoxOffsetY: 50,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 816,\n        artlessFrameY: 594,\n        fontSize: 56.5,\n    },\n    medium: {\n        key: 'medium' as const,\n        frameType: 'pendulum',\n        labelKey: 'input.pendulum-size.medium.label',\n        effectBoxOffsetY: 0,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 147,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 790,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n    large: {\n        key: 'large' as const,\n        frameType: 'text',\n        labelKey: 'input.pendulum-size.large.label',\n        effectBoxOffsetY: 27,\n        pendulumBoxX: 55,\n        pendulumBoxY: 738,\n        pendulumBoxWidth: 705,\n        pendulumBoxHeight: 180,\n        pendulumBoxOffsetY: 0,\n        numberBlueX: 84.4,\n        numberRedX: 728.0,\n        numberY: 806,\n        artlessFrameY: 553,\n        fontSize: 60.5,\n    },\n};\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\n\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\n    exceptionPendulumBoxOffsetHeight?: number,\n    exceptionFrameType?: string,\n}>> = {\n    small: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: -13,\n        },\n    },\n    medium: {},\n    large: {\n        'speed-skill': {\n            exceptionPendulumBoxOffsetHeight: 15,\n        },\n        zarc: {\n            exceptionFrameType: 'pendulum-large',\n        }\n    },\n};\n\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n    trueHeightCap?: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\n    ],\n    'tcg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'tcg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'tcg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'tcg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge': [\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\n    ],\n    'ocg-pendulumLarge-stat': [\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\n    ],\n    'ocg-pendulumLarge-type-stat': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\n    ],\n    'ocg-pendulumLarge-type': [\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\n    ],\n};\n\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\n    normal: {\n        small: [\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\n        ],\n        medium: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n        large: [\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n        ],\n    },\n    scaleless: {\n        small: [\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\n        ],\n        medium: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n        large: [\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\n        ],\n    },\n};\n\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\n    tcg: {\n        smaller: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 950.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949.5,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n    ocg: {\n        smaller: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        normal: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n        highPendulumNormal: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        highPendulumSmaller: {\n            trueBaseline: 949,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 258,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport const ART_FINISH_TYPE = 'art';\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    labelKey?: string,\n    tooltipKey?: string,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n    pendulumSubstituteMap: Record<string, string>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'card-border': type3CommonInstruction,\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n        pendulumSubstituteMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'card-border': type8CommonInstruction,\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n        pendulumSubstituteMap: {},\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n        pendulumSubstituteMap: {},\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n        pendulumSubstituteMap: {\n            small: '',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n        pendulumSubstituteMap: {\n            small: '-pendulum-small',\n            medium: '-pendulum-medium',\n            large: '-pendulum-medium',\n        },\n    },\n};\n\nexport const OtherFinishTypeMap = {\n    art: {\n        key: 'art' as const,\n        labelKey: 'input.art-finish.label',\n    },\n    attribute: {\n        key: 'attribute' as const,\n        labelKey: 'input.attribute.label',\n    },\n    icon: {\n        key: 'icon' as const,\n        labelKey: 'input.icon-type.icon.label',\n    },\n    sticker: {\n        key: 'sticker' as const,\n        labelKey: 'input.sticker.label',\n    },\n};\nexport type OtherFinish = [attribute: string, icon: string, sticker: string];\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    allRightSymbolOffset?: number,\n    bulletOffset?: number,\n    bulletWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    allRightSymbolOffset: 1,\n    bulletWidth: 23,\n    fontSize: 24.5,\n    lineHeight: 24.7,\n    lineCount: 6,\n    bulletOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    uniformBoxDescent?: number,\n};\nexport type FontDeviationMap = {\n    threshold: number,\n    letterMap: Record<string, FontDeviation>,\n}\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviationMap>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nexport const DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\n/**\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\n * */\nexport const NormalFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ],\n    },\n    'tcg-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\n        ],\n    },\n    'tcg-pendulumLarge-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\n        ]\n    },\n    'tcg-pendulumLarge-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n        ]\n    },\n    'ocg-pendulumLarge-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\n        ]\n    },\n    'ocg-pendulumLarge-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\n        ]\n    },\n    'ocg-pendulumLarge-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n};\n\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                '1': {\n                    threshold: 0.94,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 11 },\n                        ị: { uniformBoxDescent: 11 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 11 },\n                        e̩: { uniformBoxDescent: 11 },\n                        È̩: { uniformBoxDescent: 11 },\n                        É̩: { uniformBoxDescent: 11 },\n                        è̩: { uniformBoxDescent: 11 },\n                        Ẹ: { uniformBoxDescent: 11 },\n                        ẹ: { uniformBoxDescent: 11 },\n                        Ệ: { uniformBoxDescent: 11 },\n                        ệ: { uniformBoxDescent: 11 },\n                    },\n                },\n                '2': {\n                    threshold: 0,\n                    letterMap: {\n                        I: { uniformBoxDescent: 1 },\n                        i: { uniformBoxDescent: 1 },\n                        Ì: { uniformBoxDescent: 1 },\n                        Í: { uniformBoxDescent: 1 },\n                        Î: { uniformBoxDescent: 1 },\n                        Ï: { uniformBoxDescent: 1 },\n                        ì: { uniformBoxDescent: 1 },\n                        í: { uniformBoxDescent: 1 },\n                        î: { uniformBoxDescent: 1 },\n                        ï: { uniformBoxDescent: 1 },\n                        Ĩ: { uniformBoxDescent: 1 },\n                        ĩ: { uniformBoxDescent: 1 },\n                        Ī: { uniformBoxDescent: 1 },\n                        ī: { uniformBoxDescent: 1 },\n                        Ỉ: { uniformBoxDescent: 1 },\n                        ỉ: { uniformBoxDescent: 1 },\n                        Ị: { uniformBoxDescent: 20 },\n                        ị: { uniformBoxDescent: 20 },\n        \n                        E: { uniformBoxDescent: 1 },\n                        È: { uniformBoxDescent: 1 },\n                        É: { uniformBoxDescent: 1 },\n                        Ê: { uniformBoxDescent: 1 },\n                        Ê̄: { uniformBoxDescent: 1 },\n                        Ê̌: { uniformBoxDescent: 1 },\n                        Ë: { uniformBoxDescent: 1 },\n                        è: { uniformBoxDescent: 1 },\n                        é: { uniformBoxDescent: 1 },\n                        ê: { uniformBoxDescent: 1 },\n                        ê̄: { uniformBoxDescent: 1 },\n                        ê̌: { uniformBoxDescent: 1 },\n                        ë: { uniformBoxDescent: 1 },\n                        Ē: { uniformBoxDescent: 1 },\n                        ē: { uniformBoxDescent: 1 },\n                        Ẻ: { uniformBoxDescent: 1 },\n                        ẻ: { uniformBoxDescent: 1 },\n                        Ẽ: { uniformBoxDescent: 1 },\n                        ẽ: { uniformBoxDescent: 1 },\n                        Ế: { uniformBoxDescent: 1 },\n                        ế: { uniformBoxDescent: 1 },\n                        Ề: { uniformBoxDescent: 1 },\n                        ề: { uniformBoxDescent: 1 },\n                        Ể: { uniformBoxDescent: 1 },\n                        ể: { uniformBoxDescent: 1 },\n                        Ễ: { uniformBoxDescent: 1 },\n                        ễ: { uniformBoxDescent: 1 },\n                        E̩: { uniformBoxDescent: 20 },\n                        e̩: { uniformBoxDescent: 20 },\n                        È̩: { uniformBoxDescent: 20 },\n                        É̩: { uniformBoxDescent: 20 },\n                        è̩: { uniformBoxDescent: 20 },\n                        Ẹ: { uniformBoxDescent: 20 },\n                        ẹ: { uniformBoxDescent: 20 },\n                        Ệ: { uniformBoxDescent: 20 },\n                        ệ: { uniformBoxDescent: 20 },\n                    },\n                },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","import {\n    DefaultOCGEffectFontData,\n    DefaultTCGEffectFontData,\n    DefaultTCGNormalFontData,\n    FontData,\n} from './font-data-effect';\n\n/** OCG does not have different fonts between normal and effect monsters */\nexport const PendulumNormalFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGNormalFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\n        ],\n    },\n};\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    'tcg-small': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\n        ],\n    },\n    'tcg-medium': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    'tcg-large': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\n        ],\n    },\n    'ocg-small': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\n        ],\n    },\n    'ocg-medium': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\n        ],\n    },\n    'ocg-large': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\n        ],\n    },\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\nexport const passwordSentenceMap: Record<string, string> = {\n    ocg: '※デッキ構築には使用できません。',\n    tcg: 'This card cannot be in a Deck.',\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\n    normal: [\n        { top: 175, left: 55, width: 100, height: 100 },\n        { top: 165, left: 323, width: 170, height: 80 },\n        { top: 175, left: 655, width: 100, height: 100 },\n        { top: 442, left: 45, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 442, left: 700, width: 70, height: 170 },\n        { top: 775, left: 55, width: 100, height: 100 },\n        { top: 810, left: 323, width: 170, height: 80 },\n        { top: 775, left: 655, width: 100, height: 100 },\n    ],\n    pendulum: [\n        { top: 169, left: 11, width: 100, height: 100 },\n        { top: 159, left: 323, width: 170, height: 80 },\n        { top: 169, left: 699, width: 100, height: 100 },\n        { top: 572, left: 1, width: 70, height: 170 },\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n        { top: 572, left: 744, width: 70, height: 170 },\n        { top: 1054, left: 11, width: 100, height: 100 },\n        { top: 1093, left: 323, width: 170, height: 80 },\n        { top: 1054, left: 699, width: 100, height: 100 },\n    ],\n};\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_FULL_LINE_OPEN = '᚛';\nexport const NB_FULL_LINE_CLOSE = '᚜';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_FULL_LINE_CLOSE,\n    NB_FULL_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_LINE_OPEN,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil, OtherFinish } from './foil-finish';\nimport { CondenseType } from './condense';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\n/**\n * Check following things when adding new attributes:\n * * Default card and empty card\n * * Convert codec\n * * Shorten codec\n * * Card thumb\n * * Legacy version\n * * Import / export\n */\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    otherFinish: ['normal', 'normal', 'normal'] as OtherFinish,\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false as boolean | null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 2,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    otherFinish: ['normal', 'normal', 'normal'],\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: null,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        fontStyle: 'auto',\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        scale: 1,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        scale: 1,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        scale: 1,\n        settingValue: [813, 1185] as [number, number],\n    },\n    '1122x1636': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\n        width: 1122,\n        height: 1636,\n        scale: 2,\n        settingValue: [1122, 1636] as [number, number],\n    },\n    '1388x2026': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\n        width: 1388,\n        height: 2026,\n        scale: 2,\n        settingValue: [1388, 2026] as [number, number],\n    },\n    '1626x2370': {\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\n        width: 1626,\n        height: 2370,\n        scale: 2,\n        settingValue: [1626, 2370] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n    ResolutionMap['1122x1636'],\n    ResolutionMap['1388x2026'],\n    ResolutionMap['1626x2370'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './condense';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './font-data-pendulum-effect';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './pendulum';\nexport * from './regex';","export const createCanvas = (width: number, height: number) => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const context = canvas.getContext('2d');\n\n    return {\n        canvas,\n        context,\n    };\n};","import ndarray, { NdArray } from 'ndarray';\nimport ops from 'ndarray-ops';\nimport pool from 'typedarray-pool';\nimport phase2_1 from 'distance-transform/lib/p1';\nimport phase2_2 from 'distance-transform/lib/p2';\nimport phase2_inf from 'distance-transform/lib/pinf';\nimport phase2_p from 'distance-transform/lib/pp';\n\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\n    for (i = 0; i < rowCount; ++i) {\n        nextPoint = array[ptr++];\n        for (j = 1; j < colCount; ++j) {\n            nextPoint = min(array[ptr], nextPoint + 1);\n            array[ptr++] = nextPoint;\n        }\n        for (j = 0; j < colCount; ++j) {\n            nextPoint = min(array[--ptr], nextPoint + 1);\n            array[ptr] = nextPoint;\n        }\n        ptr += colCount;\n    }\n}\n\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\n    var dimensionCount = array.shape.length,\n        shape = array.shape.slice(0),\n        stride = new Array(dimensionCount),\n        size = 1,\n        stackSize = 0,\n        infinityHeight = 0,\n        index: number,\n        j: number,\n        n: number,\n        strideList: number[],\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\n        currentDimensionSize: number;\n    exponent = exponent || 2;\n    for (index = dimensionCount - 1; index >= 0; --index) {\n        stride[index] = size;\n        size *= shape[index];\n        infinityHeight += shape[index];\n        stackSize = Math.max(stackSize, shape[index]);\n    }\n\n    // Allocate scratch buffers\n    var phase2ResultAllocation = pool.mallocDouble(size),\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\n        s_q = pool.mallocUint32(stackSize),\n        t_q = pool.mallocUint32(stackSize);\n\n    /**\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\n     * */\n    var phase1ResultAllocation = pool.mallocDouble(size),\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\n        }\n    }\n    //Perform first phase of distance transform\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\n\n    //Second passes\n    for (index = dimensionCount - 1; index > 0; --index) {\n        strideList = phase2ResultArray.stride;\n        n = 1;\n        for (j = index - 1; j < dimensionCount; ++j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        for (j = index - 2; j >= 0; --j) {\n            strideList[j] = n;\n            n *= shape[j];\n        }\n        ops.assign(phase2ResultArray, phase1ResultArray);\n\n        //Execute phase 2\n        currentDimensionSize = shape[index - 1];\n        if (!isFinite(exponent)) {\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 1) {\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent === 2) {\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\n        } else if (exponent < 1) {\n            throw new Error('Values of exponent < 1 are not supported');\n        } else {\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\n        }\n\n        //Swap buffers\n        tmp = phase1ResultArray;\n        phase1ResultArray = phase2ResultArray;\n        phase2ResultArray = tmp;\n    }\n\n    //Copy phase1ResultArray to result\n    ops.assign(array, phase1ResultArray);\n\n    pool.freeDouble(phase1ResultAllocation);\n    pool.freeDouble(phase2ResultAllocation);\n    pool.freeUint32(s_q);\n    pool.freeUint32(t_q);\n    return array;\n}","import * as THREE from 'three';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\n\nconst HorizontalBlurShader = {\n    uniforms: {\n        'tDiffuse': { type: 't', value: null },\n        'h': { type: 'f', value: 3.0 / 512.0 }\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float h;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float lef4 = vUv.x - 4.0 * h;',\n        'float lef3 = vUv.x - 3.0 * h;',\n        'float lef2 = vUv.x - 2.0 * h;',\n        'float lef1 = vUv.x - 1.0 * h;',\n        'float rig1 = vUv.x + 1.0 * h;',\n        'float rig2 = vUv.x + 2.0 * h;',\n        'float rig3 = vUv.x + 3.0 * h;',\n        'float rig4 = vUv.x + 4.0 * h;',\n\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\n        'if (h > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n        //\"gl_FragColor = vec4(1,0,0,1);\",\n\n        '}'\n    ].join('\\n')\n};\nconst VerticalBlurShader = {\n    uniforms: {\n        tDiffuse: { type: 't', value: null },\n        v: { type: 'f', value: 3.0 / 512.0 },\n    },\n    vertexShader: [\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vUv = uv;',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n        '}',\n    ].join('\\n'),\n    fragmentShader: [\n        'uniform sampler2D tDiffuse;',\n        'uniform float v;',\n\n        'varying vec2 vUv;',\n\n        'void main() {',\n\n        'vec4 sum = vec4( 0.0 );',\n        'float top4 = vUv.y - 4.0 * v;',\n        'float top3 = vUv.y - 3.0 * v;',\n        'float top2 = vUv.y - 2.0 * v;',\n        'float top1 = vUv.y - 1.0 * v;',\n        'float bot1 = vUv.y + 1.0 * v;',\n        'float bot2 = vUv.y + 2.0 * v;',\n        'float bot3 = vUv.y + 3.0 * v;',\n        'float bot4 = vUv.y + 4.0 * v;',\n\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\n\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\n        'if (v > 0.0){',\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\n        '\tsum = srcValue + srcValue - sum;',\n        '}',\n        'gl_FragColor = sum;',\n\n        '}',\n    ].join('\\n'),\n};\nconst NormalMapShader = {\n    uniforms: {\n        'type': { type: '1i', value: 0 },\n        'invertR': { type: '1f', value: 1 },\n        'invertG': { type: '1f', value: 1 },\n        'invertH': { type: '1f', value: 1 },\n        'dz': { type: '1f', value: 0 },\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\n        'tHeightMap': { type: 't', value: null }\n    },\n    vertexShader: [\n        'precision mediump float;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform vec3 dimensions;',\n        'void main() {',\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\n        'vUv = uv;',\n        '}'\n    ].join('\\n'),\n    fragmentShader: [\n        'precision mediump float;',\n        'uniform vec3 dimensions;',\n        'varying vec2 vUv;',\n        'varying vec2 step;',\n        'uniform float dz;',\n        'uniform float invertR;',\n        'uniform float invertG;',\n        'uniform float invertH;',\n        'uniform int type;',\n        'uniform sampler2D tHeightMap;',\n\n        'void main(void) {',\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\n        '   float dx = 0.0, dy = 0.0;',\n        '   if(type == 0){',\t// Sobel\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\n        '   }',\n        '   else{',\t\t\t\t// Scharr\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\n        '   }',\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\n        '}'\n    ].join('\\n')\n};\n\nexport const SHADER_FILTER_TYPE = {\n    SOBEL: 'sobel' as const,\n    SCHARR: 'scharr' as const,\n};\nexport const getDefaultHeightToNormalMapOption = () => ({\n    invertedRed: false,\n    invertedGreen: false,\n    invertedSource: false,\n    blurSharp: 0,\n    strength: 1,\n    level: 8.5,\n    type: SHADER_FILTER_TYPE.SOBEL,\n});\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\n\nexport class HeightToNormalMap {\n    renderer: THREE.WebGLRenderer;\n    effectComposer: EffectComposer;\n    normalMapUniform: typeof NormalMapShader['uniforms'];\n    material: THREE.ShaderMaterial;\n    option: Required<HeightToNormalMapOption>;\n    canvas!: HTMLCanvasElement;\n    gaussianShaderX!: ShaderPass;\n    gaussianShaderY!: ShaderPass;\n\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\n        this.canvas = resultCanvas;\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\n        this.init();\n    }\n\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\n        const { width, height } = image;\n        const texture = this.getTexture(image);\n        this.normalMapUniform.tHeightMap.value = texture;\n        this.normalMapUniform.dimensions.value = [width, height, 0];\n        this.renderer.setSize(width, height);\n        this.effectComposer.setSize(width, height);\n        this.effectComposer.reset(this.getRenderTarget(width, height));\n\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\n            ...this.option,\n            ...option,\n        };\n\n        this.invertRed(invertedRed);\n        this.invertGreen(invertedGreen);\n        this.invertSource(invertedSource);\n        this.setBlurSharp(blurSharp, width, height);\n        this.setStrengthAndLevel(strength, level);\n        this.setType(type);\n\n        this.effectComposer.render(1 / 60);\n    }\n\n    init() {\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\n        const scene = new THREE.Scene();\n        const normalRenderScene = new RenderPass(scene, camera);\n\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\n        this.renderer.setClearColor(0x000000, 0); // the default\n\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\n\n        this.material = new THREE.ShaderMaterial({\n            fragmentShader: NormalMapShader.fragmentShader,\n            vertexShader: NormalMapShader.vertexShader,\n            uniforms: this.normalMapUniform,\n        });\n        this.material.transparent = true;\n\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\n        scene.add(renderMesh);\n\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\n        this.gaussianShaderX.renderToScreen = true;\n\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\n        this.effectComposer.addPass(normalRenderScene);\n        this.effectComposer.addPass(this.gaussianShaderY);\n        this.effectComposer.addPass(this.gaussianShaderX);\n    }\n    getRenderTarget(width?: number, height?: number) {\n        return new THREE.WebGLRenderTarget(width, height, {\n            minFilter: THREE.NearestFilter,\n            magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat,\n            stencilBuffer: false,\n        });\n    }\n    getTexture(image: TexImageSource) {\n        const texture = new THREE.Texture(image);\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\n        texture.anisotropy = 2;\n        texture.needsUpdate = true;\n        return texture;\n    }\n\n    invertRed(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertR.value = -1;\n        } else {\n            this.normalMapUniform.invertR.value = 1;\n        }\n    }\n\n    invertGreen(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertG.value = -1;\n        } else {\n            this.normalMapUniform.invertG.value = 1;\n        }\n    }\n\n    invertSource(status: boolean) {\n        if (status) {\n            this.normalMapUniform.invertH.value = -1;\n        } else {\n            this.normalMapUniform.invertH.value = 1;\n        }\n    }\n\n    setBlurSharp(value: number, width: number, height: number) {\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\n    }\n\n    setStrengthAndLevel(strength: number, level: number) {\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\n    }\n\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\n    }\n}","// import distanceTransform from 'distance-transform';\nimport ndarray from 'ndarray';\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\nimport { bilateralFilter } from './bilateral-filter';\nimport { distanceTransform } from './distance-transform';\n\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\n    const z = Math.sin(verticalAngleRadian);\n\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\n};\nexport const applyEmboss = ({\n    inputCanvas,\n    affectedHeight,\n    affectedWidth,\n    maxHeight = 8,\n    lightColorVec = [255, 255, 255],\n    /** Shine parallel with the surface, from rightside. */\n    lightAngleVec,\n    lightPitch,\n    lightYaw,\n    minIntensity = -1,\n    maxIntensity = 1,\n}: {\n    inputCanvas: HTMLCanvasElement,\n    affectedWidth?: number,\n    affectedHeight?: number,\n    maxHeight?: number,\n    lightColorVec?: [number, number, number],\n    lightAngleVec?: [number, number, number],\n    lightPitch?: number,\n    lightYaw?: number,\n    minIntensity?: number,\n    maxIntensity?: number,\n}) => {\n    const ctx = inputCanvas.getContext('2d');\n\n    if (!ctx) return;\n\n    /** Support partial transform to increase transform speed and reduce stuttering */\n    const height = affectedHeight ?? inputCanvas.height;\n    const width = affectedWidth ?? inputCanvas.width;\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\n    const data = imageData.data;\n\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\n        ? lightAngleVec\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\n            ? angleToVector(lightPitch, lightYaw)\n            : [1, 0, 0];\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\n    const normalizedLightAngleVec = [\n        computedLightAngleVec[0] / angleVecMagnitude,\n        computedLightAngleVec[1] / angleVecMagnitude,\n        computedLightAngleVec[2] / angleVecMagnitude\n    ];\n\n    if (!data) return;\n\n    try {\n        /**\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\n         */\n        /** Any pixel that is not transparent will be the foreground. */\n        const validPixelList = new Uint8ClampedArray(width * height);\n        for (let i = 0; i < data.length; i += 4) {\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\n                validPixelList[i / 4] = 0;\n            } else {\n                validPixelList[i / 4] = 1;\n            }\n        }\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\n\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\n            for (let colIndex = 0; colIndex < column; colIndex++) {\n                const currentIndex = (rowIndex * width + colIndex) * 4;\n                const heightValue = dtImageData.get(rowIndex, colIndex);\n\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\n            }\n        }\n\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\n        const heightmapCanvas = document.createElement('canvas');\n        heightmapCanvas.width = width;\n        heightmapCanvas.height = height;\n        heightmapCanvas.getContext('2d').putImageData(\n            new ImageData(nextDtBitmap, width, height),\n            0,\n            0,\n        );\n\n        /**\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\n         */\n        const normalMapCanvas = document.createElement('canvas');\n        normalMapCanvas.width = width;\n        normalMapCanvas.height = height;\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\n        heightToNormalMapConverter.apply(heightmapCanvas, {\n            blurSharp: 0,\n            level: 9,\n            strength: 2.5,\n            invertedRed: false,\n            invertedGreen: false,\n            invertedSource: true,\n            type: SHADER_FILTER_TYPE.SOBEL,\n        });\n\n        /**\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\n         */\n        const softenNormalMapCanvas = document.createElement('canvas');\n        softenNormalMapCanvas.width = width;\n        softenNormalMapCanvas.height = height;\n\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\n        softenNormalMapContext.drawImage(\n            normalMapCanvas,\n            0,\n            0,\n            width,\n            height,\n        );\n        const filteredData = bilateralFilter(\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\n            width,\n            height,\n            9,\n            70,\n            20,\n        );\n\n        /**\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\n         * \n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\n         */\n        const resultData = new Uint8ClampedArray(width * height * 4);\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\n            const baseIntensity = nx * normalizedLightAngleVec[0]\n                + ny * normalizedLightAngleVec[1]\n                + nz * normalizedLightAngleVec[2];\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\n\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\n        }\n\n        return new ImageData(resultData, width, height);\n    } catch (e) {\n        console.error('Could not apply emboss effect', e);\n        return null;\n    }\n};","export const bilateralFilter = (\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\n    width: number,\n    height: number,\n    diameter: number,\n    sigmaColor: number,\n    sigmaSpace: number,\n) => {\n    const output = new Uint8ClampedArray(width * height * 4);\n    const halfD = Math.floor(diameter / 2);\n\n    // Helper function to calculate the Gaussian weight for spatial distance\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\n    }\n\n    // Helper function to calculate the Gaussian weight for color distance\n    function colorWeight(c1: number, c2: number) {\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\n    }\n\n    // Loop through each pixel in the image\n    for (let y = 0; y < height; y++) {\n        for (let x = 0; x < width; x++) {\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\n\n            // Apply the filter to a local neighborhood around the current pixel\n            for (let ky = -halfD; ky <= halfD; ky++) {\n                for (let kx = -halfD; kx <= halfD; kx++) {\n                    const nx = x + kx;\n                    const ny = y + ky;\n\n                    // Check if the neighbor is within the image bounds\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\n                        const centerPixel = (y * width + x) * 4;\n                        const neighborPixel = (ny * width + nx) * 4;\n\n                        // Get the color values for the center pixel and the neighbor pixel\n                        const rCenter = imageData[centerPixel];\n                        const gCenter = imageData[centerPixel + 1];\n                        const bCenter = imageData[centerPixel + 2];\n                        const rNeighbor = imageData[neighborPixel];\n                        const gNeighbor = imageData[neighborPixel + 1];\n                        const bNeighbor = imageData[neighborPixel + 2];\n\n                        // Compute spatial and color weights\n                        const spatial = spatialWeight(nx, ny, x, y);\n                        const colorR = colorWeight(rCenter, rNeighbor);\n                        const colorG = colorWeight(gCenter, gNeighbor);\n                        const colorB = colorWeight(bCenter, bNeighbor);\n\n                        const weight = spatial * colorR * colorG * colorB;\n\n                        // Accumulate weighted sum of colors\n                        rSum += rNeighbor * weight;\n                        gSum += gNeighbor * weight;\n                        bSum += bNeighbor * weight;\n                        wSum += weight;\n                    }\n                }\n            }\n\n            // Normalize the result and assign it to the output image\n            const outputPixel = (y * width + x) * 4;\n            output[outputPixel] = rSum / wSum;\n            output[outputPixel + 1] = gSum / wSum;\n            output[outputPixel + 2] = bSum / wSum;\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\n        }\n    }\n\n    return output;\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\nexport const generateLayer = (\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\n    exportCtx: CanvasRenderingContext2D | null | undefined,\n    delayQueue: number = 0,\n) => {\n    return new Promise<boolean>(resolve => {\n        setTimeout(() => {\n            if (!canvasLayer.current || !exportCtx) resolve(false);\n            else {\n                try {\n                    canvasLayer.current.toBlob(blob => {\n                        if (!blob) resolve(false);\n                        else {\n                            const url = URL.createObjectURL(blob);\n                            if (!url) resolve(false);\n                            else {\n                                const layer = new Image();\n                                layer.src = url;\n                                layer.onload = () => {\n                                    exportCtx.drawImage(layer, 0, 0);\n                                    URL.revokeObjectURL(url);\n                                    resolve(true);\n                                };\n                                layer.onerror = () => {\n                                    URL.revokeObjectURL(url);\n                                    resolve(false);\n                                };\n                            }\n                        }\n                    });\n                } catch (e) {\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\n                    console.error(e);\n                    resolve(false);\n                }\n            }\n        }, delayQueue * 25);\n    });\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink === true;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { ART_FINISH_TYPE, Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\nimport { checkMonster } from './categorize';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    otherFinish: 'of',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        fontStyle: 'efs',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        fontStyle: 'pfs',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        embossPitch: 'nsep',\n        embossThickness: 'nset',\n        embossYaw: 'nsey',\n        fillStyle: 'nsfs',\n        font: 'nsft',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasEmboss: 'nshe',\n        hasGradient: 'nshg',\n        hasOutline: 'nshl',\n        hasShadow: 'nshs',\n        headTextFillStyle: 'nshfs',\n        lineColor: 'nslc',\n        lineOffsetX: 'nslox',\n        lineOffsetY: 'nsloy',\n        lineWidth: 'nslw',\n        pattern: 'nspt',\n        preset: 'nspr',\n        shadowBlur: 'nssb',\n        shadowColor: 'nssc',\n        shadowOffsetX: 'nssox',\n        shadowOffsetY: 'nssoy',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    pendulumSize: 'psi',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    /** Ensure that we detech the actual version from incoming cards. */\n    delete baseCard.version;\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    } else {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n            ...migratedCard.pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if (migratedCard.finish) {\n        const finishList = migratedCard.finish;\n\n        if (finishList.includes(ART_FINISH_TYPE)) {\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\n            migratedCard.otherFinish = [migratedCard.artFinish, migratedCard.artFinish, migratedCard.artFinish];\n        }\n    }\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\n        migratedCard.version = 2;\n\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\n        /**\n         * For older card, we have a detailed check to decide whether to display stats or not.\n         * \n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\n         */\n        const isMonster = checkMonster({ frame });\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n            ? !!(atk || def || (isLink && linkMap.length))\n            : isMonster;\n\n        if (!statInEffect) {\n            migratedCard.atk = '';\n            migratedCard.def = '';\n        }\n    }\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n    PendulumSize,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst boxSizeMap: Record<string, string> = {\n    large: 'Large',\n    medium: 'Normal',\n    small: 'Small',\n};\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue as PendulumSize;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: boxSizeMap[pendulumSize],\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};\n\nexport const getDynamicFont = ({\n    heightCap,\n    lineCount,\n}: {\n    heightCap: number,\n    lineCount: number,\n}): FontSizeData => {\n    return {\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\n        fontSize: heightCap / lineCount * 0.9,\n        lineHeight: heightCap / lineCount,\n        lineCount,\n        bulletOffset: 1,\n    };\n};\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\n    return {\n        ...fontData,\n        fontList: [\n            ...fontData.fontList,\n            getDynamicFont(dynamicFontOption),\n        ]\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\n\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\n    const {\n        trueBaseline,\n        trueEdge,\n        trueWidth,\n        trueHeightCap,\n    } = coordinateData;\n\n    return {\n        ...coordinateData,\n        trueBaseline: trueBaseline * scale,\n        trueEdge: trueEdge * scale,\n        trueWidth: trueWidth * scale,\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\n    };\n};\n\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\n    return coordinate.map(value => value * scale) as [number, number, number, number];\n};\n\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\n    fontSizeData: FontData,\n    scale: number,\n): FontData => {\n    const {\n        allRightSymbolOffset,\n        bulletOffset,\n        bulletWidth,\n        fontSize,\n        headTextSpacing,\n        iconSymbolWidth,\n        lineHeight,\n        offsetY,\n        ordinalFontOffsetY,\n        wordLetterSpacing,\n    } = fontSizeData;\n\n    return {\n        ...fontSizeData,\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\n        bulletWidth: bulletWidth * scale,\n        fontSize: fontSize * scale,\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\n        lineHeight: lineHeight * scale,\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\n    };\n};\n\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\n    return {\n        ...fontData,\n        fontList: fontData.fontList.map(entry => {\n            return scaleFontSizeData(entry, scale);\n        }),\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './canvas';\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';\nexport * from './scale';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n        nameStyle,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n    const nextNameStyle: typeof nameStyle = {\n        ...nameStyle,\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\n            ? 'OCG'\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\n                ? 'Default'\n                : nameStyle.font,\n    };\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n        nameStyle: nextNameStyle,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-6.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-6.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.name-style.emboss.color.alert': (\n            colorTab: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\n                { colorTab },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Emboss Pitch',\n    'Name Style - Emboss Yaw',\n    'Name Style - Emboss Thickness',\n    'Name Style - Has Emboss',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Effect Style - Font Style',\n    'Pendulum Size',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Pendulum Effect Style - Font Style',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'Other Finish - Attribute',\n    'Other Finish - Icon',\n    'Other Finish - Sticker',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            otherFinish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumSize,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink ?? undefined);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Effect Style - Font Style', effectStyle.fontStyle);\n        write('Pendulum Size', pendulumSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('Other Finish - Attribute', otherFinish[0]);\n        write('Other Finish - Icon', otherFinish[1]);\n        write('Other Finish - Sticker', otherFinish[2]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\n                const finishIcon = reader('Other Finish - Icon') ?? '';\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter(entry => typeof entry === 'string' && entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    otherFinish: [finishAttribute, finishIcon, finishSticker] as OtherFinish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\n                    pendulumTextStyle,\n                    pendulumSize,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    globalScale: number,\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n    mirrorPendulumScale: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        globalScale,\n        showCreativeOption,\n        showExtraDecorativeOption,\n        mirrorPendulumScale,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\n                ? globalScale\n                : 1,\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity, PendulumSize } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n        pendulumSize,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            pendulumSize,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth * maximumScale,\n    height = CanvasHeight * maximumScale,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\n        pendulumSize?: PendulumSize,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n                const pendulumSuffix = pendulumSize\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\n                    : DEFAULT_PENDULUM_SIZE;\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType, pendulumSuffix);\n                    }\n                } else {\n                    await caller(finishType, pendulumSuffix);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_LINE_COLOR = '#000000';\nconst DEFAULT_LINE_WIDTH = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x,\n    y,\n    blur,\n    color,\n    colorGradient,\n    shadowColor,\n    lineColor,\n    lineColorGradient,\n    lineWidth,\n    globalScale = 1,\n    useDefault = true,\n}: {\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    useDefault?: boolean,\n    colorGradient?: CanvasGradient,\n    lineColorGradient?: CanvasGradient,\n} & CanvasTextStyle) => {\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\n\n    return () => {\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n            ctx.drawImage(image, actualDX, actualDY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n\n                ctx.drawImage(image, actualDX, actualDY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number) = 0,\n    dy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    dx: number | ((image: HTMLImageElement) => number),\n    dy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n\n            if (\n                typeof actualSX === 'number'\n                && typeof actualSY === 'number'\n                && typeof actualSW === 'number'\n                && typeof actualSH === 'number'\n            ) {\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n            } else {\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n            }\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\n    \n                if (\n                    typeof actualSX === 'number'\n                    && typeof actualSY === 'number'\n                    && typeof actualSW === 'number'\n                    && typeof actualSH === 'number'\n                ) {\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\n                } else {\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\n                }\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    dx, dy,\n    dw, dh,\n    sx, sy,\n    sw, sh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        dx, dy,\n        dw, dh,\n        sx, sy,\n        sw, sh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    globalScale: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    FontDeviationMap,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n    globalScale: number,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n        ? 0.046875\n        : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2 * globalScale;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation,\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviationMap,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        letterMap = {},\n        threshold = 10,\n    } = deviation ?? {};\n    const {\n        uniformBoxDescent,\n    } = letterMap[letter] ?? {};\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    let uniformYScale = 1;\n    let boxDescentCompensate = 0;\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\n\n        /** Need to carefully survey if we over-compensate in edge case. */\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\n\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\n    }\n    ctx.scale(1, uniformYScale);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\n    });\n    ctx.scale(1, 1 / uniformYScale);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n    globalScale: number,\n) => {\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        fontSize,\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n                + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing: _letterSpacing,\n    format,\n    globalScale,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    globalScale: number,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n    globalScale: number,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    globalScale,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    globalScale: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\nimport { scaleFontSizeData } from 'src/util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n    option,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    globalScale: number,\n    option?: {\n        drawHeadText?: boolean,\n    },\n    debug?: boolean,\n}) => {\n    const { drawHeadText = true } = option ?? {};\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const {\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\n        bulletWidth,\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletWidth,\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n            globalScale,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(\n                    ctx,\n                    fragmentEdge,\n                    trueBaseline + bulletOffset - 1 * globalScale,\n                    bulletWidth,\n                    getBulletSpacing(format) * globalScale,\n                );\n                fragmentEdge += bulletWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg'\n                        ? allRightSymbolOffset\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    globalScale,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                if (drawHeadText) fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                    globalScale,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[`${globalScale}`],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                    globalScale,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap?.[`${globalScale}`],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex,\n    NB_FULL_LINE_OPEN,\n    NB_FULL_LINE_CLOSE\n} from 'src/model';\n\nexport type LineOption = {\n    alignment: 'left' | 'justify',\n};\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    const fullLineList = [];\n    const fullLineListOption: LineOption[] = [];\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\n    let lineReplacement: string | undefined;\n    let lineContent: string | undefined;\n    let fullLineReplacement: string | undefined;\n    let fullLineContent: string | undefined;\n    let willContinue = false;\n    do {\n        const result = wholeLineRegex.exec(effectText);\n        lineReplacement = result?.[1];\n        lineContent = result?.[2];\n        fullLineReplacement = result?.[3];\n        fullLineContent = result?.[4];\n\n        willContinue = false;\n        if (lineContent && lineReplacement) {\n            fullLineList.push(lineContent);\n            effectText = effectText.replace(lineReplacement, '');\n            fullLineListOption.push({ alignment: 'left' });\n            willContinue = true;\n        } else if (fullLineContent && fullLineReplacement) {\n            fullLineList.push(fullLineContent);\n            effectText = effectText.replace(fullLineReplacement, '');\n            fullLineListOption.push({ alignment: 'justify' });\n            willContinue = true;\n        }\n    } while (willContinue);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n    /** Restore all remaining nb line symbol back to their normal letters. */\n    effectText = effectText\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\n\n    return {\n        fullLineList,\n        fullLineListOption,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    NormalFontData,\n} from '../../model';\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    useItalic,\n    statInEffect,\n    typeInEffect,\n    frameType,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    useItalic: boolean,\n    frameType: 'normal' | 'pendulumLarge',\n}) => {\n    const coordinateKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n    const fontDataKey = [\n        format,\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\n        typeInEffect ? 'type' : '',\n        statInEffect ? 'stat' : ''\n    ].filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\n        fontData = NormalFontData[fontDataKey];\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    // useItalic = false,\n    fontDataKey = 'tcg',\n    fontData = EffectFontData[fontDataKey],\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    useItalic?: boolean,\n    fontData?: FontData,\n    fontDataKey?: string,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n        globalScale: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n        globalScale = 1,\n    } = option ?? {};\n    let sizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return sizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n        fullLineListOption,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    let effectiveLineCount = 0;\n    const scaledFontData = scaleFontData(fontData, globalScale);\n    const { fontList } = scaledFontData;\n    const yRatio = 1;\n    /**\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\n     * \n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\n     * */\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\n        const requireDynamicSize = sizeLevel === fontList.length\n            ? true\n            : false;\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\n            ? {\n                '1': 1000,\n                '2': 1000,\n                '3': 1000,\n            }\n            : (format === 'tcg'\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\n                    ? CondenseTolerantMap['relaxed']\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n                : {\n                    '1': 800,\n                    '2': 800,\n                    '3': 800,\n                });\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n            trueHeightCap,\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\n\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\n        const dynamicFontData = useDynamicSize\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n            : scaledFontData;\n        const dynamicSizeLevel = useDynamicSize\n            ? sizeLevel\n            : appliedSizeLevel;\n        const {\n            font: dynamicFont,\n            fontList: dynamicFontList,\n        } = dynamicFontData;\n        const fontSizeData = useDynamicSize\n            ? dynamicFontList[dynamicSizeLevel]\n            : fontList[appliedSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(dynamicFont)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData: dynamicFontData,\n            fontLevel: dynamicSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\n            : condense(\n                median => {\n                    const { currentLineList, currentLineCount } = createLineList({\n                        ctx,\n                        median,\n                        paragraphList,\n                        additionalLineCount,\n                        format, textData,\n                        width,\n                        globalScale,\n                    });\n                    lineListWithRatio = currentLineList;\n\n                    if (currentLineCount > lineCount) return false;\n                    return true;\n                },\n                200,\n            );\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (sizeLevel < fontList.length)\n        ) {\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\n        } else {\n            clearCanvas(ctx);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\n                return {\n                    line,\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                                globalScale,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\n                const dynamicFlavorFontData = useDynamicSize\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\n                    : flavorFontData;\n                const flavorFontSizeData = useDynamicSize\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\n                    : flavorFontData.fontList[appliedSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: dynamicFlavorFontData,\n                    fontLevel: dynamicSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                            globalScale,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                    globalScale,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return sizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\n\nconst {\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    globalScale,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n    loopStarFinish,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    globalScale: number,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    const {\n        canvas: starCanvas,\n        context: starContext,\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\n    await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(starContext, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n    if (loopStarFinish) {\n        const {\n            canvas: starFinishCanvas,\n            context: starFinishContext,\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\n        starFinishContext.drawImage(starCanvas, 0, 0);\n        await loopStarFinish(\n            starFinishContext,\n            'art',\n            async (finishType) => {\n                return await drawAsset(\n                    starFinishContext,\n                    `finish/finish-typeart-${finishType}.png`,\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\n                );\n            },\n        );\n        starContext.globalCompositeOperation = 'source-in';\n        starContext.drawImage(starFinishCanvas, 0, 0);\n        ctx.drawImage(starCanvas, 0, 0);\n    } else {\n        ctx.drawImage(starCanvas, 0, 0);\n    }\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n    globalScale,\n    x, y,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n    globalScale: number,\n    x: number,\n    y: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    ctx.scale(globalScale, globalScale);\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\n    ctx.resetTransform();\n    return;\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    globalScale,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...scaleDrawCoordinate(coordinate, globalScale),\n            globalScale,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    globalScale,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    globalScale: number,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...scaleDrawCoordinate(coordinate, globalScale),\n        globalScale,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n    globalScale: number,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\n        globalScale,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionMap,\n    ArtFinishMap,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n    OtherFinish,\n    PendulumSize,\n    PendulumSizeMap,\n    PendulumSizeMapException,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { createCanvas, getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\nimport { getFinishIterator } from '../canvas-util';\n\nexport const baseDrawLinkArrowMap = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    linkMap: string[],\n    positionType: keyof typeof ArrowPositionMap,\n    boundless: boolean,\n) => {\n    if (!ctx) return;\n    ctx.scale(globalScale, globalScale);\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n        .map(async entry => {\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n            const isActive = linkMap.includes(`${entry}`);\n            const baseLink = `link/link-inactive-${entry}`;\n            const activeLink = `link/link-active-${entry}`;\n            const coordinate = [left, top, width, height] as const;\n\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n            if (isActive) {\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n            } else return;\n        })\n    );\n    ctx.resetTransform();\n};\nexport const baseDrawLinkMapFoil = async (\n    ctx: CanvasRenderingContext2D,\n    globalScale: number,\n    foil: string,\n    withBorder: boolean,\n    positionType: keyof typeof ArrowPositionMap,\n) => {\n    if (!ctx) return;\n    if (foil === 'normal') return;\n\n    ctx.scale(globalScale, globalScale);\n    if (withBorder) {\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\n    } else {\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n            .map(async entry => {\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\n                const coordinate = [left, top, width, height] as const;\n\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\n            })\n        );\n    }\n    ctx.resetTransform();\n};\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    topToPendulumStructureFrame,\n    pendulumIconFrameHeight,\n    pendulumIconFrameWidth,\n    pendulumFrameHeight,\n    pendulumFrameWidth,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n    attributeSize,\n    attributeX,\n    attributeY,\n    finishTypeCardWidth,\n    stickerSize,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    globalScale,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    pendulumFrameTypeMap,\n    otherFinish,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    globalScale: number,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: PendulumSize,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\n    otherFinish: OtherFinish,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n        artRatio,\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n    const {\n        frameType,\n        effectBoxOffsetY,\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\n        pendulumBoxOffsetY,\n        artlessFrameY,\n    } = PendulumSizeMap[pendulumSize];\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderTypeList = frame === 'synchro'\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\n        : [frameBorderType];\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n                artFrameWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType, pendulumSize);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n                /** Background fill is not depend on art size */\n                fillWidth: artFrameWidth,\n                fillHeight: pendulumStructureHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            ctx.resetTransform();\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth * globalScale;\n                    clonedCanvas.height = cardHeight * globalScale;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        globalScale * leftToEffectBox,\n                        globalScale * topToEffectBox,\n                        globalScale * effectBoxWidth,\n                        globalScale * effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                        0, 0,\n                        globalScale * cardWidth, globalScale * cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n                ratio,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n                pendulumSize,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                globalScale * artX, globalScale * artY,\n                globalScale * artWidth, globalScale * artWidth / ratio,\n            );\n        },\n        drawAttribute: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const {\n                canvas: attributeCanvas,\n                context: attributeContext,\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\n            await drawAsset(\n                attributeContext,\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\n                attributeX, attributeY,\n            );\n            const attributeFinish = otherFinish[0] ?? 'normal';\n            if (attributeFinish !== 'normal') {\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\n                const {\n                    canvas: attributeFinishCanvas,\n                    context: attributeFinishContext,\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\n                attributeFinishContext.drawImage(attributeCanvas, 0, 0);\n                await loopAttributeFinish(\n                    attributeFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            attributeFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\n                        );\n                    },\n                );\n                attributeContext.globalCompositeOperation = 'source-in';\n                attributeContext.drawImage(attributeFinishCanvas, 0, 0);\n                ctx.drawImage(attributeCanvas, 0, 0);\n            } else {\n                ctx.drawImage(attributeCanvas, 0, 0);\n            }\n            ctx.resetTransform();\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            const starFinish = otherFinish[1] ?? 'normal';\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                globalScale,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n                loopStarFinish,\n            });\n            ctx.resetTransform();\n        },\n        drawPendulumScaleIcon: async () => {\n            if (!ctx) return;\n            /** We create a new canvas for easier manipulation. */\n            const pendulumIconCanvas = document.createElement('canvas');\n            pendulumIconCanvas.width = pendulumIconFrameWidth;\n            pendulumIconCanvas.height = pendulumIconFrameHeight;\n            const pendulumIconContext = pendulumIconCanvas.getContext('2d');\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\n\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n            if (pendulumFrameTypeMap.red === 'scaleless') {\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\n            ctx.resetTransform();\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\n            return baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless);\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                globalScale,\n                style,\n            );\n            ctx.resetTransform();\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.scale(globalScale, globalScale);\n            ctx.globalAlpha = opacityText / 100;\n\n            if (withPendulum) {\n                await drawAssetWithSize(\n                    ctx,\n                    `background/background-text-${bottomFrame}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                    0, 0 + effectBoxOffsetY,\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\n                );\n            } else {\n                await drawAsset(\n                    ctx,\n                    `background/background-text-${bottomFrame}.png`,\n                    backgroundEffectBoxX, backgroundEffectBoxY,\n                );\n            }\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                const {\n                    exceptionFrameType = frameType,\n                    exceptionPendulumBoxOffsetHeight = 0,\n                } = PendulumSizeMapException[pendulumSize][bottomFrame] ?? {};\n                await drawAssetWithSize(\n                    ctx,\n                    `background/background-${exceptionFrameType}-${bottomFrame}.png`,\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\n                    pendulumBoxWidth, pendulumBoxHeight,\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\n                );\n            }\n            ctx.globalAlpha = 1;\n            ctx.resetTransform();\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n            ctx.resetTransform();\n            return;\n        },\n        drawNameBorder: async () => {\n            if (nameBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\n                }\n                ctx.resetTransform();\n            } else {\n                Promise.resolve();\n            }\n            return;\n        },\n        drawArtBorder: async () => {\n            if (artBorder && ctx) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                ctx.scale(globalScale, globalScale);\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            if (!ctx) return;\n            /** We create a new canvas for easier manipulation. */\n            const pendulumBorderCanvas = document.createElement('canvas');\n            pendulumBorderCanvas.width = cardWidth;\n            pendulumBorderCanvas.height = cardHeight;\n            const pendulumBorderContext = pendulumBorderCanvas.getContext('2d');\n            await drawAssetWithSize(\n                pendulumBorderContext,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                0, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            await drawAssetWithSize(\n                pendulumBorderContext,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                    + `-${foilType}`\n                    + '-artless'\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\n                    + '.png',\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n                pendulumFrameWidth / 2, 0,\n                pendulumFrameWidth / 2, pendulumFrameHeight,\n            );\n            if (artBorder) {\n                /**\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\n                 */\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\n                await drawAsset(\n                    pendulumBorderContext,\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\n                        + `-${foilType}`\n                        + '.png',\n                    30, topToPendulumStructureFrame,\n                );\n            }\n\n            ctx.scale(globalScale, globalScale);\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\n            ctx.resetTransform();\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n            ctx.resetTransform();\n        },\n        drawCardBorder: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n            ctx.resetTransform();\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n            ctx.resetTransform();\n        },\n        drawEffectBorderFoil: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n            ctx.resetTransform();\n        },\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if ((artBorder || nameBorder) && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'name',\n                    async type => {\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                    },\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n                ctx.resetTransform();\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopArtFinish(\n                    ctx,\n                    'art',\n                    async (finishType, pendulumSuffix) => {\n                        return await drawAssetWithSize(\n                            ctx,\n                            `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\n                            artFinishX, artFinishY,\n                            artWidth, artWidth / artRatio,\n                        );\n                    },\n                    pendulumSize,\n                );\n                ctx.resetTransform();\n            }\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder && ctx) {\n                ctx.scale(globalScale, globalScale);\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n                ctx.resetTransform();\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(\n                    ctx,\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\n                    0, 0,\n                ),\n            );\n            ctx.resetTransform();\n        },\n        drawBorderPendulumFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => {\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                        0, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                    await drawAssetWithSize(\n                        ctx,\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\n                        0 + cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                        cardWidth / 2, 0,\n                        cardWidth / 2, cardHeight,\n                    );\n                }\n            );\n            ctx.resetTransform();\n        },\n        drawFrameFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        drawFrameBackgroundFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\n                },\n            );\n            ctx.resetTransform();\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n            ctx.resetTransform();\n        },\n        drawCardBorderFinish: async () => {\n            if (!ctx) return;\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n            ctx.resetTransform();\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { setTextStyle } from '../canvas-util';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _trueBaseline: number,\n    _width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n        globalScale: number,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\n    const edge = _edge * globalScale;\n    const trueBaseline = _trueBaseline * globalScale;\n    const width = _width * globalScale;\n    const cloneCtx = cloneNode?.getContext('2d');\n\n    if (!(ctx && cloneCtx && value)) return;\n    const {\n        embossPitch,\n        embossYaw,\n        embossThickness,\n        fillStyle,\n        font,\n        gradientAngle,\n        gradientColor,\n        hasEmboss,\n        hasGradient,\n        hasOutline,\n        hasShadow,\n        headTextFillStyle,\n        lineColor,\n        lineOffsetX,\n        lineOffsetY,\n        lineWidth,\n        shadowBlur,\n        shadowColor,\n        shadowOffsetX,\n        shadowOffsetY,\n        pattern,\n    } = { ...getDefaultNameStyle(), ...style };\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n\n    ctx.textAlign = 'left';\n    const fontData = scaleFontData({\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n        headTextFillStyle,\n    }, globalScale);\n    const fontGetter = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: fontGetter,\n    };\n    const quoteConvertedValue = normalizeCardText(\n        value,\n        format,\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n    );\n\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n    const crudeTokenList = format === 'ocg'\n        ? [quoteConvertedValue]\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n    const fontGetterForWidthCalculating = createFontGetter({\n        defaultFamily: fontData.font,\n        defaultSize: fontData.fontList[0].fontSize,\n        defaultWeight: fontData.weight,\n    });\n    const normalStyle = fontGetterForWidthCalculating.getFont();\n    const symbolStyle = fontGetterForWidthCalculating\n        .setSize(cur => cur * fontData.symbolFontRatio)\n        .setStyle('small-caps')\n        .setFamily(fontData.symbolFont)\n        .getFont();\n    let maxAscent = 0;\n    let maxDescent = 0;\n    crudeTokenList.forEach((cur, index) => {\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n    }, 0);\n\n    ctx.font = normalStyle;\n    /** Calculate fitting ratio like normal */\n    let actualLineWidth = 0;\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [quoteConvertedValue],\n                format, textData,\n                width,\n                globalScale,\n            });\n\n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n\n    ctx.scale(xRatio, yRatio);\n    /** Calculate gradient and offset based on card's frame. */\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\n    const tokenList = tokenizeText(quoteConvertedValue);\n    const gradient = actualLineWidth > 0 && hasGradient\n        ? getNameGradient(\n            ctx,\n            gradientAngle,\n            parsePalette(gradientColor),\n            edge,\n            actualLineWidth,\n            trueBaseline,\n            maxAscent, maxDescent,\n        )\n        : undefined;\n\n    /**\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\n     * \n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\n     */\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\n    let resetEmbossStroke = () => {};\n    if (thickenEmboss) {\n        resetEmbossStroke = setTextStyle({\n            ctx,\n            lineWidth: embossThickness,\n            lineColor: fillStyle,\n            lineColorGradient: gradient,\n            globalScale,\n            useDefault: false,\n        });\n    }\n    ctx.fillStyle = gradient ?? fillStyle;\n    const { tokenEdge } = drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        option: { drawHeadText: false },\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n        },\n    });\n    resetEmbossStroke();\n\n    /** \n     * Second iteration: Draw pattern, we follow these steps.\n     *  * We create a second, temporary canvas node.\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\n     */\n    if (patternImage) {\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const patternContext = patternCanvas.getContext('2d');\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n        patternContext.scale(globalScale, globalScale);\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\n        patternContext.globalCompositeOperation = patternBlendMode;\n        patternContext.resetTransform();\n        await drawAssetWithSize(\n            patternContext, `finish-name/${patternImage}.png`,\n            edge, trueBaseline - maxAscent,\n            width,\n            maxAscent + maxDescent,\n        );\n        ctx.globalCompositeOperation = 'source-in';\n        ctx.drawImage(patternCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.scale(xRatio, yRatio);\n    }\n\n    /** Third iteration: Apply emboss effect */\n    if (hasEmboss) {\n        const affectedWidthExtraPadding = 10;\n        const embossedImageData = applyEmboss({\n            inputCanvas: canvas,\n            lightPitch: embossPitch,\n            lightYaw: embossYaw,\n            minIntensity: -0.9,\n            maxIntensity: 0.9,\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\n        });\n        ctx.putImageData(embossedImageData, 0, 0);\n    }\n\n    /**\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\n     * \n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\n     * */\n    if (hasOutline) {\n        const resetStroke = setTextStyle({\n            ctx,\n            lineWidth: lineWidth + embossThickness,\n            lineColor,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.globalCompositeOperation = 'destination-over';\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            globalScale,\n            option: { drawHeadText: false },\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.lineJoin = 'round';\n                ctx.strokeText(\n                    letter,\n                    scaledEdge + lineOffsetX,\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                );\n            },\n        });\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n        resetStroke();\n    }\n\n    /**\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\n     */\n    if (hasShadow) {\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\n        const shadowContext = shadowCanvas.getContext('2d');\n        const resetShadow = setTextStyle({\n            ctx: shadowContext,\n            x: shadowOffsetX,\n            y: shadowOffsetY,\n            shadowColor: shadowColor,\n            blur: shadowBlur,\n            globalScale,\n            useDefault: false,\n        });\n        ctx.scale(1 / xRatio, 1 / yRatio);\n        shadowContext.drawImage(canvas, 0, 0);\n        ctx.globalCompositeOperation = 'destination-over';\n        ctx.drawImage(shadowCanvas, 0, 0);\n        ctx.globalCompositeOperation = 'source-over';\n        resetShadow();\n    }\n\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\n    drawLine({\n        ctx,\n        tokenList,\n        xRatio, yRatio,\n        trueEdge: edge, trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: () => {},\n    });\n\n    const defaultTextStyle = getDefaultNameStyle();\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.fillStyle = defaultTextStyle.fillStyle;\n    ctx.lineJoin = 'miter';\n    ctx.globalCompositeOperation = 'source-over';\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\n    smaller: 0,\n    normal: 1,\n    large: 2,\n    highPendulumNormal: 1,\n    highPendulumSmaller: 0,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n    globalScale,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: TypeAbilityCoordinateType,\n    furiganaHelper: boolean,\n    globalScale: number,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = scaleCoordinateData(\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\n        globalScale,\n    );\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\n    const fontData = {\n        ...scaledBaseFontData,\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\n    };\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n                globalScale,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nconst {\n    finishTypeCardWidth,\n    width: CanvasWidth,\n    iconHeight,\n    iconWidth,\n} = CanvasConst;\nexport const drawTypeAbility = async ({\n    ctx,\n    globalScale,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n    loopIconFinish,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: TypeAbilityCoordinateType,\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n        globalScale,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -5 : -1;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        const {\n            canvas: iconCanvas,\n            context: iconContext,\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\n        await drawAssetWithSize(\n            iconContext,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\n            () => globalScale * iconWidth,\n            () => globalScale * iconHeight,\n        );\n        if (loopIconFinish) {\n            const {\n                canvas: iconFinishCanvas,\n                context: iconFinishContext,\n            } = createCanvas(CanvasWidth, (baseline + iconWidth));\n            iconFinishContext.drawImage(iconCanvas, 0, 0);\n            await loopIconFinish(\n                iconFinishContext,\n                'art',\n                async (finishType) => {\n                    return await drawAsset(\n                        iconFinishContext,\n                        `finish/finish-typeart-${finishType}.png`,\n                        (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\n                    );\n                },\n            );\n            iconContext.globalCompositeOperation = 'source-in';\n            iconContext.drawImage(iconFinishCanvas, 0, 0);\n            ctx.drawImage(iconCanvas, 0, 0);\n        } else {\n            ctx.drawImage(iconCanvas, 0, 0);\n        }\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    _fontSize: number,\n    globalScale: number,\n) => {\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    if (ctx && value) {\n        const fontSize = _fontSize * globalScale;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const exceptionDigitWidthRatio = 0.8;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(\n                digit,\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\n                baseline + fontSize,\n            );\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    _edge = 99,\n    _baseline = 1150.93,\n    _baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n        globalScale: number,\n    } = {\n        globalScale: 1,\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle, globalScale } = option ?? {};\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const baselineOffset = _baselineOffset * globalScale;\n    const resetStyle = setTextStyle({\n        ctx,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4 * globalScale;\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2 * globalScale;\n\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    ctx.scale(1, 0.98);\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    _edge: number,\n    _baseline: number,\n    globalScale: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const edge = _edge * globalScale;\n    const baseline = _baseline * globalScale;\n    const statWidth = 73.97 * globalScale;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${37 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = `bold ${34 * globalScale}px matrix`;\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = `${37 * globalScale}px matrix`;\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        globalScale: number,\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n    baseDrawLinkArrowMap,\n    baseDrawLinkMapFoil,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinateMap,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n    PendulumNormalFontData,\n    PendulumSizeMap,\n    PendulumSize,\n    HALF_SCALE_WIDTH_OFFSET,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    createCanvas,\n    generateLayer,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n    finishTypeCardWidth,\n    finishTypeCardHeight,\n    stickerX,\n    stickerY,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n    globalScale: number,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, otherFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\n    const typeInEffect = normalizedTypeAbility.length > 0\n        ? cardIcon === 'auto'\n            ? (isMonster || isSpeedSkill)\n            : cardIcon !== 'st'\n        : false;\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\n    const {\n        isInitializing,\n        imageChangeCount,\n        language,\n        globalScale,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n    const [, iconFinish, stickerFinish] = otherFinish;\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground\n                            ? (customFill ?? baseFill)\n                            : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                globalScale,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                pendulumFrameTypeMap: {\n                    red: withRedScale ? 'normal' : 'scaleless',\n                    blue: withBlueScale ? 'normal' : 'scaleless',\n                },\n                otherFinish,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                        fillWidth, fillHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * fillWidth, globalScale * fillHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        globalScale * destinationX, globalScale * destinationY,\n                        globalScale * destinationWidth, globalScale * destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            globalScale * destinationX, globalScale * destinationY,\n                            globalScale * destinationWidth, globalScale * destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame */\n            if (isLink && !isPendulum) {\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) {\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\n                }\n                resetStyle();\n            }\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                globalScale,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        withBlueScale,\n        withRedScale,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        finish,\n        otherFinish,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW PENDULUM SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\n        }\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                nameCanvasRef.current,\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\n            );\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\n        }\n        resetStyle();\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                globalScale,\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        globalScale,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const isNumberPassword = /^[0-9]*$/.test(password);\n        const mayOffset = isNumberPassword && isPendulum && isLink;\n        const willOffset = mayOffset;\n        const {\n            rightEdge,\n        } = drawPasswordText({\n            ctx,\n            globalScale,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n            fontLevel: !isNumberPassword ? 1 : 0\n        });\n        if (isFirstEdition) {\n            const willDraw = isPendulum\n                ? isNumberPassword ? true : false\n                : true;\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            if (willDraw) draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    globalScale,\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n                globalScale,\n            });\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    globalScale,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            const ctx = stickerCanvasRef.current?.getContext('2d');\n            if (!clearCanvas(ctx)) return;\n            const {\n                canvas: stickerCanvas,\n                context: stickerContext,\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\n            await drawSticker({\n                ctx: stickerContext,\n                sticker,\n                globalScale,\n                x: stickerX,\n                y: stickerY,\n            });\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\n            if (normalizedStickerFinish !== 'normal') {\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\n                const {\n                    canvas: stickerFinishCanvas,\n                    context: stickerFinishContext,\n                } = createCanvas(CanvasWidth, CanvasHeight);\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\n                await loopStickerFinish(\n                    stickerFinishContext,\n                    'art',\n                    async (finishType) => {\n                        return await drawAsset(\n                            stickerFinishContext,\n                            `finish/finish-typeart-${finishType}.png`,\n                            CanvasWidth - finishTypeCardWidth, CanvasHeight - finishTypeCardHeight,\n                        );\n                    },\n                );\n                stickerContext.globalCompositeOperation = 'source-in';\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\n                ctx.drawImage(stickerCanvas, 0, 0);\n            } else {\n                ctx.drawImage(stickerCanvas, 0, 0);\n            }\n        };\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\n            const customizeEffectStyle = effectTextStyle[0];\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\n            const useItalic = customizeEffectStyle\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\n                : isNormal;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                useItalic,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    useItalic,\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                },\n            });\n            const normalizedIconFinish = iconFinish ?? 'normal';\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\n            await drawTypeAbility({\n                ctx: typeCtx,\n                globalScale,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : (isPendulum && pendulumSize === 'large')\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n                loopIconFinish,\n            });\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        isPendulum,\n        pendulumSize,\n        furiganaHelper,\n        iconFinish,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize, fontStyle } = pendulumStyle ?? {};\n            const customPendulumStyle = pendulumTextStyle[0];\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\n            const fontDataKey = `${format}-${pendulumSize}`;\n            const coordinateList = PendulumEffectCoordinateMap\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\n                [pendulumSize];\n            /** Account for half scaleless frame */\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\n                ? coordinateList\n                : coordinateList.map(({\n                    trueEdge, trueWidth, ...rest\n                }) => ({\n                    ...rest,\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                    trueWidth: trueWidth\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\n                }));\n\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                useItalic: useItalic,\n                fontData: (useItalic\n                    ? PendulumNormalFontData\n                    : PendulumEffectFontData)[fontDataKey],\n                fontDataKey,\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: modifiedCoordinateList,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                    globalScale,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        globalScale,\n        condenseTolerant,\n        format,\n        isPendulum,\n        withRedScale,\n        withBlueScale,\n        pendulumSize,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            if (isLink && isPendulum) {\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless);\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\n                if (statInEffect) {\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\n                }\n                resetStyle();\n            }\n\n            ctx.scale(globalScale, globalScale);\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n            ctx.resetTransform();\n        };\n    }, [\n        readyToDraw,\n        globalScale,\n        finishCanvasRef,\n        loopFinish,\n        name,\n        isLink,\n        isPendulum,\n        linkMap,\n        boundless,\n        foil,\n        resolvedStatTextStyle,\n        statInEffect,\n        frameCanvasRef,\n    ]);\n\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        pendulumSize: PendulumSize,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            pendulumSize,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n\n        if (exportCanvas && exportCtx) {\n            clearCanvas(exportCtx);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxRef.current?.draw(exportCanvas);\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\n                exportCanvas,\n                0,\n                0,\n                exportCanvas.width,\n                exportCanvas.height,\n                0,\n                0,\n                CanvasWidth,\n                CanvasHeight,\n            );\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n        previewCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n    lineWidth?: number,\n    lineColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    globalScale,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    edgeOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    fontLevel,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    globalScale: number,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    edgeOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    fontLevel: number,\n}) => {\n    if (!clearCanvas(ctx)) return {\n        rightEdge: 0,\n    };\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                    globalScale,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left'\n            ? trueEdge + edgeOffset\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        rightEdge: result.tokenEdge,\n    };\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n    globalScale,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n    globalScale: number,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        globalScale,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\n        globalScale,\n    );\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    globalScale,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\n        textData,\n        format,\n        globalScale,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { useCallback } from 'react';\nimport { create } from 'zustand';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst notificationLocalStorageKey = 'ygocarder-notification';\nexport type NotificationMemory = {\n    condenseReminder: boolean,\n    versionReminder: string,\n    faqReminder: boolean,\n};\nexport type NotificationStore = {\n    memory: NotificationMemory,\n    updateNotification: <Key extends keyof NotificationMemory>(\n        key: Key,\n        value: NotificationMemory[Key],\n    ) => void,\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\n};\nexport const useNotificationMemory = create<NotificationStore>((set) => {\n    const {\n        condenseReminder,\n        versionReminder,\n        faqReminder,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useNotificationMemory: Error when getting cached notification', e);\n            return {};\n        }\n    })();\n\n    return {\n        memory: {\n            faqReminder: typeof faqReminder === 'boolean' ? faqReminder : true,\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\n        },\n        updateNotification: (key, value) => {\n            set(currentStore => {\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        },\n        updateNotificationMemory: transformerOrPayload => {\n            set(currentStore => {\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.memory)\n                    : { ...currentStore.memory, ...transformerOrPayload };\n\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\n\n                return {\n                    memory: newNotificationMemory,\n                };\n            });\n        }\n    };\n});\n\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\n    const {\n        targetMemory,\n        updateNotification,\n    } = useNotificationMemory(useShallow(({\n        memory,\n        updateNotification,\n    }) => ({\n        targetMemory: memory[key],\n        updateNotification,\n    })));\n\n    const updateTargetNotification = useCallback(\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\n        [key, updateNotification],\n    );\n\n    return [targetMemory, updateTargetNotification] as const;\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\nimport styled from 'styled-components';\n\n/** The container must contain this class to spread inner styling to angle picker component */\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\nconst AnglePickerContainer = styled.div`\n    .ap {\n        background-color: var(--color-heavy);\n        .apc {\n            width: 8px;\n        }\n        .aph {\n            width: 8px;\n            height: 8px;\n        }\n    }\n    .ai {\n        margin: 0;\n        margin-top: var(--spacing-sm);\n        background: var(--main-slider);\n        justify-content: space-between;\n        line-height: 1.4;\n        span {\n            background: var(--main-secondary);\n            padding-left: var(--spacing);\n            padding-right: var(--spacing);\n            &:hover {\n                background: var(--sub-secondary);\n            }\n        }\n        span,\n        input {\n            color: var(--color-heavy);\n        }\n    }\n`;\n\nexport type CircularAnglePicker = AnglePicker & {\n    children?: React.ReactChild,\n};\nexport const CircularAnglePicker = ({\n    children,\n    ...rest\n}: CircularAnglePicker) => {\n    return <AnglePickerContainer className=\"angle-picker-container\">\n        {children}\n        <AnglePicker {...rest} />\n    </AnglePickerContainer>;\n};","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon?: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                {Icon && <Icon {...iconProps} />}{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};\n\nexport const CardActionButton = styled.button`\n    --overlay-size: 36px;\n    background: var(--main-primary);\n    border-width: 0;\n    border-style: solid;\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing-sm);\n    line-height: 1;\n    font-size: var(--fs-xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-1);\n    /* display: none; */\n    &:not(:disabled) {\n        cursor: pointer;\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n    &:disabled {\n        cursor: not-allowed;\n        filter: opacity(0.5);\n    }\n`;\n\nexport const CombinedSliderContainer = styled.div`\n    display: grid;\n    grid-template-columns: max-content 60px 45px 12px;\n    &.inactive {\n        .slider-label,\n        .ant-slider,\n        .slider-padding {\n            background-color: var(--main-level-3);\n        }\n    }\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n`;\n\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    display: inline-block;\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\nimport { StyledPopMarkdown } from '../atom';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n    .resolution-list {\n        &.radio-train {\n            .ant-radio-button-wrapper:first-child {\n                border-radius: var(--br) var(--br) 0 0;\n            }\n            .ant-radio-button-wrapper:last-child {\n                border-radius: 0 0 var(--br) var(--br);\n            }\n        }\n        .radio-train-input-group {\n            display: inline-grid;\n            flex: 0 1 auto;\n            .ant-radio-button-wrapper {\n                border-left-width: 1.02px;\n                &:before {\n                    content: none;\n                }\n            }\n        }\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        className=\"resolution-list\"\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\n                            value: `${width}x${height}`,\n                            label: scale > 1\n                                ? <Popover\n                                    overlayClassName=\"explanation-overlay\"\n                                    placement=\"left\"\n                                    content={<StyledPopMarkdown>\n                                        {language['setting.option.resolution.warning']}\n                                    </StyledPopMarkdown>}\n                                >\n                                    {label}\n                                </Popover>\n                                : label,\n                        }))}\n                        onChange={value => {\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\n\n                            if (resolutionValue) {\n                                updateSetting({\n                                    resolution: resolutionValue.settingValue,\n                                    globalScale: resolutionValue.scale,\n                                });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import styled, { css, keyframes } from 'styled-components';\n\nconst titlShaking = keyframes`\n    0% { transform: rotate(0deg); }\n    3% { transform: rotate(5deg); }\n    6% { transform: rotate(0eg); }\n    9% { transform: rotate(-5deg); }\n    12% { transform: rotate(0deg); }\n    100% { transform: rotate(0deg); }\n`;\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\n    text-align: center;\n    border: var(--bw) solid var(--main-level-3);\n    background-color: var(--main-level-1);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    cursor: pointer;\n    box-shadow: 0 0 2px 1px #222222 inset;\n    transition: background-color 250ms linear;\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\n    ${({ $animating }) => $animating\n        ? `\n            border: var(--bw) solid var(--sub-level-1);\n            background: var(--main-warning);\n            color: var(--color-contrast);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background-color: var(--main-level-3);\n    }\n`;\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\n    box-shadow: none;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    padding: 0 var(--spacing-xs);\n    &.js-highlight {\n        background: var(--main-info);\n        text-shadow: none;\n        box-shadow: 0 0 2px 0 #333333;\n    }\n    ${({ $animating }) => $animating\n        ? `\n            background: var(--main-info);\n            text-shadow: none;\n            box-shadow: 0 0 2px 0 #333333;\n        `\n        : ''}\n    &:hover {\n        background: var(--sub-info);\n    }\n`;\n\nexport const QuoteContainer = styled.div`\n    label {\n        font-weight: bold;\n        font-style: italic;\n        &:after {\n            content: \":\";\n        }\n    }\n    .question {\n        margin-left: var(--spacing);\n    }\n    .answer {\n        margin: var(--spacing) 0;\n    }\n    &:last-child {\n        .answer {\n            margin-bottom: 0;\n        }\n    }\n`;","import { Popover } from 'antd';\nimport { memo, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { StyledPopMarkdown } from '../atom';\nimport { useNotification } from 'src/service';\nimport { VersionLogButtonLabel } from './styled';\n\nconst LogSentence = styled.li`\n    img {\n        display: block;\n        max-width: 400px;\n        max-height: 200px;\n        margin: auto;\n        box-shadow: var(--bs-1);\n        margin-top: var(--spacing-xs);\n    }\n`;\n\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`} className=\"log-section\">\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content, image }, index) => {\n                        return <LogSentence key={index}>\n                            {content}\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\n                        </LogSentence>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};\n\nconst compareSemver = (a: string, b: string): boolean => {\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\n    \n    if (majorA !== majorB) {\n      return majorA > majorB;\n    }\n    \n    if (minorA !== minorB) {\n      return minorA > minorB;\n    }\n    \n    return patchA > patchB;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    width: 550px;\n    max-height: 300px;\n    width: 550px;\n    .log-section + .log-section {\n        margin-top: var(--spacing);\n    }\n`;\nexport const VersionLogButton = memo(() => {\n    const [animating, setAnimating] = useState(false);\n    const [\n        version,\n        setMemoizedVersion,\n    ] = useNotification('versionReminder');\n\n    useEffect(() => {\n        if (version) {\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\n            const memoizedSemver = version;\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\n\n            if (compareSemver(currentSemver, memoizedSemver)) {\n                setAnimating(true);\n                setTimeout(() => {\n                    setAnimating(false);\n                }, 8000);\n            }\n        }\n    }, [setMemoizedVersion, version]);\n\n    return <Popover\n        placement=\"bottom\"\n        content={<StyledVersionLog>\n            <VersionLog />\n        </StyledVersionLog>}\n    >\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\n        </VersionLogButtonLabel>\n    </Popover>;\n});","import { Modal, Tabs } from 'antd';\nimport { FaqButtonLabel, QuoteContainer } from './styled';\nimport { useNotification } from 'src/service';\nimport React, { useEffect, useState } from 'react';\n\ntype Quote = {\n    author?: string,\n    question: string,\n    children: React.ReactNode,\n}\nconst Quote = ({\n    author,\n    question,\n    children,\n}: Quote) => {\n    return <QuoteContainer>\n        <blockquote>\n            {author && <label>{author}</label>}\n            <div className=\"question\">{question}</div>\n        </blockquote>\n        <div className=\"answer\">{children}</div>\n    </QuoteContainer>;\n};\n\nexport const QuestionAndFeedback = () => {\n    const [visible, setVisible] = useState(false);\n    const [animating, setAnimating] = useState(false);\n    const [\n        faqReminder,\n        setMemoizedReminder,\n    ] = useNotification('faqReminder');\n\n    useEffect(() => {\n        if (faqReminder) {\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(false);\n\n            setAnimating(true);\n            setTimeout(() => {\n                setAnimating(false);\n            }, 8000);\n        }\n    }, [setMemoizedReminder, faqReminder]);\n\n    return <>\n        <FaqButtonLabel id=\"faq-button\" $animating={animating} onClick={() => setVisible(cur => !cur)}>\n            {'FAQ'}\n        </FaqButtonLabel>\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\n            <Tabs>\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\n                    {[\n                        {\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\n                        },\n                    ].map(({ question, answer }, index) => {\n                        return <Quote key={index} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\n                    <div><i>Solved feedbacks are removed.</i></div>\n                    <br />\n                    {[\n                        {\n                            author: 'Anonymous User at May 02, 2025',\n                            question: 'can you include the icons, attributes and stars if choosing art finishes? and maybe make a choice if we will put art finish or not if choosing art finishes? Thank you!',\n                        },\n                        {\n                            author: 'Anonymous User at May 01, 2025',\n                            question: 'Can you add a selection of holographic overlay to the stars, attribute, icons and sticker? that would be a great help for making some super rare cards! Looking forward to this update',\n                        },\n                        {\n                            author: 'Anonymous User at Apr 28, 2025',\n                            question: 'Hello, can you add art finishes on attributes, stars, icons and sticker like a holographic overlay to it? It would be a great help! THANKS!!! :))',\n                            answer: 'Now you can pick individual finish for each attribute, sticker and card icons (spell/trap icon and stars).',\n                        },\n                        {\n                            author: 'hello there at Apr 30, 2025',\n                            question: 'can you make the  top and left lines of Synchro monster name border/box more visible/whiter?',\n                            answer: 'Even more white it is.',\n                        },\n                    ].map(({ author, question, answer }, index) => {\n                        return <Quote key={index} author={author} question={question}>\n                            {answer}\n                        </Quote>;\n                    })}\n                </Tabs.TabPane>\n            </Tabs>\n        </Modal>\n    </>;\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Radio, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLogButton } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport { QuestionAndFeedback } from './faq';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\n                    <span\n                        className=\"bug-report\"\n                        onMouseOver={() => {\n                            document.getElementById('faq-button')?.classList.add('js-highlight');\n                        }}\n                        onMouseOut={() => {\n                            document.getElementById('faq-button')?.classList.remove('js-highlight');\n                        }}\n                    >\n                        <div id=\"sentry-bug-report\">\n                            {language['contributor.bug-report.tooltip']}\n                        </div>\n                    </span>\n                </Tooltip>\n                <QuestionAndFeedback />\n                <VersionLogButton />\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n    h2 {\n        margin-top: var(--spacing);\n    }\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-6.label']}</h2>\n                {language['guide.format.section-6.content'](\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'justified non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'justified non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Modal } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { CanvasConst } from 'src/model';\nimport {\n    TransformWrapper,\n    TransformComponent,\n    ReactZoomPanPinchContentRef,\n} from 'react-zoom-pan-pinch';\nimport styled from 'styled-components';\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\nimport { CardActionButton } from '../atom';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nconst StyledLightboxContainer = styled.div`\n    width: ${CanvasWidth}px;\n    height: ${CanvasHeight}px;\n    overflow: hidden;\n    position: relative;\n    line-height: 0;\n    .card-lightbox-control {\n        position: absolute;\n        z-index: 1;\n        top: var(--spacing);\n        right: var(--spacing);\n        user-select: none;\n        text-align: right;\n        .action-list {\n            display: inline-flex;\n            gap: var(--spacing-xs);\n        }\n        .control-info {\n            background-color: var(--main-level-1);\n            padding: var(--spacing-xs);\n            margin-top: var(--spacing-xs);\n            border-radius: var(--br);\n            border: var(--bw) solid var(--sub-level-1);\n            line-height: 1;\n            box-shadow: var(--bs-1);\n        }\n    }\n    .card-lightbox-content {\n        cursor: grab;\n    }\n`;\n\nconst MAX_ZOOM = 4;\nconst Controls = ({\n    zoomIn,\n    zoomOut,\n    resetTransform,\n    setTransform,\n    scale,\n    globalScale,\n    width,\n    height,\n}: ReactZoomPanPinchContentRef & {\n    scale: number,\n    globalScale: number,\n    width: number,\n    height: number,\n}) => {\n    return <div className=\"control-container\">\n        <div className=\"action-list\">\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\n                zoomIn();\n            }}>\n                <ZoomInOutlined />\n            </CardActionButton>\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\n                zoomOut();\n            }}>\n                <ZoomOutOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                resetTransform();\n            }}>\n                <FullscreenExitOutlined />\n            </CardActionButton>\n            <CardActionButton onClick={() => {\n                setTransform(\n                    -Math.max(0, width - CanvasWidth) / 2,\n                    -Math.max(0, height - CanvasHeight) / 2,\n                    1,\n                );\n            }}>\n                <FullscreenOutlined />\n            </CardActionButton>\n        </div>\n        <div className=\"control-info\">\n            {scale && <>×{\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\n            }</>}&nbsp;({width} × {height})\n        </div>\n    </div>;\n};\n\nexport type Lightbox = {\n    globalScale: number,\n};\nexport type LightboxRef = {\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\n    draw: (targetCanvas: HTMLCanvasElement) => void,\n    refresh: () => void,\n    getCanvasKey: () => number,\n};\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\n    globalScale,\n}, ref) => {\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [canvasKey, setCanvasKey] = useState(0);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\n    const [scale, setScale] = useState(() => 1 / globalScale);\n\n    useImperativeHandle(ref, () => ({\n        setVisible: setLightboxVisible,\n        draw: targetCanvas => {\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\n                targetCanvas,\n                0,\n                0,\n            );\n        },\n        refresh: () => setCanvasKey(cnt => cnt + 1),\n        getCanvasKey: () => canvasKey,\n    }));\n\n    useEffect(() => {\n        lightboxRef.current?.resetTransform();\n    }, [globalScale]);\n\n    return <Modal\n        width={`${CanvasWidth + 15 * 2}px`}\n        wrapClassName=\"card-lightbox-overlay\"\n        visible={lightboxVisible}\n        forceRender={true}\n        onCancel={() => setLightboxVisible(false)}\n        footer={null}\n    >\n        <StyledLightboxContainer\n            className=\"card-lightbox-container\"\n        >\n            <TransformWrapper ref={lightboxRef}\n                initialScale={1 / globalScale}\n                initialPositionX={0}\n                initialPositionY={0}\n                minScale={1 / globalScale}\n                maxScale={MAX_ZOOM}\n                onTransformed={ref => {\n                    setScale(ref.state.scale);\n                }}\n            >\n                {({ ...utils }) => {\n                    return <>\n                        <div\n                            className=\"card-lightbox-control\"\n                        >\n                            <Controls\n                                {...utils}\n                                scale={scale}\n                                globalScale={globalScale}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </div>\n                        <TransformComponent\n                            wrapperClass=\"card-lightbox-content\"\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\n                        >\n                            <canvas key={canvasKey + 0.1}\n                                id=\"lightbox-canvas\"\n                                ref={lightboxCanvasRef}\n                                width={CanvasWidth * globalScale}\n                                height={CanvasHeight * globalScale}\n                            />\n                        </TransformComponent>\n                    </>;\n                }}\n            </TransformWrapper>\n        </StyledLightboxContainer>\n    </Modal>;\n});","import { Menu, Popover } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StyledPopMarkdown } from '../atom';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label, scale }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                        globalScale: scale,\n                    });\n                    onChange?.([width, height], scale);\n                }}\n            >\n                {scale > 1\n                    ? <Popover\n                        overlayClassName=\"explanation-overlay\"\n                        placement=\"left\"\n                        content={<StyledPopMarkdown>\n                            {language['setting.option.resolution.warning']}\n                        </StyledPopMarkdown>}\n                    >\n                        {label}\n                    </Popover>\n                    : label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    display: inline-block;\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdownLabel = styled.div`\n    color: var(--color);\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    padding: 0 var(--spacing);\n    padding-bottom: var(--spacing-xs);\n    line-height: 1;\n    cursor: default;\n    &:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './angle-picker';\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './lightbox';\nexport * from './setting';\nexport * from './setting-panel';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { GatewayOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nexport const ResolutionButton = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    border-left: var(--bw) solid var(--sub-secondary);\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\n    color: var(--color);\n    cursor: pointer;\n    .anticon {\n        font-size: var(--fs-2xl);\n        margin-left: 0;\n    }\n    .resolution-overlay {\n        position: absolute;\n        left: 50%;\n        bottom: 3px; // Alignment\n        font-size: var(--fs-xs);\n        text-align: center;\n        transform: translateX(-50%);\n    }\n    .resolution-icon {\n        transform: translateY(-5px); // Alignment\n    }\n`;\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    globalScale: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    globalScale,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey, resolution,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n            globalScale,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                    <GatewayOutlined className=\"resolution-icon\" />\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\n                </ResolutionButton>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr 1fr;\n        &.mode_other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid transparent;\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    withText?: boolean,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n    withText,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay\n            ? <div className=\"copiable-overlay\">\n                {withText\n                    ? <>Copied&nbsp;<CheckOutlined /></>\n                    : <CheckOutlined />}\n                </div>\n            : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            width={600}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                                withText\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    {mode === 'ygocarder' && <div>\n                        <CardDataCopyButton\n                            disabled={isPartial}\n                            data={window.location.href}\n                            withText\n                        >\n                            <div className=\"icon\"><LinkOutlined /></div>\n                            <div className=\"label\">\n                                {language['button.export-modal.share-button.label']}\n                            </div>\n                        </CardDataCopyButton>\n                    </div>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport {\n    isYgoprodeckImage,\n    // uploadToImgur,\n} from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 * \n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    // try {\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\n                    //     if (imgurResponse.status !== 200) {\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\n                    //     }\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\n                    // } catch (e) {\n                    //     /** Failing the upload process does not terminate the import process */\n                    //     console.error('Upload error:', e);\n                    //     notification.error({\n                    //         message: language['prompt.import.imgur.message'],\n                    //         description: language['prompt.import.imgur.description'],\n                    //     });\n                    // }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n    PendulumSizeMap,\n    OtherFinishTypeMap,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\n    label: labelKey ? dictionary[labelKey] : label,\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\n    value,\n}));\n\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n        supportFormat,\n    }))\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);\n\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\n    label: dictionary[labelKey],\n    value: key,\n}));","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n};\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n            </CircularAnglePicker>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={8} xmin={-8}\n                ymax={8} ymin={-8}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}:&nbsp;<GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { InputNumber } from 'antd';\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\nimport styled from 'styled-components';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport { getDefaultNameStyle } from 'src/model';\n\nconst MaterialColor = styled.div<{ $color: string }>`\n    border: var(--bw) solid var(--sub-level-2);\n    display: inline-block;\n    width: 2rem;\n    height: 1em;\n    border-radius: var(--br-sm);\n    cursor: pointer;\n    ${({ $color }) => `background-color: ${$color};`}\n`;\nconst EmbossControlContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: max-content max-content;\n    color: var(--color);\n    .emboss-control-title {\n        grid-column: -1 / 1;\n        font-size: var(--fs-sm);\n        text-align: center;\n        padding: var(--spacing-sm);\n        padding-bottom: 0;\n    }\n    .emboss-control-left h2 {\n        padding: var(--spacing-sm) 0;\n    }\n    .angle-picker-container {\n        text-align: center;\n    }\n    .emboss-control-right {\n        padding: var(--spacing-sm) 0;\n    }\n    .emboss-control-left {\n        padding: var(--spacing-sm);\n        padding-top: 0;\n    }\n    .slider-label {\n        padding: 0;\n        border: none;\n    }\n    .vertical-angle-control {\n        grid-template-columns: max-content 60px 85px 12px;\n    }\n    .reset-button {\n        cursor: pointer;\n        &:hover {\n            color: var(--color-heavy);\n        }\n    }\n    .navigate-button {\n        cursor: pointer;\n        color: var(--main-link);\n        &:hover {\n            color: var(--sub-link);\n        }\n    }\n    .thickness-row {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        column-gap: var(--spacing-sm);\n        align-items: center;\n        .ant-slider {\n            height: unset;\n            margin-top: var(--spacing-xs);\n            margin-bottom: var(--spacing-xs);\n        }\n    }\n`;\n\nconst VECTOR_VALUE_EPSILON = 0.01;\nconst DEFAULT_PITCH = 90;\nconst DEFAULT_YAW = 90;\nfunction hexToRgb(hex: string) {\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n\n    return (result\n        ? [\n            parseInt(result[1], 16),\n            parseInt(result[2], 16),\n            parseInt(result[3], 16)\n        ]\n        : [0, 0, 0]) as [number, number, number];\n  }\n\nexport type EmbossControllerRef = {\n    setValue: (value: {\n        color?: string,\n        pitch?: number,\n        yaw?: number,\n        thickness?: number,\n    }) => void,\n};\nexport type EmbossController = {\n    defaultPitch?: number,\n    defaultYaw?: number,\n    defaultThickness?: number,\n    materialColor?: string,\n    children?: React.ReactNode,\n    language: LanguageDataDictionary,\n    onColorTabNavigate: () => void,\n    onChange: (value: {\n        lightColorVec: [number, number, number],\n        lightAngleVec: [number, number, number],\n        yaw: number,\n        pitch: number,\n        thickness: number,\n    }) => void,\n};\nconst defaultValue = getDefaultNameStyle();\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\n    defaultPitch = defaultValue.embossPitch,\n    defaultYaw = defaultValue.embossYaw,\n    defaultThickness = defaultValue.embossThickness,\n    materialColor,\n    children,\n    language,\n    onColorTabNavigate,\n    onChange,\n}, ref) => {\n    const [requestUpdate, internalId] = useRefresh();\n    const [color, setColor] = useState('#ffffff');\n    const [thickness, setThickness] = useState(defaultThickness);\n    const [angle, setAngle] = useState(defaultYaw);\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\n    const currentThickness = useRef(defaultThickness);\n    /** Currently we only allow pure white light to avoid confusion for user. */\n    const [allowPickColor] = useState(false);\n\n    useEffect(() => {\n        let relevant = true;\n        if (internalId) setTimeout(() => {\n            if (relevant) {\n                const nextAngle = angleToVector(angle, verticalAngle);\n                const nextColor = hexToRgb(color);\n\n                if (\n                    nextColor[0] !== currentColorVec.current[0]\n                    || nextColor[1] !== currentColorVec.current[1]\n                    || nextColor[2] !== currentColorVec.current[2]\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\n                    || thickness !== currentThickness.current\n                ) {\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\n                }\n                currentColorVec.current = nextColor;\n                currentAngleVec.current = nextAngle;\n                currentThickness.current = thickness;\n            }\n        }, 150);\n\n        return () => {\n            relevant = false;\n        };\n    }, [internalId, color, angle, verticalAngle, thickness]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ color, pitch, yaw, thickness }) => {\n            if (color) setColor(color);\n            if (pitch) setVerticalAngle(pitch);\n            if (yaw) setAngle(yaw);\n            if (typeof thickness === 'number') setAngle(thickness);\n        }\n    }));\n\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\n        <div className=\"emboss-control-title\">\n            {children}\n        </div>\n        <div className=\"emboss-control-left\">\n            <h2>\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\n                    className=\"material-color\"\n                    onClick={onColorTabNavigate}\n                    $color={materialColor}\n                />\n            </h2>\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\n                {language['input.name-style.color.label']}\n            </span>)}\n            <h2 className=\"thickness-row\">\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\n                <GuardedSlider\n                    value={thickness}\n                    min={0}\n                    max={4}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setThickness(value);\n                            requestUpdate();\n                        }\n                    }}\n                />\n            </h2>\n            <h2>\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\n                    className=\"reset-button\"\n                    onClick={() => {\n                        setVerticalAngle(DEFAULT_PITCH);\n                        requestUpdate();\n                    }}\n                />\n            </h2>\n            <CombinedSliderContainer className=\"vertical-angle-control\">\n                <div className=\"slider-label\" />\n                <InputNumber\n                    size=\"small\"\n                    min={-90}\n                    max={90}\n                    onChange={value => {\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\n                        requestUpdate();\n                    }}\n                    value={verticalAngle}\n                />\n                <GuardedSlider\n                    min={-90}\n                    max={90}\n                    value={verticalAngle}\n                    onChange={value => {\n                        setVerticalAngle(value);\n                        requestUpdate();\n                    }}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\n                className=\"reset-button\"\n                onClick={() => {\n                    setAngle(DEFAULT_YAW);\n                    requestUpdate();\n                }}\n            /></h2>\n            <div className=\"horizontal-angle-contorl\">\n                <CircularAnglePicker\n                    angle={angle}\n                    size={120}\n                    setAngle={angle => {\n                        setAngle(angle);\n                        requestUpdate();\n                    }}\n                />\n            </div>\n        </div>\n        {allowPickColor && <div className=\"emboss-control-right\">\n            <h2>Light color</h2>\n            <ChromePicker\n                styles={{\n                    default: {\n                        picker: {\n                            color: '#000000',\n                            background: 'var(--main-level-3)',\n                            boxShadow: 'none',\n                        },\n                        body: {\n                            padding: 'var(--spacing) var(--spacing)',\n                        }\n                    },\n                }}\n                disableAlpha={true}\n                color={color}\n                onChange={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n                onChangeComplete={color => {\n                    setColor(color.hex);\n                    requestUpdate();\n                }}\n            />\n        </div>}\n    </EmbossControlContainer>;\n});","import { useEffect, useState } from 'react';\nimport { ChromePicker, CompactPicker } from 'react-color';\nimport { DefaultColorList } from 'src/model';\nimport styled from 'styled-components';\n\nconst TextColorPickerContainer = styled.div`\n    .chrome-picker {\n        /** Target color format swapper in picker's body */\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\n            display: none !important;\n        }\n    }\n`;\nexport type TextColorPicker = {\n    color: string,\n    onChange: (color: string) => void,\n};\nexport const TextColorPicker = ({\n    color,\n    onChange,\n}: TextColorPicker) => {\n    const [internalColor, setInternalColor] = useState(color);\n\n    useEffect(() => {\n        setInternalColor(color);\n    }, [color]);\n\n    return <TextColorPickerContainer>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                        padding: 'var(--spacing-sm) var(--spacing)',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    },\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onChange(color.hex);\n            }}\n        />\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => {\n                onChange(color.hex);\n            }}\n        />\n    </TextColorPickerContainer>;\n};","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown, PopoverButton } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\nimport { TextColorPicker } from './text-color-picker';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        requestUpdateCustomStyle();\n    }, [requestUpdateCustomStyle]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n                embossPitch, embossYaw, embossThickness,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n            embossControllerRef.current?.setValue({\n                pitch: embossPitch,\n                yaw: embossYaw,\n                thickness: embossThickness,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        hasEmboss, embossPitch, embossYaw, embossThickness,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n\n    const colorPickerButtonId = 'color-picker';\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <TextColorPicker\n                                        color={fillStyle}\n                                        onChange={hexColor => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            id={colorPickerButtonId}\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom}\n                            className=\"picker-dropdown color-picker-dropdown\"\n                        >\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </PopoverButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </PopoverButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            requestUpdateCustomStyle();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </PopoverButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className=\"custom-style-picker\">\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\n                                        requestUpdateCustomStyle();\n                                    }}>\n                                        {language['input.name-style.emboss.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\n                                    language={language}\n                                    defaultPitch={embossPitch}\n                                    defaultYaw={embossYaw}\n                                    defaultThickness={embossThickness}\n                                    materialColor={fillStyle}\n                                    onColorTabNavigate={() => {\n                                        document.getElementById(colorPickerButtonId)?.click();\n                                    }}\n                                    onChange={({ thickness, yaw, pitch }) => {\n                                        setValue(cur => ({ ...cur,\n                                            embossPitch: pitch,\n                                            embossYaw: yaw,\n                                            embossThickness: thickness,\n                                        }));\n                                        requestUpdateCustomStyle();\n                                    }}\n                                >\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\n                                </EmbossController>}\n                            </div>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasEmboss}\n                            className=\"picker-dropdown emboss-picker-dropdown\"\n                        >\n                            {language['input.name-style.emboss.label']}\n                        </PopoverButton>\n                    </Popover>}\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n    onPasswordChange: (value: string) => void,\n    onStatChange: (atk: string, def: string) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n    onPasswordChange,\n    onStatChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                attribute,\n                format,\n                password,\n                star,\n                atk,\n                def,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const nextTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            const nextPassword = nextFrame === 'token'\n                ? passwordSentenceMap[format]\n                : password;\n            const nextAtk = willRemoveStat ? '' : atk;\n            const nextDef = willRemoveStat ? '' : def;\n            const nextStar = nextFrame === 'token'\n                ? 0\n                : star;\n\n            onPasswordChange(nextPassword);\n            if (willBecomeST) {\n                onSTFrameChange(nextTypeAbility);\n            }\n            if (willRemoveStat) {\n                onStatChange(nextAtk, nextDef);\n            }\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: nextFrame === 'token'\n                    ? NO_ATTRIBUTE\n                    : willBecomeST\n                        ? `${nextFrame}`.toUpperCase()\n                        : attribute,\n                star: nextStar,\n                typeAbility: nextTypeAbility,\n                password: nextPassword,\n                atk: nextAtk,\n                def: nextDef,\n            };\n        });\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\nimport { Tooltip } from 'antd';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props, tooltip } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n                const children = <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n\n                return tooltip\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\n                    : children;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum, pendulumSize,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum, pendulumSize,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .card-opacity-slider {\n        flex: 0 1 auto;\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <CombinedSliderContainer key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </CombinedSliderContainer>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { getCardIconFromFrame } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 7rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const autoIconType = getCardIconFromFrame(frame);\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return cardIcon === 'auto' && autoIconType === 'none'\n        ? showCreativeOption\n            ? <RadioTrain\n                className=\"fill-input-train\"\n                value={cardIcon}\n                onChange={changeCardIcon}\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\n                    return {\n                        label: icon ?? <CloseCircleOutlined />,\n                        value,\n                        tooltipProps: {\n                            title: language[fullLabelKey],\n                        },\n                    };\n                })}\n            >\n                {DropdownChildren}\n            </RadioTrain>\n            : null\n        : iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    holdingShift: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': {\n            if (holdingShift) {\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 4 : 5;\n            } else {\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n                cursorOffset = keepInline ? 2 : 3;\n            }\n            break;\n        }\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`card-textarea ${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    ev.shiftKey,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        autoSize={{\n            minRows: 9,\n        }}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain, StyledDropdown, StyledDropdownLabel } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\nimport styled from 'styled-components';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { notification, Popover } from 'antd';\nimport { mergeClass } from 'src/util';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0 0 auto;\n        text-align: left;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\nconst FinishLabel = styled(StyledDropdown.Option)`\n    display: grid;\n    grid-template-columns: 30px 1fr;\n    column-gap: var(--spacing-xs);\n    .tag {\n        background: var(--sub-level-2);\n        color: var(--color-contrast);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    &.default {\n        .tag {\n            background: var(--sub-level-4);\n        }\n    }\n`;\n\ntype OtherFinishPicker = {\n    finishValueList: [...OtherFinish, art: string],\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\n    language: LanguageDataDictionary,\n    showCreativeOption: boolean,\n};\nconst OtherFinishPicker = ({\n    finishValueList,\n    changeFinish,\n    language,\n    showCreativeOption,\n}: OtherFinishPicker) => {\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\n    const valueMap = {\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[0],\n        [OtherFinishTypeMap['icon'].key]: finishValueList[1],\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[2],\n        [OtherFinishTypeMap['art'].key]: finishValueList[3],\n    };\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\n\n    const IconDropdownLabel = showCreativeOption\n        ? <>{language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined /></>\n        : language[OtherFinishTypeMap[selectedType].labelKey];\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledDropdown.Container>\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\n                {finishList.map(({ label, value }) => {\n                    return <FinishLabel key={value}\n                        className={mergeClass(\n                            valueMap[value] === 'normal' ? 'default' : '',\n                            selectedType === value ? 'menu-active' : '',\n                        )}\n                        onClick={() => {\n                            setSelectedType(value);\n                        }}\n                    >\n                        <div className=\"value\">\n                            <div className=\"tag\">{valueMap[value] === 'normal' ? 'Auto' : valueMap[value]}</div>\n                        </div>\n                        <div className=\"label\">{label}</div>\n                    </FinishLabel>;\n                })}\n            </StyledDropdown.Container>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n\n    return <StyledImageRadioTrain\n        className=\"art-finish-checkbox fill-input-train\"\n        value={valueMap[selectedType]}\n        onChange={value => {\n            const nextValueMap = { ...valueMap };\n            nextValueMap[selectedType] = `${value}`;\n\n            changeFinish(nextValueMap);\n        }}\n        optionList={ArtFinishButtonList}\n    >\n        {IconDropdown}\n    </StyledImageRadioTrain>;\n};\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    showCreativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    showCreativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish, otherFinish,\n            linkMap,\n            isPendulum, pendulumSize,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish, otherFinish,\n        linkMap,\n        isPendulum, pendulumSize,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <OtherFinishPicker\n                finishValueList={[...otherFinish, artFinish]}\n                changeFinish={finishMap => {\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\n                    changeOtherFinish([\n                        finishMap[OtherFinishTypeMap['attribute'].key],\n                        finishMap[OtherFinishTypeMap['icon'].key],\n                        finishMap[OtherFinishTypeMap['sticker'].key],\n                    ]);\n                }}\n                language={language}\n                showCreativeOption={showCreativeOption}\n            />\n            : null\n        }\n    >\n        <div>\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n                active={isLink === true}\n                defaultValue={linkMap}\n                onChange={changeLinkMap}\n                onStatusChange={changeLinkStatus}\n            />\n        </div>\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage, useSetting } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { DEFAULT_PENDULUM_SIZE, FrameInfoMap, PendulumSizeMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .pendulum-option {\n        display: grid;\n        grid-template-columns: var(--width-label) 1fr;\n        align-items: center;\n        .pendulum-frame-input,\n        .pendulum-checkbox {\n            flex: 0 0 auto;\n        }\n        .mirror-scale {\n            /** Alignment **/\n            line-height: 32px;\n            align-items: center;\n        }\n    }\n    .joined-row {\n        position: relative;\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            /** Alignment **/\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing);\n        }\n        .pendulum-size {\n            display: inline-block;\n            line-height: 1.15; // Alignment\n            margin-right: var(--spacing);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    softMode: boolean,\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    softMode,\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumSize,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        pendulumSize,\n        setCard,\n        getUpdater,\n    })));\n    const {\n        mirrorPendulumScale,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { mirrorPendulumScale },\n        updateSetting,\n    }) => ({\n        mirrorPendulumScale,\n        updateSetting,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            <div className=\"pendulum-option-container\">\n                {showCreativeOption && <Popover\n                    visible={frameDropdownVisible}\n                    onVisibleChange={setFrameDropdownVisibleVisible}\n                    trigger={['hover', 'click']}\n                    placement=\"bottom\"\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\n                    content={<div className=\"overlay-event-absorber\">\n                        <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                            frameList={frameList}\n                            pendulumFrame={pendulumFrame}\n                            onCancel={() => {\n                                setFrameDropdownVisibleVisible(false);\n                                containerRef.current?.focus();\n                            }}\n                            onChange={changeBottomFrame}\n                        />\n                    </div>}\n                >\n                    <StyledPendulumFrameInputContainer ref={containerRef}\n                        className=\"pendulum-frame-input\"\n                        tabIndex={0}\n                        onKeyDown={e => {\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                                setFrameDropdownVisibleVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    bottomFrameOptionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        }}\n                    >\n                        <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                        {currentPendulumFrame\n                            ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                            : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                    </StyledPendulumFrameInputContainer>\n                </Popover>}\n                {(isPendulum && showCreativeOption)\n                    && <div className=\"pendulum-size\">\n                    <Popover key=\"color-picker\"\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {pendulumSizeList.map(({ value, label }) => {\n                                    return <StyledDropdown.Option key={value}\n                                        className={pendulumSize === value ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            onPendulumSizeChange(value);\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <PopoverButton\n                            $softMode={softMode}\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\n                        >\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\n                        </PopoverButton>\n                    </Popover>\n                </div>}\n                {(isPendulum && showCreativeOption)\n                    && <Checkbox\n                        className=\"mirror-scale\"\n                        onChange={e => {\n                            const willMirror = e.target.checked;\n\n                            updateSetting({ mirrorPendulumScale: willMirror });\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\n                        }}\n                        checked={mirrorPendulumScale}\n                    >\n                        {language['input.mirror-scale.label']}\n                    </Checkbox>}\n            </div>\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    allowClear\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (mirrorPendulumScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    allowClear\n                    onChange={e => {\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    autoSize={{\n                        minRows: 5,\n                    }}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker,\n        h2.font-style-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        format,\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\n                                <h2 className=\"font-style-picker\">\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={fontStyle}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize, fontStyle } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    getFinishList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n    const finishList = useMemo(() => getFinishList(language), [language]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={finishList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\n        />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        softMode={reduceMotionColor}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showCreativeOption={showCreativeOption}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkOffsetList,\n    LinkPendulumIndentList,\n    LinkPendulumOffsetList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            left: 21px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\n\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\n                    )}\n                    style={{\n                        top: isPendulum ? 16 : 19,\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\n                    }}\n                />;\n            })}\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    position: relative;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        position: absolute;\n        width: 100%;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PendulumSizeList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport { FileTextOutlined } from '@ant-design/icons';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Pendulum Size',\n                                    value: <div>\n                                        {PendulumSizeList\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\nimport { CardActionButton } from './component';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .save-button-tainted {\n        .alert-label {\n            flex: 1;\n            padding-top: var(--spacing-px);\n        }\n        .resolution-option {\n            position: relative;\n            border: none;\n            border-radius: var(--br-lg);\n            background: var(--main-primary);\n        }\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const CardPreviewContainer = styled.div`\n    position: relative;\n    display: block;\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\n    margin: var(--spacing);\n    margin-top: 0;\n    .reset-button,\n    .lightbox-button {\n        display: none;\n    }\n    #preview-canvas {\n        display: none;\n        position: absolute;\n        top: 0;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\n            scale(var(--resize-ratio))\n            translateZ(0);\n        &.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n    }\n`;\nexport const CardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled(CardActionButton)`\n    position: absolute;\n    z-index: 101;\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n    ResolutionButton,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Dropdown, notification, Tooltip } from 'antd';\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\nimport {\n    CardPreviewContainer,\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    CardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n        globalScale,\n        resolution,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n        globalScale,\n        resolution,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxRef = useRef<LightboxRef>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxRef,\n        previewCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            lightboxRef.current?.refresh();\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasHeight * globalScale}px`,\n                        '--card-width': `${CanvasWidth * globalScale}px`,\n                        '--global-scale': `${globalScale}`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                globalScale={globalScale}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\n                                <div className=\"alert-label\">\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\n                                </div>\n                                <Dropdown\n                                    className=\"save-button-dropdown\"\n                                    placement=\"bottomRight\"\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n                                >\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\n                                        <GatewayOutlined className=\"resolution-icon\" />\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\n                                    </ResolutionButton>\n                                </Dropdown>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <CardPreviewContainer className=\"card-preview-container\">\n                            <Tooltip title={language['button.reset.tooltip']}>\n                                <ResetButton\n                                    className=\"reset-button\"\n                                    onClick={() => {\n                                        const consent = window.confirm(language['prompt.reset.message']);\n\n                                        if (consent) {\n                                            const { setCard, card } = useCard.getState();\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\n                                            const contextualDefaultCardData = card.format === 'tcg'\n                                                ? defaultCard\n                                                : changeCardFormat(defaultCard, 'ocg');\n\n                                            setCard(contextualDefaultCardData, true);\n                                            setImageChangeCount(cnt => cnt + 1);\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                        }\n                                    }}\n                                >\n                                    <ClearOutlined />\n                                </ResetButton>\n                            </Tooltip>\n                            <Tooltip title={<div className=\"center\">\n                                {language['button.full-size.label']}\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                            </div>}>\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                    <ZoomInOutlined />\n                                </LightboxButton>\n                            </Tooltip>\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\n                             */}\n                            <canvas\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\n                                id=\"preview-canvas\"\n                                ref={previewCanvasRef}\n                                width={CanvasWidth}\n                                height={CanvasHeight}\n                            />\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\n                                <canvas\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"nameCanvas\"\n                                    ref={nameCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={148 * globalScale}\n                                />\n                                <canvas id=\"cardIconCanvas\"\n                                    ref={cardIconCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={222 * globalScale}\n                                />\n                                <canvas id=\"pendulumScaleCanvas\"\n                                    ref={pendulumScaleCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"pendulumEffectCanvas\"\n                                    ref={pendulumEffectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={920 * globalScale}\n                                />\n                                <canvas id=\"typeCanvas\"\n                                    ref={typeCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"effectCanvas\"\n                                    ref={effectCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"statCanvas\"\n                                    ref={statCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"setIdCanvas\"\n                                    ref={setIdCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"passwordCanvas\"\n                                    ref={passwordCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"creatorCanvas\"\n                                    ref={creatorCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"stickerCanvas\"\n                                    ref={stickerCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas id=\"finishCanvas\"\n                                    ref={finishCanvasRef}\n                                    width={CanvasWidth * globalScale}\n                                    height={CanvasHeight * globalScale}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={artworkCanvasRef}\n                                />\n                                <canvas className=\"crop-canvas\"\n                                    ref={backgroundCanvasRef}\n                                />\n                            </CardCanvasGroupContainer>\n                        </CardPreviewContainer>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Lightbox\n                    ref={lightboxRef}\n                    globalScale={globalScale}\n                />\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}