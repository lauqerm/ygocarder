{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/atom.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","E","Ĕ","ĕ","Ḝ","ḝ","Ȇ","ȇ","Ê","ê","Ê̄","ê̄","Ê̌","ê̌","Ề","ề","Ế","ế","Ể","ể","Ễ","ễ","Ệ","ệ","Ẻ","ẻ","Ḙ","ḙ","Ě","ě","Ɇ","ɇ","Ė","ė","Ė́","ė́","Ė̃","ė̃","Ẹ","ẹ","Ë","ë","È","è","È̩","è̩","Ȅ","ȅ","É","é","É̩","Ē","ē","Ḕ","ḕ","Ḗ","ḗ","Ẽ","ẽ","Ḛ","ḛ","Ę","ę","Ę́","ę́","Ę̃","ę̃","Ȩ","ȩ","E̩","e̩","ᶒ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","settingValue","ResolutionList","ExportFormatList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","arguments","undefined","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","getContext","clonedCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","drawTypeAbility","isMonster","willDrawTypeAbility","typeAbilityWithIcon","willDrawIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","constructor","super","hasError","componentDidCatch","Sentry","componentStack","render","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","_templateObject3","$softMode","_templateObject4","SettingButton","trigger","Checkbox","checked","placement","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","BugOutlined","TagsFilled","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","setCnt","useRefresh","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","applyCustomStyle","onVisibleChange","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","utils","sheet_to_json","Sheets","SheetNames","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject5","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCH,MAAME,EAA8C,CAAC,CAAEnC,UAAW,UAAWtE,QAAS,IAChF0G,EAA8C,CAChD,CAAEpC,UAAW,UAAWtE,QAAS,KACjC,CAAEsE,UAAW,WAAYtE,QAAS,MAUzB2G,EAA+C,CACxDpC,MAAO,CACHvH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBpC,MAAO,CACHxH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBnC,MAAO,CACHzH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,cAAeH,EACf,aAAcA,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,UAAaA,EACb,MAASA,IAGjB/B,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExBjC,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExB/B,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,IAExB9B,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUtE,QAAS,MAAS,CAAEsE,UAAW,cAAetE,QAAS,SAGxG+E,MAAO,CACH/H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,aAAcF,EACd,sBAAuBA,EACvB,kBAAmBA,EACnB,MAASA,EACT,mBAAoBA,EACpB,KAAQA,EACR,KAAQA,IAGhB1B,MAAO,CACHhI,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChB,gBAAiB,CAAC,CAAEtC,UAAW,SAAUtE,QAAS,SAKjD6G,EAAkD,CAC3DtC,MAAO,CACHvH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,MAGdtC,MAAO,CACHxH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CACD,CAAE9G,QAAS,IAAMsE,UAAW,UAC5B,CAAEtE,QAAS,IAAMsE,UAAW,eAC5B,CAAEtE,QAAS,IAAMsE,UAAW,eAIxCG,MAAO,CACHzH,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,IAAMsE,UAAW,eAGvFI,MAAO,CACH1H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFK,MAAO,CACH3H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFO,MAAO,CACH7H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,CAAE9G,QAAS,IAAMsE,UAAW,eAAiB,CAAEtE,QAAS,GAAKsE,UAAW,eAGtFQ,MAAO,CACH9H,MAAO,QACPC,MAAO,IACP2J,mBAAoB,CAChBE,IAAK,CAAC,OAULC,EAAc,CACvBnI,OAAQ,SACRgF,KAAM,OACNL,SAAU,YAEDyD,EAAejK,GAAgC,CACxD,CACIuB,KAAMyI,EAAoB,OAC1B9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6B,OACnB2B,MAAO,UACPE,UAAU,GAEd,CACInC,KAAMyI,EAAkB,KACxB9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAY6G,KACnBrD,MAAO,UACPE,UAAU,GAEd,CACInC,KAAMyI,EAAsB,SAC5B9J,MAAiB,OAAVF,QAAU,IAAVA,OAAU,EAAVA,EAAYwG,SACnBhD,MAAO,UACPE,UAAU,ICnILwG,EAAsB,CAC/BC,mBAAoB,EACpBC,mBAAoB,EACpBC,kBAAmB,KACnBC,gBAAiB,IACjBC,iBAAkB,KAClBC,cAAe,EACfC,QAAS,EACTC,oBAAqB,EACrBC,iBAAkB,EAAI,IACtBC,mBAAoB,GAYXC,EACA,EADAA,EAED,EAwBCC,EAAkB,CAC3BC,oBAAqB,GACrBC,iBAAkB,SAClBC,cAAc,EACdC,iBAAkB,QAQhBC,EAAwB,CAC1BC,aAAc,0BACdC,aAAc,2BACdhB,kBAAmB,GACnBU,oBAAqB,KACrBO,YAAa,sBACbC,WAAY,SACZC,gBAAiB,EACjBN,iBAAkB,GAEhBO,EAAkCtI,wBAAA,GACjCgI,GAAqB,IACxBrF,KAAM,aACNiF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAEDC,EAAkCzI,wBAAA,GACxCgI,GAAqB,IACxBrF,KAAM,sBACNiF,oBAAqB,IACrBW,UAAW,MACXC,SAAU,KAERE,EAAkC1I,wBAAA,GACjCgI,GAAqB,IACxBrF,KAAM,0BACN4F,UAAW,MACXI,aAAc,UACdH,SAAU,KAKDI,EAA2C,CACpD,IAAK5I,wBAAA,GACEsI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,GAC7F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,MAAOC,UAAW,OAGhF,WAAUhJ,wBAAA,GACHsI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,GAC7F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,gBAAehJ,wBAAA,GACRsI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,GAC7F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,GAC7F,CAAE6B,kBAAmB,GAAIC,SAAU,GAAMC,WAAY,GAAMC,UAAW,GAAIhC,mBAAoB,MAGtG,WAAUhH,wBAAA,GACHsI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,GAC7F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,MAG9E,IAAKhJ,wBAAA,GACE0I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE2B,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,GAClE,CAAEH,kBAAmB,GAAIC,SAAU,GAAIC,WAAY,GAAIC,UAAW,MAG1E,WAAUhJ,wBAAA,GACH0I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE2B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,gBAAehJ,wBAAA,GACR0I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE2B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,MAG/E,WAAUhJ,wBAAA,GACH0I,GAAwB,IAC3BF,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,KACnH,CAAE2B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,EAAGhC,mBAAoB,EAAGE,kBAAmB,IACnH,CAAE2B,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,OAKtEC,EAA6C,CACtD,CAAEJ,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,KAAMC,UAAW,GACtE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,KAAMC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,MAAOC,WAAY,GAAMC,UAAW,KAG9DE,GAAmD,CAC5D5D,IAAGtF,wBAAA,GACIsI,GAAwB,IAC3BE,SAAU,CACN,CAAEK,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,GACvE,CAAEH,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGhC,mBAAoB,GAC9F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,EAAGhC,mBAAoB,GAC9F,CAAE6B,kBAAmB,GAAIC,SAAU,KAAMC,WAAY,MAAOC,UAAW,MAG/ErD,IAAG3F,wBAAA,GACI0I,GAAwB,IAC3BF,SAAU,CACN,CACIK,kBAAmB,GACnB7B,mBAAoB,EACpB8B,SAAU,MACVC,WAAY,KACZ7B,kBAAmB,GACnB8B,UAAW,GAEf,CACIH,kBAAmB,GACnB7B,mBAAoB,EACpB8B,SAAU,MACVC,WAAY,KACZ7B,kBAAmB,GACnB8B,UAAW,GAEf,CACIH,kBAAmB,GACnB7B,mBAAoB,EACpB8B,SAAU,MACVC,WAAY,KACZ7B,kBAAmB,IACnB8B,UAAW,GAEf,CACIH,kBAAmB,GACnBC,SAAU,MACVC,WAAY,KACZ7B,kBAAmB,GACnB8B,UAAW,OAOdG,GAAoE,CAC7EC,WAAY,CACR,EAAK,IACL,EAAK,IACL,EAAK,KAETC,OAAQ,CACJ,EAAK,IACL,EAAK,IACL,EAAK,KAETC,MAAO,CACH,EAAK,IACL,EAAK,IACL,EAAK,KAETC,UAAW,CACP,EAAK,IACL,EAAK,IACL,EAAK,KAETC,QAAS,CACL,EAAK,IACL,EAAK,IACL,EAAK,MC7RAC,GAAqE,CAC9EC,QAAS,CACL5M,MAAO,UACPiE,SAAU,qCACV4I,SAAU,CACN1B,aAAc,yBACdtF,KAAM,yBACNuF,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,IACrBY,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,KACV5B,kBAAmB,IACnBG,cAAe,KACf2B,UAAW,EACXD,WAAY,KACZzB,QAAS,IAEbsC,mBAAoB,CAChBC,EAAG,CAAEC,QAAS,EAAGC,OAAQ,MACzBC,OAAG,CAAEF,QAAS,EAAGC,OAAQ,MACzBE,OAAG,CAAEH,QAAS,EAAGC,OAAQ,MACzBG,OAAG,CAAEJ,QAAS,EAAGC,OAAQ,MACzBI,OAAG,CAAEL,QAAS,EAAGC,OAAQ,MACzBK,SAAG,CAAEN,QAAS,EAAGC,OAAQ,MACzBM,SAAG,CAAEP,QAAS,EAAGC,OAAQ,MACzBO,SAAG,CAAER,QAAS,EAAGC,OAAQ,MACzBQ,SAAG,CAAET,QAAS,EAAGC,OAAQ,MACzBS,SAAG,CAAEV,QAAS,EAAGC,OAAQ,MACzBU,SAAG,CAAEX,QAAS,EAAGC,OAAQ,MACzBW,SAAG,CAAEZ,QAAS,EAAGC,OAAQ,MACzBY,SAAG,CAAEb,QAAS,EAAGC,OAAQ,MACzBa,SAAG,CAAEd,QAAS,EAAGC,OAAQ,MACzBc,SAAG,CAAEf,QAAS,EAAGC,OAAQ,MACzBe,SAAG,CAAEhB,QAAS,EAAGC,OAAQ,MACzBgB,SAAG,CAAEjB,QAAS,EAAGC,OAAQ,MACzBiB,SAAG,CAAElB,QAAS,EAAGC,OAAQ,MACzBkB,SAAG,CAAEnB,QAAS,EAAGC,OAAQ,MACzBmB,SAAG,CAAEpB,QAAS,EAAGC,OAAQ,MACzBoB,SAAG,CAAErB,QAAS,EAAGC,OAAQ,MACzBqB,EAAG,CAAEtB,QAAS,EAAGC,OAAQ,OACzBsB,OAAG,CAAEvB,QAAS,EAAGC,OAAQ,OACzBuB,OAAG,CAAExB,QAAS,EAAGC,OAAQ,OACzBwB,OAAG,CAAEzB,QAAS,EAAGC,OAAQ,OACzByB,OAAG,CAAE1B,QAAS,EAAGC,OAAQ,OACzB0B,SAAG,CAAE3B,QAAS,EAAGC,OAAQ,OACzB2B,SAAG,CAAE5B,QAAS,EAAGC,OAAQ,OACzB4B,SAAG,CAAE7B,QAAS,EAAGC,OAAQ,OACzB6B,SAAG,CAAE9B,QAAS,EAAGC,OAAQ,OACzB8B,SAAG,CAAE/B,QAAS,EAAGC,OAAQ,OACzB+B,SAAG,CAAEhC,QAAS,EAAGC,OAAQ,OACzBgC,SAAG,CAAEjC,QAAS,EAAGC,OAAQ,OACzBiC,SAAG,CAAElC,QAAS,EAAGC,OAAQ,OACzBkC,SAAG,CAAEnC,QAAS,EAAGC,OAAQ,OACzBmC,SAAG,CAAEpC,QAAS,EAAGC,OAAQ,OACzBoC,SAAG,CAAErC,QAAS,EAAGC,OAAQ,OACzBqC,SAAG,CAAEtC,QAAS,EAAGC,OAAQ,OACzBsC,SAAG,CAAEvC,QAAS,EAAGC,OAAQ,OACzBuC,SAAG,CAAExC,QAAS,EAAGC,OAAQ,OACzBwC,EAAG,CAAEzC,QAAS,EAAGC,OAAQ,MACzByC,SAAG,CAAE1C,QAAS,EAAGC,OAAQ,MACzB0C,SAAG,CAAE3C,QAAS,EAAGC,OAAQ,MACzB2C,SAAG,CAAE5C,QAAS,EAAGC,OAAQ,MACzB4C,SAAG,CAAE7C,QAAS,EAAGC,OAAQ,MACzB6C,SAAG,CAAE9C,QAAS,EAAGC,OAAQ,MACzB8C,SAAG,CAAE/C,QAAS,EAAGC,OAAQ,MACzB+C,OAAG,CAAEhD,QAAS,EAAGC,OAAQ,MACzBgD,OAAG,CAAEjD,QAAS,EAAGC,OAAQ,MACzBiD,aAAI,CAAElD,QAAS,EAAGC,OAAQ,MAC1BkD,aAAI,CAAEnD,QAAS,EAAGC,OAAQ,MAC1BmD,aAAI,CAAEpD,QAAS,EAAGC,OAAQ,MAC1BoD,aAAI,CAAErD,QAAS,EAAGC,OAAQ,MAC1BqD,SAAG,CAAEtD,QAAS,EAAGC,OAAQ,MACzBsD,SAAG,CAAEvD,QAAS,EAAGC,OAAQ,MACzBuD,SAAG,CAAExD,QAAS,EAAGC,OAAQ,MACzBwD,SAAG,CAAEzD,QAAS,EAAGC,OAAQ,MACzByD,SAAG,CAAE1D,QAAS,EAAGC,OAAQ,MACzB0D,SAAG,CAAE3D,QAAS,EAAGC,OAAQ,MACzB2D,SAAG,CAAE5D,QAAS,EAAGC,OAAQ,MACzB4D,SAAG,CAAE7D,QAAS,EAAGC,OAAQ,MACzB6D,SAAG,CAAE9D,QAAS,EAAGC,OAAQ,MACzB8D,SAAG,CAAE/D,QAAS,EAAGC,OAAQ,MACzB+D,SAAG,CAAEhE,QAAS,EAAGC,OAAQ,MACzBgE,SAAG,CAAEjE,QAAS,EAAGC,OAAQ,MACzBiE,SAAG,CAAElE,QAAS,EAAGC,OAAQ,MACzBkE,SAAG,CAAEnE,QAAS,EAAGC,OAAQ,MACzBmE,SAAG,CAAEpE,QAAS,EAAGC,OAAQ,MACzBoE,SAAG,CAAErE,QAAS,EAAGC,OAAQ,MACzBqE,SAAG,CAAEtE,QAAS,EAAGC,OAAQ,MACzBsE,SAAG,CAAEvE,QAAS,EAAGC,OAAQ,MACzBuE,SAAG,CAAExE,QAAS,EAAGC,OAAQ,MACzBwE,SAAG,CAAEzE,QAAS,EAAGC,OAAQ,MACzByE,eAAI,CAAE1E,QAAS,EAAGC,OAAQ,MAC1B0E,eAAI,CAAE3E,QAAS,EAAGC,OAAQ,MAC1B2E,eAAI,CAAE5E,QAAS,EAAGC,OAAQ,MAC1B4E,eAAI,CAAE7E,QAAS,EAAGC,OAAQ,MAC1B6E,SAAG,CAAE9E,QAAS,EAAGC,OAAQ,MACzB8E,SAAG,CAAE/E,QAAS,EAAGC,OAAQ,MACzB+E,OAAG,CAAEhF,QAAS,EAAGC,OAAQ,MACzBgF,OAAG,CAAEjF,QAAS,EAAGC,OAAQ,MACzBiF,OAAG,CAAElF,QAAS,EAAGC,OAAQ,MACzBkF,OAAG,CAAEnF,QAAS,EAAGC,OAAQ,MACzBmF,aAAI,CAAEpF,QAAS,EAAGC,OAAQ,MAC1BoF,aAAI,CAAErF,QAAS,EAAGC,OAAQ,MAC1BqF,SAAG,CAAEtF,QAAS,EAAGC,OAAQ,MACzBsF,SAAG,CAAEvF,QAAS,EAAGC,OAAQ,MACzBuF,OAAG,CAAExF,QAAS,EAAGC,OAAQ,MACzBwF,OAAG,CAAEzF,QAAS,EAAGC,OAAQ,MACzByF,aAAI,CAAE1F,QAAS,EAAGC,OAAQ,MAC1B0F,SAAG,CAAE3F,QAAS,EAAGC,OAAQ,MACzB2F,SAAG,CAAE5F,QAAS,EAAGC,OAAQ,MACzB4F,SAAG,CAAE7F,QAAS,EAAGC,OAAQ,MACzB6F,SAAG,CAAE9F,QAAS,EAAGC,OAAQ,MACzB8F,SAAG,CAAE/F,QAAS,EAAGC,OAAQ,MACzB+F,SAAG,CAAEhG,QAAS,EAAGC,OAAQ,MACzBgG,SAAG,CAAEjG,QAAS,EAAGC,OAAQ,MACzBiG,SAAG,CAAElG,QAAS,EAAGC,OAAQ,MACzBkG,SAAG,CAAEnG,QAAS,EAAGC,OAAQ,MACzBmG,SAAG,CAAEpG,QAAS,EAAGC,OAAQ,MACzBoG,SAAG,CAAErG,QAAS,EAAGC,OAAQ,MACzBqG,SAAG,CAAEtG,QAAS,EAAGC,OAAQ,MACzBsG,eAAI,CAAEvG,QAAS,EAAGC,OAAQ,MAC1BuG,eAAI,CAAExG,QAAS,EAAGC,OAAQ,MAC1BwG,eAAI,CAAEzG,QAAS,EAAGC,OAAQ,MAC1ByG,eAAI,CAAE1G,QAAS,EAAGC,OAAQ,MAC1B0G,SAAG,CAAE3G,QAAS,EAAGC,OAAQ,MACzB2G,SAAG,CAAE5G,QAAS,EAAGC,OAAQ,MACzB4G,UAAI,CAAE7G,QAAS,EAAGC,OAAQ,MAC1B6G,UAAI,CAAE9G,QAAS,EAAGC,OAAQ,MAC1B8G,SAAG,CAAE/G,QAAS,EAAGC,OAAQ,SAIrC+G,MAAO,CACHhU,MAAO,QACPiE,SAAU,mCACV4I,SAAU,CACN1B,aAAc,QACdtF,KAAM,QACNuF,aAAc,2BACdC,YAAa,sBACbI,UAAW,MACXH,WAAY,SACZC,gBAAiB,KACjBT,oBAAqB,KACrBmJ,OAAQ,OACRvI,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV5B,kBAAmB,IACnBG,eAAgB,IAChB2B,UAAW,EACXD,WAAY,GACZzB,QAAS,MAIrB0J,IAAK,CACDlU,MAAO,MACPiE,SAAU,iCACV4I,SAAU,CACN1B,aAAc,0BACdtF,KAAM,0BACNuF,aAAc,2BACdN,oBAAqB,KACrBC,iBAAkB,WAClBC,cAAc,EACda,aAAc,OACdsI,WAAY,oBACZC,gBAAiB,EACjB/I,YAAa,sBACbC,WAAY,SACZC,gBAAiB,KACjBE,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,MACnBC,SAAU,GACV5B,kBAAmB,KACnBC,gBAAiB,EACjBE,eAAgB,IAChB2B,UAAW,EACXD,WAAY,GACZzB,QAAS,OC/LlB,IAiDM6J,GAA4C,CACrD7L,IAlDwC,CACxC3C,KAAM,sBACNsF,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIlB,SAAU,EACVuB,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACX3B,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIyB,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX3B,eAAgB,IAChBH,kBAAmB,GACnBE,iBAAkB,QAyB1BzB,IArBwC,CACxChD,KAAM,oBACNsF,aAAc,oBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdS,aAAc,UACdJ,UAAW,MACXC,SAAU,CAAC,CACPK,kBAAmB,GACnBC,SAAU,GACVzB,cAAe,IACf0B,WAAY,KACZC,UAAW,EACX9B,kBAAmB,EACnBkK,kBAAmB,QAsEdC,GAA6C,CACtD/L,IA/DyC,CACzC3C,KAAM,sBACNsF,aAAc,sBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACX3B,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIyB,kBAAmB,MACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACX3B,cAAe,EACfH,kBAAmB,GACnBE,iBAAkB,KAClBE,QAAS,KAsCjB3B,IAlCyC,CACzChD,KAAM,oBACNsF,aAAc,oBACdgJ,WAAY,sBACZ7I,WAAY,SACZC,gBAAiB,GACjBF,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXI,aAAc,WACdH,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,OACVC,WAAY,OACZC,UAAW,EACX3B,cAAe,GACfH,kBAAmB,GACnBE,iBAAkB,MAEtB,CACIyB,kBAAmB,MACnBC,SAAU,GACV5B,kBAAmB,EACnBE,iBAAkB,KAClB4B,UAAW,EACXD,WAAY,KACZxB,mBAAoB,EACpBC,iBAAkB,SASjB8J,GAAmC,CAC5C3O,KAAM,yBACNsF,aAAc,yBACdG,WAAY,SACZC,gBAAiB,GACjBF,YAAa,yBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXuI,gBAAiB,GACjBtK,mBAAoB,IACpBI,cAAe,IACfH,kBAAmB,IAEvB,CACI2B,kBAAmB,KACnBC,SAAU,MACVC,WAAY,MACZC,UAAW,EACXuI,gBAAiB,GACjBtK,mBAAoB,IACpBI,eAAgB,IAChBH,kBAAmB,IAEvB,CACI2B,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXuI,gBAAiB,GAEjBtK,mBAAoB,OACpBQ,mBAAoB,OACpBJ,eAAgB,IAChBH,kBAAmB,MAIlBsK,GAAmC,CAC5C7O,KAAM,0BACNsF,aAAc,0BACdG,WAAY,SACZC,gBAAiB,GACjBT,oBAAqB,KACrBO,YAAa,sBACbD,aAAc,2BACdK,UAAW,MACXC,SAAU,CACN,CACIK,kBAAmB,MACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXuI,gBAAiB,GACjBrK,kBAAmB,IAEvB,CACI2B,kBAAmB,KACnBC,SAAU,KACVC,WAAY,KACZC,UAAW,EACXuI,gBAAiB,GACjBrK,kBAAmB,IAEvB,CACI2B,kBAAmB,KACnBC,SAAU,GACVC,WAAY,GACZC,UAAW,EACXuI,gBAAiB,GACjBrK,kBAAmB,IACnBC,gBAAiB,EACjBE,eAAgB,IAChBI,mBAAoB,WCxMzB,MAAMgK,GAA4C,CACrrtD,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,WAAO,SACP,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,iBAAQ,SACR,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,MAAO,SACP,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,SACR,OAAQ,UAICC,GAAe,CACxBjM,IAAK,CACD,+HACA,wGACA,wDAEJL,IAAK,CACD,kDACA,4BACA,oCAKKuM,GAA0C,CAEnD,eAAM,OACN,eAAM,QACN,2BAAQ,gBACR,2BAAQ,cACR,uCAAU,UACV,qBAAO,WACP,2BAAQ,eACR,iCAAS,SACT,qBAAO,QACP,qBAAO,QACP,eAAM,OACN,6CAAW,SACX,2BAAQ,WACR,qBAAO,SACP,qBAAO,UACP,qBAAO,QACP,uCAAU,UACV,eAAM,OACN,2BAAQ,UACR,qBAAO,OACP,qBAAO,cACP,iCAAS,cACT,eAAM,UACN,qBAAO,UACP,qBAAO,eACP,qBAAO,OACP,uCAAU,SACV,uCAAU,SACV,iCAAS,oBACT,6CAAW,cACX,iCAAS,iBACT,yDAAa,gBAEb,iCAAS,UACT,iCAAS,aACT,2BAAQ,YACR,iCAAS,SAET,eAAM,SACN,eAAM,SACN,eAAM,SACN,uCAAU,SACV,eAAM,SACN,2BAAQ,UACR,iCAAS,MACT,uCAAU,WACV,qBAAO,OACP,iCAAS,UACT,2BAAQ,QACR,2BAAQ,iBACR,2EAAgB,eAEhB,iCAAS,QACT,2BAAQ,SACR,2BAAQ,OACR,2BAAQ,OACR,iCAAS,SACT,2BAAQ,QAER,CAACD,GAAajM,IAAI,IAAKiM,GAAatM,IAAI,GACxC,CAACsM,GAAajM,IAAI,IAAKiM,GAAatM,IAAI,GACxC,CAACsM,GAAajM,IAAI,IAAKiM,GAAatM,IAAI,GAExC,6CAAgB,QAChB,o5CAGA,+GAAsB,sCAEtB,gQAA+C,gFAEtCwM,GAAkBtQ,OAAOuQ,QAAQF,IAAiBzL,QAAO,CAACC,EAAKC,KACxE,MAAO0L,EAASC,GAAW3L,EAG3B,OAFAD,EAAI4L,GAAWD,EAER3L,IACR,CAEC,oFAAgF,kQCvUvE6L,GAA0C,CACnD,OAAU,CACN9T,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,KAEhB,OAAU,CACNlU,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNlU,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPlU,KAAM,UACNgC,QAAS,sBACT+R,WAAY,OACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,IAAO,CACHlU,KAAM,MACNgC,QAAS,kBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJlU,KAAM,OACNgC,QAAS,mBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNlU,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLlU,KAAM,QACNgC,QAAS,oBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,KAAQ,CACJlU,KAAM,OACNgC,QAAS,mBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,IAEhB,MAAS,CACLlU,KAAM,QACNgC,QAAS,oBACT+R,WAAY,UACZC,QAAS,SACTC,qBAAsB,UACtBC,WAAY,GAEhB,eAAgB,CACZlU,KAAM,eACNgC,QAAS,2BACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,QAAW,CACPlU,KAAM,UACNgC,QAAS,sBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,IAEhB,OAAU,CACNlU,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,GAAM,CACFlU,KAAM,KACNgC,QAAS,iBACT+R,WAAY,OACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,OAAU,CACNlU,KAAM,SACNgC,QAAS,qBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJlU,KAAM,OACNgC,QAAS,mBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,MAAS,CACLlU,KAAM,QACNgC,QAAS,oBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,YAAa,CACTlU,KAAM,YACNgC,QAAS,wBACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,cAAe,CACXlU,KAAM,cACNgC,QAAS,0BACT+R,WAAY,UACZC,QAAS,YACTC,qBAAsB,UACtBC,WAAY,GAEhB,KAAQ,CACJlU,KAAM,OACNgC,QAAS,mBACT+R,WAAY,OACZC,QAAS,YACTG,yBAA0B,CACtB,qBACA,qBACA,sBACA,iBAEJC,qBAAqB,0BAADnR,OAA4B,CAC5C,yBACA,yBACA,yBACA,0BACA,0BACA,qBACFoR,KAAK,MAAK,KACZH,WAAY,IAGPI,GAAYlR,OAAOC,OAAOyQ,ICzL1BS,GAAoB,CAC7B,CAAEC,IAAK,IAAKC,KAAM,GAAIzV,MAAO,IAAKC,OAAQ,KAC1C,CAAEuV,IAAK,IAAKC,KAAM,IAAKzV,MAAO,IAAKC,OAAQ,IAC3C,CAAEuV,IAAK,IAAKC,KAAM,IAAKzV,MAAO,IAAKC,OAAQ,KAC3C,CAAEuV,IAAK,IAAKC,KAAM,GAAIzV,MAAO,GAAIC,OAAQ,KACzC,CAAEuV,IAAK,EAAGC,KAAM,EAAGzV,MAAO,EAAGC,OAAQ,GACrC,CAAEuV,IAAK,IAAKC,KAAM,IAAKzV,MAAO,GAAIC,OAAQ,KAC1C,CAAEuV,IAAK,IAAKC,KAAM,GAAIzV,MAAO,IAAKC,OAAQ,KAC1C,CAAEuV,IAAK,IAAKC,KAAM,IAAKzV,MAAO,IAAKC,OAAQ,IAC3C,CAAEuV,IAAK,IAAKC,KAAM,IAAKzV,MAAO,IAAKC,OAAQ,MAElCyV,GAAiB,EAAE,GAAI,EAAG,IAAK,GAAI,EAAG,IAAK,IAAK,IAAK,KACrDC,GAAiB,EAAE,IAAK,IAAK,IAAK,GAAI,GAAI,IAAK,IAAK,IAAK,ICPzDC,GAAqB,IAAIC,OADD,sBAIxBC,GAA2B,IAAID,OADP,wBAGxBE,GAAoB,8IACpBC,GAAiB,IAAIH,OAAOE,IAE5BE,GAAqB,IAAIJ,OAAO,cAAD5R,OAAe8R,GAAiB,QAK/DG,GAAe,SACfC,GAAgB,SAChBC,GAAe,SACfC,GAAgB,SAChBC,GAAwB,SACxBC,GAAsB,SAEtBC,GAAqB,IAAIX,OAAO,IAAD5R,OAAK,CAC7CiS,GACAC,GACAC,GACAC,GACAC,GACAC,IACFlB,KAAK,IAAG,iBAAiB,KAEdoB,GAA8B,yBAAAxS,OAA4BiS,IAAYjS,OAAGmS,IAAYnS,OAAGqS,GAAqB,UAC7GI,GAA6B,IAAIb,OAAOY,GAAgC,KAExEE,GAA2B,GAAA1S,OAAMiS,GAAY,KAAAjS,OAAIkS,IACjDS,GAA0B,IAAIf,OAAOc,IAGrCE,GAAuB,kGAAA5S,OAAqGiS,GAAY,uBAAAjS,OAAsBkS,GAAa,WAK3KW,GAAuB,IAAIjB,OAAO,IAAD5R,OADX,uBACmC,MAEzD8S,GAAyBrO,EAAmBsO,KAAIC,IAAK,IAAAC,EAAA,OAAmB,QAAnBA,EAAID,EAAMpO,iBAAS,IAAAqO,IAAID,EAAMtO,aAAW0M,KAAK,KAClG8B,GAAkB,IAAAlT,OAAO8S,GAAsB,eAE/CK,GAAwB,iRACxBC,GAAe,IAAIxB,OAAO,IAAD5R,OAAKmT,GAAqB,MAGnDE,GAAwB,KAAArT,OAAQmT,GAAqB,8LAMrDG,GAAuB,IAAI1B,OADD,yBAI1B2B,GAAmB,IAAI3B,OADD,gCAGtB4B,GAAiB,IAAI5B,OAAO,mBAC5B6B,GAAc,IAAI7B,OAAO,SAEzB8B,GAAgB,icAEhBC,GAAgB,ydAEhBC,GAAc,IAAIhC,OAAO,YACzBiC,GAAe,IAAIjC,OAAO,YAC1BkC,GAAe,IAAIlC,OAAO,YAG1BmC,GAA+B,IAAInC,OAAO,IAAD5R,OADT,SACkD,MAGlFgU,GAAyB,IAAIpC,OAAO,IAAD5R,OADX,eAC4C,MAGpEiU,GAAwB,IAAIrC,OAAO,IAAD5R,OADV,SAC2C,MAEnEkU,GAAuC,CAChD,UAAM,GACN,UAAM,GACN,SAAK,EACL,SAAK,EACL,SAAK,EACL,IAAK,IACL,KAAM,KAEGC,GAAiD,CAC1D,UAAM,GACN,UAAM,KAEGC,GAAgD,CACzD,IAAK,KACL,IAAK,MAEIC,GAAuC,GAIvCC,GAAiD,GAEjDC,GAAgD,GAQhDC,GAAoBC,GAA8B,QAAXA,EAAmB,EAAI,EAK9DC,GAAa,YAIbC,GAAmB,UAGnBC,IAAuB,KChHvBC,GAAiBA,KAAA,CAC1BC,QAAS,EACTL,OAAQ,MACR5Y,MAAO,SACPkZ,KAAM,SACNtW,QAAS9B,IACTqY,OAAQ,GACRC,UAAW,SACXlY,KAAM,QACNmY,cAAe,OACfC,UXzB+B,CAC/B7T,KAAM,UACNN,UAAW,UACXoU,kBAAmB,UACnBnT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QWQT2U,UAAW,QACXC,UAAWnW,EACXoW,SAAU,OACVC,KAAM,EACNC,cAAe,OACflQ,IAAK,kCACLmQ,QAAS,GACTC,QAAQ,EACRC,UAAW,SACXC,QA9B0B,CAC1BC,EAAG,EACHC,EAAG,EACHha,MAAO,IACPC,OAAQ,KACRga,KAAM,IACNC,OAAQ,GAyBRC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB5X,eAAgB,MAChB6X,eArC0B,CAC1BT,EAAG,EACHC,EAAG,EACHha,MAAO,IACPC,OAAQ,KACRga,KAAM,IACNC,OAAQ,GAgCRO,QAAS,CACL,IACA,IACA,IACA,KAEJC,QAAQ,EACRjY,YAAY,EACZkY,cAAe,OACfC,eAAgB,+EAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,CACT,QACA,SACA,UAEJC,YAAa,CACTC,iBAAkB,SAClBC,OAAQ,GAEZC,cAAe,CACXD,OAAQ,GAEZE,OAAO,oTAEPC,MAAO,aACPC,IAAK,OACLC,IAAK,OACLC,SAAU,WACVC,QAAS,QACTC,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EACdC,QAAS,kDACTC,gBAAgB,EAChBC,cXrDgD,EAChD,EACA,WACA,EACA,WWkDAC,cXtDgD,EAChD,EACA,WACA,EACA,WWmDAC,gBXvDgD,EAChD,EACA,WACA,EACA,WWoDAC,kBXxDgD,EAChD,EACA,WACA,EACA,WWqDAC,eXzDgD,EAChD,EACA,WACA,EACA,WWuDAC,aAAc,KAILC,GAAyBA,IAAA3Z,YAAC,CACnC4Z,GAAIC,eACD3D,MAGM4D,GAAeA,KAAA,CACxB3D,QAAS,EACTL,OAAQ,MACR5Y,MAAO,SACPkZ,KAAM,SACNtW,QAAS9B,IACTqY,OAAQ,GACRC,UAAW,SACXlY,KAAM,GACNmY,cAAe,OACfC,UX1G+B,CAC/B7T,KAAM,UACNN,UAAW,UACXoU,kBAAmB,UACnBnT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QWyFT2U,UAAWxW,EACXyW,UAAWnW,EACXoW,SAAU,OACVC,KAAM,EACNC,cAAe,OACflQ,IAAK,kCACLmQ,QAAS,GACTE,UAAW,SACXD,QAAQ,EACRE,QAAS,CACLC,EAAG,EACHC,EAAG,EACHha,MAAO,IACPC,OAAQ,KACRga,KAAM,IACNC,OAAQ,GAEZC,eAAe,EACfC,WAAY,GACZC,eAAgB,GAChBC,eAAe,EACfC,iBAAkB,SAClB5X,eAAgB,MAChB6X,eAAgB,CACZT,EAAG,EACHC,EAAG,EACHha,MAAO,IACPC,OAAQ,KACRga,KAAM,IACNC,OAAQ,GAEZO,QAAS,GACTC,QAAQ,EACRjY,YAAY,EACZkY,cAAe,OACfC,eAAgB,GAChBC,iBAAkB,IAClBC,kBAAmB,IACnBC,YAAa,GACbC,YAAa,CACTC,iBAAkB,SAClBC,OAAQ,GAEZC,cAAe,CACXD,OAAQ,GAEZE,OAAQ,GACRC,MAAO,GACPC,IAAK,IACLC,IAAK,IACLC,SAAU,GACVC,QAASjY,EACTkY,gBAAgB,EAChBC,aAAa,EACbC,kBAAkB,EAClBC,oBAAoB,EACpBC,cAAc,EAEdC,QAAS,GACTC,gBAAgB,EAChBC,cX3IgD,EAChD,EACA,WACA,EACA,WWwIAC,cX5IgD,EAChD,EACA,WACA,EACA,WWyIAC,gBX7IgD,EAChD,EACA,WACA,EACA,WW0IAC,kBX9IgD,EAChD,EACA,WACA,EACA,WW2IAC,eX/IgD,EAChD,EACA,WACA,EACA,WW4IAC,aAAc,KAGLK,GAAc,CACvB,CACIza,KAAM,OACN0a,QAAS,YACTjd,MAAO,OACPgE,SAAU,2BACVkZ,WAAY,oCAEhB,CACI3a,KAAM,OACN0a,QAAS,aACTjd,MAAO,OACPgE,SAAU,2BACVkZ,WAAY,qCAEhB,CACI3a,KAAM,WACNvC,MAAO,WACPgE,SAAU,+BACVkZ,WAAY,MAEhB,CACI3a,KAAM,OACNvC,MAAO,SACPgE,SAAU,6BACVkZ,WAAY,OAIPC,GAAmB,CAC5B,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,UAEvD,UAAW,UAAW,UAAW,UAAW,UAAW,UACvD,UAAW,UAAW,UAAW,UAAW,UAAW,WAG9CC,GAAgB,CACzB,UAAW,CACPpd,MAAO,eACPK,MAAO,IACPC,OAAQ,IACR+c,aAAc,CAAC,IAAK,MAExB,UAAW,CACPrd,MAAO,eACPK,MAAO,IACPC,OAAQ,IACR+c,aAAc,CAAC,IAAK,MAExB,WAAY,CACRrd,MAAO,gBACPK,MAAO,IACPC,OAAQ,KACR+c,aAAc,CAAC,IAAK,QAGfC,GAAiB,CAC1BF,GAAc,WACdA,GAAc,WACdA,GAAc,aAILG,GAAmB,CAC5B,CACIxd,MAAO,MACPC,MAAO,QAEX,CACID,MAAO,OACPC,MAAO,UCtPFwd,GAAYC,GACC,QAAfA,EAAKtd,MAQHud,GAAmBD,GACN,gBAAfA,EAAKtd,QAA4Bwd,GAAaF,GAE5CE,GAAgBF,GACH,UAAfA,EAAKtd,OAAoC,SAAfsd,EAAKtd,OAAmC,gBAAfsd,EAAKtd,MAgBtDyd,GAAwBzd,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,EAAgC,OAC7B,QAGE0d,GAAoB1d,IACrBwd,GAAa,CAAExd,WAAY2d,GAAgB3d,GAG1C2d,GAAmB3d,GACrB,CAAC,OAAQ,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAU4d,SAAS5d,G,kCC3C6hC6d,GAAY,SAAAC,GAAI,IAAIC,GAAGD,EAAEA,EAAEE,UAAU,EAAEF,EAAEG,OAAO,IAAIC,MAAM,QAAK,GAAGJ,EAAEC,EAAE,GAAG,EAAEA,EAAEE,OAAO,CAACF,EAAEA,EAAE,GAAL,qBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQI,EAAR,QAAeL,GAAGA,EAAEA,EAAEI,MAAMC,IAAI5I,KAAKuI,EAAEM,QAA/C,+BAAsD,OAAOC,GAAcP,EAAE,IAAIO,GAAc,SAACP,GAAS,IAAPC,EAAM,uDAAJ,EAAWI,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAE,SAACR,EAAEC,GAAH,OAAOD,EAAES,QAAQ,IAAIxI,OAAJ,WAAegI,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAD,GAAC,OAAEA,IAAIC,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEI,EAAEF,SAASF,EAAED,EAAEQ,EAAER,EAAEK,EAAEJ,SAAS,IAAIA,EAAEI,EAAEF,OAAOF,KAAKD,EAAEQ,EAAER,EAAEK,EAAEJ,IAAI,OAAOD,GCCxkD,MA8HMU,GAAmB1b,wBAAA,GA9H+D,CACpFmW,QAAS,KACTL,OAAQ,KACR5Y,MAAO,KACPkZ,KAAM,KACNtW,QAAS,CACL6b,QAAS,KACT1d,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNK,UAAW,OAEXod,SAAU,OACVtd,UAAW,OACXC,WAAY,OACZF,SAAU,QAEdgY,OAAQ,KACRzP,IAAK,KACLmQ,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXX,UAAW,MACXY,QAAS,CACLyE,QAAS,MACTxE,EAAG,MACHC,EAAG,MACHha,MAAO,MACPC,OAAQ,MACRga,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfC,WAAY,KACZE,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB5X,eAAgB,MAChB6X,eAAgB,CACZ+D,QAAS,MACTxE,EAAG,MACHC,EAAG,MACHha,MAAO,MACPC,OAAQ,MACRga,KAAM,MACNC,OAAQ,OAEZlZ,KAAM,KACNmY,cAAe,MACf6B,YAAa,CACTuD,QAAS,KACTtD,iBAAkB,OAClBC,OAAQ,OAEZC,cAAe,CACXoD,QAAS,KACTrD,OAAQ,OAEZ9B,UAAW,CACPmF,QAAS,KACThZ,KAAM,OACNN,UAAW,OACXoU,kBAAmB,QACnBnT,YAAa,OACbC,cAAe,QACfC,cAAe,QACfC,WAAY,OACZ3B,UAAW,OACXW,UAAW,OACXD,UAAW,OACXoB,YAAa,QACbhB,YAAa,QACbf,WAAY,OACZkB,cAAe,OACfC,cAAe,OACfpB,YAAa,OACbQ,OAAQ,OACRL,QAAS,QAEb2U,UAAW,KACXC,UAAW,KACXE,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,OAAQ,KACRjY,WAAY,KACZkY,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBC,YAAa,KACbK,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACVC,QAAS,MACTC,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBC,aAAc,OAEgB,CAC9BmC,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTxE,EAAG,MACHC,EAAG,MACHha,MAAO,MACPC,OAAQ,MACRga,KAAM,MACNC,OAAQ,SAQH0E,GAAmB,SAC5BxB,GAEE,IADFyB,EAA+BC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAGR,GAElC,MAAMU,EAAqC,GACrCC,EAAcrc,YAAA,GAAQwa,GAkB5B,OAhBAhZ,OAAO8a,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBC,MAAMC,QAAQF,GAMrE,CACH,MAAMG,EAAcX,EAAWO,GAEJ,kBAAhBI,IAA0BR,EAAcQ,GAAeH,OATmB,CAAC,IAADI,EACrF,MAAMC,EAA6B,QAAvBD,EAAGZ,EAAWO,UAAS,IAAAK,OAAA,EAApBA,EAAsBlB,QAEjCmB,IACAV,EAAcU,GAAUd,GAAiBS,EAAYR,EAAWO,SASrEJ,GAGEW,GAAqB,SAC9BX,GAEE,IADFH,EAA+BC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAGR,GAElC,MAAMsB,EAAwC,GAgB9C,OAfAxb,OAAO8a,KAAKL,GAAYM,SAAQU,IAC5B,MAAMC,EAAajB,EAAWgB,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAOvC,MAA7Bd,EAAcc,KACdF,EAAiBC,GAAWb,EAAcc,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYvB,QAE5BwB,GAAef,EAAce,KAC7BH,EAAiBC,GAAWF,GAAmBX,EAAce,GAAclB,EAAWgB,SAQ3FD,GAEEI,GAAiC,SAC1ChB,GAEE,IADFH,EAA+BC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAGR,GAElC,MAAM2B,EAAmD,kBAAlBjB,EACjCkB,KAAKC,MAAMxC,GAAYyC,mBAAmBpB,KAC1CA,EAEAqB,EAAuC,GAgB7C,OAfAjc,OAAO8a,KAAKL,GAAYM,SAAQU,IAC5B,MAAMC,EAAajB,EAAWgB,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBR,MAAMC,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYvB,QAE5BwB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAclB,EAAWgB,SAQhHQ,GAoBEC,GAAkB,SAAClD,GAAwE,IAADmD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQ/B,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAGpC,KAClE,MAAMoE,EAAYle,wBAAA,CACd4Z,GAAIC,eACDoE,GACAE,aAAM3D,IA0Eb,OAvEA0D,EAAa9F,YAAWpY,wBAAA,GACjB8Z,KAAe1B,aACf8F,EAAa9F,aAGc,MAA9B8F,EAAa3F,gBACb2F,EAAa3F,cAAavY,YAAA,GACnB8Z,KAAevB,gBAIE,MAAxB2F,EAAa/H,UAAiB+H,EAAa/H,QAAU,GAC9B,MAAvB+H,EAAapI,SAAgBoI,EAAapI,OAAS,OACrB,MAA9BoI,EAAanG,gBAAuBmG,EAAanG,cAAgB,QAC1C,MAAvBmG,EAAa7H,SAAgB6H,EAAa7H,OAAS,IAEzB,MAA1B6H,EAAa5H,YAAmB4H,EAAa5H,UAAY,UACxD4H,EAAqBpC,UAAYtB,EAAK5T,MAAKsX,EAAatX,IAAOsX,EAAqBpC,gBACjFoC,EAAqBpC,QAExBoC,EAAqBnC,cAAgBvB,EAAKtD,UAASgH,EAAahH,QAAWgH,EAAqBnC,oBAC7FmC,EAAqBnC,YAII,MAAZ,QAAjB4B,EAACO,EAAatX,WAAG,IAAA+W,IAAI,MAAYO,EAAatX,IAAM,IACnB,MAAZ,QAArBgX,EAACM,EAAanH,eAAO,IAAA6G,IAAI,MAAYM,EAAanH,QAAU,IACzB,MAAZ,QAAvB8G,EAACK,EAAajH,iBAAS,IAAA4G,IAAI,MAAYK,EAAajH,UAAY,UACzC,MAAvBiH,EAAalH,SAAgBkH,EAAalH,QAAS,GAED,mBAA1CkH,EAAape,QAAgB8b,UAA4D,MAAlCsC,EAAape,QAAQtB,YACpF0f,EAAape,QAAQtB,WAAc0f,EAAape,QAAgB8b,gBACxDsC,EAAape,QAAgB8b,UAEzCsC,EAAape,QAAOE,wBAAA,GAAQhC,KAA4BkgB,EAAape,gBAC7Doe,EAAape,QAAgB8b,SAEG,MAAZ,QAAxBkC,EAACI,EAAa1G,kBAAU,IAAAsG,IAAI,MAAYI,EAAa1G,WAAa,IAC1B,MAAZ,QAA5BuG,EAACG,EAAazG,sBAAc,IAAAsG,IAAI,MAAYG,EAAazG,eAAiB,IAChC,MAAZ,QAA9BuG,EAACE,EAAavG,wBAAgB,IAAAqG,IAAI,MAAYE,EAAavG,iBAAmB,UAChD,MAA9BuG,EAAaxG,gBAAuBwG,EAAaxG,eAAgB,GACnC,MAA9BwG,EAAa3G,gBACT2G,EAAa1G,YAAc0G,EAAazG,gBAAkByG,EAAape,QAAQzB,YAEnF6f,EAAa3G,eAAgB,GAEjC2G,EAAatG,eAAc5X,wBAAA,GHlRD,CAC1BmX,EAAG,EACHC,EAAG,EACHha,MAAO,IACPC,OAAQ,KACRga,KAAM,IACNC,OAAQ,IG8QD4G,EAAatG,gBAGO,MAAvBsG,EAAapG,QAAyC,SAAvBoG,EAAahhB,QAC5CghB,EAAapG,QAAS,GAGrBoG,EAAqBE,cAAgB5D,EAAKpB,iBAAgB8E,EAAa9E,eAAkB8E,EAAqBE,oBAC3GF,EAAqBE,iBACOjC,IAAhC+B,EAAa9E,iBAA8B8E,EAAa9E,gBAAiB,GAExE8E,EAAqBrC,WAAarB,EAAK5B,WAAUsF,EAAatF,SAAYsF,EAAqBrC,iBAC5FqC,EAAqBrC,SAExBqC,EAAa3E,kBAAiB2E,EAAa3E,gBd3QA,EAChD,EACA,WACA,EACA,YcwQK2E,EAAa1E,oBAAmB0E,EAAa1E,kBd5QF,EAChD,EACA,WACA,EACA,YcyQK0E,EAAa5E,gBAAe4E,EAAa5E,cd7QE,EAChD,EACA,WACA,EACA,Yc0QK4E,EAAa7E,gBAAe6E,EAAa7E,cd9QE,EAChD,EACA,WACA,EACA,Yc2QK6E,EAAazE,iBAAgByE,EAAazE,ed/QC,EAChD,EACA,WACA,EACA,Yc4Q6C,qBAAlCyE,EAAalF,mBAAkCkF,EAAalF,kBAAmB,GACjD,qBAA9BkF,EAAahF,eAA8BgF,EAAahF,cAAe,GAC7EgF,EAAapH,gBAAeoH,EAAapH,cAAgB,QAEvDoH,GAGEG,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAOtD,GAEL,OADAuD,QAAQC,MAAMxD,IACP,IAGFyD,GAA6BH,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAOtD,GAEL,OADAuD,QAAQC,MAAMxD,IACP,IAIF0D,GAA4BA,CACrClE,EACAmE,KAEA,GAAuB,YAAnBnE,EAAKvD,WAAqD,YAA1BuD,EAAK7C,iBACrC,MAAO,CACHiH,WAAW,EACX3e,OAAQ+b,GAAiBxB,IAIjC,MAAM6B,EAAcrc,wBAAA,GAAQwa,GAAI,IAAEzD,QAAS,GAAIU,eAAgB,KAE/D,MAAO,CACHmH,WAAW,EACX3e,OAAQ+b,GAAiBK,KAK3BwC,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCC,KAAKC,IAAIH,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBG,GAAkBA,CAACC,EAAmCC,KACxD,MACI9H,OAAQ+H,EACRhiB,OAAQiiB,EACRliB,MAAOmiB,EACPpI,EAAGqI,EACHpI,EAAGqI,EACHpI,KAAMqI,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZ7H,OAAQqI,EACRtiB,OAAQuiB,EACRxiB,MAAOyiB,EACP1I,EAAG2I,EACH1I,EAAG2I,EACH1I,KAAM2I,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOP,GAAqBQ,EAAYM,IACjCd,GAAqBS,EAAYM,IACjCf,GAAqBU,EAAWM,IAChChB,GAAqBW,EAAOM,IAC5BjB,GAAqBY,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACIjJ,QAASkJ,EACTxI,eAAgByI,GAEhBH,EADGI,EAASC,YACZL,EAAQ,+BAERhJ,QAASsJ,EACT5I,eAAgB6I,GAEhBN,EADGO,EAASH,YACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,IC5YlCG,GAAqBxiB,IAC9B,IACI,OAAOA,EAAKyiB,WAAW,4BAA6B,MACtD,MAAO7F,GAEL,OADAuD,QAAQC,MAAMxD,GACP5c,IAGF0iB,GAAuBtI,IAChC,IACI,OAAOA,EAAOqI,WAAW,4BAA6B,MACxD,MAAO7F,GAEL,OADAuD,QAAQC,MAAMxD,GACPxC,IAIFuI,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOjG,GAEL,OADAuD,QAAQC,MAAMxD,IACP,ICpBFkG,GAAeA,CAAC9iB,EAAc+iB,EAAY7hB,KACnD,MAAM0hB,EAAOI,SAASC,cAAc,KAEpCL,EAAKM,SAAWljB,EAChB4iB,EAAKO,KAAOC,OAAOC,IAAIC,gBAAgBP,GACvCH,EAAKW,QAAQC,YAAc,CAACtiB,EAAM0hB,EAAKM,SAAUN,EAAKO,MAAM9O,KAAK,KAEjE,MAAMoP,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAMP,OACNQ,SAAS,EACTC,YAAY,IAGhBjB,EAAKkB,cAAcL,GACnBb,EAAKmB,UCHHC,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACjiB,GAAU,QAETkiB,GAAqBlhB,OAAOuQ,QAAQqQ,IAAahc,QAA+B,CAACC,EAAKC,KACxF,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAEGwc,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsB/hB,OAAOuQ,QAAQ8Q,IAAczc,QAA+B,CAACC,EAAKC,KAC1F,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAEGmd,GAAmC,CACrC9kB,OAAQ,SACR8Z,OAAQ,SACRiL,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACL5C,KAAM,OACN6C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChBC,KAAM,QACN,cAAe,SAEbC,GAAkBziB,OAAOuQ,QAAQyR,IAAUpd,QAA+B,CAACC,EAAKC,KAClF,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAEG6d,GAA0G,CAC5G,OAAU,CACNhiB,IAAK,IAET,KAAQ,CACJA,IAAK,SACL/D,KAAM,QAEV,OAAU,CACN+D,IAAK,wBACL/D,KAAM,iBACNmY,UAAW,SAEf,MAAS,CACLpU,IAAK,eACL/D,KAAM,QACNmY,UAAW,SAEf,QAAW,CACPpU,IAAK,uBACL/D,KAAM,WACNmY,UAAW,QACXD,OAAQ,CAAC,WAGX8N,GAAY3iB,OAAOuQ,QAAQmS,IAAkB9d,QAA+B,CAACC,EAAKC,KACpF,MAAO8d,EAAWzB,GAAerc,EAGjC,OAFAD,EAAIsc,EAAYzgB,KAAOkiB,EAEhB/d,IACR,IAWUge,GAA2BA,CACpC7J,EACA8J,KAEA,MAAM,KACFlmB,EAAI,KACJyY,EAAI,YACJsB,EAAW,UACXxB,EAAS,OACT6B,EAAM,IACNE,EAAG,IACHC,EAAG,IACH/R,EAAG,QACHmQ,EAAO,UACPE,EAAS,SACT2B,EAAQ,QACRO,EAAO,UACPzC,EAAS,MACT+B,EAAK,eACLT,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,WAChBpY,EAAU,QACVgY,EAAO,MACP3a,EAAK,aACLwc,EAAY,UACZlD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTD,GACAmE,EACE+J,EAAiB3D,GAAkBxiB,GACnComB,EAAmB1D,GAAoBtI,GACvCiM,EAA2B3D,GAAoB9I,GAC/C0M,EAAiBtC,GAAYzL,GAC7BgO,EAAsB9B,GAAanM,GACnCkO,EAAkBpB,GAAStmB,GAC3B2nB,EAAqC,eAAlBtO,EACnB4N,GACE,CACI3N,EAAUpU,OACVkU,EACAD,EAAO5D,KAAK,MACdA,KAAK,MAET,SACNqS,EAAkD,OAAZpL,QAAY,IAAZA,IAAgB,IAAhD,SAAExb,EAAQ,OAAE6mB,GAAiBD,EAANE,EAAIzE,YAAAuE,EAAA,uBAsDjC,MAAO,CACHlG,UArDYxgB,IAASmmB,GAClB/L,IAAWgM,GACXxM,IAAmByM,QACAtI,IAAnBuI,QACwBvI,IAAxBwI,QACoBxI,IAApByI,QACqBzI,IAArB0I,EAgDH5kB,OA/CQD,YAAA,CACRmW,QAAS,QACT/X,KAAMmmB,EACNU,MAAM,GAAD5jB,OAAKwV,GACVvX,KAAM6Y,EAAY1F,KAAK,KACvBxR,KAAoB,OAAdyjB,QAAc,IAAdA,IAAkB,GACxBlM,OAAQgM,EACR9L,MACAC,MACAuM,OAAQtM,EACRuM,UAAWhM,EACXzC,UAA8B,OAAnBiO,QAAmB,IAAnBA,IAAuB,OAClC/K,GAAInB,EACJva,SAAQ8B,YAAA,CACJolB,QAASvlB,EACT2Y,OAAQiM,EACRY,KAAMnN,EACNoN,IAAKrN,EACLsN,QAAS,SACTC,gBAAgB,GACbtnB,GAEPunB,QAAS,SACTzE,KAAM,CACF0E,UAAS7N,EAAQiD,SAAS,KAC1B6K,YAAW9N,EAAQiD,SAAS,KAC5B8K,WAAU/N,EAAQiD,SAAS,KAC3B+K,aAAYhO,EAAQiD,SAAS,KAC7BgL,cAAajO,EAAQiD,SAAS,KAC9BiL,aAAYlO,EAAQiD,SAAS,KAC7BkL,eAAcnO,EAAQiD,SAAS,KAC/BmL,cAAapO,EAAQiD,SAAS,MAElCoL,OAAuB,OAAftB,QAAe,IAAfA,IAAmB,SAC3BW,QAAS,SACTR,OAAwB,OAAhBF,QAAgB,IAAhBA,IAAoBE,EAE5B5iB,MAAOmiB,EACDA,EAAO6B,UAAU,cACH,YAAdlP,EACIF,EACAnQ,GACPoe,KCxLL5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAACjiB,GAAU,QAETkiB,GAAqBlhB,OAAOuQ,QAAQqQ,IAAahc,QAA+B,CAACC,EAAKC,KACxF,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAaGkd,GAAsB/hB,OAAOuQ,QAXU,CACzC+Q,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6Cld,QAA+B,CAACC,EAAKC,KAC1F,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAqBG4d,GAAkBziB,OAAOuQ,QAnBU,CACrCrT,OAAQ,SACR8Z,OAAQ,SACRiL,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACL5C,KAAM,OACN6C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfqC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+BrgB,QAA+B,CAACC,EAAKC,KAClF,MAAOqc,EAAaC,GAAYtc,EAGhC,OAFAD,EAAIuc,GAAYD,EAETtc,IACR,IAEGqgB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6BnM,IAAgE,IAADsK,EAAA8B,EAAAC,EACrG,MAAM,IACFnO,EAAG,UACHhC,EAAS,YACToQ,EAAW,UACXC,EAAS,IACTpO,EAAG,KACHqO,EAAI,UACJC,EAAS,GACTrN,EAAE,MACFqL,EAAK,aACLiC,EAAY,KACZ9oB,EAAI,UACJ+oB,EAAS,KACTC,EAAI,MACJC,EAAK,SACLC,EAAQ,QACRC,EAAO,YACPC,GACAhN,EACEkK,EAAiBhC,GAAmB0E,GACpCzC,EAAsBpB,GAAoB7M,IACzCkO,EAAiB6C,GAAYxD,GAAgBgD,GAAW7L,MAAM,KAG/DsM,EAA6F,QAAtE5C,EAAIoC,EAAeA,EAAarG,WAAW,WAAY,SAAM1E,SAAS,IAAA2I,IAC3FkC,EAAOA,EAAKnG,WAAW,WAAY,IAAM,GAE3C8G,EAAwBD,EAAwBtM,MAAM,MACtDwM,ENpJ4BpN,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACFM,SAASN,EAAKtd,OM4IgB2qB,CAAsB,CAClD3qB,MAAsB,OAAf0nB,QAAe,IAAfA,IAAmB,YACxB+C,EAAsBxM,OAAS,EAC/B,CAAC,IAAD9Z,OACMsmB,EAAsB,GAAG9G,WAAW,KAAM,IAAG,QAC9C8G,EAAsBG,MAAM,IACjCrV,KAAK,MACLiV,EACAjD,EAA2B0C,EAC3BA,EAAUtG,WAAW,WAAY,IACjC,GACAkH,EAAYjB,EAAY,GAAGkB,kBAE3B/J,EAAWnE,KAqCjB,MAAO,CACH8E,WAAW,EACX3e,OAtCcD,wBAAA,GACXie,GAAQ,IACX7f,OACAsa,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAArX,OAAMqX,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAAtX,OAAMsX,GACpC,IACNjC,UAA8B,OAAnBiO,QAAmB,IAAnBA,IAAuBzkB,EAClCsY,OAAQoP,EACRjR,UAAyB,OAAd+N,QAAc,IAAdA,IAAkBlkB,EAC7BiY,MAAgD,QAA3CmO,EAAiC,QAAjCC,EAAEE,EAAUA,EAAU5L,OAAS,UAAE,IAAA0L,OAAA,EAA/BA,EAAiCoB,gBAAQ,IAAArB,IAAI,GACpD1pB,MAAsB,OAAf0nB,QAAe,IAAfA,IAAmB,SAC1B/N,KAAoB,SAAdoQ,GAAwBM,EAAUA,EAAUtC,EAClD9M,YAAamP,IAEO,UAAdL,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACdrgB,IAAKmhB,EACL9Q,UAAW,SACXC,QAAOlX,wBAAA,GACAie,EAAS/G,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApB8M,GAA8BlI,MAAMC,QAAQ6K,GACpD3P,SAAqB,OAAX2P,QAAW,IAAXA,IAAe,IAAIpT,KAAI8T,GAAUxB,GAAewB,KAC1DroB,WAAyB,aAAb4nB,EACZvP,kBAA4B,MAATmP,EAAgB,IAAG,GAAAhmB,OAAMgmB,GAC5CpP,iBAA2B,MAAToP,EAAgB,IAAG,GAAAhmB,OAAMgmB,GAC3CrP,eAAgByM,EAChB7L,SAAU,GAAAvX,OAAGuY,GAAKuO,SAAS,EAAG,KAC9BhP,QAASvH,GAAatM,IAAI,OCvNlC,IAAM8iB,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAA6D,uDAA9C,EAAGC,EAA2C,uDAA5BH,GACzDI,EAAMF,EACNG,EAAMF,EACNG,EAASD,EACTE,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiBxS,KAEjBqS,GAAUG,EAEVH,GADAG,GAAaC,GAIV9J,KAAKwJ,IAAIE,EAAQD,IAGtBO,EAAa,WAIf,OAFAJ,GAAgB,EADhBF,GAAUG,GAMRI,EAAQ,WAA6C,IAA5CX,EAA2C,uDAA5BE,EAAKD,EAAuB,uDAARE,EAC9CD,EAAMF,EACNG,EAAMF,EACNG,EAASH,EACTK,EAAe,GACfC,EAAY,IACZF,EAAgBJ,GAGdW,EAAY,kBAAMR,GAClBS,EAAY,SAACC,GAAD,OAAuBV,EAASU,GAE5CC,EAAmB,eAACC,EAAD,uDAAeZ,EAAf,OAA0BC,EAAgBW,GAC7DC,EAAmB,kBAAMZ,GACzBa,EAAqB,WAGvB,OADAZ,GAAgB,EADhBF,EAASC,GAKPc,EAAkB,kBAAMb,GACxBvS,EAAS,kBAAMuS,GAAgB,GAErC,MAAO,CACHK,QACAD,aACAD,gBACA1S,SACA6S,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFrB,EACC,uDADc,IAEXsB,EAAkBxB,GAChByB,EAAYxB,KACXwB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUb,iBACP,CAEH,GAAIa,EAAUX,cAAgBd,GAAyB,MAClDwB,EAAkBC,EAAUd,iBAQ7C,IAAMiB,EAAehL,KAAKyJ,IAAIH,EAActJ,KAAKwJ,IAAIoB,EAAiBxB,KAEtE,OADI4B,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HJ,MAAMC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAInZ,EAASoZ,EACTI,EAAQH,EACRI,EAA6C,kBAAhBH,EAAwB,GAAAhpB,OAAMgpB,EAAW,MAAOA,EAC7EI,EAAsC,kBAAhBJ,EAA2BA,EAAcK,WAAWL,EAAYxJ,WAAW,KAAM,KACvG8J,EAASL,EAEb,MAAO,CACHM,QAASA,IAAA,GAAAvpB,OAAS,CAACkpB,EAAOxZ,EAAQyZ,EAAMG,GAAQE,QAAOC,GAAiB,KAATA,IAAarY,KAAK,KAAI,WACrFsY,YAAaA,KAAA,CAASR,QAAOC,OAAMG,SAAQF,eAAc1Z,WACzDia,UAAUC,GAEN,OADAla,EAASka,EACFC,MAEXC,SAASC,GAEL,OADAb,EAAQa,EACDF,MAEXG,QAAQC,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASb,GACTa,EAON,OANAd,EAAiC,kBAAnBe,EAA2B,GAAAlqB,OAChCkqB,EAAc,MACjBA,EACNd,EAAyC,kBAAnBc,EAChBA,EACAb,WAAWa,EAAe1K,WAAW,KAAM,KAC1CqK,MAEXM,UAAUC,GAEN,OADAd,EAASc,EACFP,Q,aC1CNQ,GAA4B,kBAAoBC,GrBc1C,4CqBZNC,GAAmB,SAACC,GAAD,OAA4B,OAACA,QAAD,IAACA,IAAW,IACnEzX,KAAI,gBAAG/T,EAAH,EAAGA,MAAOyrB,EAAV,EAAUA,OAAV,gBAA0BA,EAA1B,YAAoCzrB,MAASoS,KAAK,MAC9CkZ,GAAe,SAAfA,EAAgBI,GAAD,OAA+CA,EACrEA,EAAmB3Q,MAAM,KACtBhH,KAAI,SAACC,EAAO2X,GAAW,IAAD,EACK3X,EAAM+G,MAAM,KADjB,oBACZ0Q,EADY,KAGnB,MAAO,CAAEzrB,MAHU,KAGHyrB,SAAQlS,GAAIoS,EAAQ,MAE1CL,ErBGa,4CsBjBZ,MAAMM,GAAgBC,UACzB,MAAMC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAgB,aAADhrB,OAAeC,oBAE/C,MAAMgrB,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQ/Q,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvGgR,MAAM,gCAAiC,CAChDC,OAAQ,OACRC,QAASR,EACTluB,KAAMquB,EACNM,SAAU,YCbX,IAAMC,GAAqB,SAAC,GAgB5B,IAfHC,EAeE,EAfFA,MACAC,EAcE,EAdFA,aAcE,IAbFC,uBAaE,SAZFC,EAYE,EAZFA,SACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDR,GAAOvO,QAAQgP,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQ,WACAV,GAAOvO,QAAQgP,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAW,SAACzS,GACJgS,GAAiBhS,EAAEgS,kBACnBF,GAAOvO,QAAQgP,KAAK,qBAAsBT,EAAO9R,EAAE9Y,MAC/B,KAAV,OAAVkrB,QAAU,IAAVA,OAAA,EAAAA,EAAapS,MACH,eAAVA,EAAE9Y,KAAkC,cAAV8Y,EAAE9Y,KAC5B8Y,EAAE0S,iBACFT,GAAS,SAAA3mB,GAAG,OAAI0Y,KAAKyJ,IAAI,EAAGsE,EAAezmB,EAAM,GAAKymB,MAEvC,cAAV/R,EAAE9Y,KAAiC,YAAV8Y,EAAE9Y,KAChC8Y,EAAE0S,iBACFT,GAAS,SAAA3mB,GAAG,OAAI0Y,KAAKyJ,IAAI,EAAGsE,EAAezmB,EAAM,GAAKymB,MAEvC,UAAV/R,EAAE9Y,KAA6B,MAAV8Y,EAAE9Y,IAC5BgrB,IAEe,WAAVlS,EAAE9Y,MACC,OAARirB,QAAQ,IAARA,YC3CT,MCAMQ,GAAkB,WAAyD,IAAxDC,EAAO1R,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8Bf,EAAMe,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEjc,EAAS,GACb,MAAM4tB,EAAmBD,EAAQzS,OACjC,IAAK,IAAItR,EAAI,EAAGA,EAAIsR,EAAQtR,IACxB5J,GAAU2tB,EAAQE,OAAO9O,KAAK+O,MAAM/O,KAAKgP,SAAWH,IAExD,OAAO5tB,GAkCJ,MAAMguB,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQjS,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7CgS,EAAA9M,SAASgN,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAGtCC,GAAgB,qCAChBC,GAAY,SAACC,GAAmC,IAAtBC,IAASvS,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMwS,EAAUF,EAAI/S,QAAQ,IAAK,IACjC,IAAIkT,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQvT,QAAmC,IAAnBuT,EAAQvT,OAChCwT,EAAW,CACPI,SAAS,GAAD1tB,OAAIqtB,EAAQ,IAAErtB,OAAGqtB,EAAQ,IAAM,IACvCK,SAAS,GAAD1tB,OAAIqtB,EAAQ,IAAErtB,OAAGqtB,EAAQ,IAAM,IACvCK,SAAS,GAAD1tB,OAAIqtB,EAAQ,IAAErtB,OAAGqtB,EAAQ,IAAM,IACvCK,SAAS,GAAD1tB,OAAc,QAAdutB,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAGvtB,OAAa,QAAbwtB,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQvT,QAAmC,IAAnBuT,EAAQvT,OAChCwT,EAAW,CACPI,SAASL,EAAQ5G,MAAM,EAAG,GAAI,IAC9BiH,SAASL,EAAQ5G,MAAM,EAAG,GAAI,IAC9BiH,SAASL,EAAQ5G,MAAM,EAAG,GAAI,IAC9BiH,SAA4B,QAApBD,EAACJ,EAAQ5G,MAAM,EAAG,UAAE,IAAAgH,IAAI,KAAM,KAI9C,OAAOH,EAASva,KAAIC,GAAS2a,MAAM3a,GAAS,IAAMA,IAAOyT,MAAM,EAAG2G,EAAY,EAAI,GACpF,MAAOzT,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG8M,MAAM,EAAG2G,EAAY,EAAI,KAKxCQ,GAAiBA,KAC1B,IAAIC,GAAQ,EACZ,IAAUC,EAIV,OAJUA,EACNC,UAAUC,WACPD,UAAUE,QACT9N,OAAe+N,OAHP,2TAA2TC,KAAKL,IAAI,4hDAA4hDK,KAAKL,EAAEM,OAAO,EAAE,OAAKP,GAAQ,GAIt4DA,GAGJ,SAASQ,KAA8D,IAAD,IAAAC,EAAAzT,UAAAf,OAA/CyU,EAAI,IAAAlT,MAAAiT,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA3T,UAAA2T,GAC9B,OAAOD,EAAK/E,OAAOiF,SAASrd,KAAK,K,iwBClF9B,MAAMsd,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAAC3V,EAAoB4V,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFtX,EAAO,OACPX,EAAM,OACN1C,EAAM,eACNgD,EAAc,KACd1a,EAAI,SACJwa,EAAQ,eACRZ,EAAc,MACdS,EAAK,YACLN,GACAqC,EAEJ,GAAI1E,IAAWsa,EAAc,OAAO5V,EAEpC,MAAMkW,EAA2B,QAAjBN,EAAyBte,GAAkBD,GACrD8e,EAA6B,QAAjBP,GAA0B,MAAMZ,KAAK/W,GACjDA,EAAMgD,QAAQ,MAAO,OACJ,QAAjB2U,GAA0B,MAAMZ,KAAK/W,GACjCA,EAAMgD,QAAQ,MAAO,OACrBhD,EAEV,OAAAzY,wBAAA,GACOwa,GAAI,IACPpc,KAAmB,QAAfiyB,EAAEK,EAAQtyB,UAAK,IAAAiyB,IAAIjyB,EACvB0X,OAAQsa,EACR5X,OAAuB,QAAjB8X,EAAEI,EAAQlY,UAAO,IAAA8X,IAAI9X,EAC3BR,eAAuC,QAAzBuY,EAAEG,EAAQ1Y,UAAe,IAAAuY,IAAIvY,EAC3CG,YAAaA,EAAY/D,KAAIC,IAAK,IAAAuc,EAAA,OAAkB,QAAlBA,EAAIF,EAAQrc,UAAM,IAAAuc,IAAIvc,KACxD8E,QAAyB,QAAlBqX,EAAEE,EAAQvX,UAAQ,IAAAqX,IAAIrX,EAC7BP,SAA2B,QAAnB6X,EAAEC,EAAQ9X,UAAS,IAAA6X,IAAI7X,EAC/BH,MAAOkY,EACP7X,eAAiC,QAAjBsX,GAAiCtX,K,wDCvBlD,MAcM+X,GAAkB,SAACC,GAA0F,IAAxDC,EAA6C7U,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAM8U,EAAuBhxB,wBAAA,GACtB+wB,GACAD,EAAgBG,eAEjBC,EAAsB7c,IAAmB,IAAD8c,EAC1C,OAAqC,QAArCA,EAAOH,EAAwB3c,UAAM,IAAA8c,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAIte,OAAO,OAAD5R,OAAQG,OAAO8a,KAAKgV,GAAS7e,KAAK,KAAI,SAE7D+e,EAAiBH,EAASjW,MAAMmW,GAEtC,OAAO7wB,cAAC+wB,IAAMC,SAAQ,CAAAC,SACjBH,EAAepd,KAAI,CAACC,EAAO2X,IACpBA,EAAQ,IAAM,EAAUtrB,cAAC+wB,IAAMC,SAAQ,CAAAC,SAA4Btd,GAAK,GAAAhT,OAAxBgT,EAAK,KAAAhT,OAAI2qB,IACtDsF,EAAQjd,MAHKgd,IAO1BO,EAAwB,CAC1B,sBAAwBC,GACbX,EAAmB,uBAAuBrQ,WAAW,eAAgBgR,GAEhF,sBAAwBA,GACbX,EAAmB,uBAAuBrQ,WAAW,eAAgBgR,GAEhF,6BAA+BC,GACpBZ,EAAmB,8BAA8BrQ,WAAW,aAAa,GAADxf,OAAKywB,IAExF,gCAAkCC,GACvBX,EACHF,EAAmB,iCACnB,CAAEa,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDd,EACHF,EAAmB,iCACnB,CAAEe,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOnB,EACHF,EAAmB,8BACnB,CAAEkB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOpB,EACHF,EAAmB,kCACnB,CAAEsB,cAGV,4BAA8BC,GACnBrB,EACHF,EAAmB,6BACnB,CAAEuB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAE+B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAE+B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEO1B,EACHF,EAAmB,kCACnB,CAAEyB,UAASC,WAAUC,SAAQC,sBAGrC,oBACIM,GAEOhC,EACHF,EAAmB,qBACnB,CAAEkC,eAKd,OAAApzB,wBAAA,GACO8wB,GAAe,IAClBG,cAAeD,EACfn0B,WAAUmD,wBAAA,GACHgxB,GACAY,MC1IFyB,GAAUC,mBAAkB,CAACC,EAAKC,KAC3C,MAAMC,EAAsB,MAExB,MAAMC,EAAM,IAAIjS,IAAID,OAAOmS,SAASpS,MAC9BqS,EAAeF,EAAIG,aACnBC,EAAyBF,EAAaJ,IAAI,YAIhD,GAFAI,EAAaG,OAAO,YACpBvS,OAAOwS,QAAQC,aAAazS,OAAOwS,QAAQE,MAAO,GAAIR,EAAInS,MACtDuS,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAOnZ,GAEL,OADAuD,QAAQC,MAAM,iDAAkDxD,GACzD,QAjBa,GAoBtBsZ,EAAqD,GACrDC,EAAkB1D,GAAe7wB,wBAAC,GDjCF,CACtC5B,KAAM,UACNo2B,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/B3D,cAAe,MAsCb4D,EAAe3I,UACjB,GAAIoI,EAAYQ,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBvI,MAAM,GAADprB,OACrBC,aAAsB,gBAAAD,OAAeyzB,EAAY,SACpD,CACInI,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBsI,QAAsCD,EAASE,OAErD,IAAKD,EAAahE,cAAe,MAAO,IAAIkE,MAAM,uBAClD,MAAMC,EAAoBvE,GAAgBoE,EAA6B,QAAjBF,EAAET,EAAYe,WAAG,IAAAN,OAAA,EAAfA,EAAiB9D,eAGzE,OAFAqD,EAAYQ,GAAgBM,EAErBA,EACT,MAAOpa,GAEL,OADAuD,QAAQC,MAAM,gEAAiExD,GACxE,OAGTsa,EAAiBpJ,UACnB,MAAMqJ,EAAW/B,IAAMgC,oBAAoBV,GAC3C,IAAKS,EAAU,OAIf,MAAMN,EAAgBX,EAAYQ,GAE5BR,EAAYQ,SADND,EAAaC,GAGrBG,GACA1B,EAAI,CACAkC,aAAcjC,IAAMgC,oBAAoBV,GACxCY,SAAUT,EAAap4B,aAE3Bu3B,aAAauB,QAAQ,WAAYb,GACjCvB,EAAI,CACAqC,WAAW,EACXH,aAAcF,KAGlBhC,EAAI,CACAqC,WAAW,EACXH,aAAcjC,IAAMgC,oBAAoBH,IACxCK,SAAUnB,EAAgB13B,cAKtC,MAAO,CACH24B,oBAAqB,GACrBC,aDhIkC,CACtCr3B,KAAM,UACNo2B,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJc,SAAUnB,EAAgB13B,WAC1B2hB,MAAO,KACPqX,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAU7J,UAjGeA,WACzB,IACI,MAAM8I,QAAiBvI,MAAM,GAADprB,OACrBC,aAAsB,6BACzB,CACIqrB,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhB6I,QAA8DR,EAASE,OAE7E,IAAKM,EAAqB,MAAO,IAAIL,MAAM,qBAE3C5B,EAAI,CACAiC,sBACAM,iBAAiB,IAEvB,MAAO9a,GACLuD,QAAQC,MAAM,6EAA8ExD,GAC5FuY,EAAI,CACAiC,oBAAqB,CACjBH,IAAK,CACDj3B,KAAM,UACNo2B,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBkB,iBAAiB,MAkErBE,IAEJC,oBAAqB/J,gBAEX2I,EAAa,aACbS,EAAe7B,GACrBF,EAAI,CACAsC,cAAc,KAGtBhB,eACAS,qBAIKY,GAAcA,IACN7C,IAAQvO,IAAA,IAAC,SAAE4Q,GAAU5Q,EAAA,OAAK4Q,KAIlCS,GAAcA,IAAM9C,GAAQ+C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc5V,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG6V,GAAc,IAAIC,IAAIL,GAAaliB,IAAImiB,KAEvCK,GAAsBP,GAAqBjwB,QAAO,CAACC,EAAKmwB,EAAOxK,KACjE,MAAM6K,E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","file":"static/js/main.25a6777f.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary?.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary?.full,\r\n    },\r\n    {\r\n        value: 'frame' as const,\r\n        label: dictionary?.frame,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        backgroundRatio: 1.057,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    const result = CardArtCanvasCoordinateMap[artSource];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\r\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\r\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n    { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.5, lineCount: 7 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n                E: { yOffset: 1, yRatio: 1.04 },\r\n                Ĕ: { yOffset: 1, yRatio: 1.04 },\r\n                ĕ: { yOffset: 1, yRatio: 1.04 },\r\n                Ḝ: { yOffset: 1, yRatio: 1.04 },\r\n                ḝ: { yOffset: 1, yRatio: 1.04 },\r\n                Ȇ: { yOffset: 1, yRatio: 1.04 },\r\n                ȇ: { yOffset: 1, yRatio: 1.04 },\r\n                Ê: { yOffset: 1, yRatio: 1.04 },\r\n                ê: { yOffset: 1, yRatio: 1.04 },\r\n                Ê̄: { yOffset: 1, yRatio: 1.04 },\r\n                ê̄: { yOffset: 1, yRatio: 1.04 },\r\n                Ê̌: { yOffset: 1, yRatio: 1.04 },\r\n                ê̌: { yOffset: 1, yRatio: 1.04 },\r\n                Ề: { yOffset: 1, yRatio: 1.04 },\r\n                ề: { yOffset: 1, yRatio: 1.04 },\r\n                Ế: { yOffset: 1, yRatio: 1.04 },\r\n                ế: { yOffset: 1, yRatio: 1.04 },\r\n                Ể: { yOffset: 1, yRatio: 1.04 },\r\n                ể: { yOffset: 1, yRatio: 1.04 },\r\n                Ễ: { yOffset: 1, yRatio: 1.04 },\r\n                ễ: { yOffset: 1, yRatio: 1.04 },\r\n                Ệ: { yOffset: 1, yRatio: 1.04 },\r\n                ệ: { yOffset: 1, yRatio: 1.04 },\r\n                Ẻ: { yOffset: 1, yRatio: 1.04 },\r\n                ẻ: { yOffset: 1, yRatio: 1.04 },\r\n                Ḙ: { yOffset: 1, yRatio: 1.04 },\r\n                ḙ: { yOffset: 1, yRatio: 1.04 },\r\n                Ě: { yOffset: 1, yRatio: 1.04 },\r\n                ě: { yOffset: 1, yRatio: 1.04 },\r\n                Ɇ: { yOffset: 1, yRatio: 1.04 },\r\n                ɇ: { yOffset: 1, yRatio: 1.04 },\r\n                Ė: { yOffset: 1, yRatio: 1.04 },\r\n                ė: { yOffset: 1, yRatio: 1.04 },\r\n                Ė́: { yOffset: 1, yRatio: 1.04 },\r\n                ė́: { yOffset: 1, yRatio: 1.04 },\r\n                Ė̃: { yOffset: 1, yRatio: 1.04 },\r\n                ė̃: { yOffset: 1, yRatio: 1.04 },\r\n                Ẹ: { yOffset: 1, yRatio: 1.04 },\r\n                ẹ: { yOffset: 1, yRatio: 1.04 },\r\n                Ë: { yOffset: 1, yRatio: 1.04 },\r\n                ë: { yOffset: 1, yRatio: 1.04 },\r\n                È: { yOffset: 1, yRatio: 1.04 },\r\n                è: { yOffset: 1, yRatio: 1.04 },\r\n                È̩: { yOffset: 1, yRatio: 1.04 },\r\n                è̩: { yOffset: 1, yRatio: 1.04 },\r\n                Ȅ: { yOffset: 1, yRatio: 1.04 },\r\n                ȅ: { yOffset: 1, yRatio: 1.04 },\r\n                É: { yOffset: 1, yRatio: 1.04 },\r\n                é: { yOffset: 1, yRatio: 1.04 },\r\n                É̩: { yOffset: 1, yRatio: 1.04 },\r\n                Ē: { yOffset: 1, yRatio: 1.04 },\r\n                ē: { yOffset: 1, yRatio: 1.04 },\r\n                Ḕ: { yOffset: 1, yRatio: 1.04 },\r\n                ḕ: { yOffset: 1, yRatio: 1.04 },\r\n                Ḗ: { yOffset: 1, yRatio: 1.04 },\r\n                ḗ: { yOffset: 1, yRatio: 1.04 },\r\n                Ẽ: { yOffset: 1, yRatio: 1.04 },\r\n                ẽ: { yOffset: 1, yRatio: 1.04 },\r\n                Ḛ: { yOffset: 1, yRatio: 1.04 },\r\n                ḛ: { yOffset: 1, yRatio: 1.04 },\r\n                Ę: { yOffset: 1, yRatio: 1.04 },\r\n                ę: { yOffset: 1, yRatio: 1.04 },\r\n                Ę́: { yOffset: 1, yRatio: 1.04 },\r\n                ę́: { yOffset: 1, yRatio: 1.04 },\r\n                Ę̃: { yOffset: 1, yRatio: 1.04 },\r\n                ę̃: { yOffset: 1, yRatio: 1.04 },\r\n                Ȩ: { yOffset: 1, yRatio: 1.04 },\r\n                ȩ: { yOffset: 1, yRatio: 1.04 },\r\n                E̩: { yOffset: 1, yRatio: 1.04 },\r\n                e̩: { yOffset: 1, yRatio: 1.04 },\r\n                ᶒ: { yOffset: 1, yRatio: 1.04 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter<string>(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter<string>(entry => typeof entry === 'string')\r\n                        .filter(entry => entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\r\n                    pendulumTextStyle,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const flavorFontData = EffectFontData.tcg;\r\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: flavorFontData,\r\n                    fontLevel: effectSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1122, 240 - widthOffset, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...coordinate,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        600, 1080,\r\n        120, 30,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth;\r\n                    clonedCanvas.height = cardHeight;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth, cardHeight,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        CardArtCanvasCoordinateMap.normal.artX,\r\n                        CardArtCanvasCoordinateMap.normal.artY,\r\n                        CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        leftToEffectBox,\r\n                        topToEffectBox,\r\n                        effectBoxWidth,\r\n                        effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        cardWidth, cardHeight,\r\n                        0, 0,\r\n                        cardWidth, cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                style,\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    } = {\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle } = option ?? {};\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4;\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n        });\r\n        if (isFirstEdition) {\r\n            const left = isLegacyCard && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\r\n            const bottom = isLegacyCard && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = isLegacyCard && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            const compactThreshold = format === 'tcg' ? 390 : 350;\r\n            const compactOffset = format === 'tcg' ? 30 : 40;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize } = effectStyle ?? {};\r\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize } = pendulumStyle ?? {};\r\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return result.tokenEdge;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            if (ResolutionMap[value as keyof typeof ResolutionMap]) {\r\n                                updateSetting({ resolution: ResolutionMap[value as keyof typeof ResolutionMap].settingValue });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { useEffect, useState } from 'react';\r\n\r\ntype VersionLog = { version: string, logList: { content: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`}>\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content }, index) => {\r\n                        return <li key={index}>\r\n                            {content}\r\n                        </li>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};","import { GithubFilled, BugOutlined, DatabaseFilled, TagsFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Popover, Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLog } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    max-height: 300px;\r\n`;\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\r\n                    </div>\r\n                </span>\r\n                <Popover\r\n                    placement=\"bottom\"\r\n                    content={<StyledVersionLog>\r\n                        <VersionLog />\r\n                    </StyledVersionLog>}\r\n                >\r\n                    <TagsFilled className=\"app-log\" />\r\n                </Popover>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Menu } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number]) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                    });\r\n                    onChange?.([width, height]);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './setting-panel';\r\nexport * from './setting';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey },\r\n    }) => ({\r\n        allowHotkey,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        &.mode-other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid var(--main-level-2);\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode-${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n            active={isLink}\r\n            defaultValue={linkMap}\r\n            onChange={changeLinkMap}\r\n            onStatusChange={changeLinkStatus}\r\n        />\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n            isLink: willBecomePendulum ? false : currentCard.isLink,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        background-color: #eaeaea;\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            top: 19px;\r\n            left: 20px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\r\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\r\n                />;\r\n            })}\r\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            setCanvasKey(cnt => cnt + 1);\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas\r\n                                    key={canvasKey + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={canvasKey}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width={`${CanvasConst.width + 15 * 2}px`}\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}