{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/navigation.ts","util/index.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/creator.ts","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/password.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","component/setting/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/canvas-panel/styled.tsx","page/canvas-panel/batch-converter.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["CanvasConst","width","height","topToPendulumStructure","pendulumStructureHeight","leftToPendulumStructure","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","label","NO_ICON","IconList","_jsx","CloseCircleOutlined","value","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","Object","values","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","labelKey","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","labelBackgroundColorList","labelBackgroundImage","join","frameList","arrowPositionList","top","left","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","frame","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","externalInfo","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkLink","checkMonster","checkSpeedSkill","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","arguments","undefined","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","result","normalizeCardName","replaceAll","normalizeCardEffect","normalizeImageLink","link","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","_objectWithoutProperties","level","concat","icon","serial","copyright","id","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","slice","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","ErrorBoundary","React","Component","constructor","super","state","hasError","componentDidCatch","Sentry","data","componentStack","render","fallback","children","Explanation","overlayClassName","iconProps","className","restIconProps","ExclamationCircleOutlined","changeCardFormat","targetFormat","termMap","newSetId","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","dictionary","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguageMetadata","fetch","process","headers","response","json","languageMetadataMap","Error","isMetadataReady","eng","loadLanguage","languageName","languageData","processedLanguage","changeLanguage","nextMeta","languageInfo","language","setItem","isLoading","isInitiating","initiate","loadDefaultLanguage","useLanguage","getLanguage","getState","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","startsWith","levelAsNumber","toLowerCase","namePreset","trim","cardMakerToYgoCarderData","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","cachedStore","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","cloneCanvas","cloneNode","drawCanvasContext","getContext","cloneCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","CanvasHeight","CanvasWidth","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","async","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","src","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithColor","canvas","sw","sh","dx","dy","cloneCanvasStyle","clonedCanvas","clonedCtx","willReadFrequently","rgbaColor","imageRasterData","getImageData","resetStyle","imageRasterDataWithShadow","combinedLayerData","combinedLayerRasterData","pixelCnt","destinationAlpha","putImageData","getLetterWidth","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","cnt","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_ref2","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","materialReplacement","material","wholeLineRegex","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","_ref3","drawStarContent","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawName","isSpeedSkill","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","drawTypeAbility","isMonster","willDrawTypeAbility","typeAbilityWithIcon","willDrawIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","bottomFrame","checkNormal","isXyz","isLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","prepareStyle","normalizedSubFamily","toUpperCase","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","pendulumSize","readyToDraw","loopFinish","loopArtFinish","_frameCanvasRef$curre","_resolvedStatTextStyl","artworkCanvas","backgroundCanvas","normalizedOpacity","keepArtBorder","opacityBody","fillBaseColor","w","h","fillRect","hasArtBorder","drawAttribute","drawBackground","drawCardArt","drawFrame","drawLinkArrowMap","drawPendulumScaleIcon","drawStar","drawNameBackground","drawEffectBackground","drawFrameBorder","drawNameBorder","drawArtBorder","drawPendulumBorder","drawBorderPendulumFinish","drawEffectBorder","drawCardBorder","drawStatBorder","drawAttributeFinish","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","drawCardBorderFinish","calculateCardArtRedrawCoordination","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","boundary","backgroundWidth","backgroundHeight","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","normalizedCardIcon","isActive","baseLink","activeLink","withPendulum","effectBoxX","artFrameSource","foilType","withBorder","overlayType","getLayoutDrawFunction","artHeight","_cloneCanvasStyle$col","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","contextualFont","contextualColor","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","_passwordCanvasRef$cu","endOfPassword","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","_fontSizeData$offsetY","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","_ref4","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","sort","l","catch","rotate","keyframes","StyledSettingPanel","styled","div","StyledSettingButtonContainer","$softMode","css","SettingButton","trigger","checked","onChange","placement","SettingFilled","Affiliation","_jsxs","rel","GithubFilled","StyledAppSettingContainer","_templateObject","AppHeader","alt","Radio","Group","Button","BugOutlined","TaintedCanvasWarning","StyledCode","span","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","containerProps","FormattingHelpDrawer","useState","modalOpen","setDrawerOpen","footer","visible","onClick","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledIconButtonContainer","IconButton","Icon","tooltipProps","customOnClick","restContainerProps","Tooltip","_Fragment","InputTrainStyle","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","isRatioAcceptable","abs","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setLoading","setError","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","normalizedSource","maxLength","allowClear","accept","files","targetFile","maxFileSize","reader","FileReader","readAsDataURL","alert","_fileInputRef$current","setValue","Checkbox","Empty","ReactCrop","disabled","imageStyle","backgroundImage","onImageLoaded","onImageError","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","_templateObject2","StyledDropdown","Container","_templateObject3","Option","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","_ref5","StarButtonList","IconTypeMap","fullLabelKey","IconTypeList","StickerButtonList","CondenseThresholdButtonList","_ref9","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","find","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","setCnt","useRefresh","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","applyCustomStyle","onVisibleChange","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","useShallow","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","status","changeBackgroundCrop","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","Popover","destroyTooltipOnHide","fit","full","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","_ref8","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","Set","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","TextArea","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","normalizedValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ctrlKey","metaKey","currentTarget","has","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","rows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","_templateObject4","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","Dropdown","arrow","Menu","domEvent","Item","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_ref6","_ref7","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","StyledActionIconButton","button","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","okButtonProps","okText","cancelText","onOk","convertedFileList","file","reject","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","ArrowRightOutlined","multiple","fileFromInput","nextFileList","item","CloseOutlined","curList","RetweetOutlined","StyledDownloadDropdownLabel","StyledDownloadDropdownOption","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","onRequireExportData","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","loading","requestImport","cleanup","startImport","internalMode","getFileAndImport","startRequest","_value$trim","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject5","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","importData","event","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","HotKeys","keyMap","handlers","onDrop","_cardInputRef$current2","confirm","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","wrapClassName","forceRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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VF,UAAW,MCxFNa,EAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACI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","file":"static/js/main.1bca3852.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary: {\r\n    fit: string,\r\n    full: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary.full,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    return CardArtCanvasCoordinateMap[artSource];\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n    },\r\n];\r\n\r\nexport const StickerList = [\r\n    'no-sticker',\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n    'limited',\r\n    'unlimited',\r\n];","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const getFoilList = (dictionary: FoilDictionary) => [\r\n    {\r\n        name: 'normal' as const,\r\n        label: dictionary.normal,\r\n        color: '#747b95',\r\n    },\r\n    {\r\n        name: 'gold' as const,\r\n        label: dictionary.gold,\r\n        color: '#cfa65f',\r\n    },\r\n    {\r\n        name: 'platinum' as const,\r\n        label: dictionary.platinum,\r\n        color: '#b1b1b1',\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 0.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"stone-serif-regular\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList = [\r\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\r\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7 },\r\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const arrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?\\\\([\\\\w\\\\W]+\\\\)${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ICON } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: 'no-sticker',\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil].value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultTextStyle, getEmptyCard } from '../model';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                fullCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let fullCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        fullCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        fullCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(fullCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): Card => {\r\n    const migratedCard = {\r\n        ...baseCard,\r\n        ...clone(card)\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => ({\r\n    isPartial: card.artSource === 'offline',\r\n    result: compressCardData(card),\r\n});","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const normalizeImageLink = (link: string) => {\r\n    try {\r\n        return link.replace(\r\n            /https:\\/\\/images.ygoprodeck.com\\/images\\/cards_cropped\\/([0-9]*)\\..*/,\r\n            'https://yugicrawler.vercel.app/artwork/$1',\r\n        );\r\n    } catch (e) {\r\n        console.error(e);\r\n        return link;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter<string>(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { normalizeImageLink } from './normalize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedEffect = desc\r\n        ? desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const normalizedMonsterEffect = monster_desc\r\n        ? monster_desc.replaceAll(/^''|''$/g, '')\r\n        : undefined;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = normalizeImageLink(card_images[0].image_url_cropped);\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: normalizedMonsterEffect ?? normalizedEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: `${scale}`,\r\n        pendulumScaleRed: `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport './explanation.scss';\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Card, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: Card, targetFormat: string): Card => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = window.localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            window.localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Card, OtherMakerCard, YgoproDeckCard, getDefaultCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: Card,\r\n    isPartial: boolean,\r\n} => {\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: decodedCard };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: decodedCard,\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): Card => {\r\n    try {\r\n        const localCardVersion = window.localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = window.localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card } = decodeCard(urlCardData);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport type CardStore = {\r\n    card: Card,\r\n    setCard: (cardTransform: Card | ((currentCard: Card) => Card)) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultCard(),\r\n        setCard: cardTransform => {\r\n            if (typeof cardTransform === 'function') set(cur => ({ card: cardTransform(cur.card) }));\r\n            else set({ card: cardTransform });\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(window.localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                window.localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const cloneCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const cloneCanvasContext = cloneCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && cloneCanvas && cloneCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    cloneCanvas.width = size[0];\r\n                    cloneCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                cloneCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, cloneCanvas.width, cloneCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = cloneCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return 'Leave right now may make you lose unsaved progress, proceed?';\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { hexToRGBA } from 'src/util';\r\nimport { setTextStyle } from './canvas-util';\r\nimport { notification } from 'antd';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    if (source.includes('/frame-token')) notification.info({ message: 'draw' });\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithColor = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    color: string,\r\n    sw: number, sh: number,\r\n    dx: number, dy: number,\r\n    cloneCanvasStyle?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n\r\n    const rgbaColor = hexToRGBA(color);\r\n    const imageRasterData = clonedCtx.getImageData(0, 0, sw, sh).data;\r\n\r\n    /** In some rare case, this image need shadow (for example \"LINK\" text).\r\n     * So we apply shadow into the clone node, then DRAW THE IMAGE AGAIN. This time image data will be a combined data from both the original image and the newly applied shadow.\r\n     */\r\n    const resetStyle = setTextStyle({ ctx: clonedCtx, ...cloneCanvasStyle });\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n    const imageDataWithShadow = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const imageRasterDataWithShadow = imageDataWithShadow.data;\r\n    resetStyle();\r\n\r\n    /** Because the new image data will replace the old one (no blending mode), it will erase the pixel of the current canvas underneath. To solve this we will draw the current canvas into the clone canvas first, before putting new image into it. */\r\n    clonedCtx.clearRect(0, 0, sw, sh);\r\n    clonedCtx.drawImage(canvas, dx, dy, sw, sh, 0, 0, sw, sh);\r\n\r\n    const combinedLayerData = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const combinedLayerRasterData = combinedLayerData.data;\r\n\r\n    for (let pixelCnt = 0; pixelCnt < combinedLayerRasterData.length; pixelCnt += 4) {\r\n        /** If raster data at this pixel have the same coordinate with raster data from the original image, draw it with manipulated color. */\r\n        if (imageRasterData[pixelCnt + 3] > 0) {\r\n            /** Change ratio based on the original color value, compare to pitch black #000000 */\r\n            combinedLayerRasterData[pixelCnt + 0] = rgbaColor[0] * (1 - imageRasterData[pixelCnt + 0] / 255);\r\n            combinedLayerRasterData[pixelCnt + 1] = rgbaColor[1] * (1 - imageRasterData[pixelCnt + 1] / 255);\r\n            combinedLayerRasterData[pixelCnt + 2] = rgbaColor[2] * (1 - imageRasterData[pixelCnt + 2] / 255);\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** If raster data at this pixel have the same coordinate with raster data from the image with shadow, draw the shadow. */\r\n        else if (imageRasterDataWithShadow[pixelCnt + 3] > 0) {\r\n            const destinationAlpha = imageRasterDataWithShadow[pixelCnt + 3] / 255;\r\n\r\n            combinedLayerRasterData[pixelCnt + 0] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 0]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 0];\r\n            combinedLayerRasterData[pixelCnt + 1] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 1]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 1];\r\n            combinedLayerRasterData[pixelCnt + 2] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 2]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 2];\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** Otherwise all other pixel belong to the background canvas, and is untouched. */\r\n    }\r\n\r\n    ctx.putImageData(combinedLayerData, dx, dy);\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 2 : 2), /** 2 look a bit better than 1 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText;\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicaable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? 'italic' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                ctx.font = currentFont.setStyle('').getFont();\r\n                let tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                tokenList = tokenList[0] === '\\n'\r\n                    ? tokenList.slice(1)\r\n                    : tokenList;\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst } from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === 'no-sticker') return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    ctx,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n}) => {\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    ctx,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1122, 240 - widthOffset, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawAssetWithSize(ctx, `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    cloneCanvasStyle: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    const color = cloneCanvasStyle.color ?? '#000000';\r\n    await drawWithColor(\r\n        canvas,\r\n        'link/link-text.png',\r\n        color,\r\n        120, 30,\r\n        600, 1080,\r\n        cloneCanvasStyle,\r\n    );\r\n    // await drawAsset(ctx, 'link/link-text.png', 600, 1080);\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n};","import {\r\n    arrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit'\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = arrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (color: string) => {\r\n            await drawWithColor(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                color,\r\n                813, 20,\r\n                0, 1070,\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied. In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return result.tokenEdge;\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { fillTextLeftWithSpacing, fillTextRightWithSpacing } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option = { stroke: false },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    const superTextOffset = 7.4;\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: { isPendulum: boolean, isLink: boolean, withShadow: boolean, format: string, lightFooter: boolean }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter } = option;\r\n    let spacing = 0.175;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.fillStyle = (lightFooter && !isPendulum) ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = withShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = withShadow && !isPendulum ? 3 : 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : '/');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                ctx,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n            }\r\n        );\r\n    }, [readyToDraw, format, isLink, isPendulum, lightFooter, setIdCanvasRef, setId, isSpeedSkill, bottomFrame, requireShadow]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n        });\r\n        if (isFirstEdition) {\r\n            ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n            const left = isLegacyCard && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\r\n            const bottom = isLegacyCard && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = isLegacyCard && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n            });\r\n            const compactThreshold = format === 'tcg' ? 390 : 350;\r\n            const compactOffset = format === 'tcg' ? 30 : 40;\r\n\r\n            if (isLimitedEdition) {\r\n                await drawLimitedEditionMark({\r\n                    ctx,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize } = effectStyle ?? {};\r\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize } = pendulumStyle ?? {};\r\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedStatTextStyle,\r\n    };\r\n};","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n`;\r\nconst StyledSettingButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .setting-button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon-setting {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon-setting {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"setting-button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { GithubFilled, BugOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledAppSettingContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<div className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </div>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppSettingContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppSettingContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    const language = useLanguage();\r\n\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<div className=\"disclaimer\">\r\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n        </div>}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport './formatting-guide.scss';\r\nimport { useLanguage } from 'src/service';\r\n\r\nconst StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Checkbox, Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton, StyledIconButtonContainer } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { normalizeImageLink } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n\r\n    return {\r\n        ...crop,\r\n        x: x < 0 ? 0 : x,\r\n        y: y < 0 ? 0 : y,\r\n        height: isRatioAcceptable\r\n            ? height\r\n            : width * image.naturalWidth /** Restore original size */\r\n                / ratio /** Get height with corresponding aspect ratio */\r\n                / image.naturalHeight /** Convert back to percent */,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: () => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        // setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded();\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n        const normalizedSource = normalizeImageLink(source);\r\n\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', normalizedSource);\r\n        setExternalSource(normalizedSource);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{ overlay: isDownloadable\r\n                                    ? language['image-cropper.download']\r\n                                    : language['image-cropper.no-download'] }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip title={<div className=\"image-warning\">\r\n                                {language['image-cropper.offline-warning']}\r\n                            </div>}>\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\">\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <StyledIconButtonContainer className=\"force-fit-toggle\" onClick={() => onForceFitChange(!forceFit)}>\r\n                    <Checkbox checked={forceFit} /> <span>{language['image-cropper.force-fit.label']}</span>\r\n                </StyledIconButtonContainer>}\r\n                {(!hasImage || error) && <Empty description={language['image-cropper.not-found-warning']} image={null} />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        setError('Image error');\r\n                        setLoading(false);\r\n                        if (!receivingCanvas) onTainted();\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType);\r\n                            onSourceLoaded();\r\n                        } else {\r\n                            onTainted();\r\n                        }\r\n                        // setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            {language['link-picker.label']}\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay={language['link-picker.reset.tooltip']}>\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${rotateMap[index]}deg)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './app-header';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './setting';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\nexport const IconTypeMap: Record<string, { value: string, labelKey: string, fullLabelKey: string, icon: React.ReactNode }> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const StickerButtonList = StickerList.map(name => ({\r\n    label: name === 'no-sticker'\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            backgroundCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            hasBackground,\r\n            backgroundType,\r\n            background,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState({ ...getDefaultCardOpacity(), ...defaultValue });\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => ({ ...cur, ...newValue }));\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            {hasBackground\r\n                                ? background\r\n                                    ? <img className=\"background-image-preview\" src={background} alt=\"Background\" />\r\n                                    : null\r\n                                : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { IconTypeList, IconTypeMap, StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    isLink: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    isLink,\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            artCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        {isLink\r\n            ? <LinkMarkChooser defaultValue={linkMap} onChange={changeLinkMap} />\r\n            : <div />}\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            {frame !== 'link'\r\n                ? <div className=\"pendulum-checkbox\">\r\n                    <Checkbox\r\n                        onChange={changeToPendulum}\r\n                        checked={isPendulum}\r\n                    >{language['input.pendulum.label']}</Checkbox>\r\n                </div>\r\n                : <div className=\"pendulum-checkbox-placeholder\" />}\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType } from 'src/model';\r\nimport { CondenseThresholdButtonList, IconTypeMap } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={language['input.condense.tooltip']}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 35px 35px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        background-color: #eaeaea;\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        effectStyle,\r\n        pendulumStyle,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            statTextStyle,\r\n            typeTextStyle,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        effectStyle,\r\n        pendulumStyle,\r\n        setCard,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2>\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                </h2>\r\n                                <RadioTrain\r\n                                    value={upSize}\r\n                                    optionList={[\r\n                                        { label: <CloseCircleOutlined />, value: 0 },\r\n                                        { label: '+1', value: 1 },\r\n                                        { label: '+2', value: 2 },\r\n                                        { label: '+3', value: 3 },\r\n                                    ]}\r\n                                    onChange={value => {\r\n                                        setCard(currentCard => {\r\n                                            const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                            if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                            newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [extraKeyname]: newStyle,\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                />\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>Size +{upSize}</div> : 'Normal'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n} from '../../component';\r\nimport {\r\n    checkLink,\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isLink = checkLink({ frame });\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={language['input.layout.tooltip']}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || frame !== 'link' || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    isLink={isLink}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    border-left: var(--bw) solid var(--sub-level-3);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-resolution {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        padding: 4px 15px;\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            transform: translateY(-1px);\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: 'Your card is tainted, you must save manually',\r\n                description: 'Right click the card → Choose \"Save image as...\"',\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\" onClick={() => download()}>\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\">\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                    <StyledDownloadDropdownLabel disabled>{language['button.download.resolution.label']}</StyledDownloadDropdownLabel>\r\n                    {[\r\n                        { width: 549, height: 800 },\r\n                        { width: 561, height: 818 },\r\n                        { width: 813, height: 1185 },\r\n                    ].map(({ width, height }) => {\r\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\r\n                            onClick={() => {\r\n                                updateSetting({\r\n                                    resolution: [width, height],\r\n                                });\r\n                                forceRefocus();\r\n                            }}\r\n                        >\r\n                            {width} × {height}\r\n                        </StyledDownloadDropdownOption>;\r\n                    })}\r\n                </Menu>}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { RadioTrain } from 'src/component';\r\nimport { LanguageDataDictionary, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        border-left: var(--bw) solid var(--main-primary);\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        grid-template-columns: 100px auto;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .inline-alert {\r\n        line-height: 1.25;\r\n    }\r\n    .export-input-raw {\r\n        grid-row: span 2;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card) => void,\r\n};\r\nexport type ExportPanel = {\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    allowHotkey: boolean,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    allowHotkey,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card) => {\r\n            setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        notification.error({\r\n                            message: language['error.export.message'],\r\n                            description: language['error.export.description'],\r\n                        });\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className=\"export-container-result\">\r\n                    <StyledActionIconButton\r\n                        onClick={() => {\r\n                            const blob = new Blob([data], { type: 'application/json' });\r\n                            downloadBlob(\r\n                                normalizeCardName(name),\r\n                                blob,\r\n                                'application/json',\r\n                            );\r\n                        }}\r\n                    >\r\n                        {language['button.export-modal.download-button.label']}\r\n                    </StyledActionIconButton>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                    />}\r\n                    {(mode === 'ygocarder' && !isPartial) && <CardDataCopyButton\r\n                        data={internalCardData.ygocarder.data}\r\n                    >\r\n                        {language['button.export-modal.copy-button.label']}\r\n                    </CardDataCopyButton>}\r\n                    {((mode === 'other')\r\n                    || (mode === 'ygocarder' && isPartial)) && <div className=\"inline-alert\">\r\n                        {language['prompt.export.offline-warning.message']}\r\n                    </div>}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ value, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => downloadAsFile(\r\n                            internalCardData[value].name,\r\n                            internalCardData[value].data,\r\n                        )}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, YgoproDeckCard } from 'src/model';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom {\r\n            font-size: var(--fs);\r\n            margin-left: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (data: Card) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = (cardData: string | Record<string, any> | null, internalMode = mode) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    internalMode === 'replace' ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n                onImport(decodedCard);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result, 'replace');\r\n                };\r\n                reader.readAsText(targetFile);\r\n            }\r\n        }\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\" */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData;;\r\n                }\r\n\r\n                startImport(cardData);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode === 'replace'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        {/* <br />\r\n                        {language['prompt.import.instruction.line-2']} */}\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode === 'replace'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span>{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: var(--bw) solid var(--sub-secondary);\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback(() => {\r\n        setCanvasKey(cnt => cnt + 1);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(false);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    allowHotkey={allowHotkey}\r\n                                    onRequireExportData={exportData}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={decodedCard => {\r\n                                        const setCard = useCard.getState().setCard;\r\n\r\n                                        setCard(decodedCard);\r\n                                        setImageChangeCount(cnt => cnt + 1);\r\n                                        cardInputRef.current?.forceCardData(decodedCard);\r\n                                        /** Allow navigate input panel right away */\r\n                                        forceRefocus();\r\n                                    }}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = getDefaultCard();\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas\r\n                                    key={canvasKey + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={canvasKey}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width=\"843px\"\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}