{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/preset.ts","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/image.tsx","component/preset-option/name-style.tsx","component/card-layout-preview.tsx","component/preset-manager/image-preset-form.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","effectBox","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","ART_FINISH_TYPE","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DYE_LIST_LENGTH","length","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","imagePresetPath","imagePresetSource","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","rainbowSecretRare","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","variant","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","TotalIconTypePresetMap","TotalAttributeIconPresetList","map","region","regionName","hasExtraAttribute","includes","filter","_ref","flatMap","_ref2","toLowerCase","_ref3","_ref4","TotalAttributeIconPresetMap","list","TotalImagePresetMap","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","STYLING_TAG_SOURCE","IMG_TAG_NAME","RENDER_TAG_SOURCE","RenderTagRegex","ITALIC_CLOSE_TAG","BOLD_CLOSE_TAG","PRE_OPEN_TAG","PRE_CLOSE_TAG","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","swapTextData","currentTextData","nextFontData","fontLevel","nextCurrentFont","combinedFontData","currentFont","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","guide.format.section-7.content","guide.format.section-8.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader16","_reader17","_reader$split$filter","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_reader45","_reader46","_emptyCard$isLink","_filter","_reader47","_reader49","_reader50","_reader51","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader48","baseFlag","Number","baseDyeList","String","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref10","_ref11","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref12","targetIndex","_ref13","clonedId","clonedCard","nextCardList","sortList","_ref14","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","_oldVersion","newVersion","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","imagePresetList","imagePresetMap","updateGlobalMemory","newGlobalMemory","content","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","normalizeDxy","dw","dh","naturalWidth","naturalHeight","baseDW","baseDH","actualDW","actualDH","drawFromWithSize","sx","sy","sw","sh","internalImage","_imageCacheMap$source3","_imageCacheMap$source4","actualSX","actualSY","actualSW","actualSH","drawAssetWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","defaultGap","currentRightGap","offsetable","leftMostGap","renderTagMatchResult","match","matchResult","exec","lastIndex","attributeKey","attributeValue","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","preformatMode","_textData$fontData$va","_textData$fontData","italicFontData","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","defaultFontData","currentFontData","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","_defaultFontData$vari","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","offsetX","_offsetX","_offsetY","normalizedWidth","normalizedSource","isInternalSource","presetHeight","presetWidth","presetOffsetX","presetOffsetY","_TotalImagePresetMap$","lineHeightOffsetRatio","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","flavorConditionRegex","potentialFlavorConditionText","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","maxFontListLineLength","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","tolerantValue","lineDrawInfoList","precalculatedLine","finalTokenList","finalSpaceWidth","finalTextData","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","lineDrawInfo","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","otherText","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","keepEffectBox","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","_templateObject3","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject10","ManagerDrawer","Drawer","_templateObject11","SingleSliderContainer","_templateObject12","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","StyledQuoteContainer","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledImagePresetContainer","ImagePresetOption","imagePreset","onDelete","onEdit","normalizedOffsetX","normalizedOffsetY","Popconfirm","onConfirm","EditOutlined","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","NameStylePresetOption","frameInfo","presetContent","onOverwrite","onActive","canvasRef","backgroundImage","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","ImagePresetFormContainer","Form","Item","ImagePresetForm","onSubmit","form","useForm","editKey","setEditKey","turnOffForm","resetFields","edit","setFieldsValue","Button","onFinish","onFinishFailed","autoComplete","rules","required","Input","Row","gutter","Col","InputNumber","step","htmlType","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImagePresetList","setImportData","inputKey","setInputKey","presetImportDirectInputRef","imagePresetFormRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","_imagePresetFormRef$c","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","Panel","Collapse","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","SpecialPathContainer","ImagePathPreview","imagePath","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","ghost","header","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","altField","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_ref25","_ref26","_FramePositionMap$key","_FramePositionMap$key2","_ref27","_ref28","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_iteratorError","_iteratorNormalCompletion","_didIteratorError","_step","_iterator","_asyncIterator","store","next","cursor","err","return","imagePresetTx","_iteratorError2","_iteratorNormalCompletion2","_didIteratorError2","_step2","_value2","_iterator2","_iteratorError3","_iteratorNormalCompletion3","_didIteratorError3","_step3","_value3","_iterator3","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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H,aAAc,SACdC,SAAU,OACVF,UAAW,MC3JZ,IAAMc,GAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,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6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFjP,KAAK,OAELkP,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAExkB,KAAM,IAAK1D,MAAO,MAC9BmoB,EAAG,CAAEzkB,KAAM,IAAK1D,MAAO,EAAM,MAEjC+nB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFjP,KAAK,OAELqP,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAEpkB,KAAM,KAAM1D,MAAO,GAC7B,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,GAAM,CAAE0D,KAAM,KAAM1D,MAAO,GAC3B,WAAc,CAAE0D,KAAM,KAAM1D,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAE0D,KAAM,IAAK1D,MAAO,OAEtC+nB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDACA,oDACA,qDACA,gGACA,mGACA,iGACA,kGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,iGACA,mGACA,iGACA,mGACA,iGACA,mGAiBA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,+BACA,oBACA,8CACA,8CACA,OACA,WACA,gEACA,gEACA,OACA,2IACA,2DAKA,KACFjP,KAAK,OAGEsP,GACF,QAGEC,GAAoCA,KAAA,CAC7CC,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChBC,UAAW,EACXC,SAAU,EACVC,MAAO,IACPllB,KAAM2kB,KAIH,MAAMQ,GAUTC,YAAYC,EAAiCC,GAAkC,KAT/EC,cAAQ,OACRC,oBAAc,OACdC,sBAAgB,OAChBC,cAAQ,OACRL,YAAM,OACNjF,YAAM,OACNuF,qBAAe,OACfC,qBAAe,EAGXC,KAAKzF,OAASkF,EACdO,KAAKR,OAAMtkB,wBAAA,GAAQ6jB,MAAwCS,GAC3DQ,KAAKC,OAGTC,MAAM1d,GAAiE,IAAvCgd,EAA+BnF,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9D,MAAM,MAAEtjB,EAAK,OAAEC,GAAWwL,EACpB2d,EAAUH,KAAKI,WAAW5d,GAChCwd,KAAKJ,iBAAiBS,WAAW5pB,MAAQ0pB,EACzCH,KAAKJ,iBAAiBU,WAAW7pB,MAAQ,CAACM,EAAOC,EAAQ,GACzDgpB,KAAKN,SAASa,QAAQxpB,EAAOC,GAC7BgpB,KAAKL,eAAeY,QAAQxpB,EAAOC,GACnCgpB,KAAKL,eAAea,MAAMR,KAAKS,gBAAgB1pB,EAAOC,IAEtD,MAAM,YAAEgoB,EAAW,cAAEC,EAAa,eAAEC,EAAc,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,EAAK,KAAEllB,GAAMe,wBAAA,GAC/E8kB,KAAKR,QACLA,GAGPQ,KAAKU,UAAU1B,GACfgB,KAAKW,YAAY1B,GACjBe,KAAKY,aAAa1B,GAClBc,KAAKa,aAAa1B,EAAWpoB,EAAOC,GACpCgpB,KAAKc,oBAAoB1B,EAAUC,GACnCW,KAAKe,QAAQ5mB,GAEb6lB,KAAKL,eAAeqB,OAAO,EAAI,IAGnCf,OACI,MAAMgB,EAAS,IAAIC,MAAyB,GAAQ,GAAO,IAAO,GAAQ,EAAG,GACvEC,EAAQ,IAAID,KACZE,EAAoB,IAAIC,KAAWF,EAAOF,GAEhDjB,KAAKN,SAAW,IAAIwB,KAAoB,CAAEI,OAAO,EAAMC,WAAW,EAAMhH,OAAQyF,KAAKzF,SACrFyF,KAAKN,SAAS8B,cAAc,EAAU,GAEtCxB,KAAKJ,iBAAmBsB,KAAoBO,MAAM5C,GAAgBN,UAElEyB,KAAKH,SAAW,IAAIqB,KAAqB,CACrCzC,eAAgBI,GAAgBJ,eAChCD,aAAcK,GAAgBL,aAC9BD,SAAUyB,KAAKJ,mBAEnBI,KAAKH,SAAS6B,aAAc,EAE5B,MAAMC,EAAe,IAAIT,KAAoB,EAAG,EAAG,EAAG,GAChDU,EAAa,IAAIV,KAAWS,EAAc3B,KAAKH,UACrDsB,EAAMU,IAAID,GAEV5B,KAAKD,gBAAkB,IAAI+B,KAAWpD,IACtCsB,KAAKF,gBAAkB,IAAIgC,KAAWxD,IACtC0B,KAAKF,gBAAgBiC,gBAAiB,EAEtC/B,KAAKL,eAAiB,IAAIqC,KAAehC,KAAKN,SAAUM,KAAKS,mBAC7DT,KAAKL,eAAesC,QAAQb,GAC5BpB,KAAKL,eAAesC,QAAQjC,KAAKD,iBACjCC,KAAKL,eAAesC,QAAQjC,KAAKF,iBAErCW,gBAAgB1pB,EAAgBC,GAC5B,OAAO,IAAIkqB,KAAwBnqB,EAAOC,EAAQ,CAC9CkrB,UAAWhB,KACXiB,UAAWjB,KACXnM,OAAQmM,KACRkB,eAAe,IAGvBhC,WAAW5d,GACP,MAAM2d,EAAU,IAAIe,KAAc1e,GAKlC,OAJA2d,EAAQkC,MAAQlC,EAAQmC,MAAQpB,KAChCf,EAAQ+B,UAAY/B,EAAQgC,UAAYjB,KACxCf,EAAQoC,WAAa,EACrBpC,EAAQqC,aAAc,EACfrC,EAGXO,UAAU+B,GAEFzC,KAAKJ,iBAAiB8C,QAAQjsB,MAD9BgsB,GACuC,EAED,EAI9C9B,YAAY8B,GAEJzC,KAAKJ,iBAAiB+C,QAAQlsB,MAD9BgsB,GACuC,EAED,EAI9C7B,aAAa6B,GAELzC,KAAKJ,iBAAiBgD,QAAQnsB,MAD9BgsB,GACuC,EAED,EAI9C5B,aAAapqB,EAAeM,EAAeC,GACvCgpB,KAAKD,gBAAgBxB,SAASK,EAAEnoB,MAAQA,EAAQM,EAAQ,EACxDipB,KAAKF,gBAAgBvB,SAASsE,EAAEpsB,MAAQA,EAAQO,EAAS,EAG7D8pB,oBAAoB1B,EAAkBC,GAClCW,KAAKJ,iBAAiBkD,GAAGrsB,MAAQ,EAAM2oB,GAAY,EAAMxD,KAAKmH,IAAI,EAAK1D,IAG3E0B,QAAQ5mB,GACJ6lB,KAAKJ,iBAAiBzlB,KAAK1D,MAAiB,UAAT0D,EAAmB,EAAI,GCrX3D,MAAM6oB,GAAgBA,CAACC,EAAkBC,KAC5C,MAAMC,GAAeF,EAAW,IAAMrH,KAAKwH,GAAK,IAC1CC,GAAuBH,EAAa,IAAMtH,KAAKwH,GAAK,IACpD9M,EAAIsF,KAAK0H,IAAIH,GAAevH,KAAK0H,IAAID,GACrC9M,EAAIqF,KAAK2H,IAAIJ,GAAevH,KAAK0H,IAAID,GACrCG,EAAI5H,KAAK2H,IAAIF,GAEnB,MAAO,CAACzH,KAAK6H,MAAU,IAAJnN,GAAW,IAAKsF,KAAK6H,MAAU,IAAJlN,GAAW,IAAKqF,KAAK6H,MAAU,IAAJD,GAAW,MAE3EE,GAAc9S,IAuBpB,IAvBqB,YACxB+S,EAAW,eACXC,EAAc,cACdC,EAAa,UACbC,EAAY,EAAC,cACbC,EAAgB,CAAC,IAAK,IAAK,KAAI,cAE/BC,EAAa,WACbd,EAAU,SACVD,EAAQ,aACRgB,GAAe,EAAE,aACjBC,EAAe,GAYlBtT,EACG,MAAM8J,EAAMiJ,EAAYhJ,WAAW,MAEnC,IAAKD,EAAK,OAGV,MAAM1jB,EAAuB,OAAd4sB,QAAc,IAAdA,IAAkBD,EAAY3sB,OACvCD,EAAqB,OAAb8sB,QAAa,IAAbA,IAAiBF,EAAY5sB,MAGrCmmB,EADYxC,EAAIyJ,aAAa,EAAG,EAAGptB,EAAOC,EAAQ,CAAEotB,oBAAoB,IACvDlH,KAEjBmH,EAAkDL,IAE3B,kBAAfd,GAA+C,kBAAbD,EACtCD,GAAcE,EAAYD,GAC1B,CAAC,EAAG,EAAG,IACXqB,EAAoB1I,KAAK2I,KAAKF,EAAsB,IAAM,EAAIA,EAAsB,IAAM,EAAIA,EAAsB,IAAM,GAC1HG,EAA0B,CAC5BH,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,EAC3BD,EAAsB,GAAKC,GAG/B,GAAKpH,EAEL,IAKI,MAAMuH,EAAiB,IAAIC,kBAAkB3tB,EAAQC,GACrD,IAAK,IAAIqT,EAAI,EAAGA,EAAI6S,EAAKtf,OAAQyM,GAAK,EAC7B6S,EAAK7S,IAAM6S,EAAK7S,EAAI,IAAM6S,EAAK7S,EAAI,IAAM6S,EAAK7S,EAAI,GACnDoa,EAAepa,EAAI,GAAK,EAExBoa,EAAepa,EAAI,GAAK,EAGhC,MAAMsa,EAAc/J,GAAkBsB,KAAQuI,EAAgB,CAACztB,EAAQD,KACjE6tB,EAAMD,EAAYtJ,MAAM,GAAIwJ,EAASF,EAAYtJ,MAAM,GACvDyJ,EAAe,IAAIJ,kBAAkB3tB,EAAQC,EAAS,GAGtD+tB,EAAuBnJ,KAAKoJ,MAAM,IAAMlB,GAC9C,IAAK,IAAItH,EAAW,EAAGA,EAAWoI,EAAKpI,IACnC,IAAK,IAAIyI,EAAW,EAAGA,EAAWJ,EAAQI,IAAY,CAClD,MAAMC,EAA+C,GAA/B1I,EAAWzlB,EAAQkuB,GACnCE,EAAcR,EAAYhI,IAAIH,EAAUyI,GAE9CH,EAAaI,GAAgBC,EAAcJ,EAC3CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAKC,EAAcJ,EAC/CD,EAAaI,EAAe,GAAqB,IAAhBC,EAAoB,EAAI,IAKjE,MAAMC,EAAkB5K,SAASC,cAAc,UAC/C2K,EAAgBruB,MAAQA,EACxBquB,EAAgBpuB,OAASA,EACzBouB,EAAgBzK,WAAW,MAAM0K,aAC7B,IAAIC,UAAUR,EAAc/tB,EAAOC,GACnC,EACA,GAMJ,MAAMuuB,EAAkB/K,SAASC,cAAc,UAC/C8K,EAAgBxuB,MAAQA,EACxBwuB,EAAgBvuB,OAASA,EACU,IAAIsoB,GAAkBP,KAAqCwG,GACnErF,MAAMkF,EAAiB,CAC9CjG,UAAW,EACXE,MAAO,EACPD,SAAU,IACVJ,aAAa,EACbC,eAAe,EACfC,gBAAgB,EAChB/kB,KAAM2kB,KAMV,MAAM0G,EAAwBhL,SAASC,cAAc,UACrD+K,EAAsBzuB,MAAQA,EAC9ByuB,EAAsBxuB,OAASA,EAE/B,MAAMyuB,EAAyBD,EAAsB7K,WAAW,MAChE8K,EAAuBtH,UACnBoH,EACA,EACA,EACAxuB,EACAC,GAEJ,MAAM0uB,ECzIiBC,EAC3BC,EACA7uB,EACAC,EACA6uB,EACAC,EACAC,KAEA,MAAMC,EAAS,IAAItB,kBAAkB3tB,EAAQC,EAAS,GAChDivB,EAAQrK,KAAKoJ,MAAMa,EAAW,GAGpC,SAASK,EAAc5P,EAAWC,EAAW4P,EAAYC,GACrD,OAAOxK,KAAKyK,OAAO/P,EAAI6P,IAAO,GAAK5P,EAAI6P,IAAO,IAAM,EAAIL,GAAc,IAI1E,SAASO,EAAYC,EAAYC,GAC7B,OAAO5K,KAAKyK,OAAOE,EAAKC,IAAO,IAAM,EAAIV,GAAc,IAI3D,IAAK,IAAIvP,EAAI,EAAGA,EAAIvf,EAAQuf,IACxB,IAAK,IAAID,EAAI,EAAGA,EAAIvf,EAAOuf,IAAK,CAC5B,IAAImQ,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAAGC,EAAO,EAGzC,IAAK,IAAIC,GAAMZ,EAAOY,GAAMZ,EAAOY,IAC/B,IAAK,IAAIC,GAAMb,EAAOa,GAAMb,EAAOa,IAAM,CACrC,MAAMC,EAAKzQ,EAAIwQ,EACTE,EAAKzQ,EAAIsQ,EAGf,GAAIE,GAAM,GAAKC,GAAM,GAAKD,EAAKhwB,GAASiwB,EAAKhwB,EAAQ,CACjD,MAAMiwB,EAAgC,GAAjB1Q,EAAIxf,EAAQuf,GAC3B4Q,EAAoC,GAAnBF,EAAKjwB,EAAQgwB,GAG9BI,EAAUvB,EAAUqB,GACpBG,EAAUxB,EAAUqB,EAAc,GAClCI,EAAUzB,EAAUqB,EAAc,GAClCK,EAAY1B,EAAUsB,GACtBK,EAAY3B,EAAUsB,EAAgB,GACtCM,EAAY5B,EAAUsB,EAAgB,GAQtCvZ,EALUuY,EAAca,EAAIC,EAAI1Q,EAAGC,GAC1B+P,EAAYa,EAASG,GACrBhB,EAAYc,EAASG,GACrBjB,EAAYe,EAASG,GAKpCf,GAAQa,EAAY3Z,EACpB+Y,GAAQa,EAAY5Z,EACpBgZ,GAAQa,EAAY7Z,EACpBiZ,GAAQjZ,GAMpB,MAAM8Z,EAAgC,GAAjBlR,EAAIxf,EAAQuf,GACjC0P,EAAOyB,GAAehB,EAAOG,EAC7BZ,EAAOyB,EAAc,GAAKf,EAAOE,EACjCZ,EAAOyB,EAAc,GAAKd,EAAOC,EACjCZ,EAAOyB,EAAc,GAAK7B,EAAU6B,EAAc,GAI1D,OAAOzB,GDkEkBL,CACjBF,EAAuBtB,aAAa,EAAG,EAAGptB,EAAOC,GAAQkmB,KACzDnmB,EACAC,EACA,EACA,GACA,IAQE0wB,EAAa,IAAIhD,kBAAkB3tB,EAAQC,EAAS,GAC1D,IAAK,IAAI2wB,EAAW,EAAGA,EAAWzK,EAAKtf,OAAQ+pB,GAAY,EAAG,CAC1D,IAAIZ,EAAMrB,EAAaiC,GAAY,MAAS,EACxCX,EAAMtB,EAAaiC,EAAW,GAAK,MAAS,EAC5CC,EAAMlC,EAAaiC,EAAW,GAAK,MAAS,EAChD,MAGME,GAHgBd,EAAKvC,EAAwB,GAC7CwC,EAAKxC,EAAwB,GAC7BoD,EAAKpD,EAAwB,IACO,GAAK5I,KAAKkM,IAAI7D,GAAgBrI,KAAKkM,IAAI5D,IAC3E6D,EAAYnM,KAAKC,IAAIoI,EAAcrI,KAAKoB,IAAI6K,EAAmB3D,IAGrEwD,EAAWC,GAAY/L,KAAK6H,MAAMvG,EAAKyK,GAAY5D,EAAc,GAAKgE,GACtEL,EAAWC,EAAW,GAAK/L,KAAK6H,MAAMvG,EAAKyK,EAAW,GAAK5D,EAAc,GAAKgE,GAC9EL,EAAWC,EAAW,GAAK/L,KAAK6H,MAAMvG,EAAKyK,EAAW,GAAK5D,EAAc,GAAKgE,GAC9EL,EAAWC,EAAW,GAAKzK,EAAKyK,EAAW,GAG/C,OAAO,IAAIrC,UAAUoC,EAAY3wB,EAAOC,GAC1C,MAAOgxB,GAEL,OADAC,QAAQC,MAAM,gCAAiCF,GACxC,OE3KFG,GAAgB,SACzBC,EACAC,GAEE,IADFC,EAAkBjO,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIkO,SAAiBC,IACxBC,YAAW,KACP,GAAKL,EAAYM,SAAYL,EAEzB,IACID,EAAYM,QAAQC,QAAOC,IACvB,GAAKA,EACA,CACD,MAAMC,EAAMC,IAAIC,gBAAgBH,GAChC,GAAKC,EACA,CACD,MAAMG,EAAQ,IAAIC,MAClBD,EAAMhpB,IAAM6oB,EACZG,EAAME,OAAS,KACXb,EAAUlK,UAAU6K,EAAO,EAAG,GAC9BF,IAAIK,gBAAgBN,GACpBL,GAAQ,IAEZQ,EAAMI,QAAU,KACZN,IAAIK,gBAAgBN,GACpBL,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOR,GAELK,EAAUlK,UAAUiK,EAAYM,QAAS,EAAG,GAC5CT,QAAQC,MAAMF,GACdQ,GAAQ,QA3BwBA,GAAQ,KA8BpC,GAAbF,OCbEe,GAAmBC,GACN,gBAAfA,EAAKzyB,QAA4B0yB,GAAaD,GAE5CC,GAAgBD,GACH,UAAfA,EAAKzyB,OAAoC,SAAfyyB,EAAKzyB,OAAmC,gBAAfyyB,EAAKzyB,MAgBtD2yB,GAAwB3yB,GACnB,UAAVA,GAA+B,SAAVA,EAAyB,KACpC,QAAVA,EAAwB,OACd,iBAAVA,EAAiC,iBACvB,gBAAVA,GAAqC,SAAVA,GAA8B,cAAVA,EAA8B,OAC1E,QAGE4yB,GAAoB5yB,IACrB0yB,GAAa,CAAE1yB,WAAY6yB,GAAgB7yB,GAG1C8yB,GAAoB9yB,GACtB,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAU6Z,SAAS7Z,GAGzE6yB,GAAmB7yB,GACrB,CAAC,QAAQ6Z,SAAS7Z,IAAU8yB,GAAiB9yB,GAG3C+yB,GAAwBA,CAACC,EAAqB5S,KACvD,IAAI6S,GAAiB,EACrB,OAAQD,GACJ,KrB1D+B,EqB0DDC,GAAiB,EAAM,MACrD,KrB1D+B,EqB0DDA,GAAiB,EAAO,MACtD,KrB7D+B,EqB6DDA,EAAiB7S,EAGnD,OAAO6S,GAGEC,GAAoBA,CAACC,EAA+ClvB,KAAyB,IAAD8V,EAAAE,EAAAE,EAAAC,EAAAgZ,EACrG,MAAM,MACFpzB,EAAK,aACLiH,EAAY,cACZC,EAAa,gBACbC,EAAe,iBACfC,EAAgB,iBAChBC,EAAgB,yBAChBC,GACA6rB,EACEE,EAAqB,OAALrzB,QAAK,IAALA,IAAS,SACzBszB,EAAmC,SAAjBrsB,EAA0BosB,EAAgBpsB,EAE5DssB,EAEe,QAFGtZ,EAAwB,SAApB9S,EACrBlD,EAAa,QAAUqvB,EACxBnsB,SAAe,IAAA8S,IAAKoZ,EAW1B,MAAO,CACHpsB,aAAcqsB,EACdpsB,cAhBgF,QAA9D6S,EAAsB,SAAlB7S,EAA2BosB,EAAkBpsB,SAAa,IAAA6S,IAAKsZ,EAiBrFlsB,gBAAiBosB,EACjBnsB,iBAZkB,QAFG+S,EAAyB,SAArB/S,EACvBmsB,EACAnsB,SAAgB,IAAA+S,IAAKkZ,EAavBhsB,iBAVkB,QAFQ+S,EAAyB,SAArB/S,EAC5BksB,EACAlsB,SAAgB,IAAA+S,IAAKiZ,EAWvB/rB,yBAR0B,QAFQ8rB,EAAiC,SAA7B9rB,EACpCisB,EACAjsB,SAAwB,IAAA8rB,IAAKC,IAY1BG,GAAmBC,IAYzB,IAADC,EAAAC,EAAA,IAZ2B,OAC7BzV,EAAM,MACNle,EAAK,UACL+e,EAAS,cACTD,EAAa,KACbvX,GAOHksB,EACG,MAAMG,EAAepB,GAAgB,CAAExyB,UACvC,IAAI6zB,EAAiB9U,EAAU9U,KAM/B,GALI4pB,IAAmB9pB,GAAwB,QAAXmU,IAAkB2V,EAAiB,OACnEA,IAAmB9pB,GAAwB,QAAXmU,IAAkB2V,EAAiB,WACnEA,IAAmB9pB,GAAa6pB,GAA2B,QAAX1V,IAAkB2V,EAAiB,SAGjE,WAAlB/U,EACA,OAAAza,wBAAA,GACO0a,GAAS,IACZ9U,KAAM4pB,IAId,MAAMC,EAAclB,GAAiB5yB,GAGrC,IAAI+zB,EAAkB,CAClB7pB,UAAW4pB,EAAc,UAAY,UACrC3pB,kBAAmB2pB,EAAc,UAAY,WAEjD,GAAsB,eAAlBhV,EAAgC,CAAC,IAADkV,EAAAC,EAChC,MAAMC,EAAe7vB,YAAA,GAAQoH,EAAmC,QAAjBuoB,EAACjV,EAAU1T,cAAM,IAAA2oB,IAAI,WAAWp0B,OAK/E,OAJK6L,EAAyC,QAAvBwoB,EAACC,EAAgB7oB,cAAM,IAAA4oB,IAAI,WAAWr0B,MAAMqK,OAC/DiqB,EAAgBjqB,KAAO4pB,GAG3BxvB,wBAAA,GACO0vB,GACAG,GAIX,IAAIC,EAAoBP,EAClB,CACE/oB,YAAY,EACZH,UAAW,EACX0pB,YAAa,QAEf,GAEN,MAAMC,EAAqB,WAAT9sB,GAAmD,QAAlCmsB,EAA2B,QAA3BC,EAAGloB,EAAmBlE,UAAK,IAAAosB,OAAA,EAAxBA,EAA0B/zB,aAAK,IAAA8zB,IAAS,GACxEY,EAAuB,SAAVt0B,EAAmByL,EAAmBc,UAAU3M,MAAQ,GAG3E,OAAAyE,gDAAA,CACI4F,KAAM4pB,GACHE,GACAI,GACAE,GACAC,I,2CC3KgnCC,GAAY,SAAApD,GAAI,IAAIhN,GAAGgN,EAAEA,EAAEqD,UAAU,EAAErD,EAAEpqB,OAAO,IAAI0tB,MAAM,QAAK,GAAGtD,EAAEhN,EAAE,GAAG,EAAEA,EAAEpd,OAAO,CAACod,EAAEA,EAAE,GAAL,qBAAqBA,GAArB,IAAQ,IAAI,EAAJ,0BAAQuQ,EAAR,QAAevD,GAAGA,EAAEA,EAAEsD,MAAMC,IAAI/b,KAAKwY,EAAEwD,QAA/C,+BAAsD,OAAOC,GAAczD,EAAE,IAAIyD,GAAc,SAACzD,GAAS,IAAPhN,EAAM,uDAAJ,EAAWuQ,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,KAAK,KAAK,CAAC,KAAK,KAAK,CAAC,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,KAAK,OAAOG,EAAE,SAAC1D,EAAEhN,GAAH,OAAOgN,EAAE2D,QAAQ,IAAIra,OAAJ,WAAe0J,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,GAA/B,aAAsCA,EAAE,GAAGA,EAAE,GAAG,IAAIA,EAAE,IAAK,MAAK,SAAAgN,GAAC,OAAEA,IAAIhN,EAAE,GAAGA,EAAE,GAAGA,EAAE,OAAI,GAAGA,EAAE,IAAIA,EAAE,EAAEA,EAAEuQ,EAAE3tB,SAASod,EAAEgN,EAAE0D,EAAE1D,EAAEuD,EAAEvQ,SAAS,IAAIA,EAAEuQ,EAAE3tB,OAAOod,KAAKgN,EAAE0D,EAAE1D,EAAEuD,EAAEvQ,IAAI,OAAOgN,GCExkD,MAqJM4D,GAAmB1wB,wBAAA,GArJ+D,CACpFka,QAAS,KACTL,OAAQ,KACRxE,OAAQ,KACR1Z,MAAO,KACPye,WAAY,KACZD,UAAW,KACXE,mBAAoB,MACpBnX,KAAM,KACNrD,QAAS,CACL8wB,QAAS,KACTjzB,KAAM,OACNC,SAAU,OACVE,KAAM,OACND,KAAM,OACNM,UAAW,OACXH,UAAW,OACXE,UAAW,OACXD,WAAY,OACZF,SAAU,OAEV8yB,SAAU,QAEdtW,OAAQ,KACRC,YAAa,KACb/Y,IAAK,KACLwZ,QAAS,KACTC,OAAQ,KACRC,UAAW,KACXV,UAAW,MACXW,QAAS,CACLwV,QAAS,MACTvV,EAAG,MACHC,EAAG,MACHxf,MAAO,MACPC,OAAQ,MACRwf,KAAM,MACNC,OAAQ,OAEZC,cAAe,MACfzZ,WAAY,KACZ2Z,cAAe,KACfD,eAAgB,MAChBE,iBAAkB,MAClB7b,eAAgB,MAChB8b,eAAgB,CACZ+U,QAAS,MACTvV,EAAG,MACHC,EAAG,MACHxf,MAAO,MACPC,OAAQ,MACRwf,KAAM,MACNC,OAAQ,OAEZ1d,KAAM,KACN4c,cAAe,MACf4B,YAAa,CACTsU,QAAS,KACTrU,iBAAkB,OAClBpO,UAAW,MACXqO,OAAQ,MACRxa,WAAY,MACZya,QAAS,MACTC,aAAc,OAElBC,cAAe,CACXiU,QAAS,KACTziB,UAAW,MACXqO,OAAQ,MACRxa,WAAY,MACZya,QAAS,MACTC,aAAc,OAElB/B,UAAW,CACPiW,QAAS,KACT/pB,YAAa,OACbE,gBAAiB,OACjBD,UAAW,OACXhB,UAAW,OACXD,KAAM,OACNa,cAAe,OACfC,cAAe,OACfK,UAAW,OACXJ,YAAa,OACbH,WAAY,OACZL,UAAW,OACXL,kBAAmB,QACnBM,UAAW,OACXG,YAAa,QACbD,YAAa,QACbD,UAAW,OACXY,QAAS,OACTD,OAAQ,OACRd,WAAY,OACZH,YAAa,OACbE,cAAe,QACfD,cAAe,SAEnBhE,UAAW,KACX2Y,UAAW,KACXI,SAAU,MACVF,KAAM,KACNC,cAAe,KACfF,SAAU,KACViB,QAAS,KACTC,WAAY,KACZC,OAAQ,KACRnc,WAAY,KACZoc,cAAe,KACfC,eAAgB,KAChBC,iBAAkB,KAClBC,kBAAmB,KACnBpc,aAAc,MACdqc,YAAa,KACbO,OAAQ,KACRC,MAAO,KACPC,IAAK,MACLC,IAAK,MACLC,SAAU,KACV7a,QAAS,MACT8a,eAAgB,MAChBC,YAAa,MACbE,mBAAoB,MACpBD,iBAAkB,MAClBE,aAAc,MACdC,QAAS,KACTC,eAAgB,KAChBG,gBAAiB,MACjBC,kBAAmB,MACnBH,cAAe,MACfC,cAAe,MACfG,eAAgB,MAChBE,QAAS,KACTD,KAAM,KACNE,aAAc,OAEgB,CAC9B+S,SAAU,KACVC,QAAS,KACTC,YAAa,CACTJ,QAAS,MACTvV,EAAG,MACHC,EAAG,MACHxf,MAAO,MACPC,OAAQ,MACRwf,KAAM,MACNC,OAAQ,SAQHyV,GAAmB,SAC5B5C,GAEE,IADF6C,EAA+B9R,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAGuR,GAElC,MAAMQ,EAAqC,GACrCC,EAAcnxB,YAAA,GAAQouB,GAkB5B,OAhBAlpB,OAAOksB,KAAKD,GAAgBE,SAAQC,IAChC,MAAMC,EAAaJ,EAAeG,GAElC,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBjR,MAAMkR,QAAQD,GAMrE,CACH,MAAME,EAAcR,EAAWK,GAEJ,kBAAhBG,IAA0BP,EAAcO,GAAeF,OATmB,CAAC,IAADG,EACrF,MAAMC,EAA6B,QAAvBD,EAAGT,EAAWK,UAAS,IAAAI,OAAA,EAApBA,EAAsBf,QAEjCgB,IACAT,EAAcS,GAAUX,GAAiBO,EAAYN,EAAWK,SASrEJ,GAGEU,GAAqB,SAC9BV,GAEE,IADFD,EAA+B9R,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAGuR,GAElC,MAAMmB,EAAwC,GAgB9C,OAfA3sB,OAAOksB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBzR,MAAMkR,QAAQO,GAOvC,MAA7Bb,EAAca,KACdF,EAAiBC,GAAWZ,EAAca,QARuC,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAed,EAAcc,KAC7BH,EAAiBC,GAAWF,GAAmBV,EAAcc,GAAcf,EAAWa,SAQ3FD,GAEEI,GAAiC,SAC1Cf,GAEE,IADFD,EAA+B9R,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAGuR,GAElC,MAAMwB,EAAmD,kBAAlBhB,EACjCiB,KAAKC,MAAMlC,GAAYmC,mBAAmBnB,KAC1CA,EAEAoB,EAAuC,GAgB7C,OAfAptB,OAAOksB,KAAKH,GAAYI,SAAQS,IAC5B,MAAMC,EAAad,EAAWa,GAE9B,GAA0B,kBAAfC,GAA0C,OAAfA,GAAwBzR,MAAMkR,QAAQO,GAO7B,MAAvCG,EAAwBH,KACxBO,EAAgBR,GAAWI,EAAwBH,QAR8B,CACrF,MAAMC,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYpB,QAE5BqB,GAAeE,EAAwBF,KACvCM,EAAgBR,GAAWG,GAA+BC,EAAwBF,GAAcf,EAAWa,SAQhHQ,GAoBEC,GAAkB,SAACnE,GAAwE,IAADoE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAA5CC,EAAQ3T,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAGjB,YAE1D4U,EAAqC5Y,QAC7C,MAAM6Y,EAAY/yB,wBAAA,CACdge,GAAIC,eACD6U,GACAvM,aAAM6H,IA+Bb,GA5BA2E,EAAa1W,YAAWrc,wBAAA,GACjBke,KAAe7B,aACf0W,EAAa1W,aAGc,MAA9B0W,EAAarW,cACbqW,EAAarW,cAAa1c,YAAA,GACnBke,KAAexB,eAGtBqW,EAAarW,cAAa1c,wBAAA,GACnBke,KAAexB,eACfqW,EAAarW,eAII,MAAxBqW,EAAa7Y,UAAiB6Y,EAAa7Y,QAAU,GAC9B,MAAvB6Y,EAAalZ,SAAgBkZ,EAAalZ,OAAS,OACpC,MAAfuU,EAAK/Y,SAAgB0d,EAAa1d,OAAS7R,EAAkC,QAAxBuvB,EAAalZ,OAAmB,KAAO,MAAMhY,KACpE,MAA9BkxB,EAAa/W,gBAAuB+W,EAAa/W,cAAgB,QACpC,MAA7B+W,EAAahzB,eAAsBgzB,EAAahzB,aAAe,UACpC,MAA3BgzB,EAAa3Y,aAAoB2Y,EAAa3Y,WAAa,QACjC,MAA1B2Y,EAAa5Y,YAAmB4Y,EAAa5Y,UAAY,QACtB,MAAnC4Y,EAAa1Y,qBAA4B0Y,EAAa1Y,mBAAqB,QACpD,MAAvB0Y,EAAazY,SAAgByY,EAAazY,OAAS,IAClDgG,MAAMkR,QAAQuB,EAAahY,YAAWgY,EAAahY,SAAW,IAErC,MAA1BgY,EAAavY,YAAmBuY,EAAavY,UAAY,UACzDuY,EAAazY,OAAQ,CACrB,MAAM0Y,EAAaD,EAAazY,OAE5B0Y,EAAWxd,SAASlV,KACpByyB,EAAazY,OAAS0Y,EAAWvd,QAAO2C,GAASA,IAAU9X,IAC3DyyB,EAAaxY,YAAc,CACvBwY,EAAavY,UACbuY,EAAavY,UACbuY,EAAavY,UACbuY,EAAavY,aAIrB8F,MAAMkR,QAAQuB,EAAaxY,cAC4B,IAAlDwY,EAAaxY,YAA0B7X,QAA+C,MAA/BqwB,EAAaxY,YAAY,KAErFwY,EAAaxY,YAAY,GAAK2D,KAAe3D,YAAY,IAExDwY,EAAqBjC,UAAY1C,EAAK5sB,MAAKuxB,EAAavxB,IAAOuxB,EAAqBjC,gBACjFiC,EAAqBjC,QAExBiC,EAAqBhC,cAAgB3C,EAAKjT,UAAS4X,EAAa5X,QAAW4X,EAAqBhC,oBAC7FgC,EAAqBhC,YAII,MAAZ,QAAjByB,EAACO,EAAavxB,WAAG,IAAAgxB,IAAI,MAAYO,EAAavxB,IAAM,IACnB,MAAZ,QAArBixB,EAACM,EAAa/X,eAAO,IAAAyX,IAAI,MAAYM,EAAa/X,QAAU,IACzB,MAAZ,QAAvB0X,EAACK,EAAa7X,iBAAS,IAAAwX,IAAI,MAAYK,EAAa7X,UAAY,UACzC,MAAvB6X,EAAa9X,SAAgB8X,EAAa9X,QAAS,GAED,mBAA1C8X,EAAalzB,QAAgB+wB,UAA4D,MAAlCmC,EAAalzB,QAAQ3B,YACpF60B,EAAalzB,QAAQ3B,WAAc60B,EAAalzB,QAAgB+wB,gBACxDmC,EAAalzB,QAAgB+wB,UAEzCmC,EAAalzB,QAAOG,wBAAA,GAAQvC,KAA4Bs1B,EAAalzB,gBAC7DkzB,EAAalzB,QAAgB+wB,SAEG,MAAZ,QAAxB+B,EAACI,EAAahxB,kBAAU,IAAA4wB,IAAI,MAAYI,EAAahxB,WAAa,IAC1B,MAAZ,QAA5B6wB,EAACG,EAAatX,sBAAc,IAAAmX,IAAI,MAAYG,EAAatX,eAAiB,IAChC,MAAZ,QAA9BoX,EAACE,EAAapX,wBAAgB,IAAAkX,IAAI,MAAYE,EAAapX,iBAAmB,UAChD,MAA9BoX,EAAarX,gBAAuBqX,EAAarX,eAAgB,GACnC,MAA9BqX,EAAavX,gBACTuX,EAAahxB,YAAcgxB,EAAatX,gBAAkBsX,EAAalzB,QAAQ/B,YAEnFi1B,EAAavX,eAAgB,GAEjCuX,EAAanX,eAAc5b,wBAAA,GVtUD,CAC1Bob,EAAG,EACHC,EAAG,EACHxf,MAAO,IACPC,OAAQ,KACRwf,KAAM,IACNC,OAAQ,IUkUDwX,EAAanX,gBAGO,MAAvBmX,EAAahX,QAAyC,SAAvBgX,EAAap3B,QAC5Co3B,EAAahX,QAAS,GAEK,MAA3BgX,EAAajX,aAAoBiX,EAAajX,WAAa,IAE1DiX,EAAqBE,cAAgB7E,EAAK9Q,iBAAgByV,EAAazV,eAAkByV,EAAqBE,oBAC3GF,EAAqBE,iBACO7T,IAAhC2T,EAAazV,iBAA8ByV,EAAazV,gBAAiB,GAExEyV,EAAqBlC,WAAazC,EAAKrR,WAAUgW,EAAahW,SAAYgW,EAAqBlC,iBAC5FkC,EAAqBlC,SAExBkC,EAAatV,kBAAiBsV,EAAatV,gBzB9TA,EAChD,EACA,WACA,EACA,YyB2TKsV,EAAarV,oBAAmBqV,EAAarV,kBzB/TF,EAChD,EACA,WACA,EACA,YyB4TKqV,EAAavV,gBAAeuV,EAAavV,czBhUE,EAChD,EACA,WACA,EACA,YyB6TKuV,EAAaxV,gBAAewV,EAAaxV,czBjUE,EAChD,EACA,WACA,EACA,YyB8TKwV,EAAapV,iBAAgBoV,EAAapV,ezBlUC,EAChD,EACA,WACA,EACA,YyB+T6C,qBAAlCoV,EAAa7V,mBAAkC6V,EAAa7V,kBAAmB,GACjD,qBAA9B6V,EAAa3V,eAA8B2V,EAAa3V,cAAe,GAC7E2V,EAAajY,gBAAeiY,EAAajY,cAAgB,QAE9D,MAAMoY,EvBnWwC,CAAC,EAAG,GuBoWlD,GAAK5S,MAAMkR,QAAQuB,EAAanV,OAC3B,GAAImV,EAAanV,KAAKlb,OAASwwB,EAAgBxwB,OAAQ,CACxD,MAAMywB,EAAkB,IAAIJ,EAAanV,MACzCmV,EAAanV,KAAOsV,EAAgB9d,KAAI,CAACgD,EAAOnO,IACN,kBAA3BkpB,EAAgBlpB,GAA4BkpB,EAAgBlpB,GAChEmO,UALwB2a,EAAanV,KAAOsV,EAS3D,MAAME,E3BtD6B,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,I2BuD5D,GAAK9S,MAAMkR,QAAQuB,EAAalV,UAC3B,GAAIkV,EAAalV,QAAQnb,OAAS0wB,EAAe1wB,OAAQ,CAC1D,MAAM2wB,EAAiB,IAAIN,EAAalV,SACxCkV,EAAalV,QAAUuV,EAAehe,KAAI,CAACgD,EAAOnO,IACT,kBAA1BopB,EAAeppB,GAA4BopB,EAAeppB,GAC9DmO,UAL2B2a,EAAalV,QAAUuV,EASjE,GAA6B,IAAzBL,EAAa7Y,SAA0C,IAAzB6Y,EAAa7Y,QAAe,CAC1D6Y,EAAa7Y,QAAU,EAEvB,MAAM,cAAE8B,EAAa,WAAEpc,EAAU,IAAEid,EAAG,IAAEC,EAAG,OAAEf,EAAM,QAAEF,EAAO,MAAElgB,GAAUo3B,EAMlEO,EAAYjF,GAAa,CAAE1yB,WACO,SAAlBqgB,GAA4Bpc,KACzCid,GAAOC,GAAQf,GAAUF,EAAQnZ,QACpC4wB,KAGFP,EAAalW,IAAM,GACnBkW,EAAajW,IAAM,IAG3B,GAA6B,IAAzBiW,EAAa7Y,QAAe,CAC5B6Y,EAAa7Y,QAAU,EACvB,MAAMtU,EAAOmtB,EAAarY,UAAU9U,KAIvB,YAATA,GAA+B,QAATA,IAAgBmtB,EAAarY,UAAU9U,KAAO,QAG5E,OAAOmtB,GAGEQ,GAAsBC,IAC/B,IAEI,MAAO,mBAAoBA,GACpB,gBAAiBA,GACjB,UAAWA,EACpB,MAAO1G,GAEL,OADAC,QAAQC,MAAMF,IACP,IAGF2G,GAA6BD,IACtC,IACI,MAAO,QAASA,GACT,OAAQA,GACR,OAAQA,EACjB,MAAO1G,GAEL,OADAC,QAAQC,MAAMF,IACP,IAIF4G,GAA4BA,CACrCtF,EACAuF,KAEA,GAAuB,YAAnBvF,EAAKlT,WAA4BkT,EAAK5S,eAA2C,YAA1B4S,EAAKzS,iBAC5D,MAAO,CACHiY,WAAW,EACX1zB,OAAQ8wB,GAAiB5C,IAIjC,MAAM+C,EAAcnxB,wBAAA,GAAQouB,GAAI,IAAEpT,QAAS,GAAIS,eAAgB,KAE/D,MAAO,CACHmY,WAAW,EACX1zB,OAAQ8wB,GAAiBG,KAK3B0C,GAAuBA,CAACC,EAAiBC,WAChCD,WAAsBC,IACP,kBAAfD,GAAkD,kBAAhBC,EAAiCrT,KAAKkM,IAAIkH,EAAaC,IAH7E,GAIhBD,IAAeC,GAEpBC,GAAkBA,CAACC,EAAmCC,KACxD,MACI3Y,OAAQ4Y,EACRr4B,OAAQs4B,EACRv4B,MAAOw4B,EACPjZ,EAAGkZ,EACHjZ,EAAGkZ,EACHjZ,KAAMkZ,GACE,OAARP,QAAQ,IAARA,IAAY,IAEZ1Y,OAAQkZ,EACR34B,OAAQ44B,EACR74B,MAAO84B,EACPvZ,EAAGwZ,EACHvZ,EAAGwZ,EACHvZ,KAAMwZ,GACG,OAATZ,QAAS,IAATA,IAAa,GAEjB,OAAOL,GAAqBM,EAAYM,IACjCZ,GAAqBO,EAAYM,IACjCb,GAAqBQ,EAAWM,IAChCd,GAAqBS,EAAOM,IAC5Bf,GAAqBU,EAAOM,IAC5BL,IAAaM,GAGXC,GAAkBA,CAACC,EAAwBC,KACpD,MACI9Z,QAAS+Z,EACTtZ,eAAgBuZ,GAEhBH,EADGI,EAASC,aACZL,EAAQ,+BAER7Z,QAASma,EACT1Z,eAAgB2Z,GAEhBN,EADGO,EAASH,aACZJ,EAAS,8BAEb,OAAOQ,aAAOL,EAAWI,IAClBxB,GAAgBkB,EAAaI,IAC7BtB,GAAgBmB,EAAoBI,ICpflCG,GAAqB73B,IAC9B,IACI,OAAOA,EACN83B,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MACxD,MAAO7I,GAEL,OADAC,QAAQC,MAAMF,GACPjvB,IAGF+3B,GAAuBjZ,IAChC,IACI,OAAOA,EACFgZ,WAAW,4BAA6B,MACxCA,WAAW,yCAA0C,MAC5D,MAAO7I,GAEL,OADAC,QAAQC,MAAMF,GACPnQ,IAIFkZ,GAAqBC,IAC9B,IACI,OAAOA,EAAKC,WAAW,sDACzB,MAAOjJ,GAEL,OADAC,QAAQC,MAAMF,IACP,ICxBFkJ,GAAeA,CAACn4B,EAAc6vB,EAAYzuB,KACnD,MAAM62B,EAAOxW,SAASC,cAAc,KAC9B0W,EAAOC,OAAOtI,IAAIC,gBAAgBH,GAExCoI,EAAKK,SAAWt4B,EAChBi4B,EAAKG,KAAOA,EACZH,EAAKM,QAAQC,YAAc,CAACp3B,EAAM62B,EAAKK,SAAUL,EAAKG,MAAM3hB,KAAK,KAEjE,MAAMgiB,EAAgB,IAAIC,WAAW,QAAS,CAC1CC,KAAMN,OACNO,SAAS,EACTC,YAAY,IAGhBZ,EAAKa,cAAcL,GACnBR,EAAKc,SACLV,OAAOtI,IAAIK,gBAAgBgI,IAqBxB,MCzBDY,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAClzB,GAAU,QAETmzB,GAAqBjyB,OAAO0O,QAAQijB,IAAa9qB,QAA+B,CAACC,EAAKC,KACxF,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAEGsrB,GAAqC,CACvC31B,MAAO,QACPD,OAAQ,SACRD,MAAO,SAEL81B,GAAoBryB,OAAO0O,QAAQ0jB,IAAYvrB,QAAqC,CAACC,EAAKC,KAC5F,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAEGwrB,GAAuC,CACzCC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,UAENC,GAAsBhzB,OAAO0O,QAAQ4jB,IAAczrB,QAA+B,CAACC,EAAKC,KAC1F,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAEGmsB,GAAmC,CACrC/5B,OAAQ,SACRue,OAAQ,SACRyb,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,eAAgB,eAChB7uB,KAAM,QACN,cAAe,SAEb8uB,GAAkBzzB,OAAO0O,QAAQukB,IAAUpsB,QAA+B,CAACC,EAAKC,KAClF,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAEG4sB,GAA0G,CAC5G,OAAU,CACN/2B,IAAK,IAET,KAAQ,CACJA,IAAK,SACLjE,KAAM,QAEV,OAAU,CACNiE,IAAK,wBACLjE,KAAM,iBACN4c,UAAW,SAEf,MAAS,CACL3Y,IAAK,eACLjE,KAAM,QACN4c,UAAW,SAEf,QAAW,CACP3Y,IAAK,uBACLjE,KAAM,WACN4c,UAAW,QACXF,OAAQ,CAAC,WAGXue,GAAY3zB,OAAO0O,QAAQglB,IAAkB7sB,QAA+B,CAACC,EAAKC,KACpF,MAAO6sB,EAAW1B,GAAenrB,EAGjC,OAFAD,EAAIorB,EAAYv1B,KAAOi3B,EAEhB9sB,IACR,IAWU+sB,GAA2BA,CACpC3K,EACA4K,KAEA,MAAM,KACFn7B,EAAI,KACJgd,EAAI,YACJuB,EAAW,UACXzB,EAAS,OACTgC,EAAM,IACNE,EAAG,IACHC,EAAG,IACHtb,EAAG,QACHwZ,EAAO,UACPE,EAAS,SACT6B,EAAQ,QACRM,EAAO,UACPrb,EAAS,MACT4a,EAAK,eACLX,EAAc,kBACdE,EAAiB,iBACjBD,EAAgB,aAChBnc,EAAY,WACZH,EAAU,QACVic,EAAO,MACPlgB,EAAK,aACLmiB,EAAY,UACZpD,EAAS,cACTD,EAAa,UACbD,EAAS,OACTF,GACA8T,EACE6K,EAAiBvD,GAAkB73B,GACnCq7B,EAAmBtD,GAAoBjZ,GACvCwc,EAA2BvD,GAAoB3Z,GAC/Cmd,EAAiBvC,GAAYlc,GAC7B0e,EAAsB7B,GAAax1B,GACnCs3B,EAAkBnB,GAASx8B,GAC3B49B,EAAqC,eAAlB9e,EACnBoe,GACE,CACIne,EAAU1T,OACVwT,EACAF,EAAOhG,KAAK,MACdA,KAAK,MAET,SACNoB,EAAkD,OAAZoI,QAAY,IAAZA,IAAgB,IAAhD,SAAEngB,EAAQ,OAAE67B,GAAiB9jB,EAAN+jB,EAAIpE,aAAA3f,EAAA,uBAsDjC,MAAO,CACHke,UArDY/1B,IAASo7B,GAClBtc,IAAWuc,GACXjd,IAAmBkd,QACA/Z,IAAnBga,QACwBha,IAAxBia,QACoBja,IAApBka,QACqBla,IAArBma,EAgDHr5B,OA/CQF,YAAA,CACRka,QAAS,QACTrc,KAAMo7B,EACN9U,MAAM,GAADpf,OAAK8V,GACV5b,KAAMmd,EAAY9H,KAAK,KACvBrS,KAAoB,OAAdm3B,QAAc,IAAdA,IAAkB,GACxBzc,OAAQuc,EACRrc,MACAC,MACA4c,OAAQ3c,EACR4c,UAAWtc,EACXrb,UAA8B,OAAnBq3B,QAAmB,IAAnBA,IAAuB,OAClCrb,GAAIpB,EACJjf,SAAQqC,YAAA,CACJ45B,QAASh6B,EACT+c,OAAQwc,EACRU,KAAM1d,EACN2d,IAAK5d,EACL6d,QAASzC,GAAWv3B,GACpBi6B,gBAAgB,GACbr8B,GAEPyQ,QAAS,SACT0nB,KAAM,CACFmE,UAASpe,EAAQrG,SAAS,KAC1B0kB,YAAWre,EAAQrG,SAAS,KAC5B2kB,WAAUte,EAAQrG,SAAS,KAC3B4kB,aAAYve,EAAQrG,SAAS,KAC7B6kB,cAAaxe,EAAQrG,SAAS,KAC9B8kB,aAAYze,EAAQrG,SAAS,KAC7B+kB,eAAc1e,EAAQrG,SAAS,KAC/BglB,cAAa3e,EAAQrG,SAAS,MAElCilB,OAAuB,OAAfnB,QAAe,IAAfA,IAAmB,SAC3BS,QAA0B,UAAjBh6B,EAA2B,QAAU,SAC9Cy5B,OAAwB,OAAhBD,QAAgB,IAAhBA,IAAoBC,EAE5BlyB,MAAO0xB,EACDA,EAAO0B,UAAU,cACH,YAAdxf,EACIF,EACAxZ,GACPi4B,KCtML5C,GAAsC,CACxCC,WAAY,aACZC,QAAS,UACTC,MAAO,QACPC,MAAO,QACP,aAAc,aACdC,OAAQ,SACR,CAAClzB,GAAU,QAETmzB,GAAqBjyB,OAAO0O,QAAQijB,IAAa9qB,QAA+B,CAACC,EAAKC,KACxF,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAaGksB,GAAsBhzB,OAAO0O,QAXU,CACzC6jB,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,KAAM,OACNC,KAAM,OACNC,MAAO,QACPC,MAAO,QACPC,KAAM,OACNC,OAAQ,WAE6ClsB,QAA+B,CAACC,EAAKC,KAC1F,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAqBG2sB,GAAkBzzB,OAAO0O,QAnBU,CACrCxV,OAAQ,SACRue,OAAQ,SACRyb,OAAQ,SACRC,OAAQ,SACRC,QAAS,UACTC,IAAK,MACLzC,KAAM,OACN0C,MAAO,QACPC,MAAO,QACPC,KAAM,OACN,cAAe,QACfiC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,aAAc,iBAE+BjvB,QAA+B,CAACC,EAAKC,KAClF,MAAOmrB,EAAaC,GAAYprB,EAGhC,OAFAD,EAAIqrB,GAAYD,EAETprB,IACR,IAEGivB,GAAyC,CAC3C,WAAY,IACZ,IAAO,IACP,YAAa,IACb,KAAQ,IACR,MAAS,IACT,cAAe,IACf,OAAU,IACV,eAAgB,KAgDPC,GAA6B9M,IAAgE,IAAD1Y,EAAAylB,EAAAC,EACrG,MAAM,IACFve,EAAG,UACH7a,EAAS,YACTq5B,EAAW,UACXC,EAAS,IACTxe,EAAG,KACHye,EAAI,UACJzyB,EAAS,GACTkV,EAAE,MACFmG,EAAK,aACLqX,EAAY,KACZ39B,EAAI,UACJ49B,EAAS,KACTC,EAAI,MACJld,EAAK,SACLmd,EAAQ,QACRC,EAAO,YACPC,GACAzN,EACEgL,EAAiBjC,GAAmBuE,GACpCrC,EAAsBnB,GAAoBl2B,IACzCs3B,EAAiBwC,GAAYnD,GAAgB7vB,GAAWsnB,MAAM,KAG/D2L,EAA6F,QAAtErmB,EAAI8lB,EAAeA,EAAa7F,WAAW,WAAY,SAAMvW,SAAS,IAAA1J,IAC3F6lB,EAAOA,EAAK5F,WAAW,WAAY,IAAM,GAE3CqG,EAAwBD,EAAwB3L,MAAM,MACtD6L,ENzI4B7N,IAC3B,CACH,SACA,UACA,MACA,OACA,eACA,QACF5Y,SAAS4Y,EAAKzyB,OMiIgBugC,CAAsB,CAClDvgC,MAAsB,OAAf29B,QAAe,IAAfA,IAAmB,YACxB0C,EAAsBt5B,OAAS,EAC/B,CAAC,IAADqC,OACMi3B,EAAsB,GAAGrG,WAAW,KAAM,IAAG,QAC9CqG,EAAsB5b,MAAM,IACjC9L,KAAK,MACLynB,EACA5C,EAA2BsC,EAC3BA,EAAU9F,WAAW,WAAY,IACjC,GACAwG,EAAYd,EAAY,GAAGe,kBAE3BtJ,EAAW5U,KAqCjB,MAAO,CACH0V,WAAW,EACX1zB,OAtCcF,wBAAA,GACX8yB,GAAQ,IACXj1B,OACAgf,IAAMA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAA9X,OAAM8X,GACzCC,IAAKA,EACEA,EAAM,GAAY,MAAPA,EAAe,IAAG,GAAA/X,OAAM+X,GACpC,IACN9a,UAA8B,OAAnBq3B,QAAmB,IAAnBA,IAAuBl2B,EAClCwZ,OAAQsf,EACRthB,UAAyB,OAAdye,QAAc,IAAdA,IAAkBp1B,EAC7B4Y,MAAgD,QAA3Cue,EAAiC,QAAjCC,EAAEE,EAAUA,EAAU54B,OAAS,UAAE,IAAA04B,OAAA,EAA/BA,EAAiCiB,gBAAQ,IAAAlB,IAAI,GACpDx/B,MAAsB,OAAf29B,QAAe,IAAfA,IAAmB,SAC1Bze,KAAoB,SAAd/R,GAAwB8yB,EAAUA,EAAUzX,EAClD/H,YAAauf,IAEO,UAAd7yB,EACI,CAAC,cACa,SAAdA,EACI,CAAC,aACD,IACdtH,IAAK26B,EACLjhB,UAAW,SACXC,QAAOnb,wBAAA,GACA8yB,EAAS3X,SAAO,IACnBE,EAAG,IAEPU,OAA4B,SAApBud,GAA8BhZ,MAAMkR,QAAQqK,GACpDhgB,SAAqB,OAAXggB,QAAW,IAAXA,IAAe,IAAIzmB,KAAIknB,GAAUrB,GAAeqB,KAC1D18B,WAAyB,aAAbk8B,EACZ3f,kBAA4B,MAATqC,EAAgB,IAAG,GAAAzZ,OAAMyZ,GAC5CtC,iBAA2B,MAATsC,EAAgB,IAAG,GAAAzZ,OAAMyZ,GAC3CvC,eAAgBkd,EAChBpc,SAAU,GAAAhY,OAAGiZ,GAAKue,SAAS,EAAG,KAC9Blf,QAAS7J,GAAa5P,IAAI,OCvNrBif,GAAgB,qCAChB2Z,GAAY,SAACC,GAAmC,IAAtBC,IAASvd,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,KAAAA,UAAA,GAC5C,IACI,MAAMwd,EAAUF,EAAIhM,QAAQ,IAAK,IACjC,IAAImM,EAAW,CAAC,EAAG,EAAG,EAAG,GAE0B,IAADC,EAAAC,EAQAC,EARlD,GAAuB,IAAnBJ,EAAQj6B,QAAmC,IAAnBi6B,EAAQj6B,OAChCk6B,EAAW,CACPI,SAAS,GAADj4B,OAAI43B,EAAQ,IAAE53B,OAAG43B,EAAQ,IAAM,IACvCK,SAAS,GAADj4B,OAAI43B,EAAQ,IAAE53B,OAAG43B,EAAQ,IAAM,IACvCK,SAAS,GAADj4B,OAAI43B,EAAQ,IAAE53B,OAAG43B,EAAQ,IAAM,IACvCK,SAAS,GAADj4B,OAAc,QAAd83B,EAAIF,EAAQ,UAAE,IAAAE,IAAI,KAAG93B,OAAa,QAAb+3B,EAAGH,EAAQ,UAAE,IAAAG,IAAI,KAAO,KAG7D,GAAuB,IAAnBH,EAAQj6B,QAAmC,IAAnBi6B,EAAQj6B,OAChCk6B,EAAW,CACPI,SAASL,EAAQvc,MAAM,EAAG,GAAI,IAC9B4c,SAASL,EAAQvc,MAAM,EAAG,GAAI,IAC9B4c,SAASL,EAAQvc,MAAM,EAAG,GAAI,IAC9B4c,SAA4B,QAApBD,EAACJ,EAAQvc,MAAM,EAAG,UAAE,IAAA2c,IAAI,KAAM,KAI9C,OAAOH,EAASxnB,KAAIgD,GAAS6kB,MAAM7kB,GAAS,IAAMA,IAAOgI,MAAM,EAAGsc,EAAY,EAAI,GACpF,MAAO5P,GACL,MAAO,CAAC,EAAG,EAAG,EAAG,GAAG1M,MAAM,EAAGsc,EAAY,EAAI,KAIrD,SAASQ,GAAeC,GACpB,GAAiB,kBAANA,EAAgB,MAAO,KAClC,MAAMV,EAAM/b,KAAKC,IAAI,EAAGD,KAAKoB,IAAIqb,EAAG,MAAMC,SAAS,IACnD,OAAsB,IAAfX,EAAI/5B,OAAe,IAAM+5B,EAAMA,EAEnC,MAKMY,GAAoBC,IAAwB,IAADC,EAAAC,EAAAC,EACpD,OAA6B,KAAT,QAAZF,EAACD,EAAS,UAAE,IAAAC,IAAI,GAAgC,KAAT,QAAZC,EAACF,EAAS,UAAE,IAAAE,IAAI,GAAgC,KAAT,QAAZC,EAACH,EAAS,UAAE,IAAAG,IAAI,IAAY,KAAQ,IAC5F,UACA,WC1CV,IAAMC,GAA0B,IA4BnBC,GAAkB,WAA+D,IAA9DC,EAA6D,uDAA9C,EAAGC,EAA2C,uDAA5BH,GACzD5b,EAAM8b,EACNjd,EAAMkd,EACNC,EAASnd,EACTod,EAAgBD,EAChBE,EAAe,GACfC,EAAY,IACZC,EAA0B,GAExBC,EAAgB,WAQlB,OAPkB,IAAdF,EAAiB3jB,KAEjBwjB,GAAUG,EAEVH,GADAG,GAAaC,GAIVxd,KAAKoB,IAAIgc,EAAQnd,IAGtByd,EAAa,WAIf,OAFAJ,GAAgB,EADhBF,GAAUG,GAMR3Y,EAAQ,WAA6C,IAA5CsY,EAA2C,uDAA5B9b,EAAK+b,EAAuB,uDAARld,EAC9CmB,EAAM8b,EACNjd,EAAMkd,EACNC,EAASD,EACTG,EAAe,GACfC,EAAY,IACZF,EAAgBF,GAGdQ,EAAY,kBAAMP,GAClBQ,EAAY,SAACC,GAAD,OAAuBT,EAASS,GAE5CC,EAAmB,eAACC,EAAD,uDAAeX,EAAf,OAA0BC,EAAgBU,GAC7DC,EAAmB,kBAAMX,GACzBY,EAAqB,WAGvB,OADAX,GAAgB,EADhBF,EAASC,GAKPa,EAAkB,kBAAMZ,GACxB1jB,EAAS,kBAAM0jB,GAAgB,GAErC,MAAO,CACH1Y,QACA8Y,aACAD,gBACA7jB,SACA+jB,YACAC,YACAE,mBACAE,mBACAC,qBACAC,oBAIKC,GAAW,SACpBC,GAKA,IAHE,IADFlB,EACC,uDADc,IAEXmB,EAAkBrB,GAChBsB,EAAYrB,KACXqB,EAAUJ,mBAAqB,GAAG,CACrC,GAAII,EAAUJ,mBAAqB,EAAG,CAElC,IAAMK,EAAcD,EAAUX,YAE9BU,EAAkBE,EAClB,MAEA,IAAMC,EAAUJ,EAAOE,EAAUX,aAEjC,IAAKa,GAAWF,EAAUX,YAAc,EAEpCW,EAAUZ,iBACP,CAEH,GAAIY,EAAUX,cAAgBX,GAAyB,MAClDqB,EAAkBC,EAAUb,iBAQ7C,IAAMgB,EAAeze,KAAKC,IAAIid,EAAcld,KAAKoB,IAAIid,EAAiBrB,KAEtE,OADIyB,IAAiBJ,GAAiBD,EAAOK,GACtCA,GC1HJ,MAAMC,GAAoBC,IAM7B,MAAM,cACFC,EAAgB,GAAE,aAClBC,EAAe,GAAE,YACjBC,EAAc,OAAM,cACpBC,EAAgB,SACX,OAALJ,QAAK,IAALA,IAAS,GACb,IAAI5sB,EAAS6sB,EACT5gB,EAAQ6gB,EACRhf,EAA6C,kBAAhBif,EAAwB,GAAAz6B,OAAMy6B,EAAW,MAAOA,EAC7EE,EAAsC,kBAAhBF,EAA2BA,EAAcG,WAAWH,EAAY7J,WAAW,KAAM,KACvGiK,EAASH,EAEb,MAAO,CACHI,QAASA,IAAA,GAAA96B,OAAS,CAAC2Z,EAAOjM,EAAQ8N,EAAMqf,GAAQnqB,QAAOqqB,GAAiB,KAATA,IAAaxrB,KAAK,KAAI,WACrFyrB,YAAaA,KAAA,CAASrhB,QAAO6B,OAAMqf,SAAQF,eAAcjtB,WACzDutB,UAAUC,GAEN,OADAxtB,EAASwtB,EACFnb,MAEXob,SAASC,GAEL,OADAzhB,EAAQyhB,EACDrb,MAEXO,QAAQ+a,GACJ,MAAMC,EAAqC,oBAAbD,EACxBA,EAASV,GACTU,EAON,OANA7f,EAAiC,kBAAnB8f,EAA2B,GAAAt7B,OAChCs7B,EAAc,MACjBA,EACNX,EAAyC,kBAAnBW,EAChBA,EACAV,WAAWU,EAAe1K,WAAW,KAAM,KAC1C7Q,MAEXwb,UAAUC,GAEN,OADAX,EAASW,EACFzb,QAKN0b,GAAiB9qB,IAMT,IANU,UAC3B+qB,EAAS,UACTn0B,GAIHoJ,EACG,MAAO,CACHtJ,YAAasU,KAAK6H,MAAMkY,EAAYn0B,EAAY,IAChD7C,SAAUg3B,EAAYn0B,EAAY,GAClCD,WAAYo0B,EAAYn0B,EACxBA,YACAC,aAAc,IAGTm0B,GAAoBA,CAAC9xB,EAAoB+xB,IAClD3gC,wBAAA,GACO4O,GAAQ,IACXT,SAAU,IACHS,EAAST,SACZqyB,GAAeG,MAKdC,GAAeA,CACxBC,EAKAC,KAEA,MAAM,SACFlyB,EAAQ,UACRmyB,GACAF,EACEG,EAAkB5B,KAElB6B,EAA0BjhC,wBAAA,GACzB8gC,GAAY,IACf3yB,SAAU,IAAIS,EAAST,YAO3B,OALA6yB,EACK3b,QAAQ4b,EAAiB9yB,SAAS4yB,GAAWt3B,UAC7C62B,UAAUW,EAAiBr7B,MAC3Bi6B,UAEE,CACHjxB,SAAUqyB,EACVF,YACAG,YAAaF,I,cClGRG,GAA4B,kBAAoBC,GAAaz7B,IAAsBe,gBAEnF26B,GAAmB,SAACC,GAAD,OAA4B,OAACA,QAAD,IAACA,IAAW,IACnElsB,KAAI,gBAAGhT,EAAH,EAAGA,MAAOm/B,EAAV,EAAUA,OAAV,gBAA0BA,EAA1B,YAAoCn/B,MAASkS,KAAK,MAC9C8sB,GAAe,SAAfA,EAAgBI,GAAD,OAA+CA,EACrEA,EAAmBpR,MAAM,KACtBhb,KAAI,SAACgD,EAAOnO,GAAW,IAAD,EACKmO,EAAMgY,MAAM,KADjB,oBACZmR,EADY,KAGnB,MAAO,CAAEn/B,MAHU,KAGHm/B,SAAQvjB,GAAI/T,EAAQ,MAE1Cm3B,EAAaz7B,IAAsBe,gBCZ5B+6B,GAAa,WAA6B,IAAD,EAC5BC,mBAAS,GADmB,oBAC3CC,EAD2C,KACtCC,EADsC,KAMlD,MAAO,CAJSC,uBAAY,WACxBD,GAAO,SAAA31B,GAAG,OAAIA,EAAM,OACrB,IAEc01B,ICRd,IAAMG,GAAqB,SAAC,GAgB5B,IAfHC,EAeE,EAfFA,MACAC,EAcE,EAdFA,aAcE,IAbFC,uBAaE,SAZFC,EAYE,EAZFA,SACAC,EAWE,EAXFA,UACAC,EAUE,EAVFA,SACAC,EASE,EATFA,WAUA,MAAO,CACHC,SAAU,EACVC,QAAS,WACDR,GAAOhV,QAAQyV,KAAK,mBAAoBT,GAC5CG,EAAS,IAEbO,OAAQ,WACAV,GAAOhV,QAAQyV,KAAK,kBAAmBT,GAC3CG,GAAU,IAEdQ,UAAW,SAAC5V,GACJmV,GAAiBnV,EAAEmV,kBACnBF,GAAOhV,QAAQyV,KAAK,qBAAsBT,EAAOjV,EAAEjrB,MAC/B,KAAV,OAAVwgC,QAAU,IAAVA,OAAA,EAAAA,EAAavV,MACH,eAAVA,EAAEjrB,KAAkC,cAAVirB,EAAEjrB,KAC5BirB,EAAE6V,iBACFT,GAAS,SAAAj2B,GAAG,OAAIyU,KAAKC,IAAI,EAAGqhB,EAAe/1B,EAAM,GAAK+1B,MAEvC,cAAVlV,EAAEjrB,KAAiC,YAAVirB,EAAEjrB,KAChCirB,EAAE6V,iBACFT,GAAS,SAAAj2B,GAAG,OAAIyU,KAAKC,IAAI,EAAGqhB,EAAe/1B,EAAM,GAAK+1B,MAEvC,UAAVlV,EAAEjrB,KAA6B,MAAVirB,EAAEjrB,IAC5BsgC,IAEe,WAAVrV,EAAEjrB,MACC,OAARugC,QAAQ,IAARA,YC3CT,MAuCMQ,GAAkB,WAAyD,IAAxDC,EAAO1jB,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,6BAA8Bzc,EAAMyc,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACzEjf,EAAS,GACb,MAAM4iC,EAAmBD,EAAQngC,OACjC,IAAK,IAAIyM,EAAI,EAAGA,EAAIzM,EAAQyM,IACxBjP,GAAU2iC,EAAQE,OAAOriB,KAAKoJ,MAAMpJ,KAAKsiB,SAAWF,IAExD,OAAO5iC,GC3CE+iC,GAAsBA,CAACC,EAAgC1kB,KAChE,MAAM,aACF5T,EAAY,SACZC,EAAQ,UACRF,EAAS,cACTG,GACAo4B,EAEJ,OAAAljC,wBAAA,GACOkjC,GAAc,IACjBt4B,aAAcA,EAAe4T,EAC7B3T,SAAUA,EAAW2T,EACrB7T,UAAWA,EAAY6T,EACvB1T,cAAwC,kBAAlBA,EAA6BA,EAAgB0T,EAAQ1T,KAItEq4B,GAAsBA,CAACC,EAA8C5kB,IACvE4kB,EAAWhuB,KAAI7Z,GAASA,EAAQijB,IAG9B6kB,GAAoBA,CAC7BC,EACA9kB,KAEA,MAAM,qBACFrS,EAAoB,aACpBI,EAAY,YACZH,EAAW,SACX3C,EAAQ,gBACRiD,EAAe,gBACfuG,EAAe,WACf5G,EAAU,QACVQ,EAAO,mBACPC,EAAkB,kBAClBgG,GACAwwB,EAEJ,OAAAtjC,wBAAA,GACOsjC,GAAY,IACfn3B,qBAAsD,kBAAzBA,EAAoCA,EAAuBqS,OAAQY,EAChG7S,aAAsC,kBAAjBA,EAA4BA,EAAeiS,OAAQY,EACxEhT,YAAaA,EAAcoS,EAC3B/U,SAAUA,EAAW+U,EACrB9R,gBAA4C,kBAApBA,EAA+BA,EAAkB8R,OAAQY,EACjFnM,gBAA4C,kBAApBA,EAA+BA,EAAkBuL,OAAQY,EACjF/S,WAAYA,EAAamS,EACzB3R,QAA4B,kBAAZA,EAAuBA,EAAU2R,OAAQY,EACzDtS,mBAAkD,kBAAvBA,EAAkCA,EAAqB0R,OAAQY,EAC1FtM,kBAAgD,kBAAtBA,EAAiCA,EAAoB0L,OAAQY,KAIlFmkB,GAAgBA,CAAC30B,EAAoB4P,IAC9Cxe,wBAAA,GACO4O,GAAQ,IACXT,SAAUS,EAAST,SAASiH,KAAIgD,GACrBirB,GAAkBjrB,EAAOoG,OC3D/BglB,GAAe,WAA4C,IAADC,EAAA,IAA1CC,EAAQvkB,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,2BACS,QAA7CskB,EAAAnkB,SAASqkB,cAA2BD,UAAS,IAAAD,GAA7CA,EAA+CG,SAiB5C,SAASC,KAA8D,IAAD,IAAAC,EAAA3kB,UAAAzc,OAA/CqhC,EAAI,IAAAzjB,MAAAwjB,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,GAAA7kB,UAAA6kB,GAC9B,OAAOD,EAAKtuB,OAAOwuB,SAAS3vB,KAAK,K,iwBCjB9B,MAAM4vB,GAAyBC,KAAOC,OAAMC,M,kCCA5C,MAAMC,GAAmBA,CAAClW,EAAoBmW,KAAwC,IAADC,EAAAC,EAAAC,EAAAC,EAAAC,EACxF,MAAM,QACFvnB,EAAO,OACPV,EAAM,OACN9C,EAAM,OACNxE,EAAM,eACN2H,EAAc,KACdnf,EAAI,SACJkf,EAAQ,eACRd,EAAc,MACdW,EAAK,YACLR,GACAgS,EAEJ,GAAIvU,IAAW0qB,EAAc,OAAOnW,EAEpC,MAAMyW,EAAerhC,EAAU6R,GAAQ5R,WAAa8gC,EAC9ClvB,EACA7R,EAAUG,EAAuB4gC,IAAe1iC,IAChDijC,EAA2B,QAAjBP,EAAyB5wB,GAAkBD,GACrDqxB,EAA6B,QAAjBR,GAA0B,MAAMzhB,KAAKlG,GACjDA,EAAM6T,QAAQ,MAAO,OACJ,QAAjB8T,GAA0B,MAAMzhB,KAAKlG,GACjCA,EAAM6T,QAAQ,MAAO,OACrB7T,EAEV,OAAA5c,wBAAA,GACOouB,GAAI,IACPvwB,KAAmB,QAAf2mC,EAAEM,EAAQjnC,UAAK,IAAA2mC,IAAI3mC,EACvBgc,OAAQ0qB,EACRlvB,OAAQwvB,EACRloB,OAAuB,QAAjB8nB,EAAEK,EAAQnoB,UAAO,IAAA8nB,IAAI9nB,EAC3BV,eAAuC,QAAzByoB,EAAEI,EAAQ7oB,UAAe,IAAAyoB,IAAIzoB,EAC3CG,YAAaA,EAAYhH,KAAIgD,IAAK,IAAA4sB,EAAA,OAAkB,QAAlBA,EAAIF,EAAQ1sB,UAAM,IAAA4sB,IAAI5sB,KACxDiF,QAAyB,QAAlBsnB,EAAEG,EAAQznB,UAAQ,IAAAsnB,IAAItnB,EAC7BN,SAA2B,QAAnB6nB,EAAEE,EAAQ/nB,UAAS,IAAA6nB,IAAI7nB,EAC/BH,MAAOmoB,EACP/nB,eAAiC,QAAjBunB,GAAiCvnB,K,aC1BlD,MAAMioB,GAAmBC,mBAA2B,CAAC1jB,EAAKC,KACtD,CACH0jB,UAAW,GACXC,WAAOhmB,EACPimB,WAAY,GACZC,aAAc,GACdC,oBAAoB,EACpBC,SAAS,EACTC,mBAAoBA,CAACN,EAAWE,KAC5B7jB,EAAI,CACA2jB,YACAE,aACAE,oBAAoB,KAG5BG,kBAAmBA,KACflkB,EAAI,CACA2jB,UAAW,GACXE,WAAY,GACZC,aAAc,GACdC,oBAAoB,EACpBC,SAAS,KAGjBG,WAAYA,KACRnkB,EAAI,CACA6jB,WAAY,MAGpBO,WAAYA,CAACC,EAAQC,EAAUC,KAC3BvkB,GAAI9L,IAAmC,IAAlC,WAAE2vB,EAAU,aAAEC,GAAc5vB,EAC7B,MAAMswB,EAAYX,EAAW5vB,QAAOuI,GAAMA,IAAO6nB,IAC3CI,EAAgBjmC,YAAA,GAAQslC,GAG9B,OAFAW,EAAiBJ,GAAU,CAAEhoC,KAAMioC,EAAUpY,KAAMqY,GAE5C,CACHV,WAAYW,EACZV,aAAcW,EACdT,QAA8B,IAArBQ,EAAUtjC,gB,8CCxChC,MAiBMwjC,GAAkB,SAACC,GAA0F,IAAxDC,EAA6CjnB,UAAAzc,OAAA,QAAA0c,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC9G,MAAMknB,EAAuBrmC,wBAAA,GACtBomC,GACAD,EAAgBG,eAEjBC,EAAsBnuB,IAAmB,IAADouB,EAC1C,OAAqC,QAArCA,EAAOH,EAAwBjuB,UAAM,IAAAouB,IAAI,IAEvCC,EAAoBA,CAACC,EAAkBC,KACzC,MAAMC,EAAa,IAAIxwB,OAAO,OAADrR,OAAQG,OAAOksB,KAAKuV,GAASryB,KAAK,KAAI,SAE7DuyB,EAAiBH,EAAStW,MAAMwW,GAEtC,OAAO1iC,cAAC4iC,IAAMC,SAAQ,CAAApoB,SACjBkoB,EAAezxB,KAAI,CAACgD,EAAOnO,IACpBA,EAAQ,IAAM,EAAU/F,cAAC4iC,IAAMC,SAAQ,CAAApoB,SAA4BvG,GAAK,GAAArT,OAAxBqT,EAAK,KAAArT,OAAIkF,IACtD08B,EAAQvuB,MAHKsuB,IAO1BM,EAAwB,CAC1B,sBAAwBC,GACbV,EAAmB,uBAAuB5Q,WAAW,eAAgBsR,GAEhF,sBAAwBA,GACbV,EAAmB,uBAAuB5Q,WAAW,eAAgBsR,GAEhF,6BAA+BC,GACpBX,EAAmB,8BAA8B5Q,WAAW,aAAa,GAAD5wB,OAAKmiC,IAExF,gCAAkCC,GACvBV,EACHF,EAAmB,iCACnB,CAAEY,aAGV,gCAAiCC,CAACC,EAA0BC,IACjDb,EACHF,EAAmB,iCACnB,CAAEc,UAASC,YAGnB,6BAA8BC,CAC1BC,EACAC,EACAC,EACAC,IAEOlB,EACHF,EAAmB,8BACnB,CAAEiB,UAASC,UAASC,UAASC,YAGrC,iCACIC,GAEOnB,EACHF,EAAmB,kCACnB,CAAEqB,cAGV,4BAA8BC,GACnBpB,EACHF,EAAmB,6BACnB,CAAEsB,gBAGV,iCAAkCC,CAC9BC,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCC,CAC9BJ,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCE,CAC9BC,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCI,CAC9BD,EACAJ,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAE8B,YAAWJ,SAAQC,sBAG7B,iCAAkCK,CAC9BR,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCM,CAC9BT,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCO,CAC9BV,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCAAkCQ,CAC9BX,EACAC,EACAC,EACAC,IAEOzB,EACHF,EAAmB,kCACnB,CAAEwB,UAASC,WAAUC,SAAQC,sBAGrC,iCACIH,GAEOtB,EACHF,EAAmB,kCACnB,CAAEwB,YAGV,sCACIY,GAEOlC,EACHF,EAAmB,uCACnB,CAAEoC,aAGV,oBACIC,GAEOnC,EACHF,EAAmB,qBACnB,CAAEqC,eAKd,OAAA5oC,wBAAA,GACOmmC,GAAe,IAClBG,cAAeD,EACf/qC,WAAU0E,wBAAA,GACHqmC,GACAW,MC9LF6B,GAAU3D,mBAAkB,CAAC1jB,EAAKC,KAC3C,MAAMqnB,EAAsB,MAExB,MAAMnb,EAAM,IAAIC,IAAIsI,OAAO6S,SAAS9S,MAC9B+S,EAAerb,EAAIsb,aACnBC,EAAyBF,EAAavnB,IAAI,YAIhD,GAFAunB,EAAaG,OAAO,YACpBjT,OAAOkT,QAAQC,aAAanT,OAAOkT,QAAQE,MAAO,GAAI3b,EAAIsI,MACtDiT,EAAwB,OAAOA,EAEnC,IACI,MAAMK,EAAiBC,aAAaC,QAAQ,YAE5C,OAAIF,GACG,MACT,MAAOzc,GAEL,OADAC,QAAQC,MAAM,iDAAkDF,GACzD,QAjBa,GAoBtB4c,EAAqD,GACrDC,EAAkBzD,GAAelmC,wBAAC,GDjCF,CACtCnC,KAAM,UACN+rC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,IC4B2B,IAC/B1D,cAAe,MAsCb2D,EAAeC,UACjB,GAAIR,EAAYS,GAAe,OAAO,KACtC,IAAK,IAADC,EACA,MAAMC,QAAiBC,MAAM,GAADvlC,OACrBC,aAAsB,gBAAAD,OAAeolC,EAAY,SACpD,CACII,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBC,QAAsCH,EAASI,OAErD,IAAKD,EAAalE,cAAe,MAAO,IAAIhkB,MAAM,uBAClD,MAAMooB,EAAoBxE,GAAgBsE,EAA6B,QAAjBJ,EAAEV,EAAYiB,WAAG,IAAAP,OAAA,EAAfA,EAAiB9D,eAGzE,OAFAoD,EAAYS,GAAgBO,EAErBA,EACT,MAAO5d,GAEL,OADAC,QAAQC,MAAM,gEAAiEF,GACxE,OAGT8d,EAAiBV,UACnB,MAAMW,EAAWppB,IAAMqpB,oBAAoBX,GAC3C,IAAKU,EAAU,OAIf,MAAML,EAAgBd,EAAYS,GAE5BT,EAAYS,SADNF,EAAaE,GAGrBK,GACAhpB,EAAI,CACAupB,aAActpB,IAAMqpB,oBAAoBX,GACxCprB,SAAUyrB,EAAalvC,aAE3BkuC,aAAawB,QAAQ,WAAYb,GACjC3oB,EAAI,CACAypB,WAAW,EACXF,aAAcF,KAGlBrpB,EAAI,CACAypB,WAAW,EACXF,aAActpB,IAAMqpB,oBAAoBH,IACxC5rB,SAAU4qB,EAAgBruC,cAKtC,MAAO,CACHwvC,oBAAqB,GACrBC,aDhIkC,CACtCltC,KAAM,UACN+rC,WAAY,UACZC,SAAU,MACVC,eAAgB,GAChBC,MAAO,IACPC,QAAQ,GC2HJjrB,SAAU4qB,EAAgBruC,WAC1B0xB,MAAO,KACPke,cAAc,EACdD,WAAW,EACXE,iBAAiB,EACjBC,SAAUlB,UAjGeA,WACzB,IACI,MAAMG,QAAiBC,MAAM,GAADvlC,OACrBC,aAAsB,6BACzB,CACIulC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBO,QAA8DT,EAASI,OAE7E,IAAKK,EAAqB,MAAO,IAAIxoB,MAAM,qBAE3Cd,EAAI,CACAspB,sBACAK,iBAAiB,IAEvB,MAAOre,GACLC,QAAQC,MAAM,6EAA8EF,GAC5FtL,EAAI,CACAspB,oBAAqB,CACjBH,IAAK,CACD9sC,KAAM,UACN+rC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBmB,iBAAiB,MAkErBE,IAEJC,oBAAqBpB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBtnB,EAAI,CACA0pB,cAAc,KAGtBjB,eACAW,qBAIKW,GAAcA,IACN1C,IAAQnzB,IAAA,IAAC,SAAEqJ,GAAUrJ,EAAA,OAAKqJ,KAIlCysB,GAAcA,IAAM3C,GAAQ4C,WAAW1sB,S,cCvIpD,MAAM2sB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,uBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,+BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,wCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIh2B,cAAc8f,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGmW,GAAc,IAAIC,IAAIJ,GAAav2B,IAAIw2B,KAEvCI,GAAsBN,GAAqB3/B,QAAO,CAACC,EAAK6/B,EAAO5hC,KACjE,MAAMgiC,EAAuBL,GAAmBC,GAGhD,OAFIC,GAAYI,IAAID,KAAuBjgC,EAAI6/B,GAAqB5hC,GAE7D+B,IACR,IAEGmgC,GAAoBnqB,GACV,MAARA,GACS,KAATA,EAD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","file":"static/js/main.50fa15c0.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 56,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    effectBox: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type10: {\r\n        value: 'type10',\r\n        label: '10',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type11: {\r\n        value: 'type11',\r\n        label: '11',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type12: {\r\n        value: 'type12',\r\n        label: '12',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type13: {\r\n        value: 'type13',\r\n        label: '13',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            art: [\r\n                { blendMode: 'darken', opacity: 1 },\r\n                { blendMode: 'multiply', opacity: 1 },\r\n                { blendMode: 'overlay', opacity: 1 },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    background: {\r\n        key: 'background' as const,\r\n        labelKey: 'input.background.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilMap = {\r\n    normal: {\r\n        name: 'normal' as const,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    gold: {\r\n        name: 'gold' as const,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    platinum: {\r\n        name: 'platinum' as const,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        label: dictionary?.normal,\r\n        ...FoilMap.normal,\r\n    },\r\n    {\r\n        label: dictionary?.gold,\r\n        ...FoilMap.gold,\r\n    },\r\n    {\r\n        label: dictionary?.platinum,\r\n        ...FoilMap.platinum,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\r\n\r\nexport type FrameDyeList = [\r\n    topLeft: string,\r\n    topRight: string,\r\n    bottomLeft: string,\r\n    bottomRight: string,\r\n    effect: string,\r\n    pendulumEffect: string,\r\n    foil: string,\r\n];\r\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\r\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\r\n\r\nexport const DyeIndexMap = {\r\n    topLeftFrame: 0,\r\n    topRightFrame: 1,\r\n    bottomLeftFrame: 2,\r\n    bottomRightFrame: 3,\r\n    effectBackground: 4,\r\n    pendulumEffectBackground: 5,\r\n    foil: 6,\r\n};","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const ExtraAttributeList = [\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-1',\r\n        nameKey: 'input.attribute.boss-1',\r\n        label: 'Boss 1',\r\n        color: '#9b325d',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-2',\r\n        nameKey: 'input.attribute.boss-2',\r\n        label: 'Boss 2',\r\n        color: '#942a56',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-3',\r\n        nameKey: 'input.attribute.boss-3',\r\n        label: 'Boss 3',\r\n        color: '#86214b',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-START',\r\n        nameKey: 'input.attribute.boss-start',\r\n        label: 'Boss Start',\r\n        color: '#a13864',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\r\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\r\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\r\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\r\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\r\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\r\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\r\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\r\n};\r\nexport const DefaultFormatAttribute: Record<string, string> = {\r\n    tcg: RegionMap.en.key,\r\n    ocg: RegionMap.jp.key,\r\n};\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        value: 'NORMAL',\r\n        nameKey: 'input.icon.normal',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport type IconTypeInfo = {\r\n    value: string,\r\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n    isMixable: boolean,\r\n    showIcon: boolean,\r\n    imagePresetPath: string,\r\n    imagePresetSource: string,\r\n}\r\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-',\r\n        imagePresetSource: '',\r\n    },\r\n    'custom': {\r\n        value: 'custom',\r\n        labelKey: 'input.icon-type.custom.label',\r\n        fullLabelKey: 'input.icon-type.custom.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-',\r\n        imagePresetSource: '',\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-st',\r\n        imagePresetSource: 'subfamily/subfamily-icon-list.png',\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-level',\r\n        imagePresetSource: 'subfamily/subfamily-level.png',\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-negative-level',\r\n        imagePresetSource: 'subfamily/subfamily-negative-level.png',\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-rank',\r\n        imagePresetSource: 'subfamily/subfamily-rank.png',\r\n    },\r\n    'level-rank': {\r\n        value: 'level-rank',\r\n        labelKey: 'input.icon-type.level-rank.label',\r\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-level-rank',\r\n        imagePresetSource: 'subfamily/subfamily-level-rank.png',\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\r\n    'dark': {\r\n        value: 'dark',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.dark',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"dark-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-dark',\r\n        imagePresetSource: 'subfamily/subfamily-dark.png',\r\n    },\r\n    'earth': {\r\n        value: 'earth',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.earth',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"earth-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-earth',\r\n        imagePresetSource: 'subfamily/subfamily-earth.png',\r\n    },\r\n    'fire': {\r\n        value: 'fire',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.fire',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"fire-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-fire',\r\n        imagePresetSource: 'subfamily/subfamily-fire.png',\r\n    },\r\n    'light': {\r\n        value: 'light',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.light',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"light-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-light',\r\n        imagePresetSource: 'subfamily/subfamily-light.png',\r\n    },\r\n    'water': {\r\n        value: 'water',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.water',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"water-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-water',\r\n        imagePresetSource: 'subfamily/subfamily-water.png',\r\n    },\r\n    'wind': {\r\n        value: 'wind',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.wind',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"wind-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-wind',\r\n        imagePresetSource: 'subfamily/subfamily-wind.png',\r\n    },\r\n    'divine': {\r\n        value: 'divine',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.divine',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"divine-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-divine',\r\n        imagePresetSource: 'subfamily/subfamily-divine.png',\r\n    },\r\n    'spell': {\r\n        value: 'spell',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.spell',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"spell-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-spell',\r\n        imagePresetSource: 'subfamily/subfamily-spell.png',\r\n    },\r\n    'trap': {\r\n        value: 'trap',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.trap',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"trap-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-trap',\r\n        imagePresetSource: 'subfamily/subfamily-trap.png',\r\n    },\r\n};\r\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\r\n\r\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\r\n    'continuous-l': {\r\n        value: 'continuous-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.continuous',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"continuous-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-continuous',\r\n        imagePresetSource: 'subfamily/subfamily-continuous-l.png',\r\n    },\r\n    'counter-l': {\r\n        value: 'counter-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.counter',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"counter-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-counter',\r\n        imagePresetSource: 'subfamily/subfamily-counter-l.png',\r\n    },\r\n    'equip-l': {\r\n        value: 'equip-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.equip',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"equip-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-equip',\r\n        imagePresetSource: 'subfamily/subfamily-equip-l.png',\r\n    },\r\n    'field-l': {\r\n        value: 'field-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.field',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"field-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-field',\r\n        imagePresetSource: 'subfamily/subfamily-field-l.png',\r\n    },\r\n    'quick-play-l': {\r\n        value: 'quick-play-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.quick-play',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"quick-play-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-quick-play',\r\n        imagePresetSource: 'subfamily/subfamily-quick-play-l.png',\r\n    },\r\n    'ritual-l': {\r\n        value: 'ritual-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.ritual',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"ritual-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-ritual',\r\n        imagePresetSource: 'subfamily/subfamily-ritual-l.png',\r\n    },\r\n    'normal-l': {\r\n        value: 'normal-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.normal',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"normal-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-normal',\r\n        imagePresetSource: 'subfamily/subfamily-normal-l.png',\r\n    },\r\n};\r\nexport const IconTypeStList = Object.values(IconTypeStMap);\r\n\r\nexport const TotalIconTypeMap = {\r\n    ...IconTypeMap,\r\n    ...IconTypeAttributeMap,\r\n    ...IconTypeStMap,\r\n};\r\nexport const MAX_STAR_LENGTH = 13;\r\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const AUTO_FONT = 'Auto';\r\nexport const getDefaultNameStyle = () => ({\r\n    font: AUTO_FONT,\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum'\r\n| 'rainbowSecretRare';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    rainbowSecretRare: {\r\n        key: 'rainbowSecretRare',\r\n        label: 'Rainbow Secret Rare',\r\n        image: 'asset/image/other/name-rainbow-secret-rare.png',\r\n        value: createPresetNameStyle({\r\n            hasOutline: true,\r\n            headTextFillStyle: '#000000',\r\n            lineColor: '#333333',\r\n            lineOffsetX: 0,\r\n            lineOffsetY: 0,\r\n            lineWidth: 6,\r\n            pattern: 'type2',\r\n            preset: 'rainbowSecretRare',\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 792,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 808,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\r\n    ShowDefAndLink: number,\r\n    LinkRating: number,\r\n];\r\n/**\r\n * Remember, 0 is ALWAYS the default state.\r\n */\r\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\r\n\r\nexport const LINK_RATING_ALWAYS_AUTO = 0;\r\nexport const LINK_RATING_ALWAYS_SHOW = 1;\r\nexport const LINK_RATING_ALWAYS_HIDE = 2;\r\n\r\nexport const FlagInfoList = [\r\n    {\r\n        index: 0,\r\n        labelKey: 'input.flag.mix-def-link',\r\n        type: 'checkbox' as const,\r\n    },\r\n    {\r\n        index: 1,\r\n        labelKey: 'input.flag.link-rating-behavior',\r\n        type: 'link-rating-behavior' as const,\r\n    },\r\n];\r\nexport const FlagIndexMap = {\r\n    showDefAndLink: 0,\r\n    linkRating: 1,\r\n};\r\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    variant: string,\r\n    vietnameseFont?: string,\r\n    vietnameseFontRatio?: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextGapRatio: 0,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    vietnameseFont: 'Times New Roman',\r\n    vietnameseFontRatio: 1.1,\r\n    letterOffsetMap: {\r\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\r\n    },\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook, Times New Roman',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n    variant: 'default-tcg',\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\r\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    vietnameseFontRatio: 1.08,\r\n    fontList: [],\r\n    variant: 'default-tcg-normal',\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact' as MetricMethod,\r\n    fontList: [],\r\n    variant: 'default-ocg',\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-stat',\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-type',\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\r\n            font: 'MatrixRegularSmallCaps, Times New Roman',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.55,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix, Times New Roman',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'MatrixRegularSmallCaps',\r\n            vietnameseFontRatio: 1,\r\n            variant: 'default-name',\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterOffsetMap: {\r\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\r\n            },\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.825,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'Arial',\r\n            vietnameseFontRatio: 1,\r\n            weight: 'bold',\r\n            variant: 'arial-name',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            fontStyle: 'ocg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextBold: true,\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            vietnameseFontRatio: 1,\r\n            variant: 'ocg-name',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-password',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    variant: 'ocg-creator',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-password',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    variant: 'ocg-password',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-type-ability',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    variant: 'ocg-type-ability',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-small',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-large',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-small',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-large',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-small',\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-large',\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    'Ø': '∅',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    '∅': 'Ø',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n    foil: { labelKey: 'input.foil.label' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { IconTypeMap, IconTypeAttributeMap, IconTypeStMap, RegionMap, AttributeList, ExtraAttributeList } from './icon';\r\n\r\nexport type ImagePreset = {\r\n    src: string,\r\n    name: string,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    offsetX: number | undefined,\r\n    offsetY: number | undefined,\r\n};\r\n\r\nexport const TotalIconTypePresetMap = Object\r\n    .values({\r\n        ...IconTypeMap,\r\n        ...IconTypeAttributeMap,\r\n        ...IconTypeStMap,\r\n    })\r\n    .reduce((acc, cur) => {\r\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\r\n        return acc;\r\n    }, {} as Record<string, string>);\r\n\r\nexport const TotalAttributeIconPresetList = Object.values(RegionMap).map((region) => {\r\n    const regionName = region.fileKey;\r\n    const hasExtraAttribute = ['ocg', 'tcg'].includes(regionName);\r\n    return [\r\n        ...[...AttributeList]\r\n            .filter(({ isOption }) => isOption === true)\r\n            .flatMap(({ name }) => {\r\n                return {\r\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\r\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\r\n            }),\r\n        ...[...(hasExtraAttribute ? ExtraAttributeList : [])]\r\n            .filter(({ isOption }) => isOption === true)\r\n            .flatMap(({ name }) => {\r\n                return {\r\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\r\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\r\n            }),\r\n    ];\r\n});\r\nexport const TotalAttributeIconPresetMap = TotalAttributeIconPresetList\r\n    .flatMap(list => list)\r\n    .reduce((acc, cur) => {\r\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\r\n        return acc;\r\n    }, {} as Record<string, string>);\r\n\r\nexport const TotalImagePresetMap = {\r\n    ...TotalAttributeIconPresetMap,\r\n    ...TotalIconTypePresetMap\r\n};\r\n","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const StylingTagList = ['i', 'b', 'pre'];\r\nexport const STYLING_TAG_SOURCE = `<(\\\\/?(${StylingTagList.join('|')}))( [^<]*|)>`;\r\nexport const StylingTagRegex = new RegExp(STYLING_TAG_SOURCE);\r\n\r\nexport const IMG_TAG_NAME = 'img';\r\n\r\nexport const RenderTagList = [IMG_TAG_NAME];\r\nexport const RENDER_TAG_SOURCE = `<(${RenderTagList.join('|')}).*?\\\\/>`;\r\nexport const RenderTagRegex = new RegExp(RENDER_TAG_SOURCE);\r\n\r\n/** Use italic font like in Normal Monster */\r\nexport const ITALIC_OPEN_TAG = '<i>';\r\nexport const ITALIC_CLOSE_TAG = '</i>';\r\n\r\nexport const BOLD_OPEN_TAG = '<b>';\r\nexport const BOLD_CLOSE_TAG = '</b>';\r\n\r\n/** Ignore dynamic space and force draw character as is (still affected by text condensation) */\r\nexport const PRE_OPEN_TAG = '<pre>';\r\nexport const PRE_CLOSE_TAG = '</pre>';\r\n\r\n/** \r\n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\r\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\r\n * * Latin Extended-A\r\n * * Latin Extended-B\r\n * * Latin Extended Additional\r\n * \r\n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\r\n */\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\r\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⧚';\r\nexport const NB_WORD_CLOSE = '⧛';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\r\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\n/** Additional symbol including\r\n * * Greek Extended \r\n * * Greek and Coptic\r\n */\r\nexport const TCG_SYMBOL_JOINLIST = '¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\nimport { getDefaultCardFlag } from './flag';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export / template\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    starList: [] as string[],\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    linkRating: '',\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    flag: getDefaultCardFlag(),\r\n    dyeList: getDefaultDyeList(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 3,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starList: [] as string[],\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    linkRating: '',\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    dyeList: getDefaultDyeList(),\r\n    flag: getDefaultCardFlag(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        subType: 'effectBox' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: 'input.opacity.effect-box.tooltip',\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\r\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\r\n    {\r\n        value: 'auto' as const,\r\n        label: language['setting.option.sliding-type.auto.label'],\r\n    },\r\n    {\r\n        value: 'manual' as const,\r\n        label: language['setting.option.sliding-type.manual.label'],\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './flag';\r\nexport * from './foil-finish-dye';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import { CanvasConst } from 'src/model';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\n\r\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        ctx,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import { CanvasConst } from 'src/model';\r\nimport { createCanvas } from './create';\r\nimport { HexColorRegex } from '..';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\r\n    if (!HexColorRegex.test(color)) return {\r\n        canvas: baseCanvas,\r\n        ctx: baseCanvas.getContext('2d'),\r\n    };\r\n\r\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\r\n\r\n    /** Draw the target image with grayscale */\r\n    overlayContext.filter = 'grayscale(1)';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.filter = 'none';\r\n\r\n    /** Overlay the color lens on top the grayscale layer to dye it */\r\n    overlayContext.fillStyle = color;\r\n    overlayContext.globalCompositeOperation = 'overlay';\r\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\r\n\r\n    /** Draw the target image again but with destination-in mode to remove excess area */\r\n    overlayContext.globalCompositeOperation = 'destination-in';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.globalCompositeOperation = 'source-over';\r\n\r\n    return {\r\n        canvas: overlayCanvas,\r\n        ctx: overlayCanvas.getContext('2d'),\r\n    };\r\n};","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import {\r\n    AUTO_FONT,\r\n    Card,\r\n    Foil,\r\n    frameList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PresetNameStyleMap,\r\n} from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\r\n    let showLinkRating = false;\r\n    switch (displayMode) {\r\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\r\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\r\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\r\n    }\r\n\r\n    return showLinkRating;\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    let contextualFont = nameStyle.font;\r\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\r\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\r\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return {\r\n            ...nameStyle,\r\n            font: contextualFont,\r\n        };\r\n    }\r\n\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    region: 'rg',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        artBorder: 'opab',\r\n        effectBox: 'opeb',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n        minLine: 'eml',\r\n        justifyRatio: 'ejr',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n        minLine: 'pml',\r\n        justifyRatio: 'pjr',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    starList: 'stl',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    linkRating: 'lr',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    dyeList: 'dl',\r\n    flag: 'fl',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detect the actual version from incoming cards. */\r\n    delete (baseCard as Record<string, unknown>).version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n            ];\r\n        }\r\n    }\r\n    if (Array.isArray(migratedCard.otherFinish)\r\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\r\n    ) {\r\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    const defaultFlagList = getDefaultCardFlag();\r\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\r\n    else if (migratedCard.flag.length < defaultFlagList.length) {\r\n        const currentFlagList = [...migratedCard.flag];\r\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\r\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\r\n            return entry;\r\n        }) as CardFlag;\r\n    }\r\n\r\n    const defaultDyeList = getDefaultDyeList();\r\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\r\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\r\n        const currentDyeList = [...migratedCard.dyeList];\r\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\r\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\r\n            return entry;\r\n        }) as FrameDyeList;\r\n    }\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n    if (migratedCard.version === 2) {\r\n        migratedCard.version = 3;\r\n        const font = migratedCard.nameStyle.font;\r\n        /**\r\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\r\n         */\r\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n    const href = window.URL.createObjectURL(blob);\r\n\r\n    link.download = name;\r\n    link.href = href;\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n    window.URL.revokeObjectURL(href);\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const setCharAt = (str: string, index: number, chr: string) => {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n};\r\n\r\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\r\n        if (nextList[cnt] == null || nextList[cnt] === '') {\r\n            nextList.pop();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return nextList;\r\n};\r\n\r\nexport const padRight = <Value extends (string | undefined | null)[]>(list: Value, limit: number, padUnit = '') => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length; cnt < limit; cnt++) {\r\n        nextList.push(padUnit);\r\n    }\r\n\r\n    return nextList;\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRgba = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\nfunction componentToHex(c?: number) {\r\n    if (typeof c !== 'number') return '00';\r\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n}\r\nexport const rgbToHex = (rgb: number[]) => {\r\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\r\n};\r\n\r\n/** Contrast formula from google \\ :v / */\r\nexport const getContrastColor = (rgbColor: number[]) => {\r\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};\r\n\r\nexport const swapTextData = (\r\n    currentTextData: {\r\n        fontData: FontData;\r\n        fontLevel: number;\r\n        currentFont: FontGetter;\r\n    },\r\n    nextFontData: FontData,\r\n) => {\r\n    const {\r\n        fontData,\r\n        fontLevel,\r\n    } = currentTextData;\r\n    const nextCurrentFont = createFontGetter();\r\n    /** We use the font list of old font, avoiding merge font because it seems unnecessary, also avoiding redo dynamic font injection */\r\n    const combinedFontData: FontData = {\r\n        ...nextFontData,\r\n        fontList: [...fontData.fontList],\r\n    };\r\n    nextCurrentFont\r\n        .setSize(combinedFontData.fontList[fontLevel].fontSize)\r\n        .setFamily(combinedFontData.font)\r\n        .getFont();\r\n\r\n    return {\r\n        fontData: combinedFontData,\r\n        fontLevel,\r\n        currentFont: nextCurrentFont,\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport const isTouchDevice = () => {\r\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './color';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        region,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const targetRegion = RegionMap[region].category === targetFormat\r\n        ? region\r\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        region: targetRegion,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import { create } from 'zustand';\r\n\r\nexport type BatchDownloadStore = {\r\n    batchName: string,\r\n    batchQueue: string[],\r\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\r\n    isBatchDownloading: boolean,\r\n    isReady: boolean,\r\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\r\n    stopBatchDownload: () => void,\r\n    clearQueue: () => void,\r\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\r\n};\r\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\r\n    return {\r\n        batchName: '',\r\n        batch: undefined,\r\n        batchQueue: [],\r\n        batchDataMap: {},\r\n        isBatchDownloading: false,\r\n        isReady: false,\r\n        startBatchDownload: (batchName, batchQueue) => {\r\n            set({\r\n                batchName,\r\n                batchQueue,\r\n                isBatchDownloading: true,\r\n            });\r\n        },\r\n        stopBatchDownload: () => {\r\n            set({\r\n                batchName: '',\r\n                batchQueue: [],\r\n                batchDataMap: {},\r\n                isBatchDownloading: false,\r\n                isReady: false,\r\n            });\r\n        },\r\n        clearQueue: () => {\r\n            set({\r\n                batchQueue: [],\r\n            });\r\n        },\r\n        addToBatch: (cardId, cardName, cardBlob) => {\r\n            set(({ batchQueue, batchDataMap }) => {\r\n                const nextQueue = batchQueue.filter(id => id !== cardId);\r\n                const nextBatchDataMap = { ...batchDataMap };\r\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\r\n\r\n                return {\r\n                    batchQueue: nextQueue,\r\n                    batchDataMap: nextBatchDataMap,\r\n                    isReady: nextQueue.length === 0 ? true : false,\r\n                };\r\n            });\r\n        },\r\n    };\r\n});","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\nexport type WithLanguage = {\r\n    language: LanguageDataDictionary\r\n};\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-7.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-7.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-8.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-8.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-9.content': (\r\n            openTag: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-9.content'),\r\n                { openTag },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardFlag,\r\n    CardOpacity,\r\n    CondenseType,\r\n    DYE_LIST_LENGTH,\r\n    FLAG_LENGTH,\r\n    Foil,\r\n    FoilMap,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardFlag,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultDyeList,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    MAX_STAR_LENGTH,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    'Region',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Link Rating',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Effect Box',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Effect Style - Min Line',\r\n    'Effect Style - Justify Ratio',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Pendulum Effect Style - Min Line',\r\n    'Pendulum Effect Style - Justify Ratio',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Background',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'Dye List',\r\n    'Star List',\r\n    'Flag',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            flag,\r\n            foil,\r\n            format,\r\n            region,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            leftFrame,\r\n            linkMap,\r\n            linkRating,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            rightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            starList,\r\n            typeAbility,\r\n            typeTextStyle,\r\n            dyeList,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n        const stringifedFlag = flag.join('|');\r\n        const stringifedDyeList = dyeList.join('|');\r\n        const stringifedSubFamilyList = starList.join('|');\r\n\r\n        write('Format', format);\r\n        write('Region', region);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Link Rating', linkRating);\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Effect Box', opacity.effectBox);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Effect Style - Min Line', effectStyle.minLine);\r\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\r\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Other Finish - Background', otherFinish[3]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('Dye List', stringifedDyeList);\r\n        write('Star List', stringifedSubFamilyList);\r\n        write('Flag', stringifedFlag);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const finishBackground = reader('Other Finish - Background') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '')\r\n                        .map(entry => typeof entry === 'string' ? entry : '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\r\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\r\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\r\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    effectBox: normalizeBoolean(reader('Opacity - Effect Box'), emptyOpacity.effectBox),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n                const linkRating = reader('Link Rating') ?? '';\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\r\n                const flag = getDefaultCardFlag().map((entry, index) => {\r\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\r\n                    return entry;\r\n                }) as CardFlag;\r\n\r\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\r\n                const dyeList = getDefaultDyeList().map((entry, index) => {\r\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\r\n                    return entry;\r\n                }) as FrameDyeList;\r\n\r\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    dyeList,\r\n                    effect,\r\n                    effectStyle: {\r\n                        condenseTolerant,\r\n                        upSize: effectUpSize,\r\n                        fontStyle: effectFontStyle,\r\n                        background: effectBackground,\r\n                        minLine: effectMinLine,\r\n                        justifyRatio: effectJustifyRatio,\r\n                    },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    flag,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    leftFrame,\r\n                    linkMap,\r\n                    linkRating,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: {\r\n                        upSize: pendulumEffectUpSize,\r\n                        fontStyle: pendulumEffectFontStyle, \r\n                        background: pendulumEffectBackground,\r\n                        minLine: pendulumEffectMinLine,\r\n                        justifyRatio: pendulumEffectJustifyRatio,\r\n                    },\r\n                    pendulumTextStyle,\r\n                    region,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starList,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    try {\r\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n        if (frameResult !== 0) return frameResult;\r\n\r\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n        return bottomFrameResult;\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    selectedMap: Record<string, string>,\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    selectCard: (id: string, type: 'add' | 'remove') => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        selectedMap: {},\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect, isPendulum }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + (isPendulum ? normalizeCardEffect(pendulumEffect).toLowerCase() : '')).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        selectCard: (id, type) => {\r\n            set(({ selectedMap }) => {\r\n                const nextMap = { ...selectedMap };\r\n                if (type === 'add') nextMap[id] = id;\r\n                else delete nextMap[id];\r\n\r\n                return { selectedMap: nextMap };\r\n            });\r\n        },\r\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\r\n            selectedMap: cardList.reduce((prev, curr) => {\r\n                prev[curr.id] = curr.id;\r\n                return prev;\r\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\r\n        })),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    allowHotkey: boolean,\r\n    exportFormat: ExportFormat,\r\n    exportScheme: string,\r\n    globalScale: number,\r\n    mirrorPendulumScale: boolean,\r\n    reduceMotionColor: boolean,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraAttribute: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    slidingType: SlindingType,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        exportScheme,\r\n        globalScale,\r\n        mirrorPendulumScale,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraAttribute,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\nimport { useBatchDownload } from './use-batch-download';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const {\r\n        addToBatch,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n    } = useBatchDownload();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const exportScheme = useSetting(state => state.setting.exportScheme);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const normalizedName = normalizeCardName(name);\r\n    const pendingSave = useRef(false);\r\n\r\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            if (size) {\r\n                clonedCanvas.width = size[0];\r\n                clonedCanvas.height = size[1];\r\n            }\r\n            /** Resize here */\r\n            clonedCanvasContext.drawImage(\r\n                drawCanvas,\r\n                0, 0, drawCanvas.width, drawCanvas.height,\r\n                0, 0, clonedCanvas.width, clonedCanvas.height,\r\n            );\r\n\r\n            return clonedCanvas.toDataURL('image/png');\r\n        }\r\n    }, [exportCanvasRef, isTainted, resolution]);\r\n    const addToCurrentBatch = useCallback(async (\r\n        cardName: string,\r\n        cardId: string,\r\n        size: [number, number] = resolution,\r\n    ) => {\r\n        try {\r\n            const cardData = getCardDataUrl(size);\r\n            if (typeof cardData !== 'string') throw new Error('Failed to add card to batch');\r\n            const fetchedDataUrl = await fetch(cardData);\r\n            const blob = await fetchedDataUrl.blob();\r\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        try {\r\n            const normalizedName = normalizeCardName(name);\r\n            const cardData = getCardDataUrl(size);\r\n            if (typeof cardData !== 'string') throw new Error('Failed to trigger automatic download');\r\n            var link = document.createElement('a');\r\n            link.download = normalizedName\r\n                ? `${normalizedName}.png`\r\n                : 'card.png';\r\n            link.href = cardData;\r\n            link.click();\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [normalizedName]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\r\n                                setTimeout(() => {\r\n                                    addToCurrentBatch(\r\n                                        exportScheme === 'with-name'\r\n                                            ? `${normalizedName}.png`\r\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\r\n                                        normalizedCard.id,\r\n                                    );\r\n                                }, 200);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport interface YgoCarderDb extends DBSchema {\r\n    messageStore: {\r\n        key: string,\r\n        value: string,\r\n    },\r\n    presetLayoutStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n    presetNameStyleStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n    presetImageStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n};\r\n\r\nexport async function setupYgoCarderDb() {\r\n    try {\r\n        const db = await openDB<YgoCarderDb>(\r\n            'YgoCarderDb',\r\n            4,\r\n            {\r\n                upgrade(db, _oldVersion, newVersion) {\r\n                    if (!db.objectStoreNames.contains('messageStore')) {\r\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\r\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\r\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\r\n                    }\r\n                    if (newVersion === 4) {\r\n                        if (!db.objectStoreNames.contains('presetImageStore')) {\r\n                            db.createObjectStore('presetImageStore', { keyPath: 'key' });\r\n                        }\r\n                    }\r\n                    console.info('YgoCarderDb ready');\r\n                },\r\n            }\r\n        );\r\n\r\n        return db;\r\n    } catch (e) {\r\n        console.error('setupYgoCarderDb', e);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const useCarderDb = () => {\r\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\r\n    const [dbReady, setDbReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const db = await setupYgoCarderDb();\r\n            setDb(db);\r\n            setDbReady(true);\r\n        })();\r\n\r\n        setTimeout(() => {\r\n            /** Ensure non-blocking */\r\n            setDbReady(true);\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return {\r\n        db,\r\n        dbReady,\r\n    };\r\n};","import { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRgba } from 'src/util';\r\n\r\nexport type UseColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n};\r\nexport const useColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: UseColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRgba(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return {\r\n        inputText: currentText,\r\n        color: internalValue,\r\n        setColor: setCurrentText,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { Foil, FrameDyeList, ImagePreset, NameStyle } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type FramePreset = {\r\n    foil: Foil,\r\n    frame: string,\r\n    pendulumFrame: string,\r\n    leftFrame: string,\r\n    rightFrame: string,\r\n    pendulumRightFrame: string,\r\n    effectStyle: {\r\n        background: string,\r\n    },\r\n    pendulumStyle: {\r\n        background: string,\r\n    },\r\n    dyeList: FrameDyeList,\r\n};\r\nexport type GlobalMemory = {\r\n    activeDropzone: number,\r\n    layoutPresetList: {\r\n        key: string,\r\n        content: FramePreset,\r\n    }[],\r\n    nameStylePresetList: {\r\n        key: string,\r\n        content: Partial<NameStyle>,\r\n    }[],\r\n    imagePresetList: {\r\n        key: string,\r\n        content: ImagePreset,\r\n    }[],\r\n    imagePresetMap: Record<string, ImagePreset>,\r\n};\r\nexport type GlobalStore = {\r\n    memory: GlobalMemory,\r\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\r\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\r\n};\r\nexport const useGlobalMemory = create<GlobalStore>((set) => {\r\n    return {\r\n        memory: {\r\n            activeDropzone: 0,\r\n            layoutPresetList: [],\r\n            nameStylePresetList: [],\r\n            imagePresetList: [],\r\n            imagePresetMap: {},\r\n        },\r\n        updateGlobalMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n                if (currentStore.memory.imagePresetList !== newGlobalMemory.imagePresetList) {\r\n                    newGlobalMemory.imagePresetMap = newGlobalMemory.imagePresetList.reduce((acc, cur) => {\r\n                        /** If user use duplicated name, that is on them :v */\r\n                        acc[cur.content.name] = cur.content;\r\n                        return acc;\r\n                    }, {});\r\n                }\r\n\r\n                return {\r\n                    memory: newGlobalMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateGlobalMemory,\r\n    } = useGlobalMemory(useShallow(({\r\n        memory,\r\n        updateGlobalMemory,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateGlobalMemory,\r\n    })));\r\n\r\n    const updateTargetMemory = useCallback(\r\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\r\n            updateGlobalMemory(cur => {\r\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\r\n            });\r\n        },\r\n        [key, updateGlobalMemory],\r\n    );\r\n\r\n    return [targetMemory, updateTargetMemory] as const;\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nconst normalizeDxy = (\r\n    image: HTMLImageElement,\r\n    dw?: number | ((image: HTMLImageElement) => number),\r\n    dh?: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    const { naturalWidth, naturalHeight } = image;\r\n    const baseDW = typeof dw === 'number' ? dw : dw?.(image);\r\n    const baseDH = typeof dh === 'number' ? dh : dh?.(image);\r\n    let actualDW = naturalWidth;\r\n    let actualDH = naturalHeight;\r\n\r\n    if (typeof baseDH !== 'number' && typeof baseDW === 'number') {\r\n        actualDW = baseDW;\r\n        actualDH = actualDW * naturalHeight / naturalWidth;\r\n    } else if (typeof baseDH === 'number' && typeof baseDW !== 'number') {\r\n        actualDH = baseDH;\r\n        actualDW = actualDH * naturalWidth / naturalHeight;\r\n    } else if (typeof baseDH === 'number' && typeof baseDW === 'number') {\r\n        actualDW = baseDW;\r\n        actualDH = baseDH;\r\n    }\r\n\r\n    return { actualDH, actualDW };\r\n};\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw?: number | ((image: HTMLImageElement) => number),\r\n    dh?: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n    option?: {\r\n        cache?: boolean,\r\n        internalImage?: boolean,\r\n    },\r\n) => {\r\n    const {\r\n        cache = true,\r\n        internalImage = true,\r\n    } = option ?? {};\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n            const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = internalImage\r\n            ? process.env.PUBLIC_URL + source\r\n            : source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n                const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (cache && !imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: Omit<FontData, 'fontList'>,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n        vietnameseFont = font,\r\n        vietnameseFontRatio = 1,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let vietnameseFontMemory = fontController.getFontInfo();\r\n    const applyVietnameseFont = () => {\r\n        vietnameseFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\r\n    };\r\n    const stopApplyVietnameseFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(vietnameseFontMemory.family)\r\n            .setSize(vietnameseFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = (ratio = symbolFontRatio) => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        const nextRatio = fontSize * ratio;\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\r\n        return {\r\n            fontSize: nextRatio,\r\n        };\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    BOLD_CLOSE_TAG,\r\n    BOLD_OPEN_TAG,\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FragmentSplitRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    IMG_TAG_NAME,\r\n    ITALIC_CLOSE_TAG,\r\n    ITALIC_OPEN_TAG,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NormalFontData,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    PRE_CLOSE_TAG,\r\n    PRE_OPEN_TAG,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    RenderTagRegex,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    STYLING_TAG_SOURCE,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData, swapTextData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\nimport { useGlobalMemory } from 'src/service';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    lineHeight = 0,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    lineHeight?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n        letterOffsetMap = {},\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const renderTagMatchResult = token.match(RenderTagRegex);\r\n    if (renderTagMatchResult) {\r\n        const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\r\n        const tagName = renderTagMatchResult[1];\r\n        if (tagName === IMG_TAG_NAME) {\r\n            currentRightGap = 0;\r\n            let matchResult: RegExpExecArray | null;\r\n            let width: number | undefined;\r\n            let src: string | undefined;\r\n            while ((matchResult = regex.exec(token)) !== null) {\r\n                // This is necessary to avoid infinite loops with zero-width matches\r\n                if (matchResult.index === regex.lastIndex) {\r\n                    regex.lastIndex++;\r\n                }\r\n                const attributeKey = matchResult[1];\r\n                const attributeValue = matchResult[2];\r\n\r\n                if (attributeKey === 'width') width = parseInt(attributeValue);\r\n                if (attributeKey === 'src') src = attributeValue;\r\n            }\r\n            const preset = src ? imagePresetMap[src] : undefined;\r\n            const normalizedWidth = (typeof width === 'number'\r\n                ? width\r\n                : preset\r\n                    ? preset.width\r\n                    : undefined) ?? (lineHeight * 0.9);\r\n            totalWidth += normalizedWidth / xRatio;\r\n        }\r\n        return {\r\n            totalWidth,\r\n            spaceCount,\r\n            spaceAtEnd,\r\n            leftMostLetter,\r\n            rightGap: currentRightGap,\r\n            leftGap: leftMostGap,\r\n            offsetable,\r\n        };\r\n    }\r\n\r\n    const isControlWord = new RegExp(STYLING_TAG_SOURCE, 'g').test(token);\r\n    const fragmentList = isControlWord\r\n        ? []\r\n        : token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\r\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applyVietnameseFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyVietnameseFont();\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    lineHeight,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n    justifyRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    lineHeight: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n    justifyRatio: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n    let currentTextData = textData;\r\n    let preformatMode = false;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        if (token === ITALIC_OPEN_TAG) {\r\n            const hasItalicFontData = !!(NormalFontData[textData.fontData?.variant ?? '']);\r\n            const italicFontData = hasItalicFontData\r\n                ? NormalFontData[textData.fontData.variant]\r\n                : textData.fontData;\r\n\r\n            currentTextData = swapTextData(textData, italicFontData);\r\n            ctx.font = currentTextData.currentFont\r\n                .setStyle('italic')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === ITALIC_CLOSE_TAG) {\r\n            currentTextData = textData;\r\n            ctx.font = currentTextData.currentFont\r\n                .setStyle('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === BOLD_OPEN_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('bold')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === BOLD_CLOSE_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === PRE_OPEN_TAG) {\r\n            preformatMode = true;\r\n            continue;\r\n        } else if (token === PRE_CLOSE_TAG) {\r\n            preformatMode = false;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({\r\n            ctx,\r\n            token,\r\n            nextToken,\r\n            xRatio,\r\n            previousTokenGap: currentGap / xRatio,\r\n            textData: currentTextData,\r\n            format,\r\n            globalScale,\r\n            lineHeight,\r\n        });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        const actualSpaceCount = preformatMode\r\n            ? 0\r\n            : spaceCount;\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += actualSpaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    lineHeight,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    lineHeight: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({\r\n                ctx,\r\n                token,\r\n                nextToken,\r\n                xRatio,\r\n                previousTokenGap: currentGap,\r\n                format,\r\n                letterSpacing,\r\n                textData,\r\n                globalScale,\r\n                lineHeight,\r\n            });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({\r\n                    ctx,\r\n                    token,\r\n                    nextToken,\r\n                    xRatio,\r\n                    previousTokenGap: 0,\r\n                    format,\r\n                    textData,\r\n                    globalScale,\r\n                    lineHeight,\r\n                });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BOLD_CLOSE_TAG,\r\n    BOLD_OPEN_TAG,\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    IMG_TAG_NAME,\r\n    ITALIC_CLOSE_TAG,\r\n    ITALIC_OPEN_TAG,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NormalFontData,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    PRE_CLOSE_TAG,\r\n    PRE_OPEN_TAG,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    RenderTagRegex,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    TotalImagePresetMap,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData, swapTextData } from 'src/util';\r\nimport { drawFromWithSize } from './image';\r\nimport { useGlobalMemory } from 'src/service';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⧚{相|あい}{手|て}⧛\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = async ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    lineHeight = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    drawImage = true,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    lineHeight?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    drawImage?: boolean,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        fontLevel,\r\n    } = textData;\r\n    const defaultFontData = textData.fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    let currentTextData = textData;\r\n    let currentFont = currentTextData.currentFont;\r\n    let currentFontData = currentTextData.fontData;\r\n    let fontSizeData = currentFontData.fontList[fontLevel];\r\n    let textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n    let preformatMode = false;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        /** All the info here is not affected by injected dynamic fonts */\r\n        const {\r\n            bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n            bulletWidth,\r\n            capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n            fontSize,\r\n            headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n            iconSymbolWidth = bulletWidth,\r\n            largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n            letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n            ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n            squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n            wordLetterSpacing,\r\n            allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n        } = fontSizeData;\r\n        const letterSpacingRatio = 1 + letterSpacing / 2;\r\n        const baseline = trueBaseline / yRatio;\r\n        const {\r\n            headTextFillStyle,\r\n            headTextBold = DefaultFontData.headTextBold,\r\n            headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n            headTextOverflow = DefaultFontData.headTextOverflow,\r\n            headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n            metricMethod,\r\n            fontStyle,\r\n            letterDeviationMap = {},\r\n            letterOffsetMap = {},\r\n        } = currentFontData;\r\n        const {\r\n            stopApplyFuriganaFont, applyFuriganaFont,\r\n            stopApplyLargerText, applyLargerText,\r\n            stopApplyNumberFont, applyNumberFont,\r\n            stopApplyOrdinalFont, applyOrdinalFont,\r\n            applyScale, reverseScale,\r\n            applySymbolFont, stopApplySymbolFont,\r\n            applyVietnameseFont, stopApplyVietnameseFont,\r\n            applyAsymmetricScale, resetScale,\r\n        } = textWorker;\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        if (token === ITALIC_OPEN_TAG) {\r\n            const hasItalicFontData = !!(NormalFontData[defaultFontData?.variant ?? '']);\r\n            const italicFontData = hasItalicFontData\r\n                ? NormalFontData[defaultFontData.variant]\r\n                : defaultFontData;\r\n\r\n            currentTextData = swapTextData(textData, italicFontData);\r\n            currentFont = currentTextData.currentFont;\r\n            currentFontData = currentTextData.fontData;\r\n            fontSizeData = currentFontData.fontList[fontLevel];\r\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n            ctx.font = currentFont\r\n                .setStyle('italic')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === ITALIC_CLOSE_TAG) {\r\n            currentTextData = textData;\r\n            currentFont = currentTextData.currentFont;\r\n            currentFontData = currentTextData.fontData;\r\n            fontSizeData = currentFontData.fontList[fontLevel];\r\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n            ctx.font = currentFont\r\n                .setStyle('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === BOLD_OPEN_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('bold')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === BOLD_CLOSE_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === PRE_OPEN_TAG) {\r\n            preformatMode = true;\r\n            continue;\r\n        } else if (token === PRE_CLOSE_TAG) {\r\n            preformatMode = false;\r\n            continue;\r\n        }\r\n        \r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n            lineHeight,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        let fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n\r\n        const renderTagMatchResult = token.match(RenderTagRegex);\r\n        if (renderTagMatchResult) {\r\n            const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\r\n            const tagName = renderTagMatchResult[1];\r\n            if (tagName === IMG_TAG_NAME) {\r\n                fragmentList = [];\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n                let matchResult: RegExpExecArray | null;\r\n                let src = '';\r\n                let width: number | undefined;\r\n                let height: number | undefined;\r\n                let offsetX: number | undefined;\r\n                let offsetY: number | undefined;\r\n                while ((matchResult = regex.exec(token)) !== null) {\r\n                    // This is necessary to avoid infinite loops with zero-width matches\r\n                    if (matchResult.index === regex.lastIndex) {\r\n                        regex.lastIndex++;\r\n                    }\r\n                    const attributeKey = matchResult[1];\r\n                    const attributeValue = matchResult[2];\r\n                    switch (attributeKey) {\r\n                        case 'src': {\r\n                            src = attributeValue;\r\n                            break;\r\n                        }\r\n                        case 'width': {\r\n                            width = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'height': {\r\n                            height = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'offsetX': {\r\n                            offsetX = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'offsetY': {\r\n                            offsetY = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                resetScale();\r\n                if (src && drawImage) {\r\n                    let normalizedWidth = typeof width === 'number'\r\n                        ? width\r\n                        : typeof height === 'number'\r\n                            ? undefined\r\n                            : lineHeight * 0.9;\r\n                    let normalizedSource = src;\r\n                    let isInternalSource = false;\r\n                    const preset = src ? imagePresetMap[src] : undefined;\r\n                    if (preset) {\r\n                        const {\r\n                            height: presetHeight, width: presetWidth,\r\n                            offsetX: presetOffsetX, offsetY: presetOffsetY,\r\n                            src,\r\n                        } = preset;\r\n                        normalizedSource = src;\r\n                        width = typeof width === 'number' ? width : presetWidth;\r\n                        height = typeof height === 'number' ? height : presetHeight;\r\n                        offsetY = typeof offsetY === 'number' ? offsetY : presetOffsetY;\r\n                        offsetX = typeof offsetX === 'number' ? offsetX : presetOffsetX;\r\n                    } else if (!src.startsWith('https')) {\r\n                        isInternalSource = true;\r\n                        normalizedSource = '/asset/image/' + (TotalImagePresetMap[src] ?? `${src}.png`);\r\n                    }\r\n                    const lineHeightOffsetRatio = 0.75; // If it is 1, the image will touch the bottom of the line above\r\n                    await drawFromWithSize(\r\n                        ctx,\r\n                        normalizedSource,\r\n                        fragmentEdge + (offsetX ?? 0),\r\n                        trueBaseline + (offsetY ?? 0) - lineHeight * lineHeightOffsetRatio,\r\n                        normalizedWidth, height,\r\n                        undefined, undefined,\r\n                        undefined, undefined,\r\n                        { cache: isInternalSource, internalImage: isInternalSource }\r\n                    );\r\n                }\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n            }\r\n        }\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) { }\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applyVietnameseFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyVietnameseFont();\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\r\n                        });\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const {\r\n                    yRatio = 1,\r\n                    ratio: fontSizeRatio,\r\n                    baseline: offsetBaseline = 0,\r\n                    edge: offsetEdge = 0,\r\n                } = letterOffsetMap[fragment] ?? {};\r\n\r\n                const letter = fragment;\r\n                const { fontSize } = applySymbolFont(fontSizeRatio);\r\n                ctx.scale(1, yRatio);\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\r\n                    letter,\r\n                    edge: fragmentEdge + fontSize * offsetEdge,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n\r\n                ctx.scale(1, 1 / yRatio);\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        const actualSpaceCount = preformatMode\r\n            ? 0\r\n            : spaceCount;\r\n        tokenEdge += totalTokenWidth * xRatio + actualSpaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    FLAVOR_CONDITION_SOURCE,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n    FULL_LINE_PLACEHOLDER,\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    OCG_RUBY_SOURCE,\r\n    RENDER_TAG_SOURCE,\r\n    STYLING_TAG_SOURCE,\r\n    UNCOMPRESSED_SOURCE,\r\n    WHOLE_WORD_SOURCE,\r\n    contextualDoubleQuoteRegex,\r\n    ocgKeywordDataMap,\r\n    ocgNumberCircleMap,\r\n    ocgToTCGLetterMap,\r\n    tcgToOCGLetterMap,\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    line: string,\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineList: string[] = [];\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let effectText = effect;\r\n    let effectFlavorCondition = '';\r\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n     * \r\n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n     * \r\n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in text are actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n     * */\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\r\n    let tryCnt = 0;\r\n    while (effectText.length > 0 && tryCnt <= 100) {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        const lineReplacement = result?.[1];\r\n        const lineContent = result?.[2];\r\n        const fullLineReplacement = result?.[3];\r\n        const fullLineContent = result?.[4];\r\n\r\n        if (lineContent && lineReplacement) {\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else {\r\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\r\n            const lineReplacement = paragraphResult?.[0];\r\n            const lineContent = paragraphResult?.[1];\r\n            if (typeof lineReplacement === 'string' && typeof lineContent === 'string') {\r\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\r\n                lineList.push(...lineContent\r\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\r\n                    .split('\\n')\r\n                );\r\n                effectText = effectText.replace(lineReplacement, '');\r\n            }\r\n        }\r\n        tryCnt++;\r\n    }\r\n    if (effectFlavorCondition) {\r\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\r\n    }\r\n\r\n    return {\r\n        lineList,\r\n        fullLineListOption: [...fullLineListOption],\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(RENDER_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(STYLING_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord: string[] = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n    FULL_LINE_PLACEHOLDER,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = async ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n        minLine?: number,\r\n        justifyRatio?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n        minLine: baseMinLine,\r\n        justifyRatio: baseJustifyRatio,\r\n    } = option ?? {};\r\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\r\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        lineList,\r\n        fullLineListOption,\r\n        effectFlavorCondition,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    const maxFontListLineLength = fontList[fontList.length - 1].lineCount;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length || lineList.length > maxFontListLineLength\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 600,\r\n                '2': 600,\r\n                '3': 600,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList: lineList,\r\n                        additionalLineCount: 0,\r\n                        format, textData,\r\n                        width,\r\n                        lineHeight,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = Math.max(lineList.length, Math.max(minLine, lineListWithRatio.length));\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\r\n            || minLine > lineCount\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else if (useDynamicSize && effectiveMedian < tolerantValue) {\r\n            effectiveLineCount += 1; // Increase dynamic size if the font is too condensed\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            const lineDrawInfoList = lineListWithRatio\r\n                .map(({\r\n                    line: precalculatedLine,\r\n                    effectiveMedian,\r\n                    isLast,\r\n                }) => {\r\n                    let xRatio = 1;\r\n                    let finalTokenList: string[] = [];\r\n                    let finalSpaceWidth = 0;\r\n                    let finalTextData = textData;\r\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\r\n                        const isLast = alignment === 'justify' ? false : true;\r\n                        xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [line],\r\n                                    format, textData,\r\n                                    width,\r\n                                    lineHeight,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio: 100,\r\n                            lineHeight,\r\n                        });\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = spaceWidth;\r\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                        const dynamicFlavorFontData = useDynamicSize\r\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\r\n                            : flavorFontData;\r\n                        const { fontSize } = useDynamicSize\r\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                            : flavorFontData.fontList[appliedSizeLevel];\r\n                        const flavorTextCurrentFont = createFontGetter();\r\n                        ctx.font = flavorTextCurrentFont\r\n                            .setSize(fontSize)\r\n                            .setFamily(flavorFontData.font)\r\n                            .getFont();\r\n                        const flavorTextData = {\r\n                            fontData: dynamicFlavorFontData,\r\n                            fontLevel: dynamicSizeLevel,\r\n                            currentFont: flavorTextCurrentFont,\r\n                        };\r\n                        xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [effectFlavorCondition],\r\n                                    format, textData: flavorTextData,\r\n                                    width,\r\n                                    lineHeight,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const tokenList = tokenizeText(effectFlavorCondition);\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = 0;\r\n                        finalTextData = flavorTextData;\r\n                    } else {\r\n                        /** Normal line: Draw with the calculated median */\r\n                        xRatio = effectiveMedian / 1000;\r\n                        const line = precalculatedLine;\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio,\r\n                            lineHeight,\r\n                        });\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = spaceWidth;\r\n                    }\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n                    return {\r\n                        xRatio,\r\n                        line: precalculatedLine,\r\n                        tokenList: finalTokenList,\r\n                        spaceWidth: finalSpaceWidth,\r\n                        textData: finalTextData,\r\n                    };\r\n                });\r\n\r\n            for (let lineDrawInfo of lineDrawInfoList) {\r\n                const {\r\n                    xRatio,\r\n                    tokenList,\r\n                    line: precalculatedLine,\r\n                    spaceWidth,\r\n                    textData,\r\n                } = lineDrawInfo;\r\n                let result: ReturnType<typeof drawLine>;\r\n                if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        spaceWidth,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    const { currentFont, fontData } = textData;\r\n                    ctx.font = currentFont\r\n                        .setSize(fontSize)\r\n                        .setFamily(fontData.font)\r\n                        .getFont();\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                } else {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        spaceWidth,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                }\r\n                await result;\r\n\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                trueBaseline += lineHeight;\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starList,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starList: string[],\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    /** We filter out all undefined star only at the trail of the star list */\r\n    const normalizedStarList = Array.isArray(starList)\r\n        ? starList\r\n        : [];\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = cardIcon === 'custom'\r\n        ? normalizedStarList.length\r\n        : typeof star === 'string'\r\n            ? star === '' ? 0 : 1\r\n            : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        ctx: starCtx,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async (_, index) => {\r\n            offset += (starWidth + startSpacing);\r\n            /** We must factor alignment here, because presentation does not factor alignment */\r\n            const cardIconIndex = normalizedStarCount - 1 - index;\r\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (!ctx) return;\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            ctx: starFinishCtx,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishCtx?.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishCtx,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishCtx,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        if (starCtx) {\r\n            starCtx.globalCompositeOperation = 'source-in';\r\n            starCtx.drawImage(starFinishCanvas, 0, 0);\r\n        }\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    rating: string,\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || typeof rating !== 'string') return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const baseline = isNaN(Number(rating))\r\n        ? 1106\r\n        : 1105;\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { ctx, canvas } = createCanvas(width, height);\r\n    if (!ctx) return canvas;\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\r\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    if (!maskData) return canvas;\r\n    const layerData = ctx.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    RegionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    dyeColor: string,\r\n) => {\r\n    if (!ctx) return;\r\n    const willDyed = HexColorRegex.test(dyeColor);\r\n    if (foil === 'normal' && !willDyed) return;\r\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n    const usedFoil = willDyed ? 'platinum' : foil;\r\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\r\n        if (withBorder) {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\r\n        } else {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (willDyed) {\r\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\r\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\r\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\r\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\r\n    } else {\r\n        await drawFunction(ctx);\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    region,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    dyeList,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    starList,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    region: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    dyeList: FrameDyeList,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    starList: string[],\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFrameX,\r\n        artFrameY,\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\r\n\r\n            /** Combine layer frame here */\r\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\r\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\r\n            /** No need to dye if background is gonna replace the frame */\r\n            if (\r\n                !willReplaceFrame\r\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\r\n                && dyedTopFrameCtx\r\n            ) {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\r\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\r\n            }\r\n\r\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\r\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\r\n            if (\r\n                !willReplaceFrame\r\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\r\n                && dyedBottomFrameCtx\r\n            ) {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await MaskPromise.bottomRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\r\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            /** Leave empty space for card art */\r\n            if (isPendulum) {\r\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n            }\r\n            /** Background replace frame */\r\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedTopFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedBottomFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n            }\r\n            /** Start assembling the canvas */\r\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\r\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: (\r\n            externalCtx = ctx,\r\n        ) => {\r\n            if (!artworkCanvas || !externalCtx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            externalCtx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: async (\r\n            externalCtx = ctx,\r\n            hasArtBorder = false,\r\n        ) => {\r\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n                artFrameX,\r\n                artFrameY,\r\n                ratio,\r\n                artRatio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                opacity,\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            if (backgroundType !== 'frame') {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n            } else {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    0, 0,\r\n                    globalScale * cardWidth, globalScale * cardHeight,\r\n                );\r\n            }\r\n            const backgroundFinish = otherFinish[3] ?? 'normal';\r\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\r\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\r\n                await loopBackgroundFinish(\r\n                    externalCtx,\r\n                    'art',\r\n                    async type => drawAssetWithSize(\r\n                        externalCtx,\r\n                        `finish/art-finish-${type}.png`,\r\n                        globalScale * artFrameX, globalScale * artFrameY,\r\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\r\n                    ),\r\n                );\r\n            }\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                ctx: attributeCtx,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeCtx,\r\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    ctx: attributeFinishCtx,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                if (attributeCtx) {\r\n                    attributeCtx.globalCompositeOperation = 'source-in';\r\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\r\n                }\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starList,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            const {\r\n                canvas: pendulumIconCanvas,\r\n                ctx: pendulumIconCtx,\r\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\r\n            if (!ctx || !pendulumIconCtx) return;\r\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            const {\r\n                canvas: dyedLeftNameCanvas,\r\n                ctx: dyedLeftNameCtx\r\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\r\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n\r\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\r\n            ctx.globalAlpha = opacityText / 100;\r\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\r\n\r\n            if (withPendulum) {\r\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    pendulumEffectBackgroundCtx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\r\n            if (!ctx) return;\r\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\r\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (willDye && validDyeColor) {\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\r\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            }\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                if (validDyeColor) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\r\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(\r\n                        pendulumBorderFoilCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${usedFoil}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\r\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(\r\n                        pendulumBorderCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                }\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) {\r\n                if (HexColorRegex.test(dyeList[6])) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\r\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\r\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n                }\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\r\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!applyArtFinish || !artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopArtFinish(\r\n                artCtx,\r\n                'art',\r\n                async (finishType, pendulumSuffix) => {\r\n                    return await drawAssetWithSize(\r\n                        artCtx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                        artFrameWidth, artFrameWidth / artRatio,\r\n                    );\r\n                },\r\n                pendulumSize,\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                artCtx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        artCtx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n\r\n    if (!(ctx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                lineHeight,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => { };\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = await drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        lineHeight,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        if (patternContext) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            patternContext.scale(globalScale, globalScale);\r\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n            patternContext.globalCompositeOperation = patternBlendMode;\r\n            patternContext.resetTransform();\r\n            await drawAssetWithSize(\r\n                patternContext, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(patternCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            ctx.scale(xRatio, yRatio);\r\n        }\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        await drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            lineHeight,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            drawImage: false,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        if (shadowContext) {\r\n            const resetShadow = setTextStyle({\r\n                ctx: shadowContext,\r\n                x: shadowOffsetX,\r\n                y: shadowOffsetY,\r\n                shadowColor: shadowColor,\r\n                blur: shadowBlur,\r\n                globalScale,\r\n                useDefault: false,\r\n            });\r\n            ctx.scale(1 / xRatio, 1 / yRatio);\r\n            shadowContext.drawImage(canvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            ctx.drawImage(shadowCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            resetShadow();\r\n        }\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    await drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        lineHeight,\r\n        format,\r\n        globalScale,\r\n        drawImage: false,\r\n        textDrawer: () => { },\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = async ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                lineHeight,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = await drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            ctx: iconCtx,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconCtx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                ctx: iconFinishCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            if (iconFinishCtx && iconCtx) {\r\n                iconFinishCtx.drawImage(iconCanvas, 0, 0);\r\n                await loopIconFinish(\r\n                    iconFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            iconFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                        );\r\n                    },\r\n                );\r\n                iconCtx.globalCompositeOperation = 'source-in';\r\n                iconCtx.drawImage(iconFinishCanvas, 0, 0);\r\n                ctx.drawImage(iconCanvas, 0, 0);\r\n            }\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitList = `${value}`.split('');\r\n\r\n        if (digitList.length === 1) {\r\n            const digit = digitList[0];\r\n            const digitWidth = ctx.measureText(digit).width;\r\n            const accLeft = edge - digitWidth / 2;\r\n\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n        } else if (digitList.length === 2) {\r\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\r\n            const firstDigit = digitList[0];\r\n            const secondDigit = digitList[1];\r\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\r\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\r\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\r\n                ? 0\r\n                : firstDigitWidth * 0.1\r\n            );\r\n\r\n            ctx.fillText(\r\n                firstDigit,\r\n                accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            ctx.fillText(\r\n                secondDigit,\r\n                accLeft + firstDigitWidth - (firstDigit === '1'\r\n                    ? (secondDigit === '1'\r\n                        ? ctx.measureText('1').width * 0.1\r\n                        : secondDigitWidth * 0.1)\r\n                    : secondDigitWidth * -0.1),\r\n                baseline + fontSize,\r\n            );\r\n        } else {\r\n            let totalWidth = 0;\r\n\r\n            digitList.forEach(digit => {\r\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n            let accLeft = edge - totalWidth / 2;\r\n\r\n            digitList.forEach(digit => {\r\n                ctx.fillText(\r\n                    digit,\r\n                    accLeft,\r\n                    baseline + fontSize,\r\n                );\r\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const {\r\n        stroke = false,\r\n        textStyle,\r\n        globalScale,\r\n    } = option ?? {};\r\n    const actualEdge = edge * globalScale;\r\n    const actualBaseline = baseline * globalScale;\r\n    const actualBaselineOffset = baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = actualEdge;\r\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkDiplayLinkRating,\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n    stickerSize,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format, region,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        dyeList,\r\n        atk, def, linkMap, linkRating,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment, starList,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n        flag,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        effect: {\r\n            name: 'effect',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        pendulumEffect: {\r\n            name: 'pendulumEffect',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        otherText: {\r\n            name: 'otherText',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 9,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const effectMinLine = effectStyle.minLine;\r\n    const pendulumEffectMinLine = pendulumStyle.minLine;\r\n    const effectJustifyRatio = effectStyle.justifyRatio;\r\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless, effectBox } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n    const foilDyeColor = dyeList[6];\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const [\r\n        showDefAndLinkFlag,\r\n        linkRatingDisplayMode,\r\n    ] = flag;\r\n\r\n    /** One special case where we do not show link rating */\r\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\r\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\r\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\r\n    const statInEffect = !!(atk || def)\r\n        || showLinkRating\r\n        || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                effectBox: keepEffectBox,\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (\r\n                ctx: CanvasRenderingContext2D,\r\n                x: number, y: number,\r\n                w: number, h: number,\r\n                customFill?: string,\r\n            ) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                region,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                dyeList,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star, starList,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Fill color background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\r\n            const {\r\n                canvas: artOnCardCanvas,\r\n                ctx: artOnCardCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\r\n            await drawArtFinish(artOnCardCtx);\r\n            await drawArtOverlayFinish(artOnCardCtx);\r\n\r\n            /** Combine background and artwork together, overlay for background is applied here */\r\n            const {\r\n                canvas: combinedArtCanvas,\r\n                ctx: combinedArtCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\r\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\r\n\r\n            /** @summary Draw the overall layout */\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            ctx.drawImage(combinedArtCanvas, 0, 0);\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                }\r\n                if (!boundless && (keepEffectBox || !hasBackground)) {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                ctx.drawImage(\r\n                    combinedArtCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n                \r\n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil, true);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (isLink && !isPendulum) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil, true);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\r\n                ctx.drawImage(\r\n                    artOnCardCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil, true);\r\n                    await drawBorderPendulumFinish();\r\n                } else if (keepEffectBox) {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            \r\n            if (showLinkRating && statInEffect) {\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\r\n                    ? linkRating\r\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\r\n                if (keepEffectBox) await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        attribute,\r\n        backgroundCanvasRef,\r\n        backgroundType,\r\n        cardIcon,\r\n        dyeList,\r\n        effectBackground,\r\n        finish,\r\n        foil,\r\n        format,\r\n        region,\r\n        frame,\r\n        frameCanvasRef,\r\n        hasBackground,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        leftFrame,\r\n        levelStyle,\r\n        lightFooter,\r\n        linkMap,\r\n        linkRating,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        otherFinish,\r\n        pendulumEffectBackground,\r\n        pendulumFrame,\r\n        pendulumRightFrame,\r\n        pendulumSize,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        rightFrame,\r\n        showLinkRating,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        statInEffect,\r\n        withBlueScale,\r\n        withRedScale,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n\r\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        // const hasAtk = !!atk;\r\n        const hasDef = showLinkRating\r\n            ? !!def && showDefAndLink\r\n            : !!def;\r\n        const hasLink = showLinkRating;\r\n        if (atk) {\r\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\r\n            if (effectBox) drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\r\n        }\r\n        if (def && (!showLinkRating || showDefAndLink)) {\r\n            const offset = hasLink ? 168.75 : 0;\r\n            if (effectBox) drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        effectBox,\r\n        atk,\r\n        def,\r\n        showLinkRating,\r\n        isMonster,\r\n        showDefAndLink,\r\n        resolvedStatTextStyle,\r\n        statCanvasRef,\r\n        statInEffect,\r\n    ]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink,\r\n                isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.otherText.rerun += 1;\r\n        drawingPipeline.current.otherText.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const isNumberPassword = /^[0-9]*$/.test(password);\r\n            const mayOffset = isNumberPassword && isPendulum && isLink;\r\n            const willOffset = mayOffset;\r\n            const { rightEdge } = await drawPasswordText({\r\n                ctx,\r\n                globalScale,\r\n                value: password,\r\n                lightFooter,\r\n                alignment: 'left',\r\n                edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n                format,\r\n                hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                fontLevel: !isNumberPassword ? 1 : 0\r\n            });\r\n            if (isFirstEdition) {\r\n                const willDraw = isPendulum\r\n                    ? isNumberPassword ? true : false\r\n                    : true;\r\n                const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? isLink ? 151 : 89\r\n                    : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\r\n                const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? 871\r\n                    : 1150.93;\r\n                const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? 0\r\n                    : isSpeedSkill ? -2 : -1;\r\n\r\n                if (willDraw) draw1stEdition(\r\n                    ctx,\r\n                    left,\r\n                    bottom,\r\n                    bottomOffset,\r\n                    {\r\n                        stroke: false,\r\n                        globalScale,\r\n                        textStyle: {\r\n                            color: lightFooter ? '#ffffff' : '#000000',\r\n                            ...resolvedOtherEffectTextStyle,\r\n                        }\r\n                    },\r\n                );\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = await drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                ctx: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    ctx: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n                if (stickerFinishContext && stickerContext) {\r\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                    stickerFinishContext.scale(globalScale, globalScale);\r\n                    await loopStickerFinish(\r\n                        stickerFinishContext,\r\n                        'art',\r\n                        async (finishType) => {\r\n                            return await drawAsset(\r\n                                stickerFinishContext,\r\n                                `finish/finish-typeart-${finishType}.png`,\r\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\r\n                            );\r\n                        },\r\n                    );\r\n                    stickerContext.globalCompositeOperation = 'source-in';\r\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                    ctx.drawImage(stickerCanvas, 0, 0);\r\n                }\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.effect.rerun += 1;\r\n        drawingPipeline.current.effect.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = await drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        effectMinLine,\r\n        effectJustifyRatio,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.pendulumEffect.rerun += 1;\r\n        drawingPipeline.current.pendulumEffect.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            if (isPendulum) {\r\n                const { upSize, fontStyle } = pendulumStyle ?? {};\r\n                const customPendulumStyle = pendulumTextStyle[0];\r\n                const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n                const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n                const fontDataKey = `${format}-${pendulumSize}`;\r\n                const coordinateList = PendulumEffectCoordinateMap\r\n                    [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                    [pendulumSize];\r\n                /** Account for half scaleless frame */\r\n                const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                    ? coordinateList\r\n                    : coordinateList.map(({\r\n                        trueEdge, trueWidth, ...rest\r\n                    }) => ({\r\n                        ...rest,\r\n                        trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                        trueWidth: trueWidth\r\n                            - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                            - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    }));\r\n\r\n                await drawEffect({\r\n                    ctx,\r\n                    content: pendulumEffect,\r\n                    isNormal: false,\r\n                    useItalic: useItalic,\r\n                    fontData: (useItalic\r\n                        ? PendulumNormalFontData\r\n                        : PendulumEffectFontData)[fontDataKey],\r\n                    fontDataKey,\r\n                    textStyle: resolvedPendulumEffectTextStyle,\r\n                    sizeList: modifiedCoordinateList,\r\n                    condenseTolerant,\r\n                    format,\r\n                    furiganaHelper,\r\n                    option: {\r\n                        forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                        defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                        globalScale,\r\n                        minLine: pendulumEffectMinLine,\r\n                        justifyRatio: pendulumEffectJustifyRatio,\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        pendulumEffectMinLine,\r\n        pendulumEffectJustifyRatio,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink) {\r\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n                const {\r\n                    artBorder: keepArtBorder,\r\n                    body: opacityBody,\r\n                    boundless,\r\n                } = normalizedOpacity;\r\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        foilDyeColor,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        opacity,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (_exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        // const {\r\n        //     isRelevant,\r\n        //     pendulumSize,\r\n        //     isPendulum = false,\r\n        //     opacity,\r\n        // } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = async ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    lineHeight,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = async ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                    lineHeight,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        lineHeight: textData.fontData.fontList[textData.fontLevel].lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n    feedbackReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n        feedbackReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            /** @todo Once these fonts are loaded, some letters previously appear ugly will inherit the font and looks much better, for example OCG-style ordinal number ① ② But right now it may not worth the trade off of including large fonts by default. */\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\n\r\nexport type PresetManagerStore = {\r\n    visible: boolean,\r\n    setVisible: (status?: boolean) => void,\r\n};\r\nexport const usePresetManager = create<\r\n    PresetManagerStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        visible: false,\r\n        setVisible: newStatus => {\r\n            set(({ visible }) => {\r\n                return { visible: newStatus == null ? !visible : newStatus };\r\n            });\r\n        }\r\n    };\r\n}));","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    ${({ $freeSize, $size }) => $freeSize\r\n        ? 'padding: 0 var(--spacing-xxs);'\r\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\r\n    };\r\n    ${({ $size }) => $size === 'sm'\r\n        ? `\r\n            height: 18px;\r\n            font-size: var(--fs-sm);\r\n        `\r\n        : `\r\n            height: 24px;\r\n            font-size: var(--fs);\r\n        `}\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    size?: 'sm' | 'md',\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    size = 'md',\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            $size={size}\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n            $freeSize={!Icon}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    align-items: center;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\r\n\r\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\r\n    height: 17px;\r\n    width: 17px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    outline: none;\r\n    box-shadow: 0 0 1px 1px var(--main-level-3);\r\n    border-radius: var(--br);\r\n    ${({ $static }) => $static\r\n        ? `\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        `\r\n        : ''}\r\n    ${({ $empty }) => $empty\r\n        ? `\r\n            background-color: var(--sub-level-4);\r\n            background-image: var(--gradient-diagonal-stripe);\r\n        `\r\n        : ''}\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n`;","import copy from 'copy-to-clipboard';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport styled, { css } from 'styled-components';\r\nimport React, { useState } from 'react';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const CopiableOverlayStyle = css`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nexport const StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    ${CopiableOverlayStyle}\r\n`;\r\n\r\nexport type Copiable = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    overlay?: React.ReactNode,\r\n    container: React.ComponentType<{\r\n        children?: React.ReactNode,\r\n        disabled?: boolean,\r\n        onClick?: (e: { stopPropagation: () => void }) => void,\r\n    }>,\r\n}\r\nexport const Copiable = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    overlay = <CheckOutlined />,\r\n    container: Container,\r\n}: Copiable) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string | number) => {\r\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <Container\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\r\n        {children}\r\n    </Container>;\r\n};\r\n\r\nexport type CopiableCode = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\r\n};","import { Drawer, Popover } from 'antd';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const SolidLabel = styled.div`\r\n    display: inline-flex;\r\n    column-gap: var(--spacing-xs);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    border-radius: var(--br);\r\n    box-shadow: var(--bs-input);\r\n`;\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 57px 36px 6px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        border-right: none;\r\n        border-radius: var(--br) 0 0 var(--br);\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: 3em max-content 3em;\r\n    gap: var(--spacing-xs);\r\n    .left-part {\r\n        text-align: right;\r\n    }\r\n    .right-part {\r\n        text-align: left;\r\n    }\r\n    ${({ $warning }) => $warning\r\n        ? `\r\n            color: var(--main-warning);\r\n        `\r\n        : ''}\r\n`;\r\nexport type ResolutionLabel = {\r\n    warning?: boolean,\r\n    width: number,\r\n    height: number,\r\n}\r\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\r\n    return <ResolutionLabelContainer $warning={warning}>\r\n        <span className=\"left-part\">{width}</span>\r\n        <span>×</span>\r\n        <span className=\"right-part\">{height}</span>\r\n    </ResolutionLabelContainer>;\r\n};\r\n\r\nconst backgroundMarch = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\nexport const DropZone = styled.div<{ $visible: boolean }>`\r\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #8888cc44;\r\n\tz-index: 1;\r\n\tfont-size: var(--fs-3xl);\r\n\talign-items: center;\r\n    justify-content: center;\r\n\ttext-shadow: 0 0 3px #222;\r\n    border: 5px dashed #cccccc;\r\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\r\n\tbackground-size: 400% 400%;\r\n    padding: 5px;\r\n    label {\r\n        color: var(--color-heavy);\r\n        line-height: 1.25;\r\n    }\r\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\r\n`;\r\n\r\n\r\nexport const ManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: var(--spacing);\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n`;\r\n\r\nexport const SingleSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    .ant-input-number {\r\n        width: 55px;\r\n    }\r\n    .ant-slider {\r\n        margin: var(--spacing-xxs);\r\n    }\r\n`;\r\n\r\nexport * from './color';\r\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    min-width: 15rem;\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    <ResolutionLabel width={width} height={height} warning={true} />\r\n                                </Popover>\r\n                                : <ResolutionLabel width={width} height={height} />,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\r\n                    <RadioTrain\r\n                        value={slidingType}\r\n                        optionList={getSlindingTypeList(language)}\r\n                        onChange={value => {\r\n                            updateSetting({ slidingType: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    white-space: pre-line;\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n        margin-bottom: var(--spacing-lg);\r\n    }\r\n    .image {\r\n        max-width: 100%;\r\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    text-align: center;\r\n    .content {\r\n        text-align: left;\r\n    }\r\n    a {\r\n        display: inline-block;\r\n    }\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 300px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            <div className=\"content\">\r\n                                {content}\r\n                            </div>\r\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\r\n                                <img src={image} alt={`version-${version}-illust`} />\r\n                            </a>}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, notification, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const FAD_BUTTON_ID = 'faq-button';\r\n\r\ntype Feedback = {\r\n    author?: string,\r\n    question: string,\r\n    answer?: string,\r\n    image?: string,\r\n};\r\n\r\nconst StyledQuoteContainer = styled(QuoteContainer)`\r\n    text-align: center;\r\n    blockquote,\r\n    .answer {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        max-height: 400px;\r\n    }\r\n`;\r\ntype Quote = {\r\n    image?: string,\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    image,\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <StyledQuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n        {image && <img className=\"image\" src={image} alt=\"answer preview\" />}\r\n    </StyledQuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\r\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '18/09/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    useEffect(() => {\r\n        if (feedbackReminder !== true) {\r\n            setFeedbackReminder(true);\r\n            setAnimating(true);\r\n            notification.info({\r\n                message: 'Feedback Reminder',\r\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\r\n                duration: 10,\r\n                onClose: () => {\r\n                    setAnimating(false);\r\n                }\r\n            });\r\n        }\r\n    }, [feedbackReminder, setFeedbackReminder]);\r\n\r\n    const feedbackList: Feedback[] = [\r\n        {\r\n            author: 'OCG Proxy Secret Rare at Sep 18, 2025',\r\n            question: 'Is there a way to implement a Predefined or a pattern similar to the OCG Rainbow Secret Rare proxy text, please?',\r\n            answer: 'Hi there, I have added a new predefined preset for this case, you may try it now.',\r\n        },\r\n        {\r\n            author: 'Elttaest the Master of Duels at Sep 18, 2025',\r\n            question: 'Hi. Love your work, just wondering - with Elttaes, the Master of Duels and Dragon of Illumination, Sanctuary\\'s Shield, shouldn\\'t we have enough data to make Rush Duel cards in English as well? The font seems the same in both English and Japanese. And the card name seems the same used in TCG, although I can\\'t really make out what the Japanese font is. Sorry again for this. Just curious. Thanks for your time',\r\n            answer: 'Hi there, you are right that both cards can be used as a template for Rush Duel cards, but the main problem before the template itself is that currently I don\\'t have enough resources for such project right now, so I can\\'t promise anything at this moment. I will keep this in mind and see if I can do it in the future.',\r\n        },\r\n        {\r\n            author: 'Outline at Sep 17, 2025',\r\n            question: 'When placing an outline a location 0/0, the line is not aligned equally throughout the letter',\r\n            answer: 'Hi there, this is a known issue for Chrome on Windows, which currently I\\'m unable to fix. You can see the same card display perfectly fine on Chrome on MacOS.',\r\n            image: 'https://i.postimg.cc/MZsjtS2k/Screenshot-2025-09-17-at-08-09-48.png',\r\n        },\r\n        {\r\n            author: 'Image disappeards at Sep 15, 2025',\r\n            question: 'Adding the width function removes the image, regardless of the width chosen (it works without it)',\r\n            answer: 'Hi there, your syntax is incorrect, you must put the width attribute between double quotes (\"), like this: <img src=\"https://ms.yugipedia.com//5/59/Type-Cyberse-MADU.png\" width=\"40\" />.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Sep 10, 2025',\r\n            question: 'Ko hiện các dòng chữ hiệu ứng của lá bài',\r\n            answer: 'Đã fix nha bạn.',\r\n        },\r\n        {\r\n            author: 'Jayden at Sep 08, 2025',\r\n            question: 'Not a bug, but a possible suggestion. For my own personal reasons, I would love the opportunity to add either a custom sigil/icon of my own design (link/image upload) that could replace the existing ones, and also, the possibility to paste those and existing sigil’s/icon’s into the effect text of the card. So that maybe I could do for example, “Add 1 (Icon) Quick-Play Spell from your Deck to your hand.”',\r\n            answer: 'This is a rather complex feature, but not impossible, maybe I could extend the preset feature for this. Let\\'s see if I can look into it this weekend.',\r\n        },\r\n        {\r\n            author: 'Jayden at Sep 08, 2025',\r\n            question: 'I want to firstly express my most sincere gratitude for such an amazing card maker that makes custom cards appear so professional with no cost on the maker.\\nAs for an issue, I have none other than a request / suggestion. Would it be possible to implement Bolded portion of text in the Effect Text? For those users that wish to express unique and more modernised redesigns to card effects.',\r\n            answer: 'I have added an experimental syntax for this case, you may try it now.',\r\n            image: 'https://i.postimg.cc/G3Qd2Ws9/image.png',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Thank you for your quick response and for your astonishing work with the Carder. Yes, I am using an iPad and a phone, and, with both devices, when I click on the Download button, it just shows \"Saving...\" for a second, then no Download starts. I am now on a computer and it works great with left click and \"Save as\", though it would be nice to be able to use it on mobile.',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Sorry for second report in a row! I noticed you asked me specific questions. 1 The App does NOT freeze when trying to download on iPad and Android phone. Just no download starts. 2 The problem was immediately experienced because I discovered the Carder just yesterday.',\r\n            answer: 'Now it\\'s a bit strange; usually, if the export process encounters an error, an explicit message will be displayed. In this case, if the download process is already running but no files are downloaded, it could be that your mobile browser is blocking the automatic download due to some advance security settings. All mobile devices I have tested so far do not exhibit the same issue. I will try to investigate this further, but chances are I won\\'t be able to resolve it if I cannot reproduce the issue. Sorry for the inconvenience.',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Hello! I am loving your work. I hope my issue is not because of ignorance, but it seems like it\\'s not possible to download cards as images.',\r\n            answer: 'Hi there, based on the report it seems that you are using an iPad. I don\\'t have an iPad to test right now, but could you please provide me some more information?\\n1. When you click the Download button, does anything happen? Does the app freeze or it just not doing anything?\\n2. Is the problem just appear recently, or it never worked in the first place?',\r\n            image: 'https://i.postimg.cc/Y2fjyvV2/image.png',\r\n        },\r\n        {\r\n            author: 'Numbers at Sep 04, 2025',\r\n            question: 'There\\'s a weird glitch that happens when adding numbers. The spacing seems to be inconsistent depending on the content',\r\n            answer: 'Hi there, unfortunately this is by design, as the space between words are calculated so that the entire line fit the space perfectly, so depend on the text, it maybe longer or shorter than usual.\\nHowever, if what you want is to align the effect numbers, you can achieve the result by using the following \"<pre>\" syntax.',\r\n            image: 'https://i.postimg.cc/GhbnM0qt/image.png',\r\n        },\r\n        {\r\n            author: 'Italic text at Aug 31, 2025',\r\n            question: 'Adding a syntax option for Italic in order to make only specific part of the text italic',\r\n            answer: 'I have added an experimental syntax for this case, you may try it now.',\r\n            image: 'https://images2.imgbox.com/c3/1b/OFLOLdf9_o.png',\r\n        },\r\n        {\r\n            author: 'ZorcNecropHades at Aug 26, 2025',\r\n            question: 'Hello, the token text cannot be displayed below. I did not have this problem before when I moved it to the bottom.',\r\n            answer: 'It should be fixed by now.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 16, 2025',\r\n            question: 'Art Filter #9 seems not to be working with Pendulum frames',\r\n            answer: 'Hi there, I have checked this case and do not see any significant error (see image below), do you have any image to demonstrate the error?',\r\n            image: 'https://images2.imgbox.com/5b/1f/vp8d5wIa_o.png',\r\n        },\r\n        {\r\n            author: '& symbol at Aug 14, 2025',\r\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\r\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\r\n            image: 'https://i.imgur.com/xZ9Pp9X.png',\r\n        },\r\n        {\r\n            author: 'Die Frauen at Aug 9, 2025',\r\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\r\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\r\n        },\r\n        {\r\n            author: 'Die Frauen at Aug 9, 2025',\r\n            question: 'For convenience\\'s sake, I think it\\'d be a bit more useful if the foil dye set also had a hue slider, or a toggle for the RGB values like the one in the name coloring tabs... for the less inclined to memorize the Hex values.',\r\n            answer: 'I have added rgb inputs for dye color picker.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 8, 2025',\r\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\r\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\r\n        },\r\n        {\r\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\r\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\r\n            answer: 'I have updated the ratio, hopefully it looks better now.',\r\n        },\r\n        {\r\n            author: 'Rush Duel at Jun 22, 2025',\r\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\r\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n        },\r\n        {\r\n            author: 'Maya at May 23, 2025',\r\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n        },\r\n    ];\r\n\r\n    return <>\r\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\r\n                        return <Quote key={index} author={author} question={question} image={image}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                        {\r\n                            question: 'Will you make another version for Rush Duel cards?',\r\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n                        }\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { ImagePreset } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { Copiable, StyledMono } from '../atom';\r\nimport { Popconfirm } from 'antd';\r\nimport { CloseOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nconst MAX_PRESET_IMAGE_WIDTH = 140;\r\nconst MAX_PRESET_IMAGE_HEIGHT = 60;\r\nconst StyledImagePresetContainer = styled.div`\r\n    --max-image-height: ${MAX_PRESET_IMAGE_HEIGHT}px;\r\n    display: grid;\r\n    grid-template-rows: ${MAX_PRESET_IMAGE_HEIGHT}px 22px 1fr;\r\n    text-align: center;\r\n    .image-preview {\r\n        align-content: space-around;\r\n        height: var(--max-image-height);\r\n        img {\r\n            max-width: ${MAX_PRESET_IMAGE_WIDTH}px;\r\n            max-height: var(--max-image-height);\r\n        }\r\n    }\r\n    .image-info {\r\n        display: flex;\r\n        gap: var(--spacing-xxs);\r\n        align-items: center;\r\n        .image-name {\r\n            flex: 1 1 auto;\r\n        }\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-edit:hover {\r\n                color: var(--sub-info);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImagePresetOption = {\r\n    imagePreset: ImagePreset,\r\n    onEdit?: () => void,\r\n    onDelete?: () => void,\r\n} & WithLanguage;\r\nexport const ImagePresetOption = ({\r\n    language,\r\n    imagePreset,\r\n    onDelete,\r\n    onEdit,\r\n}: ImagePresetOption) => {\r\n    const {\r\n        src,\r\n        name,\r\n        width,\r\n        height,\r\n        offsetX,\r\n        offsetY,\r\n    } = imagePreset;\r\n    const normalizedOffsetX = typeof offsetX === 'number'\r\n        ? offsetX > 0 ? `+${offsetX}` : offsetX\r\n        : '0';\r\n    const normalizedOffsetY = typeof offsetY === 'number'\r\n        ? offsetY > 0 ? `+${offsetY}` : offsetY\r\n        : '0';\r\n\r\n    return <StyledImagePresetContainer>\r\n        <div className=\"image-preview\">\r\n            <img src={src} alt={name} />\r\n        </div>\r\n        <div>\r\n            {width ?? 'auto'} × {height ?? 'auto'}\r\n            {typeof offsetX === 'number' || typeof offsetY === 'number'\r\n                ? ` (${normalizedOffsetX}, ${normalizedOffsetY})`\r\n                : null}\r\n        </div>\r\n        <div className=\"image-info\">\r\n            <div className=\"image-name\">\r\n                <Copiable data={name} container={StyledMono}>{name}</Copiable>\r\n            </div>\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onDelete()}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onEdit && <EditOutlined onClick={() => onEdit()} />}\r\n        </div>\r\n    </StyledImagePresetContainer>;\r\n};","import { useEffect, useRef } from 'react';\r\nimport { drawName } from 'src/draw';\r\nimport { FrameInfo, NameStyle } from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport { mergeClass, resolveNameStyle } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\n\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        cursor: pointer;\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nconst OPTION_WIDTH = 140;\r\nconst OPTION_HEIGHT = 30;\r\nconst PresetOptionContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    .canvas-container {\r\n        width: ${OPTION_WIDTH}px;\r\n        height: ${OPTION_HEIGHT}px;\r\n        box-shadow: var(--bs-1);\r\n    }\r\n    .preset-option-action {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-xxs);\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type NameStylePresetOption = React.PropsWithChildren<{\r\n    frameInfo?: FrameInfo,\r\n    presetContent: Partial<NameStyle>,\r\n    active?: boolean,\r\n    onOverwrite?: () => void,\r\n    onActive?: () => void,\r\n    onDelete?: () => void,\r\n} & WithLanguage>;\r\nexport const NameStylePresetOption = ({\r\n    frameInfo,\r\n    presetContent,\r\n    active = false,\r\n    language,\r\n    onOverwrite,\r\n    onActive,\r\n    onDelete,\r\n}: NameStylePresetOption) => {\r\n    const {\r\n        format, foil,\r\n    } = useCard(useShallow(({\r\n        card: { format, foil },\r\n    }) => ({\r\n        format, foil,\r\n    })));\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const {\r\n        name,\r\n        labelBackgroundColor,\r\n        labelBackgroundImage,\r\n    } = frameInfo ?? {};\r\n    const normalizedFrame = name ?? 'effect';\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas?.getContext('2d');\r\n        if (canvas && ctx) {\r\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\r\n            const { font } = presetContent;\r\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\r\n            const top = font === 'OCG' ? 65 : 60;\r\n            const left = font === 'OCG' ? 65 : 12;\r\n            drawName(\r\n                canvas,\r\n                ctx,\r\n                value,\r\n                left,\r\n                top,\r\n                OPTION_WIDTH / 0.4,\r\n                resolveNameStyle({\r\n                    foil,\r\n                    format,\r\n                    frame: normalizedFrame,\r\n                    nameStyle: presetContent,\r\n                    nameStyleType: 'custom',\r\n                }),\r\n                {\r\n                    frame: normalizedFrame,\r\n                    format,\r\n                    furiganaHelper: false,\r\n                    globalScale: 0.4,\r\n                    isSpeedSkill: true,\r\n                }\r\n            );\r\n        }\r\n    }, [foil, format, normalizedFrame, presetContent]);\r\n\r\n    return <PresetOptionContainer\r\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\r\n    >\r\n        <StyledPatternOption\r\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\r\n            onClick={onActive}\r\n            style={{\r\n                background: labelBackgroundColor,\r\n                backgroundImage: labelBackgroundImage,\r\n            }}\r\n        >\r\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\r\n        </StyledPatternOption>\r\n        <div className=\"preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onDelete()}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </PresetOptionContainer>;\r\n};","import { Popconfirm } from 'antd';\r\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\r\nimport { WithLanguage } from 'src/service';\r\nimport { HexColorRegex, mergeClass } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\r\n    /** Ensure even width */\r\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\r\n    &.is-vertical {\r\n        margin-bottom: var(--spacing-3xl);\r\n        .float-layout.foil {\r\n            width: 100%;\r\n            left: 0;\r\n            bottom: -22.5%;\r\n            font-size: var(--fs-sm);\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    &.is-horizontal {\r\n        margin-right: var(--spacing-lg);\r\n        .float-layout.foil {\r\n            width: 50%;\r\n            height: 80%;\r\n            top: 10%;\r\n            right: -60%;\r\n            font-size: 0;\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    button {\r\n        border: none;\r\n    }\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .dye-patch {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 10%;\r\n        left: 50%;\r\n        min-width: 6px;\r\n        min-height: 6px;\r\n        width: ${props => props.$width / 6}px;\r\n        height: ${props => props.$width / 6}px;\r\n        border-radius: var(--br-lg);\r\n        transform: translateX(-50%);\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\r\n        padding: 0;\r\n        &.unmodified .overlay-patch {\r\n            background: var(--gradient-diagonal-stripe);\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n`;\r\nexport type CardLayoutPreview = {\r\n    tabIndex?: number,\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    dyeList: string[],\r\n    foil: Foil,\r\n    onClick?: () => void,\r\n    onLayoutSelect?: (key: string) => void,\r\n    vertical?: boolean,\r\n} & WithLanguage;\r\nexport const CardLayoutPreview = ({\r\n    tabIndex = 0,\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    dyeList,\r\n    foil,\r\n    onClick,\r\n    onLayoutSelect,\r\n    language,\r\n    vertical = false,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer\r\n        $width={width}\r\n        $height={height}\r\n        $layoutHoverable={!!onLayoutSelect}\r\n        $hoverable={!!onClick}\r\n        onClick={onClick}\r\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\r\n    >\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n            const dyeIndex = DyeIndexMap[key];\r\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame] ?? {};\r\n            return <button key={key}\r\n                {...tabIndex < 0 ? {} : { tabIndex }}\r\n                className={mergeClass(\r\n                    className,\r\n                    key === activeLayout ? 'active' : '',\r\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\r\n                )}\r\n                onClick={() => onLayoutSelect?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                    style={dyeColor\r\n                        ? {\r\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\r\n                        }\r\n                        : {}}\r\n                />\r\n            </button>;\r\n        })}\r\n        <button\r\n            {...tabIndex < 0 ? {} : { tabIndex }}\r\n            className={mergeClass(\r\n                'card-layout float-layout foil',\r\n                'foil' === activeLayout ? 'active' : '',\r\n            )}\r\n            onClick={() => onLayoutSelect?.('foil')}\r\n            style={{\r\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\r\n                    ? dyeList[DyeIndexMap.foil]\r\n                    : FoilMap[foil].color} inset`\r\n            }}\r\n        >\r\n            {language['input.foil.label']}\r\n        </button>\r\n    </CardLayoutContainer>;\r\n};\r\n\r\nconst LayoutPresetOptionContainer = styled.div`\r\n    text-align: center;\r\n    .layout-preset-option-action {\r\n        line-height: 1.25;\r\n        text-align: center;\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n            + .anticon {\r\n                margin-left: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type LayoutPresetOption = {\r\n    onActive?: () => void,\r\n    onOverwrite?: () => Promise<void>,\r\n    onDelete?: () => Promise<void>,\r\n} & CardLayoutPreview;\r\nexport const LayoutPresetOption = ({\r\n    onActive,\r\n    onDelete,\r\n    onOverwrite,\r\n    language,\r\n    ...rest\r\n}: LayoutPresetOption) => {\r\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\r\n        <div className=\"preview-container\" onClick={onActive}>\r\n            <CardLayoutPreview {...rest} language={language} />\r\n        </div>\r\n        <div className=\"layout-preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={onDelete}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </LayoutPresetOptionContainer>;\r\n};","import { Button, Col, Form, Input, InputNumber, Modal, notification, Row } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport { ImagePreset } from 'src/model';\r\nimport { WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst ImagePresetFormContainer = styled(Form.Item)`\r\n    &.ant-form-item {\r\n        margin-bottom: calc(-3/2 * var(--spacing));\r\n        margin-top: var(--spacing);\r\n        margin-left: calc(-3/2 * var(--spacing));\r\n        margin-right: calc(-3/2 * var(--spacing));\r\n        padding: var(--spacing);\r\n        border-top: var(--bw) solid var(--sub-level-1);\r\n        .ant-form-item-control-input-content {\r\n            display: flex;\r\n            justify-content: end;\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImagePresetFormRef = {\r\n    edit: (key: string, data: ImagePreset) => void,\r\n};\r\nexport type ImagePresetForm = {\r\n    onSubmit: (data: ImagePreset) => void,\r\n    onEdit: (key: string, data: ImagePreset) => void,\r\n} & WithLanguage;\r\nexport const ImagePresetForm = forwardRef<ImagePresetFormRef, ImagePresetForm>(({\r\n    onSubmit,\r\n    onEdit,\r\n    language,\r\n}, ref) => {\r\n    const [form] = Form.useForm();\r\n    const [editKey, setEditKey] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const turnOffForm = () => {\r\n        setVisible(false);\r\n        setEditKey('');\r\n        form.resetFields();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        edit: (key, data) => {\r\n            form.setFieldsValue(data);\r\n            setEditKey(key);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    return <>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n                setVisible(true);\r\n            }}\r\n        >\r\n            {language['preset.form.image.add.label']}\r\n        </Button>\r\n        <Modal\r\n            visible={visible}\r\n            width={400}\r\n            className=\"global-overlay\"\r\n            footer={() => null}\r\n            onCancel={() => turnOffForm()}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"image-preset\"\r\n                layout=\"vertical\"\r\n                size=\"middle\"\r\n                onFinish={value => {\r\n                    if (typeof editKey === 'string' && editKey !== '') {\r\n                        onEdit(editKey, value);\r\n                    } else {\r\n                        onSubmit(value);\r\n                    }\r\n                    turnOffForm();\r\n                }}\r\n                onFinishFailed={() => {\r\n                    notification.error({\r\n                        message: language['error.preset-import.message'],\r\n                        description: language['error.preset-import.description'],\r\n                    });\r\n                }}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label={language['preset.form.image.src.label']}\r\n                    name=\"src\"\r\n                    rules={[{ required: true, message: language['form.required'] }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={language['preset.form.image.name.label']}\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: language['form.required'] }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <div>{language['form.default']}</div>\r\n\r\n                <Row gutter={10}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.width.label']}\r\n                            name=\"width\"\r\n                        >\r\n                            <InputNumber step={1} min={0} max={800} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.height.label']}\r\n                            name=\"height\"\r\n                        >\r\n                            <InputNumber step={1} min={0} max={800} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={10}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.offset-x.label']}\r\n                            name=\"offsetX\"\r\n                        >\r\n                            <InputNumber step={1} min={-200} max={200} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.offset-y.label']}\r\n                            name=\"offsetY\"\r\n                        >\r\n                            <InputNumber step={1} min={-200} max={200} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <ImagePresetFormContainer>\r\n                    <Button onClick={() => turnOffForm()}>\r\n                        {language['form.dismiss']}\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        {language['form.submit']}\r\n                    </Button>\r\n                </ImagePresetFormContainer>\r\n            </Form>\r\n        </Modal>\r\n    </>;\r\n});","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ManagerDrawer } from '../atom';\r\nimport { ImagePresetOption, NameStylePresetOption } from '../preset-option';\r\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { LayoutPresetOption } from '../card-layout-preview';\r\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { Button, Modal, notification } from 'antd';\r\nimport { useMemo, useRef, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ImagePresetForm, ImagePresetFormRef } from './image-preset-form';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst PresetImportReviewModalContainer = styled(Modal)`\r\n    .import-review-title {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .import-action-table {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs);\r\n            &:nth-child(1) {\r\n                width: 150px;\r\n            }\r\n            &:nth-child(2) {\r\n                width: 150px;\r\n            }\r\n        }\r\n        .action-panel {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 1fr;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .import-action-row {\r\n            &.keep-old {\r\n                td:nth-child(1) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-new {\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-both {\r\n                td:nth-child(1),\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\r\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\r\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\r\ntype PresetImportReviewModal = {\r\n    frameInfo: FrameInfo,\r\n    isPendulum: boolean,\r\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\r\n    onCancel: () => void,\r\n} & WithLanguage;\r\nconst PresetImportReviewModal = ({\r\n    language,\r\n    isPendulum,\r\n    frameInfo,\r\n    importData,\r\n    onCancel,\r\n}: PresetImportReviewModal) => {\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const {\r\n        layoutPresetMap,\r\n        nameStylePresetMap,\r\n    } = useMemo(() => {\r\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n\r\n        return {\r\n            nameStylePresetMap,\r\n            layoutPresetMap,\r\n        };\r\n    }, [layoutPresetList, nameStylePresetList]);\r\n    const {\r\n        layoutPresetList: nextLayoutPresetList = [],\r\n        nameStylePresetList: nextNameStylePresetList = [],\r\n    } = importData;\r\n    const [decisionMap, setDecisionMap] = useState(() => {\r\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n\r\n        return { layoutPresetMap, nameStylePresetMap };\r\n    });\r\n\r\n    return <PresetImportReviewModalContainer\r\n        visible={true}\r\n        width={700}\r\n        maskClosable={false}\r\n        okText={language['preset.button.import.label']}\r\n        cancelText={language['preset.button.discard.label']}\r\n        onCancel={onCancel}\r\n        onOk={async () => {\r\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\r\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\r\n\r\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\r\n            const layoutFullList: LayoutPreset[] = [];\r\n            const layoutNewList: LayoutPreset[] = [];\r\n            layoutVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    layoutFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\r\n                        layoutNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        layoutNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        layoutReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\r\n                for (const { key, content } of layoutFullList) {\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await layoutPresetTx.done;\r\n            }\r\n            setLayoutPresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...layoutNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n\r\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\r\n            const nameStyleFullList: NameStylePreset[] = [];\r\n            const nameStyleNewList: NameStylePreset[] = [];\r\n            nameStyleVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    nameStyleFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\r\n                        nameStyleNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        nameStyleNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        nameStyleReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                for (const { key, content } of nameStyleFullList) {\r\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await nameStylePresetTx.done;\r\n            }\r\n            setNameStylePresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...nameStyleNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n            onCancel();\r\n        }}\r\n    >\r\n        <div className=\"import-review-title\">\r\n            <h2>{language['preset.review-title.label']}</h2>\r\n            {language['preset.review-description']}\r\n        </div>\r\n        <table className=\"import-action-table\">\r\n            <tbody>\r\n                <tr className=\"import-action-row import-header-row\">\r\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\r\n                </tr>\r\n                {nextNameStylePresetList.map(({ key, content }) => {\r\n                    const commonProps = { language, frameInfo };\r\n                    const currentContent = nameStylePresetMap[key]?.content;\r\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <NameStylePresetOption {...commonProps} presetContent={currentContent}>\r\n                                {currentContent.preset}\r\n                            </NameStylePresetOption>}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <NameStylePresetOption {...commonProps} presetContent={content}>\r\n                                {content.preset}\r\n                            </NameStylePresetOption>\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n                {nextLayoutPresetList.map(({ key, content }) => {\r\n                    const commonProps = {\r\n                        width: Math.round(40 * width / height),\r\n                        height: 40,\r\n                        isPendulum,\r\n                        tabIndex: -1,\r\n                        language: language,\r\n                    };\r\n                    const currentContent = layoutPresetMap[key]?.content;\r\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: currentContent.frame,\r\n                                    topLeftFrame: currentContent.leftFrame,\r\n                                    topRightFrame: currentContent.rightFrame,\r\n                                    bottomLeftFrame: currentContent.pendulumFrame,\r\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\r\n                                    effectBackground: currentContent.effectStyle?.background,\r\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={currentContent.dyeList}\r\n                                foil={currentContent.foil}\r\n                                {...commonProps}\r\n                            />}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: content.frame,\r\n                                    topLeftFrame: content.leftFrame,\r\n                                    topRightFrame: content.rightFrame,\r\n                                    bottomLeftFrame: content.pendulumFrame,\r\n                                    bottomRightFrame: content.pendulumRightFrame,\r\n                                    effectBackground: content.effectStyle?.background,\r\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={content.dyeList}\r\n                                foil={content.foil}\r\n                                {...commonProps}\r\n                            />\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </PresetImportReviewModalContainer>;\r\n};\r\n\r\nconst PresetManagerContainer = styled(ManagerDrawer)`\r\n    .ant-drawer-body {\r\n        padding: var(--spacing);\r\n    }\r\n    .preset-list {\r\n        margin-top: var(--spacing);\r\n        padding-top: var(--spacing);\r\n        border-top: var(--bw) solid var(--main-level-1);\r\n    }\r\n    .image-preset-list {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .overlay-title {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        line-height: 1;\r\n    }\r\n    .name-style-preset-list {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .layout-preset-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .action-list {\r\n        margin-top: var(--spacing);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        .import-upload-input {\r\n            display: none;\r\n        }\r\n    }\r\n    label {\r\n        display: block;\r\n        grid-column: -1 / 1;\r\n    }\r\n`;\r\n\r\nexport type PresetManager = {} & WithLanguage;\r\nexport const PresetManager = ({\r\n    language,\r\n}: PresetManager) => {\r\n    const {\r\n        setVisible,\r\n        visible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n        },\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n    })));\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const [imagePresetList, setImagePresetList] = useGlobal('imagePresetList');\r\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>>({\r\n        visible: false,\r\n        layoutPresetList: [],\r\n        nameStylePresetList: [],\r\n        imagePresetList: [],\r\n    });\r\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const imagePresetFormRef = useRef<ImagePresetFormRef>(null);\r\n    const directUploadId = 'preset-import-direct-upload';\r\n\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    try {\r\n                        const {\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                            imagePresetList,\r\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>;\r\n\r\n                        setImportData({\r\n                            visible: true,\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                            imagePresetList,\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        notification.error({\r\n                            description: language['error.preset-import.description'],\r\n                            message: language['error.preset-import.message'],\r\n                        });\r\n                    }\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n        setInputKey(cur => cur + 1);\r\n    };\r\n\r\n    return <PresetManagerContainer\r\n        footer={null}\r\n        width={345}\r\n        visible={visible}\r\n        title={<div className=\"overlay-title\">\r\n            <span>{language['preset.manager.label']}</span>\r\n            <CloseOutlined\r\n                onClick={() => {\r\n                    setVisible(false);\r\n                }}\r\n            />\r\n        </div>}\r\n        onClose={() => {\r\n            setVisible(false);\r\n        }}\r\n    >\r\n        <div>\r\n            {language['preset.warning.label']}\r\n        </div>\r\n        <div className=\"action-list\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const data = JSON.stringify({\r\n                        layoutPresetList: layoutPresetList,\r\n                        nameStylePresetList: nameStylePresetList,\r\n                    });\r\n                    const blob = new Blob([data], { type: 'application/json' });\r\n                    downloadBlob(\r\n                        'preset.json',\r\n                        blob,\r\n                        'application/json',\r\n                    );\r\n                }}\r\n            >\r\n                {language['generic.export.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = presetImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                    }}\r\n                />\r\n            </Button>\r\n        </div>\r\n        <div className=\"preset-list name-style-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.name-style.label']}\r\n            </label>\r\n            {nameStylePresetList.map(({ key, content }) => {\r\n                return <NameStylePresetOption key={key}\r\n                    language={language}\r\n                    frameInfo={frameInfo}\r\n                    presetContent={content}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                            await db.delete('presetNameStyleStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                    }}\r\n                >\r\n                    {content.preset}\r\n                </NameStylePresetOption>;\r\n            })}\r\n        </div>\r\n        <div className=\"preset-list layout-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.advanced-frame.label']}\r\n            </label>\r\n            {layoutPresetList.map(({ content, key }) => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                const layoutState = {\r\n                    frame,\r\n                    topLeftFrame: leftFrame,\r\n                    topRightFrame: rightFrame,\r\n                    bottomLeftFrame: pendulumFrame,\r\n                    bottomRightFrame: pendulumRightFrame,\r\n                    effectBackground: effectStyle?.background,\r\n                    pendulumEffectBackground: pendulumStyle?.background,\r\n                };\r\n\r\n                return <LayoutPresetOption key={key}\r\n                    width={Math.round(40 * width / height)}\r\n                    height={40}\r\n                    isPendulum={isPendulum}\r\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                    tabIndex={-1}\r\n                    dyeList={dyeList}\r\n                    foil={foil}\r\n                    language={language}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.delete('presetLayoutStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n        <div className=\"preset-list image-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.image.label']}\r\n                &nbsp;\r\n                <ImagePresetForm\r\n                    ref={imagePresetFormRef}\r\n                    language={language}\r\n                    onSubmit={async value => {\r\n                        const key = uuid();\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => {\r\n                            return [\r\n                                ...cur,\r\n                                {\r\n                                    key,\r\n                                    content: { ...value },\r\n                                }\r\n                            ];\r\n                        });\r\n                    }}\r\n                    onEdit={async (key, value) => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => {\r\n                            return cur.map(entry => {\r\n                                if (entry.key === key) return {\r\n                                    key,\r\n                                    content: { ...value },\r\n                                };\r\n                                return entry;\r\n                            });\r\n                        });\r\n                    }}\r\n                />\r\n                <br />\r\n                {language['preset.instruction.image.head-up.label']}\r\n            </label>\r\n            {imagePresetList.map(({ key, content }) => {\r\n                return <ImagePresetOption key={key}\r\n                    language={language}\r\n                    imagePreset={content}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.delete('presetImageStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                    }}\r\n                    onEdit={() => {\r\n                        imagePresetFormRef.current?.edit(key, content);\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n        {importData.visible && <PresetImportReviewModal\r\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\r\n            importData={importData}\r\n            frameInfo={frameInfo}\r\n            isPendulum={isPendulum}\r\n            language={language}\r\n        />}\r\n    </PresetManagerContainer>;\r\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\r\nimport { PresetManager } from '../preset-manager';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        setVisible: setPresetManagerVisible,\r\n        visible: presetManagerVisible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\r\n                onClick={() => setPresetManagerVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <AuditOutlined />\r\n                    <label>{language['preset.manager.label']}</label>\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n            <PresetManager language={language} />\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Collapse, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { CopiableCode, StyledCode } from '../atom';\r\nimport { IconTypeAttributeMap, IconTypeMap, IconTypeStMap, TotalAttributeIconPresetList } from 'src/model';\r\nimport React from 'react';\r\nimport './formatting-guide.scss';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nconst SpecialPathContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(210px, 1fr));\r\n    .special-path-item {\r\n        display: grid;\r\n        grid-template-columns: 20px 180px;\r\n        gap: var(--spacing-xs);\r\n        align-items: center;\r\n        img {\r\n            max-width: 20px;\r\n            max-height: 20px;\r\n        }\r\n    }\r\n    + .path-container {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\ntype ImagePathPreview = { path: string, imagePath: string };\r\nconst ImagePathPreview = ({ path, imagePath }: ImagePathPreview) => {\r\n    return <div className=\"special-path-item\">\r\n        <div className=\"image\">\r\n            <img src={`${process.env.PUBLIC_URL}/asset/image/${imagePath}`} alt={path} />\r\n        </div>\r\n        <div className=\"path\">\r\n            <CopiableCode data={path}>{path}</CopiableCode>\r\n        </div>\r\n    </div>;\r\n};\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['generic.close.label']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+Shift+1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+Shift+1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-7.label']}</h2>\r\n                {language['guide.format.section-7.content'](\r\n                    <StyledCode key=\"open-tag\">{'<i>'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'</i>'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+I'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+I'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'italic text raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'italic text preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-8.label']}</h2>\r\n                {language['guide.format.section-8.content'](\r\n                    <StyledCode key=\"open-tag\">{'<b>'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'</b>'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+B'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+B'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'bold text raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'bold text preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-9.label']}</h2>\r\n                {language['guide.format.section-9.content'](\r\n                    <StyledCode key=\"open-tag\">{'<img />'}</StyledCode>,\r\n                )}\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['guide.format.section-9.special-path.content']}\r\n                        </div>}\r\n                    >\r\n                        {[\r\n                            <SpecialPathContainer key=\"subfamily-st\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeMap)\r\n                                        .filter(({ isOption }) => isOption === true)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            <SpecialPathContainer key=\"subfamily-icon\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeStMap)\r\n                                        .filter(({ isOption }) => isOption === true)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            <SpecialPathContainer key=\"subfamily-attribute\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeAttributeMap)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            ...TotalAttributeIconPresetList\r\n                                .map((list, index) => {\r\n                                    return <SpecialPathContainer key={`region-${index}`} className=\"path-container\">\r\n                                        {list.map(({ imagePresetPath, imagePresetSource }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })}\r\n                                    </SpecialPathContainer>;\r\n                                }),\r\n                        ]}\r\n                    </Panel>\r\n                </Collapse>\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'image raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'image preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n    &:focus {\r\n        background-color: var(--main-level-3);\r\n    }\r\n    &:focus-visible {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    id,\r\n    tabIndex,\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    id?: string,\r\n    tabIndex?: number,\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        id={id}\r\n        tabIndex={tabIndex}\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useGlobal, useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport { DropZone } from '../atom';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nexport const CROPPER_WIDTH = 375;\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\r\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\r\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\r\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\r\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\r\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\r\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\r\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\r\n    if (unitL !== unitR) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (fileList: FileList) => {\r\n        const targetFile = fileList[0];\r\n        if (!targetFile) return;\r\n        const maxFileSize = 4;\r\n\r\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setCrossOrigin('anonymous');\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('offline');\r\n                    setInputMode('offline');\r\n                    onSourceChange('offline', reader.result);\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            reader.readAsDataURL(targetFile);\r\n        } else {\r\n            onMaxSizeExceeded(maxFileSize);\r\n        }\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={mergeClass('card-image-cropper', className)}>\r\n            <div className=\"card-image-source-input\">\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    // setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Tooltip\r\n                                title={<div className=\"image-info\">\r\n                                    {language['image-cropper.online-tip']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                    {language['image-cropper.source.online.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={e => {\r\n                                if (e.target.files && e.target.files.length > 0) {\r\n                                    applyOfflineSource(e.target.files);\r\n                                } else alert(language['image-cropper.not-found-warning']);\r\n                            }}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            {beforeCropper}\r\n            <div\r\n                className={mergeClass('card-cropper')}\r\n                onKeyDown={() => {\r\n                    /** Nudge selection also count as user interaction */\r\n                    setInteracted(true);\r\n                }}\r\n            >\r\n                <DropZone\r\n                    $visible={activeDropzone > 0}\r\n                    className=\"drop-zone\"\r\n                    onDragOver={e => e.preventDefault()}\r\n                    onDrop={e => {\r\n                        e.preventDefault();\r\n                        setActiveDropzone(0);\r\n                        if (e.currentTarget.classList.contains('drop-zone')) {\r\n                            // const itemList = e.dataTransfer.items;\r\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\r\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\r\n                            // }\r\n                            const fileList = e.dataTransfer.files;\r\n                            applyOfflineSource(fileList);\r\n                        }\r\n                    }}\r\n                >\r\n                    <label>{language['image-cropper.drop.tooltip']}</label>\r\n                </DropZone>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        if (!receivingCanvas) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop || isLoading) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});","\r\nimport { Input } from 'antd';\r\nimport { useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        gap: 3px; // Alignment\r\n        padding-left: 3px; // Alignment\r\n        input {\r\n            width: 58px; // Alignment\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\n\r\nexport type InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nexport const InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};","import { Input } from 'antd';\r\nimport { CustomPicker, InjectedColorProps } from 'react-color';\r\nimport { Saturation } from 'react-color/lib/components/common';\r\nimport { UseColorPicker, useColorPicker } from 'src/service';\r\nimport { getContrastColor, rgbToHex } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { IconButton } from '../icon-button';\r\n\r\nconst SaturationBoardContainer = styled.div`\r\n    position: relative;\r\n    border-radius: var(--br);\r\n    > div,\r\n    .saturation-white,\r\n    .saturation-black {\r\n        border-radius: var(--br);\r\n    }\r\n`;\r\n\r\ntype UnlinkedSaturationBoard = InjectedColorProps;\r\nconst UnlinkedSaturationBoard = ({\r\n    onChange,\r\n    ...props\r\n}: UnlinkedSaturationBoard) => {\r\n    return <SaturationBoardContainer>\r\n        <Saturation\r\n            {...props}\r\n            onChange={color => {\r\n                onChange?.(color);\r\n            }}\r\n        />\r\n    </SaturationBoardContainer>;\r\n};\r\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\r\n\r\nconst HorizontalSketchColorList = [\r\n    { hex: '#B80000', rgb: [184, 0, 0] },\r\n    { hex: '#EB9694', rgb: [235, 150, 148] },\r\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\r\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\r\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\r\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\r\n    { hex: '#008B02', rgb: [0, 139, 2] },\r\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\r\n    { hex: '#006B76', rgb: [0, 107, 118] },\r\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\r\n    { hex: '#1273DE', rgb: [18, 115, 222] },\r\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\r\n    { hex: '#004DCF', rgb: [0, 77, 207] },\r\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\r\n    { hex: '#5300EB', rgb: [83, 0, 235] },\r\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\r\n];\r\n\r\nconst HorizontalSketchPickerContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    .color-input {\r\n        .color-state {\r\n            display: flex;\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n        ${ColorBlock} {\r\n            display: inline-block;\r\n            flex: 1;\r\n            border: var(--bw) solid var(--sub-level-2);\r\n            height: 18px;\r\n        }\r\n    }\r\n    .color-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\r\n        border-radius: var(--br);\r\n        overflow: hidden;\r\n        ${ColorBlock} {\r\n            height: 16px;\r\n            width: 16px;\r\n            box-shadow: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n    .rgb-input {\r\n        display: grid;\r\n        grid-template-columns: 1rem 1fr;\r\n        column-gap: var(--spacing-xs);\r\n        font-size: var(--fs-sm);\r\n        input {\r\n            line-height: 1;\r\n            font-size: var(--fs-sm);\r\n        }\r\n        + .rgb-input {\r\n            margin-top: var(--spacing-xxs);\r\n        }\r\n    }\r\n`;\r\nexport type HorizontalSketchPicker = {\r\n    children?: React.ReactNode,\r\n} & UseColorPicker;\r\nexport const HorizontalSketchPicker = ({\r\n    children,\r\n    onChange,\r\n    value,\r\n}: HorizontalSketchPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n    const noColor = inputText === '';\r\n\r\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\r\n        <div className=\"input-label\">\r\n            {children}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-state\">\r\n                <ColorBlock\r\n                    $empty={noColor}\r\n                    style={noColor ? {} : { backgroundColor: color.hex }}\r\n                />\r\n                <IconButton\r\n                    size=\"sm\"\r\n                    Icon={CloseOutlined}\r\n                    onClick={() => {\r\n                        onChange?.('');\r\n                    }}\r\n                />\r\n            </div>\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n        <div className=\"rgb-input-list\">\r\n            {['R', 'G', 'B'].map((entry, index) => {\r\n                return <div key={entry} className=\"rgb-input\">\r\n                    <span>{entry}</span>\r\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\r\n                        const nextColor = [...color.rgb];\r\n                        nextColor[index] = parseInt(e.target.value);\r\n\r\n                        setColor(rgbToHex(nextColor));\r\n                    }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-list\">\r\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\r\n    </HorizontalSketchPickerContainer>;\r\n};","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst LINK_MARKER_HALF_SIZE = 13;\r\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 1;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkerPicker = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkerPicker = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkerPicker) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        <ResolutionLabel width={width} height={height} warning={true} />\r\n                    </Popover>\r\n                    : <ResolutionLabel width={width} height={height} />}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './card-layout-preview';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './image-cropper';\r\nexport * from './inline-color-picker';\r\nexport * from './inline-sketch-picker';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './link-marker';\r\nexport * from './loading';\r\nexport * from './preset-manager';\r\nexport * from './preset-option';\r\nexport * from './setting';\r\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl+S / ⌘+S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    ${CopiableOverlayStyle}\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    return <Copiable\r\n        disabled={disabled}\r\n        data={data}\r\n        container={StyledCardDataCopyButton}\r\n        overlay={withText\r\n            ? <>Copied&nbsp;<CheckOutlined /></>\r\n            : <CheckOutlined />}\r\n    >{children}</Copiable>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay export-modal\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={false}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['image-cropper.offline-warning']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={window.location.href}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><LinkOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.share-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl+D / ⌘+D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['generic.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown\r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['generic.import.label']}\r\n            className=\"global-overlay import-modal\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl+E / ⌘+E</div>\r\n                    <div>Ctrl+G / ⌘+G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n    ExtraAttributeList,\r\n    RegionMap,\r\n    AUTO_FONT,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\r\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\r\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n        label: dictionary[labelKey],\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\r\n                />\r\n            </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                'Ø',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import styled from 'styled-components';\r\nimport { StyledDropdown } from 'src/component';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm);\r\n    max-width: 507px; // Alignment\r\n    .preset-warning {\r\n        flex: 0 0 100%;\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .panel-action {\r\n        flex: 0 0 100%;\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <SingleSliderContainer className=\"single-slider\">\r\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </SingleSliderContainer>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    width: 245px; // Exact same width with text color picker, for alignment\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        font-size: var(--fs-sm);\r\n        text-align: left;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate?: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span\r\n                key=\"color-navigate\"\r\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\r\n                onClick={onColorTabNavigate}\r\n            >\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color?: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton, StyledPatternOption, NameStylePresetOption } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPresetContainer,\r\n} from './style-picker.styled';\r\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport { v4 as uuid } from 'uuid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const { db } = useCarderDb();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && font !== 'Auto'}\r\n                            className=\"picker-dropdown font-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <div className=\"save-preset-button-group\">\r\n                        <Button\r\n                            size=\"small\"\r\n                            className=\"picker-dropdown preset-picker-dropdown\"\r\n                            type=\"primary\"\r\n                            onClick={async () => {\r\n                                const key = uuid();\r\n                                if (db) {\r\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                    await tx.done;\r\n                                }\r\n                                setNameStylePresetList(cur => {\r\n                                    return [\r\n                                        ...cur,\r\n                                        {\r\n                                            key,\r\n                                            content: { ...value },\r\n                                        }\r\n                                    ];\r\n                                });\r\n                            }}\r\n                        >\r\n                            {language['input.name-style.preset.label']}\r\n                        </Button>\r\n                        <Popover key=\"preset-picker\"\r\n                            trigger={['click']}\r\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\r\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\r\n                                        {language['preset.warning.label']}\r\n                                        &nbsp;\r\n                                        <span className=\"open-preset-manager\"\r\n                                            onClick={() => setVisible(true)}\r\n                                        >{language['preset.manager.check.label']}</span>\r\n                                    </div>}\r\n                                    {nameStylePresetList.length === 0 && <Empty\r\n                                        description={language['generic.empty.label']}\r\n                                    />}\r\n                                    {nameStylePresetList.map(({ key, content }) => {\r\n                                        return <NameStylePresetOption key={key}\r\n                                            language={language}\r\n                                            frameInfo={frameInfo}\r\n                                            presetContent={content}\r\n                                            onActive={() => {\r\n                                                setValue({ ...content });\r\n                                                requestUpdateCustomStyle();\r\n                                            }}\r\n                                            onOverwrite={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => {\r\n                                                    return cur.map(entry => {\r\n                                                        if (entry.key === key) return {\r\n                                                            key,\r\n                                                            content: { ...value },\r\n                                                        };\r\n                                                        return entry;\r\n                                                    });\r\n                                                });\r\n                                            }}\r\n                                            onDelete={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.delete('presetNameStyleStore', key);\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                                            }}\r\n                                        >\r\n                                            {content.preset}\r\n                                        </NameStylePresetOption>;\r\n                                    })}\r\n                                </StyledPresetContainer>\r\n                            </div>}\r\n                            placement=\"bottomRight\"\r\n                        >\r\n                            <div className=\"custom-preset-button\">\r\n                                <CaretDownOutlined />\r\n                            </div>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n                linkRating,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\r\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\r\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            onStatChange(nextAtk, nextDef, nextLinkRating);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n                linkRating: nextLinkRating,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: var(--cropper-width);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .art-frame {\r\n        span {\r\n            padding: 0;\r\n        }\r\n    }\r\n    div.ant-slider {\r\n        .ant-slider-handle {\r\n            height: 19px;\r\n            top: 8px;\r\n            border-radius: 0;\r\n            width: 10px;\r\n        }\r\n        .ant-slider-step,\r\n        .ant-slider-track,\r\n        .ant-slider-rail {\r\n            height: 10px;\r\n        }\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        .ant-slider {\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n    .background-label {\r\n        cursor: pointer;\r\n        &:hover {\r\n            .background-preview {\r\n                box-shadow: 0 0 2px 0 #2a2a2a;\r\n            }\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        text-align: center;\r\n        user-select: none;\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .layout-picker-panel {\r\n            margin-top: var(--spacing);\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <Checkbox\r\n                    className=\"art-frame\"\r\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                    checked={opacity.boundless}\r\n                >\r\n                    &nbsp;{language['input.opacity.boundless.label']}\r\n                </Checkbox>\r\n            </SolidLabel>\r\n        </Tooltip>\r\n        <Popover\r\n            visible={backgroundInputVisible}\r\n            destroyTooltipOnHide={false}\r\n            trigger={['click']}\r\n            onVisibleChange={setBackgroundInputVisible}\r\n            overlayClassName={[\r\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                backgroundInputVisible ? 'picker-visible' : '',\r\n                backgroundInputHidden ? 'picker-hidden' : '',\r\n            ].join(' ')}\r\n            content={<div className=\"overlay-event-absorber\">\r\n                <StyledBaseFillPickerContainer\r\n                    className={[\r\n                        'custom-style-picker',\r\n                        noBackground ? 'overlay-no-background-image' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                        <Checkbox\r\n                            checked={hasBackground}\r\n                            onChange={e => {\r\n                                changeHasBackground(e);\r\n                            }}\r\n                        >{language['input.background.toggle-label']}</Checkbox>\r\n                        <br />\r\n                        <i>{language['input.background.description']}</i>\r\n                    </h3>\r\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                        <BackgroundInputGroup\r\n                            ref={backgroundInputRef}\r\n                            receivingCanvas={receivingCanvas}\r\n                            onSourceLoaded={onSourceLoaded}\r\n                            onTainted={onTainted}\r\n                            onCropChange={onCropChange}\r\n                            backgroundColor={opacity.baseFill}\r\n                        >\r\n                            <div className=\"layout-picker-panel\">\r\n                                <div className=\"layout-picker-subpanel color-section\">\r\n                                    <h2>{language['input.background-color.label']}</h2>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={opacity.baseFill}\r\n                                        onChangeComplete={color => {\r\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                    <h2>{language['input.background-type.label']}</h2>\r\n                                    <RadioTrain\r\n                                        className=\"background-type-picker\"\r\n                                        onChange={changeBackgroundType}\r\n                                        optionList={getBackgroundTypeList({\r\n                                            fit: language['input.background-type.fit.label'],\r\n                                            full: language['input.background-type.full.label'],\r\n                                            frame: language['input.background-type.frame.label'],\r\n                                        })}\r\n                                        value={backgroundType}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </BackgroundInputGroup>\r\n                    </div>\r\n                </StyledBaseFillPickerContainer>\r\n            </div>}\r\n            placement=\"bottom\"\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <div\r\n                    className=\"background-preview\"\r\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                >\r\n                    {hasBackground\r\n                        ? background || backgroundData\r\n                            ? <img\r\n                                className=\"background-image-preview\"\r\n                                src={backgroundSource === 'online'\r\n                                    ? background\r\n                                    : backgroundData}\r\n                                alt=\"Background\"\r\n                            />\r\n                            : null\r\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                </div>\r\n                {language['input.background.label']}\r\n            </SolidLabel>\r\n        </Popover>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <SolidLabel className=\"slider-label\">\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </SolidLabel>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { IconButton, RadioTrain } from 'src/component';\r\nimport { useCard, useSetting, WithLanguage } from 'src/service';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { useMemo } from 'react';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getAttributeList, getExtraAttributeList } from '../const';\r\nimport { RegionMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst AttributeRegionTrain = styled.div`\r\n    align-self: flex-end;\r\n    position: relative;\r\n    min-height: 6px; // Alignment\r\n    .attribute-region-picker {\r\n        position: absolute;\r\n        right: 0;\r\n        top: calc(var(--spacing-xxs) * -1);\r\n        z-index: 1;\r\n    }\r\n    &.container-block .attribute-region-picker {\r\n        position: relative;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        font-size: var(--fs-sm);\r\n        height: unset;\r\n        line-height: 1.25;\r\n    }\r\n`;\r\n\r\nexport type AttributeInputGroup = {\r\n} & WithLanguage;\r\nexport const AttributeInputGroup = ({\r\n    language,\r\n}: AttributeInputGroup) => {\r\n    const {\r\n        format,\r\n        region,\r\n        attribute,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            region,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        format,\r\n        region,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n    })));\r\n    const { setting, updateSetting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\r\n\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\r\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    return <>\r\n        <RadioTrain\r\n            className=\"fill-input-train span-input-train attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={attributeList}\r\n            suffix={!showExtraAttribute && showExtraDecorativeOption\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\r\n                    Icon={DoubleRightOutlined}\r\n                    tooltipProps={{ overlay: language['button.more.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            <span>{language['input.attribute.label']}</span>\r\n        </RadioTrain>\r\n        {showExtraDecorativeOption && <AttributeRegionTrain\r\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\r\n        >\r\n            <RadioTrain\r\n                className=\"attribute-region-picker\"\r\n                optionList={Object\r\n                    .values(RegionMap)\r\n                    .map(({ key }) => ({\r\n                        value: key,\r\n                        label: key.toUpperCase(),\r\n                    }))\r\n                }\r\n                value={region}\r\n                onChange={changeRegion}\r\n            />\r\n        </AttributeRegionTrain>}\r\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\r\n            className=\"fill-input-train extra-attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={extraAttributeList}\r\n            suffix={showExtraDecorativeOption && showExtraAttribute\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\r\n                    Icon={DoubleLeftOutlined}\r\n                    tooltipProps={{ overlay: language['button.less.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            &nbsp;\r\n        </RadioTrain>}\r\n    </>;\r\n};","import { Button, Checkbox, Modal } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\r\nimport {\r\n    IconTypeAttributeList,\r\n    IconTypeInfo,\r\n    IconTypeList,\r\n    IconTypeStList,\r\n    MAX_STAR_LENGTH,\r\n    NORMAL_STAR_LENGTH,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { mergeClass, padRight } from 'src/util';\r\n\r\nconst IconDropdownOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: var(--br-lg);\r\n    cursor: not-allowed;\r\n`;\r\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    .anticon-close-circle {\r\n        font-size: var(--fs-lg);\r\n    }\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nexport const IconDropdownContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    background-color: var(--sub-level-1);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    overflow: hidden;\r\n    position: relative;\r\n    .container-group {\r\n        box-shadow: none;\r\n        border: none;\r\n        border-radius: 0;\r\n    }\r\n    &.selector-disabled {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n    }\r\n`;\r\nexport type StarTypeSelector = {\r\n    disabled?: boolean,\r\n    className?: string,\r\n    activeCardIcon: string,\r\n    onChange: (value: string) => void,\r\n    onRemove?: () => void,\r\n    showMixableOnly?: boolean,\r\n    showRemove?: boolean,\r\n} & WithLanguage;\r\nexport const StarTypeSelector = ({\r\n    disabled = false,\r\n    className,\r\n    language,\r\n    activeCardIcon,\r\n    showMixableOnly = false,\r\n    showRemove = false,\r\n    onChange,\r\n    onRemove,\r\n}: StarTypeSelector) => {\r\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\r\n\r\n    return <IconDropdownContainer\r\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\r\n    >\r\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\r\n        <StyledIconDropdown className=\"container-group container-star\">\r\n            {showRemove && <StyledDropdown.Option\r\n                onClick={() => onRemove?.()}\r\n            >\r\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\r\n            </StyledDropdown.Option>}\r\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-attribute\">\r\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-icon\">\r\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n    </IconDropdownContainer>;\r\n};\r\n\r\nconst StarListSelectPanel = styled.div`\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListControlPanel = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(13, 2rem);\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-sm);\r\n    line-height: 0;\r\n    .star-value {\r\n        display: inline-flex;\r\n        height: 2rem;\r\n        width: 2rem;;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: var(--main-level-1);\r\n        border-radius: var(--br-lg);\r\n        margin-top: var(--spacing-xs);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .anticon-close-circle {\r\n            font-size: var(--fs-lg)\r\n        }\r\n    }\r\n    .icon-image {\r\n        max-width: 1.5rem; // Alignment\r\n        max-height: 1.5rem;; // Alignment\r\n    }\r\n    .entry-active {\r\n        .star-value {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .entry-disable {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n        * {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n    :not(.entry-disable) .star-value:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n`;\r\n\r\nexport type StarPickerRef = {\r\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\r\n};\r\nexport type StarPicker = {\r\n\r\n} & WithLanguage;\r\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\r\n    language,\r\n}, ref) => {\r\n    const {\r\n        starList,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            starList,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        starList,\r\n        setCard,\r\n    })));\r\n    const [visible, setVisible] = useState(false);\r\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\r\n        setCard(card => {\r\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\r\n\r\n            return {\r\n                ...card,\r\n                starList: nextStarList,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n    const [{\r\n        slotList,\r\n        use12,\r\n    }, setSlot] = useState(() => {\r\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\r\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\r\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\r\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\r\n        }\r\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\r\n\r\n        return {\r\n            slotList,\r\n            use12,\r\n        };\r\n    });\r\n    const [activeInformation, setActiveInformation] = useState({\r\n        activeList: [] as number[],\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeStatus: status => {\r\n            if (status === 'open') {\r\n                setVisible(true);\r\n            } else if (status === 'close') {\r\n                setVisible(false);\r\n            } else if (status === 'toggle') {\r\n                setVisible(cur => !cur);\r\n            }\r\n            setActiveInformation({ activeList: [] });\r\n        }\r\n    }));\r\n\r\n    const {\r\n        activeList\r\n    } = activeInformation;\r\n    return <Modal\r\n        className=\"global-overlay global-no-close\"\r\n        visible={visible}\r\n        width={506}\r\n        onCancel={() => setVisible(false)}\r\n        cancelText={language['manager.template.button.cancel.label']}\r\n        okButtonProps={{\r\n            style: { display: 'none' },\r\n        }}\r\n    >\r\n        <StarListSelectPanel className=\"star-list-control-panel\">\r\n            <Checkbox\r\n                checked={use12}\r\n                onChange={e => {\r\n                    if (e.target.checked) {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: true };\r\n                        });\r\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\r\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\r\n                    } else {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: false };\r\n                        });\r\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\r\n                    }\r\n                }}\r\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation(cur => {\r\n                    const nextActiveList = slotList\r\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\r\n                        .map(entry => entry.index);\r\n\r\n                    return { activeList: nextActiveList };\r\n                });\r\n            }}>\r\n                {language['input.icon-type.slot.revert.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\r\n            }}>\r\n                {language['input.icon-type.slot.select-all.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: [] });\r\n            }}>\r\n                {language['input.icon-type.slot.deselect-all.label']}\r\n            </Button>\r\n        </StarListSelectPanel>\r\n        <StarListContainer className=\"star-list-container\">\r\n            {slotList.map(({ slot, index, disabled }) => {\r\n                const slotValue = starList[index];\r\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\r\n                const active = activeList.includes(index);\r\n\r\n                return <div key={slot}\r\n                    className={mergeClass(\r\n                        'star-list-entry',\r\n                        active ? 'entry-active' : '',\r\n                        disabled ? 'entry-disable' : '',\r\n                    )}\r\n                >\r\n                    <div className=\"checkbox-container\">\r\n                        <Checkbox\r\n                            disabled={disabled}\r\n                            checked={active}\r\n                            onChange={e => {\r\n                                if (disabled) return;\r\n                                const willChecked = e.target.checked;\r\n                                if (willChecked) {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = [...cur.activeList, index];\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                } else {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"star-value\"\r\n                        onClick={() => {\r\n                            if (disabled) return;\r\n                            setActiveInformation({ activeList: [index] });\r\n                        }}\r\n                    >\r\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </StarListContainer>\r\n        <StarListControlPanel>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\r\n            </Button>\r\n        </StarListControlPanel>\r\n        <StarTypeSelector\r\n            disabled={activeList.length === 0}\r\n            language={language}\r\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\r\n            showMixableOnly={true}\r\n            showRemove={true}\r\n            onRemove={() => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return '';\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n            onChange={value => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return value;\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n        />\r\n    </Modal>;\r\n});","import { Button, Input, Popover } from 'antd';\r\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\r\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\r\n\r\nconst TypeWithIconContainer = styled.div`\r\n    .icon-image {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\r\n    margin-left: var(--spacing-sm);\r\n`;\r\nconst CustomStarContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    .custom-star-preview {\r\n        display: inline-flex;\r\n        line-height: 0;\r\n        align-items: center;\r\n        background-color: var(--main-level-1);\r\n        padding: var(--spacing-xs);\r\n        border-radius: var(--br);\r\n        .star-preview-entry {\r\n            margin-right: var(--spacing-xs);\r\n            .icon-image {\r\n                max-width: 22px; // Alignment\r\n                max-height: 22px; // Alignment\r\n            }\r\n            .anticon-close-circle {\r\n                font-size: var(--fs-xl);\r\n            }\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n    }\r\n    .custom-star-content {\r\n        display: inline-flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        gap: var(--spacing-sm);\r\n        margin-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\ntype CardIconAlignmentPicker = {\r\n    value: string,\r\n    onChange: (value: string) => void,\r\n} & WithLanguage;\r\nconst CardIconAlignmentPicker = ({\r\n    language,\r\n    value,\r\n    onChange,\r\n}: CardIconAlignmentPicker) => {\r\n    return <RadioTrain\r\n        value={value}\r\n        onChange={onChange}\r\n        optionList={[\r\n            {\r\n                value: 'auto',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                label: <CloseCircleOutlined />,\r\n            },\r\n            {\r\n                value: 'left',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                label: <AlignLeftOutlined />,\r\n            },\r\n            {\r\n                value: 'center',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                label: <AlignCenterOutlined />,\r\n            },\r\n            {\r\n                value: 'right',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                label: <AlignRightOutlined />,\r\n            },\r\n        ]}\r\n    />;\r\n};\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starList,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n    const starPickerRef = useRef<StarPickerRef>(null);\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : TotalIconTypeMap[cardIcon];\r\n    const {\r\n        labelKey,\r\n        icon,\r\n        showIcon,\r\n        value: iconType,\r\n    } = iconTypeData ?? TotalIconTypeMap['level'];\r\n    const iconDropdownText = typeof labelKey === 'string'\r\n        ? language[labelKey]\r\n        : labelKey({ language });\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay\"\r\n        content={<StarTypeSelector\r\n            language={language}\r\n            activeCardIcon={cardIcon}\r\n            onChange={value => {\r\n                changeCardIcon(value);\r\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\r\n            }}\r\n        />}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return <>\r\n        <StarPicker ref={starPickerRef} language={language} />\r\n        {cardIcon === 'auto' && autoIconType === 'none'\r\n            ? showCreativeOption\r\n                ? <>\r\n                    <RadioTrain\r\n                        className=\"fill-input-train\"\r\n                        value={cardIcon}\r\n                        onChange={changeCardIcon}\r\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                            return {\r\n                                label: icon ?? <CloseCircleOutlined />,\r\n                                value,\r\n                                tooltipProps: {\r\n                                    title: language[fullLabelKey],\r\n                                },\r\n                            };\r\n                        })}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </RadioTrain>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-attribute\">\r\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.label']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-icon\">\r\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <PopoverButtonInCardIconInput\r\n                        $softMode={reduceColorMotion}\r\n                        className={showCreativeOption ? '' : 'disabled'}\r\n                        onClick={() => {\r\n                            changeCardIcon('custom');\r\n                            starPickerRef.current?.changeStatus('open');\r\n                        }}\r\n                    >\r\n                        {language['input.icon-type.custom.label']}\r\n                    </PopoverButtonInCardIconInput>\r\n                </>\r\n                : null\r\n            : iconType === 'st'\r\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                    {DropdownChildren}\r\n                </RadioTrain>\r\n                : iconType === 'custom'\r\n                    ? <CustomStarContainer className=\"custom-star-picker\">\r\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\r\n                        <div className=\"custom-star-content\">\r\n                            {starList.length > 0\r\n                                ? <div className=\"custom-star-preview\">\r\n                                    {starList.map((entry, index) => {\r\n                                        const iconEntry = TotalIconTypeMap[entry];\r\n\r\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\r\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\r\n                                        </span>;\r\n                                    })}\r\n                                </div>\r\n                                : null}\r\n                            <Button\r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                    changeCardIcon('custom');\r\n                                    starPickerRef.current?.changeStatus('open');\r\n                                }}\r\n                            >{language['generic.edit.label']}</Button>\r\n                        </div>\r\n                    </CustomStarContainer>\r\n                    : <StyledCheckboxStarTrain\r\n                        className=\"checkbox-star-train\"\r\n                        value={star}\r\n                        onChange={changeStar}\r\n                        optionList={StarButtonList}\r\n                        strict={true}\r\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                            <Input\r\n                                className=\"custom-star-input\"\r\n                                value={typeof star === 'number' ? '' : star}\r\n                                allowClear\r\n                                onChange={changeStar}\r\n                                placeholder={language['input.icon-type.custom.placeholder']}\r\n                            />\r\n                            <CardIconAlignmentPicker\r\n                                language={language}\r\n                                value={starAlignment}\r\n                                onChange={changeStarAlignment}\r\n                            />\r\n                        </div>}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </StyledCheckboxStarTrain>}\r\n    </>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5', 'i']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n        case 'i': wrappedText = `<i>${selectedText}</i>`; cursorOffset = 7; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .radio-train.foil-radio {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-px); // Alignment\r\n        .ant-radio-button-wrapper {\r\n            font-size: var(--fs);\r\n        }\r\n        .standalone-addon {\r\n            border: none;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .radio-train-input-group {\r\n            gap: 0;\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .inline-input {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-sm));\r\n        right: calc(-1 * var(--spacing-sm));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    .horizontal-sketch-picker {\r\n        margin-top: var(--spacing);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\r\nimport { copyrightMap, FlagIndexMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\r\n    .auto-link-rating-input {\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n    .auto-link-rating {\r\n        display: inline-block;\r\n        width: 1.5rem;\r\n        height: 1.5rem;\r\n        line-height: 1;\r\n        text-align: center;\r\n        padding: var(--spacing-xs);\r\n        background: var(--main-level-4);\r\n        border-radius: var(--br-lg);\r\n        font-family: 'RoGSanSrfStd-Bd';\r\n        box-shadow: var(--bs-button);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isLink,\r\n        linkRating,\r\n        autoLinkRating,\r\n        showDefAndLink,\r\n        linkRatingDisplayMode,\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\r\n        getUpdater,\r\n    }) => ({\r\n        linkRating,\r\n        autoLinkRating: linkMap.length,\r\n        isLink,\r\n        sticker,\r\n        format,\r\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\r\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const showAtkInput = true;\r\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\r\n    const showDefInput = showLinkInput\r\n        ? showDefAndLink\r\n        : true;\r\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def, linkRating }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            {showAtkInput && <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showDefInput && <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showPadding && <div />}\r\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\r\n                id=\"link\"\r\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\r\n                    <div className=\"input-label\">{language['input.link.label']}</div>\r\n                    <Tooltip title={language['input.link.auto.tooltip']}>\r\n                        <div className=\"auto-link-rating-input\">\r\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\r\n                                ? <Checkbox\r\n                                    onChange={e => {\r\n                                        if (e.target.checked) {\r\n                                            changeLinkRating('');\r\n                                            linkRatingInputRef.current.setValue('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                : <div className=\"auto-link-rating\">\r\n                                    {isLink ? autoLinkRating : '-'}\r\n                                </div>}\r\n                        </div>\r\n                    </Tooltip>\r\n                </StyledLinkRatingInputContainer>}\r\n                defaultValue={`${useCard.getState().card.linkRating}`}\r\n                onChange={changeLinkRating}\r\n                onTakePicker={onTakePicker}\r\n                placeholder={language['input.link.custom.placeholder']}\r\n            />}\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                        <IconButton\r\n                            onClick={() => {}}\r\n                            Icon={UnorderedListOutlined}\r\n                        />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport {\r\n    ImageCropper,\r\n    ImageCropperRef,\r\n    LINK_MARKER_PICKER_WIDTH,\r\n    LinkMarkerPicker,\r\n    RadioTrain,\r\n    StyledDropdown,\r\n    StyledDropdownLabel,\r\n} from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\r\n    position: relative;\r\n    ${({ $hover }) => $hover\r\n        ? `\r\n            .link-marker-picker {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n        `\r\n        : ''}\r\n`;\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    text-align: left;\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group {\r\n        flex: 1;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [art: string, ...OtherFinish],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    /** Be careful, we use added order here, so latest finish target is highest index. */\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\r\n        </>\r\n        : <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\r\n        </>;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[artFinish, ...otherFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                        finishMap[OtherFinishTypeMap['background'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <LinkPickerContainer\r\n            className=\"link-picker-container\"\r\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\r\n            $hover={showExtraDecorativeOption}\r\n        >\r\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </LinkPickerContainer>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst } from 'src/model';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { LayoutPresetOption } from 'src/component';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst FramePresetPanelContainer = styled.div`\r\n    margin-top: var(--spacing-sm);\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n    row-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    color: var(--color);\r\n    .preset-panel-top {\r\n        grid-column: -1 / 1;\r\n    }\r\n    .preset-warning {\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .preview-container {\r\n        line-height: 0;\r\n        padding: var(--spacing-xxs) 0;\r\n        border-radius: var(--br);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .card-layout-container {\r\n            pointer-events: none;\r\n        }\r\n        &:hover {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FramePresetPanel = WithLanguage & {\r\n    isPendulum: boolean,\r\n    onOverwrite?: (key: string) => Promise<void>,\r\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\r\n};\r\nexport const FramePresetPanel = ({\r\n    isPendulum,\r\n    onOverwrite,\r\n    onActive,\r\n    language,\r\n}: FramePresetPanel) => {\r\n    const { db } = useCarderDb();\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n\r\n    if (layoutPresetList.length === 0) return <></>;\r\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\r\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\r\n            <div className=\"preset-warning\">\r\n                {language['preset.warning.label']}\r\n                &nbsp;\r\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\r\n            </div>\r\n        </div>}\r\n        {layoutPresetList.map(({ content, key }) => {\r\n            const {\r\n                dyeList,\r\n                foil,\r\n                frame,\r\n                pendulumFrame,\r\n                leftFrame,\r\n                pendulumRightFrame,\r\n                rightFrame,\r\n                effectStyle,\r\n                pendulumStyle,\r\n            } = content;\r\n            const layoutState = {\r\n                frame,\r\n                topLeftFrame: leftFrame,\r\n                topRightFrame: rightFrame,\r\n                bottomLeftFrame: pendulumFrame,\r\n                bottomRightFrame: pendulumRightFrame,\r\n                effectBackground: effectStyle?.background,\r\n                pendulumEffectBackground: pendulumStyle?.background,\r\n            };\r\n\r\n            return <LayoutPresetOption\r\n                width={Math.round(40 * width / height)}\r\n                height={40}\r\n                isPendulum={isPendulum}\r\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                tabIndex={-1}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                onActive={() => onActive(content)}\r\n                onDelete={async () => {\r\n                    if (db) {\r\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                        await db.delete('presetLayoutStore', key);\r\n                        await tx.done;\r\n                    }\r\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                }}\r\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\r\n            />;\r\n        })}\r\n    </FramePresetPanelContainer>;\r\n};","import { Checkbox } from 'antd';\r\nimport { RadioTrain } from 'src/component';\r\nimport {\r\n    CardFlag,\r\n    FlagInfoList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n} from 'src/model';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst FrameBehaviorSettingPanelContainer = styled.div`\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border-top: var(--bw) solid var(--sub-level-3);\r\n    > * + * {\r\n        margin-top: var(--spacing-sm);\r\n    }\r\n    .link-rating-behavior-panel {\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n            margin-right: var(--spacing-sm);\r\n        }\r\n        label {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n            font-size: var(--fs);\r\n            color: var(--color);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FrameBehaviorSettingPanel = {};\r\nexport const FrameBehaviorSettingPanel = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        flag,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n\r\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\r\n        const nextFlagList: CardFlag = [...currentCard.flag];\r\n        nextFlagList[index] = value;\r\n\r\n        return {\r\n            ...currentCard,\r\n            flag: nextFlagList,\r\n        };\r\n    });\r\n\r\n    return <FrameBehaviorSettingPanelContainer>\r\n        {flag.map((entry, index) => {\r\n            const { labelKey, type } = FlagInfoList[index] ?? {};\r\n\r\n            if (type === 'checkbox') {\r\n                return <div key={labelKey}>\r\n                    <Checkbox\r\n                        checked={entry !== 0}\r\n                        onChange={e => {\r\n                            const value = e.target.checked ? 1 : 0;\r\n\r\n                            updateFlag(value, index);\r\n                        }}\r\n                    >{language[labelKey]}</Checkbox>\r\n                </div>;\r\n            }\r\n            if (type === 'link-rating-behavior') {\r\n                return <RadioTrain key={labelKey}\r\n                    className=\"link-rating-behavior-panel\"\r\n                    onChange={(value) => updateFlag(Number(value), index)}\r\n                    optionList={[\r\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\r\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\r\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\r\n                    ]}\r\n                    value={entry}\r\n                    suffix={<label>\r\n                        {language[labelKey]}\r\n                    </label>}\r\n                />;\r\n            }\r\n            return null;\r\n        })}\r\n    </FrameBehaviorSettingPanelContainer>;\r\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\r\nimport { getFoilButtonList, getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { FramePresetPanel } from './frame-preset-panel';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            display: block;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n    .frame-action {\r\n        .ant-btn {\r\n            width: 100%;\r\n            & + .ant-btn {\r\n                margin-top: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n    .frame-preset-panel {\r\n        grid-column: -1 / 1;\r\n        padding-top: var(--spacing-sm);\r\n        border-top: var(--bw) solid var(--sub-level-3);\r\n    }\r\n`;\r\n\r\ntype FramelayoutSettingPanelRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutSettingPanel = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const { db } = useCarderDb();\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            foil,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            dyeList,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n    const frameLayoutMainId = 'frame-layout-main';\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\r\n    }));\r\n\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\r\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\r\n        const position = DyeIndexMap[name];\r\n\r\n        if (typeof position !== 'number') return currentCard;\r\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\r\n        nextDyeList[position] = color;\r\n\r\n        return {\r\n            ...currentCard,\r\n            dyeList: nextDyeList,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    const dyeColor = DyeIndexMap[activeLayout];\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                id={frameLayoutMainId}\r\n                tabIndex={0}\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onLayoutSelect={key => setActiveLayout(key)}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                vertical={true}\r\n            />\r\n            <div className=\"frame-action\">\r\n                <Button\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        changeBottomLeftFrame('auto');\r\n                        changeBottomRightFrame('auto');\r\n                        changeTopLeftFrame('auto');\r\n                        changeTopRightFrame('auto');\r\n                        changeEffectBackground('auto');\r\n                        changePendulumEffectBackground('auto');\r\n                        changeFoil('normal');\r\n                        changeDyeList(getDefaultDyeList());\r\n                    }}\r\n                >\r\n                    {language['generic.reset.label']}\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    onClick={async () => {\r\n                        const key = uuid();\r\n                        const value: FramePreset = {\r\n                            foil,\r\n                            frame,\r\n                            leftFrame,\r\n                            pendulumFrame,\r\n                            pendulumRightFrame,\r\n                            rightFrame,\r\n                            effectStyle: { background: effectBackground },\r\n                            pendulumStyle: { background: pendulumEffectBackground },\r\n                            dyeList: [...dyeList],\r\n                        };\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => [\r\n                            ...cur,\r\n                            {\r\n                                key,\r\n                                content: value,\r\n                            },\r\n                        ]);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.save.label']}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                {/** Avoid collapsing in case of frame */}\r\n                {activeLayout !== 'foil' && <Checkbox\r\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>}\r\n                {activeLayout === 'foil'\r\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                        <span>{language['input.foil.label']}</span>\r\n                    </RadioTrain>\r\n                    : <RadioTrain\r\n                        className=\"frame-radio\"\r\n                        value={activeFrame}\r\n                        onChange={value => {\r\n                            if (activeLayout === 'frame') onFrameChange(value);\r\n                            else changeLayout(value);\r\n                        }}\r\n                        optionList={frameList}\r\n                    />}\r\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\r\n                    value={dyeList[dyeColor]}\r\n                    onChange={color => {\r\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.dye']}\r\n                </HorizontalSketchPicker>}\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n        <FramePresetPanel\r\n            language={language}\r\n            isPendulum={isPendulum}\r\n            onOverwrite={async key => {\r\n                const value: FramePreset = {\r\n                    foil,\r\n                    frame,\r\n                    leftFrame,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle: { background: effectBackground },\r\n                    pendulumStyle: { background: pendulumEffectBackground },\r\n                    dyeList: [...dyeList],\r\n                };\r\n                if (db) {\r\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                    await tx.done;\r\n                }\r\n                setLayoutPresetList(cur => cur.map(entry => {\r\n                    if (entry.key === key) {\r\n                        return {\r\n                            key,\r\n                            content: value,\r\n                        };\r\n                    } else {\r\n                        return entry;\r\n                    }\r\n                }));\r\n            }}\r\n            onActive={content => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                onFrameChange(frame);\r\n                changeBottomLeftFrame(pendulumFrame);\r\n                changeBottomRightFrame(pendulumRightFrame);\r\n                changeTopLeftFrame(leftFrame);\r\n                changeTopRightFrame(rightFrame);\r\n                changeEffectBackground(effectStyle.background);\r\n                changePendulumEffectBackground(pendulumStyle.background);\r\n                changeFoil(foil);\r\n                changeDyeList(dyeList);\r\n            }}\r\n        />\r\n    </FrameLayoutContainer>;\r\n});\r\n\r\nexport * from './frame-behavior-setting-panel';\r\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\r\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const FlagPresentationList = [\r\n    {\r\n        ...FlagInfoList[0],\r\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.mix-def-link']}:\r\n            <ul>\r\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\r\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\r\n            </ul>\r\n        </>,\r\n    },\r\n    {\r\n        ...FlagInfoList[1],\r\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\r\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\r\n                ? 'input.flag.link-rating-behavior.show'\r\n                : 'input.flag.link-rating-behavior.hide']}\r\n        </>,\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.link-rating-behavior']}:\r\n            <ul>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\r\n                        {LINK_RATING_ALWAYS_AUTO}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\r\n                        {LINK_RATING_ALWAYS_SHOW}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\r\n                        {LINK_RATING_ALWAYS_HIDE}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\r\n                </li>\r\n            </ul>\r\n        </>,\r\n    },\r\n];","import { Checkbox, Input, Popover } from 'antd';\r\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\r\nimport { FlagPresentationList } from '../../common';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .card-layout-preview-container {\r\n        line-height: 0;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        overflow: hidden;\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-left: none;\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n    & Pick<CardTextInput, 'onTakePicker'>\r\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            foil,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n            dyeList,\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\r\n    const flagList = flag\r\n        .map((entry, index) => {\r\n            const target = FlagPresentationList[index];\r\n\r\n            if (entry !== 0 && target) return <li key={target.labelKey}>\r\n                {target.valueDisplay(language, entry)}\r\n            </li>;\r\n            return null;\r\n        })\r\n        .filter(entry => entry != null);\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                        <FrameBehaviorSettingPanel />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <div className=\"card-layout-preview-container\">\r\n                            <CardLayoutPreview\r\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\r\n                                height={advanceLayoutPreviewHeight}\r\n                                isPendulum={isPendulum}\r\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                                tabIndex={-1}\r\n                                dyeList={dyeList}\r\n                                foil={foil}\r\n                                language={language}\r\n                            />\r\n                        </div>\r\n                        {flagList.length > 0\r\n                            ? <InternalPopover\r\n                                content={<StyledPopMarkdown>\r\n                                    {language['input.flag.effective.label']}\r\n                                    <ul>{flagList}</ul>\r\n                                </StyledPopMarkdown>}\r\n                            >\r\n                                <ApartmentOutlined />\r\n                            </InternalPopover>\r\n                            : null}\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\" className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst PostPendulumFirstLineContainer = styled.div`\r\n    &.first-line,\r\n    &.second-line {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        justify-content: right;\r\n    }\r\n    .type-ability-input {\r\n        flex: 1 1 auto;\r\n        width: unset;\r\n        max-width: 40rem;\r\n    }\r\n    .condense-input {\r\n        flex: 1 1 auto;\r\n    }\r\n    .formatting-help-button,\r\n    .input-kanji-helper {\r\n        flex: 0 0 auto;\r\n    }\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .condense-input {\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n`;\r\nconst AdvancedParagraphButton = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    .button-label {\r\n        line-height: 2;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n    }\r\n`;\r\nconst AdvancedParagraphPanel = styled.div`\r\n    .line-input,\r\n    .justify-ratio-input {\r\n        padding: var(--spacing-xs);\r\n    }\r\n    .single-slider {\r\n        .ant-input-number {\r\n            width: 75px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: {\r\n        typeAbility?: string[],\r\n        effectMinLine?: number,\r\n        pendulumEffectMinLine?: number,\r\n        effectJustifyRatio?: number,\r\n        pendulumEffectJustifyRatio?: number,\r\n    }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\r\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\r\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.effectStyle.justifyRatio;\r\n    });\r\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.pendulumStyle.justifyRatio;\r\n    });\r\n\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) setCard(currentCard => {\r\n                const newEffectStyle = {\r\n                    ...currentCard.effectStyle,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                };\r\n                const newPendulumEffectStyle = {\r\n                    ...currentCard.pendulumStyle,\r\n                    minLine: pendulumEffectMinLine,\r\n                    justifyRatio: pendulumEffectJustifyRatio,\r\n                };\r\n\r\n                return {\r\n                    ...currentCard,\r\n                    effectStyle: newEffectStyle,\r\n                    pendulumStyle: newPendulumEffectStyle,\r\n                };\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({\r\n            typeAbility,\r\n            effectMinLine, pendulumEffectMinLine,\r\n            effectJustifyRatio, pendulumEffectJustifyRatio,\r\n        }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\r\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\r\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\r\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon]?.value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\r\n            <CardTextInput ref={typeAbilityInputRef}\r\n                addonBefore={language[typeLabel]}\r\n                id=\"type-ability\"\r\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n                onChange={changeTypeAbility}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            {isOCG && <Tooltip\r\n                overlay={language['input.furigana-helper.tooltip']}\r\n                overlayClassName=\"long-tooltip-overlay\"\r\n            >\r\n                <Checkbox\r\n                    className=\"input-kanji-helper\"\r\n                    onChange={toggleFuriganaHelper}\r\n                    checked={furiganaHelper}\r\n                >\r\n                    {language['input.furigana-helper.label']}\r\n                </Checkbox>\r\n            </Tooltip>}\r\n            <FormattingHelpDrawer />\r\n        </PostPendulumFirstLineContainer>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\r\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                optionList={CondenseThresholdButtonList}\r\n            >\r\n                <span>\r\n                    {language['input.condense.label']} <Explanation\r\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <Popover\r\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\r\n                        <h2>\r\n                            {language['input.text-style.min-line.label']}\r\n                        </h2>\r\n                        <div className=\"line-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-line\"\r\n                                    size=\"small\"\r\n                                    value={effectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-line\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                        <h2>\r\n                            {language['input.text-style.justify-ratio.label']}\r\n                        </h2>\r\n                        <div className=\"justify-ratio-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={effectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                    </AdvancedParagraphPanel>\r\n                </div>}\r\n            >\r\n                <AdvancedParagraphButton>\r\n                    <div className=\"button-label\">\r\n                        {language['input.text-style.paragraph-style.label']}\r\n                    </div>\r\n                </AdvancedParagraphButton>\r\n            </Popover>}\r\n        </PostPendulumFirstLineContainer>\r\n    </>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { InlineColorPicker, RadioTrain } from 'src/component';\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    IconButton,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { ClearOutlined } from '@ant-design/icons';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    AttributeInputGroup,\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledInputLabelWithButton,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isLink,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isLink,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n                effectStyle, pendulumStyle,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({\r\n                typeAbility,\r\n                effectMinLine: effectStyle.minLine,\r\n                pendulumEffectMinLine: pendulumStyle.minLine,\r\n                effectJustifyRatio: effectStyle.justifyRatio,\r\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\r\n            });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\r\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\r\n                    <IconButton\r\n                        onClick={() => onFinishChange([])}\r\n                        Icon={ClearOutlined}\r\n                        tooltipProps={{\r\n                            title: language['input.other-finish.reset.tooltip'],\r\n                        }}\r\n                    />\r\n                </StyledInputLabelWithButton>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <AttributeInputGroup language={language} />\r\n\r\n                <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    softMode={reduceMotionColor}\r\n                    onTakePicker={setPickerTarget}\r\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\r\n                />\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .select-box {\r\n            display: inline-block;\r\n            margin-right: var(--spacing-xs);\r\n        }\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            background-size: 200% 200%;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #2a2a2a;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    selected,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    selected,\r\n    language,\r\n    onDuplicate,\r\n    onActive,\r\n    onDelete,\r\n    onSelect,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onActive(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\r\n                    <Checkbox\r\n                        checked={selected}\r\n                        onChange={e => {\r\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\r\n                        }}\r\n                    />\r\n                </div>\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\r\n                        ? 'icon-list'\r\n                        : normalizedCardIcon).toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(normalizedCardIcon !== NO_ICON\r\n                    && normalizedCardIconType !== 'st'\r\n                    && normalizedCardIconType !== 'none'\r\n                    && normalizedCardIconType !== 'custom'\r\n                ) && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined\r\n                        className=\"action-button action-download\"\r\n                        onClick={() => {\r\n                            const { id, ...exportableCard } = card;\r\n                            copy(JSON.stringify(compressCardData(exportableCard)));\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\r\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\r\n            }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { Button, Modal } from 'antd';\r\nimport JSZip from 'jszip';\r\nimport { useEffect, useRef } from 'react';\r\nimport { InternalCard } from 'src/model';\r\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\r\nimport { downloadBlob } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst ExportingListContainer = styled.div`\r\n    .exporting-item {\r\n        display: grid;\r\n        grid-template-columns: 1.5rem 1fr;\r\n    }\r\n    .anticon-hourglass {\r\n        color: var(--main-info);\r\n    }\r\n    .anticon-loading {\r\n        color: var(--main-active);\r\n    }\r\n    .anticon-check-circle {\r\n        color: var(--main-online);\r\n    }\r\n`;\r\n\r\nexport type BatchDownloadButton = {\r\n    onActive: (card: InternalCard) => void,\r\n} & WithLanguage;\r\nexport const BatchDownloadButton = ({\r\n    language,\r\n    onActive,\r\n}: BatchDownloadButton) => {\r\n    const {\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    } = useCardList(useShallow(({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    }) => ({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    })));\r\n    const {\r\n        batchQueue,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n        isReady,\r\n        clearQueue,\r\n        stopBatchDownload,\r\n        startBatchDownload,\r\n    } = useBatchDownload();\r\n    /**\r\n     * The batch download process is as follow:\r\n     * * Start the process, block the screen with a popup and mark the process as started.\r\n     * * During the process, the top card of the exporting list is picked, and force select.\r\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\r\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\r\n     * * Clean up and end the process.\r\n     */\r\n    const nextSelectedId = batchQueue[0];\r\n    const lastSelectedId = useRef('');\r\n    useEffect(() => {\r\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\r\n            lastSelectedId.current = nextSelectedId;\r\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\r\n\r\n            if (targetCard) {\r\n                onActive(targetCard);\r\n            }\r\n        }\r\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isReady) {\r\n            (async () => {\r\n                const { batchName, batchDataMap } = useBatchDownload.getState();\r\n                const zipObject = new JSZip();\r\n                const batchDataList = Object.values(batchDataMap);\r\n\r\n                if (batchDataList.length > 0) {\r\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    if (relevant) {\r\n                        downloadBlob(\r\n                            `${batchName}.zip`,\r\n                            zipBlob,\r\n                            'application/zip',\r\n                        );\r\n                        stopBatchDownload();\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [isReady, stopBatchDownload]);\r\n\r\n    const exportAllCard = Object.keys(selectedMap).length === 0;\r\n    return <>\r\n        <Modal\r\n            visible={isBatchDownloading}\r\n            onCancel={() => stopBatchDownload()}\r\n            onOk={() => clearQueue()}\r\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\r\n            okText={language['manager.batch.batch-download.premature-stop.label']}\r\n            okButtonProps={{\r\n                type: 'default',\r\n            }}\r\n        >\r\n            <ExportingListContainer className=\"exporting-list\">\r\n                {Object\r\n                    .values(cardDisplayList)\r\n                    .map(({ id, name }) => {\r\n                        if (!exportAllCard && !selectedMap[id]) return null;\r\n                        return <div key={id} className=\"exporting-item\">\r\n                            <div className=\"export-status\">\r\n                                {activeId === id\r\n                                    ? <LoadingOutlined />\r\n                                    : batchDataMap[id]\r\n                                        ? <CheckCircleOutlined />\r\n                                        : <HourglassOutlined />}\r\n                            </div>\r\n                            <div className=\"export-name\">{name}</div>\r\n                        </div>;\r\n                    })}\r\n            </ExportingListContainer>\r\n        </Modal>\r\n        <Button\r\n            className=\"batch-download-button\"\r\n            onClick={() => startBatchDownload(\r\n                listName,\r\n                exportAllCard\r\n                    ? cardDisplayList.map(card => card.id)\r\n                    : Object.keys(selectedMap),\r\n            )}\r\n        >\r\n            {exportAllCard\r\n                ? language['manager.batch.batch-download.label']\r\n                : language['manager.batch.batch-download.partial-download.label']}\r\n        </Button>\r\n    </>;\r\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\nimport { BatchDownloadButton } from './batch-download-button';\r\nimport { CaretDownFilled } from '@ant-design/icons';\r\n\r\nconst StyledMenuItem = styled(Menu.Item)`\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .batch-download-button {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .select-panel {\r\n        display: grid;\r\n        grid-template-columns: max-content max-content 1fr;\r\n        padding: var(--spacing-xs);\r\n        gap: var(--spacing-xs);\r\n        text-align: right;\r\n        .ant-checkbox-wrapper span {\r\n            padding-right: 0;\r\n        }\r\n        .scheme-button {\r\n            display: inline-block;\r\n        }\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    selectedMap: Record<string, string>,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n} & Pick<CardThumb, 'onSelect'>;\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        selectedMap,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDuplicate,\r\n        onActive,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        selected={!!selectedMap[list[index].id]}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onActive={onActive}\r\n        onDelete={onDelete}\r\n        onSelect={onSelect}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onActive: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onActive,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    })));\r\n    const {\r\n        exportScheme,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { exportScheme },\r\n        updateSetting,\r\n    }) => ({\r\n        exportScheme,\r\n        updateSetting,\r\n    })));\r\n\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\r\n        selectCard(card.id, type);\r\n    }, [selectCard]);\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onActive(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onActive, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap([], 'replace')}\r\n            >\r\n                {language['manager.batch.batch-download.clear.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\r\n            >\r\n                {language['manager.batch.batch-download.all.label']}\r\n            </Button>\r\n            <div>\r\n                <Dropdown\r\n                    overlay={<Menu>\r\n                        {[\r\n                            {\r\n                                value: 'with-name',\r\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\r\n                            },\r\n                            {\r\n                                value: 'with-id',\r\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\r\n                            },\r\n                        ].map(({ value, label }) => {\r\n                            return <StyledMenuItem\r\n                                key={value}\r\n                                onClick={() => updateSetting({ exportScheme: value })}\r\n                                className={value === exportScheme ? 'menu-active' : ''}\r\n                            >\r\n                                {label}\r\n                            </StyledMenuItem>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div\r\n                        className=\"scheme-button\"\r\n                    >\r\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>}\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            selectedMap,\r\n                            onDuplicate: duplicateCard,\r\n                            onActive,\r\n                            onDelete: deleteAndReselect,\r\n                            onSelect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\r\n            language={language}\r\n            onActive={onActive}\r\n        />}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    RegionMap,\r\n    CondenseTolerantMap,\r\n    DyeIndexMap,\r\n    ExtraAttributeList,\r\n    FinishMap,\r\n    frameList,\r\n    FramePositionMap,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport { CopiableCode, StyledMono } from 'src/component';\r\nimport { FlagPresentationList } from '../common';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                                </tr>\r\n                                {[\r\n                                    {\r\n                                        field: 'Format',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'tcg',\r\n                                                'ocg',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Frame',\r\n                                        altField: 'Bottom Frame',\r\n                                        value: <div>\r\n                                            {frameList\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Attribute',\r\n                                        value: <div>\r\n                                            {[...AttributeList, ...ExtraAttributeList]\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Spell/Trap Icon',\r\n                                        value: <div>\r\n                                            {IconList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Sticker',\r\n                                        value: <div>\r\n                                            {StickerList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Foil',\r\n                                        value: <div>\r\n                                            {getFoilList()\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Finish',\r\n                                        value: <div>\r\n                                            {Object.values(FinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                            <div>{language['manager.template.description.joinable']}</div>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Art Finish',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'number',\r\n                                                'text',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Alignment',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'left',\r\n                                                'center',\r\n                                                'right',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Icon Type',\r\n                                        value: <div>\r\n                                            {IconTypeList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Background Type',\r\n                                        value: <div>\r\n                                            {getBackgroundTypeList()\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Condense Rate',\r\n                                        value: <div>\r\n                                            {Object.keys(CondenseTolerantMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'predefined',\r\n                                                'custom',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Font',\r\n                                        value: <div>\r\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                        </div>,\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Preset',\r\n                                        value: <div>\r\n                                            {Object.keys(PresetNameStyleMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Pattern',\r\n                                        value: <div>\r\n                                            {PatternList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Pendulum Size',\r\n                                        value: <div>\r\n                                            {PendulumSizeList\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Attribute',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Background',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Icon',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Sticker',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Region',\r\n                                        value: <div>\r\n                                            {Object.values(RegionMap)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.star-list']}</div>\r\n                                            {Object\r\n                                                .values(TotalIconTypeMap)\r\n                                                .filter(({ isMixable }) => isMixable)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Dye List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.dye-list']}</div>\r\n                                            <ul>\r\n                                                {Object\r\n                                                    .entries(DyeIndexMap)\r\n                                                    .sort((l, r) => l[1] - r[1])\r\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\r\n                                            </ul>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Flag',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.flag']}</div>\r\n                                            {FlagPresentationList\r\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\r\n                                        </div>\r\n                                    },\r\n                                ].map(({\r\n                                    field,\r\n                                    altField,\r\n                                    value,\r\n                                }) => {\r\n                                    return <tr key={field}>\r\n                                        <td>\r\n                                            <StyledMono>{field}</StyledMono>\r\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                        </td>\r\n                                        <td>{value}</td>\r\n                                    </tr>;\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\nimport { ManagerDrawer } from 'src/component';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            className=\"card-manager-panel\"\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onActive={activeCard}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: 0 var(--spacing);\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n    ImagePreset,\r\n    NameStyle,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n    isTouchDevice,\r\n    mergeClass,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    FramePreset,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCarderDb,\r\n    useCardList,\r\n    useGlobal,\r\n    useGlobalMemory,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\nimport Moveable from 'react-moveable';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+y', 'command+y'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } = useSetting(useShallow(({ setting: {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const isMobile = isMobileDevice();\r\n    const windowSlidable = !isMobile && !isTouchDevice();\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const { db, dbReady } = useCarderDb();\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\r\n    const containerWindowRef = useRef<HTMLDivElement>(null);\r\n    const moveableRef = useRef<Moveable>(null);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\r\n        const stopDrag = () => {\r\n            setActiveDropzone(0);\r\n        };\r\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        const checkDragHeartbeat: Document['ondragover'] = () => {\r\n            setActiveDropzone(1);\r\n            window.clearTimeout(timeoutHandle);\r\n            timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        };\r\n\r\n        document.addEventListener('dragover', checkDragHeartbeat);\r\n\r\n        return () => {\r\n            document.removeEventListener('dragover', checkDragHeartbeat);\r\n        };\r\n    }, [setActiveDropzone]);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, [managerVisible]);\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        if (slidingType === 'auto' && slidingWindowRef.current) {\r\n            slidingWindowRef.current.style.transform = '';\r\n        }\r\n    }, [slidingType]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (db && isLanguageLoading === false && language) {\r\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\r\n                    const layoutPresetList: {\r\n                        key: string,\r\n                        content: FramePreset,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of layoutPresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        layoutPresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as FramePreset,\r\n                        });\r\n                    }\r\n                    await layoutPresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\r\n\r\n                    const imagePresetTx = db.transaction('presetImageStore', 'readonly');\r\n                    const imagePresetList: {\r\n                        key: string,\r\n                        content: ImagePreset,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of imagePresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        imagePresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as ImagePreset,\r\n                        });\r\n                    }\r\n                    await imagePresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ imagePresetList });\r\n\r\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\r\n                    const nameStylePresetList: {\r\n                        key: string,\r\n                        content: Partial<NameStyle>,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of nameStylePresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        nameStylePresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as Partial<NameStyle>,\r\n                        });\r\n                    }\r\n                    await nameStylePresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\r\n                }\r\n            } catch (e) {\r\n                console.error('Error reading database', e);\r\n                notification.error({\r\n                    message: language['error.database-initialize.message'],\r\n                    description: language['error.database-initialize.description'],\r\n                });\r\n            }\r\n        })();\r\n    }, [db, isLanguageLoading, language]);\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'SVN-Times New Roman Italic',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                onScroll={e => {\r\n                    const currentScrollY = e.currentTarget.scrollTop;\r\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\r\n                        const viewportWidth = document.body.clientWidth;\r\n                        // const viewportHeight = window.innerHeight;\r\n                        const padding = viewportWidth < 1600 ? 0 : 10;\r\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\r\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\r\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\r\n                        if (viewportHeight > slidingWindowHeight + padding) {\r\n                            const threshold = Math.max(\r\n                                0,\r\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\r\n                            );\r\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\r\n                                0,\r\n                                Math.min(threshold, currentScrollY) - padding,\r\n                            )}px)`;\r\n                        } else {\r\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\r\n                            slidingWindowRef.current.style.transform = '';\r\n                        }\r\n                    }\r\n                }}\r\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\r\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div ref={containerWindowRef} className={mergeClass(\r\n                        'card-preview-panel',\r\n                        isTainted ? 'export-tainted' : 'export-normal',\r\n                        `sliding-type_${slidingType}`,\r\n                    )}>\r\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\r\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                                <div className=\"imexport\">\r\n                                    <ExportPanel ref={exportPanelRef}\r\n                                        tainted={isTainted}\r\n                                        artworkCanvas={artworkCanvasRef.current}\r\n                                        onRequireExportData={exportData}\r\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                        onClose={forceRefocus}\r\n                                    />\r\n                                    <div />\r\n                                    <ImportPanel ref={importPanelRef}\r\n                                        onImport={treatNewCard}\r\n                                        onClose={forceRefocus}\r\n                                        allowHotkey={allowHotkey}\r\n                                        language={language}\r\n                                    />\r\n                                </div>\r\n                                <BatchConverter language={language} />\r\n                                <DownloadButton ref={downloadButtonRef}\r\n                                    canvasMap={canvasMap}\r\n                                    imageChangeCount={imageChangeCount}\r\n                                    isTainted={isTainted}\r\n                                    isInitializing={isInitializing}\r\n                                    globalScale={globalScale}\r\n                                    onDownloadError={alertDownloadError}\r\n                                />\r\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                    <div className=\"alert-label\">\r\n                                        {language['alert.download.tainted-first-line']}<br />\r\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                    </div>\r\n                                    <Dropdown\r\n                                        className=\"save-button-dropdown\"\r\n                                        placement=\"bottomRight\"\r\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                    >\r\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                            <GatewayOutlined className=\"resolution-icon\" />\r\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                        </ResolutionButton>\r\n                                    </Dropdown>\r\n                                </div>}\r\n                            </StyledDataButtonPanelContainer>\r\n                            <CardPreviewContainer className=\"card-preview-container\">\r\n                                <Tooltip title={language['generic.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl+Y / ⌘+Y</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                                 */}\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                    id=\"preview-canvas\"\r\n                                    ref={previewCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                    <canvas\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                        id=\"export-canvas\"\r\n                                        ref={exportCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                    </div>\r\n                                    <canvas id=\"frameCanvas\"\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                        ref={frameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"nameCanvas\"\r\n                                        ref={nameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={148 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"cardIconCanvas\"\r\n                                        ref={cardIconCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={222 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumScaleCanvas\"\r\n                                        ref={pendulumScaleCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumEffectCanvas\"\r\n                                        ref={pendulumEffectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"typeCanvas\"\r\n                                        ref={typeCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"effectCanvas\"\r\n                                        ref={effectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"statCanvas\"\r\n                                        ref={statCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"setIdCanvas\"\r\n                                        ref={setIdCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"passwordCanvas\"\r\n                                        ref={passwordCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"creatorCanvas\"\r\n                                        ref={creatorCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"stickerCanvas\"\r\n                                        ref={stickerCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"finishCanvas\"\r\n                                        ref={finishCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={artworkCanvasRef}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={backgroundCanvasRef}\r\n                                    />\r\n                                </CardCanvasGroupContainer>\r\n                            </CardPreviewContainer>\r\n                        </div>\r\n                        {windowSlidable && <Moveable\r\n                            ref={moveableRef}\r\n                            target={slidingWindowRef}\r\n                            className=\"sliding-movable-window\"\r\n                            draggable={true}\r\n                            throttleDrag={1}\r\n                            edgeDraggable={false}\r\n                            startDragRotate={0}\r\n                            throttleDragRotate={0}\r\n                            throttleScale={0}\r\n                            snappable={true}\r\n                            pinchable={true}\r\n                            snapContainer={'.card-preview-panel'}\r\n                            bounds={{\r\n                                left: 0,\r\n                                top: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                position: 'css',\r\n                            }}\r\n                            onDrag={e => {\r\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\r\n                            }}\r\n                        />}\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}