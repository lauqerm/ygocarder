{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/compatible-card.tsx","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/navigation.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/setting/index.tsx","component/app-header/version-log.tsx","component/atom.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","util/imgur.ts","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","util/random.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","yOffset","yRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","E","Ĕ","ĕ","Ḝ","ḝ","Ȇ","ȇ","Ê","ê","Ê̄","ê̄","Ê̌","ê̌","Ề","ề","Ế","ế","Ể","ể","Ễ","ễ","Ệ","ệ","Ẻ","ẻ","Ḙ","ḙ","Ě","ě","Ɇ","ɇ","Ė","ė","Ė́","ė́","Ė̃","ė̃","Ẹ","ẹ","Ë","ë","È","è","È̩","è̩","Ȅ","ȅ","É","é","É̩","Ē","ē","Ḕ","ḕ","Ḗ","ḗ","Ẽ","ẽ","Ḛ","ḛ","Ę","ę","Ę́","ę́","Ę̃","ę̃","Ȩ","ȩ","E̩","e̩","ᶒ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_SOURCE","map","entry","_entry$regexForm","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","settingValue","ResolutionList","ExportFormatList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","arguments","undefined","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","blob","link","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_ref","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","slice","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","min","max","median","lastEffective","iterateCount","magnitude","reset","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","equals","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","getContext","clonedCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","process","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","_partInstructionMap$n","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_OFFSET_X","DEFAULT_SHADOW_OFFSET_Y","DEFAULT_SHADOW_BLUR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawAsset","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawFrom","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","isNormal","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","_fullLineList$length","content","textStyle","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","isMonster","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","constructor","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","render","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","SettingButton","trigger","Checkbox","checked","placement","SettingFilled","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","Affiliation","rel","GithubFilled","StyledVersionLog","StyledAppHeaderButtonContainer","AppHeader","useShallow","Radio","Group","Button","BugOutlined","TagsFilled","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","MenuOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","imgurResponse","myHeaders","Headers","append","formdata","FormData","imgLink","method","redirect","uploadToImgur","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","customStyleSignal","sendCustomStyleSignal","useRefresh","setCnt","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","_shadowPickeRef$curre","_outlinePickeRef$curr","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","formatSwappedCard","_postPendulumInputGro3","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","utils","sheet_to_json","Sheets","SheetNames","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,CAACC,EAAKC,KAC7DD,EAAIC,EAAIP,WAAaO,EAC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C,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAIhBQ,QAA8DV,EAASI,OAE7E,IAAKM,EAAqB,MAAO,IAAIL,MAAM,qBAE3C/B,EAAI,CACAoC,sBACAM,iBAAiB,GAEzB,CAAE,MAAOlZ,GACLuD,QAAQC,MAAM,6EAA8ExD,GAC5FwW,EAAI,CACAoC,oBAAqB,CACjBH,IAAK,CACDh1B,KAAM,UACNg0B,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBqB,iBAAiB,GAEzB,GAgEIE,EAAsB,EAE1BC,oBAAqBtB,gBAEXD,EAAa,aACbY,EAAehC,GACrBF,EAAI,CACAyC,cAAc,GAChB,EAENnB,eACAY,iBACH,IAGQY,GAAcA,IACNhD,IAAQxL,IAAA,IAAC,SAAEgO,GAAUhO,EAAA,OAAKgO,CAAQ,IAI1CS,GAAcA,IAAMjD,GAAQkD,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc3U,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzG4U,GAAc,IAAIC,IAAIL,GAAargB,IAAIsgB,KAEvCK,GAAsBP,GAAqBnuB,QAAO,CAACC,EAAKquB,EAAO7J,KACjE,MAAMkK,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB1uB,EAAIquB,GAAqB7J,GAE7DxkB,CAAG,GACX,CAAC,GAEE4uB,GAAoBC,GACV,MAARA,GACS,KAATA,EADqB,GAElB,IAAIA,EAAKzZ,QAAQ,KAAM,SAyN5B0Z,GAAmBA,CAACl4B,EAAYm4B,KAClC,GAAqB,mBAAVn4B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAMo4B,EAAkBp4B,EAAM03B,cAC9B,MAA2B,SAApBU,GAEmB,UAApBA,GAEID,CACd,CACA,OAAOA,CAAQ,EAEbE,GAAeA,CAACr4B,EAAYm4B,IACT,kBAAVn4B,EAA2Bs4B,SAASt4B,GAASA,EAAQm4B,EAC3C,kBAAVn4B,GAA2Bs4B,SAASvI,SAAS/vB,IAAU+vB,SAAS/vB,GACpEm4B,EAELI,GAAiBA,CAACv4B,EAAYm4B,IACX,kBAAVn4B,EAA2Bs4B,SAASt4B,GAASA,EAAQm4B,EAC3C,kBAAVn4B,GAA2Bs4B,SAAShM,WAAWtsB,IAAUssB,WAAWtsB,GACxEm4B,EAELK,GAAiBA,CAACx4B,EAAYm4B,IACX,kBAAVn4B,EACHA,EAAMy4B,WAAW,KAAaz4B,EAC3B,IAAIA,IAERm4B,EAEEO,GAAiBT,IAC1B,IACI,MAAMU,EAAqCV,EAAK,GAhDtC9uB,QAAO,CAACC,EAAKquB,EAAO7J,KAC9B,MAAMkK,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuB1uB,EAAIquB,GAAqB7J,GAE7DxkB,CAAG,GACX,CAAC,GA6CA,OAAO6uB,EACF/gB,KAAI,CAAC0hB,EAAKhL,KAAW,IAADjF,EAAAkQ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEjB,GAAc,IAAVvN,EAAa,OAAO,KAExB,GAAqB,KAAjBgL,EAAIpjB,KAAK,IAAY,OAAO,KAChC,MAAM4lB,EAAYze,KACZ0e,EAlDIC,EAAC1C,EAA6BD,IAC5ClB,IAAqB,IAAD8D,EAAAC,EACxB,MAAMC,EAAmC,QAAxBF,EAAG5C,EAAelB,UAAM,IAAA8D,KAAK,EACxCv7B,GAAyB,QAAjBw7B,EAAC5C,EAAI6C,UAAY,IAAAD,IAAI,IAAIE,OAEvC,MAAiB,KAAV17B,OACDse,EACAte,CAAK,EA2CYs7B,CAAkB1C,EAAKD,GAEhCv4B,GAAqD,QAA7CuoB,EAAgB,QAAhBkQ,EAACwC,EAAO,gBAAQ,IAAAxC,IAAIwC,EAAO,0BAAkB,IAAA1S,IAAIyS,EAAUh7B,OAAOs3B,cAE1EiE,EAAgD,QAAzC7C,EAAiB,QAAjBC,EAAGsC,EAAO,eAAO,IAAAtC,IAAIsC,EAAO,qBAAa,IAAAvC,IAAI,GACpDpf,EAA+B,SAAxB2hB,EAAO,aACdM,EACA5L,SAAS4L,IAAY,IAAM5L,SAAS4L,IAAY,GAA6B,MAAxBN,EAAO,aACxDtL,SAAS4L,GACTA,EAEJC,GAA6C,QAAnC5C,EAAe,QAAfC,EAACoC,EAAO,eAAO,IAAApC,IAAIoC,EAAO,iBAAS,IAAArC,IAAI,UAAUtB,cAC3Dze,GAAOrP,EAAYgyB,GAAWA,EAAU,SAExCC,GAAkC,QAAtB3C,EAAGmC,EAAO,oBAAY,IAAAnC,OAAA,EAAnBA,EAAqB4C,cACpCviB,GAAYsiB,GACK,SAAjBA,GACI14B,EACA04B,GACM,UAAVz7B,EACI,QACU,SAAVA,EACI,OACAg7B,EAAU7hB,UAElBJ,GAAiC,QAAxBggB,EAAIkC,EAAO,qBAAa,IAAAlC,IAAKkC,EAAO,cAAgB,OAAOA,EAAO,gBAAkB,GAC7F9f,GAAmB,QAAhB6d,EAAGiC,EAAO,cAAM,IAAAjC,IAAI,GACvB3f,GAAoC,QAA5B4f,EAAIgC,EAAO,yBAAiB,IAAAhC,IAAI+B,EAAU3hB,SAClDuC,GAA6B,QAAtBsd,EAAG+B,EAAO,oBAAY,IAAA/B,IAAI,GACjC9d,GAAmB,QAAhB+d,EAAG8B,EAAO,cAAM,IAAA9B,IAAI,GACvBle,GAAyB,QAAnBme,EAAG6B,EAAO,iBAAS,IAAA7B,IAAI,GAC7BtgB,GAA0E,QAApEugB,EAAwB,QAAxBC,EAAG2B,EAAO,sBAAc,IAAA3B,OAAA,EAArBA,EAAuBzb,MAAM,OAAOwO,QAAOtV,GAAmB,KAAVA,WAAa,IAAAsiB,IAAI,GAC9E9gB,IAA0B,QAAjBghB,EAAC0B,EAAO,iBAAS,IAAA1B,IAAIyB,EAAUziB,QAAQ+e,cAChDzb,GAAiBic,GAAiBmD,EAAO,uBAAwBD,EAAUnf,gBAC3E3a,GAAqB,QAAjBs4B,EAAGyB,EAAO,eAAO,IAAAzB,IAAI,GACzBne,GAA6B,QAArBoe,EAAGwB,EAAO,mBAAW,IAAAxB,IAAI,GACjCve,GAA4C,QAAvCwe,EAAmB,QAAnBC,EAAGsB,EAAO,iBAAS,IAAAtB,IAAIsB,EAAO,iBAAS,IAAAvB,IAAI,GAChDngB,IAAyC,QAAzBqgB,EAACqB,EAAO,yBAAiB,IAAArB,IAAIoB,EAAUzhB,eAAe+d,cACtEhc,IAA4B,QAAlBue,EAACoB,EAAO,kBAAU,IAAApB,IAAImB,EAAU1f,SAASgc,cACnDle,IAAwE,QAA5D0gB,EAA0B,QAA1BC,EAACkB,EAAO,0BAAkB,IAAAlB,IAAIkB,EAAO,+BAAuB,IAAAnB,IAAIkB,EAAU5hB,WAAWsiB,cAEjG3mB,GAA2B,QAApBilB,EAAGiB,EAAO,kBAAU,IAAAjB,OAAA,EAAjBA,EAAmB1C,cAC7B/b,GAAiBuc,GACnBmD,EAAO,oBACPlmB,GAAsB,gBAAZA,GAA4BimB,EAAUzf,gBAE9CG,GAAqBoc,GACvBmD,EAAO,yBACPlmB,GAAsB,kBAAZA,GAA8BimB,EAAUtf,oBAEhDD,GAAmBqc,GACrBmD,EAAO,sBACPlmB,GAAsB,oBAAZA,GAAgCimB,EAAUvf,kBAElDD,GAAcsc,GAChBmD,EAAO,iBACPlmB,GAAsB,eAAZA,GAA2BimB,EAAUxf,aAE7CG,GAAemc,GAAiBmD,EAAO,kBAAmBD,EAAUrf,cAEpEhZ,GAAam1B,GAAiBmD,EAAO,eAAgBD,EAAUr4B,YAC/D6X,IAAuC,QAAvByf,EAACgB,EAAO,uBAAe,IAAAhB,IAAIe,EAAUxgB,eAAe8c,cACpE7c,GAA0C,QAA5Byf,EAAGe,EAAO,0BAAkB,IAAAf,IAAI,GAC9Cxf,GAA+C,QAA/Byf,EAAGc,EAAO,6BAAqB,IAAAd,IAAIa,EAAUtgB,iBAC7DC,GAAiD,QAAhCyf,EAAGa,EAAO,8BAAsB,IAAAb,IAAIY,EAAUrgB,kBAE/DghB,GAAiBV,EAAO,gBACxBrgB,GAAc+gB,GACdA,GAAe9d,MAAM,KACrB,CAACod,EAAO,UAAWA,EAAO,UAAWA,EAAO,UAAWA,EAAO,WAC3D5O,QAAetV,GAA0B,kBAAVA,IAC/BsV,QAAOtV,GAAmB,KAAVA,IAEnB+D,IAA2C,QAAxBuf,EAACY,EAAO,wBAAgB,IAAAZ,IAAIW,EAAUngB,YAAYC,kBAAkBwc,cACvFsE,GAAe3D,GAAagD,EAAO,yBAA0BD,EAAUngB,YAAYE,QACnF8gB,GAAuB5D,GAAagD,EAAO,kCAAmCD,EAAUhgB,cAAcD,QAEtG+gB,GAAeh7B,IACf8B,GAAuB,CACzBxB,UAAW02B,GAAiBmD,EAAO,wBAAyBa,GAAa16B,WACzED,SAAuC,QAA/Bm5B,EAAEW,EAAO,8BAAsB,IAAAX,IAAIwB,GAAa36B,SACxDJ,KAAMk3B,GAAagD,EAAO,kBAAmBa,GAAa/6B,MAC1DO,UAAWw2B,GAAiBmD,EAAO,uBAAwBa,GAAax6B,WACxEJ,KAAM+2B,GAAagD,EAAO,kBAAmBa,GAAa56B,MAC1DG,WAAYy2B,GAAiBmD,EAAO,yBAA0Ba,GAAaz6B,YAC3EL,SAAUi3B,GAAagD,EAAO,sBAAuBa,GAAa96B,UAClEC,KAAMg3B,GAAagD,EAAO,kBAAmBa,GAAa76B,OAGxD86B,GjB7fQ,CAC1BniB,EAAG,EACHC,EAAG,EACH3Z,MAAO,IACPC,OAAQ,KACR2Z,KAAM,IACNC,OAAQ,GiBwfUxQ,GAAwB,QAArBgxB,EAAGU,EAAO,mBAAW,IAAAV,IAAIS,EAAUzxB,IACtCkQ,GAASqe,GAAiBmD,EAAO,qBAAsBD,EAAUvhB,QACjEE,GAAgB,CAClBI,OAAQrX,EAAuBC,GAAYC,IAASd,MACpD3B,OAAQg4B,GAAe8C,EAAO,yBAA0Bc,GAAa57B,QACrED,MAAOi4B,GAAe8C,EAAO,wBAAyBc,GAAa77B,OACnE0Z,EAAGue,GAAe8C,EAAO,oBAAqBc,GAAaniB,GAC3DC,EAAGse,GAAe8C,EAAO,oBAAqBc,GAAaliB,GAC3DC,KAAM,KAGJkiB,GjBzgBQ,CAC1BpiB,EAAG,EACHC,EAAG,EACH3Z,MAAO,IACPC,OAAQ,KACR2Z,KAAM,IACNC,OAAQ,GiBogBUC,GAAgB8d,GAAiBmD,EAAO,kBAAmBD,EAAUhhB,eACrEC,GAAsC,QAA5BugB,EAAGS,EAAO,0BAAkB,IAAAT,IAAIQ,EAAU/gB,WACpDpX,IAA2C,QAA1B43B,EAACQ,EAAO,0BAAkB,IAAAR,IAAIO,EAAUn4B,gBAAgBy0B,cACzEnd,GAAgB2d,GAAiBmD,EAAO,4BAA6BD,EAAU7gB,eAC/EE,GAAuB,CACzBN,OAAQrX,EAAuBC,GAAYC,GAASC,IAAgBf,MACpE3B,OAAQg4B,GAAe8C,EAAO,gCAAiCe,GAAoB77B,QACnFD,MAAOi4B,GAAe8C,EAAO,+BAAgCe,GAAoB97B,OACjF0Z,EAAGue,GAAe8C,EAAO,2BAA4Be,GAAoBpiB,GACzEC,EAAGse,GAAe8C,EAAO,2BAA4Be,GAAoBniB,GACzEC,KAAM,KAGJmiB,G7B5hBa,CAC/B32B,KAAM,UACNN,UAAW,UACXkU,kBAAmB,UACnBjT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,Q6B2gBSsU,IAA0C,QAA1B0hB,EAACO,EAAO,0BAAkB,IAAAP,IAAIM,EAAUhiB,eAAese,cACvEre,GAAuB,CACzBjU,UAAWozB,GAAe6C,EAAO,2BAA4BgB,GAAej3B,WAC5EM,KAAiC,QAA7Bq1B,EAAEM,EAAO,4BAAoB,IAAAN,IAAIsB,GAAe32B,KACpDI,cAAeuyB,GAAagD,EAAO,+BAAgCgB,GAAev2B,eAClFC,cAAoD,QAAvCi1B,EAAEK,EAAO,sCAA8B,IAAAL,IAAIqB,GAAet2B,cACvEpB,YAAauzB,GAAiBmD,EAAO,6BAA8BgB,GAAe13B,aAClFC,WAAYszB,GAAiBmD,EAAO,4BAA6BgB,GAAez3B,YAChFC,UAAWqzB,GAAiBmD,EAAO,2BAA4BgB,GAAex3B,WAC9EyU,kBAAmBkf,GAAe6C,EAAO,oCAAqCgB,GAAe/iB,mBAC7F9T,UAAWgzB,GAAe6C,EAAO,2BAA4BgB,GAAe72B,WAC5EG,YAAa0yB,GAAagD,EAAO,8BAA+BgB,GAAe12B,aAC/EgB,YAAa0xB,GAAagD,EAAO,8BAA+BgB,GAAe11B,aAC/EpB,UAAW8yB,GAAagD,EAAO,2BAA4BgB,GAAe92B,WAC1ET,QAAuC,QAAhCm2B,EAAEI,EAAO,+BAAuB,IAAAJ,IAAIoB,GAAev3B,QAC1DK,OAAsC,QAAhC+1B,EAAGG,EAAO,8BAAsB,IAAAH,IAAImB,GAAel3B,OACzDqB,WAAY6xB,GAAagD,EAAO,4BAA6BgB,GAAe71B,YAC5EH,YAAamyB,GAAe6C,EAAO,6BAA8BgB,GAAeh2B,aAChFE,cAAe8xB,GAAagD,EAAO,gCAAiCgB,GAAe91B,eACnFD,cAAe+xB,GAAagD,EAAO,gCAAiCgB,GAAe/1B,gBAGjFqU,GAASud,GAAiBmD,EAAO,WAAYD,EAAUzgB,QACvDD,GASyB,QATlBygB,EAAG,CACZjD,GAAiBmD,EAAO,0BAA0B,GAAS,IAAM,GACjEnD,GAAiBmD,EAAO,qBAAqB,GAAS,IAAM,GAC5DnD,GAAiBmD,EAAO,2BAA2B,GAAS,IAAM,GAClEnD,GAAiBmD,EAAO,sBAAsB,GAAS,IAAM,GAC7DnD,GAAiBmD,EAAO,uBAAuB,GAAS,IAAM,GAC9DnD,GAAiBmD,EAAO,6BAA6B,GAAS,IAAM,GACpEnD,GAAiBmD,EAAO,wBAAwB,GAAS,IAAM,GAC/DnD,GAAiBmD,EAAO,8BAA8B,GAAS,IAAM,IACvE5O,QAAOtV,GAAmB,KAAVA,WAAa,IAAAgkB,IAAI,GAE7BmB,G7BniB8B,EAChD,EACA,WACA,EACA,W6BgiBkBpgB,GAAgB,CAClBgc,GAAiBmD,EAAO,0BAA2BiB,GAAe,IAClE9D,GAAe6C,EAAO,2BAA4BiB,GAAe,IACjEpE,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,KAEjEngB,GAAgB,CAClB+b,GAAiBmD,EAAO,0BAA2BiB,GAAe,IAClE9D,GAAe6C,EAAO,2BAA4BiB,GAAe,IACjEpE,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,KAEjElgB,GAAkB,CACpB8b,GAAiBmD,EAAO,4BAA6BiB,GAAe,IACpE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,IACnEpE,GAAiBmD,EAAO,6BAA8BiB,GAAe,IACrE9D,GAAe6C,EAAO,+BAAgCiB,GAAe,KAEnEjgB,GAAoB,CACtB6b,GAAiBmD,EAAO,qCAAsCiB,GAAe,IAC7E9D,GAAe6C,EAAO,sCAAuCiB,GAAe,IAC5EpE,GAAiBmD,EAAO,sCAAuCiB,GAAe,IAC9E9D,GAAe6C,EAAO,wCAAyCiB,GAAe,KAE5EhgB,GAAiB,CACnB4b,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,4BAA6BiB,GAAe,IAClEpE,GAAiBmD,EAAO,4BAA6BiB,GAAe,IACpE9D,GAAe6C,EAAO,8BAA+BiB,GAAe,KAExE,IAAI/f,GAAe,CAAC,EACpB,IAAK,IAADggB,GACAhgB,GAAe4D,KAAKC,MAAoC,QAA/Bmc,GAAClB,EAAO,+BAAuB,IAAAkB,MAAI,KAChE,CAAE,MAAO1e,IACLuD,QAAQC,MAAM,gBAAiBxD,GACnC,CAEA,MAAO,CACHpB,GAAIC,iBACD0e,EACHzxB,OACAoQ,WACAZ,aACAU,UACAC,UAAW,SACXyB,OACAhC,aACAc,cACAI,kBACAF,iBACAC,iBAAkB,SAClBvX,kBACAwW,YACAyB,oBACAc,WACAR,OACAP,YAAa,CAAEC,oBAAkBC,OAAQ6gB,IACzC3gB,UACAe,mBACAG,gBACArD,UACAD,QACAN,UACAvY,QACA6b,kBACA7B,iBACA0B,sBACAH,kBACAI,gBACAF,oBACAlB,UACA5X,cACA6Y,eACAlB,WACApZ,QACA+X,aACAD,iBACApW,WACAsZ,kBACAb,YACAZ,kBACAD,iBACAG,qBACAD,oBACAM,cAAe,CAAED,OAAQ8gB,IACzB5f,qBACAf,SACA5B,OACAC,iBACAuC,iBACAR,WACAlC,aACAwB,eACAmB,iBACH,IAGJsQ,QAAOtV,GACY,MAATA,GAEnB,CAAE,MAAO0G,GAEL,OADAuD,QAAQC,MAAM,gBAAiBxD,GACxB,EACX,GClqBE2e,GAAaA,CAACC,EAAuCC,KACvD,MAAMC,EAAqC,kBAAbF,EAAwB1M,SAAS0M,GAAYA,EACrEG,EAAuC,kBAAdF,EAAyB3M,SAAS2M,GAAaA,EACxEG,IAAeF,GAAiBrE,SAASqE,GACzCG,IAAgBF,GAAkBtE,SAASsE,GAEjD,GAAIC,IAAiBC,EAAe,OAAQ,EAC5C,IAAKD,GAAgBC,EAAe,OAAO,EAC3C,GAAID,GAAgBC,EAAe,OAAuB,OAAfF,QAAe,IAAfA,IAAmB,IAAoB,OAAdD,QAAc,IAAdA,IAAkB,GAEtF,MAAMI,EAAgC,MAAbN,EACnB,EACa,KAAbA,GACK,EACD,EACJO,EAAkC,MAAdN,EACpB,EACc,KAAdA,GACK,EACD,EAEV,OACIM,EAAoBD,IAAqB,GAClB,kBAAbN,GACc,kBAAdC,GACI,OAARD,QAAQ,IAARA,IAAY,IAAIQ,cAAcP,GACjCM,EAAoBD,CAAgB,EAEzCG,GAAcA,CAACC,EAAiBjf,IAAoBif,EAAE77B,KAAK27B,cAAc/e,EAAE5c,MAC3E87B,GAAeA,CAACD,EAAiBjf,IAAoBif,EAAE7hB,MAAM2hB,cAAc/e,EAAE5C,OAC7E+hB,GAAaA,CAACF,EAAiBjf,IAAoBse,GAAWW,EAAE5hB,IAAK2C,EAAE3C,KACvE+hB,GAAaA,CAACH,EAAiBjf,IAAoBse,GAAWW,EAAE3hB,IAAK0C,EAAE1C,KACvE+hB,GAAcA,CAACJ,EAAiBjf,IAC9Bif,EAAExiB,QAAUuD,EAAEvD,OAAeuD,EAAExD,QAAQsD,OAASmf,EAAEziB,QAAQsD,OACvDwe,GAAWW,EAAEzjB,KAAMwE,EAAExE,MAE1B8jB,GAAeA,CAACL,EAAiBjf,KAAqB,IAADuf,EAAAC,EAAAC,EAAAC,EACvD,MAAMC,EAAc5oB,GAAaiJ,EAAE9d,OAAOiV,WAAaJ,GAAakoB,EAAE/8B,OAAOiV,WAE7E,GAAoB,IAAhBwoB,EAAmB,OAAOA,EAK9B,OAFoE,QAA1CJ,EAA8B,QAA9BC,EAACzoB,GAAaiJ,EAAEtD,sBAAc,IAAA8iB,OAAA,EAA7BA,EAA+BroB,kBAAU,IAAAooB,IAAI,MAAkD,QAA9CE,EAAkC,QAAlCC,EAAK3oB,GAAakoB,EAAEviB,sBAAc,IAAAgjB,OAAA,EAA7BA,EAA+BvoB,kBAAU,IAAAsoB,IAAI,IAEtG,EAEtBG,GAAiBzgB,IACnB,MAAM6B,EAAiB,IAAK7B,IACtB,MAAEjd,EAAK,OAAEua,GAAWuE,EAY1B,OAVc,UAAV9e,GAA+B,SAAVA,GAAoBkd,GAAgB4B,MACzDA,EAAe3D,IAAM,GACrB2D,EAAe1D,IAAM,GACrB0D,EAAexF,KAAO,GAEtBiB,IACAuE,EAAe1D,IAAM,GACrB0D,EAAexF,KAAO,GAGnBwF,CAAc,EAEnB6e,GAAeA,CAACC,EAA+DC,EAAqBC,KACtG,IAAK,IAAIC,EAAM,EAAGA,EAAMH,EAAYhgB,OAAQmgB,IAAO,CAC/C,MAAMj7B,EAAS86B,EAAYG,GAAKF,EAAOC,GAEvC,GAAe,IAAXh7B,EAAc,OAAOA,CAC7B,CACA,OAAO,CAAC,EAECk7B,GAAkB,CAC3B98B,KAAM,CACF2D,IAAK,OACLo5B,aAAeC,GACJA,EACFpnB,IAAI4mB,IACJS,MAAK,CAACpB,EAAGjf,IAAM6f,GACZ,CACIb,GACAK,GACAC,GACAJ,GACAC,GACAC,IAEJH,EACAjf,MAIhB3C,IAAK,CACDtW,IAAK,MACLo5B,aAAeC,GACJA,EACFpnB,IAAI4mB,IACJS,MAAK,CAACpB,EAAGjf,IAAM6f,GACZ,CACIV,GACAC,GACAC,GACAC,GACAN,GACAE,IAEJD,EACAjf,MAIhB1C,IAAK,CACDvW,IAAK,MACLo5B,aAAeC,GACJA,EACFpnB,IAAI4mB,IACJS,MAAK,CAACpB,EAAGjf,IAAM6f,GACZ,CACIT,GACAD,GACAE,GACAC,GACAN,GACAE,IAEJD,EACAjf,MAIhBmW,IAAK,CACDpvB,IAAK,MACLo5B,aAAeC,GACJA,EACFpnB,IAAI4mB,IACJS,MAAK,CAACpB,EAAGjf,IAAM6f,GACZ,CACIX,GACAI,GACAD,GACAL,GACAG,GACAC,IAEJH,EACAjf,MAIhB8I,MAAO,CACH/hB,IAAK,QACLo5B,aAAeC,GACJA,EACFpnB,IAAI4mB,IACJS,MAAK,CAACpB,EAAGjf,IAAM6f,GACZ,CACIP,GACAD,GACAL,GACAE,GACAC,GACAC,IAEJH,EACAjf,OAKdsgB,GAAcA,CAChBF,EACAG,KAEA,MAAMC,EAAan6B,OACdC,OAAOi6B,GACPhS,QAAQtV,GAA0E,MAATA,IAE9E,OAA0B,IAAtBunB,EAAW1gB,OAAqBsgB,EAC7BI,EAAWv1B,QAAO,CAACw1B,EAAcC,IAC7BA,EAAcD,IACtBL,EAAS,EA+BHO,GAAczK,kBAGzB0K,kCAAuBzK,IACd,CACH0K,SAAU,GACVC,gBAAiB,GACjBV,SAAU,GACVW,kBAAmB,CAAC,EACpBC,kBAAmB,EACnBC,aAAa,EACbC,SAAU,YACVC,uBAAmB/gB,EACnBghB,QAA2D,SAAlDpK,aAAaC,QAAQ,yBAC9BoK,kBAAmB5W,IAAA,IAAC,KAAEnmB,EAAI,MAAExC,GAAO2oB,EAAA,OAAK0L,GAAIyE,IAGrC,IAHsC,SACzCwF,EAAQ,kBACRW,GACHnG,EACG,MAAM0G,EAAwB,IAAKP,GACnC,GAAa,SAATz8B,EAAiB,CACjB,MAAM41B,EAAkBp4B,EAAM03B,cAC9B8H,EAAsBh9B,GAAQ87B,GACnBA,EAAS7R,QAAOuM,IAAuC,IAAtC,KAAE13B,EAAI,OAAE+Z,EAAM,eAAER,GAAgBme,EACpD,OAAQlW,GAAkBxhB,GAAMo2B,cAC1B1U,GAAoB3H,GAAQqc,cAC5B1U,GAAoBnI,GAAgB6c,eAAe/Z,SAASya,EAAgB,GAG9F,CAEA,MAAO,CACH6G,kBAAmBO,EACnBR,gBAAiBR,GAAYF,EAAUkB,GAC1C,GACH,EACFC,YAAaA,KACTpL,GAAIyF,IAAsC,IAArC,kBAAEoF,EAAiB,SAAEZ,GAAUxE,EAChC,MAAO,CACHmF,kBAAmB,CAAC,EACpBC,kBAAmBA,EAAoB,EACvCF,gBAAiB,IAAIV,GACxB,GACH,EAENoB,QAASriB,GAAQgX,GAAI6F,IAAmB,IAAlB,SAAEoE,GAAUpE,EAC9B,MACMyF,EAAU,CAAEljB,GADPC,iBACcW,GAEzB,MAAO,CACH0hB,SAAUY,EAAQljB,GAClB6hB,SAAU,IAAIA,EAAUqB,GAExBX,gBAAiB,IAAIV,EAAUqB,GAClC,IAELC,iBAAkBC,IACA,SAAVA,GAAkBxL,EAAI,CAAE8K,aAAa,IAC3B,aAAVU,GAAsBxL,EAAI,CAAE8K,aAAa,GAAQ,EAEzDW,cAAeC,GAAU1L,GAAI2L,IAAA,IAAC,QAAEV,GAASU,EAAA,MAAM,CAAEV,QAAe,OAANS,QAAM,IAANA,KAAWT,EAAS,IAC9EW,YAAa3+B,GAAQ+yB,EAAI,CAAE+K,SAAU99B,IACrC4+B,qBAAsB7iB,GAAQgX,EAAI,CAAEgL,kBAAmBhiB,IACvD8iB,iBAAkB,SAACC,GAAyC,IAAzBC,EAAWhiB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAC1CgW,GAAIiM,IAAiD,IAAhD,SAAEhC,EAAQ,gBAAEU,EAAe,YAAEG,GAAamB,EACvCC,EAAkBpB,EAGtB,IAAwB,IAApBoB,GAA6BF,EAAa,CAC1C,MAAMG,EAAalC,EAASmC,MAAKpjB,GAAQA,EAAKZ,KAAO2jB,EAAe3jB,KAEpE8jB,GAAkBC,IfgGPE,EAACC,EAAwBC,KACpD,MACI7mB,QAAS8mB,EACTpmB,eAAgBqmB,KACbC,GACHJ,GAEA5mB,QAASinB,EACTvmB,eAAgBwmB,KACbC,GACHN,EAEJ,OAAOO,aAAOJ,EAAWG,IAClBnf,GAAgB8e,EAAaG,IAC7Bjf,GAAgB+e,EAAoBG,EAAoB,Ee7GxCP,CAAgBN,EAAgBI,EAE3C,CASA,MAAO,CACHrB,YAAaoB,EACbjC,SAViBA,EAASpnB,KAAImG,GAC1BA,EAAKZ,KAAO2jB,EAAe3jB,GAAW,IAAK2jB,GACxC/iB,IASP2hB,gBAPwBA,EAAgB9nB,KAAImG,GACxCA,EAAKZ,KAAO2jB,EAAe3jB,GAAW,IAAK2jB,GACxC/iB,IAMV,GAET,EACA+jB,YAAa3kB,GAAM4X,EAAI,CAAE0K,SAAUtiB,IACnC4kB,YAAaA,CAAC/C,EAAUS,KAAc,IAADuC,EAEjCjN,EAAI,CACA4K,kBAAmB,CAAC,EACpBE,aAAa,EACbJ,SAAkB,OAARA,QAAQ,IAARA,IAAuB,QAAfuC,EAAIhD,EAAS,UAAE,IAAAgD,OAAA,EAAXA,EAAa7kB,GACnC6hB,SAAUA,EACVU,gBAAiB,IAAIV,IACvB,EAENiD,WAAY9kB,IACR4X,GAAImN,IAA8C,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAA5C,SAAEtD,EAAQ,SAAES,EAAQ,gBAAEC,GAAiBwC,EACxC,MAAMK,EAAqBvD,EAAS7R,QAAOpP,GAAQA,EAAKZ,KAAOA,IACzDqlB,EAA4B9C,EAAgBvS,QAAOpP,GAAQA,EAAKZ,KAAOA,IACvEslB,EAAkBD,EAA0BE,WAAU3kB,GAAQA,EAAKZ,KAAOsiB,IAKhF,MAAO,CACHA,SALiBA,IAAatiB,EAC0D,QADxDglB,EACoB,QADpBC,EACgB,QADhBC,EAC9BG,EAA0BC,EAAkB,UAAE,IAAAJ,OAAA,EAA9CA,EAAgDllB,UAAE,IAAAilB,IAAgC,QAAhCE,EAAIE,EAA0B,UAAE,IAAAF,OAAA,EAA5BA,EAA8BnlB,UAAE,IAAAglB,IAAI,GAC1F1C,EAIFT,SAAUuD,EACV7C,gBAAiB8C,EACpB,GACH,EAENG,cAAe5kB,IACXgX,GAAI6N,IAAsC,IAArC,SAAE5D,EAAQ,kBAAEW,GAAmBiD,EAChC,MAAMC,EAAc7D,EAAS0D,WAAUI,IAAA,IAAC,KAAE9gC,GAAM8gC,EAAA,OAAK9gC,IAAS+b,EAAK/b,IAAI,IACjE+gC,EAAW3lB,cACX4lB,EAAa,IACZthB,aAAM3D,GACT/b,KAAM,GAAG+b,EAAK/b,cACdmb,GAAI4lB,GAEFE,EAAeJ,EAAc,EAC7B,IAAI7D,EAAUgE,GACd,IACKhE,EAASxU,MAAM,EAAGqY,GACrB7D,EAAS6D,GACTG,KACGhE,EAASxU,MAAMqY,EAAc,EAAG7D,EAAStgB,SAGpD,MAAO,CACH+gB,SAAUsD,EACVhD,kBAAmBiD,EACnBhE,SAAUiE,EACVvD,gBAAiBR,GAAY+D,EAActD,GAC9C,GACH,EAENuD,SAAUhgC,IACN6xB,GAAIoO,IAAoC,IAAnC,gBAAEzD,EAAe,SAAEV,GAAUmE,EAI9B,MAAO,CACHzD,gBAJsBZ,GAAgB57B,GAAM67B,aAAaW,GAMzDV,SALeF,GAAgB57B,GAAM67B,aAAaC,GAMrD,GACH,OCvVDoE,GAAaA,CACtBC,EACA7hB,KAKA,MAAMrE,EAAKC,cACX,IAAIkmB,EAAcjmB,KACd8E,GAAY,EAChB,IAAKkhB,EAAU,MAAO,CAAElhB,YAAWpE,KAAM,IAAKulB,EAAanmB,OAC3D,IACI,MAAMyC,EAAqC,kBAAbyjB,EACxBxiB,KAAKC,MAAMuiB,GACXA,EAGN,GAAI7hB,EAAU,CACV,MAAMle,EAAgCgd,GAAmBV,GAIrD0jB,EADAr+B,OAAO4a,KAAKvc,GAAUob,OAAS,EACjBuC,GAAgB3d,EAAUke,GAI1BP,GAAgBrB,EAAgB4B,EAEtD,MACK,GAAII,GAAmBhC,GACxB0jB,EAAcriB,GAAgBrB,QAE7B,GAAIoC,GAA0BpC,GAAiB,CAChD,MAAMtc,EAAgCgd,GAAmBV,GAEzD0jB,EAAcriB,GAAgB3d,EAClC,MAEK,GAAI2c,MAAMC,QAAQN,EAAe+Y,MAAO,CACzC,MAAM4K,EAAgBtjB,MAAMC,QAAQN,EAAe+Y,MAAQ/Y,EAAe+Y,KAAK,GAAK/Y,GAC5EuC,UAAWqhB,EAAa,OAAE5/B,GAAWwlB,GAA0Bma,GACvEphB,EAAYqhB,EACZF,EAAc1/B,CAClB,MACK,GZ1DuBie,KAChC,IAEI,MAAO,OAAQA,GACR,cAAeA,GACf,cAAeA,CAC1B,CAAE,MAAOtD,GAEL,OADAuD,QAAQC,MAAMxD,IACP,CACX,GYiDaklB,CAAoB7jB,GAAiB,CAC1C,MAAQuC,UAAWqhB,EAAa,OAAE5/B,GAAWwlB,GAA0BxJ,GACvEuC,EAAYqhB,EACZF,EAAc1/B,CAClB,KACK,CACD,MAAQue,UAAWqhB,EAAa,OAAE5/B,Gb6ILma,KACrC,MAAM,KACF/b,EAAI,IACJia,EAAG,IACHC,EAAG,UACHjC,EAAS,OACT8B,EAAM,QACNiM,EAAO,UACPJ,EAAS,KACThjB,EAAI,GACJuY,EAAE,MACFvX,EAAK,OACL+iB,EAAM,MACNjB,EAAK,KACL7D,EAAI,SACJ/hB,EAAQ,OACR0lB,EAAM,OACNG,EAAM,KACNzkB,EAAI,QACJglB,EAAO,QACPxO,GACAqE,GACE,IAAEgK,EAAG,KAAED,EAAME,QAAS0b,EAAe,eAAEzb,EAAgBlM,OAAQR,EAAc,QAAEsM,GAAY/lB,EAC3FslB,EAAiBhC,GAAmBxgB,GACpCyiB,EAAsBpB,GAAoBhM,GAC1CqN,EAAkBX,GAAgBgC,GAClCgb,EDlPgD,kBAA9BhL,ECkPS/yB,IDlPiC+yB,EAAKQ,WAAW,eAA1DR,MCmPxB,MAAMiL,EAAgBnT,SAAS/I,GACzBH,EAAmBC,EAASZ,GAAiBY,EAAO4Q,oBAAiBpZ,EAE3E,IAAImD,OAA+BnD,IAAnBoI,QACepI,IAAxBqI,QACoBrI,IAApBsI,QACqBtI,IAArBuI,EACP,MAAM,OACF3N,EAAM,UACNC,EAAS,KACT9X,GACgB,OAAhBwlB,QAAgB,IAAhBA,IAAoB,CAAC,EACnBsc,EAAa9hC,EAAO0D,EAAmB1D,GAA2B,KAqDxE,MAAO,CACHogB,YACAve,OArDiB,IADJyZ,KAGbzD,OAAc,OAANA,QAAM,IAANA,IAAU,GAClB5X,OACA8X,cAAe/X,EAAO,aAAe,OACrCgY,UAAW8pB,EACLA,EAAWnjC,MlBrQU,CAC/B0F,KAAM,UACNN,UAAW,UACXkU,kBAAmB,UACnBjT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QkBqPLyW,MACAC,MACAjC,UAA8B,OAAnBoN,QAAmB,IAAnBA,IAAuBxjB,EAClCkY,SACAW,QAASkL,EACT1N,UAAyB,OAAdkN,QAAc,IAAdA,IAAkBjjB,EAC7B6X,MAAOmB,EACPrc,MAAsB,OAAfwmB,QAAe,IAAfA,IAAmB,SAC1BlN,KAAM,GAAGwpB,MAAoBlc,GAASkc,GAAiB,GAAKA,EAAgBlc,EAC5EhM,YAAaxY,EAAKyb,MAAM,KAAK/G,KAAIC,GAASA,EAAMukB,SAChD/xB,IAAKs5B,EAAe,GAAK/9B,EACzB2U,QAAQ,EACRD,QAASqpB,EAAe/9B,EAAQ,GAChC4U,UAAWmpB,EAAe,UAAY,SACtC9pB,UAAoB,OAATA,QAAS,IAATA,IAAa,SACxBwB,OAA4B,SAApBiM,GAAsC,MAARzD,EACtCzI,QAAS,EACa,KAAd,OAAJyI,QAAI,IAAJA,OAAI,EAAJA,EAAMsE,SAAmB,IAAM,MACX,KAAhB,OAAJtE,QAAI,IAAJA,OAAI,EAAJA,EAAMuE,WAAqB,IAAM,MACd,KAAf,OAAJvE,QAAI,IAAJA,OAAI,EAAJA,EAAMwE,UAAoB,IAAM,MACX,KAAjB,OAAJxE,QAAI,IAAJA,OAAI,EAAJA,EAAMyE,YAAsB,IAAM,MACZ,KAAlB,OAAJzE,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,aAAuB,IAAM,MACd,KAAjB,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,YAAsB,IAAM,MACX,KAAnB,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,cAAwB,IAAM,MACd,KAAlB,OAAJ5E,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,aAAuB,IAAM,MACrCyE,QAAetV,GAA0B,kBAAVA,IACjCpU,WAAYokB,EACZpM,kBAAmBqM,EACnBtM,iBAAkBuM,EAClBxM,eAAgBA,EAChBY,SAAUwL,EACV1K,aAAc,CACVvD,UACAwO,UACAF,UACAR,SACA1lB,SAAU,CACNkmB,QAAS0b,EACTzb,oBAQX,Ea5OoD6b,CAAyBlkB,GACtEuC,EAAYqhB,EACZF,EAAc1/B,CAClB,CACJ,CAAE,MAAO2a,GACLuD,QAAQC,MAAM,cAAeshB,EAAU9kB,GACvC,IACI+kB,EhBiIyB,SACjCvlB,GAEE,IACEgmB,EASJ,OAPIA,EAJOhlB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAIO4B,GAA+B5C,GAEf,kBAATA,EACf8C,KAAKC,MAAM/C,GACXA,EAGHkD,GAAgB8iB,EAC3B,CgB/I0BC,CAAsBX,GAAU,GAC9CY,KAAahV,KAAK,CACdiV,QAASpM,KAAc,mCACvBqM,YAAarM,KAAc,wCAEnC,CAAE,MAAOvZ,GACLuD,QAAQC,MAAM,WAAYshB,EAAU9kB,GACpC0lB,KAAaliB,MAAM,CACfmiB,QAASpM,KAAc,gCACvBqM,YAAarM,KAAc,qCAEnC,CACJ,CACA,MAAO,CACH3V,YACApE,KAAM,IAAKulB,EAAanmB,MAC3B,EA8CCinB,GAAmB,CACrBC,SAAU,CAAEnhC,KAAM,WAAqBohC,KAAM,KAC7CC,SAAU,CAAErhC,KAAM,WAAqBohC,KAAM,MAoBpCE,GAAU1P,mBAAkB,CAACC,EAAKC,KACpC,CACHjX,KAAMb,KACNunB,QAASA,CAACC,EAAeC,KAErB,MAAM9D,EAAmBtB,GAAYxH,WAAW8I,iBAChD,GAA6B,oBAAlB6D,EACP3P,GAAIhrB,IACA,MAAM66B,EAAWF,EAAc36B,EAAIgU,MAGnC,OAFA8iB,EAAiB+D,EAA0B,OAAhBD,QAAgB,IAAhBA,MAEpB,CAAE5mB,KAAM6mB,EAAU,SAI5B,GAhCN,OADoB7mB,EAiCK2mB,IAhCG,KAAZ3mB,EAAKZ,GAiChB0jB,EAAiB6D,EAAeC,GAChC5P,EAAI,CAAEhX,KAAM2mB,QAEX,CACD,MAAM9kB,EAAiB,CAAEzC,GAAIC,iBAAWsnB,GACxC7D,EAAiBjhB,EAAgB+kB,GACjC5P,EAAI,CAAEhX,KAAM6B,GAChB,CAzCmB7B,KAyCnB,EAEJ8mB,WAAY,SACRl/B,GAGE,IAADm/B,EAAA,IAFDC,EAAmChmB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAIre,GAAUA,EACjDwnB,EAAOnJ,UAAAL,OAAA,EAAAK,UAAA,QAAAC,EAEP,MAAM,QAAEylB,GAAYzP,IACdgQ,EAAkBzmB,IACpBkmB,GAAQQ,IAAO,IAAAC,EAAA,MAAK,IACbD,EACH,CAACt/B,GAAMo/B,EAA4B,kBAANxmB,GAA+B,kBAANA,GAAkB0B,MAAMC,QAAQ3B,GAAKA,EAAK,OAADA,QAAC,IAADA,GAAS,QAAR2mB,EAAD3mB,EAAG4mB,cAAM,IAAAD,OAAR,EAADA,EAAWxkC,OAC7G,GAAE,EAGP,IAAKwnB,EAAS,OAAO8c,EACrB,MAAMI,EAAmC,kBAAZld,EACE,QADkB4c,EAC3CV,GAAiBlc,UAAQ,IAAA4c,SAAI9lB,EAC7BkJ,EAEN,IAAKkd,EAAe,OAAOJ,EAC3B,MAAM,KAAEV,EAAI,KAAEphC,GAASkiC,EAEvB,MAAa,aAATliC,EAA4BmhC,KAASW,EAAgBV,GAC5C,aAATphC,EAA4BqhC,KAASS,EAAgBV,GAElDU,CACX,MCzMKK,GAAavQ,mBAAsBC,IAC5C,MAAM,YACFuQ,EAAW,aACXC,EAAY,kBACZC,EAAiB,WACjBC,EAAU,mBACVC,EAAkB,0BAClBC,GACA,MACA,IAAK,IAADC,EACA,MAAMC,EAAchlB,KAAKC,MAAqC,QAAhC8kB,EAAChQ,aAAaC,QAAQ,kBAAU,IAAA+P,IAAI,MAElE,OAAIC,GAAsC,kBAAhBA,IAA6B5lB,MAAMC,QAAQ2lB,GAAqBA,EACnF,CAAC,CACZ,CAAE,MAAOtnB,GAEL,OADAuD,QAAQC,MAAM,gDAAiDxD,GACxD,CAAC,CACZ,CACH,EAVG,GAYJ,MAAO,CACHunB,QAAS,CACLP,aAAsC,kBAAjBA,EAA4BA,EAA+B,MAChFE,WAAYxlB,MAAMC,QAAQulB,IAAwC,kBAAlBA,EAAW,IAA4C,kBAAlBA,EAAW,GAC1FA,EACA,CAAC1kC,EAAYC,MAAOD,EAAYE,QACtCqkC,YAAoC,mBAAhBA,GAA4BA,EAChDE,kBAAgD,mBAAtBA,GAAkCA,EAC5DE,mBAAkD,mBAAvBA,GAAmCA,EAC9DC,0BAAgE,mBAA9BA,GAA0CA,GAEhFI,cAAeC,IACXjR,GAAIkR,IACA,MAAMC,EAA6C,oBAAzBF,EACpBA,EAAqBC,EAAaH,SAClC,IAAKG,EAAaH,WAAYE,GAIpC,OAFApQ,aAAa0B,QAAQ,UAAWzW,KAAKslB,UAAUD,IAExC,CACHJ,QAASI,EACZ,GACH,EAET,ICnCQE,GAAgB/c,IAQP,IARQ,UAC1Bgd,EAAS,eACTC,EAAc,gBACdC,EAAe,UACfC,EAAS,SACTC,EAAQ,gBACRC,EAAe,mBACfC,GACYtd,EACZ,MAAMgO,EAAWQ,MAEb9Z,KAAM6oB,GACNpC,KACEiB,EAAaJ,IAAW3P,GAASA,EAAMoQ,QAAQL,cAC/C,QACF/hC,EAAO,KACP1B,EAAI,WACJyB,GACAmjC,EACEC,EAAcC,kBAAO,GAErB9iB,EAAW+iB,uBAAY,WAA0C,IAADnX,EAAA,IAAxC9C,EAAsB/N,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG0mB,EACnD,MAAMuB,EAAaT,EAAgBtB,QAE7BgC,EAAyB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYE,YAC3BC,EAA8B,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYI,WAAW,MAC3CC,EAAkC,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcG,WAAW,MACrD,GAAIJ,GAAcG,GACXF,GAAgBI,IACfhB,EAEJ,IACQvZ,IACAma,EAAajmC,MAAQ8rB,EAAK,GAC1Bma,EAAahmC,OAAS6rB,EAAK,IAG/Bua,EAAoBC,UAChBN,EACA,EAAG,EAAGA,EAAWhmC,MAAOgmC,EAAW/lC,OACnC,EAAG,EAAGgmC,EAAajmC,MAAOimC,EAAahmC,QAG3C,MAAMgmB,EAAiBzD,GAAkBxhB,GACzC,IAAI6hB,EAAOC,SAASC,cAAc,KAClCF,EAAKG,SAAWiD,EACV,GAAGA,QACH,WACNpD,EAAKI,KAAOgjB,EAAare,UAAU,aACnC/E,EAAK0jB,OACT,CAAE,MAAOhpB,GACLmoB,GACJ,CAE0C,QAA9C9W,EAAA9L,SAASgM,cAAc,+BAAuB,IAAAF,GAA9CA,EAAgD4X,UAAU3iB,OAAO,YACjE8hB,GACJ,GAAG,CAACJ,EAAiBF,EAAWrkC,EAAMyjC,EAAYkB,EAAoBD,IAuHtE,OA3GAe,qBAAU,KACN,IAAIC,GAAW,EAWf,OAVAC,YAAW,KACP,MAAM1gB,EAAiBzD,GAAkBxhB,GAErC0lC,IACA5jB,SAAS8jB,MAAQ3gB,EACX,GAAGA,sBACH,kBACV,GACD,KAEI,KACHygB,GAAW,CAAK,CACnB,GACF,CAAC1lC,IAEJylC,qBAAU,KACN,IAAII,EAAmBA,KAAO,IAADC,EACzBlS,aAAa0B,QAAQ,YAAazW,KAAKslB,UAAUS,IACjDhR,aAAa0B,QAAQ,eAA6C,QAA/BwQ,EAAEC,UAA6BD,EAAI,UAAU,EAIpF,OAFA5jB,OAAO8jB,iBAAiB,eAAgBH,GAEjC,KACH3jB,OAAO+jB,oBAAoB,eAAgBJ,EAAiB,CAC/D,IAGLJ,qBAAU,KACN,IAAIC,GAAW,EACXQ,EAAiBC,IACjBA,EAAG/Y,iBACIiI,EAAS,kCAEpB,IAAuB,IAAnBiP,EAA0B,CAC1B,IAAK,IAAD8B,EACAxS,aAAa0B,QAAQ,YAAazW,KAAKslB,UAAUS,IACjDhR,aAAa0B,QAAQ,eAA6C,QAA/B8Q,EAAEL,UAA6BK,EAAI,UAC1E,CAAE,MAAO7pB,GAEL,MAAM5Y,EAAM,mCACZs+B,KAAaoE,MAAM1iC,GACnBs+B,KAAaliB,MAAM,CACfpc,MACAu+B,QAAS7M,EAAS,+BAClB8M,YAAa9M,EAAS,oCAE9B,CAUA,WAEoB,IAADiR,EAAAC,EAAAC,EAAf,GADkBjC,EAAgBtB,UAE9B/gB,OAAO8jB,iBAAiB,eAAgBE,GACA,QAAxCI,EAAAxkB,SAAS2kB,eAAe,wBAAgB,IAAAH,GAAxCA,EAA0Cd,UAAU3iB,OAAO,uBACb,QAA9C0jB,EAAAzkB,SAAS2kB,eAAe,8BAAsB,IAAAF,GAA9CA,EAAgDG,aAAa,QAAS,IACxB,QAA9CF,EAAA1kB,SAAS2kB,eAAe,8BAAsB,IAAAD,GAA9CA,EAAgDE,aAAa,QAAS,kBAEtElC,EAAUvB,QAAQ0D,iBAAkB,QAG9BnC,EAAUvB,QAAQ2D,gBAEpBlB,IACAlB,EAAUvB,QAAQ2D,gBAAkBnC,EAAS,CACzChjC,aACAC,UACAmlC,WAAYA,IAAMnB,UAGhBlB,EAAUvB,QAAQ2D,gBACpBlB,IAAU,CAAC,IAADoB,EAAAC,EAAAC,EAEV,MAAMppB,EAAiB,IAAKgnB,EAAatsB,QAAS,GAAIU,eAAgB,IAChE2E,EAAgBkB,KAAKslB,UAAU1mB,GAAiBG,IACzB,kBAAlBD,GTrJhC,SAAwBha,EAAajF,GACxC,GAAIwjB,OAAOsR,QAAQyT,UAAW,CAC1B,IAAI5T,EAAe,IAAI6T,gBAAgBhlB,OAAOiR,SAASgU,QACvD9T,EAAaN,IAAIpvB,EAAKjF,GACtB,IAAI0oC,EAASllB,OAAOiR,SAASkU,SACvB,KACAnlB,OAAOiR,SAASmU,KAChBplB,OAAOiR,SAASoU,SAChB,IACAlU,EAAamU,WACnBtlB,OAAOsR,QAAQyT,UAAU,CAAEQ,KAAML,GAAU,GAAIA,EACnD,CACJ,CSyImEM,CAAe,OAAQ/pB,GAEtB,QAAxCmpB,EAAAhlB,SAAS2kB,eAAe,wBAAgB,IAAAK,GAAxCA,EAA0CtB,UAAUmC,IAAI,uBACV,QAA9CZ,EAAAjlB,SAAS2kB,eAAe,8BAAsB,IAAAM,GAA9CA,EAAgDL,aAAa,QAAS,iBACxB,QAA9CM,EAAAllB,SAAS2kB,eAAe,8BAAsB,IAAAO,GAA9CA,EAAgDN,aAAa,QAAS,iBACtExkB,OAAO+jB,oBAAoB,eAAgBC,GAC3C1B,EAAUvB,QAAQ0D,iBAAkB,EAEhC9B,EAAY5B,UACZ4B,EAAY5B,SAAU,EACtBjhB,IAER,CAGX,EAxCD,EAyCJ,CAEA,MAAO,KACHE,OAAO+jB,oBAAoB,eAAgBC,GAC3CR,GAAW,CAAK,CACnB,IAGE,CACHkC,OAvHY9c,IAA6B,IAAD+c,EACM,QAA9CA,EAAA/lB,SAASgM,cAAc,+BAAuB,IAAA+Z,GAA9CA,EAAgDrC,UAAUmC,IAAI,YAC9D,MAAMG,EAAchd,EAAO,IAAIA,QAA4B9N,EAE3D2oB,YAAW,MACmC,IAAtCnB,EAAUvB,QAAQ0D,gBAClB3kB,EAAS8lB,GACNjD,EAAY5B,SAAU,CAAI,GAClC,IAAI,EAgHP8E,kBAAmBA,IAAMvD,EAAUvB,QAAQ0D,gBAC9C,GCvMG1nC,OAAQ+oC,GAAchpC,MAAOipC,IAAgBlpC,EAExCmpC,GAAkBA,IAAM,UAAUhrB,QAAQ,MAAM,QAA0B,GAAhBqD,KAAKmN,SAAgB,IAAI8Z,SAAS,MAG5FW,GAAa9gB,IAYnB,IAZoB,IACvB+gB,EAAG,MACHpmC,EAAQkmC,KAAiB,MAAElpC,EAAK,OAChCotB,EAAS,EAAC,KACVic,EAAI,SAAEC,EAAQ,OACdC,GAOHlhB,EACG,MAAMmhB,EAAmBJ,EAAItkC,UAC7BskC,EAAItkC,UAAY9B,EAChBomC,EAAIK,YACJL,EAAIM,KAAKL,EAAOE,EAAQD,EAAW,EAAI/nB,KAAKmN,SAAWtB,EAAQptB,EAAQupC,EAAQ,GAE/EH,EAAItkC,UAAY0kC,CAAgB,EAWvBG,GAA0BA,CACnCP,EACAQ,EACAC,EACAR,EACAC,EACAQ,KAIA,IAAKV,IAAQQ,EAAK,OAAOP,EAEzB,MAAM,OAAEU,GAAS,GAAgB,OAAND,QAAM,IAANA,IAAU,CAAC,EACtCV,EAAIY,UAAY,OAChB,MAAMC,EAAWL,EAAIjsB,MAAM,IAC3B,IAAIusB,EAAUb,EAQd,OANAY,EAASnrB,SAAQqrB,IACbf,EAAIgB,SAASD,EAAMD,EAASZ,GACxBS,GAAQX,EAAIiB,WAAWF,EAAMD,EAASZ,GAC1CY,GAAWd,EAAIkB,YAAYH,GAAMnqC,OAAS,EAAI6pC,GAAsB,CAAC,IAGlEK,CAAO,EAGLK,GAA2BA,CACpCnB,EACAQ,EACA9/B,EACAu/B,EACAC,EACAQ,KAIA,IAAKV,IAAQQ,EAAK,OAAOP,EAEzB,MAAM,OAAEU,GAAS,GAAgB,OAAND,QAAM,IAANA,IAAU,CAAC,EACtCV,EAAIY,UAAY,QAChB,MAAMC,EAAWL,EAAIjsB,MAAM,IAC3B,IAAI6sB,EAAWnB,EAQf,OANAY,EAASnrB,SAAQ,CAAC2rB,EAAGnd,KACjB,MAAM6c,EAAOF,EAASA,EAASvsB,OAAS4P,EAAQ,GAChD8b,EAAIgB,SAASD,EAAMK,EAAUlB,GACzBS,GAAQX,EAAIiB,WAAWF,EAAMK,EAAUlB,GAC3CkB,GAAYpB,EAAIkB,YAAYH,GAAMnqC,OAAS,EAAI8J,GAAiB,CAAC,IAE9D0gC,CAAQ,EAINE,GAAc,SACvBtB,GAGmC,IAFnCppC,EAAK+d,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGkrB,GACRhpC,EAAM8d,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGirB,GAET,QAAII,IACAA,EAAIuB,UAAU,EAAG,EAAG3qC,EAAOC,IAEpB,EAGf,EAGa2qC,GAAoB,SAC7BhyB,GAEE,IADFiyB,EAA4C9sB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG7U,EAE/C,OAAOosB,MACH8T,EACApoC,EACA8pC,KAEA,IAAK1B,IAAQnqB,MAAMC,QAAQtG,IAAWA,EAAO8E,QAAU,EAAG,OAAOqtB,QAAQC,UACzE,IAAK,MAAMC,KAAcryB,EAAQ,CAC7B,MAAMsyB,EAAoBL,EAAUI,GACpC,GAAIH,GAAUD,EAAUI,GAAa,CAAC,IAADE,EACjC,MAAM,mBAAEhiC,GAAuB+hC,EACzBE,EAAkBpqC,GAA+B,QAA3BmqC,EAAGhiC,EAAmBnI,UAAK,IAAAmqC,IAAS,GAEhE,GAAIC,EAAgB1tB,OAChB,IAAK,MAAM,UAAE7W,EAAY,cAAa,QAAEnE,EAAU,KAAO0oC,EACrDhC,EAAIiC,yBAA2BxkC,EAC/BuiC,EAAIkC,YAAc5oC,QAEZooC,EAAOG,cAGXH,EAAOG,GAEjB7B,EAAIkC,YAAc,EAClBlC,EAAIiC,yBAA2B,aACnC,CACJ,CACAjC,EAAIkC,YAAc,EAClBlC,EAAIiC,yBAA2B,aAAa,CAEpD,EAEME,GAA0B,EAC1BC,GAA0B,EAC1BC,GAAsB,EACtBC,GAAuB,UACvBC,GAAqB,UAEdC,GAAepT,IASH,IATI,IACzB4Q,EAAG,EACH1vB,EAAI6xB,GAAuB,EAC3B5xB,EAAI6xB,GAAuB,KAC3BK,EAAOJ,GAAmB,MAC1BzoC,EAAQ2oC,GAAkB,YAC1B5lC,EAAc2lC,IAGClT,EAOf,OANA4Q,EAAInjC,cAAgByT,EACpB0vB,EAAIpjC,cAAgB2T,EACpByvB,EAAIljC,WAAa2lC,EACjBzC,EAAIrjC,YAAcA,EAClBqjC,EAAItkC,UAAY9B,EAET,KACHomC,EAAInjC,cAAgBslC,GACpBnC,EAAIpjC,cAAgBwlC,GACpBpC,EAAIljC,WAAaulC,GACjBrC,EAAIrjC,YAAc2lC,GAClBtC,EAAItkC,UAAY6mC,EAAkB,CACrC,ECpKCG,GAKD,CAAC,EAsEOC,GAAYzW,eACrB8T,EACA4C,GAGE,IAFFC,EAAkDluB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDmuB,EAAkDnuB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErD,aA1EoBuX,eACpB8T,EACA4C,GAGE,IAFFC,EAAkDluB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrDmuB,EAAkDnuB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErD,OACO,IAAIgtB,QADN3B,GAAkB,KAAX4C,EACgBhB,IAAY,IAADmB,EAAAC,EAMnC,IAAqC,KAAZ,QAArBD,EAAAL,GAAcE,UAAO,IAAAG,OAAA,EAArBA,EAAuBE,OAAgB,CACvC,MAAMznC,EAAQknC,GAAcE,GAAQpnC,MAC9B0nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGrnC,GAC/C2nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGtnC,GAKrD,OAHAwkC,EAAI9C,UAAU1hC,EAAO0nC,EAAaC,QAElC5F,YAAW,IAAMqE,GAAQ,IAAO,EAEpC,CACA,GAAyB,QAAzBoB,EAAIN,GAAcE,UAAO,IAAAI,GAArBA,EAAuBrrB,MAEvB,YADA4lB,YAAW,IAAMqE,GAAQ,IAAO,GAIpC,MAAMwB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7FznC,EAAQ4nC,EACRV,GAAcE,GAAQpnC,MACtB,IAAI8nC,MAELF,IAAa5nC,EAAMb,IAAMgjC,aAAyBiF,GACvDpnC,EAAMoiC,iBACF,QACA,KACI,MAAMsF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGrnC,GAC/C2nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGtnC,GAErDwkC,EAAI9C,UAAU1hC,EAAO0nC,EAAaC,GAC9BT,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQjrB,OAAQ,GAElCiqB,GAAQ,EAAK,GAEjB,CAAE2B,MAAM,IAEZ/nC,EAAMoiC,iBACF,SACA,KACQ8E,GAAcE,KACdF,GAAcE,GAAQjrB,OAAQ,GAElCiqB,GAAQ,EAAM,GAElB,CAAE2B,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtCpnC,MAAOA,EACPynC,OAAO,EACPtrB,OAAO,EACP0rB,OAAO,GACV,EA3DkDzB,GAAWA,GAAQ,GA6D9E,CAOiB4B,CACTxD,EACA,gBAAkB4C,EAClBC,EAAIC,EAEZ,EAuEaW,GAA6CvX,MACtD8T,EACA4C,EACAC,EAAIC,EACJY,EAAIC,SAzEwBzX,OAC5B8T,EACA4C,EACAC,EACAC,EACAY,EACAC,IAGO,IAAIhC,QADN3B,GAAkB,KAAX4C,EACgBhB,IAAY,IAADgC,EAAAC,EAEnC,IAAqC,KAAZ,QAArBD,EAAAlB,GAAcE,UAAO,IAAAgB,OAAA,EAArBA,EAAuBX,OAAgB,CACvC,MAAMznC,EAAQknC,GAAcE,GAAQpnC,MAC9B0nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGrnC,GAC/C2nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGtnC,GAC/CsoC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGloC,GAC/CuoC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGnoC,GAIrD,OAFAwkC,EAAI9C,UAAU1hC,EAAO0nC,EAAaC,EAAaW,EAAaC,QAC5DxG,YAAW,IAAMqE,GAAQ,IAAO,EAEpC,CACA,GAAyB,QAAzBiC,EAAInB,GAAcE,UAAO,IAAAiB,GAArBA,EAAuBlsB,MAEvB,YADA4lB,YAAW,IAAMqE,GAAQ,IAAO,GAIpC,MAAMwB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7FznC,EAAQ4nC,EACRV,GAAcE,GAAQpnC,MACtB,IAAI8nC,MAELF,IAAa5nC,EAAMb,IAAMgjC,aAAyBiF,GACvDpnC,EAAMoiC,iBACF,QACA,KACI,MAAMsF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGrnC,GAC/C2nC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGtnC,GAC/CsoC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGloC,GAC/CuoC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAGnoC,GAErDwkC,EAAI9C,UAAU1hC,EAAO0nC,EAAaC,EAAaW,EAAaC,GACxDrB,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQjrB,OAAQ,GAElCiqB,GAAQ,EAAK,GAEjB,CAAE2B,MAAM,IAEZ/nC,EAAMoiC,iBACF,SACA,KACQ8E,GAAcE,KACdF,GAAcE,GAAQjrB,OAAQ,GAElCiqB,GAAQ,EAAM,GAElB,CAAE2B,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtCpnC,MAAOA,EACPynC,OAAO,EACPtrB,OAAO,EACP0rB,OAAO,GACV,EA1DkDzB,GAAWA,GAAQ,IAmE7DoC,CACThE,EACA,gBAAkB4C,EAClBC,EAAIC,EACJY,EAAIC,GAICM,GAAgB/X,MACzBgY,EACAtB,EACAuB,EAAYC,EACZC,EAAYC,EACZ7hB,KAEA,MAAMud,EAAMkE,EAAOlH,WAAW,MACxBH,EAAenjB,SAASC,cAAc,UAC5CkjB,EAAajmC,MAAQytC,EACrBxH,EAAahmC,OAASytC,EACtB,MAAMC,EAAY1H,EAAaG,WAAW,KAAM,CAAEwH,oBAAoB,IAEtE,IAAKD,IAAcvE,EAAK,aASlByD,GAAkBc,EAAW3B,EAAQ,EAAG,EAAGyB,EAAIC,GAC5C,OAAL7hB,QAAK,IAALA,KAAO7oB,QACP2qC,EAAU7oC,UAAY+mB,EAAM7oB,MAC5B2qC,EAAUE,SAAS,EAAG,EAAGJ,EAAIC,GAC7BC,EAAUtC,yBAA2B,wBAEnCwB,GAAkBc,EAAW3B,EAAQ,EAAG,EAAGyB,EAAIC,GACrDC,EAAUtC,yBAA2B,cAGrC,MAAMyC,EAAuBlC,GAAa,CAAExC,SAAQvd,IACpDud,EAAI9C,UAAUL,EAAcsH,EAAIC,GAChCM,GAAsB,EC3KbC,GAAiB1lB,IAgBvB,IAADmQ,EAAAwV,EAAA,IAhByB,IAC3B5E,EAAG,OACH6E,EAAM,aACNC,GAAe,EAAK,MACpB1gB,EAAK,UACLtiB,EAAS,OACTq+B,EAAM,aACNj+B,EAAe,YASlB+c,EACG,GAAI7R,GAAwB0Z,KAAK+d,GAAS,MAAO,CAC7CjuC,MAAO,EACPmuC,WAAY,GAGhB,MAAMC,EAAmC,QAAdljC,EACrBiN,GACAH,GACAq2B,EAA0B,QAAdnjC,EACZ+M,GACAH,GACAw2B,EAAoC,QAAdpjC,EACtBgN,GACAH,GACAw2B,EAASnF,EAAIkB,YAAY2D,IACzB,MACFjuC,EAAK,sBACLwuC,EAAqB,uBACrBC,GACAF,EACEG,EAAmBF,EAAwBC,EACjD,IAAIE,EAAoB,EACH,SAAjBrjC,IACAqjC,EAAoB,EAAmB,GAAd,EAAIpF,IAEjC,MAAMqF,EAAgC,SAAjBtjC,GAA4C,YAAjBA,GAA+C,aAAjBA,EACpE,QACA,EACV,IAAI6iC,EAAaO,EACbG,EAEmB,QAFRrW,EAAI0V,EACbI,EAAoBL,GACpBI,EAAUJ,UAAO,IAAAzV,IAAK,EAE5B,GAAkB,QAAdttB,EAAqB,CAAC,IAAD4jC,EAGrB,MAAO,CACH9uC,QACA0uC,mBACAP,WAAYnuC,EAAQ,IAL0B,QAA3B8uC,EAACV,EAAmBH,UAAO,IAAAa,IAAI,GAAK9uC,GAMvDuuC,SACAM,cAER,CAEA,IAAIE,GAA8C,QAA3Bf,EAACI,EAAmBH,UAAO,IAAAD,IAAI,GAAKhuC,GACnC,aAAjBsL,EACG,EACAiW,KAAK6I,IACK,KAARpqB,EACAuhB,KAAK8I,IAAI,IAAOrqB,EAAQ4uC,GAAgBD,IAIhDK,EAAsB,EACtBx3B,GAAY0Y,KAAK+d,IACjBE,EAA8B,aAAjB7iC,EACPojC,EACAA,GAAqC,YAAjBpjC,EAA6B,KAAQ,KAC/D0jC,EAAsB,IAEjBv3B,GAAayY,KAAK+d,IACvBE,EAA8B,aAAjB7iC,EAA8BojC,EAAmBntB,KAAK8I,IAAIqkB,EAA0B,IAAR1uC,GACzF+uC,EAAmB,GAEd/3B,GAAakZ,KAAK+d,GACvBE,EAA8B,aAAjB7iC,EAA8BojC,EAAmBntB,KAAK8I,IAAIqkB,EAA0B,GAAR1uC,GAEpFoX,GAAe8Y,KAAK+d,GACzBE,EAAanuC,EAER2X,GAA6BuY,KAAK+d,GACvCE,EAAgC,EAAnBO,EAER92B,GAAuBsY,KAAK+d,GACjCE,EAAgC,KAAnBO,GAA4BR,EzBfJ,GyBemD,GAEnF52B,GAAc4Y,KAAK+d,GACxBE,EAA8B,aAAjB7iC,EAA8BojC,EAAmBntB,KAAK8I,IAAIqkB,EAA0B,IAAR1uC,GAEpFuX,GAAc2Y,KAAK+d,GACxBE,EAAa5sB,KAAK8I,IAAIqkB,EAA0B,IAAR1uC,IAChB,YAAjBsL,EAA6B,KAAU,GAEzCoM,GAAawY,KAAK+d,IACvBE,EAAanuC,EACb+uC,EAAmB,GAGnBZ,EAA8B,aAAjB7iC,EAA8BojC,EAAmBntB,KAAK8I,IAAIqkB,EAA0B,IAAR1uC,GAE7F+uC,EAAoC,aAAjBzjC,EAA8B,EAAIyjC,EAErD,MAAME,EAzCY,EAyCQjvC,EAxCP,EA2CnB,OADIwtB,GAAO1M,QAAQmN,KAAK,kBAAkBT,IAASygB,EAAQM,EA3CzC,EACC,EA0C2E,IAAKU,GAC5F,CACHjvC,QACA0uC,mBACAP,WAA6B,aAAjB7iC,EACNtL,EAAQgvC,EACRb,EAAgC,EAAnBY,EACnBR,SACAM,cACH,EAYQK,GAAaxW,IAkBnB,IAlBoB,IACvB0Q,EAAG,SACHE,EAAQ,KACRD,EAAI,OACJ4E,EAAM,OACN1E,EAAM,UACN4F,EAAY,CAAC,EAAC,aACdC,EAAY,WACZC,GAUH3W,EACG,MAAM,WACFyV,EAAU,OACVI,EAASnF,EAAIkB,YAAY2D,GAAO,YAChCY,EAAc,GACF,OAAZO,QAAY,IAAZA,IAAgB,CAAC,GAEjBhlC,QAASklC,EAAmBnlC,EAAqBC,QAAO,OACxDC,EAASF,EAAqBE,QAC9Bk/B,EAAS,EAAI,CAAC,EAAI4F,EAEhBI,EAAchB,EAAOvuC,MAAQupC,EAC7BiG,EAAsBrB,EAAaA,EAAa5E,EAASgG,EACzDvlB,EAAmB,OAAVqlB,QAAU,IAAVA,IAAe7V,IAKvB,IALwB,IAC3B4P,EAAG,OACH6E,EAAM,eACNwB,EAAc,WACdC,GACHlW,EACG4P,EAAIgB,SAAS6D,EAAQyB,EAAYD,EAAe,EAG9CE,GAAkBJ,EAAcC,GAAuB,EACvDI,EAAiBJ,EAAsBX,EAC7CzF,EAAIrgB,MAAM,EAAG1e,GACb2f,EAAO,CACHof,MACA6E,SACAyB,WAAYrG,EAAOE,EAASoG,EAAiBC,EAC7CH,gBAAiBnG,EAAWgG,GAAoBjlC,IAEpD++B,EAAIrgB,MAAM,EAAG,EAAI1e,EAAO,ECjNfwlC,GAAe,SAAC9uC,GACzB,MAAM+uC,EADqD/xB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAErD,IAAIrI,OAAO,KAAK6C,SAAuBxC,eAAyBC,aAChE,IAAIN,OAAO,KAAK6C,QAAsBxC,iBAA2BC,YAEvE,OAAOjV,EACF4c,MAAMmyB,GACN3jB,QAAO5G,GAAkB,MAATA,GAA2B,KAAVA,GAC1C,EAEawqB,GAAgBA,CACzB3G,EACA98B,EACA0jC,EACAC,KAEA,MAAM,SACFxkC,EAAQ,iBACRxB,EAAmBT,EAAoBS,iBAAgB,kBACvDN,EAAoBH,EAAoBG,mBACxCqmC,GACE,KACF5qC,EAAI,YACJ0F,EAAW,WACXC,EAAU,gBACVC,EAAe,WACf0I,EAAatO,EAAI,gBACjBuO,EAAkB,EAAC,aACnB9I,GACAyB,EAEJ,IAAI4jC,EAAmBD,EAAe5jB,cAYtC,IAAI8jB,EAAmBF,EAAe5jB,cAYtC,IAAI+jB,EAAoBH,EAAe5jB,cAoBvC,IAAIgkB,EAAqBJ,EAAe5jB,cAqBxC,IAAIikB,EAAuBL,EAAe5jB,cAS1C,MAAO,CACHkkB,gBA1EoBA,KACpBL,EAAmBD,EAAe5jB,cAClC+c,EAAIhkC,KAAO6qC,EAAenjB,UAAUpZ,GAAYiZ,QAAQlhB,EAAWkI,GAAiBuY,SAAS,EAwE5EskB,oBAtEOA,KACxBpH,EAAIhkC,KAAO6qC,EACNnjB,UAAUojB,EAAiBjkB,QAC3BU,QAAQujB,EAAiBpkB,MACzBI,SAAS,EAmEdukB,gBAVoB,WAAoB,IAAnBC,EAAS3yB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjCuyB,EAAuBL,EAAe5jB,cACtC+c,EAAIhkC,KAAO6qC,EAAetjB,QAAQlhB,EAAWilC,GAAWxkB,SAC5D,EAOqBykB,oBANOA,KACxBvH,EAAIhkC,KAAO6qC,EAAetjB,QAAQ2jB,EAAqBxkB,MAAMI,SAAS,EAMtE0kB,gBAhEoBA,KACpBT,EAAmBF,EAAe5jB,cAClC+c,EAAIhkC,KAAO6qC,EAAenjB,UAAU/hB,GAAY4hB,QAAQlhB,EAAWT,GAAiBkhB,SAAS,EA8D5E2kB,oBA5DOA,KACxBzH,EAAIhkC,KAAO6qC,EACNnjB,UAAUqjB,EAAiBlkB,QAC3BU,QAAQwjB,EAAiBrkB,MACzBI,SAAS,EAyDd4kB,iBArDqBA,KACrBV,EAAoBH,EAAe5jB,cACnC+c,EAAIhkC,KAAO6qC,EAAenjB,UAAUhiB,GAAa6hB,QAAQlhB,EAAWxB,GAAkBiiB,SAAS,EAmD7E6kB,qBAjDOA,KACzB3H,EAAIhkC,KAAO6qC,EACNnjB,UAAUsjB,EAAkBnkB,QAC5BU,QAAQyjB,EAAkBtkB,MAC1BI,SAAS,EA8Cd8kB,kBAlCsB,WAAmB,IAAlBC,EAAIlzB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAC3BsyB,EAAqBJ,EAAe5jB,cACpC+c,EAAIhkC,KAAO6qC,EAAenjB,UAAUjiB,GAAcyhB,UAAU2kB,EAAO,OAAS,IAAItkB,QAAQlhB,EAAW9B,GAAmBuiB,SAC1H,EA+BuBglB,sBA9BOA,KAC1B9H,EAAIhkC,KAAO6qC,EACNnjB,UAAUujB,EAAmBpkB,QAC7BK,UAAU+jB,EAAmB78B,QAC7BmZ,QAAQ0jB,EAAmBvkB,MAC3BI,SAAS,EA2BdilB,qBAzCyB,WAA6B,IAA5B5H,EAAMxrB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAG1T,EAAM0T,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/CqrB,EAAIrgB,MAAMwgB,EAAQl/B,EACtB,EAwCI+mC,WAzBe,WAAkC,IAAjCC,EAAMtzB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGuzB,EAAMvzB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAGszB,EACrCjI,EAAIrgB,MAAMsoB,EAAQC,EACtB,EAwBIC,WA/CeA,KACfnI,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EA+ClCC,aAvBiB,WAAqB,IAApBC,EAAU3zB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/BqrB,EAAIrgB,MAAM,EAAI2oB,EAAY,EAAIA,EAClC,EAsBC,EAOQC,GAAaA,CAACvI,EAA+BC,EAAcC,EAAkBtpC,EAAe4xC,KACrG,MAAMC,GAAgB7xC,EAAQ4xC,GAAc,EAC5CxI,EAAIK,YACJL,EAAI0I,IAAIzI,EAAOwI,EAAcvI,EAAWuI,EAAe,EAAGA,EAAc,EAAG,EAAItwB,KAAKwwB,IAAI,GACxF3I,EAAI4I,OACJ5I,EAAInkC,UAAY,EAChBmkC,EAAI6I,YAAc,UAClB7I,EAAIW,QAAQ,EAmBHmI,GAAkB7pB,IAsBxB,IAtByB,SAC5B8pB,EAAQ,cAAEC,EAAa,SACvBC,EAAQ,oBAAEC,EAAmB,YAC7BC,EAAW,gBACX3oC,EAAe,WACf4oC,EAAU,MACVhlB,EAAK,YACLilB,EAAW,eACXC,EAAc,OACdnJ,GAaHlhB,EACG,MAAMsqB,EAAiC,IAApBN,EAAS30B,OACtBk1B,EAAmBN,EAAsBF,EAAgBM,EAC/D,IAAIG,EAA2BjpC,EAC3BkpC,EAAiB,EAEjBF,GAAoB,IAEpBC,EAA6C,EAAlBjpC,EAEtBgpC,GAAoB,MAEzBC,EAA2BjpC,GAAmB,EACxC,EACkB,EAAlBA,EAEDgpC,GAAoB,KAEzBC,EAA2BjpC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,GAINkpC,EAAiB,IACjBD,EAA2BjpC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,IAEN6oC,GAAgBlJ,EAAS,GAAKA,EAAS,KACvCsJ,EAA2BjpC,GAG/B,MAAMmpC,EAA2BT,GAAwB/I,IAAWkJ,EAC9DlJ,GACMuJ,GAAkBL,EAAe,EAAIK,GACvCD,GAA4BR,EAAS30B,OAAS,GAClDs1B,EAA2BL,EAAa,GAAKP,EAAgBE,GAAuBD,EAAS30B,OAC7Fu1B,EAA2Bb,EAE3Bc,EAAgC,IAApBf,EAASz0B,QAA8B,EAAb80B,EAAiBO,EAA2BX,EAClF,SACA,eACAtoC,EAA8B,WAAdopC,EAChBL,EACAG,EACAG,EAAkC,WAAdD,EACP,EAAbV,EAAiBO,EACjBE,EACAG,EAAgBX,EAChBlxB,KAAK6I,IAAI+oB,EAAmBf,GAC5Be,EACAE,EAA4B,WAAdH,GACbH,EAA2BX,GAAiB,EAC7C,EACAkB,EAAU/xB,KAAK8I,IACjBkoB,EACAE,EAAclxB,KAAK6I,IAAIipB,EAAa,GAAKA,GAY7C,OATI7lB,GAAO1M,QAAQmN,KACf,mBAAmBT,IACnB0lB,EACAppC,EACA,IACAuoC,EAAUe,EAAeD,EACzBhB,EAAUC,EACVkB,GAEG,CACHd,aACA1oC,gBACAqpC,oBACAC,gBAMAF,YAKAI,UACAC,eAA8B,WAAdL,EAAyBJ,EAAiB,EAC7D,EAaQU,GAAmBA,CAACC,EAAiBC,IACvCD,GAAW,EACZC,GAAU,EACN,GACkC,EAAlCnyB,KAAK8I,KAAe,EAAXopB,EAAcC,GAC3BA,GAAU,GAC4B,EAAlCnyB,KAAK8I,IAAIopB,GAAmB,EAAVC,GAClB,ECvPDC,GAAetrB,IAuBrB,IAvBsB,IACzB+gB,EACA7jB,MAAOquB,EAAQ,UAAEC,EAAS,OAC1BtK,EAAM,iBACNuK,EAAmB,EAAC,cACpBhqC,EAAgBN,EAAoBM,cAAa,OACjDuO,EAAM,SACN07B,GAgBH1rB,EACG,IAAK+gB,IAAQwK,EAAU,MAAO,CAC1BI,WAAY,EACZC,eAAgB,GAChBC,WAAY,EACZC,YAAY,EACZC,SAAU,EACVC,QAAS,GAEb,MAAM,YACFC,EAAW,SACXhoC,EAAQ,UACRioC,GACAR,GACE,aACFzoC,EAAY,iBACZZ,EAAmBJ,EAAgBI,iBAAgB,iBACnDF,EAAmBF,EAAgBE,iBAAgB,UACnDU,GACAoB,EACE0jC,EAAe1jC,EAASnB,SAASopC,IACjC,kBACF/oC,EAAiB,mBACjB9B,EAAkB,SAClB+B,EAAQ,gBACRuI,EAAkBxI,EAAiB,iBACnC3B,EAAmBL,EAAoBK,iBAAgB,gBACvDD,EAAkBJ,EAAoBI,gBAAe,mBACrDM,EAAkB,kBAClB2J,GACAm8B,EACEwE,G3BkCsB,G2BlCT/oC,GACb,WACF2lC,EAAU,aAAEK,EAAY,gBACxBhB,EAAe,oBAAEE,EAAmB,kBACpCK,EAAiB,sBAAEE,EAAqB,iBACxCJ,EAAgB,qBAAEC,EAAoB,gBACtCH,EAAe,oBAAEC,EAAmB,gBACpCN,EAAe,oBAAEC,GACjBT,GAAc3G,EAAK98B,EAAU0jC,EAAcsE,GAEzCzK,EAAqB,EAAI//B,EAAgB,EAC/C,IAAImqC,EAAiB,GACjBD,EAAa,EACbE,EAAa,EACbC,GAAa,EACjB,MAAMjG,OAA6BlwB,IAAd61B,EAErB,IAAIY,EAAkC,OAAhBX,QAAgB,IAAhBA,IAAoB,EAEtCY,GAAa,EACbC,EAAc,EAElB,MAAMC,EAbQhB,EAASnxB,WAAW,IAAI/M,OAAOa,GAA6B,KAAM,IAarDoH,MAAM7H,IAAoBqW,QAAOtV,GAAkB,MAATA,GAA2B,KAAVA,IACtF,IAAK,IAAIgnB,EAAM,EAAGA,EAAM+W,EAAal3B,OAAQmgB,IAAO,CAChD,MAAMgX,EAA6B,IAARhX,EACrBiX,EAAWF,EAAa/W,GAG9B,G3BxHsB,W2BwHlBiX,EAA6B,CAC7BL,EAAkB,EAElBT,GADsBhgC,EAAkBu1B,EACVM,EAE1BgL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,G3BjBgB,W2BiBZA,EAA4B,CACjCL,EAAkB,EAElBT,GADsBxoC,EAAoB+9B,EACZM,EAE1BgL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAI,SAAM5kB,KAAK4kB,GAAW,CAC3BL,EAAkB,EAClBhE,EAAgB5mC,GAChB,MAAMkrC,EAAgB3L,EAAIkB,YAAYwK,GAAU90C,MAAQupC,EACxDoH,IACAqD,GAAce,EAAgBlL,EAE1BgL,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAI59B,GAAqBgZ,KAAK4kB,GAAW,CAC1CL,EAAkB,EAClB3D,IACA,MAAMiE,EAAgB3L,EAAIkB,YAAYwK,GAAU90C,MAAQupC,EACxDwH,IACAiD,GAAce,EAAgBlL,EAE9BqK,GAAc,EACVW,IACAF,EAAc,EACdV,EAAiBa,EAAS,GAElC,MAEK,GAAIx8B,GAAW4X,KAAK4kB,GAAW,CAChC,MAAO3C,EAAU6C,EAAU3C,EAAW,IAAMyC,EAASryB,WAAW,OAAQ,IAAI9E,MAAM,SAC5E80B,EAA2B,OAAbuC,GAGhBhB,WAAY5B,GACZuB,GAAa,CAAEvK,MAAK7jB,MAAO4sB,EAAU0B,YAAWtK,SAAQz/B,gBAAegqC,iBAAkB,EAAGz7B,SAAQ07B,aAGxG/C,IACA,MAAMsB,EAAsBD,EACvB10B,MAAM,IACN/G,KAAIq3B,GAAUF,GAAe,CAAE3E,MAAK6E,SAAQ/iC,YAAWI,aAAc,WAAYi+B,OAAQ,IAAK4E,aAC9FtlC,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GACrCmoC,IAGA,MAAQoC,QAASD,EAAW,cAAED,GAAkBlB,GAAgB,CAC5DG,WACAC,oBAAqBA,EAAsB/I,EAC3C4I,WACAC,gBACAG,YAAaiC,EAAajL,EAC1B3/B,kBACA4oC,WAAY9nC,EAAmBe,EAAW89B,EAC1CkJ,cACAC,eAAgBnJ,EAChBA,OAA8B,aAArB/+B,GAAmC2nC,EAASz0B,OAAS,EAAK6D,KAAK6I,IAAI,EAAGmf,E3B1E/D,I2B0E4F,IAE1G+J,EAA8B,IAApBjB,EAAS30B,OACnB6D,KAAK8I,IAAImqB,EAAYpC,EAAgB55B,IACrC66B,EACAgB,EAAUf,EACVc,EAAWd,EACXnF,EAAa5sB,KAAK8I,IAAI+oB,EAAehB,GACrC6C,EAAgBzB,GAAiBiB,EAAiBJ,GAExDI,EAAkBL,EAClBJ,GAAc7F,EAAa8G,EAC3Bf,GAAc,EAEVW,IACAH,GAAa,EACbC,EAAcN,EACdJ,EAAiB9B,EAAS,GAElC,MAEK,GAAIt8B,GAAeqa,KAAK4kB,GAAW,CAEpC,MAAMI,EAA6BrhC,EAC7B,EAAIA,EAAoB,EACxBg2B,EACNT,EAAIt/B,eAAoBorC,EAA6B,GAAKZ,EAAYjoB,cAAcN,aAAhE,KAEpB,IAAIopB,EAAiBL,EACjBC,EAAgB,EAMpB,KAA0B,KAAnBI,GAAuB,CAC1B,IAAIC,EAAgBD,EAAe,GAC/BE,EAAqBF,EAAe3rB,MAAM,GAC1CylB,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAEhG2V,GAAyBua,KAAKklB,IAC9BhE,EAAWlnC,GACX+kC,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGyxC,EAAavnC,IAGRuL,GAAmBya,KAAKklB,IAC7BhE,EAAW1nC,GACXulC,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGyxC,EAAa/nC,IAGR2N,GAAY6Y,KAAKklB,IACtB7E,IACAtB,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGwwC,KAGK95B,GAAqBwZ,KAAKklB,IAAgC,QAAdlqC,GACjD0lC,IACA3B,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChG6wC,KAIA5B,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAEpG+0C,GAAiB9F,EACjBkG,EAAiBE,CACrB,CAEA,MAAMhB,EAAU9yB,KAAK8I,IAAImqB,EAAYO,EAAgBv8B,IAC/C47B,EAAWC,EAGjBL,GAAce,EAFQvB,GAAiBiB,EAAiBJ,GAGxDI,EAAkBL,EAEdS,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,IAE9B1L,EAAIt/B,cAAgB,KACxB,MAEK,GAAI4M,GAAqBwZ,KAAK4kB,IAA2B,QAAd5pC,EAAqB,CACjE0lC,IACA,MAAMmE,EAAgB3L,EAAIkB,YAAYwK,GAAU90C,MAAQ6pC,EACxDgH,IAEA,MAAMwD,EAAU9yB,KAAK8I,IAAImqB,EAAYO,EAAgBv8B,IAC/C47B,EAAWC,EAGjBL,GAAce,EAFQvB,GAAiBiB,EAAiBJ,GAGxDI,EAAkBL,EAEdS,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,GAElC,KACK,CACD,MAAM,WAAE3G,GAAeJ,GAAe,CAAE3E,MAAK6E,OAAQ6G,EAAU5G,eAAchjC,YAAWI,eAAci+B,WAChGwL,EAAgB5G,EAAatE,EAC7BwK,EAAU9yB,KAAK8I,IAAImqB,EAAYO,EAAgBv8B,IAC/C47B,EAAWC,EAGjBL,GAAce,EAFQvB,GAAiBiB,EAAiBJ,GAGxDI,EAAkBL,GAEF,QAAX/7B,GAAgC,QAAXA,GAAoB,MAAM6X,KAAK4kB,MAClB,IAAhCp9B,GAAawY,KAAK4kB,KAErBZ,GAAc,EACVrW,IAAQ+W,EAAal3B,OAAS,IAAGy2B,GAAa,IAElDU,IACAF,EAAcN,EACdJ,EAAiBa,EAAS,IAE1Bj9B,GAAsBqY,KAAK4kB,KAC3BH,EAAc,EACdF,EAAkB,EAE1B,CACJ,CAEA,MAAO,CACHT,aACAE,aACAC,aACAF,iBACAG,SAAUK,EACVJ,QAASM,EACTD,aACH,EAQQY,GAAc9c,IAgBpB,IAhBqB,IACxB4Q,EAAG,KACHmM,EAAI,MACJv1C,EACAupC,OAAQiM,EAAU,OAClBn9B,EAAM,OACNo9B,EAAM,SACN1B,GASHvb,EACG,MAAMkd,EAAY7F,GAAa0F,GAC/B,IAAII,EAAoB,EACpBC,EAAiB,EACjBC,EAAa,EAEjB,IAAK,IAAIhY,EAAM,EAAG0L,EAASiM,EAAY3X,EAAM6X,EAAUh4B,OAAQmgB,IAAO,CAClE,MAAMtY,EAAQmwB,EAAU7X,GAClBgW,EAAY6B,EAAU7X,EAAM,GAElC,GAAItY,IAAUpP,GAAuB,CACjCozB,EAAS,EACT,QACJ,CACK,GAAIhkB,IAAUnP,GAAqB,CACpCmzB,EAASiM,EACT,QACJ,CACA,MAAM,WACFtB,EAAU,WACVF,EAAU,WACVG,EAAU,QACVE,EAAO,SACPD,EAAQ,eACRH,GACAN,GAAa,CAAEvK,MAAK7jB,QAAOsuB,YAAWtK,SAAQuK,iBAAkB+B,EAAatM,EAAQwK,WAAU17B,WAQnGw9B,EAAazB,EAAW7K,EACxBoM,GAAqB3B,EAAazK,IANrB,IAAR1L,GAAawW,EAAU,GAA2D,EAAvD9yB,KAAK6I,I3B5QN,G2B4QmCiqB,EAAU9K,GAAe,IAE9E,IAAR1L,GAAa1mB,GAAiB+Y,KAAK+jB,G3B7QH,E2B6QqD1K,EAAS,IAKnGqM,GAAkB1B,GAAcC,QAA4Bn2B,IAAd61B,EAA0B,EAAI,EAChF,CACA,MAAMiC,EAAqBF,EAAiB,GAAK51C,EAAQ21C,GAAqBC,EAAiB,EAO/F,MAAO,CACHF,YACAK,WAReN,EACF,QAAXp9B,EACIy9B,EAAqB,IAAQ,EAAIA,EACjCA,EAAqB,KAAQ,EAAIA,EACrCA,EAKL,EC1YQE,GAAiB3tB,IAgBvB,IAhBwB,IAC3B+gB,EAAG,OACH9e,EAAM,cACN2rB,EAAa,oBACbC,EAAsB,EAAC,MACvBl2C,EAAK,OACLqY,EAAM,SACN07B,GASH1rB,EACG,MAAM,SAAE/b,EAAQ,UAAEioC,GAAcR,GAC1B,cAAEjqC,GAAkBwC,EAASnB,SAASopC,GACtC4B,EAAyG,GACzGC,EAAmBH,EAAcptC,QAAO,CAACwtC,EAAsBC,KAEjE,MAAMd,GAAclrB,GAAU,IAAM,IAAMA,GAAU,IAC9CisB,EAAcv2C,EAAQw1C,EACtBE,EAAY7F,GAAayG,GAAM,GACrC,IAAIE,EAAiB,EACjBC,EAAqB,GACrBC,EAAmB,EACnBb,EAAa,EACbc,EAAmB,EAEvB,IAAK,IAAI9Y,EAAM,EAAG0L,EAASiM,EAAY3X,EAAM6X,EAAUh4B,OAAQmgB,IAAO,CAClE,MAAMtY,EAAQmwB,EAAU7X,GAClBgW,EAAY6B,EAAU7X,EAAM,GAK9BtY,IAAUpP,IACVwgC,GAAoB,EACpBpN,EAAS,GACFhkB,IAAUnP,KACjBugC,GAAoB,EACpBpN,EAASiM,GAEb,IAAI,eACAvB,EAAc,WACdD,EAAU,SACVI,EAAQ,QACRC,GACAV,GAAa,CAAEvK,MAAK7jB,QAAOsuB,YAAWtK,SAAQuK,iBAAkB+B,EAAYx9B,SAAQvO,gBAAeiqC,aAQvG,IAAI6C,EAAa5C,GAAc2C,EAAmB,EAAInB,EAAa,IAJ5C,IAAR3X,GACRwW,EAAU,GAA2D,EAAvD9yB,KAAK6I,I5BoDC,G4BpD6Bmf,EAAQ8K,GAAgB,IACrEl9B,GAAiB+Y,KAAK+jB,G5BoDA,E4BpDkD,GAC7E,GAGN,GAAIyC,EAAmBE,EAAaL,EAAa,CAC7C,IAAIhB,EAAOkB,EAASvhC,KAAK,IAAIkmB,OACzBub,EAAmB,IAAGpB,GAAcn/B,IACpCugC,EAAmB,IAAGpB,EAAOp/B,GAAwBo/B,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACArrB,gBAAiBI,EACjBmrB,QAAQ,EACRqB,gBAAiBJ,IAGrB,IAAI,WACA1C,EAAU,SACVI,EAAQ,QACRC,GACAV,GAAa,CAAEvK,MAAK7jB,QAAOsuB,YAAWtK,SAAQuK,iBAAkB,EAAGz7B,SAAQ07B,aAK/E2C,EADiB1C,IAFDK,EAAU,GAA2D,EAAvD9yB,KAAK6I,I5B6BZ,G4B7B0Cmf,EAAQ8K,GAAgB,IAClFl9B,GAAiB+Y,KAAK+jB,G5B6BA,E4B7BkD,IAG/E4B,EAAazB,EACbqC,EAAW,CAAClxB,GACZixB,GAAkB,CACtB,MACIE,GAAoBE,EACpBf,EAAazB,EACbqC,EAASI,KAAKtxB,EAEtB,CAGA,IAAIgwB,EAAOkB,EAASvhC,KAAK,IAAIkmB,OAW7B,OAVIub,EAAmB,IAAGpB,GAAcn/B,IACpCugC,EAAmB,IAAGpB,EAAOp/B,GAAwBo/B,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACArrB,gBAAiBI,EACjBmrB,QAAQ,EACRqB,gBAAiBJ,IAGdL,EAAuBG,CAAc,GAC7C,IAAyB,OAAnBN,QAAmB,IAAnBA,IAAuB,GAEhC,MAAO,CAAEC,kBAAiBC,mBAAkB,ECxGnCW,GAAe1uB,IAgCrB,IAhCsB,IACzB+gB,EAAG,SACH39B,EAAQ,KACR49B,EAAI,SAAEC,EAAQ,SACd+I,EAAQ,oBAAEC,EAAmB,SAC7BH,EAAQ,cAAEC,EAAa,YACvBG,EAAW,gBACX3oC,EAAe,oBACfW,EAAmB,aACnBE,EAAY,iBACZC,EAAgB,OAChB6+B,EAAM,UACNr+B,EAAS,WACT8rC,EAAU,YACVvE,EAAW,iBACXjoC,GAiBH6d,EACG,MAAM,kBAAE2oB,EAAiB,sBAAEE,EAAqB,WAAEK,EAAU,WAAEH,GAAe4F,EAEvEC,EAA+C,aAArBzsC,GAAmC2nC,EAASz0B,OAAS,EAC/E6D,KAAK6I,IAAI,EAAGmf,E7ByEU,I6BxEtB,GACA,WACFiJ,EAAU,cACV1oC,EAAa,kBACbqpC,EAAiB,QACjBG,EAAO,UACPJ,EAAS,eACTK,GACArB,GAAgB,CAChBG,WAAUC,sBACVH,WAAUC,cAAeA,EAAgB7I,EACzCgJ,cAAa3oC,gBAAiBA,EAAkB2/B,EAChDiJ,WAAY/mC,EAAWf,EACvB+nC,cACAC,eAAgBnJ,EAChBA,OAAQ0N,IAENC,EAAW/D,EAAoBf,EAAgB7I,EAErD,GAAwB,IAApB8I,EAAS30B,OAAc,MAAO,CAC9By1B,oBACAG,WAIJ,MAAM6D,EAAqB1E,EACrBlxB,KAAK6I,IAAI,EAAGgoB,EAAgB7I,EAAS4J,GACrC,EAGAiE,EAAiB3E,EACjB0E,EACCF,GAAwC,WAAd/D,EACvB+D,EACA1D,EAEV,IAAI8D,EAAchO,EAClBkI,KACIkB,GAAe2E,KACfhG,EAAWgG,EAAgB,GAC3BC,EAAchO,EAAO+N,GAGP,WAAdlE,GACAmE,GAAe7E,EAEV0E,EAEME,EAAiBD,IACxBE,IAAgBjF,EAAgB7I,EAAS6N,EAAiBjE,GAAqB,EAAIiE,GAFnFC,IAAgBjF,EAAgB7I,EAAS4J,GAAqB,GAKlEkE,GAAevtC,EAAgB,EAGnC,IAAK,MAAMmkC,KAAUoE,EAAU,CAE3BrB,IACA,MAAM,MAAEhxC,EAAK,WAAEmuC,GAAeJ,GAAe,CAAE3E,MAAK6E,SAAQ/iC,YAAWI,aAAc,WAAYi+B,OAAQ,IACnGoG,GAAkB3vC,EAAQmuC,GAAc,EAC9C+C,IAEAF,EAAkBvmC,GAClB2+B,EAAIgB,SAAS6D,EAAQoJ,EAAc1H,EAAgBrG,EAAW79B,EAAWlB,GACzE2mC,IACAmG,GAAgBlJ,EAAarkC,CACjC,CAMA,OALI2oC,GAAe2E,IACf7F,IAEJH,EAAW7H,EAAQ,GAEZ,CACH4J,oBACAG,UACH,EC7EQgE,GAAWjvB,IAsBjB,IAtBkB,IACrB+gB,EAAG,UACHsM,EAAS,SACT9tC,EAAQ,aAAED,EAAY,WACtBouC,EAAa,EACbxM,OAAQiM,EAAU,OAAEnrC,EAAS,EAAC,SAC9B0pC,EAAQ,OACR17B,EAAM,WACNg3B,EAAU,MACV7hB,GAAQ,GAaXnF,EACG,MAAM,YACFisB,EAAW,SACXhoC,EAAQ,UACRioC,GACAR,EACE/D,EAAe1jC,EAASnB,SAASopC,IACjC,kBACFv7B,EAAiB,aACjBvO,EAAeH,EAAgBG,aAAY,oBAC3CF,EAAsBD,EAAgBC,oBAAmB,iBACzDC,EAAmBF,EAAgBE,iBAAgB,iBACnDE,EAAmBJ,EAAgBI,iBAAgB,aACnDY,EAAY,UACZJ,EAAS,mBACTqB,EAAqB,CAAC,GACtBD,GACE,mBACF7C,EAAqBD,EAAoBC,mBAAkB,kBAC3D+B,EAAiB,mBACjB9B,EAAqBF,EAAoBE,mBAAkB,SAC3D+B,EAAQ,gBACR7B,EAAkBJ,EAAoBI,gBAAe,gBACrDoK,EAAkBxI,EAAiB,iBACnC3B,EAAmBL,EAAoBK,iBAAgB,cACvDC,EAAgBN,EAAoBM,cAAa,mBACjDE,EAAqBR,EAAoBQ,mBAAkB,mBAC3DE,EAAqBV,EAAoBU,mBAAkB,kBAC3D2J,GACAm8B,EACEgH,EAAajH,GAAc3G,EAAK98B,EAAU0jC,EAAcsE,IACxD,sBACFpD,EAAqB,kBAAEF,EAAiB,oBACxCL,EAAmB,gBAAEF,EAAe,oBACpCD,EAAmB,gBAAED,EAAe,qBACpCQ,EAAoB,iBAAED,EAAgB,WACtCM,EAAU,aAAEK,EAAY,gBACxBb,EAAe,oBAAEC,EAAmB,qBACpCM,EAAoB,WAAEI,GACtByF,EAEEnN,EAAqB,EAAI//B,EAAgB,EACzCw/B,EAAW3hC,EAAe0C,EAChC,IAAIypC,GAAmB,EACnByD,GAAuE,GACvEC,GAA+B,EAC/BC,GAAY7vC,EAKhB,IAAK,IAAI8vC,EAAW,EAAGnO,EAASiM,EAAYkC,EAAWhC,EAAUh4B,OAAQg6B,IAAY,CACjF,MAAMnyB,EAAQmwB,EAAUgC,GAExB,GAAInyB,IAAUpP,GAAuB,CACjCozB,EAAS,EACTH,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC,QACJ,CACK,GAAIjsB,IAAUnP,GAAqB,CACpCmzB,EAASiM,EACTpM,EAAIrgB,MAAMwgB,EAAQ,GAClB,QACJ,CACA,MAAMoO,G9BRkB,G8BQYpO,EAC9BiL,EAAa/oC,EAAWksC,EACxB9D,EAAY6B,EAAUgC,EAAW,GACjCE,EAAelC,EAAUgC,EAAW,GACpCG,GAAwB,CAC1BzO,MACAG,SACAz/B,gBACAuO,SACA07B,YAEE+D,GAAsB,CACxB1O,MACAE,WACAC,SACA8F,cAEEuF,GAAervB,EAAM5H,MAAM7H,IAAoBqW,QAAOtV,GAAkB,MAATA,GAA2B,KAAVA,KAEhF,eACFo9B,GAAc,QACdI,GACAD,SAAU2D,GACV/D,WAAYgE,GAAe,WAC3B9D,IACAP,GAAa,CACbpuB,QAAOsuB,YAAWC,iBAAkBA,GAAmBvK,KAAWsO,KAIhEI,GAAsB,IAAbP,GACRrD,GAAU,GAA2D,EAAvD9yB,KAAK6I,I9BhDK,G8BgDwBiqB,GAAU9K,GAAe,IACrEpyB,GAAiB+Y,KAAK+jB,I9BhDI,E8BgD8C,GAC7E,EACN,IAAIiE,GAAeT,GAAYQ,GAC3BxD,GAAkBX,GAGtB,IAAK,IAAIqE,EAAc,EAAGA,EAAcvD,GAAal3B,OAAQy6B,IAAe,CAAC,IAADC,GAAAC,GACxE,MAAMvD,EAAWF,GAAauD,GACxBG,EAA4C,QAAhCF,GAAGxD,GAAauD,EAAc,UAAE,IAAAC,MAAIvE,EAChD0E,EAA4C,QAA7BF,GAAGzD,GAAa8C,EAAW,UAAE,IAAAW,MAAIT,EAGtD,GAAIryB,IAAUpP,IAAyBoP,IAAUnP,SAE5C,G9BpLa,W8BoLT0+B,EACLyC,GAAiBV,KAAK,CAAExN,KAAM6O,GAAcpsB,KAAM9X,EAAiBs1B,aACnE4O,IAAgBlkC,EAAkB61B,EAClC4K,GAAkB,EAClB+C,GAA+B,OAG9B,G9BzEY,W8ByER1C,EACLvD,IACAI,GAAWvI,EAAK8O,GAAcvwC,EAAe8B,EAAoB+B,EAAmB4M,GAAiBC,IACrG6/B,IAAgB1sC,EAAoBq+B,EACpCsH,EAAqB5H,EAAQl/B,GAE7BoqC,GAAkB,EAClB+C,GAA+B,OAG9B,GAAI,SAAMtnB,KAAK4kB,GAChBvD,IACAd,EAAgB5mC,GAChBqlC,GAAW,IACJ4I,GACH7J,OAAQ6G,EACRzL,KAAM6O,GAAe3O,EACrBD,SAAU3hC,GAA2B,QAAX0Q,EAAmB,EAAI,KAErD6/B,IAAgB9O,EAAIkB,YAAYwK,GAAU90C,MAAQ6pC,EAClD8G,IACAQ,EAAqB5H,EAAQl/B,GAE7BoqC,GAAkB,EAClB+C,GAA+B,OAG9B,GAAItgC,GAAqBgZ,KAAK4kB,GAC/BvD,IACAT,IACA5B,GAAW,IACJ4I,GACH7J,OAAQ6G,EACRzL,KAAM6O,GAAe3O,EACrBD,SAAU3hC,EAAeqC,IAE7BkuC,IAAgB9O,EAAIkB,YAAYwK,GAAU90C,MAAQ6pC,EAClDkH,IACAI,EAAqB5H,EAAQl/B,GAE7B6tC,IAAgBnC,EAChBtB,GAAkB,EAClB+C,GAA+B,OAG9B,GAAIl/B,GAAW4X,KAAK4kB,GAAW,CAChC,MAAO3C,EAAU6C,EAAU3C,EAAW,IAAMyC,EAASryB,WAAW,OAAQ,IAAI9E,MAAM,SAC5E80B,EAA2B,OAAbuC,GAEZhB,WAAY5B,GAAkBuB,GAAa,CAC/CpuB,MAAO4sB,EAAU0B,UAAWyE,EAC5BxE,iBAAkB,KACf+D,KAIP7G,IACA,MAAMsB,EAAsBD,EACvB10B,MAAM,IACN/G,KAAIq3B,GAAUF,GAAe,CAAE3E,MAAK6E,SAAQ/iC,YAAWI,aAAc,WAAYi+B,OAAQ,IAAK4E,aAC9FtlC,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GACrCmoC,IAGA,MAAM,cACFkC,EACAE,QAASD,GACTnB,GAAgB,CAChBG,WACAC,sBACAH,WACAC,cAAeA,EAAgB7I,EAC/BgJ,YAAaiC,EACb5qC,gBAAiBA,EAAkB2/B,EACnCiJ,WAAY/mC,EAAWf,EACvB+nC,cACAC,eAAgBnJ,EAChBA,OAA8B,aAArB/+B,GAAmC2nC,EAASz0B,OAAS,EAAK6D,KAAK6I,IAAI,EAAGmf,E9B9InE,I8B8IgG,IAE1G+J,EAA8B,IAApBjB,EAAS30B,OACnB6D,KAAK8I,IAAImqB,EAAYpC,EAAgBuF,GACrCtE,EACAe,EAAWd,EACXe,EAAUf,EAEV2B,EAAgBzB,GAAiBiB,GAAiBJ,GAClDmE,EAAkBnE,EAAU,EAAIA,EAAUY,EAAgB,GAG5DP,WAAY+D,EACZpE,QAASqE,GACT/E,GAAa,CACbpuB,MAAO+yB,EAAczE,UAAW0E,EAChCzE,iBAAkBM,EAAW7K,KAC1BsO,KAEDc,EAAcD,EAA0BnP,EACxCqP,EAAiBpF,GAAiBY,EAAUuE,GAE5CE,EAAmBL,GADApE,EAAW,EAAIA,EAAWwE,EAAiB,GAEpE,IAAIE,EAAkB,EAClBC,EAA2B,EAG3BF,EAAmB,GAAKF,IAAgB,GAAKF,GAC7CK,GAAmBD,EAA8C,EAA3Bt3B,KAAK8I,IAAIsuB,EAAa,IAAU,EACtEI,EAA2Bx3B,KAAK8I,IAAIsuB,EAAa,GAAKG,GAGtDA,EAAkBN,EAEtB,MAAMQ,EAAuBd,IACtB5E,EAAU,GAAK2B,EAAiBgD,IAAUA,GAASa,GACpDtB,GACNA,GAA+BuB,EAG/BzB,GAAS,CACLlO,MACA/wB,SACA07B,WACA2B,UAAW7F,GAAasC,GACxBxqC,aAAc2hC,EACd1hC,SAAUoxC,EACVzP,SACAl/B,SACA0rC,WAAY,EACZ1G,aACA7hB,OAAO,IAIX,MAAMgc,EAAmBJ,EAAItkC,UACvBm0C,EAAqB7P,EAAI6I,YACzBiH,EAAqB9P,EAAIrjC,YACzBozC,EAAuB/P,EAAInjC,cAC3BmzC,EAAuBhQ,EAAIpjC,cAC3BqzC,EAAoBjQ,EAAIljC,WAC1B8S,IACAowB,EAAItkC,UAAYkU,EAChBowB,EAAI6I,YAAc,GAClB7I,EAAIrjC,YAAc,GAClBqjC,EAAInjC,cAAgB,EACpBmjC,EAAIpjC,cAAgB,EACpBojC,EAAIljC,WAAa,GAIrB6wC,GAAa,CACT3N,MACA39B,WACA49B,KAJyB6O,GAAejD,EAIZ3L,WAC5B+I,WAAUC,sBACVH,WAAUC,gBACVG,YAAaiC,EACb5qC,kBACAW,sBACAE,eACAC,mBACA6+B,SACAr+B,YACA8rC,aACAvE,cACAjoC,qBAGJ4+B,EAAItkC,UAAY0kC,EAChBJ,EAAI6I,YAAcgH,EAClB7P,EAAIrjC,YAAcmzC,EAClB9P,EAAInjC,cAAgBkzC,EACpB/P,EAAIpjC,cAAgBozC,EACpBhQ,EAAIljC,WAAamzC,EAEjBnB,IAAgB32B,KAAK8I,IAAI+nB,EAAgB7I,EAAQ6J,GAAiB6B,EAAgBc,EAClFtB,GAAkBL,CACtB,MAEK,GAAIv+B,GAAeqa,KAAK4kB,GAAW,CACpC,MAAMI,EAA6BrhC,EAC7B,EAAIA,EAAoB,EACxBg2B,EACNT,EAAIt/B,eAAoBorC,EAA6B,GAAKZ,EAAYjoB,cAAcN,aAAhE,KAOpB,MAAMutB,EAAqBlQ,EAAIkB,YAAYwK,GAAU90C,MAAQupC,EACvD8K,EAAU9yB,KAAK8I,IAAImqB,EAAY8E,EAAqB3B,GACpDvD,EAAWC,EAEjB6D,IADsB1E,GAAiBiB,GAAiBJ,GAIxD,IAAIc,EAAiBL,EACjByE,EAAkBrB,GACtB,KAA0B,KAAnB/C,GAAuB,CAC1B,IAAIC,EAAgBD,EAAe,GAC/BE,EAAqBF,EAAe3rB,MAAM,GAC1CylB,EAAoB,EACxB,MAAMuK,EAA4B,IAC3B1B,GACH3I,UAAW5iC,EAAmB6oC,GAC9BnH,OAAQmH,EACR/L,KAAMkQ,GAEV,GAAI5jC,GAAyBua,KAAKklB,GAC9BhE,EAAWlnC,GACX+kC,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGkvC,GAAW,IACJsK,EACHnQ,KAAMkQ,EAAkBrvC,EACxBo/B,SAAUA,EAAWp/B,IAEzBunC,EAAavnC,QACV,GAAIuL,GAAmBya,KAAKklB,GAAgB,CAC/ChE,EAAW1nC,GACXulC,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChG,MAAMy5C,EAAgBxK,EAAoB7F,EAAIkB,YAAY8K,GAAep1C,MAAQ0J,EAC3E6X,KAAKm4B,MAAMzK,GAAqB,EAAIvlC,IAAuB,EAC3D,EACNwlC,GAAW,IACJsK,EACHnQ,KAAMkQ,EAAkB7vC,EAAqB+vC,EAC7CnQ,SAAUA,EAAW5/B,IAEzB+nC,EAAa/nC,EACjB,MAAW2N,GAAY6Y,KAAKklB,IACxB7E,IACAtB,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGkvC,GAAWsK,GACXhJ,KACO95B,GAAqBwZ,KAAKklB,IAAgC,QAAdlqC,GACnD0lC,IACA3B,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGkvC,GAAWsK,GACX3I,MAEA5B,EAAoB7F,EAAIkB,YAAY6K,GAAgBn1C,MAAQopC,EAAIkB,YAAY+K,GAAoBr1C,MAChGkvC,GAAWsK,IAEfD,GAAmBtK,EAAoB1F,EACvC4L,EAAiBE,CACrB,CAEA6C,GAAeqB,EACf9E,GAAkBL,EAClBoD,GAA+B,EAC/BpO,EAAIt/B,cAAgB,KACxB,MAEK,GAAI4M,GAAqBwZ,KAAK4kB,IAA2B,QAAd5pC,EAAqB,CACjE,MAAM+iC,EAAS6G,EACflE,IAEA,MAAMrB,EAAcnG,EAAIkB,YAAY2D,GAAQjuC,MAAQ6pC,EAAqBN,EACnE8K,EAAU9yB,KAAK8I,IAAImqB,EAAYjF,EAAcoI,GAC7CvD,EAAWC,EAGjB6D,IAFsB1E,GAAiBiB,GAAiBJ,GAGxDnF,GAAW,IAAK4I,GAAqB7J,SAAQ5E,KAAM6O,KACnDA,IAAgB3I,EAEhBsB,IAEA4D,GAAkBL,EAClBoD,GAA+B,CACnC,KAEK,CACD,MAAMvJ,EAAS6G,EACT1F,EAAerB,GAAe,CAChC3E,MACA6E,SACA/iC,YACAI,eACA4iC,kBAA+BlwB,IAAjBs6B,EACd/O,WAEEgG,EAAcH,EAAajB,WAAatE,EAAqBN,EAC7D8K,EAAU9yB,KAAK8I,IAAImqB,EAAYjF,EAAcoI,GAC7CvD,EAAWC,EAGjB6D,IAFsB1E,GAAiBiB,GAAiBJ,GAGxDnF,GAAW,IACJ4I,GACH7J,SACA5E,KAAM6O,GACN/I,UAAW5iC,EAAmB0hC,GAC9BmB,iBAEJ8I,IAAgB3I,GAEA,QAAXl3B,GAAgC,QAAXA,GAAoB,MAAM6X,KAAK+d,MACpB,IAA9Bv2B,GAAawY,KAAK+d,KAErBiK,IAAgBnC,GAEfl+B,GAAsBqY,KAAK+d,KAASwG,GAAkBL,GAC3DoD,GAA+B,CACnC,CACJ,CAGA1D,GAAmBiE,GAAgBxO,EAC/B/b,GAAO2b,GAAW,CAAEC,MAAKE,WAAUD,KAAMoO,GAAWz3C,MAAOg4C,GAAkBzO,EAAQA,WACzFkO,IAAaO,GAAkBzO,EAAS2K,GAAa6B,EAAakC,EACtE,CAEA,MAAO,CACHR,aACAF,oBACH,ECjcQoC,GAAoBA,CAC7B54C,EACAsX,EACAyxB,KAEA,MAAM,UACF8P,GAAY,EAAI,eAChBj+B,GAAiB,EAAI,eACrBk+B,EAAiB,YACX,OAAN/P,QAAM,IAANA,IAAU,CAAC,EACTgQ,EAAsB,OAAJ/4C,QAAI,IAAJA,IAAQ,GAGhC,IAAIg5C,EAAiB,GACjBC,EAA2B,QAAX3hC,EACdnE,GACAC,GACN,IAAK,MAAM85B,KAAU6L,EAAiB,CAAC,IAADG,EAClCF,GAAuC,QAAzBE,EAAID,EAAc/L,UAAO,IAAAgM,IAAIhM,CAC/C,CAIA,MAAMiM,EAAmBH,EAuBnBI,GApByBP,EACzBM,EACGh8B,QAAQ,8BAA+B,GAAGjI,OAAiBC,MAC9DgkC,GAIDh8B,QAAQ,uBAAwB,YAChCA,QAAQ,KAAM,UACdA,QAAQ5H,GAA4B,YACpC4H,QAAQ,KAAM,UACdA,QAAQ,MAAO,UACfA,QAAQ,WAAO,UAEfA,QAAQ,kCAAwBk8B,IAC7B,MAAMC,EAA4BjmC,GAAmBgmC,GAErD,OAAgC,OAAzBC,QAAyB,IAAzBA,IAA6BD,CAAC,IAKxC33B,WAAW,IAAI/M,O/BvFW,gB+BuFiB,MAAM0kC,GAAKA,EAAE33B,WAAW,KAAMtM,IAAuBsM,WAAW,KAAMrM,MAEjHqM,WAAW,IAAI/M,O/BnDO,Y+BmDiB,MAAM0kC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OAiBvEskC,GAdsC,QAAXjiC,IAAuC,IAAnBsD,EAC/Cw+B,EACAA,EACG13B,WAAW,IAAI/M,OAAOiB,GAAoB,MAAMyjC,IAAM,IAADG,EAClD,MAAMC,EAAsD,QAAvCD,EAAG3xC,EAAkBwxC,GAAGP,UAAe,IAAAU,IAAI3xC,EAAkBwxC,GAAG3xC,SAErF,MAAO,GAAGsN,KAAeykC,IAAkBxkC,IAAe,KASjEyM,WAAW,IAAI/M,OAAOE,GAAmB,MAAMwkC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OAC1EyM,WAAW,IAAI/M,O/BpEc,4G+BoEiB,MAAM0kC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OAC/EyM,WAAW,IAAI/M,OAAOuB,GAA0B,MAAMmjC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OACjFyM,WAAW,IAAI/M,O/BrEQ,+C+BqEiB,MAAM0kC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OACzEyM,WAAW,IAAI/M,O/BrES,yB+BqEiB,MAAM0kC,GAAK,GAAGrkC,KAAeqkC,IAAIpkC,OAQ/E,IAAIykC,EAA8B,GAC9BC,EAAe,EACnB,IAAK,MAAMzM,KAAUqM,EACbrM,IAAWl4B,IACU,IAAjB2kC,GAAoBD,EAA4B5D,KAAK5I,GACzDyM,GAAgB,GACTzM,IAAWj4B,IAClB0kC,GAAgB,EACK,IAAjBA,GAAoBD,EAA4B5D,KAAK5I,IACtDwM,EAA4B5D,KAAK5I,GAW5C,OARsBwM,EAA4BvlC,KAAK,IAClDuN,WAAW,GAAGvM,KAAgBF,KAAiB,GAAGA,KAAgBE,MAClEuM,WAAW,GAAG1M,KAAeE,KAAgB,GAAGA,KAAeF,MAC/D0M,WAAW,GAAGtM,KAAwBH,KAAiB,GAAGA,KAAgBG,MAC1EsM,WAAW,GAAG1M,KAAeK,KAAuB,GAAGA,KAAsBL,MAC7E0M,WAAW,GAAGxM,KAAeC,KAAiB,IAC9CuM,WAAW,GAAG1M,KAAeC,KAAiB,GAE/B,ECtIX2kC,GAA6BtyB,IAUnC,IAVoC,OACvChQ,EAAM,SACNuiC,EAAQ,aACRC,EAAY,aACZC,GAMHzyB,EACG,MAAM0yB,EAAgB,CAAC1iC,EAAQyiC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC9E1uB,QAAOtV,GAAmB,KAAVA,IAAc3B,KAAK,KAClC8lC,EAAc,CAAC3iC,EAAQyiC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC5E1uB,QAAOtV,GAAmB,KAAVA,IAAc3B,KAAK,KAExC,IAAI5I,EAAWf,EAAeyvC,GAM9B,OALIH,GAAgBC,GAAgBF,GAAuB,QAAXviC,IAC5C/L,EAAWlB,EACXkB,EAASnB,SAAWS,GAGjB,CACHovC,cACA1uC,WACA2uC,SAAUxzC,EAAqBszC,GAClC,GAID/6C,MAAOipC,IACPlpC,EACSm7C,GAAa1iB,IA0BnB,IAAD2iB,EAAA,IA1BqB,IACvB/R,EAAG,QACHgS,EAAO,SACPR,GAAW,EAAK,SAChBtuC,EAAWf,EAAexD,IAAG,UAC7BszC,EAAS,SACTJ,EAAWxzC,EAAqB,YAAW,iBAC3CmT,EAAmB,SAAQ,OAC3BvC,EAAM,eACNsD,EAAc,OACdmuB,GAgBHtR,EACG,MAAM,iBACF8iB,EAAgB,wBAChBC,GACM,OAANzR,QAAM,IAANA,IAAU,CAAC,EACf,IAAI0R,EAAkC,OAAhBF,QAAgB,IAAhBA,IAAoB,EAC1C,IAAKlS,IAAQgS,EAAS,OAAOI,EAE7B,MAAMC,EAAoB9B,GAAkByB,EAAQhgB,OAAQ/iB,EAAQ,CAAEsD,oBAChE,WACF+/B,EAAU,sBACVC,EAAqB,aACrBC,GDpEmB,SAAC7gC,GAAsC,IAAD8gC,EAAA,IAArBjB,EAAQ78B,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAC5C29B,EAAa3gC,EAEb6gC,EAAe,GACnB,MAAME,EAAiB,IAAIpmC,OAAO,KAAKO,QAAkBC,QAAmBA,WAC5E,IAAI6lC,EACAC,EACJ,EAAG,CAAC,IAADC,EAAAC,EACCH,EAAqD,QAAlCE,EAAGH,EAAeK,KAAKT,UAAW,IAAAO,OAAA,EAA/BA,EAAkC,GACxDD,EAA0C,QAAlCE,EAAGJ,EAAeK,KAAKT,UAAW,IAAAQ,OAAA,EAA/BA,EAAkC,GAEzCF,GAAYD,IACZH,EAAa/E,KAAKmF,GAClBN,EAAaA,EAAWx9B,QAAQ69B,EAAqB,IAE7D,OAASA,GAAuBC,GAEhC,IAAIL,EAAwB,GAC5B,MACMS,EAAgE,QAApCP,EADL,IAAInmC,OAAOe,GAAyB,KACP0lC,KAAKphC,UAAO,IAAA8gC,OAAA,EAAjCA,EAAoC,GAMzE,OALIO,GAAgCxB,GAChCe,EAAwBS,EAA6BhhB,OACrDsgB,EAAaA,EAAWx9B,QAAQk+B,EAA8B,KAC3DT,EAAwB,GAExB,CACHC,eACAF,aACAC,wBAER,CCuCQU,CAAYZ,EAAmBb,GAE7B1E,GAA0C,QAApBiF,EAACS,EAAal+B,cAAM,IAAAy9B,IAAI,IAAMQ,EAAsBj+B,OAAS,EAAI,EAAI,GAC3Fu4B,EAAgByF,EAAaA,EAAW/9B,MAAM,MAAQ,IAEtD,KAAEvY,EAAI,SAAE+F,GAAamB,EAG3B,KAAOkvC,EAAkBrwC,EAASuS,QAAU89B,GAAmB,GAAG,CAAC,IAADc,EAAAC,EAAAC,EAC9D,MAAMC,EAA0D,QAAXpkC,EAC/CkjC,GAA2BC,EAAkBD,EACzCzvC,EAA6B,QACQ,QADPwwC,EAC9BxwC,EAAoB8O,UAAiB,IAAA0hC,IAAIxwC,EAA4B,OACzE,CACE,EAAK,IACL,EAAK,IACL,EAAK,KAEPkkC,EAAe7kC,EAASqwC,IACxB,SACF/vC,EAAQ,WACRC,EAAU,UACVC,GACAqkC,GACE,SACFpoC,EACAF,UAAWg1C,EACX/0C,aAAcg1C,GACW,QAA5BJ,EAAGtB,EAASO,UAAgB,IAAAe,IAAItB,EAASA,EAASv9B,OAAS,GACtD1d,EAAS46C,GAAuB,QAAXviC,EAAoBqkC,EAAiB,EAAIA,EAE9DpI,EAAc/oB,KACpB6d,EAAIhkC,KAAOkvC,EACN7nB,SAAwC,IACxCH,UAA6B,IAC7BK,QAAQlhB,GACRqhB,UAAU1nB,GACV8mB,UACLkd,EAAIY,UAAY,OAChB,MAAM+J,EAAW,CACbznC,WACAioC,UAAWiH,EACXlH,eAGJ,IAAIsI,EAAkF,GAGtF,MAAM1yB,EAAkBH,IACpBO,IACI,MAAM,gBAAE6rB,EAAe,iBAAEC,GAAqBJ,GAAe,CACzD5M,MACA9e,SACA2rB,gBACAC,sBACA79B,SAAQ07B,WACR/zC,UAIJ,OAFA48C,EAAoBzG,IAEhBC,EAAmBzqC,EACZ,GAEf,KAKEkxC,EAAajR,GAAa,CAAExC,SAAQiS,IAE1C,KACKnxB,GAFgE,QAAlDsyB,EAAGC,EAAqB,GAAGxG,EAAcv4B,iBAAS,IAAA8+B,IAAIC,EAAqB,KAGtFjB,EAAkBrwC,EAASuS,OAAS,GAGrC,CACH0rB,EAAIuB,UAAU,EAAG,EAAG1B,GAAa,MAEjC,IAAIthC,EAAeg1C,EAAoBjxC,EAkDvC,GA1BA,IAtB8BkwC,EAAahlC,KAAI2+B,IACpC,CACHA,OACAE,QAAQ,EACRvrB,gBAAiBH,IACbO,IACI,MAAM,iBAAE8rB,GAAqBJ,GAAe,CACxC5M,MACA9e,SACA2rB,cAAe,CAACV,GAChBl9B,SAAQ07B,WACR/zC,UAGJ,QAAIo2C,EAAmB,EACZ,WASpBwG,GACL99B,SAAQ4Z,IAIH,IAJI,KACP6c,EAAI,OACJE,EAAM,gBACNvrB,GACHwO,EACG,MAAM6Q,EAASrf,EAAkB,KAC3B,UAAEwrB,EAAS,WAAEK,GAAeT,GAAY,CAAElM,MAAKmM,OAAMhM,SAAQlxB,SAAQo9B,SAAQ1B,WAAU/zC,UAE7FopC,EAAIrgB,MAAMwgB,EA3GP,GA4GH+N,GAAS,CACLlO,MACAsM,YACAnM,SAAQl/B,OA/GT,EAgHCzC,WAAUD,eACVouC,aACAhC,WACA17B,WAEJ1Q,GAAgB+D,EAChB09B,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,IAIlCmK,EAAsBj+B,OAAS,EAAG,CAClC,MAAMo/B,EAAiBvxC,EAAexD,IAChCg1C,EAAqBD,EAAe3xC,SAASqwC,IAC7C,SACF/vC,EAAQ,WACRC,GACAqxC,EACEC,EAAwBzxB,KAC9B6d,EAAIhkC,KAAO43C,EACNrwB,QAAQlhB,GACRqhB,UAAUgwB,EAAe13C,MACzB8mB,UACL,MAAM+wB,EAAiB,CACnB3wC,SAAUwwC,EACVvI,UAAWiH,EACXlH,YAAa0I,GAgBXzT,EAd0Bxf,IAC5BO,IACI,MAAM,iBAAE8rB,GAAqBJ,GAAe,CACxC5M,MACA9e,SACA2rB,cAAe,CAAC0F,GAChBtjC,SAAQ07B,SAAUkJ,EAClBj9C,UAGJ,QAAIo2C,EAAmB,EACZ,IAGsB,IAEzChN,EAAIrgB,MAAMwgB,EA3JP,GA4JH,MAAMmM,EAAY7F,GAAa8L,GAO/BrE,GAAS,CACLlO,MACAsM,YACAnM,SAAQl/B,OAtKT,EAuKCzC,WAAUD,eACVosC,SAAUkJ,EACV5kC,WAEJ1Q,GAAgB+D,EAChB09B,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EACpC,CACA,KACJ,CA3GIgK,GAAmB,EA4GvBqB,GACJ,CAEA,OAAOrB,CAAe,GC9QtBx7C,MAAOipC,IACPlpC,GCQAC,MAAOk9C,GACPj9C,OAAQk9C,GAAU,uBAClBj9C,GAAsB,wBACtBE,GAAuB,wBACvBC,GAAuB,gBACvBK,GAAe,eACfD,GAAc,gBACdD,GAAe,eACfD,IACAR,EAESq9C,GAAwB/0B,IA4C9B,IA5C+B,OAClCilB,EAAM,cACN+P,EAAa,iBACbC,EAAgB,OAChBjlC,EAAM,cACNyB,EAAa,MACbha,EAAK,YAAEy9C,EAAW,eAClB56C,EAAc,SACdwW,EAAQ,UACRF,EAAS,KACTG,EAAI,KACJT,EAAI,aACJ6kC,EAAY,QACZ96C,EAAO,OACP2X,EAAM,aAAEojC,EAAY,MAAEC,EAAK,WAC3Bj7C,EAAU,WACVk7C,EAAU,cACVC,GA2BHv1B,EACG,MAAM+gB,EAAMkE,EAAOlH,WAAW,OAE1BllC,UAAW28C,EAAa,WACxB18C,EACAN,KAAMi9C,EACN98C,KAAM+8C,EACNj9C,SAAUk9C,EACVj9C,KAAMk9C,EAAW,UACjB78C,GACAsB,GACE,KACFhB,EAAI,KACJC,EAAI,WACJJ,EAAU,WACVC,EAAU,SACVC,GACAe,EAAuBC,EAAYC,GACjCxB,EAAY48C,EAAc,GAAWD,EAErCK,EAAa,IAGbC,EAAmB,WAATxlC,EACVylC,EAAkBV,GAASD,EAC3B39C,EACA,SACAu+C,EAAiBD,EACjBE,GAAkBl9C,GAAaF,EAE/Bq9C,EAAY,CAOdC,mCACIC,EACAC,GAGD,IAFCC,EAAgB5gC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnB6gC,EAAqC7gC,UAAAL,OAAA,EAAAK,UAAA,QAAAC,EAErC,MAAM6gC,EAAiC,OAAbH,QAAa,IAAbA,IAAiBh8C,GAEvC7B,KAAMi+C,GACND,GACE,KACFn9C,EAAI,KACJC,EAAI,SACJF,GACAe,EAAuBC,EAAYo8C,EAAmBD,IAClD5+C,MAAO++C,EAAY9+C,OAAQ++C,GAAgBP,EAC7CQ,EAAmBx9C,EAAWs9C,EAC9BG,EAAgBJ,EAAc,KAC7Bz+C,GAA0BqB,GAAQu9C,EACnC,EACAE,EAAqBD,EAAgBD,EACrCG,EAAgBN,EAAc,KAC7B5+C,GAAyByB,GAAQs9C,EAClC,EACAI,EAAqBD,EAAgBH,EACrCK,EAAeR,EAAc,IAC7BE,EAAe5+C,GAA0B6+C,EACzC,EAON,MAAO,CACHA,mBACAC,gBACAE,gBACAD,qBACAE,qBACAC,eACAC,aAZiB79C,EAAOy9C,EAaxBK,aAZiB79C,EAAO09C,EAaxBI,iBAZqBh+C,EAAgC,EAArB09C,EAahCO,kBAZsBj+C,GAAYs9C,EAAaC,GAAeL,EAAmBW,EAAeL,EAcxG,EAGAU,UAAWrqB,UACP,GAAK8T,EAAL,CAKA,GAHAA,EAAIkC,YAAcwS,EAAc,UAC1B/R,GAAU3C,EAAK,eAAetpC,QAAa,EAAG,SAC9CisC,GAAU3C,EAAK,iCAAiCmU,QAAmB,EAAG,GACxEzjC,GAAiBwjC,GAAuC,UAAnB36C,EAA4B,CACjE,MAAQ3C,MAAO4/C,EAAiB3/C,OAAQ4/C,GAAqBvC,EACvDrX,EAAeqX,EAAiBpX,YAEhCG,EAAkC,OAAZJ,QAAY,IAAZA,OAAY,EAAZA,EAAcG,WAAW,MACjDH,GAAgBI,IAEhBJ,EAAajmC,MAAQk9C,GACrBjX,EAAahmC,OAASk9C,GACtB9W,EAAoBC,UAChBgX,EACA,EAAG,EAAGsC,EAAiBC,EACvB,EAAG,EAAG3C,GAAWC,IAGrB9W,EAAoBsE,UAChBtpC,EAA2BC,OAAOI,KAClCL,EAA2BC,OAAOK,KAClCN,EAA2BC,OAAOG,SAClCJ,EAA2BC,OAAOG,SAAWJ,EAA2BC,OAAOW,UAGnFokC,EAAoBsE,UAChBnqC,GACAD,GACAE,GACAC,IAEJ0oC,EAAI9C,UACAL,EACA,EAAG,EACHiX,GAAWC,GACX,EAAG,EACHD,GAAWC,IAGvB,CACA/T,EAAIkC,YAAc,CA1CF,CA0CG,EAGvBwU,YAAaA,KACT,IAAKzC,IAAkBjU,EAAK,OAC5B,MAAQppC,MAAO++C,EAAY9+C,OAAQ++C,GAAgB3B,EAE/C2B,GAAe,GACnB5V,EAAI9C,UACA+W,EACA,EAAG,EACH0B,EAAYC,EACZt9C,EAAMC,EACNF,EAAUA,GAAYs9C,EAAaC,GACtC,EAELe,eACIC,IAEA,IAAK1C,IAAqBlU,IAAQtvB,EAAe,OACjD,MAAQ9Z,MAAO4/C,EAAiB3/C,OAAQ4/C,GAAqBvC,EAE7D,GAAIuC,GAAoB,EAAG,OAC3B,GAAiB,aAAbG,GAA8C,UAAnBr9C,EAA4B,CACvD,IAAIs9C,EAAqB1B,EAAUC,mCAAmClB,GAE/C,SAAnB36C,EACAs9C,EAAqB1B,EAAUC,mCAC3BlB,EACA,IAAK56C,EAAS7B,KAAM,QACpBmd,EACA,QAEsB,QAAnBrb,IACPs9C,EAAqB1B,EAAUC,mCAC3BlB,EACA56C,OACAsb,EACA,QAIR,MACIkhC,cAAegB,EAAyBd,cAAee,EACvDb,aAAcc,EACdb,aAAcc,EAAwBb,aAAcc,EACpDb,iBAAkBc,EAA4Bb,kBAAmBc,GACjEP,EAQJ,YAPA7W,EAAI9C,UACAgX,EACA4C,EAAyBC,EACzBP,EAA4C,EAA1BM,EAA6BL,EAAmBO,EAClEC,EAAwBC,EACxBC,EAA4BC,EAGpC,CAEA,MAAM,KACF9+C,EAAI,KACJC,EAAI,SACJF,GACAe,EACAC,EACA,IAAKC,EAAStB,WAAW,GACzBuB,GAEJymC,EAAI9C,UACAgX,EACA,EAAG,EACHsC,EAAiBC,EACjBn+C,EAAMC,EACNF,EAAUA,GAAYm+C,EAAkBC,GAC3C,EAELY,cAAenrB,gBACLyW,GAAU3C,EAAK,kBAAkB/wB,KAAUY,EAAUme,oBAAqB,IAAK,GAAG,EAE5FspB,SAAUprB,UAAyF,IAAlF,MAAEzJ,EAAK,cAAExS,GAAmEmf,EACzF,MAAMmoB,EAAkC,SAAbxnC,EAAsB+D,GAAqBpd,GAASqZ,OD7Q5Dmc,WAgBxB,IAhB+B,IAClC8T,EAAG,SACHjwB,EAAQ,KACRpY,EAAI,KACJqY,EAAI,cACJC,EAAgB,OAAM,MACtBwS,EAAK,WACL+0B,GASHv4B,EAGOw4B,EAAsC,kBAATznC,EAClB,KAATA,EAAc,EAAI,EACF,kBAATA,EAAoBA,EAAO,EACpC46B,EALc,GAKW6M,EAJR,GAI8CA,EAAsB,GAGrF3N,EAAY,QACZ,CAAC,OAAQ,kBAAkB71B,SAASlE,KAAW+5B,EAAY,QAC/DA,EAA8B,SAAlB75B,EACN65B,EACA75B,EACFwnC,EAAsB,KAAI3N,EAAY,UAEtCnyC,GAAsB,WAAdmyC,IACR2N,EAAsB,EACtB7M,EAAa,GAIjB,MAAM8M,EAAyB,WAAd5N,GACVjK,GAAc+K,GAAc,EACf,SAAdd,EACI,QAAUc,EACV,QAEV,IAAI5mB,GAAS,GAEb,GAAIgc,GAAOroC,GAAqB,OAAboY,EAAmB,CAClC,MAAM1N,EAAW,GACXs1C,EAAcnV,GAAa,CAAExC,SAAQvd,IAC3Cud,EAAIY,UAA0B,SAAdkJ,GAAsC,UAAdA,EAClCA,EACA,OACN9J,EAAIhkC,KAAO,QAAQqG,sBACnB,MAAM2hB,EAAuB,WAAd8lB,EACT9J,EAAIkB,YAAYvpC,GAAMf,OAAS,EACjB,SAAdkzC,EArCW,GAuCP,GACV9J,EAAIgB,SAASrpC,EAAM+/C,EAAW1zB,EAnCjB,IAmC+C,GAAX3hB,GACjD29B,EAAIY,UAAY,OAChB+W,GACJ,CAEA,aAAahW,QAAQiW,IAAI,IAAI/hC,MAAM4hC,IAC9BjqC,KAAI0e,UACDlI,GAAW6zB,GACX,IAAIC,EAA+B,CAC/BJ,GAlDM,GAkDkB1zB,GA5CnB,KAgDT,aADM2e,GAAU3C,EAAK,uBAAuBjwB,WAAmB+nC,SAClDN,EAAWM,EAAW,IAE1C,ECqMaC,CAAgB,CAClB/X,MACAjwB,SAAUwnC,EACV5/C,KAAsB,kBAATqY,EAAoBA,EAAO,KACxCA,OACAC,gBACAwS,QACA+0B,WAAYtrB,SACsB,OAAvBqrB,EACD5V,QAAQC,gBACF2S,EACJvU,EACA,QACA9T,SAAcyW,GAAU3C,EAAK,iBAAiBlnC,gBAAoBg/C,MAGhF,EAENE,sBAAuB9rB,gBACbyW,GAAU3C,EAAK,iCAAiCoU,QAAoB,EAAG,IAAI,EAGrF6D,iBAAkB/rB,gBACRyV,QAAQiW,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxCpqC,KAAI0e,UACD,MAAM,KAAEhgB,EAAI,IAAED,EAAG,OAAEpV,EAAM,MAAED,GAAUoV,GAAkByB,EAAQ,GACzDyqC,EAAWlnC,EAAQiD,SAAS,GAAGxG,KAC/B0qC,EAAW,sBAAsB1qC,IACjC2qC,EAAa,oBAAoB3qC,IACjCqqC,EAAa,CAAC5rC,EAAMD,EAAKrV,EAAOC,GAItC,aAFM4sC,GAAkBzD,EAAK,GAAGmY,SAAgBngD,EAAY,QAAU,YAAa8/C,SAC7ErU,GAAkBzD,EAAK,GAAGmY,gBAAwBL,GACpDI,SACMzU,GAAkBzD,EAAK,GAAGoY,gBAA0BN,GACnDrU,GAAkBzD,EAAK,GAAGoY,gBAA0BN,SACxD,KAEd,EAELO,eAAgBnsB,gBACN+X,GACFC,EACA,8BACA,EAAG,KACH,IAAK,GACLzhB,EACH,EAKL61B,mBAAoBpsB,UACX8T,IAELA,EAAIkC,YAAcyS,EAAc,UAC1BhS,GAAU3C,EAAK,8BAA8BtpC,QAAa,EAAG,GACnEspC,EAAIkC,YAAc,EAAC,EAGvBqW,qBAAsBrsB,iBAAiC,IAA1BssB,EAAY7jC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAChCqrB,IAELA,EAAIkC,YAAc2S,EAAc,UAC1BlS,GACF3C,EACA,8BAA8BmU,QA9P2BsE,GAAxC3D,KAiQjB0D,IACAxY,EAAIkC,YAAc0S,EAAkB,UAC9BjS,GAAU3C,EAAK,kCAAkCmU,QAAmB,GAAI,MAElFnU,EAAIkC,YAAc,EACtB,EAIAwW,gBAAiBxsB,SACNyW,GAAU3C,EAAK,sBAAsBgV,QAAuB,EAAG,GAE1E2D,eAAgBzsB,SACLn0B,EACD4qC,GAAU3C,EAAK,qBAAqBiV,QAAsB,EAAG,GAC7DtT,QAAQC,UAElBgX,cAAe1sB,UACX,GAAIp0B,EAAW,CACX,IAAI+gD,EAAiB,GAEjBA,EADAvE,GAASD,EACQ,oBAAoB39C,QAC9Bua,GAAU,CAAC,OAAQ,QAAS,OAAQ,UAAUgD,SAASvd,GAC7C,+BAEA,6BAEfisC,GAAU3C,EAAK6Y,EA9RF,GAAf,IA+RR,GAEJC,mBAAoB5sB,MAAOp0B,EAAoBihD,WACrCpW,GACF3C,EACA,kCAAkCoU,KAC5B2E,KACHjhD,EAAY,GAAK,YAClB,OACF,GAAI,IACP,EAKLkhD,iBAAkB9sB,UACT6oB,GAA2B,gBAAhBZ,QAGNxR,GAAU3C,EAAK,0BAjTI,GAiTmC8U,SAFtDnS,GAAU3C,EAAK,sCA/SI,GA+S+C8U,EAG5E,EAEJmE,eAAgB/sB,gBACNyW,GAAU3C,EAAK,oBAAoB+U,EAAU,IAAIxlC,IAAS,SAAU,EAAG,EAAE,EAKnF2pC,kBAAmBhtB,UACXp0B,SAAiB6qC,GAAU3C,EAAK,oBAAoBzwB,QA5TjC,GAAf,IA4T6E,EAEzF4pC,qBAAsBjtB,gBACZyW,GAAU3C,EAAK,uBAAuBzwB,QA9Tf,GA8TuCulC,EAAW,EAEnFsE,gBAAiBltB,iBAAmC,IAA5BmtB,EAAU1kC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG7c,QAC3B6qC,GAAU3C,EAAK,2BAA2BzwB,IAAO8pC,EAAa,GAAK,iBAAkB,EAAG,IAClG,EAIAC,eAAgBptB,WACRp0B,GAAaC,UAAkBw8C,EAC/BvU,EACA,QACA9T,SACWyW,GAAU3C,EAAK,iBAAiBlnC,aAAiB,EAAG,IAElE,EAELygD,oBAAqBrtB,UACbrc,IAAcpW,SACR86C,EAAWvU,EAAK,aAAa9T,SAAcyW,GAAU3C,EAAK,iBAAiBlnC,kBAAsB,IAAK,KAChH,EAEJ0gD,cAAettB,UACPgpB,SAAsBV,EACtBxU,EACA,OACA9T,eAA0ByW,GACtB3C,EACA,qBAAqB6B,IAAaxoC,EAAa,aAAa+6C,IAAiB,SAC7Ej8C,EAAYC,IAEnB,EASLqhD,qBAAsBvtB,gBACZqoB,EACFvU,EACA,eACA9T,SACWyW,GACH3C,EAEE,iBAAIlnC,MACAo8C,EAAiB,MAAQ,SAC7B,YACC77C,EAAa,aAAa+6C,IAAiB,IAC5C,OACFj8C,EAAYC,IAGvB,EAELshD,oBAAqBxtB,UACbp0B,SACMy8C,EACFvU,EACA,cACA9T,SAAoByW,GAAU3C,EAAK,iBAAiB6B,mBAA6B,EAAG,IAE5F,EAEJ8X,4BAA6BztB,UACrBp0B,SAAiBy8C,EACjBvU,EACA,uBACA6B,GAAcc,GAAU3C,EAAK,iBAAiB6B,yBAAkCuS,QAAoB,EAAG,IAC1G,EAELwF,yBAA0B1tB,gBAChBqoB,EACFvU,EACA,mBACA9T,SAAoByW,GAAU3C,EAAK,iBAAiB6B,qBAA8BuS,QAAoB,EAAG,IAC5G,EAELyF,gBAAiB3tB,gBACPqoB,EACFvU,EACA,SACA9T,SACWyW,GAAU3C,EAAK,iBAAiBlnC,UAAaO,EAAa,aAAa+6C,IAAiB,SAAU,EAAG,IAEnH,EAEL0F,0BAA2B5tB,gBACjBqoB,EACFvU,EACA,oBACA9T,SACWyW,GAAU3C,EAAK,iBAAiBlnC,qBAAwBO,EAAa,aAAa+6C,IAAiB,SAAU,EAAG,IAE9H,EAGL2F,kBAAmB7tB,gBACTqoB,EAAWvU,EAAK,WAAW9T,SAAqByW,GAAU3C,EAAK,iBAAiBga,gBAA2B,EAAG,IAAG,EAE3HC,qBAAsB/tB,gBACZqoB,EAAWvU,EAAK,eAAe9T,SAAcyW,GAAU3C,EAAK,iBAAiBlnC,oBAAwB,EAAG,IAAG,GAIzH,OAAOq8C,CAAS,EC/aP+E,GAAWhuB,MACpB8T,EACA1pC,EACA2pC,EACA1hC,EACA3H,EACA6rB,EACAie,KAQA,MAAM,aAAE2T,EAAY,OAAEplC,EAAM,UAAE6tB,EAAS,MAAEpmC,EAAK,eAAE6b,GAAmBmuB,EAC7DyZ,EAAoB,OAATrd,QAAS,IAATA,OAAS,EAATA,EAAWE,WAAW,MACvC,GAAIgD,GAAOma,GAAY7jD,EAAO,CAAC,IAAD8jD,EAAAC,EAAAC,EAC1B,MAAM,KACFt+C,EAAI,UACJN,EAAS,kBACTkU,EAAiB,WACjB9S,EAAU,UACV3B,EAAS,YACTwB,EAAW,cACXE,EAAa,cACbD,EACA1B,WAAYq/C,EAAiB,UAC7Bz+C,EAAS,UACTD,EAAS,YACTI,EAAW,YACXgB,EAAW,YACXhC,EAAW,cACXmB,EAAa,cACbC,EAAa,QACbjB,GACA,C9CvHRY,KAAM,UACNN,UAAW,UACXkU,kBAAmB,UACnBjT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,U8CsG8BqnB,IAC7B,aAAEjlB,EAAcC,UAAW+8C,GAA8C,QAA5BJ,EAAG98C,EAAkB,OAAPlC,QAAO,IAAPA,IAAW,WAAG,IAAAg/C,IAAI,CAAC,EAC9El/C,EAAaq/C,EAEnBva,EAAIY,UAAY,OACZzlC,IACA6kC,EAAIrjC,YAAcA,EAClBqjC,EAAIpjC,cAAgBA,EACpBojC,EAAInjC,cAAgBA,EACpBmjC,EAAIljC,WAAaA,GAEjBy9C,IACAva,EAAInkC,UAAYA,EAChBmkC,EAAI6I,YAAc/sC,GAEtB,MAAMoH,EAAW,KAC4C,QAAtDm3C,EAACr3C,EAAgBhH,UAAqC,IAAAq+C,IAAIr3C,EAAgBC,SAASC,SACtF0M,qBAEE6qC,EAAat4B,GAAiB,CAChCK,cAAetf,EAASlH,KACxBumB,YAAarf,EAASnB,SAAS,GAAGM,SAClCggB,cAAenf,EAASkH,SAEtBugC,EAAW,CACbQ,UAAW,EACXjoC,WACAgoC,YAAauP,GAEXC,EAAsBnK,GACxBj6C,EACA2Y,EACA,CAAEuhC,WAAW,EAAOj+B,iBAAgBk+B,eAAgB,iBAIlDkK,EAA4B,QAAX1rC,EACjB,CAACyrC,GACDA,EAAoBnmC,MAAM,IAAIjI,OAAO,wEAA+B,MACpEsuC,EAAgCz4B,GAAiB,CACnDK,cAAetf,EAASlH,KACxBumB,YAAarf,EAASnB,SAAS,GAAGM,SAClCggB,cAAenf,EAASkH,SAEtBywC,EAAcD,EAA8B93B,UAC5Cg4B,EAAcF,EACfr3B,SAAQ5jB,GAAOA,EAAMuD,EAAStB,kBAC9ByhB,SAAS,cACTK,UAAUxgB,EAASvB,YACnBmhB,UACL,IAAIi4B,EAAY,EACZC,EAAa,EACjBL,EAAejlC,SAAQ,CAAC/V,EAAKukB,KACzB8b,EAAIhkC,KAAOkoB,EAAQ,IAAM,EAAI22B,EAAcC,EAE3C,MAAMG,EAAajb,EAAIkB,YAAYvhC,EAAI0Z,WAAWpM,GAAoB,KACtE8tC,EAAY5iC,KAAK8I,IAAI85B,EAAWE,EAAWC,yBAC3CF,EAAa7iC,KAAK8I,IAAI+5B,EAAYC,EAAWE,yBAAyB,GACvE,GAEHnb,EAAIhkC,KAAO6+C,EAEX,IAAInN,EAAkB,EACtB,MAeMvN,EAf0Bxf,IAC5BO,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzD5M,MACA9e,SACA2rB,cAAe,CAAC6N,GAChBzrC,SAAQ07B,WACR/zC,UAGJ,QAAIo2C,EAAmB,KACvBU,EAAkBX,EAAgB,GAAGW,iBAC9B,EAAI,IAGsB,IACnCzsC,EAAS,EAEf++B,EAAIrgB,MAAMwgB,EAAQl/B,GAGlB,MAAMN,EAAsC,QAA/B25C,EAAGp3C,EAASnB,SAAS,GAAGpB,eAAO,IAAA25C,IAAIl6C,EAAoBO,QAC9D2rC,EAAY7F,GAAaiU,GACzBU,EAAW1N,EAAkB,GAAKzyC,EAhMxBogD,EACpBrb,EACAsb,EACAC,EACAtb,EACAub,EACAtb,EACA6a,EACAC,KAKA,MAAMS,EAAUH,EAAgB,IAC1BI,EAAc,GAAGvjC,KAAKkN,MAAMo2B,EAAU,MACtCE,EAAMF,EAAU,GAEhBG,EAAeb,EAAYC,EAK3Ba,EAAK5b,EANSub,EAMY,EAC1BM,EAAK5b,GAAY8a,EAAaD,GAAa,EAEjD,IAAInkD,EATgB4kD,EASK3kD,EAAS+kD,EACd,MAAhBF,GAAuC,MAAhBA,IAAuB9kD,EAAQglD,EAAc/kD,EAVpD2kD,GAiBpB,MAAMO,EAAK5jC,KAAK6jC,KAAKplD,GAAS,EAAI,EAAIC,GAAU,EAAI,GACpD,GAAIklD,EAAK,EAAG,CACR,MAEME,EAAM,IAF8B,IAA9B9jC,KAAK+jC,KAAMtlD,EAAQ,EAAKmlD,GAAY5jC,KAAKwwB,GACnCgT,GAEZQ,EAAKhkC,KAAKikC,IAAIH,EAAM,IAAM9jC,KAAKwwB,IAAMoT,EACrCM,EAAKlkC,KAAKikC,IAAIT,EAAM,IAAMxjC,KAAKwwB,IAAMwT,EACrCG,EAAKnkC,KAAKokC,IAAIZ,EAAM,IAAMxjC,KAAKwwB,IAAMwT,EAC3C,IAAIK,EAAUH,EACV17C,EAAU27C,EACM,MAAhBZ,IAAuBc,EAAUF,EAAI37C,GAAW07C,GAChC,MAAhBX,IAAuBc,GAAWH,EAAI17C,GAAW27C,GACjC,MAAhBZ,IAAuBc,GAAWF,EAAI37C,EAAU07C,GAEpD,MAAMI,EAAOZ,EAAKW,EACZE,EAAOZ,EAAKn7C,EACZg8C,EAAOd,EAAKW,EACZI,EAAOd,EAAKn7C,EASZy6C,EAAWpb,EAAI6c,qBAAqBJ,EAAMC,EAAMC,EAAMC,GAG5D,OAFArB,EAAc7lC,SAAQuJ,IAAA,IAAC,MAAErlB,EAAK,OAAEoqB,GAAQ/E,EAAA,OAAKm8B,EAAS0B,aAAal6B,WAAWoB,GAASpqB,EAAM,IAEtFwhD,CACX,CACgB,EAiINC,CACErb,EACA5jC,EACAynB,GAAaxnB,GACb4jC,EACAyN,EACAnvC,EACAw8C,EAAWC,QAEbpmC,EAINorB,EAAItkC,UAAoB,OAAR0/C,QAAQ,IAARA,IAAY1/C,EAC5BwyC,GAAS,CACLlO,MACAsM,YACAnM,SAAQl/B,SACRzC,SAAUyhC,EAAM1hC,eAChBosC,WACA17B,SACAg3B,WAAY7W,IAAkD,IAAjD,IAAE4Q,EAAG,OAAE6E,EAAM,WAAEyB,EAAU,eAAED,GAAgBjX,EACpD4Q,EAAIgB,SAAS6D,EAAQyB,EAAYD,GAAkBgO,EAAe1zC,EAAU,GAAG,IASnFnD,GAAgBs/B,IAChBkD,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,SAE1BzF,GAAUwX,EAAU,eAAezjD,QAAa,EAAG,SACnDisC,GAAUwX,EAAU,8BAA8BzjD,QAAa,EAAG,GACxEyjD,EAASlY,yBAA2BuY,QAC9B/W,GACF0W,EAAU,eAAe38C,QACzByiC,EAAM1hC,EAAew8C,EACrBnkD,EACAmkD,EAAYC,GAEhBhb,EAAIiC,yBAA2B,YAC/BjC,EAAI9C,UAAUJ,EAAW,EAAG,GAC5BkD,EAAIrgB,MAAMwgB,EAAQl/B,GAClB++B,EAAIiC,yBAA2B,cAM/BiM,GAAS,CACLlO,MACAsM,YACAnM,SAAQl/B,SACRzC,SAAUyhC,EAAM1hC,eAChBosC,WACA17B,SACAg3B,WAAYA,UAKhB/qC,IACA8kC,EAAIiC,yBAA2B,mBAC/BiM,GAAS,CACLlO,MACAsM,YACAnM,SAAQl/B,SACRzC,SAAUyhC,EAAM1hC,eAChBosC,WACA17B,SACAg3B,WAAY3W,IAAkD,IAAjD,IAAE0Q,EAAG,OAAE6E,EAAM,WAAEyB,EAAU,eAAED,GAAgB/W,EACpD0Q,EAAI+c,SAAW,QACf/c,EAAIiB,WACA4D,EACAyB,EAAarqC,EACboqC,EAAiBppC,GAAeo3C,EAAe1zC,EAAU,GAC5D,KAIbq/B,EAAIiC,yBAA2B,cAC/BjC,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhC,MAAM4U,G9CrSqB,CAC/BhhD,KAAM,UACNN,UAAW,UACXkU,kBAAmB,UACnBjT,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,Q8CoRL4kC,EAAItkC,UAAYshD,GAAiBthD,UACjCskC,EAAIrjC,YAAcqgD,GAAiBrgD,YACnCqjC,EAAIpjC,cAAgBogD,GAAiBpgD,cACrCojC,EAAInjC,cAAgBmgD,GAAiBngD,cACrCmjC,EAAIljC,WAAakgD,GAAiBlgD,WAClCkjC,EAAInkC,UAAYmhD,GAAiBnhD,UACjCmkC,EAAI6I,YAAcmU,GAAiBlhD,UACnCkkC,EAAI+c,SAAW,QACf/c,EAAIiC,yBAA2B,aACnC,GCtSEgb,GAAkC,CACpCr+C,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEEo+C,GAAsBj+B,IAc5B,IAADk+B,EAAAC,EAAA,IAd8B,IAChCpd,EAAG,MACH1pC,EAAK,OACL2Y,EAAM,aACN/M,EAAY,KACZwgB,EAAI,eACJnQ,GAQH0M,EACG,MAAM,cACFlgB,EAAgB,OAAM,SACtBP,EAAQ,aACRD,EACAD,UAAW1H,GAC6B,QAA3CumD,EAAmC,QAAnCC,EAAG1+C,EAAyBuQ,UAAO,IAAAmuC,OAAA,EAAhCA,EAAmC16B,UAAK,IAAAy6B,IAAIz+C,EAA8B,IAAU,OAClFwE,ExCwK4B,CAClCvE,IAAKgM,GACL3L,IAAK6L,IwC1KqCoE,GACtC/M,IAAcgB,EAAShB,aAAeA,GAC1C,MAAM,KAAElG,GAASkH,EACXioC,EAAY8R,GAAQv6B,GACpBkkB,EAAe1jC,EAASnB,SAASopC,GACjCsP,EAAat4B,GAAiB,CAChCK,cAAexmB,EACfumB,YAAa,GAAGqkB,EAAavkC,eAE3BsoC,EAAW,CACbQ,YACAjoC,WACAgoC,YAAauP,GAEjB,IAAI/M,EAAkB,EAEtB1N,EAAIhkC,KAAOy+C,EAAW33B,UACtBkd,EAAIY,UAAY,OAChB,MAAM+P,EAAiBJ,GAAkBj6C,EAAO2Y,EAAQ,CAAEuhC,WAAW,EAAOj+B,mBAgBtE4tB,EAf0Bxf,IAC5BO,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzD5M,MACA9e,SACA2rB,cAAe,CAAC8D,GAChB1hC,SAAQ07B,WACR/zC,UAGJ,QAAIo2C,EAAmB,KACvBU,EAAkBX,EAAgB,GAAGW,iBAC9B,EAAI,IAGsB,IAEzC1N,EAAIrgB,MAAMwgB,EADK,GAEf,MAAM3mC,EAAS00C,GAAS,CACpBlO,MACAsM,UAAW7F,GAAakK,GACxBxQ,SAAQl/B,OALG,EAMXzC,SAA4B,SAAlBO,EAA2BP,EAAYA,EAAWkvC,EAAkBvN,EAC9E5hC,eACAosC,WACA17B,SACAg3B,WAAY7W,IAAkD,IAAjD,IAAE4Q,EAAG,OAAE6E,EAAM,WAAEyB,EAAU,eAAED,GAAgBjX,EACpD4Q,EAAIgB,SAAS6D,EAAQyB,EAAYD,EAAe,IAKxD,OAFArG,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,IACA5uC,EACH2mC,SACH,ECxFQkd,GAAYA,CACrBrd,EACA1pC,EACA2pC,EACAC,KAEA,GAAIF,GAAO1pC,EAAO,CACd,MAAM+L,EAAW,KACjB29B,EAAIhkC,KAAO,GAAGqG,0BACd29B,EAAIY,UAAY,OAEhB,MAAM0c,EAAkB,IAClBC,EAAY,GAAGjnD,IAAQie,MAAM,IACnC,IAAIq2B,EAAa,EAEjB2S,EAAU7nC,SAAQ8nC,IACd5S,GAAc5K,EAAIkB,YAAYsc,GAAO5mD,OAAmB,MAAV4mD,EAAgBF,EAAkB,EAAE,IAEtF,IAAIG,EAAUxd,EAAO2K,EAAa,EAElC2S,EAAU7nC,SAAQ8nC,IACdxd,EAAIgB,SAASwc,EAAiB,MAAVA,EAAgBC,EAAU,EAAIA,EAASvd,EAAW79B,GACtEo7C,GAAWzd,EAAIkB,YAAYsc,GAAO5mD,OAAmB,MAAV4mD,EAAgBF,EAAkB,EAAE,GAEvF,GA0CSI,GAAeA,CACxB1d,EACA1pC,EACA2pC,EACAC,KAEA,IAAKF,EAAK,OAEVA,EAAIrgB,MAAM,EAAG,KACbqgB,EAAIhkC,KAAO,2BACX,MAAM2hD,EAAiBpd,GAAwBP,EAAK1pC,EAAO,KAAO2pC,EAAMC,EAAW,KACnFF,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCpI,EAAIrgB,MAAM,EAAG,MACbqgB,EAAIhkC,KAAO,2BACXukC,GAAwBP,EAAK,IAAK,IAAM2d,EAAiB,EAAGzd,EAAW,MACvEF,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAIzBwV,GAAWA,CACpB5d,EACA1pC,EACA2pC,EACAC,KAEA,IAAKF,GAAgB,MAAT1pC,EAAe,OAE3B,MAAMunD,EAAY,MAClB,GAAc,WAAVvnD,EACA0pC,EAAIY,UAAY,QAChBZ,EAAIhkC,KAAO,mBACXgkC,EAAIgB,SAAS1qC,EAAO2pC,EAAO4d,EAAW3d,QAE1C,GAAc,MAAV5pC,EACA0pC,EAAIY,UAAY,QAChBZ,EAAIhkC,KAAO,mBACXgkC,EAAIgB,SAAS1qC,EAAO2pC,EAAO4d,EAAW3d,OACnC,CACHF,EAAIY,UAAY,OAChB,MAAMkd,EAAgB,GAAGxnD,IAAQie,MAAM,KAEvC,IAAIq2B,EAAakT,EAAcr+C,QAAO,CAACs+C,EAAM7Q,EAAMhpB,KAC/C8b,EAAIhkC,KAAO,2BACX,IAAIgiD,EAAYD,EAAO/d,EAAIkB,YAAYgM,GAAMt2C,MAO7C,OALIstB,EAAQ45B,EAAcxpC,OAAS,IAC/B0rB,EAAIhkC,KAAO,cACXgiD,GAAahe,EAAIkB,YAAY,KAAKtqC,OAG/BonD,CAAS,GACjB,GAEH,GAAIpT,EAAa,EAAG,CAChB,MAAMqT,EAAgB9lC,KAAK6I,IAAI68B,EAAYjT,EAAY,GAEvD5K,EAAIrgB,MAAMs+B,EAAe,GACzBH,EAAcr+C,QAAO,CAACs+C,EAAMG,EAAGh6B,EAAOi6B,KAClC,MAAMC,EAAUD,EAAIA,EAAI7pC,OAAS,EAAI4P,GACrC,IAAIm6B,EAAWN,EAWf,OAVA/d,EAAIhkC,KAAO,2BACXqiD,GAAYre,EAAIkB,YAAYkd,GAASxnD,MAAQqnD,EAC7Cje,EAAIgB,SAASod,EAASC,EAAWJ,EAAe/d,GAE5Chc,EAAQ45B,EAAcxpC,OAAS,IAC/B0rB,EAAIhkC,KAAO,mBACXqiD,GAAYre,EAAIkB,YAAY,KAAKtqC,MAAQqnD,EACzCje,EAAIgB,SAAS,IAAKqd,EAAWJ,EAAe/d,IAGzCme,CAAQ,GAChBpe,EAAO4d,GACV7d,EAAIrgB,MAAM,EAAIs+B,EAAe,EACjC,CACJ,ICzFApnD,OAAQ+oC,GACRhpC,MAAOipC,IACPlpC,EAgBS2nD,GAAsBA,CAACtyB,EAAiBuyB,EAA+Bn8B,KAChF,MAAM,KACFzO,GACAymB,MACE,gBACF+B,EAAe,iBACfqiB,EAAgB,oBAChBC,EAAmB,eACnBC,EAAc,iBACdC,EAAgB,gBAChBC,EAAe,cACfC,EAAa,kBACbC,EAAiB,wBACjBC,EAAuB,uBACvBC,EAAsB,eACtBC,EAAc,cACdC,EAAa,iBACbC,EAAgB,kBAChBC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,kBACfC,GACAhB,GACE,OACFtvC,EAAM,cACNyB,EAAa,eAAEnX,EAAc,MAC7B7C,EAAK,KAAE6Y,EAAI,OAAEC,EAAM,UAAEC,EAAS,QAAEnW,EAAO,KACvC1B,EAAI,UAAE+X,EAAS,cAAED,EAAa,gBAC9BgD,EAAe,kBAAEC,EAAiB,cAAEF,EAAa,cAAED,EAAa,eAAEI,EAAc,OAChFjB,GAAM,YACNJ,GAAW,YACXD,GAAW,WACXjY,GAAU,cAAE6X,GAAa,eAAEC,GAAc,kBAAEE,GAAiB,iBAAED,GAAgB,cAAEM,GAAa,IAC7FG,GAAG,IAAEC,GAAG,QAAEd,GAAO,UACjBnB,GAAS,SACTE,GAAQ,UAAED,GAAS,KAAEE,GAAI,cAAEC,GAAa,MACxC2B,GAAK,SACLG,GAAQ,QAAEO,GAAO,QAAEN,GAAO,aAC1BK,GAAY,eACZJ,GAAc,mBAAEG,GAAkB,YAAEF,GAAW,iBAAEC,GAAgB,eACjEI,IACAoB,EAEE6rC,GAAkB9iB,iBAAwC,CAC5DhmC,MAAO,CACHkB,KAAM,QACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9B/xB,UAAW,CACPjY,KAAM,YACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9B5vB,QAAS,CACLpa,KAAM,UACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9BtvB,QAAS,CACL1a,KAAM,UACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9BhqC,KAAM,CACFA,KAAM,OACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9BtwB,YAAa,CACT1Z,KAAM,cACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,WAE9B+d,QAAS,CACL/nD,KAAM,UACNm0B,MAAO,EACP0zB,MAAO,EACPC,WAAYA,IAAM/d,QAAQC,aAI5BuS,GAAgC,SAAlBjjC,GACd7X,GACI,QACA3C,EACJwa,GAEAM,GAA8B,OAAXD,SAAW,IAAXA,QAAW,EAAXA,GAAaC,iBAEhCggC,GpCtKkB79B,IACF,WAAfA,EAAKjd,OAAsBmd,GAAaF,GoCqK9BisC,CAAYjsC,GACvB2gC,GAAQ5gC,GAASC,GACjB1C,GpC/JgB0C,IACfA,EAAK1C,OoC8JG4uC,CAAUlsC,GACnBmsC,GAAYjsC,GAAaF,GACzB0gC,GAAezgC,GAAgBD,IAE/B,KAAElc,GAAO,IAAG,UAAEO,IAAcsB,EAC5BymD,MAAmBtoD,GAAO,IAAMO,IAChCgoD,GAAc,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAU/rC,SAASkgC,IACzF8L,GAAclsC,GAAiBrd,IAC/B,WACFwpD,GAAU,wBACVC,GAAuB,gCACvBC,GAA+B,sBAC/BC,GAAqB,sBACrBC,GAAqB,6BACrBC,IACAC,mBAAQ,IC/KYvhC,KAkBrB,IAlBsB,YAEzBghC,EAAW,cACXF,EAAa,gBACbrtC,EAAe,kBACfC,EAAiB,eACjBC,EAAc,cACdJ,EAAa,cACbC,GAUHwM,EACG,MAAMwhC,EAAa,CAAE7mD,MAAOqmD,EAAc,UAAY,WAChDC,EAAaH,EACb,CACEtd,KAAM,EACNlyB,EAAG,EACH5T,YAAasjD,EAAc,UAAY,aACpCQ,GAELA,GAECC,EAAkBC,EAAqBC,EAAiBC,GAAoBnuC,EAC7EytC,EAA2CO,EAC3C,IACME,EAAkB,CAAErwC,EAAG,EAAGkyB,KAAM,EAAG9lC,YAAakkD,GAAqB,CAAC,EAC1EjnD,MAAO+mD,GAET,CAAC,GAEAG,EAA0BC,EAA6BC,EAAyBC,GAA4BtuC,EAC7GytC,EAAmDU,EACnD,IACME,EAA0B,CAAEzwC,EAAG,EAAGkyB,KAAM,EAAG9lC,YAAaskD,GAA6B,CAAC,EAC1FrnD,MAAOmnD,GAET,CAAC,GAEAG,EAAgBC,EAAmBC,EAAeC,GAAkB5uC,EACrE6tC,EAAyCY,EACzC,IACME,EAAgB,CAAE7wC,EAAG,EAAGkyB,KAAM,EAAG9lC,YAAa0kD,GAAmB,CAAC,EACtEznD,MAAOunD,GAET,CAAC,GAEAG,EAAgBC,EAAmBC,EAAeC,GAAkBjvC,EACrE6tC,EAAyCiB,EACzC,IACME,EAAgB,CAAEjxC,EAAG,EAAGkyB,KAAM,EAAG9lC,YAAa8kD,GAAmB,CAAC,EACtE7nD,MAAO2nD,GAET,CAAC,GAEAG,EAAuBC,EAA0BC,EAAsBC,GAAyBjvC,EAQvG,MAAO,CACHstC,aACAC,0BACAI,6BAVkDmB,EAChD,IACME,EAAuB,CAAErxC,EAAG,EAAGkyB,KAAM,EAAG9lC,YAAaklD,GAA0B,CAAC,EACpFjoD,MAAO+nD,GAET,CAAC,EAMHvB,kCACAC,wBACAC,wBACH,EDoGUwB,CAAa,CAChB9B,eACAC,eACAF,iBACArtC,kBACAC,oBACAC,iBACAJ,gBACAC,mBAEL,CACCutC,GACAC,GACAF,GACArtC,EACAC,EACAC,EACAJ,EACAC,IAGEsvC,GAAsBjyC,GAAUsiB,cAChC4vB,GAAwB1wC,GAAY9D,KAAI7V,GAAQA,EAAKq6B,SAAQlmB,KAAgB,QAAXmD,EAAmB,SAAM,iBAC3FwiC,GAAkC,SAAlBvgC,IAA4B7X,MACzCwY,IAAOC,IAAQb,IAAUD,GAAQsD,QACpCwrC,GACApO,GAA4B,SAAb3hC,GACf+vC,IAAazL,GACA,OAAbtkC,IAAqBkB,IAErB,eACFirB,GAAc,iBACd+lB,GAAgB,aAChB7N,GAAe,SAAQ,SACvBnnB,IACA7K,EACE8/B,GAAcl2B,IAA6B,IAAnBkQ,GAExBqY,GAAaiM,mBAAQ,IAAMhf,GAAkBhyB,EAAQ1P,IAAY,CAAC0P,IAClEglC,GAAgBgM,mBAAQ,IAAMhf,GAAkB,CAAC/xB,GAAYzP,IAAe,CAACyP,IAGnF4tB,qBAAU,KACD6kB,KACL1C,GAAgB3kB,QAAQnkC,MAAM+oD,OAAS,EACvCD,GAAgB3kB,QAAQnkC,MAAMgpD,WAAaxzB,UAAa,IAADi2B,EACnD,MAAMniB,EAA4B,QAAzBmiB,EAAGzD,EAAe7jB,eAAO,IAAAsnB,OAAA,EAAtBA,EAAwBnlB,WAAW,MACzCiX,EAAgBuK,EAAiB3jB,QACjCqZ,EAAmBuK,EAAoB5jB,QAE7C,IAAKyG,GAAYtB,KAAS0e,EAAe7jB,QAAS,OAElD,MAAM4a,EAAoB,IAAKj+C,OAA4B8B,IAEvDxB,UAAW28C,EACXh9C,KAAMi9C,EAAW,UACjB18C,EAAS,SACTH,GACA49C,EAQE2M,EAAgBA,CAAC9xC,EAAWC,EAAW8xC,EAAWC,IAC7C,IAAI3gB,SAAQC,IACfrE,YAAW,KACPyC,EAAItkC,UAAYgV,EAAgB7Y,EAAWN,EAC3CyoC,EAAIyE,SAASn0B,EAAGC,EAAG8xC,EAAGC,GACtB1gB,GAAQ,EAAK,GACd,EAAE,IAGP2gB,EAAe7N,EAAc,GAAWD,QAGxC2N,EAAc,EAAG,EAAGviB,GAAaD,IAEvC,MAAM,cACFyX,EAAa,eACbV,EAAc,YACdD,EAAW,UACXH,EAAS,iBACT0B,EAAgB,sBAChBD,EAAqB,SACrBV,EAAQ,mBAERgB,EAAkB,qBAClBC,EAAoB,gBAEpBG,EAAe,eACfC,EAAc,cACdC,EAAa,mBACbE,EAAkB,yBAClBc,EAAwB,iBACxBZ,EAAgB,eAChBC,EAAc,eACdZ,EAAc,oBAEdkB,EAAmB,kBACnBL,EAAiB,qBACjBC,EAAoB,gBACpBC,EAAe,eAEfE,EAAc,cACdE,EAAa,qBACbC,EAAoB,oBACpBC,EAAmB,4BACnBC,EAA2B,gBAC3BE,EAAe,0BACfC,EAAyB,kBACzBC,EAAiB,qBACjBE,EAAoB,mCAEpB7E,GACApB,GAAsB,CACtB9P,OAAQwa,EAAe7jB,QACvBoZ,gBAAeC,mBACfjlC,SACAvY,QAAOy9C,eACPzjC,gBACAnX,iBACAsW,aACAE,YAAUC,QACVT,OACA6kC,gBACA96C,QAASm8C,EACTxkC,UAAQojC,gBAAcC,SACtBj7C,cACAk7C,cACAC,mBAyBJ,GArBIN,GAAoBlU,GAAK2W,IACzB1C,GAAiBjU,IAAQhoC,GAAW0+C,UAClCH,UACA0C,UACAgB,IAGD5gD,KACIrB,UACKsgD,UACAC,UACAS,UAEAG,WAEJP,UACAM,UACAQ,KAINrgD,KAAe4X,KAAWjZ,EAAW,CAErC,GAAIi8C,GAAiBjU,GAAOiU,EAAcp9C,OAAS,EAAG,CAClD,MAAQD,MAAOyB,EAAUxB,OAAQ2rD,GAAcvO,GACzC,cACF6B,EAAa,cAAEE,EAAa,aAC5BE,EAAY,aACZC,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,EAAmCnB,SAGjCmO,EACFjM,EAAcC,EACdC,EAAkBC,GAGtBK,EAAe,YACf3W,EAAI9C,UACA+W,EACA6B,EAAeE,EACf39C,EAA2B,EAAhBy9C,EAAmB0M,EAAYtM,EAC1CC,EAAcC,EACdC,EAAkBC,EAE1B,OAEMgC,UACAC,GAAqB,EAC/B,CAuBA,SApBMiB,UACAC,KAGFpgD,IAAe4X,IAAWjZ,UACpBggD,UAEAc,EAAmByJ,EAAc,gBACjCzJ,EAAmByJ,EAAchzC,SACjCoqC,IACF4I,SAAoB3I,KAGvB5hD,UACK6hD,UACAP,KAENiJ,SAAoBzI,IAGpB9hD,EAAW,CACX,GAAIiZ,SAEMyoC,SACH,GAAIrgD,GAAY,CAEnB,MAAMk8C,EAAmBt9C,EAA2BiB,SAASV,MACvDP,EAA2Be,iBAAiBR,MAElD,GAAIy7C,GAAiBjU,GAAOiU,EAAcp9C,OAAS,EAAG,CAClD,MAAM,aACFs/C,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,EACAnB,EACA,IAAKz8C,OAA4B8B,EAAS7B,KAAM,IAAKO,WAAW,GAChEu9C,SAGE6M,EACFjM,EAAcC,EACdC,EAAkBC,GAEtBK,EAAe,WACnB,CACI4L,UACMzJ,EAAmByJ,EAAc,gBACjCzJ,EAAmByJ,EAAchzC,UAErCoqC,GACV,OACMrB,UACAgB,UACAX,IACF1E,GAAiBjU,GAAK0W,UACpB+C,IAGFpgD,KAAe4X,UACTsnC,GAAqB,SACrBP,UACAc,GAAmB,EAAO,gBAC1BA,GAAmB,EAAOvpC,SAC1BqqC,YAEArB,UACAS,UACAG,WAEJU,GACV,CAQA,GANIpI,UAAoB4G,EAAe,CACnCz+C,MAAO,aACJymD,MAIFhnD,IAAc4X,GAAQ,OACjBgnC,EAAiBjnC,UACjBooC,GAAgB,GACtB,MAAM3F,EAAajR,GAAa,CAAExC,SAAQqgB,KACtC5O,SL7QcvlB,OAC9BgY,EACAlzB,EACAyR,KAEA,MAAMud,EAAMkE,EAAOlH,WAAW,MAE9B,IAAKgD,IAAQnqB,MAAMC,QAAQ9E,GAAU,aAE/BizB,GACFC,EACA,qBACA,IAAK,KACL,IAAK,GACLzhB,GAEJ,MAAMgxB,EAAajR,GAAa,CAAExC,SAAQvd,IAC1Cud,EAAIY,UAAY,QAChBZ,EAAIrgB,MAAM,IAAK,GACfqgB,EAAIhkC,KAAO,+BACXgkC,EAAIgB,SAAS,GAAGhwB,EAAQsD,SAAU,OAAQ,MAC1C0rB,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCpI,EAAIY,UAAY,OAChB6S,GAAY,EKsPwBgP,CAAmB/D,EAAe7jB,QAAgB,OAAP7pB,SAAO,IAAPA,MAAW,GAAIqvC,IAClF5M,GACJ,OAEM4D,UACAkC,IACDtoC,IAAWojC,UAAoBiD,EAAS,CAAE70B,MAAOy9B,GAAYjwC,mBAC7DjY,SAAiB2gD,UAChBD,SL7WgBxsB,WAkB3B,IAlBkC,OACrCgY,EAAM,KACNprC,EAAI,WACJO,EAAU,OACV4X,EAAM,mBACNmB,EAAkB,YAClBF,EAAW,SACXwwC,EAAQ,UACRzQ,GAUH3iB,EAGG,GAFkB,OAAN4U,QAAM,IAANA,OAAM,EAANA,EAAQlH,WAAW,MAE/B,CAEA,GAAI5qB,EAAoB,CACpB,MAAM0lC,EAA+Cz+C,EAC/C,CAAC,IAAK,KAAM,IAAK,IACjB4X,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBgzB,GACFC,EACA,2BAA2BprC,IAAO4pD,EAAW,YAAc,YACxD5K,EACM,OAAT7F,QAAS,IAATA,KAAWt1C,YAAc,IAAKs1C,EAAWxP,KAAM,EAAGnyB,EAAG,EAAGC,EAAG,GAAM0hC,EAEzE,CACA,GAAI//B,EAAa,CACb,MAAM4lC,EAA+Cz+C,EAC/C,CAAC,IAAK,KAAM,MAAO,IACnB4X,EACI,CAAC,IAAK,IAAK,MAAO,IAClB,CAAC,GAAI,IAAK,IAAK,UAEnBgzB,GACFC,EACA,wBAAwBprC,IAAO4pD,EAAW,YAAc,YACrD5K,EACM,OAAT7F,QAAS,IAATA,KAAWt1C,YAAc,IAAKs1C,EAAWxP,KAAM,EAAGnyB,EAAG,EAAGC,EAAG,GAAM0hC,EAEzE,CA7BgB,CA6BhB,EK4Tc0Q,CAAmB,CACrBze,OAAQwa,EAAe7jB,QACvB/hC,KAAOknD,KAAgB3mD,GAAc,QAAU,QAC/CqpD,UAAWhO,EAAc,IAAM18C,KAAeqB,GAC9C+Y,sBAAoBF,eACpBjB,UAAQ5X,cACR44C,UAAWsO,WAETxG,GAAmB,EAC5B,GACF,CACCmI,GACA1D,EACAC,EACAC,EACAhoD,EACAuY,EACAyB,EACAnX,EACAsW,GACAskC,GACA5kC,EACAS,GACAC,GACAF,GACAqC,GACAnB,GACA5X,GACA6Y,GACAmiC,GACAC,GACA0L,GACAhvC,GACAqvC,GACAE,GACA/L,GACAD,GACAj7C,EACA86C,GACA3C,GACAyO,GACA+B,KAIJ5kB,qBAAU,KAAO,IAADulB,EACZ,IAAKV,GAAa,OAClB,MAAMliB,EAAoC,QAAjC4iB,EAAG5D,EAAuBnkB,eAAO,IAAA+nB,OAAA,EAA9BA,EAAgC5lB,WAAW,MAElDsE,GAAYtB,IACb3mC,KACAgkD,GAAUrd,EAAsB,OAAjB3uB,SAAiB,IAAjBA,MAAqB,EAAG,KAAM,KAC7CgsC,GAAUrd,EAAqB,OAAhB5uB,SAAgB,IAAhBA,MAAoB,EAAG,IAAO,KACjD,GACD,CAAC8wC,GAAa7oD,GAAYgY,GAAmBD,GAAkB4tC,IAGlE3hB,qBAAU,KACD6kB,KACL1C,GAAgB3kB,QAAQjjC,KAAK6nD,OAAS,EACtCD,GAAgB3kB,QAAQjjC,KAAK8nD,WAAaxzB,UAAa,IAAD22B,EAAAC,EAClD,MAAM9iB,EAA2B,QAAxB6iB,EAAGhE,EAAchkB,eAAO,IAAAgoB,OAAA,EAArBA,EAAuB7lB,WAAW,MACxCF,EAAiC,QAAxBgmB,EAAGjE,EAAchkB,eAAO,IAAAioB,OAAA,EAArBA,EAAuBhmB,YAEpCwE,GAAYtB,IAASlD,SAEpBod,GACFla,EACApoC,EACW,QAAXqX,EAAmB,GAAK,GAAI,IAC5BY,KAAcpW,EACI,QAAXwV,EAAmB,IAAM,IACd,QAAXA,EAAmB,IAAM,IpCxehBgQ,KAYzB,IAAD8jC,EAAAC,EAAA,IAZ2B,OAC7B/zC,EAAM,MACNvY,EAAK,UACLiZ,EAAS,cACTD,EAAa,KACbH,GAOH0P,EAEG,GAAsB,WAAlBvP,EACA,OAAOC,EAGX,MAAM0kC,EAAezgC,GAAgB,CAAEld,UACjCupD,EAAclsC,GAAiBrd,GAErC,IAAIusD,EAAiB,UACN,QAAXh0C,IAAkBg0C,EAAiB,OACnC5O,GAA2B,QAAXplC,IAAkBg0C,EAAiB,SAGvD,IAAIC,EAAkB,CAClBxnD,UAAWukD,EAAc,UAAY,UACrCrwC,kBAAmBqwC,EAAc,UAAY,WAEjD,GAAsB,eAAlBvwC,EAAgC,CAAC,IAADyzC,EAAAC,EAChC,MAAMC,EAAkB,IAAKhoD,EAAmC,QAAjB8nD,EAACxzC,EAAUlU,cAAM,IAAA0nD,IAAI,WAAW7sD,OAK/E,OAJK+E,EAAyC,QAAvB+nD,EAACC,EAAgB5nD,cAAM,IAAA2nD,IAAI,WAAW9sD,MAAM0F,OAC/DqnD,EAAgBrnD,KAAOinD,GAGpB,IACAC,KACAG,EAEX,CAEA,IAAIC,EAAoBjP,EAClB,CACEn5C,YAAY,EACZW,UAAW,EACXgtC,YAAa,QAEf,CAAC,EAEP,MAAM0a,EAAqB,WAATh0C,GAAmD,QAAlCwzC,EAA2B,QAA3BC,EAAG3nD,EAAmBkU,UAAK,IAAAyzC,OAAA,EAAxBA,EAA0B1sD,aAAK,IAAAysD,IAAS,CAAC,EACzES,EAAuB,SAAV9sD,EAAmB2E,EAAmB8B,UAAU7G,MAAQ,CAAC,EAG5E,MAAO,CACH0F,KAAMinD,KACHC,KACAI,KACAC,KACAC,EACN,EoC6aWC,CAAiB,CAAEx0C,SAAQvY,QAAOiZ,YAAWD,gBAAeH,SAC5D,CAAE8kC,gBAAcplC,SAAQ6tB,YAAWpmC,QAAO6b,mBAC7C,EACJ,GACF,CACC2vC,GACAryC,GACAN,EACAN,EACAvY,EACA6b,GACA8hC,GACAz8C,EACAinD,EACAlvC,EACAD,IAIJ2tB,qBAAU,KAAO,IAADqmB,EACZ,IAAKxB,GAAa,OAClB,MAAMliB,EAA2B,QAAxB0jB,EAAGxE,EAAcrkB,eAAO,IAAA6oB,OAAA,EAArBA,EAAuB1mB,WAAW,MAE9C,IAAKsE,GAAYtB,KAASyR,GAAc,OAExC,MAAMgC,EAAajR,GAAa,CAAExC,SAAQqgB,KAC1C3C,GAAa1d,EAAK,MAAO,MAAQ,UACjC4d,GAAS5d,EAAKnuB,GAAK,QAAS,UACvBZ,KACDysC,GAAa1d,EAAK,MAAO,OAAQ,UACjC4d,GAAS5d,EAAKluB,GAAK,QAAS,WAEhC2hC,GAAY,GACb,CAACyO,GAAarwC,GAAKC,GAAKb,GAAQ6uC,GAAWO,GAAuBnB,EAAezN,KAGpFpU,qBAAU,KAAO,IAADsmB,EACZ,IAAKzB,GAAa,OAClB,MAAMliB,EAA4B,QAAzB2jB,EAAG1E,EAAepkB,eAAO,IAAA8oB,OAAA,EAAtBA,EAAwB3mB,WAAW,MAE1CsE,GAAYtB,IDjbA4jB,EACrB5jB,EACA1pC,EACAoqC,KASA,IAAKV,EAAK,OAEV,MAAM,WAAE3mC,EAAU,OAAE4X,EAAM,WAAE4yC,EAAU,OAAE50C,EAAM,YAAE+wC,EAAW,UAAE/N,GAAcvR,EAC3E,IAAIojB,EAAU,KACVnjD,EAAU,EACVojD,EAAU,EACd/jB,EAAIhkC,MAAU6nD,EAAa,OAAS,IAAzB,4BACI,QAAX50C,IACA60C,EAAU,KACVnjD,GAAW,EACXojD,GAAW,GAEf,MAAMC,EAAiBxhB,GAAa,CAChCxC,MACApmC,MAAQomD,IAAgB3mD,EAAc,UAAY,UAClDsD,YAAaknD,EACP7D,EAAc,UAAY,UAC1B,UACNzvC,EAAG,EACHD,EAAG,EACHmyB,KAAMohB,IAAexqD,EAAa,EAAI,KACnC44C,KACU,OAATA,QAAS,IAATA,KAAWt1C,YAAc,CAAE2T,EAAG,EAAGC,EAAG,EAAGkyB,KAAM,GAAM,CAAC,IAGxDppC,EACAknC,GAAwBP,EAAK1pC,EAAOwtD,EAAS,MAAQC,EAAS,QAAUpjD,GACjEsQ,EACPkwB,GAAyBnB,EAAK1pC,EAAOwtD,EAAS,OAASC,EAAS,OAASpjD,GAEzEwgC,GAAyBnB,EAAK1pC,EAAOwtD,EAAS,OAASC,EAAS,MAASpjD,GAE7EqjD,GAAgB,ECuYZJ,CACI5jB,EACApuB,GACA,CACIX,UAAQ5X,cACRwqD,WAAY9D,KAAkB1mD,GAC9B4V,SACA+wC,eACA/N,UAAWsO,IAElB,GACF,CACC2B,GACAjzC,EACAgC,GACA5X,GACA2mD,GACAf,EACArtC,GACAyiC,GACAF,GACA4L,GACAQ,KAIJljB,qBAAU,KAAO,IAAD4mB,EACZ,IAAK/B,GAAa,OAClB,MAAMliB,EAA+B,QAA5BikB,EAAGnF,EAAkBjkB,eAAO,IAAAopB,OAAA,EAAzBA,EAA2BjnB,WAAW,MAClD,IAAKsE,GAAYtB,GAAM,OAEvB,MAAMkkB,EE3lBkBjlC,KAkBzB,IAADklC,EAAAC,EAAA,IAlB2B,IAC7BpkB,EAAG,MACH1pC,EAAK,OACL2Y,EAAM,UACN66B,EAAS,eACTua,EAAiB,EAAC,YAClBrE,EAAW,UACX7kD,EAAS,UACT82C,GAUHhzB,EACG,IAAKqiB,GAAYtB,GAAM,OAAO,EAE9B,MAAMgkB,EAAiBxhB,GAAa,CAChCxC,MACApmC,MAAOomD,EAAc,UAAY,UACjCrjD,YAAaxB,EACP6kD,EAAc,UAAY,UAC1B,UACN1vC,EAAG,EACHC,EAAG,EACHkyB,KAAMtnC,EAAY,EAAI,KACnB82C,KACU,OAATA,QAAS,IAATA,KAAWt1C,YAAc,CAAE2T,EAAG,EAAGC,EAAG,EAAGkyB,KAAM,GAAM,CAAC,KAGtD,SAAEjkC,EAAQ,aAAED,EAAcD,UAAW1H,GAAuC,QAAhCutD,EAAGjlD,EAAsB+P,UAAO,IAAAk1C,IAAIjlD,EAA2B,IAC3GolD,EAAmB,WAAWx9B,KAAKxwB,GACnC4M,EAAWwH,GAAiBuE,IAC5B,KAAEjT,GAASkH,EACXytC,EAAiBJ,GAAkBj6C,EAAO2Y,EAAQ,CAAEuhC,WAAW,EAAOj+B,gBAAgB,IAG5F,IAAIo4B,EAAW,CACXQ,UAAYmZ,EAAuB,EAAJ,EAC/BphD,WACAgoC,YAAa/oB,MAEburB,EAAkB,EAClB6W,EAA0B,IAC1B3d,EAAe1jC,EAASnB,SAAS,GACrC,IAAK,IAAIopC,EAAY,EAAGA,EAAYjoC,EAASnB,SAASuS,OAAQ62B,IAAa,CACvEvE,EAAe1jC,EAASnB,SAASopC,GACjC,MAAMsP,EAAat4B,GAAiB,CAChCK,cAAexmB,EACfumB,YAAa,GAAGqkB,EAAavkC,aAC7BggB,cAAelnB,EAAY,OAAS,KAExC,IAAIqpD,EAAmB,CACnBrZ,YACAjoC,WACAgoC,YAAauP,GAEbgK,EAAoB,EAqBxB,GApBAzkB,EAAIhkC,KAAOy+C,EAAW33B,UACtBkd,EAAIY,UAAY,OAChB2jB,EAA0B5jC,IACtBO,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzD5M,MACA9e,SACA2rB,cAAe,CAAC8D,GAChB1hC,SAAQ07B,SAAU6Z,EAClB5tD,UAGJ,QAAIo2C,EAAmB,KACvByX,EAAoB1X,EAAgB,GAAGW,iBAChC,EAAI,IAInBA,EAAkB+W,EAClB9Z,EAAW6Z,EACPD,GAA2B,IAAM,KACzC,CAGA,MAAMpkB,EAASokB,EAA0B,IAEzCvkB,EAAIrgB,MAAMwgB,EADK,GAEf,MAAM3mC,EAAS00C,GAAS,CACpBlO,MACAsM,UAAW7F,GAAakK,GACxBxQ,SAAQl/B,OALG,EAMXzC,SAAwB,SAAdsrC,EAAuBtrC,EAAYA,EAAWkvC,EAAkBvN,EAC1E5hC,aAAcA,GAAoC,QAAxB6lD,EAAIxd,EAAajmC,eAAO,IAAAyjD,IAAIhkD,EAAoBO,SAAW0jD,EACrF1Z,WACA17B,SACAg3B,WAAY7W,IAAkD,IAAjD,IAAE4Q,EAAG,OAAE6E,EAAM,WAAEyB,EAAU,eAAED,GAAgBjX,EACpD4Q,EAAIgB,SAAS6D,EAAQyB,EAAYD,EAAe,IAMxD,OAHArG,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC4b,IAEOxqD,EAAO60C,SAAS,EFmfGqW,CAAiB,CACnC1kB,MACA1pC,MAAOyb,GACPiuC,eACAlW,UAAW,OACX76B,SACA9T,UAA2B,SAAhBg5C,IAA0B4L,GACrC9N,UAAWsO,KAEf,GAAItuC,GAAgB,ED/kBE,SAC1B+tB,GAUE,IATFC,EAAItrB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACPurB,EAAQvrB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,QACX0vC,EAAc1vC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjB+rB,EAGC/rB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,CACAgsB,QAAQ,GAGZ,IAAKX,EAAK,OAEV,MAAM,OAAEW,GAAS,EAAK,UAAEsR,GAAoB,OAANvR,QAAM,IAANA,IAAU,CAAC,EAC3C+S,EAAajR,GAAa,CAC5BxC,SACGiS,KACU,OAATA,QAAS,IAATA,KAAWt1C,YAAc,CAAE2T,EAAG,EAAGC,EAAG,EAAGkyB,KAAM,GAAM,CAAC,IAG5DzC,EAAIhkC,KAAO,qCAEX,IAAIkQ,EAAO+zB,EACXD,EAAIgB,SAAS,IAAK90B,EAAMg0B,EAAWmkB,GAC/B1jB,GAAQX,EAAIiB,WAAW,IAAK/0B,EAAMg0B,GACtCh0B,GAAQ8zB,EAAIkB,YAAY,KAAKtqC,MAAQ,EAErCopC,EAAIhkC,KAAO,sCACXgkC,EAAIgB,SAAS,KAAM90B,EAAMg0B,EATD,IAS8BmkB,GAClD1jB,GAAQX,EAAIiB,WAAW,KAAM/0B,EAAMg0B,EAVf,KAWxBh0B,GAAQ8zB,EAAIkB,YAAY,MAAMtqC,MAE9BopC,EAAIhkC,KAAO,sCACXgkC,EAAIgB,SAAS,WAAY90B,EAAMg0B,EAAWmkB,GACtC1jB,GAAQX,EAAIiB,WAAW,WAAY/0B,EAAMg0B,GAC7CuT,GACJ,CCqjBYkR,CACI3kB,EAXS3tB,KAAiBhZ,GACxB4X,GAAS,IAAM,GACfkH,KAAK8I,IAAIijC,EAAgB,OAAQ,QAAqB,QAAXj1C,EAAmB,GAAK,GAC1DoD,KAAiBhZ,GAC1B,IACA,QACegZ,KAAiBhZ,GAChC,EACAg7C,IAAgB,GAAK,EAOvB,CACIpC,UAAW,CACPr4C,MAAOomD,GAAc,UAAY,aAC9BO,KAInB,IACD,CACC2B,GACAjwC,GACAF,GACA+sC,EACAkB,GACA/wC,EACA8wC,GACA9uC,GACAojC,GACAh7C,GACAgZ,GACA8hC,GACAoM,KAIJljB,qBAAU,KAAO,IAADunB,EACZ,IAAK1C,GAAa,OAElB,MAAMliB,EAA8B,QAA3B4kB,EAAGjG,EAAiB9jB,eAAO,IAAA+pB,OAAA,EAAxBA,EAA0B5nB,WAAW,MAEjDwiB,GAAgB3kB,QAAQvoB,QAAQmtC,OAAS,EACzCD,GAAgB3kB,QAAQvoB,QAAQotC,WAAaxzB,UAAa,IAAD24B,EACrD,IAAKvjB,GAAYtB,GAAM,OAEvB,MAAMyV,EAAoB,IAAKj+C,OAA4B8B,IAEvD7B,KAAMi9C,EAAW,UACjB18C,GACAy9C,EACEqP,EG3pBa7lC,KAkBxB,IAAD8lC,EAAAX,EAAA,IAlB0B,IAC5BpkB,EAAG,MACH1pC,EAAK,OACL2Y,EAAM,UACN66B,EAAS,eACTua,EAAiB,EAAC,YAClBrE,EAAW,UACX7kD,EAAS,UACT82C,GAUHhzB,EACG,IAAKqiB,GAAYtB,GAAM,OAEvB,MAAMgkB,EAAiBxhB,GAAa,CAChCxC,MACApmC,MAAOomD,EAAc,UAAY,UACjCrjD,YAAaxB,EACP6kD,EAAc,UAAY,UAC1B,UACNzvC,EAAG,EACHD,EAAG,EACHmyB,KAAMtnC,EAAY,EAAI,KACnB82C,KACU,OAATA,QAAS,IAATA,KAAWt1C,YAAc,CAAE2T,EAAG,EAAGC,EAAG,EAAGkyB,KAAM,GAAM,CAAC,KAGtD,SAAEjkC,EAAQ,aAAED,EAAcD,UAAW1H,GAAsC,QAA/BmuD,EAAG9lD,EAAqBgQ,UAAO,IAAA81C,IAAI9lD,EAA0B,IACzGiE,EAAWsH,GAAgByE,IAC3B,KAAEjT,GAASkH,EACXytC,EAAiBJ,GAAkBj6C,EAAO2Y,EAAQ,CAAEuhC,WAAW,EAAOj+B,gBAAgB,IAG5F,IAAIo4B,EAAW,CACXQ,UAAW,EACXjoC,WACAgoC,YAAa/oB,MAEburB,EAAkB,EAClB6W,EAA0B,IAC1B3d,EAAe1jC,EAASnB,SAAS,GACrC,IAAK,IAAIopC,EAAY,EAAGA,EAAYjoC,EAASnB,SAASuS,OAAQ62B,IAAa,CACvEvE,EAAe1jC,EAASnB,SAASopC,GACjC,MAAMsP,EAAat4B,GAAiB,CAChCK,cAAexmB,EACfumB,YAAa,GAAGqkB,EAAavkC,aAC7BggB,cAAelnB,EAAY,OAAS,KAExC,IAAIqpD,EAAmB,CACnBrZ,YACAjoC,WACAgoC,YAAauP,GAEbgK,EAAoB,EAqBxB,GApBAzkB,EAAIhkC,KAAOy+C,EAAW33B,UACtBkd,EAAIY,UAAY,OAChB2jB,EAA0B5jC,IACtBO,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzD5M,MACA9e,SACA2rB,cAAe,CAAC8D,GAChB1hC,SAAQ07B,SAAU6Z,EAClB5tD,UAGJ,QAAIo2C,EAAmB,KACvByX,EAAoB1X,EAAgB,GAAGW,iBAChC,EAAI,IAInBA,EAAkB+W,EAClB9Z,EAAW6Z,EACPD,GAA2B,IAAM,KACzC,CAGA,MAAMpkB,EAASokB,EAA0B,IAEzCvkB,EAAIrgB,MAAMwgB,EADK,GAEf,MAAM3mC,EAAS00C,GAAS,CACpBlO,MACAsM,UAAW7F,GAAakK,GACxBxQ,SAAQl/B,OALG,EAMXzC,SAAwB,SAAdsrC,EAAuBtrC,EAAYA,EAAWkvC,EAAkBvN,EAC1E5hC,aAAcA,GAAoC,QAAxB6lD,EAAIxd,EAAajmC,eAAO,IAAAyjD,IAAIhkD,EAAoBO,SAAW0jD,EACrF1Z,WACA17B,SACAg3B,WAAY7W,IAAkD,IAAjD,IAAE4Q,EAAG,OAAE6E,EAAM,WAAEyB,EAAU,eAAED,GAAgBjX,EACpD4Q,EAAIgB,SAAS6D,EAAQyB,EAAYD,EAAe,IAMxD,OAHArG,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC4b,IAEO,CAEHtM,SAAwB,SAAd5N,EAAuBtrC,EAAYA,EAAWkvC,EAAkBvN,KACvE3mC,EACN,EHgjBgCwrD,CAAgB,CACrChlB,IAA6B,QAA1B6kB,EAAElG,EAAiB9jB,eAAO,IAAAgqB,OAAA,EAAxBA,EAA0B7nB,WAAW,MAC1C/tB,SACA3Y,MAAOgc,GACPw3B,UAAW,QACXua,eAAgBhQ,IAAgB,EAAI,EACpCl5C,UAAW4kD,GACXC,eACA/N,UAAWsO,KAET0E,EAA8B,QAAXh2C,EAAmB,IAAM,IAC5Ci2C,EAA2B,QAAXj2C,EAAmB,GAAK,GAEK,IAADk2C,EAA9ChzC,IAAoBwsC,EAAiB9jB,cLxhBf3O,WAoB/B,IApBsC,OACzCgY,EAAM,KACNprC,EAAI,WACJO,EAAU,OACV4X,EAAM,aACNoB,EAAY,YACZ+yC,EAAW,SACX1C,EAAQ,UACRzQ,GAYH7hB,EACG,MAAM0nB,GAAgDzlC,GAAgBhZ,EAChE,CAAC,IAAK,KAAM,IAAM+rD,EAAa,IAC/Bn0C,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBgzB,GACFC,EACA,6BAA6BprC,IAAO4pD,EAAW,YAAc,YAC1D5K,EACM,OAAT7F,QAAS,IAATA,KAAWt1C,YAAc,IAAKs1C,EAAWxP,KAAM,EAAGnyB,EAAG,EAAGC,EAAG,GAAM0hC,EACpE,EKyfiBoT,CAAuB,CACzBnhB,OAAQya,EAAiB9jB,QACzBmF,MACAlnC,KAAOknD,KAAgB3mD,GAAc,QAAU,QAC/CqpD,UAAWhO,EAAc,IAAM18C,KAAeqB,GAC9C4X,UAAQ5X,cACR+rD,aAAwC,QAA3BD,EAAiB,OAAhBL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkBpN,gBAAQ,IAAAyN,IAAIF,GAAoBA,EAC1DC,EACA,EACN7yC,gBACA4/B,UAAWsO,IAEnB,CACH,GACF,CACC2B,GACA5vC,GACAqsC,EACAC,EACA3vC,EACAoD,GACAF,GACAlB,GACA5X,GACAg7C,GACA2L,GACA1mD,EACAymD,GACAQ,KAIJljB,qBAAU,KACD6kB,KAEL1C,GAAgB3kB,QAAQ7oB,QAAQytC,OAAS,EACzCD,GAAgB3kB,QAAQ7oB,QAAQ0tC,WAAaxzB,UAAa,IAADo5B,EACrD,YLjoBep5B,WAMpB,IAN2B,IAC9B8T,EAAG,QACHhuB,GAIHod,EACG,GAAKkS,GAAYtB,GAEjB,OAAIhuB,IAAY7X,EAAmBwnC,QAAQC,UACpCe,GAAU3C,EAAK,mBAAmBhuB,EAAQgc,oBAAqB,SAAU,SAAS,EKunBpEu3B,CAAY,CACrBvlB,IAA6B,QAA1BslB,EAAEnG,EAAiBtkB,eAAO,IAAAyqB,OAAA,EAAxBA,EAA0BtoB,WAAW,MAC1ChrB,YACF,EACL,GACF,CAACkwC,GAAalwC,GAASmtC,IAG1B9hB,qBAAU,KAAO,IAADmoB,EAAAC,EACZ,IAAKvD,GAAa,OAElB,MAAMliB,EAA6B,QAA1BwlB,EAAG5G,EAAgB/jB,eAAO,IAAA2qB,OAAA,EAAvBA,EAAyBxoB,WAAW,MAC1C0oB,EAA+B,QAAxBD,EAAGpG,EAAcxkB,eAAO,IAAA4qB,OAAA,EAArBA,EAAuBzoB,WAAW,MAElDwiB,GAAgB3kB,QAAQvpB,YAAYmuC,OAAS,EAC7CD,GAAgB3kB,QAAQvpB,YAAYouC,WAAaxzB,UAC7C,IAAKoV,GAAYtB,KAASsB,GAAYokB,GAAU,OAEhD,MAAM,iBAAEl0C,EAAgB,OAAEC,GAAsB,OAAXF,SAAW,IAAXA,MAAe,CAAC,EAC/Co0C,EAAmBjzC,EAAgB,GAAKjB,EAAS,EACjDm0C,EAAkB9T,GAAW,CAC/B9R,MACAgS,QAASrgC,GACT6/B,YACAhgC,mBACAvC,SACAsD,qBACGg/B,GAA2B,CAC1BtiC,SACAwiC,gBACAC,gBACAF,cAEJS,UAAWkO,GACXzf,OAAQ,CACJyR,wB5C7nBsB,E4C8nBtBD,iB5C9nBsB,E4C8nByByT,UF7pBpCz5B,WAoBxB,IApB+B,IAClC8T,EAAG,YACH1uB,EAAW,UACXxB,EAAS,OACTb,EAAM,MACNvY,EAAK,KACLgsB,EAAI,UACJo9B,EAAS,UACT7N,EAAS,eACT1/B,GAWH+c,EACG,IAAKgS,GAAYtB,GAAM,OAEvB,MAAM6lB,EAAsBv0C,EAAYgD,OAAS,EAC3CwxC,EAAeh2C,IAAc/V,GAAoB,UAAT2oB,EACxCqjC,EAAsBz0C,GACrBw0C,EpCtHmB,SoCsHa,IACjCE,EAA4BH,EACjB,QAAX52C,EACa,UAATyT,EACI,gBAAMqjC,iBACN,IAAIA,KACR,SAAIA,UACR,GACN,IAAKF,EAAqB,OAG1B,MAGMI,EAAkB,CAAErsD,MAHDoa,GAAgBtd,KAAWkd,GAAgB,CAAEld,WAAqB,UAATgsB,EAC5E,UACA,aACgDuvB,GAChDwB,EAAajR,GAAa,CAAExC,SAAQimB,KACpC,iBAAE9X,EAAgB,OAAEhO,GAAW+c,GAAoB,CACrDld,MACA/wB,SACAyT,OACApsB,MAAO0vD,EACP9jD,aAAe49C,OAAwBlrC,EAAZ,UAC3BrC,mBAEJkhC,IAEA,IAAI9yC,EAAqB,QAAXsO,GAAoB,EAAI,EAClCutC,EAAqB,QAAXvtC,GAAoB,EAAI,EAEtC,GAAI62C,EAAc,CACd,MAAM,KAAE7lB,EAAI,SAAEC,GAAaiO,EAAiB,SACtC1K,GACFzD,EACA,uBAAuBlwB,EAAUke,qBACjCxyB,GAASykC,EAA4B,KAArBzkC,EAAM0qD,aAAuB/lB,EAASqc,IACtDhhD,GAAS0kC,EAAgC,GAArB1kC,EAAM0qD,aAAqBvlD,IAC/CnF,GAASA,EAAM0qD,eACf1qD,GAASA,EAAM0qD,cAEvB,CAaI,EEklBUC,CAAgB,CAClBnmB,IAAK0lB,EACLz2C,SACAvY,QACA6b,kBACAutC,aACA7N,UAAWqO,GACX59B,KAAOgvB,GAEDkU,G5C1oBoB,E4C0oB4B,SAAW,QAD3D,QAEN91C,UAAWiyC,GACXzwC,YAAa0wC,IACf,CACL,GACF,CACCE,GACAxQ,GACAD,GACAlgC,GACAI,GACAe,EACAksC,EACA3vC,EACAvY,EACA6b,GACAutC,GACAtO,GACA8O,GACAH,GACA4B,GACAC,GACA3C,IAIJhiB,qBAAU,KAAO,IAAD+oB,EACZ,IAAKlE,GAAa,OAClB,MAAMliB,EAAqC,QAAlComB,EAAGrH,EAAwBlkB,eAAO,IAAAurB,OAAA,EAA/BA,EAAiCppB,WAAW,MAExD,GAAKsE,GAAYtB,IACb3mC,GAAY,CACZ,MAAM,OAAEoY,GAAwB,OAAbC,SAAa,IAAbA,MAAiB,CAAC,EAC/Bi0C,EAAmBhzC,EAAkB,GAAKlB,EAAS,EACzDqgC,GAAW,CACP9R,MACAgS,QAAS7gC,GACTqgC,UAAU,EACVtuC,SAAUT,EAAuBwM,GACjCgjC,UAAWmO,GACXvO,SAAUpzC,EACV+S,oBACAvC,SACAsD,kBACAmuB,OAAQ,CACJyR,wB5CtrB+B,E4CurB/BD,iB5CvrB+B,E4CurByByT,IAGpE,IACD,CACCzD,GACA1wC,GACAvC,EACA5V,GACA0lD,EACA5tC,GACAO,GACAiB,EACAJ,GACA6tC,KAIJ/iB,qBAAU,KAAO,IAADgpB,EACZ,IAAKnE,GAAa,OAClB,MAAMliB,EAA6B,QAA1BqmB,EAAG/G,EAAgBzkB,eAAO,IAAAwrB,OAAA,EAAvBA,EAAyBrpB,WAAW,MAEhDwiB,GAAgB3kB,QAAQ8kB,QAAQF,OAAS,EACzCD,GAAgB3kB,QAAQ8kB,QAAQD,WAAaxzB,UACpCoV,GAAYtB,UACXuU,GACFvU,EACA,iBACAga,GAAerX,GAAU3C,EAAK,iBAAiBga,sBAAiC,EAAG,IACtF,CACJ,GACF,CAACkI,GAAa5C,EAAiB/K,GAAY38C,IAE9C,MAAM0uD,GAAc5pB,iBAA+B,CAAC,GAC9CL,GAAWM,uBAAYzQ,UAKzB,MAAM,WAEF7yB,GAAa,EAAK,QAClBC,GACAitD,EACEC,EAAerqB,EAAgBtB,QAC/B4rB,EAAwB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAcxpB,WAAW,MAErC0pB,EAAgB,SAClBC,EACAF,GAEE,IADFG,EAAkBjyC,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIgtB,SAAiBC,IACxBrE,YAAW,KACP,GAAKopB,EAAY9rB,SAAY4rB,EAEzB,IACIE,EAAY9rB,QAAQgsB,QAAOrtC,IACvB,GAAKA,EACA,CACD,MAAMsR,EAAM/Q,IAAIC,gBAAgBR,GAChC,GAAKsR,EACA,CACD,MAAMg8B,EAAQ,IAAIxjB,MAClBwjB,EAAMnsD,IAAMmwB,EACZg8B,EAAMC,OAAS,KACXN,EAAUvpB,UAAU4pB,EAAO,EAAG,GAC9B/sC,IAAIitC,gBAAgBl8B,GACpB8W,GAAQ,EAAK,EAEjBklB,EAAMG,QAAU,KACZltC,IAAIitC,gBAAgBl8B,GACpB8W,GAAQ,EAAM,CAEtB,MAbUA,GAAQ,EActB,MAjBWA,GAAQ,EAiBnB,GAER,CAAE,MAAOztB,GAELsyC,EAAUvpB,UAAUypB,EAAY9rB,QAAS,EAAG,GAC5CnjB,QAAQC,MAAMxD,GACdytB,GAAQ,EACZ,MA5BoCA,GAAQ,EA6BhD,GACY,GAAbglB,EAAgB,GAE3B,EAEA,GAAIJ,GAAgBC,EAAW,CAAC,IAADS,EAAAC,EAC3BV,EAAUllB,UAAU,EAAG,EAAG5qC,EAAYC,MAAOD,EAAYE,cACnD8qC,QAAQiW,IAAI/8C,OACbC,OAAO0kD,GAAgB3kB,SACvBhG,MAAK,CAACpB,EAAGjf,IAAMif,EAAE1H,MAAQvX,EAAEuX,QAC3Bve,KAAIyR,IAAkC,IAAjC,WAAEygC,EAAU,MAAED,EAAK,KAAE7nD,GAAMqnB,EAC7B,OACe,IAAVwgC,GAAe6G,GAAYzrB,QAAQjjC,KAAU6nD,IAC1C6G,GAAYzrB,QAAQjjC,IAExB0uD,GAAYzrB,QAAQjjC,GAAQ6nD,EAErBC,KAEJ/d,QAAQC,SAAS,KACxBwlB,OAAMjzC,IACNuD,QAAQC,MAAMxD,GAEd,MAAM5Y,EAAM,4BACZs+B,KAAaoE,MAAM1iC,GACnBs+B,KAAaliB,MAAM,CACfpc,MACAu+B,QAAS7M,GAAS,4BAClB8M,YAAa9M,GAAS,iCACxB,IAGV,MAAMgnB,EAAgBuK,EAAiB3jB,QACvC,GAAIoZ,GAAiBwS,EAAW,CAC5B,MAAM,KAAEnuD,EAAI,KAAEC,EAAI,SAAEF,GAAae,EAAuBC,EAAYC,IAC5D1C,MAAO++C,EAAY9+C,OAAQ++C,GAAgB3B,EAE/C2B,EAAc,GACd6Q,EAAUvpB,UACN+W,EACA,EAAG,EACH0B,EAAYC,EACZt9C,EAAMC,EACNF,EAAUA,GAAYs9C,EAAaC,GAG/C,OAEM8Q,EAAchI,EAAgB+H,EAAW,SACzCC,EAAc7H,EAAe4H,EAAW,SACxCC,EAActH,EAAmBqH,EAAW,SAC5CC,EAAc1H,EAAwByH,EAAW,SACjDC,EAAc3H,EAAyB0H,EAAW,SAClDC,EAAcrH,EAAeoH,EAAW,SACxCC,EAAc9H,EAAiB6H,EAAW,SAC1CC,EAAcxH,EAAeuH,EAAW,SACxCC,EAAczH,EAAgBwH,EAAW,SACzCC,EAAc5H,EAAmB2H,EAAW,SAC5CC,EAAc/H,EAAkB8H,EAAW,SAC3CC,EAAcvH,EAAkBsH,EAAW,SAC3CC,EAAcpH,EAAiBmH,EAAW,GAEvB,QAAzBS,EAAA3H,EAAkB1kB,eAAO,IAAAqsB,GAAkB,QAAlBC,EAAzBD,EAA2BlqB,WAAW,aAAK,IAAAmqB,GAA3CA,EAA6CjqB,UAAUspB,EAAc,EAAG,EAC5E,IACD,CACCv5B,GACAuxB,EACAY,EACAT,EACAxiB,EACAyiB,EACAU,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAE,IAGJ,MAAO,CACHG,mBACAnjB,YACH,E,2DI/8BL,MAAMgrB,GAA4B//B,aAAOggC,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgFlCC,GAAiBtoC,IAEP,IAFQ,SAC3BgO,GACahO,EACb,MACO2W,EAAS4xB,GAAcC,oBAAS,IAChCC,EAAWC,GAAcF,oBAAS,IAClCG,EAAWC,GAAcJ,oBAAS,IAClCK,EAAUC,GAAeN,mBAAyC,IACnEO,EAAoBF,EAASxzC,OALjB,GAOlB,OAAO2zC,eAAAC,WAAA,CAAAn/B,SAAA,CACHk/B,eAACZ,GAAyB,CACtBzxB,QAASA,EACT4H,MAAOvQ,EAAS,0BAChBk7B,cAAe,CACXC,SAAUJ,GAAqBN,GAEnCW,OAAQp7B,EAAS,sBACjBq7B,WAAYr7B,EAAS,0BACrBxI,SAAUA,IAAM+iC,GAAW,GAC3Be,KAAMr8B,UACF,IACIy7B,GAAW,GAEX,MAAMa,QAA0B7mB,QAAQiW,IAAIkQ,EAASt6C,KAAI4hB,IAAqB,IAApB,KAAEq5B,EAAI,KAAE7wD,GAAMw3B,EACpE,OAAO,IAAIuS,SAAsC,CAACC,EAAS8mB,KACvD,MAAM/2B,EAAS,IAAIg3B,WACnBh3B,EAAOo1B,OAASz3B,IAAiB,IAAhB,OAAEyL,GAAQzL,EACvB,IAAKyL,EAED,YADA2tB,EAAO,sBAIX,MAAM,OAAElvD,GAAWuhC,EACnB,GAAsB,kBAAXvhC,EAEP,YADAkvD,EAAO,sBAIX,IAAIE,EAAenyC,KAAKC,MAAMld,GAE1Bge,GAAmBoxC,KACnBA,EAAevzC,GAAiBuzC,IAGpC,MAAMC,EAAkBjxC,GAA0BgxC,GAClD,IAAIE,EAA4C,KAahD,GAVIA,EAFAlB,EAEgBiB,EACVlsC,GAAyBqc,GAAW4vB,GAAcj1C,MAAMna,OACxDovD,EAGUC,EACVD,EACAvzC,GAAiB2jB,GAAW4vB,GAAcj1C,OAG/Cm1C,EAED,YADAJ,EAAO,gCAGX,MAAMlvC,EAAO,IAAIuvC,KACb,CAAC,GAAGtyC,KAAKslB,UAAU+sB,MACnB,CAAEhwD,KAAM,qBAEZ8oC,EAAQ,CAAEpoB,OAAM5hB,QAAO,EAE3B+5B,EAAOq3B,WAAWP,EAAK,GACzB,KAGAQ,EAAY,IAAIC,KACtBV,EAAkB9yC,SAAQ0a,IAAqB,IAApB,KAAE5W,EAAI,KAAE5hB,GAAMw4B,EACrC64B,EAAUR,KAAK7wD,EAAM4hB,EAAK,IAE9B,MAAM2vC,QAAgBF,EAAUG,cAAc,CAC1CtwD,KAAM,SAEVygB,GACI,qBACA4vC,EACA,mBAEJxB,GAAW,GACXH,GAAW,EACf,CAAE,MAAOrzC,GACLuD,QAAQC,MAAMxD,GACd0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,yBAClB8M,YAAa9M,EAAS,+BAE1B06B,GAAW,EACf,GACF5+B,SAAA,CAEFk/B,eAAA,OAAKxtD,UAAU,aAAYsuB,SAAA,CACvB9uB,cAAA,SAAA8uB,SAAO,yCACP9uB,cAAA,OAAA8uB,SACI9uB,cAAA,UACIQ,UAAWusB,GAAW,gBAAiB4gC,EAAY,UAAY,IAC/DyB,QAASA,IAAMxB,GAAWloD,IAAQA,IAAKopB,SAEvC9uB,cAACqvD,KAAkB,QAG3BrvD,cAAA,SAAA8uB,SAAO,qBAEXk/B,eAAA,OAAKxtD,UAAU,aAAYsuB,SAAA,CACvB9uB,cAAA,SACInB,KAAK,OACLywD,OAAO,mBACPC,UAAQ,EACRC,SAAUt1C,IACN,MAAMu1C,EAAgBv1C,EAAE4mB,OAAO4uB,MAE/B,GAAID,EAAe,CACf,MAAME,EAA+C,GAErD,IAAK,IAAIn1B,EAAM,EAAGA,GAAOi1B,EAAcp1C,OAAQmgB,IAAO,CAClD,MAAMo1B,EAAaH,EAAcI,KAAKr1B,GAClCo1B,GAAYD,EAAanc,KAAK,CAAEgb,KAAMoB,EAAYjyD,KAAMiyD,EAAWjyD,MAC3E,CAEAmwD,EAAY6B,EAChB,KAGR3B,eAAA,OAAKxtD,UAAU,WAAUsuB,SAAA,CACpBkE,EAAS,sCACTy6B,GAAaztD,cAAA,OAAKQ,UAAU,cAAasuB,SACrCkE,EAAS,wCAEb+6B,GAAqB/tD,cAAA,OAAKQ,UAAU,UAASsuB,SACzCkE,EAAS,kCApIZ,SAuINhzB,cAAA,OAAKQ,UAAU,YAAWsuB,SACrB++B,EAASt6C,KAAIgjB,IAAe,IAAd,KAAE54B,GAAM44B,EACnB,OAAOy3B,eAAA,OAAgBxtD,UAAU,aAAYsuB,SAAA,CACzC9uB,cAAA,OAAA8uB,SAAMnxB,IACNqC,cAAA,OAAKQ,UAAU,cAAasuB,SACxB9uB,cAAC8vD,KAAa,CACV3B,SAAUV,EACV2B,QAASA,IAAMtB,GAAYiC,GAChBA,EAAQjnC,QAAOtV,GAASA,EAAM7V,OAASA,YAN7CA,EAUX,YAKtBqC,cAACgwD,KAAO,CAACtK,QAAS1yB,EAAS,0BAA0BlE,SACjD9uB,cAACotB,GAAsB,CACnB5sB,UAAU,kBACV4uD,QAASA,IAAM7B,GAAW,GAAMz+B,SAEhC9uB,cAACiwD,KAAe,UAGzB,E,qDC1PA,MAAMC,WAAsBthC,IAAMuhC,UACrCC,YAAYjoC,GACRkoC,MAAMloC,GACNgB,KAAKkI,MAAQ,CAAEi/B,UAAU,EAC7B,CAEA,+BAAOC,CAAyB7yC,GAG5B,OAFAD,QAAQC,MAAM,WAAYA,GAEnB,CAAE4yC,UAAU,EACvB,CAEAE,kBAAkB9yC,EAAckN,GAM5B6lC,KAAwB/yC,EAAO,CAAE4W,KAAM1J,EAAK8lC,gBAChD,CAEAC,SACI,OAAIxnC,KAAKkI,MAAMi/B,SAEJnnC,KAAKhB,MAAMqM,SAGfrL,KAAKhB,MAAM2G,QACtB,E,gEChCJ,MAAM8hC,GAAwBvjC,aAAOwjC,KAA0B;;;;;EAUlDC,GAAc9rC,IAIP,IAJQ,iBACxB+rC,EAAgB,UAChBC,KACG5tC,GACO4B,EACV,MAAM,UAAExkB,KAAcywD,GAA2B,OAATD,QAAS,IAATA,IAAa,CAAC,EAEtD,OAAOhxD,cAACkxD,KAAO,CAACH,iBAAkB,CAAC,sBAAuC,OAAhBA,QAAgB,IAAhBA,IAAoB,IAAIl/C,KAAK,QAAUuR,EAAI0L,SACjG9uB,cAAC4wD,GAAqB,CAACpwD,UAAW,CAAC,mBAA6B,OAATA,QAAS,IAATA,IAAa,IAAIqR,KAAK,QAAUo/C,KACjF,E,wBClBP,MAAME,GAA4B9jC,KAAO+jC,IAAI;;;;;;;;;;;;;;;EAyBvCC,GAAarsC,IAOP,IAPQ,KACvBssC,EAAI,SACJxiC,EAAQ,QACRsgC,EAAO,UACP4B,EAAS,aACTO,EAAY,eACZC,GACSxsC,EACT,MAAM,UAAExkB,EAAW4uD,QAASqC,EAAa,UAAE3mC,KAAc4mC,GAAqC,OAAdF,QAAc,IAAdA,IAAkB,CAAC,EAEnG,OAAOxxD,cAACgwD,KAAO,CAACzsB,MAAO,QAAUguB,EAAYziC,SACzC9uB,cAACmxD,GAAyB,CACtBzmC,SAAU,KACNgnC,EACJtC,QAASl1C,IACE,OAAPk1C,QAAO,IAAPA,OACa,OAAbqC,QAAa,IAAbA,KAAgBv3C,EAAE,EAEtB4Q,UAAW5Q,IACE,OAAT4Q,QAAS,IAATA,KAAY5Q,GACE,UAAVA,EAAE5Y,MACK,OAAP8tD,QAAO,IAAPA,OACJ,EAEJ5uD,UAAW,CAAC,cAAwB,OAATA,QAAS,IAATA,IAAa,IAAIqR,KAAK,KAAKid,SAEtDk/B,eAAAC,WAAA,CAAAn/B,SAAA,CACI9uB,cAACsxD,EAAI,IAAKN,IAAcliC,QAG1B,EAGD6iC,GAA8BtkC,KAAOukC,GAA4B;;;;;;;;;;;;;;;;;;;;;EC9DjEC,GAAkBC,IAAG;;;;;;;;;;;;;;;;;;;;;;;ECU5BC,GAA4B1kC,KAAOukC,GAAG;MACtCC;EAmBAG,GAAkBA,CAAAhtC,EAQFitC,KAA4C,IARQ,SACtEzC,EACAnzD,MAAO61D,EAAW,WAClBC,EAAU,SACVrjC,EAAQ,OACRsjC,EAAM,UACN5xD,EAAS,OACTmI,GAAS,GACOqc,EAChB,MAAO0G,EAAOpB,GAAYkjC,oBAAU,GAC9B6E,EAAc5vB,iBAAuB,MACrCrY,EAAe+nC,EAAW93C,OAMhC,OAJAi4C,8BAAoBL,GAAK,MACrBvmC,MAAOA,KAAA,IAAA6mC,EAAA,OAAyB,QAAzBA,EAAMF,EAAYzxB,eAAO,IAAA2xB,OAAA,EAAnBA,EAAqB7mC,OAAO,MAGtCsiC,eAAC+D,GAAyB,CAC7BvxD,UAAW,CAAC,sDAAuDA,GAAWqR,KAAK,KAAKid,SAAA,CAEvFA,GAAY9uB,cAAA,SAAOQ,UAAU,yCAAwCsuB,SAAEA,IACxE9uB,cAAA,OAAKiyD,IAAKI,EACN7xD,UAAU,6BACN0pB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAMuW,EAASqxB,EAAWzmC,GACtBoV,GACA0uB,EAAS1uB,EAAOzkC,MACpB,IAENyyB,SAEDqjC,EAAW5+C,KAAI,CAAA4hB,EAAwClL,KAAW,IAAlD,MAAE5tB,EAAK,MAAE8rB,EAAK,MAAE7rB,EAAK,aAAEi1D,GAAcp8B,EAClD,MAAM,UAAE30B,GAAmB,OAAL2nB,QAAK,IAALA,IAAS,CAAC,EAC1BqqC,EAAY7pD,EACZtM,IAAU61D,EACV,GAAG71D,MAAY,GAAG61D,IAExB,OAAOlyD,cAACgwD,KAAO,CAAatK,QAAS,QAAU6L,EAAYziC,SACvDk/B,eAAA,YACQ7lC,EACJ3nB,UAAW,CACP,2BACAgyD,EAAY,mCAAqC,GACxC,OAAThyD,QAAS,IAATA,IAAa,GACbkrB,IAAUzB,EAAQ,sBAAwB,IAC5CpY,KAAK,KACPu9C,QAASA,IAAMI,EAASnzD,GAAOyyB,SAAA,CAE/B9uB,cAAA,QAAMQ,UAAW,qBAAoBgyD,EAAY,2BAA6B,IAAK1jC,SAC/E9uB,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOsuB,SAAExyB,QAdZD,EAgBX,MAGjB+1D,IACuB,EAEnBK,GAAaC,qBAAWV,ICtF/BW,GAASC,IAAS;;;;EAKlBC,GAAqBxlC,KAAOukC,GAAG;;;;;;;;;;;;EAa/BkB,GAA+BzlC,aAAOskC,GAA4B;;;cAG1D3sC,IAAA,IAAC,UAAE+tC,GAAW/tC,EAAA,OAAK+tC,EAAY,GAAKjB,IAAG,cAAca,yBAA6B;;;EAInFK,GAAgBA,KACzB,MAAMhgC,EAAWQ,MACX,QACFiO,EAAO,cACPC,GACAV,IAAW7L,IAAA,IAAC,QAAEsM,EAAO,cAAEC,GAAevM,EAAA,MAAM,CAAEsM,UAASC,gBAAe,KACpE,aACFR,EAAY,WACZE,EAAU,YACVH,EAAW,kBACXE,EAAiB,mBACjBE,EAAkB,0BAClBC,GACAG,EAEJ,OAAOzhC,cAAC8yD,GAA4B,CAACtyD,UAAU,iBAAiBuyD,UAAW5xB,EAAkBrS,SACzF9uB,cAACkxD,KAAO,CACJ+B,QAAS,CAAC,SACVlC,iBAAiB,yBACjBhZ,QAASiW,eAAC6E,GAAkB,CAAA/jC,SAAA,CACxB9uB,cAAA,OAAA8uB,SACI9uB,cAACkzD,KAAQ,CACLC,QAAShyB,EACTquB,SAAUt1C,GAAKwnB,EAAc,CAAEP,kBAAmBjnB,EAAE4mB,OAAOqyB,UAAWrkC,SACxEkE,EAAS,sCAEfhzB,cAAA,OAAA8uB,SACI9uB,cAACkzD,KAAQ,CACLC,QAAS7xB,EACTkuB,SAAUt1C,GAAKwnB,EAAc,CAAEJ,0BAA2BpnB,EAAE4mB,OAAOqyB,UAAWrkC,SAChFkE,EAAS,6CAEfhzB,cAAA,OAAA8uB,SACI9uB,cAACkzD,KAAQ,CACLC,QAAS9xB,EACTmuB,SAAUt1C,GAAKwnB,EAAc,CAAEL,mBAAoBnnB,EAAE4mB,OAAOqyB,UAAWrkC,SACzEkE,EAAS,qCAEfhzB,cAAA,OAAA8uB,SACI9uB,cAACgwD,KAAO,CAACzsB,MAAOvQ,EAAS,iCAAkCogC,UAAU,OAAMtkC,SACvE9uB,cAACkzD,KAAQ,CACLC,QAASlyB,EACTuuB,SAAUt1C,GAAKwnB,EAAc,CAAET,YAAa/mB,EAAE4mB,OAAOqyB,UAAWrkC,SAClEkE,EAAS,qCAGnBg7B,eAAA,OAAAl/B,SAAA,CACI9uB,cAAA,OAAKQ,UAAU,cAAasuB,SAAEkE,EAAS,qCACvChzB,cAACyyD,GAAU,CACPp2D,MAAO,GAAG+kC,EAAW,MAAMA,EAAW,KACtC+wB,WAAY54C,GAAehG,KAAI8hB,IAAA,IAAC,OAAEz4B,EAAM,MAAED,EAAK,MAAEL,GAAO+4B,EAAA,MAAM,CAC1Dh5B,MAAO,GAAGM,KAASC,IACnBN,MAAOA,EACV,IACDkzD,SAAUnzD,IACFgd,GAAchd,IACdqlC,EAAc,CAAEN,WAAY/nB,GAAchd,GAAqCid,cACnF,OAIZ00C,eAAA,OAAAl/B,SAAA,CACI9uB,cAAA,OAAKQ,UAAU,cAAasuB,SAAEkE,EAAS,wCACvChzB,cAACyyD,GAAU,CACPp2D,MAAO6kC,EACPixB,WAAY34C,GACZg2C,SAAUnzD,IACNqlC,EAAc,CAAER,aAAc7kC,GAAQ,OAIlD2D,cAAA,OAAA8uB,SACI9uB,cAAA,SAAA8uB,SAAQkE,EAAS,wBAEHlE,SAEtBk/B,eAAA,OAAKxtD,UAAU,eAAcsuB,SAAA,CACzB9uB,cAACqzD,KAAa,IACdrzD,cAAA,SAAA8uB,SAAQkE,EAAS,gCAGE,E,cC/GnC,MAAMsgC,GAAkB,MACpB,IAAIC,GAAU,EACVC,EAAyB,GAE7B,MAAO,CACHC,OAAQxhC,UACJ,GAAIshC,EAAS,OAAOC,EACpB,MAAMphC,QAAiBC,MACnB,8BACA,CACIC,QAAS,CACL,eAAgB,mBAChB,OAAU,sBAItB,IACI,MAAMohC,QAAoBthC,EAASI,OAInC,OAHAghC,EAAaE,EACbH,GAAU,EAEHC,CACX,CAAE,MAAOt5C,GACLuD,QAAQC,MAAMxD,EAClB,CACA,MAAO,EAAE,EAGpB,EA5BuB,GA6BXy5C,GAAaA,KACtB,MAAOC,EAAKC,GAAUrG,mBAAqB,KACpCsG,EAASC,GAAcvG,oBAAS,GAYvC,OAVApqB,qBAAU,KACN,WACI2wB,GAAW,GACX,MAAMH,QAAYN,GAAgBG,SAElCM,GAAW,GACXF,EAAOD,EACV,EAND,EAMI,GACL,IAEgB,IAAfA,EAAIv5C,QAAiBy5C,EACrBA,EAAgB9zD,cAAA,OAAA8uB,SAAK,yBAClB9uB,cAAA,OAAA8uB,SACF8kC,EAAIrgD,KAAI,CAAAyR,EAAuBiF,KAAW,IAAjC,QAAE+pC,EAAO,QAAE3+C,GAAS2P,EAC1B,OAAOgpC,eAAA,OAAAl/B,SAAA,CACH9uB,cAAA,KAAA8uB,SAAIzZ,IAAYrV,cAAA,SAChBA,cAAA,MAAA8uB,SAEKklC,EAAQzgD,KAAI,CAAA4hB,EAAclL,KAAW,IAAxB,QAAE8tB,GAAS5iB,EACrB,OAAOn1B,cAAA,MAAA8uB,SACFipB,GADW9tB,EAEX,QAPA,GAAG5U,KAAW4U,IAUzB,MAd2BjqB,cAAA,OAAA8uB,SAAK,iBAgBxC,EC3DGmlC,GAAa5mC,KAAO+jC,IAAI;;;;;;EAQxB8C,GAAiB7mC,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;EAqB3BuC,GAAoB9mC,aAAO6mC,GAAe;;;;EAM1CE,GAAkBpvC,IAIc,IAJb,QAC5B+yB,EAAO,SACPjpB,KACG1L,GACgC4B,EACnC,OAAI+yB,EACO/3C,cAACkxD,KAAO,CAACnZ,QAASA,KAAa30B,EAAI0L,SAAGA,IAE1C9uB,cAAAiuD,WAAA,CAAAn/B,SAAGA,GAAY,E,OCjCnB,MAAMulC,GAAcA,KAAO,IAAD5wB,EAC7B,OAAOuqB,eAAA,OAAKxtD,UAAU,cAAasuB,SAAA,CAC/Bk/B,eAAA,QAAMxtD,UAAU,UAASsuB,SAAA,CAAC,IAA+B,QAA9B2U,EAACC,UAA6BD,EAAI,aAC7DzjC,cAAA,OAAKQ,UAAU,mBAAkBsuB,SAC7B9uB,cAAA,KAAG4f,KAAK,uCAAuCkhB,OAAO,SAASwzB,IAAI,aAAYxlC,SAC3E9uB,cAACu0D,KAAY,UAGnB,EAGJC,GAAmBnnC,aAAO8mC,GAAkB;;;EAK5CM,GAAiCpnC,KAAOukC,GAAG;;;;;;;;;;;;;;;;;EAmBpC8C,GAAYA,KACrB,MAAM,SACF1hC,EAAQ,aACRD,EAAY,oBACZD,EAAmB,eACnBF,GACApC,IAAQxL,IAAA,IAAC,aACT+N,EAAY,SACZC,EAAQ,oBACRF,EAAmB,eACnBF,GACH5N,EAAA,MAAM,CACH+N,eACAC,WACAF,sBACAF,iBACH,KACK,SACF+H,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACAT,GAAYy5B,uBAAWx/B,IAAA,IAAC,SACxBwF,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACHxG,EAAA,MAAM,CACHwF,WACAa,cACAW,gBACAR,UACH,KAED,OAAOqyB,eAAA,OAAKxtD,UAAU,aAAYsuB,SAAA,CAC9B9uB,cAAA,OAAKS,IAAI,WAAWC,IAAK,yBAAyC/D,MAAO,KACzEqxD,eAAA,OAAKxtD,UAAU,kBAAiBsuB,SAAA,CAC5Bk/B,eAAA,OAAKxtD,UAAU,kBAAiBsuB,SAAA,CAC5B9uB,cAAA,MAAA8uB,SAAI,kBACJ9uB,cAAC40D,KAAMC,MAAK,CAACx4D,MAAO02B,EAAanB,SAAUnJ,KAAK,QAAQjoB,UAAU,kBAAiBsuB,SAC9EluB,OAAOC,OAAOiyB,GACVhK,QAAOuM,IAAA,IAAC,OAAEtD,GAAQsD,EAAA,OAAKtD,CAAM,IAC7Bxe,KAAI4iB,IAAyB,IAAxB,SAAEvE,EAAQ,KAAEj0B,GAAMw4B,EACpB,OAAOn2B,cAAC40D,KAAME,OAAM,CAChBz4D,MAAOu1B,EACP49B,SAAUt1C,GAAK0Y,EAAe1Y,EAAE4mB,OAAOzkC,OAAOyyB,SAE7CnxB,GAJqBi0B,EAKX,MAG3B5xB,cAAA,QAAMQ,UAAU,aAAYsuB,SACxBk/B,eAAA,OAAKl1C,GAAG,oBAAmBgW,SAAA,CACtBkE,EAAS,kCAAkC,IAAChzB,cAAC+0D,KAAW,SAGjE/0D,cAACkxD,KAAO,CACJkC,UAAU,SACVrb,QAAS/3C,cAACw0D,GAAgB,CAAA1lC,SACtB9uB,cAAC2zD,GAAU,MACK7kC,SAEpB9uB,cAACg1D,KAAU,CAACx0D,UAAU,iBAG9BwtD,eAAA,OAAKxtD,UAAU,mBAAkBsuB,SAAA,CAC7Bk/B,eAAA,QAAMxtD,UAAU,cAAasuB,SAAA,CACxBkE,EAAS,yBAAyB,KAAEhzB,cAAA,KACjC4f,KAAK,uCACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAEhB9uB,cAAA,KAAA8uB,SAAG,cACH,OAAM9uB,cAAC8wD,GAAW,CAClB/Y,QAASiW,eAACmG,GAAiB,CAAC3zD,UAAU,aAAYsuB,SAAA,CAC9C9uB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACdg7B,eAAA,MAAAl/B,SAAA,CACI9uB,cAAA,MAAA8uB,SAAKkE,EAAS,iCAAiChzB,cAAA,KAAoB4f,KAAK,sCAAqCkP,SAAC,+BAAxD,iBACtD9uB,cAAA,MAAA8uB,SAAKkE,EAAS,mCACdhzB,cAAA,MAAA8uB,SAAKkE,EAAS,mCACdhzB,cAAA,MAAA8uB,SAAKkE,EAAS,mCACdhzB,cAAA,MAAA8uB,SAAKkE,EAAS,iCACVhzB,cAAA,KACI4f,KAAK,oCACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC,UAHd,oBAIP9uB,cAAA,KACI4f,KAAK,sCACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC,YAHd,uBAKX9uB,cAAA,MAAA8uB,SAAKkE,EAAS,8CAK9BhzB,cAAA,QAAMQ,UAAU,mBAAkBsuB,SAC7BkE,EAAS,8BACNhzB,cAAA,KACI4f,KAAK,6FACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC9uB,cAAA,KAAA8uB,SAAG,YAHjB,YAIP9uB,cAAA,KACI4f,KAAK,mGACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC9uB,cAAA,KAAA8uB,SAAG,cAHjB,YAIP9uB,cAAA,KACI4f,KAAK,6CACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC9uB,cAAA,KAAA8uB,SAAG,qBAHjB,YAIP9uB,cAAA,KACI4f,KAAK,uCACLkhB,OAAO,SACPwzB,IAAI,aAAYxlC,SAAC9uB,cAAA,KAAA8uB,SAAG,eAHjB,qBAQvB9uB,cAACy0D,GAA8B,CAACj0D,UAAU,cAAasuB,SACnD9uB,cAACgzD,GAAa,MAElBhzD,cAACy0D,GAA8B,CAACj0D,UAAU,eAAcsuB,SACpD9uB,cAAC2xD,GAA2B,CACxBnxD,UAAWusB,GAAW,uBAAwB4O,EAAU,iBAAmB,IAC3EyzB,QAASA,IAAMjzB,IAAgBrN,SAE/Bk/B,eAAA,OAAKxtD,UAAU,eAAcsuB,SAAA,CACzB9uB,cAACi1D,KAAc,IACfj1D,cAAA,SAAA8uB,SAAQkE,EAAS,wBACfwI,GAAeb,EAAStgB,OAAS,GAAMra,cAAA,OAAKQ,UAAU,iBAAgBsuB,SAAC,eAInF,EAGGomC,GAAqBA,KAC9B,MAAMliC,EAAWQ,KAEjB,OAAOw6B,eAACmG,GAAiB,CAAC3zD,UAAU,aAAYsuB,SAAA,CAC5C9uB,cAAA,MAAA8uB,SAAKkE,EAAS,+CACdhzB,cAAA,KAAA8uB,SAAIkE,EAAS,6CACbhzB,cAAA,MAAA8uB,SAAKkE,EAAS,gDACdhzB,cAAA,KAAA8uB,SAAIkE,EAAS,8CACbhzB,cAAA,MAAA8uB,SAAKkE,EAAS,+CACdhzB,cAAA,KAAA8uB,SAAIkE,EAAS,+CACG,EAGXmiC,GAAuBA,IACzBn1D,cAAC8wD,GAAW,CACfC,iBAAiB,qBACjBhZ,QAAS/3C,cAACk1D,GAAkB,M,+BChMpC,MAAME,GAAkB/nC,KAAOukC,GAAG;;EAG5ByD,GAAqBhoC,KAAOukC,GAAG;;;;;;;;;;;EAY/B0D,GAAkCjoC,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;EAuBrC2D,GAAmBvwC,IAKP,IALQ,QAC7BwwC,EAAO,eACPhE,EAAc,IACd/wD,KACG2iB,GACY4B,EACf,MAAM,UAAExkB,GAA4B,OAAdgxD,QAAc,IAAdA,IAAkB,CAAC,EAEzC,OAAOxD,eAACsH,GAA+B,CAAC90D,UAAW,sBAAsBA,IAAYsuB,SAAA,CACjF9uB,cAAA,OAAKS,IAAKA,KAAS2iB,IACnBpjB,cAAA,OAAKQ,UAAU,UAASsuB,SAAE0mC,MACI,EAGzBC,GAAuBA,KAChC,MAAOC,EAAWC,GAAiBnI,oBAAS,GACtCx6B,EAAWQ,KAEjB,OAAOw6B,eAAAC,WAAA,CAAAn/B,SAAA,CACH9uB,cAAC41D,KAAM,CACHC,OAAQ,KACRl6B,QAAS+5B,EACT/4D,MAAO,MACP4mC,MAAOyqB,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CAAEkE,EAAS,sBAAsB,IAAChzB,cAAC80D,KAAM,CAC1ErsC,KAAK,QACL5pB,KAAK,UACLuwD,QAASA,KACLuG,GAAc,EAAM,EACtB7mC,SACJkE,EAAS,2BACXxyB,UAAU,4BACVs1D,QAASA,KACLH,GAAc,EAAM,EACtB7mC,SAEFk/B,eAACoH,GAAe,CAAAtmC,SAAA,CACZk/B,eAAA,KAAAl/B,SAAA,CACKkE,EAAS,6BAA6BhzB,cAACqzD,KAAa,GAAK,SAAW,OAEzErzD,cAAA,MAAA8uB,SAAKkE,EAAS,kCACbA,EAAS,kCACNhzB,cAACi0D,GAAU,CAAAnlC,SAAiB,KAAZ,YAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAkB,KAAb,aAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAe,UAAV,UAChB9uB,cAACi0D,GAAU,CAAAnlC,SAA0B,YAArB,sBAEpBk/B,eAACqH,GAAkB,CAAC70D,UAAU,eAAcsuB,SAAA,CACxC9uB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACL80D,QAASxiC,EAAS,gCAEtBhzB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACL80D,QAASxiC,EAAS,oCAG1BhzB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACbA,EAAS,kCACNhzB,cAACi0D,GAAU,CAAAnlC,SAAiB,KAAZ,YAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAkB,KAAb,aAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAe,UAAV,UAChB9uB,cAACi0D,GAAU,CAAAnlC,SAA0B,YAArB,sBAEpBk/B,eAACqH,GAAkB,CAAC70D,UAAU,eAAcsuB,SAAA,CACxC9uB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACL80D,QAASxiC,EAAS,gCAEtBhzB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACL80D,QAASxiC,EAAS,oCAG1BhzB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACbA,EAAS,kCACNhzB,cAACi0D,GAAU,CAAAnlC,SAAkB,KAAb,aAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAe,UAAV,UAChB9uB,cAACi0D,GAAU,CAAAnlC,SAA0B,YAArB,sBAEpBk/B,eAACqH,GAAkB,CAAC70D,UAAU,eAAcsuB,SAAA,CACxC9uB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACL80D,QAASxiC,EAAS,gCAEtBhzB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACL80D,QAASxiC,EAAS,oCAG1BhzB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACbA,EAAS,kCACNhzB,cAACi0D,GAAU,CAAAnlC,SAAkB,MAAb,aAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAe,UAAV,UAChB9uB,cAACi0D,GAAU,CAAAnlC,SAA0B,YAArB,sBAEpBk/B,eAACqH,GAAkB,CAAC70D,UAAU,eAAcsuB,SAAA,CACxC9uB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACL80D,QAASxiC,EAAS,gCAEtBhzB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACL80D,QAASxiC,EAAS,oCAG1BhzB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACbA,EAAS,kCACNhzB,cAACi0D,GAAU,CAAAnlC,SAAiB,MAAZ,YAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAkB,MAAb,aAChB9uB,cAACi0D,GAAU,CAAAnlC,SAAe,UAAV,UAChB9uB,cAACi0D,GAAU,CAAAnlC,SAA0B,YAArB,sBAEpBk/B,eAACqH,GAAkB,CAAC70D,UAAU,eAAcsuB,SAAA,CACxC9uB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,qBAC7BC,IAAK,yBACLC,IAAK,iDACL80D,QAASxiC,EAAS,gCAEtBhzB,cAACu1D,GAAgB,CACb/D,eAAgB,CAAEhxD,UAAW,yBAC7BC,IAAK,6BACLC,IAAK,qDACL80D,QAASxiC,EAAS,yCAKlCg7B,eAAC8G,KAAM,CACHt0D,UAAU,yBACV3B,KAAK,UACLuwD,QAASA,KACLuG,GAAc,EAAK,EACrB7mC,SAAA,CAEDkE,EAAS,sBAAsB,IAAChzB,cAAC+1D,KAAU,SAEjD,ECnMDC,GAAuB3oC,KAAOukC,GAA6B;;MAE3D5sC,IAAA,IAAC,YAAEixC,GAAajxC,EAAA,OAAKixC,EAAc,0CAA4C,6BAA6B;;;;;;EAO5GC,GAAoB7oC,KAAOukC,GAAG;;;EAIvBuE,GAAiBhhC,IAKqE,IALpE,QAC3Bz1B,EAAO,qBACP+R,EAAoB,yBACpBE,EAAwB,UACxBnR,GACyF20B,EACzF,MAAMnC,EAAWQ,KAEjB,OAAOw6B,eAACgI,GAAoB,CACxBx1D,UAAW,oBAA6B,OAATA,QAAS,IAATA,IAAa,KAC5Cy1D,eAAgBxkD,IAAwBE,GAA0Bmd,SAAA,CAEjEnd,EACK3R,cAACk2D,GAAiB,CAAApnC,SACfnd,EAAyB4B,KAAI5T,GAASK,cAAA,OAEnCwoB,MAAO,CAAE4tC,gBAAiBz2D,EAAO/C,OAAW,IAAM+U,EAAyB0I,OAAlC,MADpC1a,OAIX8R,EACIzR,cAACk2D,GAAiB,CAAC1tC,MAAO,CAAE4tC,gBAAiB3kD,KAC7C,KACVzR,cAAA,SAAOQ,UAAU,yBAAwBsuB,SAAEkE,EAAStzB,OACjC,E,cClC3B,MAAM22D,GAA8BhpC,aAAOipC,KAAKC,KAAK;;;;;;;;;;EAW/CC,GAA+BnpC,aAAOipC,KAAKC,KAAK;;;;;;;EAWzCE,GAAmBzxC,IAGP,IAHQ,SAC7BwqC,KACGpsC,GACY4B,EACf,MAAMgO,EAAWQ,MACX,WACF4N,EAAU,cACVM,GACAV,GAAW2zB,uBAAWx/B,IAAA,IACtBsM,SAAS,YAAER,EAAW,WAAEG,GAAY,cACpCM,GACHvM,EAAA,MAAM,CACH8L,cACAG,aACAM,gBACH,KAED,OAAOssB,eAACsI,KAAI,CAAClH,QAASl1C,GAAKA,EAAEw8C,SAASrsC,qBAAuBjH,EAAI0L,SAAA,CAC7D9uB,cAACq2D,GAA2B,CAAClI,UAAQ,EAACiB,QAASl1C,GAAKA,EAAEw8C,SAASrsC,kBAAkByE,SAC5EkE,EAAS,qCAEbzZ,GAAehG,KAAI8hB,IAA+B,IAA9B,MAAE14B,EAAK,OAAEC,EAAM,MAAEN,GAAO+4B,EACzC,OAAOr1B,cAACw2D,GAA4B,CAChCh2D,UAAW4gC,EAAW,KAAOzkC,GAASykC,EAAW,KAAOxkC,EAAS,iBAAmB,GACpFwyD,QAASA,KACL1tB,EAAc,CACVN,WAAY,CAACzkC,EAAOC,KAEhB,OAAR4yD,QAAQ,IAARA,KAAW,CAAC7yD,EAAOC,GAAQ,EAC7BkyB,SAEDxyB,GATqC,GAAGK,KAASC,IAUvB,MAEhC,E,qFC3DX,MAAM+5D,GAAiCtpC,KAAOukC,GAAG;;;;;;;;;;;EAapCgF,GAAUA,IACZ52D,cAAC62D,KAAI,IAEhBD,GAAQE,SAAW,IACR92D,cAAC22D,GAA8B,CAACn2D,UAAU,mBAAkBsuB,SAC/D9uB,cAAC62D,KAAI,CAACpuC,KAAK,Y,cCenB,MAAMsuC,GAAgBA,CAACC,EAA+Bz1D,EAAgChD,KAClF,IAAKgD,EAAO,OAAOy1D,EACnB,MAAQr6D,MAAOs6D,EAAWr6D,OAAQs6D,EAAU,EAAE7gD,EAAI,EAAC,EAAEC,EAAI,EAAC,KAAEC,GAASygD,EAGrE,GAAa,OAATzgD,EAAe,CACf,MAAM4gD,EAAwB,GACxBC,EAAwB,IAAM,KAC5Bz6D,MAAO++C,EAAY9+C,OAAQ++C,GAAgBp6C,EAG7C81D,EADsB1b,EAAcD,GAAeyb,EACjBC,EAAwB,EAC1DE,EAAQp5C,KAAK6I,KAAM,OAAD1Q,QAAC,IAADA,IAAK,GAAKghD,EAAY3b,GACxC6b,EAAQr5C,KAAK6I,KAAM,OAADzQ,QAAC,IAADA,IAAK,GAAK+gD,EAAY1b,GACxC6b,EAAWt5C,KAAK6I,KAAc,OAATkwC,QAAS,IAATA,IAAa,GAAKI,EAAY3b,GAEzD,MAAO,CACHnlC,KAAM,IACNF,EAAGihD,EAAQ5b,EAAa,IACxBplC,EAAGihD,EAAQ5b,EAAc,IACzBh/C,MAAO66D,EAAW9b,EAAa,IAC/B9+C,OAAQ46D,GAAiB,OAALj5D,QAAK,IAALA,IAAS,GAAKo9C,EAAc,IAChDnlC,OAAQjY,EAEhB,CAEA,GAAI8X,EAAI,EAAG,MAAO,IAAK2gD,EAAM3gD,EAAG,GAChC,GAAIC,EAAI,EAAG,MAAO,IAAK0gD,EAAM1gD,EAAG,GAChC,MAAM,cAAEmhD,EAAa,aAAExL,GAAiB1qD,EAClC5E,EAAiB,OAATs6D,QAAS,IAATA,IAAa,EACrBr6D,EAAmB,OAAVs6D,QAAU,IAAVA,IAAc,EAEvBQ,EAAkF,KAA/DD,EAAgBxL,EAAewL,EAAgBxL,GAElE0L,EADoBz5C,KAAKC,IAAIvhB,EAAS66D,EAAgBl5D,EAAQ5B,EAAQsvD,IAAiByL,EAEvF96D,EACAD,EAAQ4E,EAAM0qD,aACV1tD,EACAgD,EAAMk2D,cAGVG,EAAgBD,EAAa,IAC7BE,EAAmBD,EAAgB,EACnC,IACAD,EACAG,EAAkBF,EAAgB,EAClCj7D,EAAQi7D,EACRj7D,EACAssC,EAAc2uB,EAAgB,GAC7B,IAAME,GAAmB,EACzBzhD,EAAI,EAAI,EAAIA,EACb6yB,EAAc0uB,EAAgB,GAE7BthD,EAAI,EADL,EACaA,EAEnB,MAAO,IACA0gD,EACH3gD,EAAG4yB,EACH3yB,EAAG4yB,EACHtsC,OAAQi7D,EACRl7D,MAAOm7D,EACPthD,OAAQjY,EACX,EA6BQw5D,GAAerF,sBAA0C,CAAA1tC,EAmBrDgzC,KAAkB,IAnBoC,MACnEz0B,EAAK,gBACL6yB,EAAe,UACf51D,EAAS,SACTy3D,EAAQ,kBACRC,EAAiB,sBACjBC,EAAwB,GAAE,sBAC1BC,EAAwB,GAAE,gBAC1BC,EAAe,SACfvpC,EAAQ,cACRwpC,EAAa,gBACbC,EAAe,MACfh6D,EAAK,eACLi6D,EAAiBA,OAAS,eAC1BC,EAAiBA,OAAS,aAC1BC,EAAeA,OAAS,UACxBC,EAAYA,OAAS,kBACrBC,EAAoBA,OAAS,iBAC7BC,EAAmBA,QACR7zC,EACX,MAAM8zC,EAAgD,YAAtBZ,EAC1B,UACA,SACAllC,EAAWQ,KACXulC,EAAet2B,iBAAc,OAE/Bu2B,EACAC,GACAzL,mBAAsD,cACnD0L,EAAcC,GAAmB3L,mBAAS,IAC1C4L,EAAYC,GAAiB7L,mBAA+BsL,IAC5DQ,EAAWC,GAAgB/L,mBAA+BsL,IAC1DU,EAAgBC,GAAqBjM,mBAAS2K,IAC9CjlC,EAAW6gC,GAAcvG,oBAAS,IAClC9vC,EAAOg8C,GAAYlM,mBAAc,OACjCmM,EAAYC,GAAiBpM,oBAAS,IACtCqM,EAAgBC,GAAqBtM,mBAAS4K,GAC/C2B,EAASt3B,iBAAgC,OACxCu0B,EAAMgD,GAAWxM,mBAAS,CAC7B5sB,QAAS23B,EACT0B,UAAW,QAGRC,EAAYC,GAAe3M,mBAAkC,MAAzB+K,EAAgBhiD,OAEvDqqB,QAASw5B,EACTH,UAAWI,GACXrD,EA2BEsD,EAAc73B,iBAAO,CACvBkG,OAAQ,GACRquB,KAAM,OAEJuD,EAAS73B,uBAAa83B,IAMxB,GALAzG,GAAW,GACX2F,EAAS,MACTlB,EAAeQ,GACfe,EAAOn5B,QAAU45B,EAEbA,EAAI95D,MAAQ45D,EAAY15B,QAAQ+H,QAAU2xB,EAAY15B,QAAQo2B,KAAM,CACpE,MAAMyD,EAAaC,EAAU95B,QAC7B0C,YAAW,KACP,GAAIm3B,IAAeC,EAAU95B,UAAY05B,EAAY15B,QAAQo2B,KAAM,OACnE,MAAM2D,EAAiB5D,GAAcuD,EAAY15B,QAAQo2B,KAAMwD,EAAKj8D,GACpEy7D,EAAQ,CACJC,UAAWU,EACX/5B,QAAS+5B,IAEbR,GAAY,GACZG,EAAY15B,QAAU,CAClB+H,OAAQ,GACRquB,KAAM,KACT,GACF,IACP,MACI1zB,YAAW,KACP02B,GAAQt0D,IACJ,MAAMi1D,EAAiB5D,GAAcrxD,EAAIk7B,QAAS45B,EAAKj8D,GAEvD,MAAO,CACH07D,UAAWU,EACX/5B,QAAS+5B,EACZ,IAELR,GAAY,EAAK,GAClB,IACP,GACD,CAACnB,EAAaR,EAAgBj6D,IAajC6kC,qBAAU,KAAO,IAADw3B,EAAAC,EAAAC,EAAAC,EACZ,MAAMx5D,EAAQw4D,EAAOn5B,QACrB,IAAKy5B,IAAkBhC,IAAoB92D,EAAO,OAElD,MAAQiV,OAAQjY,GAAU87D,EAG1BhC,EAAgB7vC,MAAMwyC,UAAY,WAClC,MAAMj1B,EAAMsyB,EAAgBt1B,WAAW,MACvC,IAAKgD,GAAwB,kBAAVxnC,GAAsBA,GAAS,EAAG,OAErD,MAAM,cAAEk5D,EAAa,aAAExL,GAAiB1qD,EAClC05D,EAAQhP,EAAe1qD,EAAM5E,MAC7Bu+D,EAAQzD,EAAgBl2D,EAAM3E,OAC9Bu+D,EAA6B,QAArBP,EAAGP,EAAc9jD,YAAI,IAAAqkD,IAAI,KACjCQ,EAAav7C,OAAOw7C,iBAE1Bt1B,EAAIoI,aAAaitB,EAAY,EAAG,EAAGA,EAAY,EAAG,GAElD,IAeIE,EAfAC,EAAoBr9C,KAAKkN,OAA0B,QAApByvC,EAACR,EAAc19D,aAAK,IAAAk+D,IAAI,IAAmB,OAAbM,EAAoBF,EAAQhP,EAAe,MACxGuP,EAAYt9C,KAAK6I,IAAIklC,EAAcsP,GACnCE,EAAqBv9C,KAAKkN,MAAMmwC,EAAoBh9D,GACpDm9D,EAAax9C,KAAK6I,IAAI0wC,EAAegE,GACrCE,EAAkBz9C,KAAK6I,IACvBklC,EACA/tC,KAAKkN,OAAsB,QAAhB0vC,EAACT,EAAchkD,SAAC,IAAAykD,IAAI,IAAmB,OAAbK,EAAoBF,EAAQhP,EAAe,OAEhF2P,EAAkB19C,KAAK6I,IACvB0wC,EACAv5C,KAAKkN,OAAsB,QAAhB2vC,EAACV,EAAc/jD,SAAC,IAAAykD,IAAI,IAAmB,OAAbI,EAAoBD,EAAQzD,EAAgB,OAGrF,GADA1xB,EAAI81B,sBAAwB,SACxBL,GAAa,GAAKE,GAAc,GAApC,CAIA,GAEKC,EAAkBH,EAAavP,GAC5B2P,EAAkBF,EAAcjE,GAEjCkE,EAAkB,GAClBC,EAAkB,GAElB19C,KAAKC,KAAKo9C,EAAoBC,GAAaA,GAAa,KACxDt9C,KAAKC,KAAKs9C,EAAqBC,GAAcA,GAAc,IAChE,CAOwB,WALAn9D,EAAQk5D,EAAgBxL,EAAe,QAAU,WAMnEuP,EAAYvP,EACZyP,EAAaF,EAAYj9D,EACzBo9D,EAAkB,EAClBC,GAAmBnE,EAAgBiE,GAAc,EACjDJ,EAAc,CACV/kD,KAAM,IACNC,OAAQjY,EACR3B,OAAQ8+D,EAAajE,EAAgB,IACrC96D,MAAO6+D,EAAYvP,EAAe,IAClC51C,EAAG,EACHC,EAAGslD,EAAkBnE,EAAgB,OAGzC+D,EAAY/D,EAAgBl5D,EAC5Bm9D,EAAajE,EACbkE,GAAmB1P,EAAeuP,GAAa,EAC/CI,EAAkB,EAClBN,EAAc,CACV/kD,KAAM,IACNC,OAAQjY,EACR3B,OAAQ8+D,EAAajE,EAAgB,IACrC96D,MAAO6+D,EAAYvP,EAAe,IAClC51C,EAAGslD,EAAkB1P,EAAe,IACpC31C,EAAG,GAGf,CAIA,GAAI2hD,EAAU,CAEY,WADA15D,EAAQk5D,EAAgBxL,EAAe,QAAU,WAEnEuP,EAAYvP,EACZyP,EAAaF,EAAYj9D,IAEzBi9D,EAAY/D,EAAgBl5D,EAC5Bm9D,EAAajE,GAEjBY,EAAgB17D,MAAQ6+D,EACxBnD,EAAgBz7D,OAAS8+D,EACzB31B,EAAI9C,UACA1hC,EACA,EACA,EACA0qD,EACAwL,EACA,EACA,EACA+D,EACAE,EAER,KAAO,CAAC,IAADI,EAAAC,EACH1D,EAAgB17D,MAAkB,QAAbm/D,EAAIN,SAAS,IAAAM,IAAI,EACtCzD,EAAgBz7D,OAAoB,QAAdm/D,EAAIL,SAAU,IAAAK,IAAI,EACxCh2B,EAAI9C,UACA1hC,EACAo6D,EACAC,EACAJ,EACAE,EACA,EACA,EACAF,EACAE,EAER,CACmB,YAAftC,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAIn/C,QAAU,GACxD9b,IAAU87D,EAAc7jD,QAC7BkiD,EAAa2B,EAAejB,EAAYO,GAExC2B,GACAtB,GAAQt0D,IAAG,IAAUA,EAAKk7B,QAAS06B,KA9FM,CA+F7C,GAED,CAACjB,EAAehC,EAAiBa,EAAcjB,IAElD70B,qBAAU,KACNw2B,GAAc,GACdI,GAAQt0D,IACJ,GAAsB,MAAlBq0D,EAAOn5B,SAAmBl7B,EAAIk7B,QAAS,CACvC,MAAMo7B,EAAWjF,GAAcrxD,EAAIk7B,QAASm5B,EAAOn5B,QAASriC,GAC5D,MAAO,CACHqiC,QAASo7B,EACT/B,UAAW+B,EAEnB,CACA,OAAOt2D,CAAG,GACZ,GACH,CAACnH,IAEJ,MAAMm8D,EAAYj4B,iBAAO,GACzB6vB,8BAAoB0F,GAAc,MAC9B9kC,UAAWA,IAAMA,EACjB+oC,SAAUA,IAAiC,kBAAnBzC,GAA+BA,EAAen/C,OAAS,GAAoB,YAAf++C,GAClD,kBAAnBS,GAA+BA,EAAex/C,OAAS,GAAoB,WAAf++C,EAC3E8C,YAAaA,CAACr9D,EAA4B8pC,EAAQwzB,KAC9C,MAAMC,EAA+B,YAAfhD,EAA2BI,EAAiBK,EAClED,GAAc,GACVwC,IAAkBzzB,IAClBorB,GAAW,GACXsF,EAAcx6D,GACd06D,EAAa16D,GACb45D,EAAe55D,EAAM8pC,GACR,YAAT9pC,EACA46D,EAAkB9wB,GACfmxB,EAAkBnxB,IAE7BswB,EAAe,aACfkB,EAA8B,MAAlBgC,EAAS5lD,MACrBmkD,EAAU95B,SAAW,EACrB05B,EAAY15B,QAAU,CAClB+H,SACAquB,KAAMmF,GAEVhD,GAAgBzzD,GAAOA,EAAM,GAAE,MAIvC,MAAMu2D,EAA2B,YAAf7C,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAIn/C,OAAS,GACvD,WAAf++C,IAA0C,OAAdS,QAAc,IAAdA,IAAkB,IAAIx/C,OAAS,EAC7DgiD,GAAiBhE,GAAmB4D,IAAa/oC,IAA0B,OAAbmnC,QAAa,IAAbA,OAAa,EAAbA,EAAe19D,SAAsB,OAAb09D,QAAa,IAAbA,OAAa,EAAbA,EAAez9D,QAC3G,OACIoxD,eAAA,OAAKxtD,UAAW,sBAAsBA,IAAYsuB,SAAA,CAC9Ck/B,eAAA,OAAKxtD,UAAU,0BAAyBsuB,SAAA,CACnCA,EACDk/B,eAAA,OAAKxtD,UAAU,oCAAmCsuB,SAAA,CAC9Ck/B,eAAA,OAAKxtD,UAAU,gCAA+BsuB,SAAA,CAC1Ck/B,eAAA,QAAMxtD,UAAU,cAAasuB,SAAA,CACxByU,EAAM,IAACvjC,cAACqxD,GAAU,CACfC,KAAMgL,KACN9K,eAAgB,CAAEhxD,UAAW67D,GAAiB,GAAK,YACnD9K,aAAc,CACV7L,QAAS2W,GACHrpC,EAAS,0BACTA,EAAS,8BAEnBo8B,QAASA,IAAOiN,IAAkBhE,GAhblE,SAA0BpuB,EAAkC+sB,GACnDA,GAAS/sB,GACdA,EAAO2iB,QACFrtC,IACG,GAAa,OAATA,EAAe,CACf,MAAMg9C,EAAa18C,OAAOC,IAAIC,gBAAgBR,GAExCi9C,EAAS/8C,SAASC,cAAc,KACtC88C,EAAO78C,SAAW,mBAClB68C,EAAO58C,KAAOE,IAAIC,gBAAgBR,GAClCi9C,EAAOt5B,QAEPrjB,OAAOC,IAAIitC,gBAAgBwP,EAC/B,IAEJ,YACA,EAER,CA8ZsFE,CAAiBpE,EAAiBgC,QAGhGrM,eAAC4G,KAAMC,MAAK,CACRr0D,UAAU,+BACVgvD,SAAUt1C,IACN,MAAM7d,EAAQ6d,EAAE4mB,OAAOzkC,MACvBk9D,EAAal9D,KAEO,OAAdm9D,QAAc,IAAdA,IAAkB,IAAIn/C,OAAS,GAAe,YAAVhe,IACnB,OAAdw9D,QAAc,IAAdA,IAAkB,IAAIx/C,OAAS,GAAe,WAAVhe,KAEzCg9D,EAAch9D,GACA,YAAVA,GACA48D,EAAe,aACfR,EAAe,UAAWe,IAE1Bf,EAAe,SAAUoB,GAE7B9F,GAAW,GACf,EAEJ13D,MAAOi9D,EAAUxqC,SAAA,CAEjB9uB,cAAC40D,KAAME,OAAM,CAACz4D,MAAO,SAAU82D,QAAuB,WAAdmG,EAAuBxqC,SAC1DkE,EAAS,yCAEdhzB,cAACgwD,KAAO,CACJoD,UAAU,UACV7vB,MAAOvjC,cAAA,OAAKQ,UAAU,gBAAesuB,SAChCkE,EAAS,mCACPlE,SAEP9uB,cAAC40D,KAAME,OAAM,CAACz4D,MAAO,UAAW82D,QAAuB,YAAdmG,EAAwBxqC,SAC5DkE,EAAS,kDAK1Bg7B,eAAA,OAAKxtD,UAAW,CAAC,mBAAkC,WAAd84D,EAAyB,GAAK,kBAAkBznD,KAAK,KAAKid,SAAA,CAC3F9uB,cAAC08D,KAAK,CACFC,YAAa3pC,EAAS,6BACtB32B,MAAOw9D,EACPrK,SArPGt1C,IACvB,MAAMyuB,EAASzuB,EAAE4mB,OAAOzkC,MAExB48D,EAAe,aACflF,GAAW,GACXsF,EAAc,UACdE,EAAa,UACbd,EAAe,SAAU9vB,GACzBmxB,EAAkBnxB,EAAO,EA8OLi0B,UAAW,IACXC,YAAU,GALH,OAOV78D,cAAA,OAAKQ,UAAU,mBAAkBsuB,SAC7BkE,EAAS,iCAGlBg7B,eAAA,OAAKxtD,UAAW,CAAC,mBAAkC,YAAd84D,EAA0B,GAAK,kBAAkBznD,KAAK,KAAKid,SAAA,CAC5F9uB,cAAC08D,KAAK,CAACzK,IAAK8G,EACRl6D,KAAK,OACLywD,OAAO,UACPE,SAlUIt1C,IACxB,GAAIA,EAAE4mB,OAAO4uB,OAASx1C,EAAE4mB,OAAO4uB,MAAMr1C,OAAS,EAAG,CAC7C,MAAMu1C,EAAa11C,EAAE4mB,OAAO4uB,MAAM,GAC5BoN,EAAc,EAEpB,GAAIlN,EAAWnnC,KAAqB,KAAdq0C,EAAqB,KAAM,CAC7C/I,GAAW,GACX,MAAMr8B,EAAS,IAAIg3B,WACnBh3B,EAAOiM,iBAAiB,QAAQ,KACC,kBAAlBjM,EAAOn4B,SACd05D,EAAe,aACfQ,EAAkB/hC,EAAOn4B,QACzB85D,EAAc,WACdE,EAAa,WACbd,EAAe,UAAW/gC,EAAOn4B,QACjCw0D,GAAW,GACf,IAEJr8B,EAAOqlC,cAAcnN,EACzB,MACIgJ,EAAkBkE,EAE1B,MAAOE,MAAMhqC,EAAS,mCAAmC,EA6SrCo8B,QAASA,KAAA,IAAA6N,EAAA,OAA0B,QAA1BA,EAAMlE,EAAan4B,eAAO,IAAAq8B,OAAA,EAApBA,EAAsBC,SAAS,GAAG,IAErDl9D,cAAA,SACCgzB,EAAS,0CAIrBslC,EACDtK,eAAA,OAAKxtD,UAAU,eAAesqB,UAAWA,KAErC8uC,GAAc,EAAK,EACrB9qC,SAAA,CACGoE,GAAalzB,cAAC42D,GAAQE,SAAQ,IAC7BmF,IAAav+C,GAAUswC,eAAA,OAAKxtD,UAAU,oBAAmBsuB,SAAA,CACvD9uB,cAACgwD,KAAO,CACJoD,UAAU,OACV1N,QAASuS,EACHjlC,EAAS,yCACTA,EAAS,0CAA0ClE,SAEzD9uB,cAAA,OACIQ,UAAWusB,GAAW,gCAAiCkrC,EAAW,gBAAkB,IACpF7I,QAASA,KACLwK,GAAc,GACdf,GAAkBZ,EAAS,EAC7BnpC,SAEF9uB,cAACm9D,KAAkB,SAGzBlF,GAAYj4D,cAACgwD,KAAO,CAACoD,UAAU,OAAO1N,QAAS1yB,EAAS,gDAAgDlE,SACtG9uB,cAAA,OAAKQ,UAAU,uCAAuC4uD,QAASA,KAC3DwK,GAAc,GACdI,GAAQt0D,IAAQ,IAAD03D,EACX,MAAM,MAAEzgE,EAAK,EAAE0Z,GAAmB,QAAhB+mD,EAAG13D,EAAIu0D,iBAAS,IAAAmD,IAAI,CAAC,EAEvC,GAAqB,kBAAVzgE,GAAmC,kBAAN0Z,EAAgB,OAAO3Q,EAC/D,MAAM23D,EAA0B,IACzB33D,EAAIu0D,UACP5jD,GAAI,IAAM1Z,GAAS,GAGvB,MAAO,CACHikC,QAASy8B,EACTpD,UAAWoD,EACd,GACH,EACJvuC,SACE9uB,cAACs9D,KAA2B,SAGlCrF,GAAYj4D,cAACgwD,KAAO,CAACoD,UAAU,OAAO1N,QAAS1yB,EAAS,kDAAkDlE,SACxG9uB,cAAA,OAAKQ,UAAU,uCAAuC4uD,QAASA,KAC3DwK,GAAc,GACdI,GAAQt0D,IAAQ,IAAD63D,EACX,MAAM,OAAE3gE,EAAM,EAAE0Z,GAAmB,QAAhBinD,EAAG73D,EAAIu0D,iBAAS,IAAAsD,IAAI,CAAC,EAExC,GAAsB,kBAAX3gE,GAAoC,kBAAN0Z,EAAgB,OAAO5Q,EAChE,MAAM23D,EAA0B,IACzB33D,EAAIu0D,UACP3jD,GAAI,IAAM1Z,GAAU,GAGxB,MAAO,CACHgkC,QAASy8B,EACTpD,UAAWoD,EACd,GACH,EACJvuC,SACE9uB,cAACs9D,KAA2B,aAIrCrB,GAAav+C,QAAyB/C,IAAhBq+C,IAA+Bh5D,cAACw9D,KAAK,CAC1D19B,YAAa9M,EAAS,mCACtBzxB,MAAO,OAEXvB,cAACy9D,KAAS,CACN/8D,IAAoB,YAAf04D,EAA2BI,EAAiBK,EACjD1L,SAAU8J,EACVz3D,UAAWy3D,EAAW,eAAiB,GACvCyF,WAAYtH,EACN,CACEA,mBAEF,CACEuH,gBAAiB,8DAEzBC,cAAerD,EACfsD,aAAcA,KAKV,GAJAvD,EAAY15B,QAAU,CAClB+H,OAAQ,GACRquB,KAAM,MAELqB,EAKA,GACe,WAAfe,GAAsD,MAAZ,OAAdS,QAAc,IAAdA,IAAkB,KAC5B,YAAfT,GAAuD,MAAZ,OAAdI,QAAc,IAAdA,IAAkB,IACrD,CACE,MAAM,MAAE78D,EAAK,OAAEC,GAAWy7D,EACpBtyB,EAAMsyB,EAAgBt1B,WAAW,MAEpC,OAAHgD,QAAG,IAAHA,KAAKuB,UAAU,EAAG,EAAG3qC,EAAOC,GACxBy9D,GAAe3B,EAAa2B,EAAejB,EAAYO,GAC3DnB,EAAeQ,GACfjF,GAAW,GACX2F,EAAS,kBACb,MACIT,OAAet+C,GACfg+C,SAlBA5E,GAAW,GACX2F,EAAS,uBACTf,SAkBgBh+C,IAAhBq+C,IACAjF,GAAW,GACX2F,EAAS,kBACb,EAEJ1C,KAAMoD,EACN0D,YAAaA,KACTlE,GAAc,EAAK,EAEvBpK,SAAUA,CAACuO,EAAeC,KACtB,MAAMz8D,EAAQw4D,EAAOn5B,QACjB05B,EAAY15B,QAAQo2B,OACnBkD,EASDF,GAAQt0D,IACG,IACAA,EACHk7B,QAASm2B,GAAciH,EAAiBz8D,EAAOhD,QAXvD47D,GAAY,GACZH,GAAQt0D,IACG,IACAA,EACHk7B,QAASm2B,GAAcgH,EAAex8D,EAAOhD,QAUzD,EAEJ0/D,WAAYA,CAACha,EAAGia,KACP5D,EAAY15B,QAAQo2B,MAAMgD,GAAQt0D,IAAG,IAAUA,EAAKu0D,UAAWiE,KAAe,EAEvFC,cAAc,EACdnF,YAAaA,GAvED,GAAGI,KAAcc,KAAchB,UA0EjD,ICloBRkF,GAAwB/wC,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0F3ByM,GAAkBr5C,IAKP,IALQ,OAC5B+M,EAAM,aACNusC,EAAe,GAAE,SACjB9O,EAAWA,OAAQ,eACnB+O,GACcv5C,EACd,MAAOw5C,EAAcC,GAAmBjR,mBAAS8Q,GAC3CtrC,EAAWQ,KAEXkrC,EAAsBliD,KAAKslB,UAAU08B,GAM3C,OALAp7B,qBAAU,KACNosB,EAASgP,EAAa,GAEvB,CAACE,IAEG1Q,eAACoQ,GAAqB,CAAC59D,UAAWusB,GAAW,sBAAuBgF,EAAS,iBAAmB,oBAAoBjD,SAAA,CACvH9uB,cAAA,OAAKQ,UAAU,QAAOsuB,SAClB9uB,cAACkzD,KAAQ,CACLC,QAASphC,EACTy9B,SAAUt1C,GAAKqkD,EAAerkD,EAAE4mB,OAAOqyB,SAASrkC,SAClDkE,EAAS,yBAEfhzB,cAAA,OAAKQ,UAAU,YAAWsuB,SACrB,IAAIlT,MAAM,IAAIrI,KAAI,CAAC0wC,EAAGh6B,KACnB,MAAM00C,EAAkB,GAAG10C,EAAQ,IAEnC,MAAwB,MAApB00C,EAAgC3+D,cAACgwD,KAAO,CAExCtK,QAAS3zB,EAASiB,EAAS,6BAA+B,KAAKlE,SAE/D9uB,cAAA,OAAKQ,UAAU,oBAAoB4uD,QAASA,KACpCr9B,GAAQ0sC,EAAgB,GAAG,EACjC3vC,SACE9uB,cAACC,IAAmB,OANpB,KAUDD,cAAA,OACHQ,UAAW,6BAA6BypB,EAAQ,KAAKu0C,EAAaxkD,SAAS2kD,GAAmB,iBAAmB,KACjHvP,QAASA,KACDr9B,GAAQ0sC,GAAgB/4D,IACxB,IAAIk5D,EAAS,IAAIl5D,GAKjB,OAHIk5D,EAAO5kD,SAAS2kD,GAAkBC,EAASA,EAAO91C,QAAOtV,GAASA,IAAUmrD,IAC3EC,EAAOprB,KAAKmrB,GAEVC,CAAM,GACf,EACJ9vC,SAEF9uB,cAAA,OACIQ,UAAW,qCAAqCypB,EAAQ,IACxDzB,MAAO,CAAEwyC,UAAW,UAAU9oD,GAAe+X,8BAfpC00C,EAiBX,QAGM,ECvJfE,GAAiB12C,GACnBnoB,cAACkwD,GAAa,CAAC17B,SAAUx0B,cAAAiuD,WAAA,IAAMn/B,SAClC9uB,cAAC8+D,KAAM,IAAK32C,MAIP42C,GAAkB1xC,KAAOukC,GAAG;;;;;;;;;;;;;;;EAiB5BoN,GAAuB3xC,KAAOukC,GAAG;;;;;;;;;;;;;;EAuBjCqN,GAAiB,CAC1BC,UATmC7xC,KAAOukC,GAAG;;;;;;;EAU7CuN,OAAQH,IC1CNI,GAAuB/xC,aAAOynC,KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4C9BuK,GAAiB3M,sBAA8C,CAAA1tC,EAMzEitC,KAAS,IANiE,UACzEjwB,EAAS,eACTC,EAAc,iBACd+lB,EAAgB,UAChB1D,EAAS,gBACTjiB,GACHrd,EACG,MAAMgO,EAAWQ,MACX,YACFyN,GACAD,GAAW2zB,uBAAWx/B,IAAA,IACtBsM,SAAS,YAAER,IACd9L,EAAA,MAAM,CACH8L,cACH,MACK,SAAEmB,GAAaiiB,IACjB,EACAC,EACA,CACI0D,mBACA/lB,iBACAjP,cAGF,gBACFkP,GACAoiB,EACEniB,EAAYM,iBAAO,CACrB8B,gBAAiBmD,QAAQC,UACzBrD,iBAAiB,KAEdg7B,EAAeC,GAAkB/R,oBAAS,GAC3ClrB,EAAqBI,uBAAY,KACnC68B,GAAe,EAAM,GACtB,KACG,OAAEh6B,EAAM,kBAAEG,GAAsB3D,GAAc,CAChDC,YACAC,iBACAC,kBACAC,YACAC,WACAC,kBACAC,uBAGE3iB,EAAY8I,IACV62C,IACAt9B,EACApC,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,sCAI1BusC,GAAe,GACfh6B,EAAO9c,IACD,EAOV,OALA6pC,8BAAoBL,GAAK,MACrBtyC,WACA+lB,wBAGA1D,EAAkB,KACfgsB,eAAA,OAAKxtD,UAAU,wBAAuBsuB,SAAA,CACzC9uB,cAAA,OAAK8Y,GAAG,wBACRk1C,eAACoR,GAAoB,CAAC5+D,UAAU,cAAcsY,GAAG,oBAAmBgW,SAAA,CAChE9uB,cAACgwD,KAAO,CAACtK,QAASzkB,EAAcjhC,cAAAiuD,WAAA,CAAAn/B,SAAE,sBAAkB,KAAKA,SACrD9uB,cAAA,OAAKQ,UAAU,eAAcsuB,SACzB9uB,cAAA,OAAKQ,UAAU,gBAAgB4uD,QAASA,IAAMzvC,IAAWmP,SACpDwwC,EACKtsC,EAAS,iCACTA,EAAS,+BAI3BhzB,cAACw/D,KAAQ,CACLrR,SAAUmR,EACV9+D,UAAU,uBACV4yD,UAAU,cACV1N,QAAS1lD,cAACy2D,GAAgB,CAACjH,SAAUA,IAAMlkC,OAAmBwD,SAE9D9uB,cAAA,OAAKQ,UAAU,gBAAgB4uD,QAASl1C,GAAKA,EAAEmQ,kBAAkByE,SAC7D9uB,cAACy/D,KAAY,aAIvB,I,uDChIV,MAAMC,GAAwBryC,KAAOukC,GAAG;MAClCxkC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2DAuyC,GAA2BtyC,aAAOD,GAAuB;;;;;;;;;;;;;;;;;;EAwBzDwyC,GAAqB56C,IAIA,IAJC,KACxBsP,EAAI,SACJxF,EAAQ,SACRq/B,GACiBnpC,EACjB,MAAO66C,EAAkBC,GAAmBtS,oBAAS,GASrD,OAAOQ,eAAC2R,GAAwB,CAC5BxR,SAAUA,EACViB,QAASl1C,IAVkB6lD,MAWvB7lD,EAAEmQ,kBAXqB01C,EAYDzrC,EAX1B0rC,KAAKD,GACLD,GAAgB,GAChBx8B,YAAW,KACPw8B,GAAgB,EAAM,GACvB,IAO4B,EAC7BhxC,SAAA,CAED+wC,EAAmB7/D,cAAA,OAAKQ,UAAU,mBAAkBsuB,SAAC9uB,cAACigE,KAAa,MAAY,KAC/EnxC,IACsB,EAIlBoxC,GAAyBltC,GAAqC,CACvE,CACI12B,MAAO02B,EAAS,qCAChB32B,MAAO,YACP8jE,UAAWviD,IAEf,CACIthB,MAAO02B,EAAS,iCAChB32B,MAAO,QACP8jE,UAAWz9C,KAiBN09C,GAAc1N,sBAAW,CAAAv9B,EAMtB88B,KAA6C,IANtB,QACnCoO,EAAO,cACPrmB,EAAa,oBACbsmB,EAAmB,kBACnBC,EAAiB,QACjBzK,GACU3gC,EACV,MAAOwG,EAAS4xB,GAAcC,oBAAS,IAChCgT,EAAMC,GAAWjT,mBAAqB,cACtCkT,EAAkBC,GAAuBnT,mBAAiF,CAC7HoT,MAAO,CAAEjjE,KAAM,GAAI22B,KAAM,GAAIxW,WAAW,GACxC+iD,UAAW,CAAEljE,KAAM,GAAI22B,KAAM,GAAIxW,WAAW,MAE1C,YACFmjB,EAAW,WACXG,GACAJ,GAAW2zB,uBAAWt/B,IAAA,IACtBoM,SAAS,YAAER,EAAW,WAAEG,IAC3B/L,EAAA,MAAM,CACH4L,cACAG,aACH,KACKpO,EAAWQ,KACXstC,EAAU,mBACVC,EAAar+B,uBAAY,KAC3B,MAAM5B,EAASrhB,SAAS2kB,eAAe08B,GACnChgC,IACAA,EAAOpV,QACPoV,EAAOkgC,SACX,GACD,IAUH1O,8BAAoBL,GAAK,MACrBgP,YAAa,SAACvnD,MAAqBgB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,KAAAA,UAAA,KAChB6yC,GAAW,GAC1BoT,EAAoBT,GAAsBltC,GACrCzf,KAAI4iB,IAA2B,IAA1B,MAAE95B,EAAK,UAAE8jE,GAAWhqC,EACtB,IACI,MAAM,UACFrY,EAAS,OACTve,GACA4gE,EAAUzmD,EAAMsgC,GAEpB,MAAO,CACH39C,QACAyhB,YACAngB,KAAMwhB,GAAkBzF,EAAK/b,MAC7B22B,KAAM,GAAG9X,KAAKslB,UAAUviC,KAEhC,CAAE,MAAO2a,GAGL,OAFAuD,QAAQC,MAAMxD,GAEP,CACH7d,QACAyhB,WAAW,EACXngB,KAAM,UACN22B,KAAM,GAEd,KAEH9uB,QAA+E,CAACs+C,EAAIvtB,KAAwC,IAAtC,KAAEjC,EAAI,UAAExW,EAAS,MAAEzhB,EAAK,KAAEsB,GAAM44B,EAGnH,OAFAutB,EAAKznD,GAAS,CAAEsB,OAAM22B,OAAMxW,aAErBgmC,CAAI,GACZ,IAAK4c,IAEhB,MAGJt9B,qBAAU,KACNE,YAAW,KACH3H,GAAoB,cAAT6kC,GAAsBO,GAAY,GAClD,IAAI,GACR,CAACP,EAAMO,EAAYplC,IAEtB,MAAM,KACFrH,EAAI,UACJxW,EAAS,KACTngB,GACA+iE,EAAiBF,GACrB,OAAOxS,eAAAC,WAAA,CAAAn/B,SAAA,CACH9uB,cAACqtD,KAAK,CACF1xB,QAASA,EACT4H,MAAOvQ,EAAS,6BAChBxyB,UAAU,iBACVgqB,SAAUA,KACN+iC,GAAW,GACXuI,GAAS,EAEbzH,WAAYr7B,EAAS,0BACrBk7B,cAAe,CACX1lC,MAAO,CAAE04C,QAAS,SAEtBC,gBAAgB,EAAMryC,SAEtBk/B,eAAC0R,GAAqB,CAAA5wC,SAAA,CAClB9uB,cAACyyD,GAAU,CACPN,WAAY+N,GAAsBltC,GAClCw8B,SAAUgR,GAAQC,EAAQD,GAC1BnkE,MAAOmkE,IAEA,UAATA,GAAoB1iD,GAAckwC,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CAC9D9uB,cAAA,KAAA8uB,SAAIkE,EAAS,oCACbhzB,cAAA,SACCgzB,EAAS,yCAEdg7B,eAAA,OAAKxtD,UAAWusB,GAAW,0BAA2B,QAAQyzC,KAAQ1xC,SAAA,CAClE9uB,cAACo0D,GAAe,CAACrc,QAAUsoB,GAAoB,UAATG,EAAoBxgE,cAACk1D,GAAkB,SAAMv6C,EAAUmU,SACzF9uB,cAAA,OAAA8uB,SACIk/B,eAAC5gC,GAAsB,CACnB+gC,SAAUkS,GAAoB,UAATG,EACrBpR,QAASA,KACL,MAAM7vC,EAAO,IAAIuvC,KAAK,CAACx6B,GAAO,CAAEz1B,KAAM,qBACtCygB,GACIH,GAAkBxhB,GAClB4hB,EACA,mBACH,EACHuP,SAAA,CAEF9uB,cAAA,OAAKQ,UAAU,OAAMsuB,SAAC9uB,cAACs8D,KAAgB,MACvCt8D,cAAA,OAAKQ,UAAU,QAAOsuB,SACjBkE,EAAS,sDAKhB,cAATwtC,GAAwBxgE,cAACo0D,GAAe,CACrCrc,QAASj6B,EACH9d,cAACm0D,GAAiB,CAAArlC,SACfkE,EAAS,gDAEZrY,EAAUmU,SAEhB9uB,cAAA,OAAA8uB,SACIk/B,eAAC4R,GAAkB,CACfzR,SAAUrwC,EACVwW,KAAMosC,EAAiBG,UAAUvsC,KAAKxF,SAAA,CAEtC9uB,cAAA,OAAKQ,UAAU,OAAMsuB,SAAC9uB,cAACohE,KAAY,MACnCphE,cAAA,OAAKQ,UAAU,QAAOsuB,SACjBkE,EAAS,kDAK1Bg7B,eAAA,OAAAl/B,SAAA,CACI9uB,cAACo0D,GAAe,CAACrc,QAASsoB,EAAUrgE,cAACk1D,GAAkB,SAAMv6C,EAAUmU,SACnE9uB,cAAA,OAAA8uB,SACIk/B,eAAC5gC,GAAsB,CACnB+gC,SAAUkS,EACV7/D,UAAU,wBACV4uD,QAASmR,EAAkBzxC,SAAA,CAE3B9uB,cAAA,OAAKQ,UAAU,OAAMsuB,SAAC9uB,cAACqhE,KAAiB,MACxCrhE,cAAA,OAAKQ,UAAU,QAAOsuB,SACjBkE,EAAS,kDAK1BhzB,cAACw/D,KAAQ,CAAC9Z,QAAS1lD,cAACy2D,GAAgB,IAAI3nC,SACpCk/B,eAAA,OAAKxtD,UAAU,oBAAmBsuB,SAAA,CAC7BsS,EAAW,GAAG,SAAIA,EAAW,WAI/B,cAATo/B,IAAyB1iD,GAAc9d,cAAC08D,KAAM4E,SAAQ,CACpDxoD,GAAIgoD,EACJtgE,UAAU,mBACVioB,KAAK,QACLpsB,MAAOqkE,EAAiBG,UAAUvsC,KAClCitC,KAAM,YAKtBvhE,cAACgwD,KAAO,CAACtK,QAASzkB,EAAcjhC,cAAAiuD,WAAA,CAAAn/B,SAAE,sBAAkB,KAAKA,SACrD9uB,cAAA,UAAQQ,UAAU,+BAA+B4uD,QAASA,KACtDkR,IACA/S,GAAW,EAAK,EAClBz+B,SACGkE,EAAS,2BAGlBhzB,cAACw/D,KAAQ,CACL9Z,QAAS1lD,cAACs2D,KAAI,CAAClH,QAASl1C,GAAKA,EAAEw8C,SAASrsC,kBAAkByE,SACrDoxC,GAAsBltC,GAAUzf,KAAI,CAAA8oB,EAAuBpS,KAAW,IAAjC,UAAEk2C,EAAS,MAAE7jE,GAAO+/B,EACtD,OAAOr8B,cAACs2D,KAAKC,KAAI,CACbnH,QAASA,KACL,IACI,MAAM11C,EAAOymB,GAAQzM,WAAWha,MAC1B,OACFna,GACA4gE,EAAUzmD,EAAMsgC,GA3KzBwnB,EAAC7jE,EAAc8jE,KAClC,MAAMliD,EAAO,IAAIuvC,KAAK,CAAC2S,GAAU,CAAE5iE,KAAM,qBACzCygB,GACIH,GAAkBxhB,GAClB4hB,EACA,mBACH,EAuKuBiiD,CACIriD,GAAkBzF,EAAK/b,MACvB,GAAG6e,KAAKslB,UAAUviC,KAE1B,CAAE,MAAO2a,GACLuD,QAAQC,MAAMxD,GACd0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,wBAClB8M,YAAa9M,EAAS,6BAE9B,GACFlE,SAEDxyB,GArBkB,GAAG2tB,IAsBd,MAEZ6E,SAER9uB,cAACotB,GAAsB,CAAC5sB,UAAU,iCAAgCsuB,SAC9D9uB,cAACs8D,KAAgB,UAG1B,I,cC7WP,MAAMoF,GAAwBr0C,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;UAqB9BxkC;;;;;;;;EA0BGu0C,GAAcjP,sBAAwC,CAAA1tC,EAKhEitC,KAAS,IALwD,YAChEhxB,EAAW,SACXjO,EAAQ,SACR4uC,EAAQ,QACR9L,GACH9wC,EACG,MAAM68C,EAAiB,uBACjBC,EAAW,gBACXhB,EAAU,kBACViB,EAAgCt/B,iBAAyB,MACzDu/B,EAA0Bv/B,iBAAyB,OAClDw/B,EAAUC,GAAe1U,mBAAS,IAClCgT,EAAMC,GAAWjT,mBAAsC,YACvD7xB,EAAS4xB,GAAcC,oBAAS,IAChCsG,EAASC,GAAcvG,oBAAS,GACjCuT,EAAar+B,uBAAY,KAC3B,MAAM5B,EAASrhB,SAAS2kB,eAAe08B,GACnChgC,IACAA,EAAOpV,QACPoV,EAAOkgC,SACX,GACD,IAEH59B,qBAAU,KACNE,YAAW,KACH3H,GAASolC,GAAY,GAC1B,IAAI,GACR,CAACA,EAAYplC,IAEhB22B,8BAAoBL,GAAK,MACrBkQ,cAAe3B,IACXC,EAAQD,GACRjT,GAAW,EAAK,MAIxB,MAAM6U,EAAUA,KACZF,GAAYx8D,GAAOA,EAAM,IACzB6nD,GAAW,GACXwG,GAAW,GACX+B,GAAS,EAEPuM,EAAcpwC,eAChB+M,GAEE,IADFsjC,EAAW5nD,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,GAEX,IACI,GAAIskB,EAAU,CACV,MACItlB,KAAMulB,EAAW,UACjBnhB,GACAihB,GACAC,EACU,YAATwhC,GAA+B,QAATA,OAAkB7lD,EAAYwlB,GAAQzM,WAAWha,MAgB5E,GAbIoE,GACA8hB,KAAahV,KAAK,CACdiV,QAAS7M,EAAS,kCAClB8M,YAAa9M,EAAS,wCAU1BsvC,GAAyC,WAA1BrjC,EAAY9oB,WxD7GbqJ,KAC9B,IACI,OAAOA,EAAKsV,WAAW,qDAC3B,CAAE,MAAO5a,GAEL,OADAuD,QAAQC,MAAMxD,IACP,CACX,GwDuGqEqoD,CAAkBtjC,EAAYj5B,KAAM,CACzF,MAAMw8D,EAA4B,IAAKvjC,GACvC,IACI,MAAMwjC,OCjIDxwC,WACzB,MAAMywC,EAAY,IAAIC,QACtBD,EAAUE,OAAO,gBAAiB,6BAElC,MAAMC,EAAW,IAAIC,SAKrB,OAJAD,EAASD,OAAO,QAASG,GACzBF,EAASD,OAAO,OAAQ,OACxBC,EAASD,OAAO,QAASG,EAAQloD,QAAQ,sDAAuD,IAAIA,QAAQ,OAAQ,WAEvGwX,MAAM,gCAAiC,CAChD2wC,OAAQ,OACR1wC,QAASowC,EACTllE,KAAMqlE,EACNI,SAAU,UACZ,EDmH8CC,CAAcjkC,EAAYj5B,KACtD,GAA6B,MAAzBy8D,EAAcrmC,OAEd,MADAomC,EAAoBx8D,IAAM,kCACpB,IAAIysB,MAAM,0BAA4BgwC,EAAcrmC,QAE9D,MAAM+mC,QAAsDV,EAAcjwC,OAE1EgwC,EAAoBx8D,IAAMm9D,EAAkB7uC,KAAK9U,IACrD,CAAE,MAAOtF,GAELuD,QAAQC,MAAM,gBAAiBxD,GAC/B0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,+BAClB8M,YAAa9M,EAAS,oCAE9B,CACA4uC,EAASY,EAAqB,CAC1BliC,kBAAkB,EAClB8iC,mBAA6B,QAAT5C,EACpB6C,UAAoB,QAAT7C,GAEnB,MACIoB,EAAS3iC,EAAa,CAClBqB,kBAAkB,EAClB8iC,mBAA6B,QAAT5C,EACpB6C,UAAoB,QAAT7C,GAGvB,CACJ,CAAE,MAAOtmD,GACLuD,QAAQC,MAAM,gBAAiBxD,GAC/B0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,8BAClB8M,YAAa9M,EAAS,mCAE9B,CACJ,EACMswC,EAAoBzV,IACtB,GAAIA,EACA,IAAK,IAAIrzB,EAAM,EAAGA,GAAOqzB,EAASxzC,OAAQmgB,IAAO,CAC7C,MAAMo1B,EAAa/B,EAASgC,KAAKr1B,GACjC,IAAKo1B,EAAY,SAEjB,MAAMl4B,EAAS,IAAIg3B,WACnBh3B,EAAOo1B,OAAS33B,IAAiB,IAAhB,OAAE2L,GAAQ3L,EACvB,IAAK2L,EAAQ,OAEb,MAAM,OAAEvhC,GAAWuhC,EACG,kBAAXvhC,GACX8iE,EAAY9iE,EAAO,EAEvBm4B,EAAOq3B,WAAWa,GAClB,KACJ,CACH,EAEC2T,EAAetxC,UACjB,IACI,MAAM6O,EAASrhB,SAAS2kB,eAAe08B,GACvC,GAAIhgC,EAAQ,CAAC,IAAD0iC,EACR,MAAM,MAAEnnE,GAAUykC,EACZrM,EAA8B,QAAf+uC,EAAGnnE,EAAM07B,cAAM,IAAAyrC,IAAI,GACxC,IAAIC,EAAiB,GACrB,IACIA,EAAiBxpD,GAAYyC,mBAAmB+X,GACpD,CAAE,MAAOva,GAAI,CACb,IAAI8kB,EAAgD,KAGpD,GAAIvK,EAAgBK,WAAW,MAAQL,EAAgBivC,SAAS,KAC5D1kC,EAAWvK,OAGV,GAAIgvC,EAAe3uC,WAAW,MAAQ2uC,EAAeC,SAAS,KAC/D1kC,EAAWxiB,KAAKC,MAAMgnD,OAErB,CAAC,IAADE,EACD,MAAMC,EAAgBnvC,EAAgBK,WAAW,iCAE3CL,EAEA,uDAAuDA,6BAC7Ds/B,GAAW,GACX,MAAM3hC,QAAiBC,MAAMuxC,GAC7B,IAAKxxC,EAASyxC,GACV,MAAM,IAAIpxC,MAAM,oBAAoBL,EAASgK,UAGjD,MAAM0nC,QAAiD1xC,EAASI,OAEhEwM,EAAqG,QAA7F2kC,EAAGG,EAAaxvC,KAAKwI,MAAKzH,IAAA,IAAC,KAAE13B,GAAM03B,EAAA,OAAK13B,EAAKo2B,gBAAkBU,EAAgBV,aAAa,WAAC,IAAA4vC,IAC9FG,EAAaxvC,KAAKsG,MAAK,CAACpB,EAAGjf,KAAO,IAADwpD,EAAAC,EAChC,MAAMC,EAAmB,QAAdF,EAAGvqC,EAAE0qC,iBAAS,IAAAH,OAAA,EAAXA,EAAc,GACtBI,EAAmB,QAAdH,EAAGzpD,EAAE2pD,iBAAS,IAAAF,OAAA,EAAXA,EAAc,GAE5B,IAAKC,IAAUE,EAAO,OAAO,EAI7B,OADuBF,EAAMG,UAAY,IAAMD,EAAMC,UAAY,GAC7C,EAAUD,EAAMC,UAAYH,EAAMG,UAE/CD,EAAME,MAAQJ,EAAMI,KAAK,IACjC,EACX,OAEMhC,EAAYrjC,GAAU,EAChC,CACJ,CAAE,MAAO9kB,GACLuD,QAAQC,MAAM,gBAAiBxD,GAC/B0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,8BAClB8M,YAAa9M,EAAS,mCAE9B,CAAC,QACGovC,GACJ,GAGJ,OAAOpU,eAAAC,WAAA,CAAAn/B,SAAA,CACH9uB,cAACqtD,KAAK,CACF1xB,QAASA,EACT4H,MAAgB,UAATi9B,EACDxtC,EAAS,6BACTA,EAAS,uBACfxyB,UAAU,iBACVgqB,SAAU43C,EACVhU,OAAQp7B,EAAS,0BACjBsxC,eAAgBxQ,EAChByQ,kBAAmB,CACf/7C,MAAO,CAAE04C,QAAS,SAEtBC,gBAAgB,EAChB7S,KAAMiV,EAAaz0C,SAEnBk/B,eAAC0T,GAAqB,CAAA5yC,SAAA,CACR,UAAT0xC,EACKxS,eAAA,OAAKxtD,UAAU,eAAcsuB,SAAA,CAC1BkE,EAAS,oCACVhzB,cAAA,SACCgzB,EAAS,oCACVhzB,cAAA,SACAA,cAAA,QAAMQ,UAAU,QAAOsuB,SAAEkE,EAAS,+CAEpC,KACNhzB,cAAA,OAAKQ,UAAU,yBAAwBsuB,SACnC9uB,cAAC08D,KAAM4E,SAAQ,CACXxoD,GAAIgoD,EACJtgE,UAAU,mBACVioB,KAAK,QACLk0C,YAAa3pC,EAAS,yBACtBm7B,SAAU2F,EACV0Q,aAAcjB,EACdhC,KAAM,GAPW,SAASU,OAUxB,UAATzB,EACKxS,eAAA,OAAKxtD,UAAU,0BAAyBsuB,SAAA,CACtC9uB,cAAA,QAAMQ,UAAU,mBAAkBsuB,SAAEkE,EAAS,qCAC7Cg7B,eAAC5gC,GAAsB,CACnB5sB,UAAU,gBACV4uD,QAASA,KACL,MAAMtuB,EAASrhB,SAAS2kB,eAAe09B,GACnChhC,GACAA,EAAOoC,OACX,EACFpU,SAAA,CAEF9uB,cAAA,SAAsCiyD,IAAK+P,EACvCnjE,KAAK,OACLia,GAAIgpD,EACJxS,OAAO,mBACP9uD,UAAU,sBACVgvD,SAAUA,KAAO,IAADiV,EACZ,MAAM5W,EAA0C,QAAlC4W,EAAGzC,EAAwBphC,eAAO,IAAA6jC,OAAA,EAA/BA,EAAiC/U,MAElD4T,EAAiBzV,GACjBuU,GAAS,GATL,cAAcH,KAYzBjvC,EAAS,4BAEJ,QAATwtC,GAAkBxS,eAAAC,WAAA,CAAAn/B,SAAA,CACf9uB,cAAA,QAAMQ,UAAU,mBAAkBsuB,SAAEkE,EAAS,qCAC7ChzB,cAACotB,GAAsB,CACnB5sB,UAAU,eACV4uD,QAASA,KACLiT,EAAYrpD,MACZopD,GAAS,EACXtzC,SAEDkE,EAAS,8BAIpB,UAGdhzB,cAACgwD,KAAO,CACJtK,QAASzkB,EACH+sB,eAAA,OAAKxtD,UAAU,SAAQsuB,SAAA,CACrB9uB,cAAA,OAAA8uB,SAAK,sBACLk/B,eAAA,OAAAl/B,SAAA,CAAK,oBAAakE,EAAS,qCAE7B,KAAKlE,SAEX9uB,cAAA,UACIQ,UAAU,+BACV4uD,QAASA,KACLqR,EAAQ,WACRlT,GAAW,EAAK,EAClBz+B,SAEDkE,EAAS,2BAGlBhzB,cAACgwD,KAAO,CAACtK,QAAS1yB,EAAS,yBAAyBlE,SAChDk/B,eAAC5gC,GAAsB,CACnB5sB,UAAU,iCACV4uD,QAASA,KACL,MAAMtuB,EAASrhB,SAAS2kB,eAAey9B,GACnC/gC,GACAA,EAAOoC,OACX,EACFpU,SAAA,CAEF9uB,cAAA,SAA6CiyD,IAAK8P,EAC9CljE,KAAK,OACLia,GAAI+oD,EACJvS,OAAO,mBACP9uD,UAAU,sBACVgvD,SAAUA,KAAO,IAADkV,EACZ,MAAM7W,EAAgD,QAAxC6W,EAAG3C,EAA8BnhC,eAAO,IAAA8jC,OAAA,EAArCA,EAAuChV,MAExD4T,EAAiBzV,GACjBuU,GAAS,GATL,qBAAqBH,KAYjCjiE,cAAC2kE,KAAc,WAGxB,IE9VMC,IFiW8Bv3C,aAAOipC,KAAK;;;;;;;;;;;;;;;;EEjWvB,CAC5B,CACIh6D,MAAO,MACPD,MAAO,MACP8rB,MAAO,CACH3nB,UAAW,aACXgoB,MAAO,CAAEq8C,WAAY,UAG7B,CACIvoE,MAAO,MACPD,MAAO,MACP8rB,MAAO,CACH3nB,UAAW,aACXgoB,MAAO,CAAEq8C,WAAY,YAkBpBC,GAAmBlkE,OAAOC,OAAOgF,GAAW0N,KAAI4hB,IAAA,IAAC,MAAE94B,EAAK,MAAEC,GAAO64B,EAAA,MAAM,CAChF74B,QACAD,QACH,IAOY0oE,GAAsB,CAC/B,CAAE1oE,MAAO,SAAUC,MAAO0D,cAACC,IAAmB,QAC3CW,OAAOC,OAAOkF,GAAcwN,KAAI4iB,IAAA,IAAC,MAAE95B,EAAK,MAAEC,GAAO65B,EAAA,MAAM,CACtD75B,QACAD,QACH,KAGQ2oE,GAAqBA,IAAMlzD,GAAUyB,KAAIgjB,IAAA,IAAC,KAAE54B,EAAI,QAAE+B,EAAO,qBAAE+R,EAAoB,yBAAEE,EAAwB,QAAEH,GAAS+kB,EAAA,MAAM,CACnIj6B,MAAO0D,cAACm2D,GAAc,CAClB1kD,qBAAsBA,EACtBE,yBAA0BA,EAC1BjS,QAASA,IAEbrD,MAAOsB,EACP6T,UACH,IA6BYyzD,GAAiB,IAAIrpD,MAAM,KAAKrI,KAAI,CAAC0wC,EAAGh6B,KAAK,CAAQ3tB,MAAO2tB,EAAO5tB,MAAO4tB,MAE1Ei7C,GAAoB/kE,EAAYoT,KAAIuqB,IAAA,IAAC,MAAEzhC,GAAOyhC,EAAA,MAAM,CAC7DxhC,MAAOD,IAAU6D,EACXF,cAACC,IAAmB,IACpBD,cAAA,OAAKS,IAAKpE,EAAOqE,IAAK,0CAAyDrE,EAAM03B,sBAC3F13B,QACH,IAEY8oE,GAA8BvkE,OACtCuQ,QrEsL2F,CAC5FzI,WAAY,CACRpM,MAAO,IACPw1B,MAAO,GAEXnpB,OAAQ,CACJrM,MAAO,IACPw1B,MAAO,GAEXlpB,MAAO,CACHtM,MAAO,IACPw1B,MAAO,GAEXjpB,UAAW,CACPvM,MAAO,IACPw1B,MAAO,GAEXhpB,QAAS,CACLxM,MAAO,IACPw1B,MAAO,KqExMVve,KAAIgrB,IAA8B,IAA5Bj9B,GAAK,MAAEhF,EAAK,MAAEw1B,IAAQyM,EACzB,MAAO,CACHjiC,QACAD,MAAOiF,EACPwwB,QACH,IAEJ8I,MAAK,CAACpB,EAAGjf,IAAMif,EAAE1H,MAAQvX,EAAEuX,QChFhC,MAAMszC,GAA4B/3C,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA8D/ByT,GAAargD,IAGP,IAHQ,SACvBsgD,EAAW,GAAE,OACbC,EAASA,QACAvgD,EACT,MAAMgO,EAAWQ,KAEXgyC,EAAkB56B,IACpB,MAAM66B,EAAchmD,SAAS2kB,eAAekhC,GAC5C,GAAIG,EAAa,CACb,MAAM,MAAEppE,GA5Gb,SAAwBykC,EAA6B4kC,GAExD,GAAKjmD,SAAiBkmD,UAKlB,OAJA7kC,EAAOpV,QACMjM,SAAiBkmD,UAAUC,cACpCloE,KAAOgoE,EAEJ,CACHrpE,MAAOykC,EAAOzkC,MACdwpE,SAAU,GAIb,GAAI/kC,EAAOglC,gBAA4C,IAA1BhlC,EAAOglC,eAAsB,CAC3D,MAAMC,EAAWjlC,EAAOglC,eAClBE,EAASllC,EAAOmlC,aAQtB,OAPAnlC,EAAOzkC,MAAQykC,EAAOzkC,MAAM+d,UAAU,EAAG2rD,GACnCL,EACA5kC,EAAOzkC,MAAM+d,UAAU4rD,EAAQllC,EAAOzkC,MAAMge,QAClDymB,EAAOglC,eAAiBC,EAAWL,EAAQrrD,OAC3CymB,EAAOmlC,aAAeF,EAAWL,EAAQrrD,OACzCymB,EAAOpV,QAEA,CACHrvB,MAAOykC,EAAOzkC,MACdwpE,SAAUE,EAAWL,EAAQrrD,OAErC,CAGI,OAFAymB,EAAOzkC,OAASqpE,EAET,CACHrpE,MAAOykC,EAAOzkC,MACdwpE,SAAU,EAGtB,CAyE8BK,CAAeT,EAAa76B,GAE9C26B,EAAOlpE,EAAOuuC,EAClB,GAkBJ,OAAOojB,eAACoX,GAAyB,CAAC16C,UAAW,EAAGlqB,UAAU,wBAAuBsuB,SAAA,CAC5E9uB,cAAA,OAAK8Y,GAAI,cAAetY,UAAU,cAAasuB,SAI3C,CACG,SACA,SACA,SACA,SACA,OACA,SACA,SACA,SACA,SACA,UACFvb,KAAIC,GACKxT,cAAA,UACH0qB,UAAW,EACXlqB,UAAU,UACV4uD,QAASA,IAAMoW,EAAehyD,GAAOsb,SACvCtb,GAJkBA,OAO5BxT,cAAA,OAAKQ,UAAU,wBAAuBsuB,SAClC9uB,cAAC8wD,GAAW,CACR/Y,QAASiW,eAACmG,GAAiB,CAAArlC,SAAA,CACtBkE,EAAS,kCACVg7B,eAAA,MAAAl/B,SAAA,CACI9uB,cAAA,MAAA8uB,SAAKkE,EAAS,2CACdhzB,cAAA,MAAA8uB,SAAKkE,EAAS,uDAaN,E,yDC7JhC,MAAMmzC,GAAqBzT,sBAAW,CAAA1tC,EAMfitC,KAA8C,IAN9B,SACnC9D,EAAQ,MACRxuD,EAAK,SACLymE,EAAQ,eACRC,EAAc,SACdC,GACiBthD,EACjB,MAAMgO,EAAWQ,MACV+yC,EAAeC,GAAoBhZ,mBAAS7tD,IAC5C8mE,EAAgBC,GAAqBlZ,mBAAS,IAC9CiN,EAAYkM,GAAiBnZ,oBAAU,GACxCoZ,EAAoBnkC,iBAAOzC,KAAS0mC,EAAmB,MAAM9lC,QAwBnE,OAtBA0xB,8BAAoBL,GAAK,MACrB4U,SAAUC,IACN,GAAIA,EAAW,CACX,MAAM,MAAEnnE,EAAK,OAAEoqB,EAAM,GAAEjR,GAAOguD,GACxB,IAAE//C,EAAG,IAAEC,EAAG,MAAEqvB,GAAUn4B,KAE5BsoD,EAAiB7mE,GACjB+mE,EAAkB1/C,EAAI,EAAGD,EAAI,IAAKsvB,EAA2B,IAArB1tB,WAAWoB,OACnD48C,EAAc7tD,EAClB,GAEJiuD,iBAAkBA,CAACjuD,EAAIiR,KACnB,MAAM,IAAEhD,EAAG,IAAEC,EAAG,MAAEqvB,GAAUn4B,KAExBpF,IAAO2hD,GAAYiM,EAAkB1/C,EAAI,EAAGD,EAAI,IAAKsvB,EAA2B,IAArB1tB,WAAWoB,MAAiB,MAInGqZ,qBAAU,KACFq3B,EAAa,IAAiB,OAAd4L,QAAc,IAAdA,KAAiB5L,EAAY,GAAGgM,EAAiB,KAAM,GAC5E,CAAChM,EAAYgM,EAAgBJ,IAEzBrY,eAAA,OAAKxtD,UAAU,2BAA0BsuB,SAAA,CAC5Ck/B,eAAA,OAAKxtD,UAAU,0BAAyBsuB,SAAA,CACpCk/B,eAAA,OAAAl/B,SAAA,CACKkE,EAAS,8CAA8C,KAAEhzB,cAACgnE,KAAW,CAClE3qE,MAAOoqE,EACPh+C,KAAK,QACLzB,IAAK,IAAKD,IAAK,EACfyoC,SAAUnzD,GAASuqE,EAAmC,kBAAVvqE,EAAqB+vB,SAAS/vB,GAAc,OAALA,QAAK,IAALA,IAAS,QAGpG2D,cAAC80D,KAAM,CAACt0D,UAAU,oBAAoBioB,KAAK,QAAQ0lC,SAAUA,EAAUiB,QAASA,IAAc,OAARkX,QAAQ,IAARA,OAAQ,EAARA,EAAW7L,GAAY3rC,SACxGkE,EAAS,qDAGlBhzB,cAACinE,KAAY,CACTC,OAAQ,CACJC,QAAS,CACLC,OAAQ,CACJznE,MAAO,UACP+W,WAAY,sBACZ2wD,UAAW,QAEf7pE,KAAM,CACF8pE,QAAS,mCAIrBC,cAAc,EACd5nE,MAAO4mE,EACP/W,SAAU7vD,GAAS6mE,EAAiB7mE,EAAMksB,KAC1C27C,iBAAkB7nE,IACd6mE,EAAiB7mE,EAAMksB,KACf,OAARu6C,QAAQ,IAARA,KAAWzmE,EAAMksB,IAAI,MAG3B,IAIJ47C,GAAkBC,IACb,CACHC,UAAWD,EACXE,IAAK/9C,GAAiB69C,KAQjBG,GAAqB1yC,IAIP,IAAD2yC,EAAAC,EAAA,IAHtBj+C,QAASk+C,EAAkBn+C,GAAiBF,MAC5Cs+C,MAAOC,EAAgB,IAAG,iBAC1BC,GACiBhzC,EACjB,MAAMnC,EAAWQ,KACX40C,EAAY3lC,iBAA8B,OACzCwlC,EAAOI,GAAY7a,mBAAS0a,IAC5Bp+C,EAASw+C,GAAc9a,oBAAS,KAAO,IAAD+a,EAAAC,EACzC,MAAMC,EAAgB7+C,GAAao+C,GAEnC,MAAO,CACHJ,IAAKI,EACLL,UAAWc,EACXC,iBAAsC,QAAtBH,EAAkB,QAAlBC,EAAEC,EAAc,UAAE,IAAAD,OAAA,EAAhBA,EAAkB1vD,UAAE,IAAAyvD,KAAK,EAC9C,IAGCI,EAAgBjmC,uBAAY,CAAC5pB,EAAYiR,IAAmBu+C,GAAW5iE,IACzE,MAAMkjE,EAAgBljE,EAAIiiE,UAAUp0D,KAAIC,GAASA,EAAMsF,KAAOA,EAAK,IAAKtF,EAAOuW,UAAWvW,IAE1F,MAAO,IAAK9N,KAAQ+hE,GAAemB,GAAgB,KACnD,IAEJxlC,qBAAU,KACNilC,EAASH,EAAc,GACxB,CAACA,IAEJ9kC,qBAAU,KAAO,IAADylC,EAAAC,EACZ,MAAMC,EAAan/C,GAAao+C,GAEhCM,EAAW,CACPV,IAAKI,EACLL,UAAWoB,EACXL,iBAAmC,QAAnBG,EAAe,QAAfC,EAAEC,EAAW,UAAE,IAAAD,OAAA,EAAbA,EAAehwD,UAAE,IAAA+vD,KAAK,GAC1C,GACH,CAACb,IAEJ,MAAMgB,EAAmBvmC,kBAAO,GAsChC,OArCAW,qBAAU,KACiD,IAAD6lC,EAAlDn/C,EAAQ69C,UAAU,IAAMqB,EAAiBpoC,UACzCooC,EAAiBpoC,SAAU,EACV,QAAjBqoC,EAAAb,EAAUxnC,eAAO,IAAAqoC,GAAjBA,EAAmBpC,SAAS/8C,EAAQ69C,UAAU,IAClD,GACD,CAAC79C,EAAQ69C,YAEZvkC,qBAAU,KACN,IAAIC,GAAW,EAUf,OATAC,YAAW,KACP,MAAM,UAAEqkC,EAAS,iBAAEe,GAAqB5+C,EACxC,GAAIuZ,GAAYqlC,GAAoB,EAAG,CAAC,IAADQ,EACnC,MAAMC,EAAcxB,EAAU7qC,MAAKtpB,GAASA,EAAMsF,KAAO4vD,IAErDS,IAA8B,QAAjBD,EAAAd,EAAUxnC,eAAO,IAAAsoC,GAAjBA,EAAmBnC,iBAAiB2B,EAAkBS,EAAYp/C,QACvF,IACD,KAEI,KACHsZ,GAAW,CAAK,CACnB,GACF,CAACvZ,IAGJsZ,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA8kC,EAAiBr+C,EAAQ69C,UAAWM,EACxC,GACD,KAEI,KACH5kC,GAAW,CAAK,CACnB,GACF,CAACvZ,EAASm+C,EAAOE,IAEbna,eAAA,OAAKxtD,UAAU,6CAA4CsuB,SAAA,CAC9Dk/B,eAAA,OAAKxtD,UAAU,yBAAwBsuB,SAAA,CACnC9uB,cAAA,MAAA8uB,SACKkE,EAAS,iDAEdg7B,eAAC8G,KAAM,CACHrsC,KAAK,QACLjoB,UAAU,iBACV2tD,UAAoC,QAA1B2Z,EAAkB,QAAlBC,EAACj+C,EAAQ69C,iBAAS,IAAAI,OAAA,EAAjBA,EAAmB1tD,cAAM,IAAAytD,IAAI,KAhGjC,GAiGP1Y,QAASA,KACLkZ,GAAW5iE,IACP,MAAMkjE,EAAgB,IACfljE,EAAIiiE,UACP,CAAE59C,OAAQ,MAAOpqB,MAAO,UAAWmZ,GAAIpT,EAAIiiE,UAAUttD,OAAS,IAChEugB,MAAK,CAACpB,EAAGjf,IAAM6uD,OAAO5vC,EAAEzP,QAAUq/C,OAAO7uD,EAAEwP,UAE7C,MAAO,IACArkB,KACA+hE,GAAemB,GACrB,GACH,EACJ95C,SAAA,CACJkE,EAAS,6CAA6C,KAAGlJ,EAAQ69C,UAAUttD,OAAO,IA9GzE,GA8G0F,OACrG2zC,eAAA,OAAKxtD,UAAU,yBAAwBsuB,SAAA,CACnC9uB,cAAA,MAAA8uB,SAAKkE,EAAS,wDACdhzB,cAACqpE,eAAW,CAACpB,MAAOA,EAAOx/C,KAAM,IAAK4/C,SAAUA,UAGxDroE,cAAA,OAAKQ,UAAU,8BAA6BsuB,SACxC9uB,cAACspE,kBAAc,CACX3sE,MAAO,IACP4sE,cAAe,GACfC,SAxHO,GAyHPC,SAAU,EACVC,gBAAiB,MACjB5/C,QAASA,EAAQ69C,UACjBgC,gBAAiBhC,GAAaW,GAAW5iE,IAAG,IAAUA,KAAQ+hE,GAAeE,OAC7EiC,kBAAmBC,IAAc,IAADC,EAC5BxB,GAAW5iE,IAAG,IAAUA,EAAKgjE,iBAAkBmB,EAAU/wD,OACxC,QAAjBgxD,EAAA1B,EAAUxnC,eAAO,IAAAkpC,GAAjBA,EAAmBjD,SAASgD,EAAU,EACzC/6C,SAGD9uB,cAACmmE,GAAkB,CAAClU,IAAKmW,EACrBja,SAAUrkC,EAAQ69C,UAAUttD,QAAU,EACtCgsD,eAAgBsC,EAChBrC,SAAUxtD,IACNwvD,GAAW5iE,IAAQ,IAADqkE,EACd,MAAMnB,EAAgBljE,EAAIiiE,UAAU7+C,QAAOtV,GAASA,EAAMsF,KAAOA,IAC3DkxD,EAA8B,QAAxBD,EAAgB,OAAbnB,QAAa,IAAbA,OAAa,EAAbA,EAAgB,GAAG9vD,UAAE,IAAAixD,KAAK,EACK,IAADE,EAAzCD,EAAS,GAAKlgD,EAAQ69C,UAAUqC,KACf,QAAjBC,EAAA7B,EAAUxnC,eAAO,IAAAqpC,GAAjBA,EAAmBpD,SAAS/8C,EAAQ69C,UAAUqC,KAGlD,MAAO,IACAvC,GAAemB,GAClBF,iBAAkBsB,EACrB,GACH,UAKhB,ECnPGE,GAAqB78C,KAAOukC,GAA8C;;MAEjF5sC,IAAA,IAAC,QAAEmlD,GAASnlD,EAAA,OAAKmlD,EAAU,8CAAgD,6CAA6C;;;;;;;MAOxHh1C,IAA6B,IAA5B,UAAE49B,EAAS,QAAEoX,GAASh1C,EACrB,OAAO49B,EACD,mFAEIoX,EAAU,+CAAiD,mBAE/D,EAAE;;;;EAOHC,GAAyB/8C,aAAO4xC,GAAeC,UAAU;;;;;;;;;;EAWzDmL,GAAsBh9C,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA+BhC0Y,GAA4Bj9C,aAAO4xC,GAAeC,UAAU;;;;;;;;;EAU5DqL,GAAyBl9C,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;gBC5CzC,MAAM4Y,GAAkB9X,sBAAgD,CAAA1tC,EAM5EitC,KAAS,IANoE,UAC5EzxD,EAAS,aACT89D,EAAY,SACZmM,EAAQ,SACRC,EAAQ,SACRlb,GACHxqC,EACG,MAAMgO,EAAWQ,MAEbnd,EAAGs0D,EACHr0D,EAAGs0D,EACHjrE,MAAOkrE,EACPluE,MAAOmuE,GACPL,GACGpuE,EAAO6gE,GAAY1P,oBAAS,KAC/B,MAAMud,EAASzM,EAAaqM,GACtBK,EAAS1M,EAAasM,GACtBK,EAAa3M,EAAauM,GAC1BK,EAAa5M,EAAawM,GAEhC,MAAO,CACHz0D,EAAS,OAAN00D,QAAM,IAANA,IAAU,EACbz0D,EAAS,OAAN00D,QAAM,IAANA,IAAU,EACbruE,MAAiB,OAAVuuE,QAAU,IAAVA,IAAc,EACrBvrE,MAAOsrE,EACV,KAEC,EACF50D,EAAC,EACDC,EAAC,MACD3W,EAAK,MACLhD,GACAN,EACE8uE,EAAaT,EAASI,GA8B5B,OA5BA1nC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAmsB,EAASnzD,EACb,GACD,KAEI,KACHgnC,GAAW,CAAK,CACnB,GAGF,CAAChnC,IAEJi2D,8BAAoBL,GAAK,MACrBiL,SAAUkO,IACN,MAAMC,EAAUzqE,OAAO4a,KAAK4vD,GAE5B,IAAK,MAAM9pE,KAAO+pE,EACd,GAAID,EAAU9pE,KAA+BjF,EAAMiF,GAE/C,YADA47D,GAASx3D,IAAG,IAAUA,KAAQ0lE,KAGtC,MAIDpd,eAAA,OAAKxtD,UAAWA,EAAUsuB,SAAA,CAC7B9uB,cAAA,MAAA8uB,SAAKkE,EAAS,4CACdg7B,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CAC1B9uB,cAACsrE,KAAW,CAACC,KAAK,KACdrE,OAAQ,CACJsE,MAAO,CACHpV,gBAAiB,qBACjBz5D,MAAO,IACPC,OAAQ,IACR6uE,QAAS,SACT5F,SAAU,YAEd6F,MAAO,CACHtV,gBAAiB,oBACjBuV,OAAQ,KAGhBC,KAAM,EAAGC,MAAO,EAChBC,KAAM,EAAGC,MAAO,EAChB11D,EAAI,OAADA,QAAC,IAADA,IAAK,EACRC,EAAI,OAADA,QAAC,IAADA,IAAK,EACRk5C,SAAUr6B,IAAA,IAAC,EAAE9e,EAAC,EAAEC,GAAG6e,EAAA,OAAK+nC,GAASx3D,IAAG,IAAUA,EAAK2Q,IAAGC,OAAK,IAC/D03C,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CACzBkE,EAAS,0CAA0C,KAAEhzB,cAACgnE,KAAW,CAC9Dv+C,KAAK,QACLpsB,MAAOga,EACPm5C,SAAUnzD,GAAS6gE,GAASx3D,IAAG,IAAUA,EAAK2Q,EAAoB,kBAAVha,EAAqBA,EAAQ+vB,SAAc,OAAL/vB,QAAK,IAALA,IAAS,cAG/G2xD,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CACzBkE,EAAS,0CAA0C,KAAEhzB,cAACgnE,KAAW,CAC9Dv+C,KAAK,QACLpsB,MAAOia,EACPk5C,SAAUnzD,GAAS6gE,GAASx3D,IAAG,IAAUA,EAAK4Q,EAAoB,kBAAVja,EAAqBA,EAAQ+vB,SAAc,OAAL/vB,QAAK,IAALA,IAAS,cAG/G2xD,eAAA,OAAKxtD,UAAU,gBAAesuB,SAAA,CACzBq8C,EAAW,KAAEnrE,cAAC6+D,GAAa,CACxBxiE,MAAOM,EACPoqB,IAAK,EACLC,IAAK,GACLwoC,SAAUnzD,IACe,kBAAVA,GACP6gE,GAASx3D,IAAG,IAAUA,EAAK/I,MAAON,KACtC,UAKhB2D,cAAA,MAAA8uB,SAAKkE,EAAS,yCACdhzB,cAACgsE,KAAa,CACVC,OAAQ7yD,GACRzZ,MAAOA,EACP6nE,iBAAkB7nE,GAASu9D,GAASx3D,IAAG,IAAUA,EAAK/F,MAAOA,EAAMksB,YAErE,ICnIGqgD,GAAuBxZ,sBAA0D,CAAA1tC,EAK3FitC,KAAS,IALmF,OAC3FlgC,EAAM,MACN11B,EAAK,QACL+yD,EAAO,SACP5kC,GACHxF,EACG,MAAMmnD,EAAe1pC,iBAAuB,OACrC/W,EAAOpB,GAAYkjC,mBAAS,GAMnC,OAJA8E,8BAAoBL,GAAK,MACrBvmC,MAAOA,KAAA,IAAA0gD,EAAA,OAA0B,QAA1BA,EAAMD,EAAavrC,eAAO,IAAAwrC,OAAA,EAApBA,EAAsB1gD,OAAO,MAGvC1rB,cAACsqE,GAAyB,CAACrY,IAAKka,KAC/BjiD,GAAmB,CACnBG,iBAAiB,EACjBD,aAAchnB,EAAoBiX,OAClCiQ,WACAC,UAAWA,KACHmB,GAAS,GAAG0jC,EAAQhsD,EAAoBsoB,GAAO,EAEvDlB,SAAUA,KACE,OAARA,QAAQ,IAARA,MAAY,IAElBsE,SAED1rB,EAAoBmQ,KAAI,CAACC,EAAOyW,KAC7B,MAAM,IAAE3oB,EAAG,MAAEC,EAAK,MAAEjF,GAAUkX,EAE9B,OAAOxT,cAACuqE,GAAsB,CAC1B/pE,UAAWusB,GACP,cACA1wB,EAAMmF,SAAWF,GAAOywB,EAAS,cAAgB,GACjDrG,IAAUzB,EAAQ,sBAAwB,IAE9CmlC,QAASl1C,IACLA,EAAEmQ,kBACF+kC,EAAQ57C,EAAM,EAChBsb,SAIF9uB,cAAA,OACIQ,UAAU,iBACVE,IAAK,cAA6Ba,IAClCd,IAAKnE,KAhBuBgF,EAmBX,KAEL,I,OCjCzB,MAAM+qE,GAAkB3Z,sBAAW,CAAA1tC,EAMtBitC,KAA2C,IANpB,UACvCqa,EAAS,YACTC,EAAW,aACXjO,EAAY,0BACZh9B,EACAkuB,SAAUgd,GACIxnD,EACd,MAAMgO,EAAWQ,KACXi5C,EAAgBhqC,iBAAgC,OAC/C/W,EAAOpB,GAAYkjC,oBAAU,IAC7Bkf,EAA2BC,GAAgCnf,oBAAS,IACpE3uD,EAAM+tE,GAAWpf,mBAAS+e,IAC1BlwE,EAAO6gE,GAAY1P,mBAAS8Q,IAC5BuO,EAAmBC,GChDJC,MACtB,MAAOvyC,EAAKwyC,GAAUxf,mBAAS,GAK/B,MAAO,CAJS9qB,uBAAY,KACxBsqC,GAAOtnE,GAAOA,EAAM,GAAE,GACvB,IAEc80B,EAAI,ED0C8BuyC,GAC7Cvd,EAAW/sB,iBAAOzC,KAASwsC,EAAqB,MAAM5rC,QACtDqsC,EAA2BvqC,uBAAY,CAAC5Y,EAAS3nB,KACnD+6D,GAASx3D,IAAG,IAAUA,EAAKvD,gBAAeC,cAAeynB,GAAiBC,OAC1E+iD,GAAmB,GACpB,CAACA,IACEK,EAAoBlsC,IAAW3P,GAASA,EAAMoQ,QAAQN,oBAEtDr5B,EAAWy+C,mBAAQ,KAAM4mB,ONFG/wE,EMEmB42B,ENFoBpyB,OAAOC,OAAOkI,GAAiBwK,KAAI8hB,IAAA,IAAC,MAAEh5B,EAAK,SAAEgE,GAAUg1B,EAAA,MAAM,CACtI/4B,MAAOF,EAAWiE,GAClBhE,QACH,IAHqCD,KME4B,GAAE,CAAC42B,IAEjEoQ,qBAAU,KACwB,IAA1B0pC,IACAF,EAAQ,UACRpd,EAAS,SAAUnzD,GACvB,GAED,CAACywE,IAEJ,MAAMM,EAAiB3qC,iBAA2B,MAC5C4qC,EAAkB5qC,iBAA2B,MAEnD6vB,8BAAoBL,GAAK,MACrBiL,SAAUkO,IAAc,IAADkC,EAAAC,EACnBrQ,GAASsQ,IAAY,IAAUA,KAAiBpC,MAEhD,MAAM,UACFvpE,EAAS,UAAED,EAAS,YAAEI,EAAW,YAAEgB,EAAW,WAC9CH,EAAU,YAAEH,EAAW,cAAEE,EAAa,cAAED,GACxCyoE,EACkB,QAAtBkC,EAAAF,EAAexsC,eAAO,IAAA0sC,GAAtBA,EAAwBpQ,SAAS,CAC7B7mD,EAAGzT,EAAe0T,EAAG3T,EACrBhG,MAAOkG,EAAYlD,MAAO+C,IAEP,QAAvB6qE,EAAAF,EAAgBzsC,eAAO,IAAA2sC,GAAvBA,EAAyBrQ,SAAS,CAC9B7mD,EAAGrU,EAAasU,EAAGtT,EACnBrG,MAAOiF,EAAWjC,MAAOkC,GAC3B,MAGV,MAAM,UACFJ,EAAS,kBACTkU,EAAiB,WACjB1U,EAAU,UACVC,EAAS,YACTF,EAAW,cAAEoB,EAAa,cAAED,EAAa,QACzChB,EAAO,KACPY,GACA1F,GACE,qBAAEoV,EAAoB,qBAAEG,GAAkC,OAAT06D,QAAS,IAATA,IAAa,CAAC,EAC/DmB,EAAe,CACjB/2D,WAAYjF,EACZksD,gBAAiB/rD,GAEf87D,EAAyB,WAAT7uE,EAChB8uE,EAA6B,eAAT9uE,EACpB+uE,EAAyB,oCACzBC,EAAiBA,KACnBjB,EAAQ,QACK,SAAT/tE,GAAiB2wD,EAAS,OAAQnzD,EAAM,EAE1CyxE,EAAuBA,KAAO,IAADC,EAC/B,MAAMhtE,EAAc1E,EAAMmF,OACY,QADNusE,EAC1B3sE,EAAmB/E,EAAMmF,eAAO,IAAAusE,OAAA,EAAhCA,EAAkC1xE,MAClC,CAAC,EACPuwE,EAAQ,cACR1P,GAASx3D,IAAG,IAAUA,KAAQ3E,MAC9ByuD,EAAS,aAAc,IAAKnzD,KAAU0E,GAAc,EAElDitE,EAAmBA,KACrBpB,EAAQ,UACK,WAAT/tE,GAAmB2wD,EAAS,SAAUnzD,EAAM,EAEpD,OAAO2D,cAAA,OAAKQ,UAAU,2CAA0CsuB,SAC5Dk/B,eAAA,QAAMxtD,UAAU,oCAAmCsuB,SAAA,CAC/C9uB,cAAA,QAAMQ,UAAU,wBAAuBsuB,SAAEkE,EAAS,4BAClDg7B,eAAA,QAAMxtD,UAAU,6BAA4BsuB,SAAA,CACxCk/B,eAAA,OACIl1C,GAAI80D,EACJptE,UAAU,+EACN0pB,GAAmB,CACnBI,WACAF,aAAc,EACdK,WAAYvQ,IACR,GAAc,IAAVwR,IAA0B,cAAVxR,EAAE5Y,KAAiC,UAAV4Y,EAAE5Y,KAA6B,OAAV4Y,EAAE5Y,KAShE,OARA4Y,EAAE6Q,iBACFT,EAAS,GACTqiD,GAA6B,GAE7BrpC,YAAW,KAAO,IAAD2qC,EACC,IAAVviD,IAAkC,QAArBuiD,EAAAxB,EAAc7rC,eAAO,IAAAqtC,GAArBA,EAAuBviD,QAAO,GAChD,MAEI,CACX,EAEJnB,YACkB,IAAVmB,GAAamiD,IACH,IAAVniD,GAAaoiD,IACH,IAAVpiD,GAAasiD,GACrB,IACFl/C,SAAA,CAEFk/B,eAAA,SACIxtD,UAAWusB,GACP,oBACS,SAATluB,GAAmB,4BACT,IAAV6sB,GAAe,qBAEnB0jC,QAASA,IAAMye,IAAiB/+C,SAAA,CAEhCk/B,eAAA,QAAMxtD,UAAW,cAAsB,SAAT3B,EAAkB,oBAAsB,IAAKiwB,SAAA,CACvE9uB,cAAA,SAAO0qB,UAAW,EAAG7rB,KAAK,QAAQ2B,UAAU,kBAAkBnE,MAAM,SACpE2D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,kBAAiBsuB,SAC5BkE,EAAS,yCAGlBhzB,cAAA,QAAMQ,UAAU,4BAChBR,cAAA,SACIQ,UAAWusB,GACP,oBACA4gD,GAAqB,4BACX,IAAVjiD,GAAe,qBAEnB0jC,QAASA,IAAM0e,IAAuBh/C,SAEtC9uB,cAACkxD,KAAO,CACJv1B,QAAS+wC,EACTwB,gBAAiBvB,EACjB1Z,QAAS,CAAC,QAAS,SACnBG,UAAU,aACVrC,iBAAiB,4BACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5C9uB,cAACksE,GAAoB,CAACja,IAAKwa,EACvB16C,OAAQ47C,EACRtxE,MAAOA,EACPmuB,SAAUA,KAAO,IAADyZ,EACZ0oC,GAA6B,GACkB,QAA/C1oC,EAAAxkB,SAAS2kB,eAAewpC,UAAuB,IAAA3pC,GAA/CA,EAAiDvY,OAAO,EAE5D0jC,QAASj6B,IAAc,IAADg5C,EAAA,IAAZ,IAAE7sE,GAAK6zB,EACb,MAAMp0B,EAAcO,EACS,QADN6sE,EACjB/sE,EAAmBE,UAAI,IAAA6sE,OAAA,EAAvBA,EAAyB9xE,MACzB,CAAC,EACPuwE,EAAQ,cACR1P,GAASx3D,IAAG,IAAUA,KAAQ3E,MAC9ByuD,EAAS,aAAc,IAAKnzD,KAAU0E,GAAc,MAGzD+tB,SAEPk/B,eAAA,QAAMxtD,UAAU,0BAAyBsuB,SAAA,CACrCk/B,eAAA,QAAMxtD,UAAW,cAAamtE,EAAoB,oBAAsB,IAAK7+C,SAAA,CACzE9uB,cAAA,SAAO0qB,UAAW,EAAG7rB,KAAK,QAAQ2B,UAAU,kBAAkBnE,MAAM,eACpE2D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,kBAAiBsuB,SAC5BkE,EAAS,mDAK1BhzB,cAAA,QAAMQ,UAAU,4BAChBR,cAAA,SACIQ,UAAWusB,GACP,oBACA2gD,GAAiB,4BACP,IAAVhiD,GAAe,qBAEnB0jC,QAASA,IAAM4e,IAAmBl/C,SAElCk/B,eAAA,QAAAl/B,SAAA,CACIk/B,eAAA,QAAMxtD,UAAW,cAAaktE,EAAgB,oBAAsB,IAAK5+C,SAAA,CACrE9uB,cAAA,SAAO0qB,UAAW,EAAG7rB,KAAK,QAAQ2B,UAAU,kBAAkBnE,MAAM,WACpE2D,cAAA,QAAMQ,UAAU,uBAEpBR,cAAA,QAAMQ,UAAU,yCAAwCsuB,SACnDkE,EAAS,gDAK1Bg7B,eAAA,OAAKxtD,UAAU,eAAcsuB,SAAA,CACzB9uB,cAACkxD,KAAO,CACJ+B,QAAS,CAAC,SACVlC,iBAAiB,mDACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAAA,OAAKxtD,UAAW,sBAAsBsuB,SAAA,CAClCk/B,eAAA,OAAKxtD,UAAU,oBAAmBsuB,SAAA,CAC9B9uB,cAAA,MAAA8uB,SACKkE,EAAS,uCAEdhzB,cAACgsE,KAAa,CACVC,OAAQ7yD,GACRzZ,MAAO8B,EACP+lE,iBAAkB7nE,IACditE,EAAQ,UACR1P,GAASx3D,IAAG,IAAUA,EAAKjE,UAAW9B,EAAMksB,QAC5CghD,GAAmB,OAI/B7sE,cAAA,SACAguD,eAAA,OAAKxtD,UAAU,oBAAmBsuB,SAAA,CAC9B9uB,cAAA,MAAA8uB,SACKkE,EAAS,uCAEdhzB,cAACgsE,KAAa,CACVC,OAAQ7yD,GACRzZ,MAAOgW,EACP6xD,iBAAkB7nE,IACditE,EAAQ,UACR1P,GAASx3D,IAAG,IAAUA,EAAKiQ,kBAAmBhW,EAAMksB,QACpDghD,GAAmB,YAMvCzZ,UAAU,SAAQtkC,SAElBk/B,eAACkc,GAAkB,CAACnX,UAAWma,EAAmB1sE,UAAU,wCAAuCsuB,SAAA,CAC9FkE,EAAS,gCAAgC,IAAChzB,cAACouE,KAAiB,QAvCxD,gBA0CZ9sC,GAA6BthC,cAACkxD,KAAO,CAClC+B,QAAS,CAAC,SACVlC,iBAAiB,mDACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAAA,OAAKxtD,UAAW,sBAAsBsuB,SAAA,CAClC9uB,cAAA,MAAIQ,UAAU,sBAAqBsuB,SAC/B9uB,cAACkzD,KAAQ,CAAC72D,MAAO,aAAc82D,QAASjyD,EAAWsuD,SAAUA,KACzDod,EAAQ,UACR1P,GAASx3D,IAAG,IAAUA,EAAKxE,WAAYwE,EAAIxE,cAC3C2rE,GAAmB,EACrB/9C,SACGkE,EAAS,4CAGjB9xB,GAAalB,cAACwqE,GAAe,CAACvY,IAAKmb,EAChC5sE,UAAU,sBACViqE,SAAU,CACN9qE,MAAO,cACPhD,MAAO,aACP0Z,EAAG,gBACHC,EAAG,iBAEPo0D,SAAU,CACN7nE,WAAYmwB,EAAS,uCAEzBsrC,aAAcjiE,EACdmzD,SAAUn6B,IAA6B,IAA5B,MAAE11B,EAAK,MAAEhD,EAAK,EAAE0Z,EAAC,EAAEC,GAAG+e,EAC7B6nC,GAASx3D,IAAG,IACLA,EACH7C,WAAYlG,EACZ+F,YAAa/C,EACbiD,cAAeyT,EACf1T,cAAe2T,MAEnBu2D,GAAmB,SAKnCzZ,UAAU,SAAQtkC,SAElBk/B,eAACkc,GAAkB,CACfnX,UAAWma,EACX/C,QAASuD,GAAiBxsE,EAC1BV,UAAU,yCAAwCsuB,SAAA,CAEjDkE,EAAS,iCAAiC,IAAChzB,cAACouE,KAAiB,QA9C3B,iBAiD3CpuE,cAACkxD,KAAO,CACJ+B,QAAS,CAAC,SACVlC,iBAAiB,mDACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAAA,OAAKxtD,UAAW,sBAAsBsuB,SAAA,CAClC9uB,cAAA,MAAIQ,UAAU,sBAAqBsuB,SAC/B9uB,cAACkzD,KAAQ,CAAC72D,MAAO,WAAY82D,QAASlyD,EAAYuuD,SAAUA,KACxDod,EAAQ,UACR1P,GAASx3D,IAAG,IAAUA,EAAKzE,YAAayE,EAAIzE,eAC5C4rE,GAAmB,EACrB/9C,SACGkE,EAAS,6CAGjB/xB,GAAcjB,cAACwqE,GAAe,CAACvY,IAAKob,EACjC7sE,UAAU,oBACViqE,SAAU,CACN9qE,MAAO,YACPhD,MAAO,YACP0Z,EAAG,cACHC,EAAG,eAEPo0D,SAAU,CACN9oE,UAAWoxB,EAAS,4CAExBsrC,aAAcjiE,EACdmzD,SAAUr5B,IAA6B,IAA5B,MAAEx2B,EAAK,MAAEhD,EAAK,EAAE0Z,EAAC,EAAEC,GAAG6f,EAC7B+mC,GAASx3D,IAAG,IACLA,EACH9D,UAAWjF,EACXkF,UAAWlC,EACXqC,YAAaqU,EACbrT,YAAasT,MAEjBu2D,GAAmB,SAKnCzZ,UAAU,SAAQtkC,SAElBk/B,eAACkc,GAAkB,CACfnX,UAAWma,EACX/C,QAASuD,GAAiBzsE,EAC1BT,UAAU,0CAAyCsuB,SAAA,CAElDkE,EAAS,kCAAkC,IAAChzB,cAACouE,KAAiB,QA9C1D,kBAiDZ9sC,GAA6BthC,cAACkxD,KAAO,CAClC+B,QAAS,CAAC,SACVlC,iBAAiB,mDACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAAA,OAAKxtD,UAAW,sBAAsBsuB,SAAA,CAClC9uB,cAAA,MAAIQ,UAAU,sBAAqBsuB,SAC/B9uB,cAACkzD,KAAQ,CAAC72D,MAAO,eAAgB82D,QAASnyD,EAAawuD,SAAUA,KAC7Dod,EAAQ,UACR1P,GAASx3D,IAAG,IAAUA,EAAK1E,aAAc0E,EAAI1E,gBAC7C6rE,GAAmB,EACrB/9C,SACGkE,EAAS,8CAGjBhyB,GAAehB,cAAA,OAAKQ,UAAU,wBAAuBsuB,SAClD9uB,cAAC6nE,GAAkB,CACfI,MAAO9lE,EACP2nB,QAAS1nB,EACT+lE,iBAAkB8E,WAKlC7Z,UAAU,SAAQtkC,SAElBk/B,eAACkc,GAAkB,CACfnX,UAAWma,EACX/C,QAASuD,GAAiB1sE,EAC1BR,UAAU,2CAA0CsuB,SAAA,CAEnDkE,EAAS,mCAAmC,IAAChzB,cAACouE,KAAiB,QA9B7B,mBAiC1C9sC,GAA6BthC,cAACkxD,KAAO,CAClC+B,QAAS,CAAC,SACVlC,iBAAiB,8CACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAACoc,GAAsB,CAAChb,QAASl1C,GAAKA,EAAEmQ,kBAAkByE,SAAA,CACtD9uB,cAAA,OAAKQ,UAAU,QAAOsuB,SACjBkE,EAAS,oCAEb7uB,EAAYoP,KAAIgjB,IAA4B,IAA3B,IAAEj1B,EAAG,aAAEiC,GAAcgzB,EACnC,OAAOv2B,cAACqqE,GAAmB,CACvB7pE,UAAW,CACP,iBACAnE,EAAM8E,UAAYG,EAAM,cAAgB,GACxCiC,EAAe,GAAK,YACtBsO,KAAK,KACPu9C,QAASA,KACL8N,GAASx3D,IAAG,IAAUA,EAAKvE,QAASG,MACpCurE,GAAmB,EACrB/9C,SAEDvrB,EACKvD,cAAA,OACEwoB,MAAOjlB,EAAekqE,EAAe,CAAC,EACtCjtE,UAAU,gBACVE,IAAK,sCAAqD6C,QAC1D9C,IAAKa,IAEP0sD,eAAAC,WAAA,CAAAn/B,SAAA,CACE9uB,cAACC,IAAmB,IAAG,IAAE+yB,EAAS,iDAnBb1xB,EAqBX,SAIlC8xD,UAAU,aAAYtkC,SAEtB9uB,cAACkqE,GAAkB,CACfnX,UAAWma,EACX/C,QAASuD,GAAoC,kBAAZvsE,GAAoC,SAAZA,EACzDX,UAAU,0CAAyCsuB,SAElDkE,EAAS,qCAzCyB,kBA4C3ChzB,cAACkxD,KAAO,CACJ+B,QAAS,CAAC,SACVlC,iBAAiB,2CACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5C9uB,cAACi/D,GAAeC,UAAS,CAAApwC,SACpBhnB,EAASyL,KAAI8oB,IAAkC,IAA/BhgC,MAAOgyE,EAAS,MAAE/xE,GAAO+/B,EACtC,OAAOr8B,cAACi/D,GAAeE,OAAM,CACzB3+D,UAAWuB,IAASssE,EAAY,cAAgB,GAChDjf,QAASA,KACL8N,GAASx3D,IAAG,IAAUA,EAAK3D,KAAMssE,MACjCxB,GAAmB,EACrB/9C,SAEDxyB,GAP8B+xE,EAQX,QAIpCjb,UAAU,aAAYtkC,SAEtB9uB,cAACkqE,GAAkB,CAACnX,UAAWma,EAAmB1sE,UAAU,uCAAsCsuB,SAC7FkE,EAAS,kCArBL,yBA2BvB,IE5dGs7C,GAAiBxc,IAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECO3Byc,GAAmBlhD,aAAOolC,GAAW;GACxC6b;EAMUE,GAAaxpD,IAEP,IAFQ,gBACvBypD,GACSzpD,EACT,MAAM,QACFyc,GACAT,MACE,0BAAEM,GAA8BG,EAChC3vB,EAAYy0C,mBAAQ,IAAMye,KAC3Bl8C,QAAOtV,GACG8tB,GAA+C,WAAlB9tB,EAAMhC,WAE9C,CAAC8vB,KAGC,MACF7kC,EAAK,QACL2jC,GACAD,GAAQw0B,uBAAWx/B,IAAA,IAAC,KACpBzb,EAAI,QACJ0mB,GACHjL,EAAA,MAAM,CACH14B,MAAOid,EAAKjd,MACZ2jC,UACH,KACKsuC,EAAchsC,uBAAaisC,IAC7BvuC,GAAQmC,IACJ,MAAM,YACFlrB,EAAW,WACXjY,EAAU,UACVwW,EAAS,OACTZ,GACAutB,EACEqsC,EAAY,GAAGD,IACfE,EAAqB,UAAdD,GAAuC,SAAdA,EAChC9gD,EAAqB,QAAX9Y,EACV,CACE,aAAc,aACd,YAAa,aAEf9D,GACA49D,EAA+B,UAAdF,EACjB,CAAC9gD,EAAQ,eACK,SAAd8gD,EAAuB,CAAC9gD,EAAQ,cAAgBzW,EAGtD,OAFIw3D,GAAMJ,EAAgBK,GAEnB,IACAvsC,EACH9lC,MAAOmyE,EACPxvE,WAA0B,SAAdwvE,GAA+BxvE,EAC3C4X,OAAsB,SAAd43D,EACRh5D,UAAWi5D,EACL,GAAGD,IAAYz2C,cACfviB,EACNyB,YAAay3D,EAChB,GACH,GACH,CAAC1uC,EAASquC,IAEb,OAAOzuE,cAACuuE,GAAgB,CAAC/tE,UAAU,cAAcnE,MAAOI,EAAO+yD,SAAUkf,EAAavc,WAAYrgD,GAAa,ECrE7Gi9D,GAA+B1hD,KAAOukC,GAAG;MACzCC;EASOmd,GAAgBhqD,IAMP,IANQ,SAC1BwqC,EACAnzD,MAAO61D,EAAW,WAClBC,EAAU,SACVrjC,EAAQ,UACRtuB,GACYwkB,EACZ,MAAO0G,EAAOpB,GAAYkjC,oBAAU,GAC9BpjC,EAAe+nC,EAAW93C,OAEhC,OAAO2zC,eAAC+gB,GAA4B,CAChCvuE,UAAW,CAAC,yDAA0DA,GAAWqR,KAAK,KAAKid,SAAA,CAE1FA,GAAY9uB,cAAA,SAAOQ,UAAU,yCAAwCsuB,SAAEA,IACxE9uB,cAAA,OACIQ,UAAU,gCACN0pB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAMuW,EAASqxB,EAAWzmC,GAC1B,GAAIoV,EAAQ,CACR,MAAM0xB,IAAY52C,MAAMC,QAAQq2C,IAAeA,EAAYl4C,SAAS,GAAG8mB,EAAOzkC,SAC9EmzD,EAASgD,EACHN,EAAYppC,QAAO0kD,GAAgB,GAAG1sC,EAAOzkC,UAAYmxE,IACzD,IAAItb,EAAa,GAAGpxB,EAAOzkC,SACrC,KAENyyB,SAEDqjC,EAAW5+C,KAAI,CAACC,EAAOyW,KACpB,MAAM,MAAE3tB,EAAK,MAAED,EAAK,MAAE8rB,GAAU3U,EAC1Bg/C,IAAY52C,MAAMC,QAAQq2C,IAAeA,EAAYl4C,SAAS,GAAG3d,KAEvE,OAAO2xD,eAAA,YACC7lC,EACJ3nB,UAAW,CACP,2BACAgyD,EAAY,mCAAqC,GACjD9mC,IAAUzB,EAAQ,yBAA2B,IAC/CpY,KAAK,KACPu9C,QAASA,KACLI,EAASgD,EACHN,EAAYppC,QAAO0kD,GAAgB,GAAGnxE,MAAYmxE,IAClD,IAAItb,EAAa,GAAG71D,KAAS,EACrCyyB,SAAA,CAEF9uB,cAAA,QAAMQ,UAAW,qBAAoBgyD,EAAY,2BAA6B,IAAK1jC,SAC/E9uB,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOsuB,SAAExyB,MAhBVD,EAiBX,QAGW,EC7D7B4yE,GAAqB5hD,aAAO0qC,GAAa;;;;;;;;;;;;;;;;EAgClCmX,GAAuBxc,sBAA0D,CAAA1tC,EAO3FitC,KAAS,IAPmF,gBAC3FmE,EAAe,SACftnC,EAAQ,gBACRupC,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACH1zC,EACG,MAAMgO,EAAWQ,MACX,WACF9c,EAAU,eAAEI,EAAc,eAAExX,EAAc,eAAEqX,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FxX,EAAU,QACVC,EAAO,WACPmhC,EAAU,QACVJ,GACAD,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,WACFhD,EAAU,eAAEI,EAAc,eAAExX,EAAc,eAAEqX,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FxX,EAAU,QACVC,GACH,WACDmhC,EAAU,QACVJ,GACHjL,EAAA,MAAM,CACHze,aAAYI,iBAAgBxX,iBAAgBqX,iBAAgBE,mBAAkBD,gBAC9ExX,aACAC,UACAmhC,aACAJ,UACH,KACK+uC,EAAkB1sC,iBAAwB,MAE1C2sC,EAAyB7oB,mBAAQ,IAAM/lB,EAAW,qBAAqB,CAACA,IACxE6uC,EAAmB9oB,mBAAQ,IAAM/lB,EAAW,eAAe,CAACA,IAC5D8uC,EAAuB/oB,mBAAQ,IAAM/lB,EAAW,mBAAmB,CAACA,IACpE+uC,EAAsB7sC,uBAAatG,GAAoBgE,GAAQmC,IAC1D,IACAA,EACH3rB,cAAewlB,OAEnB,CAACgE,IACCovC,EAAuB9sC,uBAAY,CAACy5B,EAAmC/C,EAAkCqW,KAC/F,OAAZ/W,QAAY,IAAZA,KAAeyD,EAAU/C,GACrB+C,GAAU/7B,GACV6S,IAAI,IACGA,EACHn8B,eAAgBqlD,KAEpBsT,EACH,GACF,CAAC/W,EAAct4B,IAkBlB,OAhBAkyB,8BAAoBL,GAAK,MACrB/+B,UAAWA,KAAA,IAAAw8C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgBvuC,eAAO,IAAA+uC,OAAA,EAAvBA,EAAyBz8C,mBAAW,IAAAw8C,IAAS,EAC9DzT,SAAUA,KAAA,IAAA2T,EAAAC,EAAA,OAAyC,QAAzCD,EAA6B,QAA7BC,EAAMV,EAAgBvuC,eAAO,IAAAivC,OAAA,EAAvBA,EAAyB5T,kBAAU,IAAA2T,IAAS,EAC5D1S,SAAU7nC,IAAuE,IAAtE,WAAE3e,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,GAAkBwe,EAER,IAADy6C,EAIJC,EALjC,YAArBl5D,EAC8B,kBAAnBF,GAA+BG,IACf,QAAvBg5D,EAAAX,EAAgBvuC,eAAO,IAAAkvC,GAAvBA,EAAyB5T,YAAY,UAAWvlD,EAAgBG,IAG1C,kBAAfJ,GAA2BI,IACX,QAAvBi5D,EAAAZ,EAAgBvuC,eAAO,IAAAmvC,GAAvBA,EAAyB7T,YAAY,SAAUxlD,EAAYI,GAEnE,MAID9W,cAACivE,GAAkB,CACtBhd,IAAKkd,EACL5rC,MAAOvQ,EAAS,gCAChBojC,gBAAiBA,EACjB8B,kBAAmBrhD,EACnBshD,sBAAuBxhD,EACvByhD,sBAAuB1hD,EACvB6hD,gBAAiBzhD,EACjBuhD,gBAAiBA,EACjBJ,SAAUrhD,EACV6hD,eAAgBA,CAAC55D,EAAMy1B,KACnB86C,EAAuBvwE,GACV,YAATA,EAAoBywE,EAAqBh7C,GACxC+6C,EAAiB/6C,EAAK,EAE/BokC,aAAc8W,EACd7W,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkB0W,EAClB3W,kBAAmBnwC,IACfmX,KAAaliB,MAAM,CACfoiB,YAAa9M,EAAS,8BAA8BvK,GACpDoX,QAAS7M,EAAS,2BACpB,EAENz0B,MAAOY,EAAuBC,EAAYC,EAASC,GAAgBd,gBACnE85D,cAAe,KAAKxpC,SAEnBA,GACgB,I,qBCrHzB,MAAMkhD,GAAyB3iD,KAAO+jC,IAAI;;EAGpC6e,GAA8B5iD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuFxCse,GAAgC7iD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA0FnCue,GAAezd,sBAA2C,CAAA1tC,EAOpEitC,KAAS,IAADme,EAAA,IAP6D,gBACpE/X,EAAe,aACfiG,EAAY,UACZ3F,EAAS,SACTnJ,EAAQ,eACRgJ,EAAc,aACdE,GACH1zC,EACG,MAAMgO,EAAWQ,MACX,WACF9c,EAAU,eACVC,EAAc,iBACdE,EAAgB,eAChBvX,EAAc,WACdkhC,EAAU,cACV/pB,EAAa,WACbrX,EAAU,QACVghC,GACAD,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,WACFhD,EAAU,eACVC,EAAc,iBACdE,EAAgB,eAChBvX,EAAc,cACdmX,EAAa,WACbrX,GACH,QACDghC,EAAO,WACPI,GACHrL,EAAA,MAAM,CACHze,aACAC,iBACAE,mBACAvX,iBACAkhC,aACA/pB,gBACArX,aACAghC,UACH,MACMiwC,EAAwBC,GAA6B9iB,oBAAS,IAC9D+iB,EAAuBC,GAA4BhjB,oBAAS,IAC5DnuD,EAASoxE,GAAcjjB,oBAAS,SAAYjwD,OAA4B+gE,MACzEoS,EAAqBjuC,iBAAgC,MAErDkuC,EAAuBpqB,mBAAQ,IAAM/lB,EAAW,mBAAmB,CAACA,IACpEowC,EAAsBluC,uBAAaxoB,GAAWkmB,GAAQmC,IAGjD,IAAKA,EAAa9rB,cAFPyD,EAAE4mB,OAAOqyB,aAG3B,CAAC/yB,IAELgD,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAmsB,EAASnwD,EACb,GACD,KAEI,KACHgkC,GAAW,CAAK,CACnB,GAGF,CAAChkC,IAEJ+jC,qBAAU,KAENktC,GAA0B,GAE1BhtC,YAAW,KACPktC,GAAyB,EAAM,GAChC,IAAI,GACR,IAEHle,8BAAoBL,GAAK,MACrB/+B,UAAWA,KAAA,IAAA29C,EAAAC,EAAA,OAA6C,QAA7CD,EAAgC,QAAhCC,EAAMJ,EAAmB9vC,eAAO,IAAAkwC,OAAA,EAA1BA,EAA4B59C,mBAAW,IAAA29C,IAAS,EACjE3T,SAAU7nC,IAAoF,IAAnF,WAAE3e,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,KAAqBmlD,GAAU3mC,EACW,IAAD07C,EAAnE,kBAAfr6D,GAAqD,kBAAnBC,IAAgCG,IAChD,QAA1Bi6D,EAAAL,EAAmB9vC,eAAO,IAAAmwC,GAA1BA,EAA4B7T,SAAS,CAAExmD,aAAYI,iBAAgBH,iBAAgBE,sBAEvF,IAAK,MAAMvV,KAAO06D,EACVA,EAAS16D,KAA8BjC,EAAQiC,IAC/CmvE,GAAW/qE,IACA,IAAKA,KAAQs2D,KAGhC,MAIR,MAAMgV,EAA6C,KAAnB,OAAVt6D,QAAU,IAAVA,IAAc,IAAI2D,SACW,KAAjB,QAA1B+1D,EAAAM,EAAmB9vC,eAAO,IAAAwvC,OAAA,EAA1BA,EAA4BnU,YACpC,OAAOjO,eAACiiB,GAA2B,CAACzvE,UAAU,gCAA+BsuB,SAAA,CACzE9uB,cAACgwD,KAAO,CACJe,iBAAiB,uBACjBxtB,MAAOvjC,cAACgwE,GAAsB,CAAAlhD,SACzBkE,EAAS,qCACYlE,SAE1B9uB,cAACkzD,KAAQ,CACL1yD,UAAU,YACVgvD,SAAUnzD,GAASo0E,GAAW/qE,IAAG,IAAUA,EAAK3H,UAAW1B,EAAMykC,OAAOqyB,YACxEA,QAAS9zD,EAAQtB,UAAU+wB,SAE1BkE,EAAS,qCAGjB/Z,GAAY1F,KAAI4iB,IAA8C,IAAD86C,EAAAC,EAAAC,EAAA,IAA5C,SAAE9wE,EAAQ,KAAExB,EAAI,QAAEqa,EAAO,WAAEC,GAAYgd,EACrD,GAAa,aAATt3B,IAAwBO,EAAY,OAAO,KAC/C,MAAMgyE,IAAcl4D,EACd+kC,EAAW/kC,GAAW7Z,EAAQ6Z,GACpC,OAAO80C,eAAA,OACHxtD,UAAW,CACP,sBACAy9C,EAAW,GAAK,YAClBpsC,KAAK,KAAKid,SAAA,CAEZk/B,eAAA,OAAKxtD,UAAU,eAAcsuB,SAAA,CACf,SAATjwB,GAAmBmB,cAACkxD,KAAO,CACxBv1B,QAAS00C,EACTgB,sBAAsB,EACtBpe,QAAS,CAAC,SACVib,gBAAiBoC,EACjBvf,iBAAkB,CACd,yEACAsf,EAAyB,iBAAmB,GAC5CE,EAAwB,gBAAkB,IAC5C1+D,KAAK,KACPkmC,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5Ck/B,eAACkiB,GAA6B,CAC1B1vE,UAAW,CACP,sBACAwwE,EAAe,8BAAgC,IACjDn/D,KAAK,KAAKid,SAAA,CAEZk/B,eAAA,MAAIxtD,UAAW,wBAAuBiW,EAAgB,GAAK,YAAaqY,SAAA,CACpE9uB,cAACkzD,KAAQ,CACLC,QAAS18C,EACT+4C,SAAUt1C,IACN02D,EAAoB12D,EAAE,EACxB4U,SACJkE,EAAS,mCACXhzB,cAAA,SACAA,cAAA,KAAA8uB,SAAIkE,EAAS,qCAEjBhzB,cAAA,OAAKQ,UAAW,sBAAqBiW,EAAgB,GAAK,yBAA0BqY,SAChF9uB,cAACkvE,GAAoB,CACjBjd,IAAKye,EACLrY,gBAAiBA,EACjBG,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,EACdtC,gBAAiB/2D,EAAQzB,SAASkxB,SAElCk/B,eAAA,OAAKxtD,UAAU,sBAAqBsuB,SAAA,CAChCk/B,eAAA,OAAKxtD,UAAU,uCAAsCsuB,SAAA,CACjD9uB,cAAA,MAAA8uB,SAAKkE,EAAS,kCACdhzB,cAACgsE,KAAa,CACVC,OAAQ7yD,GACRzZ,MAAON,EAAQzB,SACf4pE,iBAAkB7nE,IACd8wE,GAAW/qE,IAAG,IAAUA,EAAK9H,SAAU+B,EAAMksB,OAAO,QAI9DmlD,GAAgBhjB,eAAA,OAAKxtD,UAAU,sCAAqCsuB,SAAA,CAClE9uB,cAAA,MAAA8uB,SAAKkE,EAAS,iCACdhzB,cAACyyD,GAAU,CACPjyD,UAAU,yBACVgvD,SAAUmhB,EACVxe,WAAYh2D,EAAsB,CAC9BI,IAAKy2B,EAAS,mCACdx2B,KAAMw2B,EAAS,oCACfv2B,MAAOu2B,EAAS,uCAEpB32B,MAAOiD,mBAQnC8zD,UAAU,SAAQtkC,SAElB9uB,cAAA,OACIQ,UAAU,qBACVgoB,MAAO,CAAE4tC,gBAAiB3/C,EAAgBpX,EAAQzB,SAAWN,GAA0BwxB,SAEvF9uB,cAACgwD,KAAO,CAACtK,QAAS1yB,EAAS,2BAA2BlE,SAClD9uB,cAAA,OAAKQ,UAAU,qCAAoCsuB,SAC9CrY,EACKC,EACI1W,cAAA,OACEQ,UAAU,2BACVE,IAA0B,WAArBmW,EACCH,EACAC,EACNlW,IAAI,eAEN,KACJT,cAACsxE,KAAmB,CAAC9wE,UAAU,+BAKpD4wE,GAAapxE,cAACgwD,KAAO,CAClBzsB,MAAOpqB,GACmB,QADT83D,EACXj+C,EAAS7Z,UAAW,IAAA83D,IACpB,KACNlgB,iBAAiB,uBAAsBjiC,SAEvC9uB,cAACkzD,KAAQ,CACLC,QAASlV,EACTuR,SAAUt1C,GAAKhB,GAAWu3D,GAAW/qE,IAAG,IAAUA,EAAK,CAACwT,GAAUgB,EAAE4mB,OAAOqyB,gBAGlFngC,EAAS3yB,MAEdL,cAACgnE,KAAW,CACRv+C,KAAK,QACL1B,IAAK,EACLC,IAAK,IACLwoC,SAAUnzD,GAASo0E,GAAW/qE,IAAG,IAAUA,EAAK,CAAC7G,GAAwB,kBAAVxC,EAAqBA,EAAQ,QAC5FA,MAAoB,QAAf60E,EAAE7xE,EAAQR,UAAK,IAAAqyE,IAAI,MAE5BlxE,cAAC6+D,GAAa,CACV93C,IAAK,EACLC,IAAK,IACLuqD,KAAM,EACN/hB,SAAUnzD,GAASo0E,GAAW/qE,IAAG,IAAUA,EAAK,CAAC7G,GAAOxC,MACxDA,MAAoB,QAAf80E,EAAE9xE,EAAQR,UAAK,IAAAsyE,IAAI,MAE5BnxE,cAAA,OAAKQ,UAAU,qBA1HF3B,EA2HX,MAEgB,I,kCC1alC,MAAM2yE,GAAqBnkD,aAAO4xC,GAAeC,UAAU;;;;EAKrDuS,GAA0BpkD,aAAOolC,GAAW;;;;;;;;;;;EAmBrCif,GAAqBhf,sBAAsD,CAAA1tC,EAIrFitC,KAAS,IAJ6E,OACrFj7C,EAAM,UACN6uC,EAAS,mBACTxkB,GACHrc,EACG,MAAMgO,EAAWQ,MACX,MACF/2B,EAAK,UACLoZ,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,EAAa,WACbwqB,GACAL,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,MACFjd,EAAK,UACLoZ,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,GACH,WACDwqB,GACHrL,EAAA,MAAM,CACH14B,QACAoZ,YACAC,WACAC,OACAC,gBACAwqB,aACH,KACKmxC,E1ExDgB,iB0EwDiB,CAAEl1E,S1ExD7BA,M0EyDZ,MAAM49C,EAAQ5gC,GAAS,CAAEhd,UAEnBm1E,EAAiBrrB,mBAAQ,IAAM/lB,EAAW,aAAa,CAACA,IACxDqxC,EAAkBtrB,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1DsxC,EAAavrB,mBAAQ,IAAM/lB,EAAW,SAAS,CAACA,IAChDuxC,EAAsBxrB,mBAAQ,IAAM/lB,EAAW,kBAAkB,CAACA,IAExE8xB,8BAAoBL,GAAK,MAAS,KAElC,MAAM+f,EAA4B,SAAbl8D,EACf1V,EAAYylD,EACRxL,EAAQ,OAASs3B,EAAgB,iBAAmB,QACpD,MAEJvxE,EAAY0V,GACZm8D,EAAmBj/C,EAASg/C,EAAa3xE,UACzC6xE,EAAoB7wC,EACpB2sB,eAAAC,WAAA,CAAAn/B,SAAA,CAAGmjD,EAAiB,IAACjyE,cAACouE,KAAiB,OACvC6D,EACAE,EAAenyE,cAACkxD,KAAO,CACzB+B,QAAS,CAAC,SACVlC,iBAAiB,8CACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5C9uB,cAACwxE,GAAkB,CAAA1iD,SACdnuB,EAAa4S,KAAI8hB,IAAoC,IAAnC,aAAE/0B,EAAY,MAAEjE,EAAK,KAAEkE,GAAM80B,EAC5C,OAAO24B,eAACiR,GAAeE,OAAM,CACzB3+D,UAAWnE,IAAUyZ,EAAW,cAAgB,GAChDs5C,QAASA,IAAMwiB,EAAev1E,GAAOyyB,SAAA,CAEpCvuB,EAAOytD,eAAAC,WAAA,CAAAn/B,SAAA,CAAGvuB,EAAK,UAAY,KAAMyyB,EAAS1yB,KAJZjE,EAKX,QAIpC+2D,UAAU,cAAatkC,SAEvB9uB,cAAA,QACIQ,UAAW,sBAAmC,SAAbsV,EAAsB,GAAK,YAAYurB,EAAqB,GAAK,aAAavS,SAE9GojD,KApByB,oBAuB5BE,EAAmB/wC,EACnB8wC,EACAD,EACN,OAAQl7D,EAiDF,KAhDuB,OAAvBg7D,EAAa31E,MACT2D,cAACyyD,GAAU,CAACjyD,UAAU,mBAAmBnE,MAAOwZ,EAAW25C,SAAUqiB,EAAiB1f,YbnBhE/1D,EamBgG42B,EbnBzDjzB,EAASwT,KAAIsqB,IAAA,IAAC,MAAExhC,EAAK,QAAEqD,GAASm+B,EAAA,MAAM,CAC7GvhC,MAAOD,IAAUyD,EACXE,cAACC,IAAmB,IACpBD,cAACgwD,KAAO,CAACtK,QAAStpD,EAAWsD,GAASovB,SACpC9uB,cAAA,OACIS,IAAKrE,EAAWsD,GAChBgB,IAAK,8CAA6DrE,EAAM03B,wBAGpF13B,QACH,KaS6IyyB,SAC7HsjD,IAEHpyE,cAACyxE,GAAuB,CACtBjxE,UAAU,sBACVnE,MAAO0Z,EACPy5C,SAAUsiB,EACV3f,WAAY8S,GACZt8D,QAAQ,EACRypD,OAAQ/wB,GAAsB2sB,eAAA,OAAKxtD,UAAU,uBAAsBsuB,SAAA,CAC/D9uB,cAAC08D,KAAK,CACFl8D,UAAU,oBACVnE,MAAuB,kBAAT0Z,EAAoB,GAAKA,EACvC8mD,YAAU,EACVrN,SAAUsiB,EACVnV,YAAa3pC,EAAS,wCAE1BhzB,cAACyyD,GAAU,CACPp2D,MAAO2Z,EACPw5C,SAAUuiB,EACV5f,WAAY,CACR,CACI91D,MAAO,OACPk1D,aAAc,CAAE7L,QAAS1yB,EAAS,mCAClC12B,MAAO0D,cAACC,IAAmB,KAE/B,CACI5D,MAAO,OACPk1D,aAAc,CAAE7L,QAAS1yB,EAAS,mCAClC12B,MAAO0D,cAACqyE,KAAiB,KAE7B,CACIh2E,MAAO,SACPk1D,aAAc,CAAE7L,QAAS1yB,EAAS,qCAClC12B,MAAO0D,cAACsyE,KAAmB,KAE/B,CACIj2E,MAAO,QACPk1D,aAAc,CAAE7L,QAAS1yB,EAAS,oCAClC12B,MAAO0D,cAACuyE,KAAkB,WAInCzjD,SAENsjD,IbhEmBh2E,KakEtB,IChKDo2E,GAAmB,IAAIv+C,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAChDw+C,GAAgBA,CACzBp2E,EACAiF,EACAwkE,EACAG,EACAyM,EACAC,KAEA,MAAMC,EAAev2E,EAAM+d,UAAU0rD,EAAgBG,GAE/C4M,EAA4B,OADfx2E,EAAM4pE,KACkByM,EAC3C,IAAII,EAAcF,EACdG,EAAe,EACnB,OAAQzxE,GACJ,IAAK,IAAKwxE,EAAc,IAAIF,KAAgBC,EAAa,GAAK,OAC1DE,EAAeF,EAAa,EAAI,EAChC,MACJ,IAAK,IAAKC,EAAc,IAAIF,KAAiB,MAC7C,IAAK,IAAKE,EAAc,IAAIF,MAAkB,MAC9C,IAAK,IAAKE,EAAc,IAAIF,OAAmBG,EAAe,EAAG,MACjE,IAAK,IAAKD,EAAc,KAAKF,MAAkBG,EAAe,EAMlEJ,EAJmBt2E,EAAM+d,UAAU,EAAG0rD,GAChC,GAAGgN,IACHz2E,EAAM+d,UAAU6rD,EAAc5pE,EAAMge,QAErB4rD,EAAe8M,EAAa,EAGxCC,GAAqBhuD,IAM3B,IAN4B,GAC/BlM,EAAE,UACFs6C,GAIHpuC,EACG,GAAIlM,GAAMs6C,GAAa,EAAG,CAAC,IAAD6f,EACtB,MAAMnyC,EAASrhB,SAASgM,cAAc,IAAI3S,KAEtCgoB,IAA8B,QAApBmyC,EAACnyC,EAAOmlC,oBAAY,IAAAgN,KAAK,IAAM,IACzCnyC,EAAOmlC,aAAe7S,EAE9B,ICtCE,SAAEkO,IAAa5E,KAiBRwW,GAAexgB,sBAA0C,CAAA1tC,EASnEitC,KAAS,IAT2D,GACnEn5C,EAAE,YACFmoB,EAAW,aACXq9B,EAAY,aACZ6U,EAAY,SACZ3jB,EAAQ,UACR1kC,EAAS,UACTtqB,KACG4iB,GACN4B,EACG,MAAMouD,EAAiB3wC,iBAAO67B,IACvBjiE,EAAO6gE,GAAY1P,mBAAS8Q,IAC5B+U,EAAYC,GAAiB9lB,mBAAS,CAAE10C,GAAI,GAAIs6C,WAAY,IAC7DmgB,EAAmB7wC,uBAAa8wC,IAClC,MAAM/+C,EAA0C,kBAAjB++C,EAA4BA,EAAeA,EAAa1yC,OAAOzkC,MAC9F+2E,EAAexyC,QAAUnM,EACzByoC,EAASzoC,EAAgB,GAC1B,IAEH2O,qBAAU,KACN4vC,GAAmBK,EAAW,GAC/B,CAACA,IAEJjwC,qBAAU,KACNosB,EAAS,CAAE1uB,OAAQ,CAAEzkC,UAAU,GAGhC,CAACA,IAEJ,MAAMo3E,EAAoBrI,IAClBA,IAAcgI,EAAexyC,SAC7B2yC,EAAiBnI,EACrB,EAOJ,OALA9Y,8BAAoBL,GAAK,MACrBiL,SAAUuW,EACVC,aAAcA,IAAM56D,EAAM,CAAEA,KAAIokD,SAAUuW,GAAsB,SAG7DzzE,cAACshE,GAAQ,CACZxoD,GAAIA,EACJ66D,aAAa,MACbhpD,QAASA,IAAM7R,IAAkB,OAAZq6D,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEr6D,KAAIokD,SAAUuW,KACpD5W,YAAU,EACV+W,YAAY,EACZpzE,UAAW,GAAGsY,WAAYtY,IAC1BnE,MAAOA,EACPyuB,UAAWgZ,IAAO,IAAD+vC,EAAAC,EAEb,GADS,OAAThpD,QAAS,IAATA,KAAYgZ,IACP7C,EAAa,OAClB,MAAM,QAAE8yC,EAAO,IAAEzyE,EAAG,QAAE0yE,GAAYlwC,EAC5BgiC,EAAgD,QAAlC+N,EAAG/vC,EAAGmwC,cAAcnO,sBAAc,IAAA+N,KAAK,EACrD5N,EAA4C,QAAhC6N,EAAGhwC,EAAGmwC,cAAchO,oBAAY,IAAA6N,KAAK,GAClDC,GAAWC,IAAYl7D,GAAMmtD,IAAiBH,GAAkB0M,GAAiBp+C,IAAI9yB,KACtFwiC,EAAG/Y,iBACH0nD,GACI3uC,EAAGmwC,cAAc53E,MAAOiF,EACxBwkE,EAAgBG,GAChB,GACA,CAACiO,EAAY9gB,KACTmgB,EAAiBW,GACjBZ,EAAc,CAAEx6D,KAAIs6C,aAAY,IAG5C,EAEJ5D,SAAU+jB,KACNnwD,GACN,ICzEO+wD,GAAgBzhB,sBAA4C,CAAA1tC,EAQtEitC,KAAS,IAR8D,GACtEn5C,EAAE,aACFwlD,EAAY,aACZ6U,EAAY,SACZ3jB,EAAQ,UACR1kC,EAAS,UACTtqB,KACG4iB,GACN4B,EACG,MAAM,QAAEyc,GAAYT,MACd,YAAEC,GAAgBQ,EAClB2xC,EAAiB3wC,iBAAO67B,IACvBjiE,EAAO6gE,GAAY1P,mBAAS8Q,IAC5B+U,EAAYC,GAAiB9lB,mBAAS,CAAE10C,GAAI,GAAIs6C,WAAY,IAC7DmgB,EAAmB7wC,uBAAa8wC,IAClC,MAAM/+C,EAA0C,kBAAjB++C,EAA4BA,EAAeA,EAAa1yC,OAAOzkC,MAC9F+2E,EAAexyC,QAAUnM,EACzByoC,EAASzoC,EAAgB,GAC1B,IAEH2O,qBAAU,KACN4vC,GAAmBK,EAAW,GAC/B,CAACA,IAEJjwC,qBAAU,KACNosB,EAAS,CAAE1uB,OAAQ,CAAEzkC,UAAU,GAGhC,CAACA,IAEJ,MAAMo3E,EAAoBrI,IAClBA,IAAc/uE,GACdk3E,EAAiBnI,EACrB,EAMJ,OAJA9Y,8BAAoBL,GAAK,MACrBiL,SAAUuW,MAGPzzE,cAAC08D,KAAK,CACT5jD,GAAIA,EACJ66D,aAAa,MACbhpD,QAASA,IAAM7R,IAAkB,OAAZq6D,QAAY,IAAZA,OAAY,EAAZA,EAAe,CAAEr6D,KAAIokD,SAAUuW,KACpD5W,YAAU,EACVr8D,UAAW,GAAGsY,WAAYtY,IAC1BnE,MAAOA,EACPyuB,UAAWgZ,IAAO,IAAD+vC,EAAAC,EAEb,GADS,OAAThpD,QAAS,IAATA,KAAYgZ,IACP7C,EAAa,OAClB,MAAM,QAAE8yC,EAAO,IAAEzyE,EAAG,QAAE0yE,GAAYlwC,EAC5BgiC,EAAgD,QAAlC+N,EAAG/vC,EAAGmwC,cAAcnO,sBAAc,IAAA+N,KAAK,EACrD5N,EAA4C,QAAhC6N,EAAGhwC,EAAGmwC,cAAchO,oBAAY,IAAA6N,KAAK,GAClDC,GAAWC,IAAYl7D,GAAMmtD,IAAiBH,GAAkB0M,GAAiBp+C,IAAI9yB,KACtFwiC,EAAG/Y,iBACH0nD,GACI3uC,EAAGmwC,cAAc53E,MAAOiF,EACxBwkE,EAAgBG,GAChB,GACA,CAACiO,EAAY9gB,KACTmgB,EAAiBW,GACjBZ,EAAc,CAAEx6D,KAAIs6C,aAAY,IAG5C,EAEJ5D,SAAU1rB,GAAMyvC,EAAiBzvC,EAAGhD,OAAOzkC,UACvC+mB,GACN,IC5EOgxD,GAAmB1hB,sBAAkD,CAAA1tC,EAE/EitC,KAAS,IAFuE,aAC/EkhB,GACHnuD,EACG,MAAMwb,EAAaL,IAAQ9O,GAASA,EAAMmP,aACpC6zC,EAAiB5xC,iBAAwB,MAEzC6xC,EAAe/tB,mBAAQ,IAAM/lB,EAAW,cAAU7lB,EAAW,aAAa,CAAC6lB,IAgBjF,OAdA4C,qBAAU,KAAO,IAADmxC,EACZ,MAAMnM,EAAkC,QAAzBmM,EAAGF,EAAezzC,eAAO,IAAA2zC,OAAA,EAAtBA,EAAwBb,eAEtCtL,IAAuB,OAAZ+K,QAAY,IAAZA,KAAe/K,GAAU,GAGzC,IAEH9V,8BAAoBL,GAAK,MACrBiL,SAAW7gE,IAAW,IAADm4E,EACK,QAAtBA,EAAAH,EAAezzC,eAAO,IAAA4zC,GAAtBA,EAAwBtX,SAAS7gE,EAAM,MAIxC2D,cAACkzE,GAAY,CAACjhB,IAAKoiB,EACtBv7D,GAAG,SACHmoB,aAAW,EACXq9B,aAAcn+B,GAAQzM,WAAWha,KAAKhC,OACtC83C,SAAU8kB,EACVnB,aAAcA,EACd5R,KAAM,GACR,IC7BAkT,GAAsBpnD,KAAOukC,GAAG;;;;;;EASzB8iB,GAAqBzwB,IAC9B,MAAMjxB,EAAWQ,MACX,mBACFrb,EAAkB,eAClBH,EAAc,YACdC,EAAW,iBACXC,EAAgB,aAChBE,EAAY,QACZgoB,GACAD,GAAQw0B,uBAAW3vC,IAAA,IAAC,KACpBtL,EAAI,QACJ0mB,GACHpb,EAAA,MAAM,CACH/M,YAAayB,EAAKzB,YAClBE,mBAAoBuB,EAAKvB,mBACzBH,eAAgB0B,EAAK1B,eACrBE,iBAAkBwB,EAAKxB,iBACvBE,aAAcsB,EAAKtB,aACnBgoB,UACH,KAMKu0C,EAAuBjyC,uBAAaxoB,GAA2BkmB,GAAQmC,IAEzE,IAAIqyC,EAoBJ,OAhBQA,EALU16D,EAAE4mB,OAAOqyB,QAInB/6C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBF,gBAAgB,GAGb,IAAKuqB,KAAgBqyC,EAAa,KACzC,CAACx0C,EAAShoB,IACRy8D,EAAyBnyC,uBAAaxoB,GAA2BkmB,GAAQmC,IAE3E,IAAIqyC,EAoBJ,OAhBQA,EALU16D,EAAE4mB,OAAOqyB,QAInB/6C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBA,kBAAkB,GAGf,IAAKqqB,KAAgBqyC,EAAa,KACzC,CAACx0C,EAAShoB,IACR08D,EAA2BpyC,uBAAaxoB,GAA2BkmB,GAAQmC,IAE7E,IAAIqyC,EAoBJ,OAhBQA,EALU16D,EAAE4mB,OAAOqyB,QAInB/6C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVA,aAAa,EACbE,oBAAoB,GAGX,CACjBA,oBAAoB,GAGjB,IAAKoqB,KAAgBqyC,EAAa,KACzC,CAACx0C,EAAShoB,IACR28D,EAAoBryC,uBAAaxoB,GAA2BkmB,GAAQmC,IAEtE,IAAIqyC,EAoBJ,OAhBQA,EALU16D,EAAE4mB,OAAOqyB,QAInB/6C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVE,oBAAoB,EACpBF,aAAa,GAGJ,CACjBA,aAAa,GAGV,IAAKsqB,KAAgBqyC,EAAa,KACzC,CAACx0C,EAAShoB,IACR48D,EAAqBtyC,uBAAaxoB,GAA2BkmB,GAAQmC,IACvE,MAAM6oC,EAAYlxD,EAAE4mB,OAAOqyB,SACrB,mBACFh7C,EAAkB,eAClBH,EAAc,iBACdE,EAAgB,YAChBD,GACAsqB,EAIJ,IAAI0yC,GAAyB,EACzBC,GAAqB,EACrBC,GAAuB,EACvBC,GAAkB,EAiBtB,OAfIhK,GACA8J,EAAqBl9D,EACrBo9D,GAAkBF,GAA6Bj9D,EAC/Cg9D,GAA0BG,IAAmBF,GAA8B/8D,EAC3Eg9D,IAAwBF,GAA0BC,GAAsBC,IAElEj9D,IAENg9D,EAAqBl9D,EACrBm9D,GAAuBD,GAA6Bh9D,EAEpDk9D,EAAkBn9D,EAClBg9D,GAAyBG,GAA0Bj9D,GAGhD,IACAoqB,EACHnqB,aAAcgzD,EACdjzD,mBAAoB88D,EACpBj9D,eAAgBk9D,EAChBh9D,iBAAkBi9D,EAClBl9D,YAAam9D,EAChB,KACD,CAACh1C,IAEL,OAAO4tB,eAACymB,GAAmB,CAACj0E,UAAU,iBAAgBsuB,SAAA,CAClD9uB,cAACgwD,KAAO,CAACe,iBAAiB,uBAAuBrL,QAAS1yB,EAAS,wBAAwBlE,SACvF9uB,cAACkzD,KAAQ,CACL1yD,UAAU,eACVgvD,SAAUwlB,EACV7hB,QAAS/6C,EACTsS,SAAU,EAAEoE,SAEXkE,EAAS,0BAGlBhzB,cAACkzD,KAAQ,CACL1yD,UAAU,YACVgvD,SAAUmlB,EACVxhB,QAASn7C,EACT0S,SAAU,EAAEoE,SAEXkE,EAAS,6BAEdhzB,cAACkzD,KAAQ,CACL1yD,UAAU,gBACVgvD,SAAUqlB,EACV1hB,QAASj7C,EACTwS,SAAU,EAAEoE,SAEXkE,EAAS,iCAGdhzB,cAACkzD,KAAQ,CACL1yD,UAAU,cACVgvD,SAAUulB,EACV5hB,QAASl7C,EACTyS,SAAU,EAAEoE,SAEXkE,EAAS,4BAEdhzB,cAACkzD,KAAQ,CACL1yD,UAAU,iBACVgvD,SAAUslB,EACV3hB,QAASh7C,EACTuS,SAAU,EAAEoE,SAEXkE,EAAS,iCAEI,E,wBC3NnB,MAAMqiD,GAA+BhoD,aAAO4xC,GAAeC,UAAU;;;;;;;;;;;;;;;;MAgBtEoP;EAGOgH,GAA6BjoD,KAAOukC,GAAG;;;;;;EAQvC2jB,GAAgCloD,KAAOukC,GAAG;;;;;;EAQ1C4jB,GAAyBnoD,aAAOolC,GAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ECzBlDgjB,GAA6BpoD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;EA2BhC8jB,GAAmBhjB,sBAAkD,CAAA1tC,EAI/EitC,KAAS,IAJuE,UAC/EpM,EAAS,mBACTxkB,EAAkB,aAClB8xC,GACHnuD,EACG,MAAMgO,EAAWQ,MACX,QACFzb,EAAO,OACP/C,EAAM,WACNwrB,GACAL,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,QAAE3B,EAAO,OAAE/C,GAAQ,WACzBwrB,GACHrL,EAAA,MAAM,CACHpd,UACA/C,SACAwrB,aACH,KACKm1C,EAAmBlzC,iBAAyB,MAC5CmzC,EAAkBnzC,iBAAyB,MAC3CozC,EAAcpzC,iBAAyB,MACvCqzC,EAAcrzC,iBAAyB,MAEvCszC,EAAiB/gE,GAAUhE,GAAagE,GACxChE,GAAagE,GACbhE,GAAatM,IAEbsxE,EAAYzvB,mBAAQ,IAAM/lB,EAAW,OAAOnkC,GAA0B,kBAAVA,EAAqBA,EAAM07B,OAAS17B,KAAQ,CAACmkC,IACzGy1C,EAAY1vB,mBAAQ,IAAM/lB,EAAW,OAAOnkC,GAA0B,kBAAVA,EAAqBA,EAAM07B,OAAS17B,KAAQ,CAACmkC,IACzG01C,EAAiB3vB,mBAAQ,IAAM/lB,EAAW,gBAAY7lB,EAAW,aAAa,CAAC6lB,IAC/E21C,EAAkB5vB,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACxD41C,EAAgB7vB,mBAAQ,IAAM/lB,EAAW,eAAW7lB,EAAW,aAAa,CAAC6lB,IAWnF,OATA8xB,8BAAoBL,GAAK,MACrBiL,SAAU7nC,IAAsC,IAADghD,EAAAC,EAAAC,EAAAC,EAAA,IAApC,SAAE1+D,EAAQ,QAAEO,EAAO,IAAET,EAAG,IAAEC,GAAKwd,EACnB,kBAARzd,IAAqC,QAAnBy+D,EAAAR,EAAYj1C,eAAO,IAAAy1C,GAAnBA,EAAqBnZ,SAAStlD,IACxC,kBAARC,IAAqC,QAAnBy+D,EAAAR,EAAYl1C,eAAO,IAAA01C,GAAnBA,EAAqBpZ,SAASrlD,IACnC,kBAAbC,IAA+C,QAAxBy+D,EAAAZ,EAAiB/0C,eAAO,IAAA21C,GAAxBA,EAA0BrZ,SAASplD,IAC9C,kBAAZO,IAA6C,QAAvBm+D,EAAAZ,EAAgBh1C,eAAO,IAAA41C,GAAvBA,EAAyBtZ,SAAS7kD,GAAQ,MAI5E21C,eAACynB,GAA0B,CAACj1E,UAAU,oBAAmBsuB,SAAA,EAC1D+2B,GAAaxkB,IAAuB2sB,eAAAC,WAAA,CAAAn/B,SAAA,CAClC9uB,cAACm0E,GAAa,CAACliB,IAAK4jB,EAChB/8D,GAAG,MACH29D,YAAazjD,EAAS,mBACtBsrC,aAAcn+B,GAAQzM,WAAWha,KAAK9B,IACtC43C,SAAUwmB,EACV7C,aAAcA,IAElBnzE,cAACm0E,GAAa,CAACliB,IAAK6jB,EAChBh9D,GAAG,MACH29D,YAAazjD,EAAS,mBACtBsrC,aAAcn+B,GAAQzM,WAAWha,KAAK7B,IACtC23C,SAAUymB,EACV9C,aAAcA,OAGtBnzE,cAACm0E,GAAa,CAACliB,IAAK0jB,EAChB78D,GAAG,WACH29D,YAAazoB,eAACsnB,GAA0B,CAAC90E,UAAU,0BAAyBsuB,SAAA,CACxE9uB,cAAA,OAAKQ,UAAU,cAAasuB,SAAEkE,EAAS,0BACvChzB,cAACqxD,GAAU,CACPjC,QAASA,KAAA,IAAAsnB,EAAA,OAA8B,QAA9BA,EAAMf,EAAiB/0C,eAAO,IAAA81C,OAAA,EAAxBA,EAA0BxZ,StEtFlD,GAAGlyC,GAAgB,aAAc,KsEsF2C,EACnEsmC,KAAMqlB,KACNplB,aAAc,CAAE7L,QAAS1yB,EAAS,gCAG1CsrC,aAAcn+B,GAAQzM,WAAWha,KAAK5B,SACtC03C,SAAU0mB,EACV/C,aAAcA,IAElBnzE,cAACm0E,GAAa,CAACliB,IAAK2jB,EAChB98D,GAAG,UACH29D,YAAazoB,eAACsnB,GAA0B,CAAC90E,UAAU,0BAAyBsuB,SAAA,CACxE9uB,cAAA,OAAKQ,UAAU,cAAasuB,SAAEkE,EAAS,2BACvChzB,cAACw/D,KAAQ,CACLh/D,UAAU,uBACV4yD,UAAU,UACVwjB,OAAK,EACLlxB,QAAS1lD,cAACs2D,KAAI,CAAClH,QAASl1C,GAAKA,EAAEw8C,SAASrsC,kBAAkByE,SACrDinD,EAAcxiE,KAAI,CAAC7V,EAAMusB,IACfjqB,cAACs2D,KAAKC,KAAI,CACbnH,QAASA,KAAO,IAADynB,EACY,QAAvBA,EAAAjB,EAAgBh1C,eAAO,IAAAi2C,GAAvBA,EAAyB3Z,SAASx/D,EAAK,EACzCoxB,SAEDpxB,GALkB,GAAGusB,SAQ1B6E,SAER9uB,cAAA,OAAA8uB,SACA9uB,cAACqxD,GAAU,CACXjC,QAASA,OACLkC,KAAMwlB,cAKlBxY,aAAcn+B,GAAQzM,WAAWha,KAAKrB,QACtCm3C,SAAU4mB,EACVjD,aAAcA,IAElBnzE,cAAC00E,GAAiB,IAClB10E,cAACyyD,GAAU,CACPjyD,UAAU,iCACVnE,MAAO0b,EACPy3C,SAAU2mB,EACVhkB,WAAY+S,GAAkBp2C,SAE9B9uB,cAAA,QAAA8uB,SAAOkE,EAAS,6BAEK,IClJ3B+jD,GAAwB1pD,aAAOolC,GAAW;;;;;;;EAyBnCukB,GAAkBtkB,sBAAgD,CAAA1tC,EAM5EitC,KAAS,IANoE,0BAC5E3wB,EAAyB,gBACzB+2B,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACH1zC,EACG,MAAMgO,EAAWQ,MACX,QACFn0B,EAAO,UACPmW,EAAS,QACTuB,EAAO,WACP3X,EAAU,OACV4X,EAAM,IACNhR,EAAG,QAAEoQ,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,EAAM,WACxCsqB,EAAU,QACVJ,GACAD,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,QACFra,EAAO,UACPmW,EAAS,QACTuB,EAAO,WACP3X,EAAU,OACV4X,EAAM,IACNhR,EAAG,QAAEoQ,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,GACrC,WACDsqB,EAAU,QACVJ,GACHjL,EAAA,MAAM,CACH91B,UACAmW,YACAuB,UACA3X,aACA4X,SACAhR,MAAKoQ,UAASH,UAASE,YAAWD,SAClCsqB,aACAJ,UACH,KACK+uC,EAAkB1sC,iBAAwB,MAE1Cw0C,EAAgB1wB,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACtD02C,EAAmBx0C,uBAAay0C,GAA4B/2C,GAAQmC,IAC/D,IACAA,EACHvrB,OAAQmgE,EACR/3E,YAAY+3E,GAAyB50C,EAAYnjC,gBAErD,CAACghC,IACCg3C,EAAY7wB,mBAAQ,IAAM/lB,EAAW,QAAQ,CAACA,IAC9C62C,EAAgB9wB,mBAAQ,IAAM/lB,EAAW,YAAY,CAACA,IACtD82C,EAAe50C,uBAAatG,GAAoBgE,GAAQmC,IACnD,IACAA,EACHrsB,OAAQkmB,OAEZ,CAACgE,IACCm3C,EAAkBhxB,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1Dg3C,EAAkBjxB,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1Di3C,EAAkB/0C,uBAAY,CAACy5B,EAAmC/C,EAAkCqW,KAC1F,OAAZ/W,QAAY,IAAZA,KAAeyD,EAAU/C,GACrB+C,GAAU/7B,GACV6S,IAAI,IACGA,EACH78B,QAAS+lD,KAEbsT,EACH,GACF,CAAC/W,EAAct4B,IAiBlB,OAfAkyB,8BAAoBL,GAAK,MACrB/+B,UAAWA,KAAA,IAAAw8C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgBvuC,eAAO,IAAA+uC,OAAA,EAAvBA,EAAyBz8C,mBAAW,IAAAw8C,IAAS,EAC9DxS,SAAU7nC,IAA2C,IAA1C,IAAErvB,EAAG,QAAEoQ,EAAO,QAAEH,EAAO,UAAEE,GAAWkf,EAEM,IAADu6C,EAIJC,EAL1B,YAAd15D,EACuB,kBAAZF,GAAwBG,IACR,QAAvBw5D,EAAAT,EAAgBvuC,eAAO,IAAAgvC,GAAvBA,EAAyB1T,YAAY,UAAWjmD,EAASG,IAG1C,kBAARpQ,GAAoBoQ,IACJ,QAAvBy5D,EAAAV,EAAgBvuC,eAAO,IAAAivC,GAAvBA,EAAyB3T,YAAY,SAAUl2D,EAAKoQ,GAE5D,MAIDpW,cAAC+3D,GAAY,CAChB9F,IAAKkd,EACL5rC,MAAOvQ,EAAS,wBAChBklC,kBAAmB/hD,EACnBiiD,sBAAuBpyD,EACvBmyD,sBAAuBliD,EACvBsiD,gBAAiBniD,EACjB6hD,SAAU/hD,EACVmiD,gBAAiBA,EACjBI,eAAgBA,CAAC55D,EAAMy1B,KACnBijD,EAAgB14E,GACH,YAATA,EAAoBw4E,EAAc/iD,GACjC8iD,EAAU9iD,EAAK,EAExBokC,aAAc+e,EACd9e,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkBye,EAClB1e,kBAAmBnwC,IACfmX,KAAaliB,MAAM,CACfoiB,YAAa9M,EAAS,8BAA8BvK,GACpDoX,QAAS7M,EAAS,2BACpB,EAENz0B,MAAOY,EAAuBC,EAAYC,GAASd,MACnD+5D,cAAeh3B,EACTthC,cAAC+2E,GAAqB,CACpBv2E,UAAU,uCACVnE,MAAOmZ,EACPg6C,SAAUgoB,EACVrlB,WAAY4S,GAAoBj2C,SAEhC9uB,cAAA,QAAMQ,UAAU,cAAasuB,SAAEkE,EAAS,8BAE1C,KACLlE,SAED9uB,cAACq+D,GAAe,CACZtsC,OAAQ/a,EACRsnD,aAAcvnD,EACdy4C,SAAUynB,EACV1Y,eAAgB2Y,GAJE,QAAQ16D,KAAKslB,UAAU/qB,OAMlC,ICtJb2gE,GAA2BrqD,KAAOukC,GAAG;;;;;;;;;;;;;EAcrC+lB,GAAmBtqD,KAAO+jC,IAAI;;EAQvBwmB,GAAoBllB,sBAAoD,CAAA1tC,EAElFitC,KAAS,IAF0E,aAClFkhB,GACHnuD,EACG,MAAMgO,EAAWQ,MACX,KACF71B,EAAI,OACJqX,EAAM,WACNwrB,GACAL,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,KACF/b,EAAI,OACJqX,GACH,WACDwrB,GACHrL,EAAA,MAAM,CACHx3B,OACAqX,SACAwrB,aACH,KACKq3C,EAAep1C,iBAAyB,MACxCq1C,EAAgBr1C,iBAAyB,MAEzCs1C,EAAcxxB,mBAAQ,IAAM/lB,EAAW,UAAU,CAACA,IAClDw3C,EAAazxB,mBAAQ,IAAM/lB,EAAW,YAAQ7lB,EAAW,aAAa,CAAC6lB,IAS7E,OAPA8xB,8BAAoBL,GAAK,MACrBiL,SAAU7nC,IAAsB,IAAD4iD,EAAAC,EAAA,IAApB,KAAEv6E,EAAI,MAAEga,GAAO0d,EACF,kBAAT13B,IAAuC,QAApBs6E,EAAAJ,EAAaj3C,eAAO,IAAAq3C,GAApBA,EAAsB/a,SAASv/D,IACxC,kBAAVga,IAAyC,QAArBugE,EAAAJ,EAAcl3C,eAAO,IAAAs3C,GAArBA,EAAuBhb,SAASvlD,GAAM,MAItEq2C,eAAC0pB,GAAwB,CAACl3E,UAAU,gBAAesuB,SAAA,CACtD9uB,cAACm0E,GAAa,CAACliB,IAAK4lB,EAChB/+D,GAAG,OACHwlD,aAAc3gE,EACd84E,YAAaz2E,cAACgwD,KAAO,CAACzsB,MAAOvQ,EAAS,sBAAsBlE,SACxD9uB,cAAC23E,GAAgB,CAACvoB,QAASA,KACvB3iC,UAAU0rD,UAAUC,UAAUj5D,GAAkBxhB,GAAM,EACxDmxB,SACGkE,EAAS,wBAGlBw8B,SAAUwoB,EACV7E,aAAcA,IAElBnzE,cAACm0E,GAAa,CAACliB,IAAK6lB,EAChBh/D,GAAG,SACHwlD,aAAcn+B,GAAQzM,WAAWha,KAAK/B,MACtC8+D,YAAazoB,eAACsnB,GAA0B,CAAC90E,UAAU,0BAAyBsuB,SAAA,CACxE9uB,cAAA,OAAKQ,UAAU,cAAasuB,SACvBkE,EAAS,wBAEdhzB,cAACqxD,GAAU,CACPjC,QAASA,KAAA,IAAAipB,EAAA,OAA2B,QAA3BA,EAAMP,EAAcl3C,eAAO,IAAAy3C,OAAA,EAArBA,EAAuBnb,SxE9E9BloD,IACjBgW,GAAgB,6BAA8B,GAC/C,KACY,QAAXhW,EAAmB,KAAO,MAE3BgW,GAAgB,wCAAyC,GACzDA,GAAgB,aAAc,GwEwE2BstD,CAAYtjE,GAAQ,EACnEs8C,KAAMqlB,KACNplB,aAAc,CAAE7L,QAAS1yB,EAAS,gCAG1Cw8B,SAAUuoB,EACV5E,aAAcA,MAEK,ICzEzBoF,GAAwB7lB,sBAA4D,CAAA1tC,EAKvFitC,KAAS,IAL+E,UACvFngD,EAAS,cACTmF,EAAa,SACbu4C,EAAQ,SACRhlC,GACHxF,EACG,MAAMgO,EAAWQ,KACXglD,EAA4B/1C,iBAAyB,SAAlBxrB,EAA2B,QAAUA,GACxEwhE,EAAWh2C,iBAAyB,OACnC/W,EAAOpB,GAAYkjC,mBAAS,GAMnC,OAJA8E,8BAAoBL,GAAK,MACrBvmC,MAAOA,KAAA,IAAAgtD,EAAA,OAAsB,QAAtBA,EAAMD,EAAS73C,eAAO,IAAA83C,OAAA,EAAhBA,EAAkBhtD,OAAO,MAGnCsiC,eAACqnB,GAA4B,CAChC70E,UAAU,2BACN0pB,GAAmB,CACnBG,iBAAiB,EACjBD,aAActY,EAAUuI,OACxBiQ,WACAC,UAAWA,KACHmB,GAAS,GAAG8jC,EAAS19C,EAAU4Z,GAAOrvB,MAAM,EAEpDmuB,aACFsE,SAAA,CAEF9uB,cAACkzD,KAAQ,CAACjB,IAAKwmB,EACXj4E,UAAU,sBACV2yD,QAA2B,SAAlBl8C,EACTu4C,SAAUt1C,IACNs1C,EAASt1C,EAAE4mB,OAAOqyB,QAAU,OAASqlB,EAA0B53C,QAAQ,EACzE9R,SACJkE,EAAS,sBACXhzB,cAACyyD,GAAU,CACPjyD,UAAU,cACVnE,MAAO4a,EACPu4C,SAAUA,EACV2C,WAAYrgD,MAEW,IAG7B6mE,GAAoCtrD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmC9CgnB,GAA+BvrD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqDlCinB,GAAqBnmB,sBAAsD,CAAAv9B,EAIrF88B,KAAS,IAJ6E,mBACrF5wB,EAAkB,0BAClBC,EAAyB,aACzB6xC,GACHh+C,EACG,MAAMnC,EAAWQ,MACX,WACFp0B,EAAU,cACV6X,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,QAChBipB,EAAO,WACPI,GACAL,GAAQw0B,uBAAWt/B,IAAA,IACnB3b,MAAM,WACFta,EAAU,cACV6X,EAAa,kBACbG,EAAiB,iBACjBD,GACH,QACDipB,EAAO,WACPI,GACHnL,EAAA,MAAM,CACHj2B,aACA6X,gBACAG,oBACAD,mBACAipB,UACAI,aACH,KACK2rC,EAAe1pC,iBAAuB,MACtCq2C,EAA2Br2C,iBAAiC,MAC5Ds2C,EAAyBt2C,iBAAwB,OAChDu2C,EAAeC,GAAkBzrB,oBAAS,IAC1C0rB,EAAsBC,GAAkC3rB,oBAAS,GAClEgrB,EAA4B/1C,iBAAyB,SAAlBxrB,EAA2B,QAAUA,GAwBxEmiE,EAAmB7yB,mBAAQ,IAAM/lB,EAAW,qBAAqB,CAACA,IAClE64C,EAAoB9yB,mBAAQ,IAAM/lB,EAAW,sBAAsB,CAACA,IACpE84C,EAAuB/yB,mBAAQ,IAAM/lB,EAAW,sBAAkB7lB,EAAW,aAAa,CAAC6lB,IAE3F1uB,EAAYy0C,mBAAQ,IAAMye,KAC3Bl8C,QAAOtV,GACG8tB,GAA+C,WAAlB9tB,EAAMhC,WAE9C,CAAC8vB,IAGLgxB,8BAAoBL,GAAK,MACrBiL,SAAU/mC,IAAyB,IAADojD,EAAA,IAAvB,eAAEriE,GAAgBif,EACrBjf,IAA8C,QAA9BqiE,EAAAR,EAAuBn4C,eAAO,IAAA24C,GAA9BA,EAAgCrc,SAAShmD,GAAe,MAIpF,MAAMsiE,EAAuBloE,GAAa2F,GAC1C,OAAO+2C,eAAC4qB,GAA4B,CAChCp4E,UAAU,iBAAgBsuB,SAAA,CAE1Bk/B,eAAA,OAAKxtD,UAAU,6BAA4BsuB,SAAA,CACvC9uB,cAAA,OAAKQ,UAAU,oBAAmBsuB,SAC9B9uB,cAACkzD,KAAQ,CACL1D,SA/CUt1C,GAAWkmB,GAAQmC,IACzC,MAAMk3C,EAAqBv/D,EAAE4mB,OAAOqyB,QAOpC,MAAO,IACA5wB,EAEHnjC,WAAYq6E,EACZziE,QAAQyiE,GAA6Bl3C,EAAYvrB,OACpD,IAmCWm8C,QAAS/zD,EAAW0vB,SACtBkE,EAAS,4BAEdqO,GAAsBrhC,cAACkxD,KAAO,CAC3Bv1B,QAASu9C,EACThL,gBAAiBiL,EACjBlmB,QAAS,CAAC,QAAS,SACnBG,UAAU,SACVrC,iBAAiB,gCACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5C9uB,cAACu4E,GAAqB,CAACtmB,IAAK6mB,EACxBhnE,UAAWA,EACXmF,cAAeA,EACfuT,SAAUA,KAAO,IAAD4hD,EACZ+M,GAA+B,GACX,QAApB/M,EAAAD,EAAavrC,eAAO,IAAAwrC,GAApBA,EAAsB1gD,OAAO,EAEjC8jC,SAlDOnzD,IACvB,MAAMo4B,EAAkB,GAAGp4B,IAEH,SAApBo4B,IAA4B+jD,EAA0B53C,QAAUnM,GACpE2L,GAAQmC,IACG,IAAKA,EAAatrB,cAAewd,KAC1C,MA8Ca3F,SAEPk/B,eAAC2qB,GAAiC,CAAC1mB,IAAKka,EACpC3rE,UAAU,uBACVkqB,SAAU,EACVI,UAAW5Q,IACP,GAAc,cAAVA,EAAE5Y,KAAiC,UAAV4Y,EAAE5Y,KAA6B,OAAV4Y,EAAE5Y,IAOhD,OANA63E,GAA+B,GAE/B71C,YAAW,KAAO,IAADo2C,EACmB,QAAhCA,EAAAZ,EAAyBl4C,eAAO,IAAA84C,GAAhCA,EAAkChuD,OAAO,GAC1C,MAEI,CACX,EACFoD,SAAA,CAEFk/B,eAAA,QAAMxtD,UAAU,uBAAsBsuB,SAAA,CAAEkE,EAAS,4BAA4B,IAAChzB,cAACouE,KAAiB,OAC/FoL,EACKx5E,cAACm2D,GAAc,CAAC31D,UAAU,+BAAgCg5E,IAC1Dx5E,cAACm2D,GAAc,CAAC31D,UAAU,4BAA4Bd,QAAQ,0BAG1EN,GAAciiC,GACTrhC,cAACkzD,KAAQ,CAAC1D,SAAUt1C,GAAK++D,EAAe/+D,EAAE4mB,OAAOqyB,SAAUA,QAAS6lB,EAAclqD,SAChFkE,EAAS,iCAGrB5zB,GAAc4uD,eAAAC,WAAA,CAAAn/B,SAAA,CACX9uB,cAAA,OAAA8uB,SACI9uB,cAAC08D,KAAK,CACF+Z,YAAaz2E,cAAA,QAAA8uB,SACRkE,EAAS,qBACNhzB,cAAA,QAAwBQ,UAAU,aAAYsuB,SACzCkE,EAAS,2BADJ,iBAKlB32B,MAAO+a,EACPo4C,SAAUt1C,IACNm/D,EAAkBn/D,GACd8+D,GAAeI,EAAiBl/D,EAAE,MAIlDla,cAAA,OAAA8uB,SACI9uB,cAAC08D,KAAK,CACF+Z,YAAaz2E,cAAA,QAAA8uB,SACRkE,EAAS,qBACNhzB,cAAA,QAAsBQ,UAAU,YAAWsuB,SACtCkE,EAAS,0BADJ,gBAKlB32B,MAAO8a,EACPq4C,SAAUt1C,IACF8+D,GAAeK,EAAkBn/D,GACrCk/D,EAAiBl/D,EAAE,MAI/Bla,cAAA,OAAKQ,UAAU,aAAYsuB,SAGvB9uB,cAACkzE,GAAY,CAACjhB,IAAK8mB,EACfjgE,GAAG,kBACHmoB,aAAW,EACXq9B,aAAcn+B,GAAQzM,WAAWha,KAAKxC,eACtCs4C,SAAU8pB,EACVnG,aAAcA,EACd5R,KAAM,WAIS,IC/T7BoY,GAAmCtsD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAwCtCgoB,GAAyBlnB,sBAA8D,CAAA1tC,EAEjGitC,KAAS,IAFyF,aACjGkhB,GACHnuD,EACG,MAAMgO,EAAWQ,MACX,MACF/2B,EAAK,SACLqZ,EAAQ,OACRd,EAAM,eACNsD,EAAc,iBACdf,EAAgB,QAChB6oB,EAAO,WACPI,GACAL,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,MACFjd,EAAK,SACLqZ,EAAQ,OACRd,EAAM,eACNsD,EAAc,YACdhB,GACH,QACD8oB,EAAO,WACPI,GACHrL,EAAA,MAAM,CACH14B,QACAqZ,WACAd,SACAsD,iBACAf,iBAA6B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaC,iBAC/B6oB,UACAI,aACH,KACKq5C,EAAkC,QAAX7kE,EAAmB,SAAM,IAChD8kE,EAAsBr3C,iBAAyB,MAC/Cs3C,EAAoBxzB,mBAAQ,IACvB/lB,EACH,eACAnkC,GAC4B,kBAAVA,EAAqB,GAAKA,EAAMie,MAAM,aAC/C/G,KAAIC,GAAS,GAAGA,IAAQukB,SACxBjP,QAAOtV,GAA0B,kBAAVA,GAAsBA,EAAM6G,OAAS,KAErE,aAEL,CAACmmB,IACEw5C,EAAuBt3C,uBAAaxoB,GAAWkmB,GAAQmC,IAClD,IAAKA,EAAajqB,eAAgB4B,EAAE4mB,OAAOqyB,aAClD,CAAC/yB,IAaLkyB,8BAAoBL,GAAK,MACrBiL,SAAU7nC,IAAsB,IAAD4kD,EAAA,IAApB,YAAE5iE,GAAage,EAClBhe,IAAwC,QAA3B4iE,EAAAH,EAAoBl5C,eAAO,IAAAq5C,GAA3BA,EAA6B/c,SAAS7lD,EAAYxF,KAAKgoE,IAAsB,MAItG,MAAMK,EAAyB,SAAbpkE,EACZ8D,GAAa,CAAEnd,UACX,2BACA,sBAC4B,OAAhC2D,EAAY0V,GAAUzZ,MAClB,sBACA,2BACJ89E,EAAmB,QAAXnlE,EACd,OAAOg5C,eAAC2rB,GAAgC,CAACn5E,UAAW,+BAA+BwU,IAAS8Z,SAAA,CACxF9uB,cAACm0E,GAAa,CAACliB,IAAK6nB,EAChBrD,YAAazjD,EAASknD,GACtBphE,GAAG,eACHwlD,aAAcn+B,GAAQzM,WAAWha,KAAKrC,YAAYxF,KAAKgoE,GACvDrqB,SAAUuqB,EACV5G,aAAcA,IAEjBgH,GAASn6E,cAACgwD,KAAO,CACdtK,QAAS1yB,EAAS,iCAClB+9B,iBAAiB,uBAAsBjiC,SAEvC9uB,cAACkzD,KAAQ,CACL1yD,UAAU,qBACVgvD,SAAUwqB,EACV7mB,QAAS76C,EAAewW,SAEvBkE,EAAS,mCAGlBhzB,cAACyyD,GAAU,CAACjyD,UAAU,iBAAiBnE,MAAO,GAAGkb,IAC7Ci4C,SAAUnzD,GA/CgBA,KAC9B+jC,GAAQmC,IACG,IACAA,EACHjrB,YAAa,IACNirB,EAAYjrB,YACfC,iBAAkBlb,MAG5B,EAsCqB+9E,CAAyB/9E,GAC5C81D,WAAYgT,GAA4Br2C,SAExCk/B,eAAA,QAAAl/B,SAAA,CACKkE,EAAS,wBAAwB,IAAChzB,cAAC8wD,GAAW,CAC3C/Y,QAAS/3C,cAACm0D,GAAiB,CAAArlC,SAAEkE,EAAS,mCAIlDhzB,cAACy1D,GAAoB,MACU,IC/IjC4kB,GAAmChtD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkD7C0oB,GAAkB,CACpB,CAAEzuD,IAAK,UAAW0uD,IAAK,CAAC,IAAK,IAAK,MAClC,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,EAAG,EAAG,IAC9B,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,IAAK,EAAG,IAChC,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,IAAK,IAAK,IAClC,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,EAAG,IAAK,IAChC,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,EAAG,IAAK,MAChC,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,EAAG,EAAG,MAC9B,CAAE1uD,IAAK,UAAW0uD,IAAK,CAAC,IAAK,EAAG,OAM9BC,GAAoBx1D,IAGA,IAHC,MACvB3oB,EAAQ,GAAE,SACVmzD,GACgBxqC,EAChB,MAAOy1D,EAAaC,GAAkBltB,mBAASnxD,IACxCs+E,EAAeC,GAAoBptB,oBAAS,KACxC,CACH3hC,IAAKF,GAAckB,KAAKxwB,GAASA,EAAQ,UACzCk+E,IAAK3uD,GAAUvvB,GAAO,OA2B9B,OAvBA+mC,qBAAU,KACN,MAAMsT,EAAiB+jC,EAAY3lD,WAAW,KAAO2lD,EAAc,IAAIA,IAEnE9uD,GAAckB,KAAK6pB,KACnBgkC,EAAehkC,GACfkkC,EAAiB,CACb/uD,IAAK6qB,EACL6jC,IAAK3uD,GAAU8qB,GAAgB,KAE3B,OAAR8Y,QAAQ,IAARA,KAAW9Y,GACf,GAGD,CAAC+jC,IAEJr3C,qBAAU,KACNs3C,EAAer+E,GACfu+E,EAAiB,CACb/uD,IAAKF,GAAckB,KAAKxwB,GAASA,EAAQ,UACzCk+E,IAAK3uD,GAAUvvB,GAAO,IACxB,GACH,CAACA,IAEG2xD,eAACqsB,GAAgC,CAAAvrD,SAAA,CACpC9uB,cAAA,OAAKQ,UAAU,aAAYsuB,SACtBwrD,GAAgB/mE,KAAI4hB,IAAmB,IAAlB,IAAEtJ,EAAG,IAAE0uD,GAAKplD,EAE9B,MAAM0lD,GAAqB,IAATN,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,KAAQ,IAClE,UACA,UAEN,OAAOv6E,cAAA,OAAeQ,UAAU,cAAc+iC,MAAO1X,EAAKrD,MAAO,CAAE4tC,gBAAiBvqC,GAAOujC,QAASA,IAAc,OAARI,QAAQ,IAARA,OAAQ,EAARA,EAAW3jC,GAAKiD,SACrH6rD,EAAc9uD,IAAIsM,gBAAkBtM,GAAO7rB,cAAA,OACxCQ,UAAU,aACVgoB,MAAO,CACH4tC,gBAAiBykB,MAJZhvD,EAOX,MAGdmiC,eAAA,OAAKxtD,UAAU,cAAasuB,SAAA,CACxB9uB,cAAA,OAAKQ,UAAU,2BAA2BgoB,MAAO,CAAE4tC,gBAAiBukB,EAAc9uD,OAClF7rB,cAAC08D,KAAK,CACFj0C,KAAK,QACLpsB,MAAOo+E,EACPjrB,SAAUt1C,IACNwgE,EAAexgE,EAAE4mB,OAAOzkC,MAAM,SAIX,EAGjCy+E,GAA2BztD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAgCrCmpB,GAAwB1tD,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAsDlCopB,GAAmB,CACrBviE,gBAAiB,CACbwiE,QAAS,kBACTC,aAAc,cACd76E,SAAU,yCAEdqY,kBAAmB,CACfuiE,QAAS,oBACTC,aAAc,gBACd76E,SAAU,2CAEdkY,cAAe,CACX0iE,QAAS,gBACTC,kBAAcvgE,EACdta,SAAU,uCAEdmY,cAAe,CACXyiE,QAAS,gBACTC,kBAAcvgE,EACdta,SAAU,uCAEdsY,eAAgB,CACZsiE,QAAS,iBACTC,kBAAcvgE,EACdta,SAAU,yCAGL86E,GAAkBA,KAC3B,MAAMnoD,EAAWQ,MACX,YACFlc,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,QACjB0nB,EAAO,cACP7nB,EAAa,cACbC,GACA2nB,GAAQw0B,uBAAWt/B,IAAA,IACnB3b,MAAM,YACFpC,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,cACjBH,EAAa,cACbC,GACH,QACD4nB,GACH/K,EAAA,MAAM,CACH/d,cACAmB,kBACAE,iBACAlB,gBACAiB,oBACA0nB,UACA7nB,gBACAC,gBACH,KAEK4iE,EAAY,CACd,CACIxwD,KAAMowD,GAAiBviE,gBACvBpc,MAAOoc,EACP4iE,WAAY/jE,GAEhB,CACIsT,KAAMowD,GAAiBtiE,kBACvBrc,MAAOqc,EACP2iE,WAAY5jE,GAEhB,CACImT,KAAMowD,GAAiBziE,cACvBlc,MAAOkc,GAEX,CACIqS,KAAMowD,GAAiBxiE,cACvBnc,MAAOmc,GAEX,CACIoS,KAAMowD,GAAiBriE,eACvBtc,MAAOsc,IAGf,OAAO3Y,cAACkxD,KAAO,CACX+B,QAAS,CAAC,SACVG,UAAU,aAEVrC,iBAAiB,mDACjBhZ,QAAS/3C,cAAA,OAAKQ,UAAU,yBAAwBsuB,SAC5C9uB,cAAC+6E,GAAqB,CAACv6E,UAAU,sBAAqBsuB,SACjDssD,EAAU7nE,KAAI4iB,IAAkC,IAAjC,KAAEvL,EAAI,MAAEvuB,EAAK,WAAEg/E,GAAYllD,EACvC,MAAM,QAAE8kD,EAAO,SAAE56E,EAAQ,aAAE66E,GAAiBtwD,GACrC0wD,EAAQ75E,EAAWP,EAAWq6E,GAAUl/E,GACzC,OAAEmb,GAAqB,OAAV6jE,QAAU,IAAVA,IAAc,CAAC,EAElC,OAAOrtB,eAAA,OAAmBxtD,UAAU,gBAAesuB,SAAA,CAC/Ck/B,eAAA,MAAIxtD,UAAW,wBAAuB86E,EAAS,GAAK,YAAaxsD,SAAA,CAC7D9uB,cAAA,QAAA8uB,SACKkE,EAAS3yB,KAEdL,cAACkzD,KAAQ,CACLC,QAASmoB,EACT9rB,SAAUt1C,IACNkmB,GAAQmC,IACJ,MAAMi5C,EAAathE,EAAE4mB,OAAOqyB,QAE5B,MAAO,IACA5wB,EACH,CAAC04C,GAAU,CAACO,KAAen/E,EAAM8pB,MAAM,IAC1C,GACH,EACJ2I,SACJkE,EAAS,sCAEdsoD,GAAUttB,eAAA,OAAKxtD,UAAU,uBAAsBsuB,SAAA,CACzB,kBAAXtX,GAAuBxX,cAAAiuD,WAAA,CAAAn/B,SAC3Bk/B,eAAA,MAAIxtD,UAAU,cAAasuB,SAAA,CACvB9uB,cAAA,QAAMQ,UAAU,QAAOsuB,SAAEkE,EAAS,uCAClChzB,cAACyyD,GAAU,CACPjyD,UAAU,qBACVnE,MAAOmb,EACP26C,WAAY,CACR,CAAE71D,MAAO0D,cAACC,IAAmB,IAAK5D,MAAO,GACzC,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,IAE1BmzD,SAAUnzD,IACN+jC,GAAQmC,IACJ,MAAMk5C,EAAWP,EAAe,IAAK34C,EAAY24C,SAAkBvgE,EACnE,OAAK8gE,GAAaP,GAElBO,EAASjkE,OAA0B,kBAAVnb,EAAqBA,EAAQ,EAC/C,IACAkmC,EACH,CAAC24C,GAAeO,IALmBl5C,CAMtC,GACH,SAKlBviC,cAAA,MAAA8uB,SACI9uB,cAACkzD,KAAQ,CACL1yD,UAAU,kBACV2yD,QAASjyD,EACTsuD,SAAUt1C,IACNkmB,GAAQmC,IACJ,MAAMm5C,EAAcxhE,EAAE4mB,OAAOqyB,QAE7B,MAAO,IACA5wB,EACH,CAAC04C,GAAU,IAAI5+E,EAAM8pB,MAAM,EAAG,GAAIu1D,EAAar/E,EAAM,IACxD,GACH,EACJyyB,SAEF9uB,cAAA,QAAMQ,UAAU,QAAOsuB,SAAEkE,EAAS,uCAGzC9xB,GAAalB,cAACw6E,GAAiB,CAC5Bn+E,MAAOk/E,EACP/rB,SAAUmsB,GAAev7C,GAAQmC,IACtB,IACAA,EACH,CAAC04C,GAAU,IAAI5+E,EAAM8pB,MAAM,EAAG,GAAIw1D,SAI9C37E,cAAA,MAAA8uB,SAAKkE,EAAS,kCACdhzB,cAACgsE,KAAa,CACVC,OAAQ7yD,GACRzZ,MAAgB,OAAT8B,QAAS,IAATA,IAAa,GACpB+lE,iBAAkB7nE,IACdygC,GAAQmC,IACG,IACAA,EACH,CAAC04C,GAAU,CAAC5+E,EAAM,GAAIsD,EAAMksB,OAAQxvB,EAAM8pB,MAAM,EAAG,OAEzD,SApFD80D,EAwFX,QAGXnsD,SAEPk/B,eAAC8sB,GAAwB,CAACt6E,UAAU,qBAAoBsuB,SAAA,CACpD9uB,cAAA,OAAKQ,UAAU,kBAAiBsuB,SAC3BssD,EAAU7nE,KAAIgjB,IAAkC,IAAjC,KAAE3L,EAAI,MAAEvuB,EAAK,WAAEg/E,GAAY9kD,EACvC,MAAM,QAAE0kD,GAAYrwD,GACb0wD,EAAQ75E,EAAWP,EAAWq6E,GAAUl/E,GACzC,OAAEmb,GAAqB,OAAV6jE,QAAU,IAAVA,IAAc,CAAC,EAElC,OAAOr7E,cAAA,OACHQ,UAAU,6BACVgoB,MAAO,CACH7oB,MAAoC,KAAnB,OAAT8B,QAAS,IAATA,IAAa,IAAI4Y,QAAiBihE,EAAqB75E,EAAZ,UACnDm6E,WAAaN,GAAUp6E,EAAa,WAAWq6E,IAAW,QAC5DzsD,SAEAtX,GAAU8jE,EAAUttB,eAAA,OAAAl/B,SAAA,CAAK,IAAEtX,KAAgB,QAPhCyjE,EAQX,MAGdj7E,cAAA,QAAMQ,UAAU,mBAAkBsuB,SAAEkE,EAAS,8CAE3C,E,OCtXP,MAAM6oD,GAAiBnpB,sBAA8C,CAAA1tC,EAMzDgzC,KAAkB,IANwC,cACzEhe,EAAa,iBACbC,EAAgB,aAChBye,EAAY,UACZC,EAAS,eACTH,GACaxzC,EACb,MAAMgO,EAAWQ,MACX,OACFxe,EAAM,MACNvY,EAAK,KAAE6Y,EAAI,OAAEC,EAAM,QAAElW,EAAO,cAC5BoW,EAAa,UAAEC,EAAS,WACxBtW,EAAU,OACV4X,EAAM,UACNpB,EAAS,WACT4qB,EAAU,QACVJ,GACAD,GAAQw0B,uBAAWx/B,IAAA,IACnBzb,MAAM,OACF1E,EAAM,MACNvY,EAAK,KAAE6Y,EAAI,OAAEC,EAAM,QAAElW,EAAO,cAC5BoW,EAAa,UAAEC,EAAS,WACxBtW,EAAU,OACV4X,EAAM,UACNpB,GACH,WACD4qB,EAAU,QACVJ,GACHjL,EAAA,MAAM,CACHngB,SACAvY,QAAO6Y,OAAMC,SAAQlW,UACrBoW,gBAAeC,YACftW,aACA4X,SACApB,YACA4qB,aACAJ,UACH,MACK,QAAEqB,GAAYT,MACd,mBAAEK,EAAkB,0BAAEC,GAA8BG,EAEpDq6C,EAAiBr5C,iBAA2B,MAE5CojB,EAAYjsC,GAAa,CAAEnd,WAC1Bs/E,EAAuBC,GAA4BxuB,mBAAS,GAC7DyuB,EAAiB11B,mBAAQ,KAAM21B,O1BtEP9/E,E0BsEyB,CACnD6B,OAAQ+0B,EAAS,2BACjBlwB,KAAMkwB,EAAS,yBACfvwB,SAAUuwB,EAAS,8B1BxEhB9sB,EAAY9J,GAAYmX,KAAIyR,IAAA,IAAC,MAAErlB,EAAK,KAAEhC,EAAI,MAAErB,GAAO0oB,EAAA,MAAM,CAC5D1oB,MAAgB,WAATqB,EAAoBqC,cAACC,IAAmB,IAAM3D,EACrDD,MAAOsB,EACPwqB,MAAO,CACHK,MAAO,CACH7oB,QACAklE,WAAY,SAGvB,IAV6BzoE,K0B0E5B,GAAE,CAAC42B,IAECmpD,EAAqB15C,iBAA2B,MAChD25C,EAAkB35C,iBAAyB,MAC3C45C,EAAyB55C,iBAA6B,MACtD65C,EAAwB75C,iBAA8B,MACtD85C,EAAsB95C,iBAA4B,MAClD+5C,EAA4B/5C,iBAAkC,MAC9Dg6C,EAAsBh6C,iBAA4B,OAEjDi6C,EAAcC,GAAmBnvB,mBAGrC,CACC10C,GAAI,GACJokD,SAAUA,SAkBR0f,EAAar2B,mBAAQ,IAAM/lB,EAAW,SAAS,CAACA,IAChDq8C,EAAiBt2B,mBAAQ,IAAM/lB,EAAW,WAAW,CAACA,IACtDs8C,EAAgBp6C,uBAAarjC,GAAyB+gC,GAAQ6S,IAAI,IAAUA,EAAM5zC,eAAa,CAAC+gC,IAChG28C,EAAkBx2B,mBAAQ,IAAM/lB,EAAW,cAAc,CAACA,IAC1Dw8C,EAAkBt6C,uBAAY,CAAC7jC,EAAqBxC,KACtD+jC,GAAQmC,IACG,IACAA,EACH9sB,cAAe5W,EACf6W,UAAWrZ,KAEjB,GACH,CAAC+jC,IAEE68C,EAAgB12B,mBAAQ,I1BhFF22B,EAACloE,EAAgB5Y,EAAoCilC,IAAgC5hC,EAChH8T,KAAI8oB,IAAA,IAAC,KAAE1+B,EAAI,QAAE+B,EAAO,WAAEE,GAAYy8B,EAAA,MAAM,CACrC//B,MAAOqB,IAAS6B,EACVQ,cAACC,IAAmB,IACpBD,cAACgwD,KAAO,CAACtK,QAAStpD,EAAWsD,GAASovB,SACpC9uB,cAAA,OACIS,IAAKrE,EAAWsD,GAChBgB,IAAK,yCAAwDsU,KAAUrX,EAAKo2B,wBAGxF13B,MAAOsB,EACPiC,aACH,IACAkpB,QAAO6T,IAAA,IAAC,WAAE/8B,GAAY+8B,EAAA,OAAoB,IAAf/8B,GAAwBA,IAAeyhC,CAAkB,I0BmEjD67C,CAAiBloE,EAAQge,EAAUqO,IAAqB,CAACrsB,EAAQge,EAAUqO,IAyC/G,OAvCA+B,qBAAU,KAAO,IAAD+5C,EACU,QAAtBA,EAAArB,EAAel7C,eAAO,IAAAu8C,GAAtBA,EAAwBjgB,SAAS,CAAEn7D,KAAM2T,EAAU3T,MAAO,GAC3D,CAAC2T,IAEJ0tB,qBAAU,KAAO,IAADg6C,EACW,QAAvBA,EAAAhB,EAAgBx7C,eAAO,IAAAw8C,GAAvBA,EAAyBlgB,SAAS79D,EAAQ,GAC3C,CAACA,IAEJizD,8BAAoB0F,GAAc,MAC9B9kC,UAAWA,KAAA,IAAAmqD,EAAAC,EAAAC,EAAAC,EAAA,OAA8C,QAAxCH,EAA2B,QAA3BC,EAACnB,EAAmBv7C,eAAO,IAAA08C,OAAA,EAA1BA,EAA4BpqD,mBAAW,IAAAmqD,MACb,QADsBE,EACnC,QADmCC,EAC1DpB,EAAgBx7C,eAAO,IAAA48C,OAAA,EAAvBA,EAAyBtqD,mBAAW,IAAAqqD,IAAU,EACtDE,cAAe/jE,IAAS,IAADgkE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnBhC,GAAyBxhD,GAAOA,EAAM,IACtC,MAAM,KACF78B,EAAI,IACJqI,EAAG,QAAEoQ,EAAO,QAAEH,EAAO,UAAEE,EAAS,WAChCO,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,EAAgB,QAC5DxX,EAAO,MACPsY,EAAK,eACLT,EAAc,YACdG,EAAW,OACXK,EAAM,IACNE,EAAG,IAAEC,EAAG,QACRQ,EAAO,SAAEP,GACT4B,EAEsB,QAA1BgkE,EAAAvB,EAAmBv7C,eAAO,IAAA88C,GAA1BA,EAA4BxgB,SAAS,CAAEl3D,MAAKoQ,UAASH,UAASE,cACvC,QAAvBwnE,EAAAvB,EAAgBx7C,eAAO,IAAA+8C,GAAvBA,EAAyBzgB,SAAS,IAC3B79D,EACHqX,aAAYI,iBAAgBH,iBAAgBE,qBAElB,QAA9B+mE,EAAAvB,EAAuBz7C,eAAO,IAAAg9C,GAA9BA,EAAgC1gB,SAAS,CAAEv/D,OAAMga,UACpB,QAA7BkmE,EAAAvB,EAAsB17C,eAAO,IAAAi9C,GAA7BA,EAA+B3gB,SAAS,CAAEhmD,mBACf,QAA3B4mE,EAAAvB,EAAoB37C,eAAO,IAAAk9C,GAA3BA,EAA6B5gB,SAASxlD,GACL,QAAjCqmE,EAAAvB,EAA0B57C,eAAO,IAAAm9C,GAAjCA,EAAmC7gB,SAAS,CAAE7lD,gBACnB,QAA3B2mE,EAAAvB,EAAoB77C,eAAO,IAAAo9C,GAA3BA,EAA6B9gB,SAAS,CAAEtlD,MAAKC,MAAKQ,UAASP,YAAW,MAIvEk2C,eAAA,OACHxtD,UAAW,CAAC,kBAA8B,QAAXwU,EAAmB,YAAc,aAAanD,KAAK,KAAKid,SAAA,CAEvF9uB,cAAC00D,GAAS,IACV10D,cAAA,SACAA,cAACq0D,GAAW,IAEZrG,eAAA,OAAKxtD,UAAU,qBAAoBsuB,SAAA,CAC/B9uB,cAACw1E,GAAsB,CAACh1E,UAAU,eAAenE,MAAO2Y,EAAQw6C,SA9ElDyuB,IAClB79C,GAAQmC,IAAgB,IAAD27C,EAAAC,EAAAC,EAAAC,EAAAC,EACnB,MACMC,EAAoBhxD,GAAiBgV,EADxB,GAAG07C,MAGhB,KAAEtgF,EAAI,MAAEga,EAAK,OAAED,EAAM,YAAEL,EAAW,SAAES,EAAQ,QAAEO,EAAO,eAAEnB,GAAmBqnE,EAOhF,OAN8B,QAA9BL,EAAA7B,EAAuBz7C,eAAO,IAAAs9C,GAA9BA,EAAgChhB,SAAS,CAAEv/D,OAAMga,UACtB,QAA3BwmE,EAAA5B,EAAoB37C,eAAO,IAAAu9C,GAA3BA,EAA6BjhB,SAASxlD,GACT,QAA7B0mE,EAAA9B,EAAsB17C,eAAO,IAAAw9C,GAA7BA,EAA+BlhB,SAAS,CAAEhmD,mBACT,QAAjCmnE,EAAA7B,EAA0B57C,eAAO,IAAAy9C,GAAjCA,EAAmCnhB,SAAS,CAAE7lD,gBACnB,QAA3BinE,EAAA7B,EAAoB77C,eAAO,IAAA09C,GAA3BA,EAA6BphB,SAAS,CAAE7kD,UAASP,aAE1CymE,CAAiB,GAC1B,EAiE0FpsB,WAAYyS,GAAiB91C,SACjH9uB,cAAA,QAAA8uB,SAAOkE,EAAS,0BAEpBhzB,cAACyyD,GAAU,CAACjyD,UAAU,aAAanE,MAAOiZ,EAAMk6C,SAAUotB,EAAYzqB,WAAY8pB,EAAentD,SAC7F9uB,cAAA,QAAA8uB,SAAOkE,EAAS,wBAEnBsO,GAA6BthC,cAACgvE,GAAa,CACxCxuE,UAAU,kBACVnE,MAAOkZ,EACPi6C,SAAUqtB,EACV1qB,WAAY2S,GAAiBh2C,SAE7B9uB,cAAA,QAAA8uB,SAAOkE,EAAS,6BAIvBqO,GAAsB2sB,eAAA,OAAKxtD,UAAU,oBAAmBsuB,SAAA,CACrDk/B,eAAA,SAAOxtD,UAAU,yCAAwCsuB,SAAA,CACpDkE,EAAS,sBAAsB,IAAChzB,cAAC8wD,GAAW,CACzC/Y,QAAS/3C,cAACm0D,GAAiB,CAAArlC,SAAEkE,EAAS,+BAG9ChzB,cAACmwE,GAAY,CAACle,IAAKmqB,EACf9d,aAAcj/D,EACdg5D,gBAAiBpe,EACjBuV,SAAUstB,EACVnkB,UAAWA,EACXD,aAAcA,EACdF,eAAgBA,OAIxBx4D,cAACwuE,GAAU,CAACC,gBAAiBp3D,IAAW,IAAAmnE,EAAA,OAAqC,QAArCA,EAAIhC,EAA0B57C,eAAO,IAAA49C,OAAA,EAAjCA,EAAmCthB,SAAS,CAAE7lD,eAAc,IAExG22C,eAACunB,GAA6B,CAAC/0E,UAAU,sBAAqBsuB,SAAA,CAC1D9uB,cAAC43E,GAAiB,CAAC3lB,IAAKoqB,EACpBlJ,aAAcwJ,IAElB38E,cAACqsE,GAAe,CAA6Bpa,IAAK6pB,EAC9CxP,UAAWh7D,GAAa7U,GACxB8vE,YAAa92D,EACb6oD,aAAc5oD,EACd4rB,0BAA2BA,EAC3BkuB,SAAUwtB,GALQjB,GAOtB/7E,cAAC0xE,GAAkB,CACf16D,OAAQA,EACR6uC,UAAWA,EACXxkB,mBAAoBA,OAG5B2sB,eAAA,OAAKxtD,UAAU,YAAWsuB,SAAA,CACtBk/B,eAAA,OAAKxtD,UAAU,kBAAiBsuB,SAAA,CAC5B9uB,cAACyyD,GAAU,CACPjyD,UAAU,mCACVnE,MAAOuZ,EACP45C,SAAUutB,EACV5qB,WAAY8qB,EAAcnuD,SAE1B9uB,cAAA,QAAA8uB,SAAOkE,EAAS,8BAGlB5zB,GAAciiC,IACTrhC,cAAC64E,GAAkB,CAAC5mB,IAAKqqB,EACxBj7C,mBAAoBA,EACpBC,0BAA2BA,EAC3B6xC,aAAcwJ,IAGtB38E,cAAC45E,GAAsB,CAAC3nB,IAAKuqB,EAA2BrJ,aAAcwJ,IAEtE3uB,eAAA,OAAAl/B,SAAA,CACIk/B,eAAA,OAAKxtD,UAAU,4BAA2BsuB,SAAA,CACtC9uB,cAAC++D,GAAe,CAACv+D,UAAU,mBAAkBsuB,SACxCkE,EAAS,wBAEbqO,EAAqBrhC,cAACm7E,GAAe,IAAMn7E,cAAA,UAC5CA,cAACqlE,GAAU,CACPC,SAAUoX,EAAa5jE,GACvBysD,OAAQmX,EAAaxf,cAG7Bl9D,cAACo0E,GAAgB,CAACniB,IAAKsqB,EAAqBpJ,aAAcwJ,OAG9D38E,cAAC01E,GAAgB,CAACzjB,IAAKwqB,EACnB52B,UAAWA,EACXxkB,mBAAoBA,EACpB8xC,aAAcwJ,OAGtB38E,cAAA,OAAKQ,UAAU,mBAAkBsuB,SAC7B9uB,cAACg3E,GAAe,CAAC/kB,IAAKkqB,EAClB9jB,gBAAiBre,EACjB1Y,0BAA2BA,EAC3Bk3B,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,WAIxB,I,cClSV,MAGI97D,OAAQk9C,GACRn9C,MAAOk9C,GAAS,WAChB58C,IACAP,EACE+hF,GANoB,GAMe5kC,GACnC6kC,GAAkBrxD,KAAOukC,GAAG;;;;;;;;;cAPR;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iBAAA;;;;;0BADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAmNV+sB,GAAY35D,IAUP,IAAD45D,EAAAC,EAAAC,EAAAC,EAAA,IAVS,MACtB90D,EAAK,KACLvQ,EAAI,OACJqY,EAAM,SACNiB,EAAQ,YACRgsD,EAAW,SACX5Y,EAAQ,SACR6Y,EAAQ,MAERz2D,GACQxD,EACR,MAAOk6D,EAAeC,GAAoB3xB,oBAAkB,IACtD,IACFxnD,EAAG,QACHoQ,EAAO,QACPH,EAAO,OACPC,EAAM,UACNC,EAAS,IACTyB,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,eACdH,EAAc,cACdC,EAAa,iBACbC,EAAgB,eAChBvX,EAAc,SACdwW,EAAQ,IACR+B,EAAG,OACH7C,EAAM,MACNvY,EAAK,cACLga,EAAa,OACbO,EAAM,WACN5X,EAAU,QACV2X,EAAO,KACPpZ,EAAI,QACJ0B,EAAO,cACP4X,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,MAChBQ,EAAK,KACL5B,EAAI,UACJF,EAAS,YACTwB,GACAqC,EACE0lE,EAAqBjgE,GAAkBxhB,GACvC0hF,EAA0C,SAAlBpoE,EACxB7X,EACI,QACA3C,EACJwa,EACAqoE,EAAkC,YAAdnpE,EACnBnQ,EAEGiQ,EADA,kCAEJjQ,EACAu5E,EAA+C,YAArB1oE,EACzBH,EAEGC,EADA,gCAEJD,EACA8oE,GAAsC,SAAb1pE,EAAsB+D,GAAqBpd,GAASqZ,EAC7EwnC,GAAgD,OAA3BkiC,GACrB3pE,EACA2pE,GACA35B,GAAYjsC,GAAaF,GACzB0gC,GAAezgC,GAAgBD,GAC/B89B,GAAkC,SAAlBvgC,GAA4B7X,KACzCwY,GAAOC,GAAQb,GAAUD,EAAQsD,QACpCwrC,GACA45B,GAAoBpoE,EAAYxF,KAAK,OACrC6tE,GAAmBvgF,EAAuBC,EAAYC,IACtD,eACFX,GAAc,cACdD,IACAihF,GAEJ,OAAO1xB,eAAC0wB,GAAe,CACnBl+E,UAAWusB,GACP,WACAgF,EAAS,SAAW,GACpB9H,EAAQ,IAAM,EAAI,oBAAsB,IAE5CmlC,QAASA,IAAMgX,EAAS1sD,GACxB8O,MAAOA,EAAMsG,SAAA,CAEbk/B,eAAA,OACIxtD,UAAU,YAAWsuB,SAAA,CAErB9uB,cAAA,OAAKQ,UAAU,uBACXgoB,MAAO,CACH4tC,gBAAoC,QAArBwoB,EAAEttE,GAAa7U,UAAM,IAAAmiF,OAAA,EAAnBA,EAAqBntE,qBACtCksD,gBAAoC,QAArBkhB,EAAEvtE,GAAa7U,UAAM,IAAAoiF,OAAA,EAAnBA,EAAqBjtE,wBAG9C5R,cAAA,OAAKQ,UAAU,0BACXgoB,MAAO,CACH4tC,gBAAoD,QAArC0oB,EAAExtE,GAAa+tE,UAAsB,IAAAP,OAAA,EAAnCA,EAAqCrtE,qBACtDksD,gBAAoD,QAArCohB,EAAEztE,GAAa+tE,UAAsB,IAAAN,OAAA,EAAnCA,EAAqCntE,wBAG9Do8C,eAAA,KACIxtD,UAAU,qBACVof,KAAM0/D,EACNx+C,OAAO,SACPwzB,IAAI,aACJlF,QAASl1C,GAAKA,EAAE6Q,iBAChBvC,MAAO,CACH7rB,MAAO8B,GAAgBggF,GACvB7hF,OAAQ8B,GAAiB+/E,GACzBzsE,KAAM8nC,GAAaD,IAAa,EAAI,EAAI4kC,GACxCxsE,MAAO4nC,GAAYp7C,IAAiB,EAAIggF,GACxCroB,gBAAiB94D,GACnBwxB,SAAA,CAEDrY,GAAiBzW,cAAC2/E,GAAY,CAC3Bn/E,UAAU,iBACVo/E,QAASL,EACT5hF,KAAMyhF,EAAqB,gBAC3B7iF,IAAKqa,EACLogD,KAAMlgD,EACN4oE,iBAAkBvgF,EAAuBC,EAAY,IAC9CC,EACHtB,UAA8B,QAAnBuB,MAGnBU,cAAC2/E,GAAY,CACTn/E,UAAU,iBACVo/E,QAASN,EACT3hF,KAAMyhF,EACN7iF,IAAK2Z,EACL8gD,KAAM5gD,EACNspE,iBAAkBA,QAGzB1oE,GAAU,IAAI4E,MAAM,IAAIrI,KAAI,CAAC0wC,EAAGh6B,IACf,IAAVA,EAAoB,KACjBjqB,cAAA,OACHQ,UAAWusB,GACP,iDAAiD9C,EAAQ,IACzDlT,EAAQiD,SAAS,GAAGiQ,EAAQ,KAAO,iBAAmB,IAC1DzB,MAAO,CAAEwyC,UAAW,UAAU9oD,GAAe+X,qBAAyB9X,GAAe8X,UAJxE,QAAQA,OAO5B7qB,GAAcY,cAAA,OAAKQ,UAAU,4BAA2BsuB,SAAE1X,IAC1DhY,GAAcY,cAAA,OAAKQ,UAAU,2BAA0BsuB,SAAE3X,OAE9D62C,eAAA,OAAKxtD,UAAU,sBAAqBsuB,SAAA,CAChC9uB,cAAA,OAAKQ,UAAU,qBAAoBsuB,SAC9BswD,IAELpxB,eAAA,OAAKxtD,UAAU,sBAAqBsuB,SAAA,CAC/BsrB,IAA8B,SAAdxkC,EACX,KACA5V,cAAA,OAAKQ,UAAU,iBACbE,IAAK,yCAAwDsU,KAAUY,EAAUme,oBACjFtzB,IAAI,SAEX4W,EAAYgD,OAAS,GAAKra,cAAA,OAAKQ,UAAU,WAAUsuB,SAAE2wD,KAC1B,OAA3BD,IAAmCx/E,cAAA,OAAKQ,UAAU,aAChDwW,GAAUsmC,KAAuBx9C,GAAsC,SAA3B0/E,IAAsCx/E,cAAA,OACjFQ,UAAU,YACVE,IAAK,8CAA6D48C,GAAmBvpB,oBACrFtzB,IAAI,UAELuW,IAAWojC,IAA2C,OAA3BolC,IAAoCx/E,cAAA,QAC9DQ,UAAWusB,GAAW,wBAAyB0yD,GAAkB1rD,cAAc/Z,SAAS,SAAW,QAAU,IAAI8U,SAEhG,kBAAT/Y,EACFA,EACS,KAATA,EACI,IAAIA,KACJ,QAGlBi4C,eAAA,OAAKxtD,UAAU,qBAAoBsuB,SAAA,CAC9B0oB,IAAgBx3C,cAAA,OAAA8uB,SACZlX,IAEJ4/B,GAAex3C,cAAA,OAAA8uB,SAAK,cAAsB9uB,cAAA,OAAA8uB,SAAK,SAC/C0oB,IAAgBx3C,cAAA,OAAA8uB,SACZ9X,EAAS,QAAQD,EAAQsD,SAAWxC,IAExCF,GAAS3X,cAAA,OAAKQ,UAAU,SAAQsuB,SAAEnX,UAG3C3X,cAAA,OAAKQ,UAAWusB,GAAW,cAAemyD,EAAgB,gBAAkB,IAAK9vB,QAASl1C,GAAKA,EAAEmQ,kBAAkByE,SAC/Gk/B,eAAA,OAAKxtD,UAAU,mBAAkBsuB,SAAA,CAC7B9uB,cAACgwD,KAAO,CAACoD,UAAU,OAAO7vB,MAAOvQ,EAAS,oCAAoClE,SAC1E9uB,cAACohE,KAAY,CAAC5gE,UAAU,iCAAiC4uD,QAASA,IAAM4vB,EAAYtlE,OAKxF1Z,cAAC6/E,KAAU,CACPzsB,UAAU,OACV7vB,MAAOvQ,EAAS,+BAChBk7C,gBAAiB9xC,GAAU+iD,EAAiB/iD,GAC5C0jD,UAAWA,IAAMb,EAASvlE,EAAKZ,IAC/Bs1C,OAAQp7B,EAAS,uCACjBq7B,WAAYr7B,EAAS,sCAAsClE,SAE3D9uB,cAACgwD,KAAO,CAACoD,UAAU,OAAO7vB,MAAOvQ,EAAS,iCAAiClE,SACvE9uB,cAAC8vD,KAAa,CAACtvD,UAAU,2CAK3B,EAGhBu/E,GAAyBA,CAC3BrkC,EACAC,EACA+jC,EACAM,EACAzjF,KACE,IAAD44B,EACD,MAAM,SACF/2B,EAAQ,KACRE,EAAI,MACJC,EAAK,cACLE,EAAa,UACbE,GACA+gF,GACE,MACF/iF,EAAK,OACLC,EAAM,EACNyZ,EAAC,EACDC,GAGU,QAFb6e,EAAI54B,EACC,IAAKyjF,EAAUrjF,MAAO,IAAKC,OAAQ,IAAKyZ,EAAG,EAAGC,EAAG,GACjD0pE,SAAQ,IAAA7qD,IAAK,CAAC,EAUd8qD,EAAevkC,IAAoB,OAAL/+C,QAAK,IAALA,IAAS,GAAK,KAC5CujF,EAAgBvkC,IAAsB,OAAN/+C,QAAM,IAANA,IAAU,GAAK,KAE/CujF,EANgB/hF,EAAWqgF,IAMiBwB,GAAgB,EAAI,EAAIA,GAS1E,MAAO,CACHjuE,KAHiC,OAADsE,QAAC,IAADA,IAAK,GAAK,KAA1BqlC,EAAiCwkC,EAIjDluE,MALiC,OAADoE,QAAC,IAADA,IAAK,GAAK,KAAzBqlC,EAAgCykC,EAMjDxjF,MAToB++C,EAAaykC,EAUjCvjF,OAAQL,EATao/C,GATFv9C,EAAWG,EAAQkgF,IAMUyB,GAAiB,EAAI,EAAIA,SAYxCvlE,EACjCqgD,UAAW,gBAzBM58D,IAAaK,EAC5B,GACCo7C,GAAYp7C,GAAiB,EAAIxB,IAwBfwhF,sBAvBJ9/E,EAAYL,GAyBRmgF,QAExB,EAYCkB,GAAetqD,IAQA,IARC,QAClBuqD,EAAO,KACPjiF,EACAq5D,KAAMgpB,EAAQ,UACdx/E,EAAS,IACTjE,EAAG,iBACHmjF,EAAgB,MAChBl3D,GACW6M,EACX,MAAO+qD,EAAcC,GAAmB7yB,mBAAS,iCAC3C8yB,EAAW79C,iBAAyB,OACnC89C,EAAiBC,GAAsBhzB,oBAAS,SAAAizB,EAAAC,EAAAC,EAAAC,EAAA,OAAMb,GAC3B,QADiDU,EAC/D,QAD+DC,EAC/EJ,EAAS1/C,eAAO,IAAA8/C,OAAA,EAAhBA,EAAkBz0B,oBAAY,IAAAw0B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCN,EAAS1/C,eAAO,IAAAggD,OAAA,EAAhBA,EAAkBnpB,qBAAa,IAAAkpB,IAAI,EACnCjB,EACAM,EACAzjF,EACH,IAiCD,OAhCA6mC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAg9C,EAAgBT,EACpB,GACD,KAEI,KACHv8C,GAAW,CAAK,CACnB,GACF,CAACu8C,IAEJx8C,qBAAU,KACN,IAAIC,GAAW,EAaf,OAZAC,YAAW,KACQ,IAADu9C,EAAAC,EAAAC,EAAAC,EAAV39C,GACAm9C,EAAmBT,GACe,QADOc,EACrB,QADqBC,EACrCR,EAAS1/C,eAAO,IAAAkgD,OAAA,EAAhBA,EAAkB70B,oBAAY,IAAA40B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCV,EAAS1/C,eAAO,IAAAogD,OAAA,EAAhBA,EAAkBvpB,qBAAa,IAAAspB,IAAI,EACnCrB,EACAM,EACAzjF,GAER,GACD,KAEI,KACH8mC,GAAW,CAAK,CACnB,GACF,CAAC28C,EAAUN,EAAkBnjF,IAEzByD,cAAA,OAAKiyD,IAAKquB,EACb9/E,UAAWusB,GAAW,WAAYvsB,GAClCE,IAAK0/E,EACL3/E,IAAK9C,EACL6qB,MAAO,IACA+3D,KACA/3D,GAEP+xC,OAAQA,KAAO,IAAD0mB,EAAAC,EAAAC,EAAAC,EACVZ,EAAmBT,GACe,QADOkB,EACrB,QADqBC,EACrCZ,EAAS1/C,eAAO,IAAAsgD,OAAA,EAAhBA,EAAkBj1B,oBAAY,IAAAg1B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCd,EAAS1/C,eAAO,IAAAwgD,OAAA,EAAhBA,EAAkB3pB,qBAAa,IAAA0pB,IAAI,EACnCzB,EACAM,EACAzjF,GACF,GAER,E,wBCjjBN,MAAM8kF,GAAwBh0D,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAuClC0vB,GAAet8D,IAI6B,IAJ5B,KAClBsP,EAAI,MACJrK,EAAK,MACLzB,GACwCxD,EACxC,MAAM,SACFoW,EAAQ,SACRpI,EAAQ,KACRuuD,EAAI,SACJtC,EAAQ,WACRuC,EAAU,YACVxC,EAAW,SACX5Y,GACA9xC,EAEJ,OAAOt0B,cAAC2+E,GAAS,CACb10D,MAAOA,EACPvQ,KAAM6nE,EAAKt3D,GACX8H,OAAQwvD,EAAKt3D,GAAOnR,KAAOsiB,EAC3BpI,SAAUA,EACVgsD,YAAaA,EACb5Y,SAAUA,EACVob,WAAYA,EACZvC,SAAUA,EACVz2D,MAAOA,GACT,EAYOi5D,GAAkBtsD,IAKP,IALQ,SAC5BnC,EAAQ,SACRozC,EAAQ,WACRob,EAAU,gBACVE,GACcvsD,EACd,MAAM,SACFiG,EAAQ,gBACRC,EAAe,WACfuC,EAAU,cACVU,EAAa,YACbxC,GACAZ,GAAYy5B,uBAAWt/B,IAAA,IAAC,SACxB+F,EAAQ,gBACRC,EAAe,WACfuC,EAAU,cACVU,EAAa,YACbxC,GACHzG,EAAA,MAAM,CACH+F,WACAC,kBACAuC,aACAU,gBACAxC,cACH,MACM6lD,EAAaC,GAAkBp0B,mBAAS,GAEzCq0B,EAAqB/oE,IACvB8kB,EAAW9kB,GACX8oE,GAAepnD,GAAOA,EAAM,GAAE,EAwBlC,OArBA4I,qBAAU,KACN,IAAIC,GAAW,EAef,OAdAC,YAAW,KACP,GAAID,GAAYs+C,EAAc,EAAG,CAC7B,MAAM,SAAEvmD,EAAQ,SAAET,EAAQ,YAAE+C,GAAgBxC,GAAYxH,WAClD6M,EAAW5F,EAASmC,MAAKpjB,GAAQA,EAAKZ,KAAOsiB,IACnD,GAAImF,EACA6lC,EAAS7lC,OACN,CAEH,MAAM9I,EAAY,CAAE3e,GAAIC,iBAAWC,MACnC0kB,EAAY,CAACjG,GAAYA,EAAU95B,KACvC,CACJ,IACD,KAEI,KACH0lC,GAAW,CAAK,CACnB,GACF,CAAC+iC,EAAUub,IAEP3zB,eAACqzB,GAAqB,CACzB74D,MAAO,CACHm1C,gBAAiB,0DACnB7uC,SAAA,CAEF9uB,cAAA,OAAKQ,UAAU,iBAAgBsuB,SAC3B9uB,cAAC8hF,KAAS,CAAAhzD,SACLqH,IAAA,IAAC,OAAEv5B,EAAM,MAAED,GAAOw5B,EAAA,OACfn2B,cAAC+hF,KAAI,CACDvhF,UAAU,OACV5D,OAAQA,EACRolF,UAAW3mD,EAAgBhhB,OAC3B4nE,SDpIE,GCqIFC,SAAU,CACNX,KAAMlmD,EACNrI,WACAoI,WACA4jD,YAAa1gD,EACb8nC,SAAUA,EACVob,WAAYA,EACZvC,SAAU4C,GAEdM,cAAe,EACfxlF,MAAOA,EAAMmyB,SAEZwyD,IACE,MAIS,IAA3BjmD,EAAgBhhB,QAAgB2zC,eAAA,OAAKxtD,UAAU,UAASsuB,SAAA,CACrD9uB,cAAA,OAAA8uB,SAAMkE,EAAS,2CACfhzB,cAAA,OAAKQ,UAAU,eAAe4uD,QAAStzB,EAAYhN,SAC9CkE,EAAS,iDAGlBhzB,cAAC80D,KAAM,CACHt0D,UAAU,WACV4uD,QAASsyB,EAAgB5yD,SAExBkE,EAAS,gCAEM,E,wBChK5B,MAAM,MAAEovD,IAAUC,KACZC,GAAqBj1D,KAAOukC,GAAG;;;;EAK/B2wB,GAAal1D,aAAO4mC,GAAW;;;;;;;;;;;;;;;;;;;;;;;EAwB/BuuB,GAAsBn1D,aAAOggC,KAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBAsCvBk1B;;;;;;EAWZE,GAAez9D,IAGA,IAHC,KAClBsP,EAAI,SACJxF,GACW9J,EACX,MAAO66C,EAAkBC,GAAmBtS,oBAAS,GASrD,OAAOQ,eAACu0B,GAAU,CACdnzB,QAASl1C,IATkB6lD,MAUvB7lD,EAAEmQ,kBAVqB01C,EAWDzrC,EAV1B0rC,KAAKD,GACLD,GAAgB,GAChBx8B,YAAW,KACPw8B,GAAgB,EAAM,GACvB,IAM4B,EAC7BhxC,SAAA,CAED+wC,EAAmB7/D,cAAA,OAAKQ,UAAU,mBAAkBsuB,SAAC9uB,cAACigE,KAAa,MAAY,KAC/EnxC,IACQ,EAKJ4zD,GAAgBvtD,IAEP,IAFQ,SAC1BnC,GACYmC,EACZ,MAAOwG,EAAS4xB,GAAcC,oBAAS,GAEvC,OAAOQ,eAAAC,WAAA,CAAAn/B,SAAA,CACH9uB,cAACsiF,GAAkB,CAAC9hF,UAAU,wBAAwB4uD,QAASA,IAAM7B,GAAW,GAAMz+B,SACjFkE,EAAS,0CAEdhzB,cAACwiF,GAAmB,CAChB7mD,QAASA,EACTnR,SAAUA,IAAM+iC,GAAW,GAC3BW,cAAe,CACX1lC,MAAO,CACH04C,QAAS,SAGjB7S,WAAYr7B,EAAS,wCAAwClE,SAE7Dk/B,eAAA,OAAKxtD,UAAU,yBAAwBsuB,SAAA,CACnCk/B,eAAA,OAAAl/B,SAAA,CACKkE,EAAS,uCACVhzB,cAAA,SACCgzB,EAAS,0CAEdhzB,cAAA,OACIQ,UAAU,kBAAiBsuB,SAE3B9uB,cAAA,KACI4f,KAAM8jB,qFACN5C,OAAO,SACPwzB,IAAI,aACJ30C,UAAQ,EAAAmP,SAER9uB,cAAC80D,KAAM,CAAAhmC,SAAEkE,EAAS,yCAG1BhzB,cAACqiF,KAAQ,CAACM,OAAK,EAAA7zD,SACX9uB,cAACoiF,GAAK,CAEFQ,OAAQ5iF,cAAA,OAAA8uB,SACHkE,EAAS,yCACPlE,SAEPk/B,eAAA,SAAOxtD,UAAU,mBAAkBsuB,SAAA,CAC/Bk/B,eAAA,MAAAl/B,SAAA,CACI9uB,cAAA,MAAA8uB,SAAI9uB,cAAA,KAAA8uB,SAAIkE,EAAS,2CACjBhzB,cAAA,MAAA8uB,SAAI9uB,cAAA,KAAA8uB,SAAIkE,EAAS,8CAEpB,CACG,CACIc,MAAO,SACPz3B,MAAO2D,cAAA,OAAA8uB,SACF,CACG,MACA,OACFvb,KAAIlX,GACK2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAItC,CACIy3B,MAAO,QACP+uD,SAAU,eACVxmF,MAAO2D,cAAA,OAAA8uB,SACFhd,GACIyB,KAAI8hB,IAAA,IAAC,KAAE13B,GAAM03B,EAAA,OAAKr1B,cAACyiF,GAAY,CAAYnuD,KAAM32B,EAAKmxB,SAAEnxB,GAAnBA,EAAuC,OAGzF,CACIm2B,MAAO,YACPz3B,MAAO2D,cAAA,OAAA8uB,SACFrvB,EACIqpB,QAAOqN,IAAA,IAAC,SAAEt2B,GAAUs2B,EAAA,OAAKt2B,CAAQ,IACjC0T,KAAIgjB,IAAA,IAAC,KAAE54B,GAAM44B,EAAA,OAAKv2B,cAACyiF,GAAY,CAAYnuD,KAAM32B,EAAKmxB,SAAEnxB,GAAnBA,EAAuC,OAGzF,CACIm2B,MAAO,kBACPz3B,MAAO2D,cAAA,OAAA8uB,SACF/uB,EACI+oB,QAAOuT,IAAA,IAAC,SAAEx8B,GAAUw8B,EAAA,OAAKx8B,CAAQ,IACjC0T,KAAIopB,IAAA,IAAC,MAAEtgC,GAAOsgC,EAAA,OAAK38B,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,OAG7F,CACIy3B,MAAO,UACPz3B,MAAO2D,cAAA,OAAA8uB,SACF3uB,EACI2oB,QAAO+U,IAAA,IAAC,SAAEh+B,GAAUg+B,EAAA,OAAKh+B,CAAQ,IACjC0T,KAAIuqB,IAAA,IAAC,MAAEzhC,GAAOyhC,EAAA,OAAK99B,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,OAG7F,CACIy3B,MAAO,OACPz3B,MAAO2D,cAAA,OAAA8uB,SACF5oB,IACI4iB,QAAOyV,IAAA,IAAC,SAAE1+B,GAAU0+B,EAAA,OAAK1+B,CAAQ,IACjC0T,KAAIkrB,IAAA,IAAC,KAAE9gC,GAAM8gC,EAAA,OAAKz+B,cAACyiF,GAAY,CAAYnuD,KAAM32B,EAAKmxB,SAAEnxB,GAAnBA,EAAuC,OAGzF,CACIm2B,MAAO,cACPz3B,MAAO2xD,eAAA,OAAAl/B,SAAA,CACFluB,OAAOC,OAAOgF,GACV0N,KAAIurB,IAAA,IAAC,MAAEziC,GAAOyiC,EAAA,OAAK9+B,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,IACrF2D,cAAA,OAAA8uB,SAAMkE,EAAS,+CAGvB,CACIc,MAAO,aACPz3B,MAAO2D,cAAA,OAAA8uB,SACFluB,OAAOC,OAAOkF,GACVwN,KAAIuvE,IAAA,IAAC,MAAEzmF,GAAOymF,EAAA,OAAK9iF,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,OAG7F,CACIy3B,MAAO,YACPz3B,MAAO2D,cAAA,OAAA8uB,SACF,CACG,SACA,QACFvb,KAAIlX,GACK2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAItC,CACIy3B,MAAO,iBACPz3B,MAAO2D,cAAA,OAAA8uB,SACF,CACG,OACA,SACA,SACFvb,KAAIlX,GACK2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAItC,CACIy3B,MAAO,iBACPz3B,MAAO2D,cAAA,OAAA8uB,SACFnuB,EACImoB,QAAOi6D,IAAA,IAAC,SAAEljF,GAAUkjF,EAAA,OAAKljF,CAAQ,IACjC0T,KAAIyvE,IAAA,IAAC,MAAE3mF,GAAO2mF,EAAA,OAAKhjF,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,OAG7F,CACIy3B,MAAO,kBACPz3B,MAAO2D,cAAA,OAAA8uB,SACF3yB,IACIoX,KAAI0vE,IAAA,IAAC,MAAE5mF,GAAO4mF,EAAA,OAAKjjF,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,EAA0C,OAG7F,CACIy3B,MAAO,gBACPz3B,MAAO2D,cAAA,OAAA8uB,SACFluB,OAAO4a,KAAK/S,GACR8K,KAAIlX,GAAS2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAG7C,CACIy3B,MAAO,kBACPz3B,MAAO2D,cAAA,OAAA8uB,SACF,CACG,aACA,UACFvb,KAAIlX,GACK2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAItC,CACIy3B,MAAO,oBACPz3B,MAAO2D,cAAA,OAAA8uB,SACH9uB,cAACyiF,GAAY,CAACnuD,KAAM,QAAQxF,SAAC,aAGrC,CACIgF,MAAO,sBACPz3B,MAAO2D,cAAA,OAAA8uB,SACFluB,OAAO4a,KAAKpa,GACRmS,KAAIlX,GAAS2D,cAACyiF,GAAY,CAAanuD,KAAMj4B,EAAMyyB,SAAEzyB,GAArBA,QAG7C,CACIy3B,MAAO,uBACPz3B,MAAO2D,cAAA,OAAA8uB,SACF3qB,EACI2kB,QAAOo6D,IAAA,IAAC,SAAErjF,GAAUqjF,EAAA,OAAKrjF,CAAQ,IACjC0T,KAAI4vE,IAAA,IAAC,IAAE7hF,GAAK6hF,EAAA,OAAKnjF,cAACyiF,GAAY,CAAWnuD,KAAMhzB,EAAIwtB,SAAExtB,GAAjBA,EAAoC,QAGvFiS,KAAI6vE,IAIC,IAJA,MACHtvD,EAAK,SACL+uD,EAAQ,MACRxmF,GACH+mF,EACG,OAAOp1B,eAAA,MAAAl/B,SAAA,CACHk/B,eAAA,MAAAl/B,SAAA,CACI9uB,cAACuiF,GAAU,CAAAzzD,SAAEgF,IACZ+uD,GAAY70B,eAAAC,WAAA,CAAAn/B,SAAA,CAAE9uB,cAAA,SAAMA,cAACuiF,GAAU,CAAAzzD,SAAE+zD,UAEtC7iF,cAAA,MAAA8uB,SAAKzyB,MALOy3B,EAMX,QArKT,0BA6KrB,E,cC9TP,MAAMuvD,GCAkC,WAA6C,IAA5CC,EAAa5oE,UAAAL,OAAA,QAAAM,IAAAD,UAAA,GAAAA,UAAA,GAFhB,KAG9B6oE,EAAiBD,EAErB,MAAO,CACH/2D,MAAOA,KACH,MAAMhtB,EAAS2e,KAAKmN,SAEpB,OAAIk4D,EAAiBhkF,GACjBgkF,GAAkBD,GACX,IAEPC,EAAiBD,GACV,EACX,EAGZ,CDhB6BE,GACvBC,GAAyBp2D,KAAOukC,GAAG;;;;EAKnC8xB,GAA0Br2D,aAAOuoC,KAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiEjC+tB,GAAmBjxB,sBAAW,CAAA1tC,EAMtBitC,KAAkD,IAN3B,SACxCj/B,EAAQ,gBACRk7C,EAAe,SACf9H,EAAQ,WACRob,EAAU,gBACVE,GACe18D,EACf,MAAM4+D,EAAe,iBACfC,EAAgBphD,iBAAyB,OACzC,SACF9H,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjB+B,EAAW,YACXC,EAAW,kBACX9B,EAAiB,YACjBU,EAAW,qBACXC,EAAoB,SACpBsC,EAAQ,cACR1C,EAAa,QACbR,GACAT,GAAYy5B,uBAAWx/B,IAAA,IAAC,SACxBwF,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjB+B,EAAW,YACXC,EAAW,kBACX9B,EAAiB,YACjBU,EAAW,qBACXC,EAAoB,SACpBsC,EAAQ,cACR1C,EAAa,QACbR,GACHxG,EAAA,MAAM,CACHwF,WACAsB,mBACAP,oBACA+B,cACAC,cACA9B,oBACAU,cACAC,uBACAsC,WACA1C,gBACAR,UACH,KACKuF,EAAeF,IAAW3P,GAASA,EAAMoQ,QAAQP,gBAChD+gC,EAAUC,GAAe1U,mBAAS,IAClCs2B,EAAaC,GAAkBv2B,oBAAS,IACxCw2B,EAAYC,GAAiBz2B,oBAAS,GACvC02B,EAAiBlkD,MAAU9lB,IAC7B0hB,EAAkB,CAAE/8B,KAAM,OAAQxC,MAAO6d,EAAE4mB,OAAOzkC,OAAQ,GAC3D,KAEG8nF,EAAazhD,uBAAahpB,IAC5B0sD,EAAS1sD,GACT+jB,EAAY/jB,EAAKZ,GAAG,GACrB,CAACstD,EAAU3oC,IAiCd,OA/BA2F,qBAAU,KACF1H,IACA0qC,EAAS1qC,GACT+B,EAAY/B,EAAkB5iB,IAC9ByjB,IACJ,GACD,CAAC6pC,EAAU1qC,EAAmB+B,EAAalB,IAE9C6G,qBAAU,KACN7R,aAAa0B,QAAQ,wBAAyB0I,EAAQwJ,YACtD+oC,EAAgBvyC,EAAQ,GACzB,CAACuyC,EAAiBvyC,IAErByH,qBAAU,KACN,MAAMghD,EAAQlpD,GAAYmpD,WACtBhzD,GAASA,EAAMkK,oBACf+oD,IACQA,GACApiB,GAAY1nC,GAAOA,EAAM,GAC7B,IAIR,MAAO,KACH4pD,GAAO,CACV,GACF,IAGH9xB,8BAAoBL,GAAK,MAAS,IAAG,IAE9BjyD,cAACyjF,GAAsB,CAAA30D,SAC1B9uB,cAAC0jF,GAAuB,CACpBngD,MAAOyqB,eAAA,OAAKxtD,UAAU,+BAA8BsuB,SAAA,CAChD9uB,cAACukF,GAAkB,CAAC/jF,UAAU,mCAAmCwyB,SAAUA,EAASlE,SAC/E6L,EAAStgB,SAEd2zC,eAAA,OAAKxtD,UAAU,2BAA0BsuB,SAAA,CACrC9uB,cAAA,OACIQ,UAAU,iBAAgBsuB,SAE1B9uB,cAAC0iF,GAAa,CAAC1vD,SAAUA,MAE7BhzB,cAACw/D,KAAQ,CACL9Z,QAAS1lD,cAACs2D,KAAI,CAAAxnC,SACT,CACG,CACIzyB,MAAOo+B,GAAgBpX,MAAM/hB,IAC7BhF,MAAO02B,EAAS,oCAEpB,CACI32B,MAAOo+B,GAAgB98B,KAAK2D,IAC5BhF,MAAO02B,EAAS,mCAEpB,CACI32B,MAAOo+B,GAAgB7iB,IAAItW,IAC3BhF,MAAO02B,EAAS,kCAEpB,CACI32B,MAAOo+B,GAAgB5iB,IAAIvW,IAC3BhF,MAAO02B,EAAS,kCAEpB,CACI32B,MAAOo+B,GAAgB/J,IAAIpvB,IAC3BhF,MAAO02B,EAAS,sCAEtBzf,KAAI8hB,IAAuB,IAAtB,MAAEh5B,EAAK,MAAEC,GAAO+4B,EACnB,OAAOr1B,cAACs2D,KAAKC,KAAI,CAAanH,QAASA,IAAMvwB,EAASxiC,GAAOyyB,SACxDxyB,GADkBD,EAEX,MAEZyyB,SAER9uB,cAAA,OACIQ,UAAU,iBAAgBsuB,SAE1B9uB,cAAC82E,KAAqB,QAU9B92E,cAACgwD,KAAO,CAACzsB,MAAOvQ,EAAS,0CAA0ClE,SAC/D9uB,cAAA,OACIQ,UAAU,iBACV4uD,QAASn9B,UACL,IAAIuyD,GAAgB,EAMpB,GALAP,GAAc,GACVZ,GAAqB92D,UACrBi4D,EAAgB3kE,OAAO4kE,QAAQzxD,EAAS,gCAGxCwxD,EACA,IACI,MAAM,MACF9mE,EACArhB,MAAOqoF,G3E/ErB/pD,KAC1B,MAAMgqD,EAAsB,GACtBC,EAAYjxD,GAAqBtZ,OACvC,IAAIqD,EAAQ,GAEZ,IAAK,IAAI8c,EAAM,EAAGA,EAAMG,EAAStgB,OAAQmgB,IAAO,CAC5C,MAAMqqD,EAAQA,CAACvjF,EAAejF,KAC1B,MAAM4tB,EAAQiK,GAAoB5yB,GAEb,kBAAV2oB,IACc,kBAAV5tB,IAAoByoF,EAAS76D,GAAS5tB,GAC5B,kBAAVA,IAAoByoF,EAAS76D,GAAS,GAAG5tB,KAC/B,mBAAVA,IAAqByoF,EAAS76D,GAAS,GAAG5tB,KACxC,MAATA,IAAeyoF,EAAS76D,GAAS,IACzC,EAGE66D,EAAWlpE,MAAMgpE,GAAWrxE,KAAI,IAAM,MACtC,IACFvN,EAAG,QACHoQ,EAAO,UACPZ,EAAS,OACTU,EAAM,UACNC,EAAS,IACTyB,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,cACdF,EAAa,iBACbC,EAAgB,eAChBvX,EAAc,SACdwW,EAAQ,QACRuC,EAAO,IACPR,EAAG,OACHH,EAAM,YACNJ,EAAW,gBACXmB,EAAe,aACfG,EAAY,OACZrD,EAAM,KACND,EAAI,OACJN,EAAM,MACNvY,EAAK,eACL6b,EAAc,cACd7B,EAAa,mBACb0B,EAAkB,eAClBH,EAAc,aACdI,EAAY,iBACZF,EAAgB,OAChBlB,EAAM,WACN5X,EAAU,YACV6Y,EAAW,QACXlB,EAAO,KACPpZ,EAAI,UACJ+X,EAAS,cACTD,EAAa,QACbpW,EAAO,eACPsZ,EAAc,SACdb,EAAQ,eACRZ,EAAc,cACdD,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,cAChBM,EAAa,kBACbiB,EAAiB,MACjBf,EAAK,KACL5B,EAAI,cACJC,GAAa,cACbuC,GAAa,QACbR,GAAO,UACPlC,GAAS,YACTwB,GAAW,cACXmB,IACAmiB,EAASH,GACPuqD,GAAyBvoE,KAAKslB,UAAUlpB,GAE9CisE,EAAM,SAAU7vE,GAChB6vE,EAAM,QAASpoF,GACfooF,EAAM,OAAQlnF,GACdknF,EAAM,YAAajvE,GACnBivE,EAAM,OAAQ,GAAG9uE,KACjB8uE,EAAM,kBAAmBhvE,IACzBgvE,EAAM,WAAY7+E,GAClB6+E,EAAM,eAAgBxtE,GAAYxF,KAAK,MACvCgzE,EAAM,SAAUntE,GAChBmtE,EAAM,SAAUltE,GAChBktE,EAAM,MAAOjtE,GACbitE,EAAM,MAAOhtE,GACbgtE,EAAM,WAAY/sE,GAClB+sE,EAAM,UAAW9sE,IACjB8sE,EAAM,YAAaxsE,GACnBwsE,EAAM,cAAezlF,GACrBylF,EAAM,kBAAmB3tE,GACzB2tE,EAAM,qBAAsB1tE,GAC5B0tE,EAAM,sBAAuBztE,GAC7BytE,EAAM,UAAW7tE,GACjB6tE,EAAM,wBAAyB9tE,EAAQiD,SAAS,MAChD6qE,EAAM,mBAAoB9tE,EAAQiD,SAAS,MAC3C6qE,EAAM,yBAA0B9tE,EAAQiD,SAAS,MACjD6qE,EAAM,oBAAqB9tE,EAAQiD,SAAS,MAC5C6qE,EAAM,qBAAsB9tE,EAAQiD,SAAS,MAC7C6qE,EAAM,2BAA4B9tE,EAAQiD,SAAS,MACnD6qE,EAAM,sBAAuB9tE,EAAQiD,SAAS,MAC9C6qE,EAAM,4BAA6B9tE,EAAQiD,SAAS,MACpD6qE,EAAM,mBAAoB7sE,GAC1B6sE,EAAM,gBAAiB5sE,GACvB4sE,EAAM,qBAAsB3sE,GAC5B2sE,EAAM,wBAAyB1sE,GAC/B0sE,EAAM,iBAAkBzsE,GACxBysE,EAAM,OAAQvvE,GACduvE,EAAM,aAAcrvE,GACpBqvE,EAAM,cAAetvE,EAAO1D,KAAK,MACjCgzE,EAAM,mBAAoBzuE,EAAQC,GAClCwuE,EAAM,mBAAoBzuE,EAAQE,GAClCuuE,EAAM,uBAAwBzuE,EAAQzZ,OACtCkoF,EAAM,wBAAyBzuE,EAAQxZ,QACvCioF,EAAM,oBAAqB3uE,GAC3B2uE,EAAM,YAA6B,kBAAT9uE,GAAqBA,GAAQ,GAAKA,GAAQ,GAAK,SAAW,QACpF8uE,EAAM,iBAAkB7uE,IACxB6uE,EAAM,iBAAkB/uE,GACxB+uE,EAAM,iBAAkBxlF,EAAQ7B,MAChCqnF,EAAM,qBAAsBxlF,EAAQ5B,UACpConF,EAAM,iBAAkBxlF,EAAQ3B,MAChCmnF,EAAM,iBAAkBxlF,EAAQ1B,MAChCknF,EAAM,sBAAuBxlF,EAAQzB,UACrCinF,EAAM,uBAAwBxlF,EAAQxB,WACtCgnF,EAAM,wBAAyBxlF,EAAQvB,YACvC+mF,EAAM,sBAAuBxlF,EAAQtB,WACrC8mF,EAAM,iBAAkBpuE,GACxBouE,EAAM,kBAAmBnuE,GACzBmuE,EAAM,2BAA4BjuE,GAClCiuE,EAAM,kBAAmBvlF,GACzBulF,EAAM,0BAA2B/tE,EAAeT,GAChDwuE,EAAM,0BAA2B/tE,EAAeR,GAChDuuE,EAAM,8BAA+B/tE,EAAena,OACpDkoF,EAAM,+BAAgC/tE,EAAela,QACrDioF,EAAM,eAAgB5tE,GACtB4tE,EAAM,gBAAiBvtE,EAAYC,kBACnCstE,EAAM,sBAAuBvsE,GAC7BusE,EAAM,kBAAmBpvE,GACzBovE,EAAM,oBAAqBnvE,EAAU3T,MACrC8iF,EAAM,0BAA2BnvE,EAAUjU,WAC3CojF,EAAM,mCAAoCnvE,EAAUC,mBACpDkvE,EAAM,4BAA6BnvE,EAAUhT,aAC7CmiF,EAAM,+BAAgCnvE,EAAU/S,eAChDkiF,EAAM,+BAAgCnvE,EAAU9S,eAChDiiF,EAAM,2BAA4BnvE,EAAU7S,YAC5CgiF,EAAM,0BAA2BnvE,EAAUxU,WAC3C2jF,EAAM,0BAA2BnvE,EAAU7T,WAC3CgjF,EAAM,0BAA2BnvE,EAAU9T,WAC3CijF,EAAM,6BAA8BnvE,EAAU1S,aAC9C6hF,EAAM,6BAA8BnvE,EAAU1T,aAC9C6iF,EAAM,2BAA4BnvE,EAAUzU,YAC5C4jF,EAAM,8BAA+BnvE,EAAUvT,eAC/C0iF,EAAM,8BAA+BnvE,EAAUtT,eAC/CyiF,EAAM,4BAA6BnvE,EAAU1U,aAC7C6jF,EAAM,sBAAuBnvE,EAAUlU,QACvCqjF,EAAM,uBAAwBnvE,EAAUvU,SACxC0jF,EAAM,yBAA0BtsE,GAAc,IAC9CssE,EAAM,0BAA2BtsE,GAAc,IAC/CssE,EAAM,0BAA2BtsE,GAAc,IAC/CssE,EAAM,4BAA6BtsE,GAAc,IACjDssE,EAAM,yBAA0BrsE,GAAc,IAC9CqsE,EAAM,0BAA2BrsE,GAAc,IAC/CqsE,EAAM,0BAA2BrsE,GAAc,IAC/CqsE,EAAM,4BAA6BrsE,GAAc,IACjDqsE,EAAM,2BAA4BpsE,EAAgB,IAClDosE,EAAM,4BAA6BpsE,EAAgB,IACnDosE,EAAM,4BAA6BpsE,EAAgB,IACnDosE,EAAM,8BAA+BpsE,EAAgB,IACrDosE,EAAM,wBAAyBvtE,EAAYE,QAC3CqtE,EAAM,oCAAqCnsE,EAAkB,IAC7DmsE,EAAM,qCAAsCnsE,EAAkB,IAC9DmsE,EAAM,qCAAsCnsE,EAAkB,IAC9DmsE,EAAM,uCAAwCnsE,EAAkB,IAChEmsE,EAAM,iCAAkCptE,EAAcD,QACtDqtE,EAAM,0BAA2BlsE,EAAe,IAChDksE,EAAM,2BAA4BlsE,EAAe,IACjDksE,EAAM,2BAA4BlsE,EAAe,IACjDksE,EAAM,6BAA8BlsE,EAAe,IACnDksE,EAAM,uBAAmD,OAA3BE,GAAkC,GAAKA,KAEnD,YAAd5uE,GAA4BM,GAAsC,YAArBI,KAC7C6G,EAAQ,gBAGZinE,EAAUnxC,KAAKsxC,EAASvxE,IAAI8gB,IAAkBxiB,KAAK,KACvD,CAEA,MAAO,CACHxV,MAAO,CACHs3B,GAAqB9hB,KAAK,KAC1B8yE,EAAU9yE,KAAK,OACjBA,KAAK,MACP6L,QACH,E2ElHuCsnE,CAAc9pD,GAAYxH,WAAWiH,UAEzC,GAAIjd,EAAO,CACP,IAAIunE,EAAe,GACfC,EAAmB,GACvB,GACS,iBADDxnE,EAEAunE,EAAejyD,EAAS,qCACxBkyD,EAAmBlyD,EAAS,0CAKhCiyD,GAAgBC,IAChBtlD,KAAaliB,MAAM,CACfmiB,QAASolD,EACTnlD,YAAaolD,GAGzB,CACA,OAAQhkD,GACJ,IAAK,OAAQ,CACT,MAAMikD,EAAiBC,KAAKC,KAAKX,EAAS,CAAE7lF,KAAM,WAClDumF,KAAKE,UAAUH,EAAgB,GAAGjqD,GAAYxH,WAAW+H,iBACzD,KACJ,CACA,QACInc,GACI4b,GAAYxH,WAAW+H,SACvB,IAAIqzB,KAAK,CAAC41B,GAAU,CAAE7lF,KAAM,aAC5B,YAIZo9B,EAAiB,WACrB,CAAE,MAAO/hB,GAAI,CAEjB+pE,GAAc,EAAM,EACtBn1D,SAEDk1D,EAAahkF,cAACulF,KAAe,IAAMvlF,cAACs8D,KAAgB,QAG7Dt8D,cAACgwD,KAAO,CAAwBtK,QAAS1yB,EAAS,wCAAwClE,SACtFk/B,eAAA,OACIxtD,UAAU,iBACV4uD,QAASA,KACL,MAAMtuB,EAASrhB,SAAS2kB,eAAew/C,GACnC9iD,IAAWgjD,GACXhjD,EAAOoC,OACX,EACFpU,SAAA,CAEF9uB,cAAA,SAAkCiyD,IAAK4xB,EACnChlF,KAAK,OACLia,GAAI8qE,EACJt0B,OAAQ,CACJ,OACA,2BACA,qEACFz9C,KAAK,KACPrR,UAAU,sBACVgvD,SAAUv9B,UAAc,IAADuzD,EACnB,MAAM33B,EAAgC,QAAxB23B,EAAG3B,EAAcjjD,eAAO,IAAA4kD,OAAA,EAArBA,EAAuB91B,OAClC,YAAEl0B,GAAgBN,GAAYxH,WAC9B+xD,EAAgBA,KAClBvjB,GAAY1nC,GAAOA,EAAM,IACzBupD,GAAe,GACfnkD,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,4BAClB8M,YAAa9M,EAAS,iCACxB,EAEN,IAAI0yD,GAAa,EAKjB,GAHIlqD,IACAkqD,EAAa7lE,OAAO4kE,QAAQzxD,EAAS,oCAErC0yD,GAAc73B,GAAYA,EAAS,GAAI,CACvCk2B,GAAe,GACf,IACI,MAAMv1B,QAAaX,EAAS,GAAG83B,cACzBC,EAAW/3B,EAAS,GAAGlwD,KAAKkd,QAAQ,YAAa,IAIjDgrE,EAAWT,KAAKC,KAAK72B,EAAM,CAAEs3B,SAAU,QACvCC,EAAUX,KAAKY,MAAMC,cACvBJ,EAASK,OAAOL,EAASM,WAAW,IACpC,CAAEvD,OAAQ,EAAGhb,KAAK,IAEhBhpC,EAAe7J,GAAcgxD,GAE/BnnD,EAAavkB,OAAS,GACtBqjB,EAAYkB,EAAcA,EAAa,GAAG9lB,IAC1CwjB,EAAYspD,GACZ1jB,GAAY1nC,GAAOA,EAAM,IACzB4rC,EAASxnC,EAAa,IACtBmlD,GAAe,IAEf0B,GAER,CAAE,MAAOvrE,GACLuD,QAAQC,MAAMxD,GACdurE,GACJ,CACJ,MACIvjB,GAAY1nC,GAAOA,EAAM,IACzBupD,GAAe,EACnB,GAxDI,UAAU9hB,KA2DrB6hB,EAAc9jF,cAACulF,KAAe,IAAMvlF,cAAC2kE,KAAc,QArE9C,GAAGmf,KAwEjB9jF,cAAA,OACIQ,UAAU,8BACV4uD,QAASA,IAAMjzB,GAAc,GAAOrN,SAEpC9uB,cAAC8vD,KAAa,SAGtB9vD,cAAA,OAAKQ,UAAU,sBAAqBsuB,SAChC9uB,cAAC08D,KAAK,CACFl8D,UAAU,sBACVm8D,YAAa3pC,EAAS,0CACtBw8B,SAAU00B,EACVrnB,YAAU,GAJF,UAAUoF,UAQ9BtmC,QAASA,EACTyqD,cAAc,EACdC,MAAM,EACNllB,gBAAgB,EAChBmlB,aAAa,EACbC,UAAWA,IAAM,KACjBzwB,QAASA,IAAM35B,GAAc,GAC7Bx/B,MAAO,IAAImyB,SAEX9uB,cAACyhF,GAAe,CACZzuD,SAAUA,EACVozC,SAAU+d,EACV3C,WAAYA,EACZE,gBAAiBA,OAGJ,IAGvB8E,GAA2Bn5D,KAAOukC,GAAG;;;;EAQrC2yB,GAAqBpuD,IAIA,IAJC,SACxBnD,EAAQ,SACRlE,KACG1L,GACc+S,EACjB,MAAM,YACFqF,EAAW,SACXb,GACAO,GAAYy5B,uBAAWp+B,IAAA,IAAC,YACxBiF,EAAW,SACXb,GACHpE,EAAA,MAAM,CACHiF,cACAb,WACH,KAiBD,OAfAyI,qBAAU,KACN,IAAIS,EAAiBC,IACjBA,EAAG/Y,iBACIiI,EAAS,kCAOpB,OAJIwI,GAAeb,EAAStgB,OAAS,GACjCwF,OAAO8jB,iBAAiB,eAAgBE,GAGrC,KACHhkB,OAAO+jB,oBAAoB,eAAgBC,EAAc,CAC5D,GACF,CAAClJ,EAAStgB,OAAQmhB,EAAaxI,IAE3Bg7B,eAACw4B,GAAwB,IAAKpjE,EAAI0L,SAAA,CACpCA,EAAW0M,GAAeb,EAAStgB,OAAS,GAAMra,cAAA,QAAMQ,UAAU,iBAAgBsuB,SAAC,YAC7D,E,wBExbxB,MAAM23D,GAAiCp5D,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAyE9CxkC;;;;;EAOGs5D,GAAiCr5D,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4E3C+0B,GAAmBt5D,KAAOukC,GAAG;;;;;;;;;;;;;;;;EAkB7Bg1B,GAAav5D,KAAOukC,GAAG;;;;;;;;;;;;EAcvBi1B,GAAax5D,KAAO+jC,IAAI;;EAIxB01B,GAAgBz5D,KAAOukC,GAAG;;;;;;;;;;;;;;;;;;;;EAsB1Bm1B,GAAiB15D,aAAOy5D,GAAc;;;EAKtCE,GAAc35D,aAAOy5D,GAAc;;;wDCrKhDG,qBAAU,CACNC,WAAY,KAEhB,MAAMC,GAAqB,CACvBC,OAAQ,CAAC,SAAU,aACnBC,OAAQ,CAAC,SAAU,aACnBC,MAAO,CAAC,SAAU,aAClBC,KAAM,CAAC,SAAU,aACjBC,SAAU,CAAC,SAAU,eAGjB5qF,OAAQ+oC,GAAchpC,MAAOipC,IAAgBlpC,EA8hBtC+qF,OA7hBf,WAAgB,IAADC,EACX,MAAM,YACFzmD,EAAW,SACX0mD,GACA3mD,GAAW2zB,uBAAW3vC,IAAA,IAAGyc,SAAS,YAAER,EAAW,kBAAEE,IAAqBnc,EAAA,MAAM,CAC5E2iE,SAAUxmD,EACVF,cACH,MAEG9N,aAAcy0D,EACd10D,UAAW20D,EAAiB,SAC5B70D,EAAQ,gBACRI,EAAe,aACfL,EACAM,SAAUy0D,EAAY,oBACtBv0D,GACA/C,GAAQmkC,uBAAWx/B,IAAA,IAAC,aACpBhC,EAAY,UACZD,EAAS,SACTF,EAAQ,gBACRI,EAAe,aACfL,EAAY,SACZM,EAAQ,oBACRE,GACH4B,EAAA,MAAM,CACHhC,eACAD,YACAF,WACAI,kBACAL,eACAM,WACAE,sBACH,MACM0O,EAAgB8lD,GAAmBv6B,oBAAS,IAC5C9vC,EAAOg8C,GAAYlM,mBAAS,KAC5B4L,EAAYC,GAAiB7L,mBAA+B,WAC5Dw6B,EAAWC,GAAgBz6B,mBAAS,IACpC06B,EAAiBC,GAAsB36B,oBAAS,IAChD46B,EAAgBC,GAAqB76B,oBAAS,GAE/C86B,EAAe7lD,iBAA0B,MACzC8hB,EAAmB9hB,iBAA0B,MAC7C+hB,EAAsB/hB,iBAA0B,MAChDP,EAAkBO,iBAA0B,MAC5CgiB,EAAiBhiB,iBAA0B,MAC3C0iB,EAAoB1iB,iBAA0B,MAC9CsiB,EAAyBtiB,iBAA0B,MACnDqiB,EAA0BriB,iBAA0B,MACpD2iB,EAAgB3iB,iBAA0B,MAC1CkiB,EAAkBliB,iBAA0B,MAC5CmiB,EAAgBniB,iBAA0B,MAC1CwiB,EAAgBxiB,iBAA0B,MAC1CuiB,EAAiBviB,iBAA0B,MAC3CoiB,EAAoBpiB,iBAA0B,MAC9CiiB,EAAmBjiB,iBAA0B,MAC7CyiB,EAAmBziB,iBAA0B,MAC7C4iB,EAAkB5iB,iBAA0B,MAC5C6iB,EAAoB7iB,iBAA0B,OAC7C6hB,GAAakJ,mBAAS,CACzBjJ,mBACAC,sBACAtiB,kBACAuiB,iBACAU,oBACAJ,yBACAD,0BACAM,gBACAT,kBACAC,gBACAK,gBACAD,iBACAH,oBACAH,mBACAQ,mBACAG,kBACAC,sBAGEijC,EAAoB9lD,iBAA0B,MAC9C+lD,EAAiB/lD,iBAAuB,MACxCgmD,EAAiBhmD,iBAAuB,OAEvCulB,EAAkB0gC,GAAuBl7B,mBAAS,GAEzDpqB,qBAAU,KACN0kD,GAAc,GACf,CAACA,IACJ1kD,qBAAU,KACFhQ,GAAiBG,GAAqB,GAC3C,CAACH,EAAiBG,IAErB6P,qBAAU,KACY,CACd,cACA,iBACA,iBAGM3nB,SAAQktE,IAAc,IAADC,EAAAC,EAC3BppE,SAASjiB,KAAKgrB,MAAMsgE,YAAYH,EAA0C,QAAjCC,EAAoB,QAApBC,EAAE91D,EAAavK,aAAK,IAAAqgE,OAAA,EAAlBA,EAAqBF,UAAU,IAAAC,IAAI,GAAU,GAC1F,GACH,CAAC71D,IAEJqQ,qBAAU,KAAO,IAAD2lD,EACZ,MAAMhjD,EAA6B,QAA1BgjD,EAAG7mD,EAAgBtB,eAAO,IAAAmoD,OAAA,EAAvBA,EAAyBhmD,WAAW,MAC1C3C,EAAUD,GAAQzM,WAAW0M,QAC/B2F,IACAA,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCpI,EAAI81B,sBAAwB,OAC5Bx0B,GAAYtB,KAGa,IAAzB6hD,GAAgCoB,KAAQC,KAAK,CAC7C3N,OAAQ,CACJ4N,SAAU,CACN,cACA,sBACA,aACA,yBACA,kBACA,oBACA,yBACA,SACA,yBACA,mBACA,uBAEJC,KAAM,CAAC,mBAEXp3D,OAAQA,KACJ,MAAMq3D,E5E/FWC,MAC7B,IACI,MAAMC,EAAmB/3D,aAAaC,QAAQ,gBACxC+3D,EAA0Bh4D,aAAaC,QAAQ,aAC/Cg4D,EAAgBD,EAChB3sE,GAAgBJ,KAAKC,MAAM8sE,IAC3B,KAEAE,EAAe,IAAI5kD,gBAAgBhlB,OAAOiR,SAASgU,QAASnU,IAAI,QACtE,GAAI84D,EAAa,CAAC,IAADC,EAAAC,EASb,MAAQjwE,KAAMulB,GAAgBF,GAAW0qD,GACnC/vE,EAAOkD,GAAgBqiB,IACvB,UAAE9oB,EAAS,iBAAEU,GAAqB6C,EACxC,GAAkB,WAAdvD,GAA+C,WAArBU,EAC1B,OAAOkoB,GAAW0qD,GAAa/vE,KAGnC,MAAMkwE,EAAe,IAAKlwE,GAI1B,MAHkB,YAAdvD,IAAyByzE,EAAa3zE,QAAgC,QAAzByzE,EAAgB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAevzE,eAAO,IAAAyzE,IAAI,IACrD,YAArB7yE,IAAgC+yE,EAAajzE,eAA8C,QAAhCgzE,EAAgB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAe7yE,sBAAc,IAAAgzE,IAAI,IAE5FC,CACX,CAAO,OAAsB,OAAlBJ,GAA+C9lD,WAArB4lD,EAC1BE,EAEJ3wE,IACX,CAAE,MAAOqB,GAEL,OADAuD,QAAQC,MAAMxD,GACPrB,IACX,G4E0DkCwwE,GAEtBjpD,EAAQgpD,GACRluD,GAAYxH,WAAWgK,YAAY,CAAC0rD,GAAgBA,EAActwE,IAClEivE,GAAgB,EAAM,EAE1B8B,aAAa76D,EAAY86D,GACrBrsE,QAAQC,MAAM,mBAAoBsR,EAAY86D,GAC9ClqD,KAAaliB,MAAM,CACfmiB,QAASpM,KAAc,uBAAuBzE,IAEtD,EACA+6D,SAAUA,KACNrwB,EAASjmC,KAAc,4BACvBs0D,GAAgB,EAAM,GAE5B,GACH,CAACH,IAEJ,MACIoC,aAAcC,GC/MIjlE,KAMP,IANQ,qBACvB4iE,EAAoB,SACpBsC,EAAQ,aACRC,EAAY,eACZC,EAAc,WACdC,GACSrlE,EACT,MAAM,KACFjjB,EAAI,OACJiT,GACAmrB,GAAQw0B,uBAAWtjC,IAAK,CACxBrc,OAAQqc,EAAM3X,KAAK1E,OACnBjT,KAAMsvB,EAAM3X,KAAKhE,UAAU3T,WAExBioF,EAAcM,GAAmB98B,mBAAS,IAE3C+8B,EAAW9nD,kBAAO,GAClB+nD,EAAc/nD,iBAAO,GAmC3B,OAlCAW,qBAAU,MAEU,QAAXpuB,GAA6B,QAATjT,KACG,IAArBwoF,EAAS3pD,SACT4pD,EAAY5pD,SAAW,IACE,IAAzBgnD,IAEH4C,EAAY5pD,SAAW,EACvB0pD,EAAgB,iCAChBH,IAEAnB,KAAQC,KAAK,CACT3N,OAAQ,CACJ4N,SAAU,CACN,2BACA,oBACA,kBACA,yBAEJC,KAAM,CAAC,uBAEXp3D,OAAQA,KACJw4D,EAAS3pD,SAAU,EACnBspD,GAAU,EAEdH,SAAUA,KACNQ,EAAS3pD,SAAU,EACnBypD,GAAY,EAEhBR,aAAcO,IAEtB,GACD,CAACp1E,EAAQjT,EAAM6lF,EAAsBsC,EAAUC,EAAcC,EAAgBC,IAEzE,CACHL,eACH,ED0JGS,CAAW,CACX7C,uBACAuC,aAAcA,KAAO,IAADO,EAChB3C,GAAgB,GAChB,MAAMhiD,EAA6B,QAA1B2kD,EAAGxoD,EAAgBtB,eAAO,IAAA8pD,OAAA,EAAvBA,EAAyB3nD,WAAW,MAC5CgD,IACAA,EAAIoI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChCpI,EAAI81B,sBAAwB,OAC5Bx0B,GAAYtB,GAChB,EAEJmkD,SAAUA,KACNnC,GAAgB,EAAM,EAE1BsC,WAAYA,KACR3wB,EAASjmC,KAAc,4BACvBs0D,GAAgB,EAAM,EAE1BqC,eAAgBA,CAACp7D,EAAY86D,KACzBrsE,QAAQC,MAAM,mBAAoBsR,EAAY86D,GAC9ClqD,KAAaliB,MAAM,CACfmiB,QAASpM,KAAc,uBAAuBzE,IAChD,KAIHgT,EAAW2oD,GAAcn9B,oBAAS,GAEzCpqB,qBAAU,KACN,MAAMwnD,EAAoBnrE,SAASjiB,KAAK2lC,UAEpCwkD,EAAUiD,EAAkBtlD,IAAI,wBAC/BslD,EAAkBpqE,OAAO,uBAAuB,GACtD,CAACmnE,IAEJ,MAAMkD,EAAkBnoD,uBAAY,SAACtG,GAA4B1hB,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,KAC1CumB,GAEnBknD,GAAmBziF,GAAyB,mBAAX02B,EAAuBA,GAAU12B,GACtE,GAAG,CAACu7B,IAEE6pD,EAAoBroD,kBAAO,GAC3BsoD,GAAetrE,SAAS2kB,eAAe,qBAC7ChB,qBAAU,KACF2nD,IAAgB/3D,IAA0C,IAA9B83D,EAAkBlqD,UAAgD,IAA3B6vB,SACnEq6B,EAAkBlqD,SAAU,EAE5B6vB,KAAY,CACRu6B,IAAK,kGACLC,aAAc,CACVx6B,OACAA,OACAA,KAA2B,CACvBy6B,YAAa,SACbC,YAAY,IACbC,SAASL,GAAc,CACtBM,UAAWr4D,EAAS,kCACpBs4D,UAAWt4D,EAAS,qCACpBu4D,gBAAiBv4D,EAAS,2CAC1Bw4D,iBAAiB,EACjBC,WAAW,EACXC,aAAc14D,EAAS,wCACvB24D,mBAAoB34D,EAAS,8CAC7B44D,yBAA0B54D,EAAS,2CACnC64D,4BAA6B74D,EAAS,kDACtC84D,kBAAmB94D,EAAS,uCAC5B+4D,kBAAmB/4D,EAAS,uCAC5Bg5D,gBAAiBh5D,EAAS,yCAC1Bi5D,mBAAoBj5D,EAAS,2CAcrCk5D,iBAAkB,EAElBC,wBAAyB,CAAC,qBAE1BC,yBAA0B,GAC1BC,yBAA0B,IAElC,GACD,CAACr5D,EAAU+3D,KAEd,MAAMuB,GAAe5pD,uBAAY,CAC7BzD,EACAwH,KAKE,IAAD8lD,EACD,MAAM,UACFlpB,EAAS,iBACT/iC,EAAgB,mBAChB8iC,GACM,OAAN38B,QAAM,IAANA,IAAU,CAAC,GAET,QAAErG,EAAO,KAAE1mB,GAASymB,GAAQzM,WAC5BnY,EAAiB6nD,EACjB,IAAKnkC,EAAanmB,GAAIY,EAAKZ,IAC3BmmB,EAEFokC,GACAnoC,GAAYxH,WAAWqI,QAAQxgB,GAEnC6kB,EAAQ7kB,EAAgB+kB,GACxBooD,GAAoBluD,GAAOA,EAAM,IACb,QAApB+xD,EAAAjE,EAAa1nD,eAAO,IAAA2rD,GAApBA,EAAsB9O,cAAcliE,GAEpC+P,IAAc,GACf,IAEGkhE,GAAa9pD,uBAAYzQ,eAC3BiK,GAEE,IAADuwD,EADS/xE,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,KAESumB,IAEd,OAAL/E,QAAK,IAALA,KAAOnR,iBACe,QAAtB0hE,EAAAhE,EAAe7nD,eAAO,IAAA6rD,GAAtBA,EAAwBtqB,cAAc,WAC1C,GAAG,CAAClhC,IAEEyrD,GAAYhqD,uBAAY,SAC1BxG,GAEE,IAADywD,EADSjyE,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,KAESumB,IAEd,OAAL/E,QAAK,IAALA,KAAOnR,iBACe,QAAtB4hE,EAAAlE,EAAe7nD,eAAO,IAAA+rD,GAAtBA,EAAwBxqB,cAAc,SAC1C,GAAG,CAAClhC,IAEE2rD,GAAalqD,uBAAY,SAC3BxG,GAGE,IAAD2wD,EAAA,IADDv4D,EAAW5Z,UAAAL,OAAA,EAAAK,UAAA,QAAAC,EAEX,KAHUD,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,KAGSumB,EAGnB,GADK,OAAL/E,QAAK,IAALA,KAAOnR,iBACY,WAAfquC,GAA+C,QAAxByzB,EAAIvE,EAAa1nD,eAAO,IAAAisD,GAApBA,EAAsB35D,YACjDrT,OAAOm9C,MAAMhqC,EAAS,4CAI1B,IAAK,IAAD85D,EACA,MAAM9tD,EAAe,OAAJ1K,QAAI,IAAJA,IAAQ6L,GAAQzM,WAAWha,KAEtB,QAAtBozE,EAAAtE,EAAe5nD,eAAO,IAAAksD,GAAtBA,EAAwB7rB,YAAYjiC,EACxC,CAAE,MAAO9kB,GACLuD,QAAQC,MAAMxD,GACd0lB,KAAaliB,MAAM,CACfmiB,QAAS7M,EAAS,wBAClB8M,YAAa9M,EAAS,6BAE9B,CACJ,GAAG,CAACiO,EAAajO,EAAUomC,IAErB2zB,GAAmBrqD,uBAAahpB,IAClC,MAAM,GAAEZ,KAAOk0E,GAAmBtzE,EAElCkzE,QAAWjyE,GAAW,EAAOqyE,EAAe,GAC7C,CAACJ,KAEEK,GAAqBvqD,uBAAY,SAACxG,GAAgE,IAADgxD,EAAbxyE,UAAAL,OAAA,QAAAM,IAAAD,UAAA,IAAAA,UAAA,KACnEumB,IAEd,OAAL/E,QAAK,IAALA,KAAOnR,iBACkB,QAAzBmiE,EAAA3E,EAAkB3nD,eAAO,IAAAssD,GAAzBA,EAA2BvtE,WAC/B,GAAG,CAACshB,IAEEksD,GAAmB5mC,mBAAQ,KACtB,CACH8gC,OAASnrD,GAA2CswD,GAAWtwD,GAAO,GACtEorD,MAAQprD,GAA2CwwD,GAAUxwD,GAAO,GACpEkrD,OAASlrD,GAA2C0wD,GAAW1wD,GAAO,GACtEqrD,KAAMA,IAAMsD,GAAgB,GAAM,GAClCrD,SAAWtrD,GAA2C+wD,GAAmB/wD,GAAO,MAErF,CAAC+wD,GAAoBL,GAAYJ,GAAYE,GAAW7B,IAErDuC,GAAqB1qD,uBAAY,KACnCioD,GAAW,GACX3tB,MAAMhqC,EAAS,mCAAmC,GACnD,CAACA,IAEEq6D,GAAmB3qD,uBAAas2B,IACd,cAAhBA,IACA2xB,GAAW,GACX1C,GAAaztD,GAAOA,EAAM,KAE9BkuD,GAAoBluD,GAAOA,EAAM,GAAE,GACpC,IAEG8yD,GAAiE5qD,uBAAY,CAACuhB,EAAGmV,KACnFsvB,GAAoBluD,GAAOA,EAAM,IACjC6+B,EAAcD,EAAW,GAC1B,IAEGm0B,GAAmB7qD,uBAAY,KACjCgmD,GAAoBluD,GAAOA,EAAM,IACjCmwD,GAAW,EAAK,GACjB,IAEG6C,GAAoB9qD,uBAAarmC,IACnCgsF,EAAkBhsF,EAAM,GACzB,IAEG62B,GAAY20D,GAAqB5lD,EACvC,OACIjiC,cAACytF,WAAO,CAACC,OAAQvG,GAAoBwG,SAAUR,GAAiBr+D,SAC5Dk/B,eAAA,OAAKl1C,GAAG,MAEJ80E,OAAQA,OACRptF,UAAW,YAAYuyB,EAAanB,oBAAoBw2D,EAAiB,UAAY,WACrF5/D,MAAO,CACHm1C,gBAAiB,sGAGjB/gE,OAAQ0vB,KAAmB,yBAA2B,QAElD,gBAAiB,GAAG5vB,EAAYE,WAChC,eAAgB,GAAGF,EAAYC,WAErCmyB,SAAA,CAEDm7D,GAAgBjqF,cAAA,QAAMs0D,IAAI,aAAaz1D,KAAK,WAAW+gB,KAAMqqE,IAC9Dj8B,eAAA,OACIxtD,UAAW,gBACXgoB,MAAO,CACHm1C,gBAAiB,0DACnB7uC,SAAA,CAEDoE,IAAalzB,cAAC2mF,GAAgB,CAACnmF,UAAU,cAAasuB,SAClDpR,EAAMrD,OAAS,EACVra,cAAC6mF,GAAU,CAAA/3D,SACRpR,IAEwB,QADhBgqE,EACX30D,EAAalB,sBAAc,IAAA61D,IAAI,KAGzC15B,eAAA,OAAKxtD,UAAW,uBAAsBwhC,EAAY,iBAAmB,iBAAkBlT,SAAA,CACnFk/B,eAACy4B,GAA8B,CAACjmF,UAAU,oBAAmBsuB,SAAA,CACzDk/B,eAAA,OAAKxtD,UAAU,WAAUsuB,SAAA,CACrB9uB,cAACogE,GAAW,CAACnO,IAAKu2B,EACdnoB,QAASr+B,EACTgY,cAAeuK,EAAiB3jB,QAChC0/B,oBAAqBssB,GACrBrsB,kBAAmBA,KAAA,IAAAstB,EAAA,OAA+B,QAA/BA,EAAMtF,EAAkB3nD,eAAO,IAAAitD,OAAA,EAAzBA,EAA2BluE,UAAU,EAC9Dm2C,QAASxqC,KAEbtrB,cAAA,UACAA,cAAC2hE,GAAW,CAAC1P,IAAKw2B,EACd7mB,SAAU0qB,GACVx2B,QAASxqC,GACT2V,YAAaA,EACbjO,SAAUA,OAGlBhzB,cAACstD,GAAc,CAACt6B,SAAUA,IAC1BhzB,cAACq/D,GAAc,CAACpN,IAAKs2B,EACjBjkC,UAAWA,EACX0D,iBAAkBA,EAClBhmB,UAAWA,EACXC,eAAgBA,EAChBI,gBAAiB+qD,KAEpBprD,GAAahiC,cAAA,OAAK8Y,GAAG,sBAAsBtY,UAAU,wBAAuBsuB,SACzEk/B,eAAA,QAAAl/B,SAAA,CACKkE,EAAS,qCAAqChzB,cAAA,SAC9CgzB,EAAS,sCAAsC,IAAChzB,cAACm1D,GAAoB,YAGlFn1D,cAAA,OAAKQ,UAAU,wBAAuBsuB,SAClCk/B,eAAC04B,GAA8B,CAAClmF,UAAU,oBAAmBsuB,SAAA,CACzD9uB,cAACgwD,KAAO,CAACzsB,MAAOvQ,EAAS,wBAAwBlE,SAC7C9uB,cAACgnF,GAAW,CACRxmF,UAAU,eACV4uD,QAASA,KAGL,GAFgBvvC,OAAO4kE,QAAQzxD,EAAS,yBAE3B,CAAC,IAAD86D,EACT,MAAM,QAAE1tD,EAAO,KAAE1mB,GAASymB,GAAQzM,WAC5Bq6D,EAAc,CAAEj1E,GAAIY,EAAKZ,MAAO1D,MAChC44E,EAA4C,QAAhBt0E,EAAK1E,OACjC+4E,EACAxgE,GAAiBwgE,EAAa,OAEpC3tD,EAAQ4tD,GAA2B,GACnCtF,GAAoBluD,GAAOA,EAAM,IACb,QAApBszD,EAAAxF,EAAa1nD,eAAO,IAAAktD,GAApBA,EAAsBrQ,cAAcuQ,EACxC,GACFl/D,SAEF9uB,cAACiuF,KAAa,QAGtBjuF,cAACgwD,KAAO,CAACzsB,MAAOyqB,eAAA,OAAKxtD,UAAU,SAAQsuB,SAAA,CAClCkE,EAAS,0BACTiO,EAAc+sB,eAAAC,WAAA,CAAAn/B,SAAA,CAAE9uB,cAAA,SAAM,uBAAkB,QACtC8uB,SACH9uB,cAAC+mF,GAAc,CAACvmF,UAAU,kBAAkB4uD,QAASA,IAAMy7B,IAAkB/7D,SACzE9uB,cAACkuF,KAAc,QAGvBluF,cAAA,UAEI8Y,GAAG,gBACHm5C,IAAK/vB,EACLvlC,MAAOipC,GACPhpC,OAAQ+oC,IAJHqiD,EAAY,IAOrBhoF,cAAA,OAAK8Y,GAAG,sBAAsBq1E,cAAej0E,GAAKA,EAAE6Q,mBAGpD/qB,cAAA,UAAQ8Y,GAAG,cAEPm5C,IAAKxN,EACL9nD,MAAOipC,GACPhpC,OAAQ+oC,IAHHqiD,GAKThoF,cAAA,UAAQ8Y,GAAG,aAAam5C,IAAKrN,EAAejoD,MAAOipC,GAAahpC,OAAQ,MACxEoD,cAAA,UAAQ8Y,GAAG,iBAAiBm5C,IAAK9M,EAAmBxoD,MAAOipC,GAAahpC,OAAQ,MAChFoD,cAAA,UAAQ8Y,GAAG,sBAAsBm5C,IAAKlN,EAAwBpoD,MAAOipC,GAAahpC,OAAQ,MAC1FoD,cAAA,UAAQ8Y,GAAG,uBAAuBm5C,IAAKnN,EAAyBnoD,MAAOipC,GAAahpC,OAAQ,MAC5FoD,cAAA,UAAQ8Y,GAAG,aAAam5C,IAAK7M,EAAezoD,MAAOipC,GAAahpC,OAAQ,OACxEoD,cAAA,UAAQ8Y,GAAG,eAAem5C,IAAKtN,EAAiBhoD,MAAOipC,GAAahpC,OAAQ,OAC5EoD,cAAA,UAAQ8Y,GAAG,aAAam5C,IAAKhN,EAAetoD,MAAOipC,GAAahpC,OAAQ+oC,KACxE3lC,cAAA,UAAQ8Y,GAAG,cAAcm5C,IAAKjN,EAAgBroD,MAAOipC,GAAahpC,OAAQ+oC,KAC1E3lC,cAAA,UAAQ8Y,GAAG,iBAAiBm5C,IAAKpN,EAAmBloD,MAAOipC,GAAahpC,OAAQ+oC,KAChF3lC,cAAA,UAAQ8Y,GAAG,gBAAgBm5C,IAAKvN,EAAkB/nD,MAAOipC,GAAahpC,OAAQ+oC,KAC9E3lC,cAAA,UAAQ8Y,GAAG,gBAAgBm5C,IAAK/M,EAAkBvoD,MAAOipC,GAAahpC,OAAQ+oC,KAC9E3lC,cAAA,UAAQ8Y,GAAG,eAAem5C,IAAK5M,EAAiB1oD,MAAOipC,GAAahpC,OAAQ+oC,KAC5E3lC,cAAA,UAAQQ,UAAU,cAAcyxD,IAAK1N,IACrCvkD,cAAA,UAAQQ,UAAU,cAAcyxD,IAAKzN,aAIlC,IAAdtxB,IAAuBlzB,cAAC67E,GAAc,CACnC5pB,IAAKq2B,EACLtuC,cAAeuK,EAAiB3jB,QAChCqZ,iBAAkBuK,EAAoB5jB,QACtC43B,eAAgB60B,GAChB30B,aAAc40B,GACd30B,UAAW40B,QAGnBvtF,cAAC2jF,GAAgB,CACb3wD,SAAUA,EACVk7C,gBAAiBsf,GACjBhM,WAAYuL,GACZ3mB,SAAUkmB,GACV5K,gBAAiBA,KAAO,IAAD0M,EACG,QAAtBA,EAAA3F,EAAe7nD,eAAO,IAAAwtD,GAAtBA,EAAwBjsB,cAAc,MAAM,IAIpDniE,cAACqtD,KAAK,CACF1wD,MAAO,GAAGD,EAAYC,MAAQ,OAC9B0xF,cAAc,wBACd1yD,QAASusD,EACT5B,aAAa,EACb97D,SAAUA,IAAM29D,GAAmB,GACnCtyB,OAAQ,KAAK/mC,SAEb9uB,cAAA,UACI8Y,GAAG,kBACHm5C,IAAK3M,EACL3oD,MAAOipC,GACPhpC,OAAQ+oC,IAJCqiD,EAAY,MAO7Bh6B,eAAC44B,GAAU,CAACpmF,UAAU,QAAOsuB,SAAA,CAAC,mBACV9uB,cAAA,OAAKU,IAAI,kCAAkCD,IAAI,kBAKnF,EEplBe6tF,OAZSC,IAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAKzpE,IAAkD,IAAjD,OAAE0pE,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAAS9pE,EAClE0pE,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EAAY,GAE5B,ECHJQ,IAASp+B,OACL3wD,cAAC4uB,IAAMogE,WAAU,CAAAlgE,SACb9uB,cAACynF,GAAG,MAERhoE,SAAS2kB,eAAe,SAM5BkqD,I","file":"static/js/main.caf10f92.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\n    fit: string,\n    full: string,\n    frame: string,\n}) => [\n    {\n        value: 'fit' as const,\n        label: dictionary?.fit,\n    },\n    {\n        value: 'full' as const,\n        label: dictionary?.full,\n    },\n    {\n        value: 'frame' as const,\n        label: dictionary?.frame,\n    },\n];\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\n\n/**\n * @summary About x y headache.\n * \n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\n */\nexport type MasterSeriesCanvas = {\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\n};\n\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\nexport const CanvasConst = {\n    width: 813,\n    height: 1185,\n    topToPendulumStructure: 210,\n    topToArtFrame: 213,\n    pendulumStructureHeight: 912,\n    leftToPendulumStructure: 52,\n    cardBorder: 28,\n    topToEffectBox: 885,\n    leftToEffectBox: 54,\n    effectBoxWidth: 705,\n    effectBoxHeight: 231,\n};\n\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\nexport const getDefaultCardOpacity = () => ({\n    body: 100,\n    pendulum: 100,\n    text: 100,\n    name: 100,\n    baseFill: DEFAULT_BASE_FILL_COLOR,\n    artBorder: true,\n    nameBorder: true,\n    boundless: false,\n});\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\nexport const CardArtCanvasCoordinateMap = {\n    normal: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 614,\n        artX: 100,\n        artY: 219,\n        ratio: 1,\n        backgroundRatio: 1,\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'normal' as const,\n    },\n    pendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.325,\n        backgroundRatio: 1.325,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'pendulum' as const,\n    },\n    /** Normal distribution, with artwork extends under effect's box. */\n    extendedCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'extendedCard' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\n    extendedPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 0.775,\n        backgroundRatio: 0.775,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'extendedPendulum' as const,\n    },\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\n    truePendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 702,\n        artX: 56,\n        artY: 213,\n        ratio: 1.057,\n        backgroundRatio: 1.057,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'truePendulum' as const,\n    },\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullCard: {\n        artFinishX: 100,\n        artFinishY: 219,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 614,\n        artFrameHeight: 614,\n        artFrameY: 219,\n        artRatio: 1,\n        type: 'fullCard' as const,\n    },\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\n    fullPendulum: {\n        artFinishX: 56,\n        artFinishY: 213,\n        artWidth: 758,\n        artX: 28,\n        artY: 28,\n        ratio: 0.670,\n        backgroundRatio: 0.670,\n        artFrameWidth: 702,\n        artFrameHeight: 530,\n        artFrameY: 213,\n        artRatio: 1.325,\n        type: 'fullPendulum' as const,\n    },\n};\nexport const getArtCanvasCoordinate = (\n    isPendulum: boolean,\n    opacity?: Partial<CardOpacity>,\n    backgroundType?: BackgroundType,\n) => {\n    const {\n        boundless,\n        body,\n        pendulum,\n        text,\n    } = { ...getDefaultCardOpacity(), ...opacity };\n    const normalizedBoundless = backgroundType === 'fit'\n        ? false\n        : boundless;\n\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\n    const artSource = normalizedBoundless || body < 100\n        ? isPendulum\n            ? 'fullPendulum'\n            : 'fullCard'\n        : isPendulum\n            ? text < 100\n                ? 'extendedPendulum'\n                : pendulum < 100\n                    ? 'truePendulum'\n                    : 'pendulum'\n            : text < 100\n                ? 'extendedCard'\n                : 'normal';\n\n    const result = CardArtCanvasCoordinateMap[artSource];\n    return {\n        ...result,\n        backgroundRatio: backgroundType === 'frame'\n            ? 0.686\n            : result.backgroundRatio,\n    };\n};\n","import { CloseCircleOutlined } from '@ant-design/icons';\n\nexport const NO_ATTRIBUTE = 'NONE';\nexport const AttributeList = [\n    {\n        name: NO_ATTRIBUTE,\n        nameKey: 'input.attribute.none',\n        color: '#000000',\n        isCreative: false,\n        isOption: false,\n    },\n    {\n        name: 'DARK',\n        nameKey: 'input.attribute.dark',\n        label: 'Dark',\n        color: '#b41dda',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'EARTH',\n        nameKey: 'input.attribute.earth',\n        label: 'Earth',\n        color: '#8d8e8e',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'FIRE',\n        nameKey: 'input.attribute.fire',\n        label: 'Fire',\n        color: '#e51b23',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LIGHT',\n        nameKey: 'input.attribute.light',\n        label: 'Light',\n        color: '#bfae32',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WATER',\n        nameKey: 'input.attribute.water',\n        label: 'Water',\n        color: '#008ecd',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'WIND',\n        nameKey: 'input.attribute.wind',\n        label: 'Wind',\n        color: '#28ab35',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'DIVINE',\n        nameKey: 'input.attribute.divine',\n        label: 'Divine',\n        color: '#ef6300',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'SPELL',\n        nameKey: 'input.attribute.spell',\n        label: 'Spell',\n        color: '#1b8f83',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'TRAP',\n        nameKey: 'input.attribute.trap',\n        label: 'Trap',\n        color: '#c32a8c',\n        isCreative: false,\n        isOption: true,\n    },\n    {\n        name: 'LAUGH',\n        nameKey: 'input.attribute.laugh',\n        label: 'Laugh',\n        color: '#f78f27',\n        isCreative: true,\n        isOption: true,\n    },\n];\n\nexport const NO_ICON = 'NO ICON';\nexport const IconList = [\n    {\n        label: <CloseCircleOutlined />,\n        value: NO_ICON,\n        nameKey: 'input.icon.none',\n        isOption: false,\n    },\n    {\n        label: 'Field',\n        value: 'FIELD',\n        nameKey: 'input.icon.field',\n        isOption: true,\n    },\n    {\n        label: 'Continuous',\n        value: 'CONTINUOUS',\n        nameKey: 'input.icon.continuous',\n        isOption: true,\n    },\n    {\n        label: 'Quick-Play',\n        value: 'QUICK-PLAY',\n        nameKey: 'input.icon.quick-play',\n        isOption: true,\n    },\n    {\n        label: 'Ritual',\n        value: 'RITUAL',\n        nameKey: 'input.icon.ritual',\n        isOption: true,\n    },\n    {\n        label: 'Equip',\n        value: 'EQUIP',\n        nameKey: 'input.icon.equip',\n        isOption: true,\n    },\n    {\n        label: 'Counter',\n        value: 'COUNTER',\n        nameKey: 'input.icon.counter',\n        isOption: true,\n    },\n];\n\nexport const NO_STICKER = 'no-sticker';\nexport const StickerList = [\n    {\n        value: NO_STICKER,\n        isOption: false,\n    },\n    {\n        value: 'gold',\n        isOption: true,\n    },\n    {\n        value: 'silver',\n        isOption: true,\n    },\n    {\n        value: 'beta',\n        isOption: true,\n    },\n    {\n        value: 'holo5',\n        isOption: true,\n    },\n    {\n        value: 'holo4',\n        isOption: true,\n    },\n    {\n        value: 'holo3',\n        isOption: true,\n    },\n    {\n        value: 'holo2',\n        isOption: true,\n    },\n    {\n        value: 'holo1',\n        isOption: true,\n    },\n    {\n        value: 'limited',\n        isOption: true,\n    },\n    {\n        value: 'unlimited',\n        isOption: true,\n    },\n];\n\nexport const IconTypeMap: Record<string, {\n    value: string,\n    labelKey: string,\n    fullLabelKey: string,\n    icon: React.ReactNode,\n    isOption: boolean,\n}> = {\n    'auto': {\n        value: 'auto',\n        labelKey: 'input.icon-type.auto.label',\n        fullLabelKey: 'input.icon-type.auto.label',\n        icon: null,\n        isOption: false,\n    },\n    'st': {\n        value: 'st',\n        labelKey: 'input.icon-type.icon.label',\n        fullLabelKey: 'input.icon-type.icon.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"s/t-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\n        />,\n        isOption: true,\n    },\n    'level': {\n        value: 'level',\n        labelKey: 'input.icon-type.level.label',\n        fullLabelKey: 'input.icon-type.level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\n        />,\n        isOption: true,\n    },\n    'negative-level': {\n        value: 'negative-level',\n        labelKey: 'input.icon-type.negative-level.label',\n        fullLabelKey: 'input.icon-type.negative-level.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"negative-level-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\n        />,\n        isOption: true,\n    },\n    'rank': {\n        value: 'rank',\n        labelKey: 'input.icon-type.rank.label',\n        fullLabelKey: 'input.icon-type.rank.label',\n        icon: <img\n            className=\"icon-image\"\n            alt=\"rank-icon\"\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\n        />,\n        isOption: true,\n    },\n};\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\nexport const getDefaultNameStyle = () => ({\n    font: 'Default',\n    fillStyle: '#000000',\n    headTextFillStyle: '#000000',\n    shadowColor: '#000000',\n    shadowOffsetY: 0,\n    shadowOffsetX: 0,\n    shadowBlur: 0,\n    hasShadow: false,\n    lineColor: '#000000',\n    lineWidth: 0,\n    lineOffsetY: 0,\n    lineOffsetX: 0,\n    hasOutline: false,\n    gradientAngle: 0,\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\n    hasGradient: false,\n    preset: 'commonB' as PresetNameStyle,\n    pattern: 'none',\n});\n\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\nexport type TextStyle = [\n    custom: boolean,\n    fillStyle: string,\n    hasShadow: boolean,\n    shadow: string,\n];\nexport const getDefaultTextStyle = (): TextStyle => [\n    false,\n    '#000000',\n    false,\n    '#000000',\n];\n\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\n    hasGradient: false,\n    hasOutline: false,\n    hasShadow: false,\n    pattern: 'none',\n    ...presetValue\n});\nexport type PresetNameStyle = 'commonB' | 'commonW'\n| 'skillDefault' | 'skillArial'\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\n| 'animeRed' | 'animeSilver' | 'animeGold'\n| 'promo';\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\n    key: PresetNameStyle,\n    label: string,\n    image: string,\n    value: Partial<NameStyle>,\n}> = {\n    commonB: {\n        key: 'commonB',\n        label: 'Common (Black)',\n        image: 'asset/image/other/name-common-b.png',\n        value: createPresetNameStyle({\n            preset: 'commonB',\n            fillStyle: '#000000',\n        }),\n    },\n    commonW: {\n        key: 'commonW',\n        label: 'Common (White)',\n        image: 'asset/image/other/name-common-w.png',\n        value: createPresetNameStyle({\n            preset: 'commonW',\n            fillStyle: '#ffffff',\n        }),\n    },\n    skillDefault: {\n        key: 'skillDefault',\n        label: 'Skill (Default)',\n        image: 'asset/image/other/name-skill-default.png',\n        value: createPresetNameStyle({\n            preset: 'skillDefault',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            hasOutline: true,\n        }),\n    },\n    skillArial: {\n        key: 'skillArial',\n        label: 'Skill (Arial)',\n        image: 'asset/image/other/name-skill-arial.png',\n        value: createPresetNameStyle({\n            preset: 'skillArial',\n            font: 'Arial',\n            fillStyle: '#ffffff',\n            lineWidth: 6,\n            lineColor: '#000',\n            lineOffsetX: 1,\n            hasOutline: true,\n        }),\n    },\n    rare: {\n        key: 'rare',\n        label: 'Rare',\n        image: 'asset/image/other/name-rare.png',\n        value: createPresetNameStyle({\n            preset: 'rare',\n            fillStyle: '#cfc6de',\n        }),\n    },\n    secretGradient: {\n        key: 'secretGradient',\n        label: 'Secret (Gradient)',\n        image: 'asset/image/other/name-secret-gradient.png',\n        value: createPresetNameStyle({\n            preset: 'secretGradient',\n            gradientAngle: 180,\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\n            hasGradient: true,\n        }),\n    },\n    secret: {\n        key: 'secret',\n        label: 'Secret',\n        image: 'asset/image/other/name-secret.png',\n        value: createPresetNameStyle({\n            preset: 'secret',\n            fillStyle: '#8a8381',\n        }),\n    },\n    platinum2: {\n        key: 'platinum2',\n        label: 'Platinum',\n        image: 'asset/image/other/name-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum2',\n            fillStyle: '#a49f9e',\n        }),\n    },\n    ultra: {\n        key: 'ultra',\n        label: 'Ultra',\n        image: 'asset/image/other/name-ultra.png',\n        value: createPresetNameStyle({\n            preset: 'ultra',\n            fillStyle: '#dbb473',\n        }),\n    },\n    ultra2: {\n        key: 'ultra2',\n        label: 'Ultra (Type 2)',\n        image: 'asset/image/other/name-ultra-2.png',\n        value: createPresetNameStyle({\n            preset: 'ultra2',\n            fillStyle: '#fee002',\n        }),\n    },\n    platinum: {\n        key: 'platinum',\n        label: 'Foil Platinum',\n        image: 'asset/image/other/name-foil-platinum.png',\n        value: createPresetNameStyle({\n            preset: 'platinum',\n            fillStyle: '#CCCCCC',\n            shadowColor: '#FFFFFF',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    gold: {\n        key: 'gold',\n        label: 'Foil Gold',\n        image: 'asset/image/other/name-foil-gold.png',\n        value: createPresetNameStyle({\n            preset: 'gold',\n            fillStyle: '#b88c43',\n            shadowColor: '#FCC400',\n            shadowOffsetY: 1,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n        }),\n    },\n    animeRed: {\n        key: 'animeRed',\n        label: 'Anime (Type Red)',\n        image: 'asset/image/other/name-anime-red.png',\n        value: createPresetNameStyle({\n            preset: 'animeRed',\n            gradientAngle: 180,\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\n            hasGradient: true,\n            hasOutline: true,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            lineWidth: 3,\n            shadowBlur: 2,\n            shadowColor: '#383838',\n            shadowOffsetX: 2,\n            shadowOffsetY: 3,\n        }),\n    },\n    animeSilver: {\n        key: 'animeSilver',\n        label: 'Anime (Type Silver)',\n        image: 'asset/image/other/name-anime-silver.png',\n        value: createPresetNameStyle({\n            preset: 'animeSilver',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\n            hasGradient: true,\n        }),\n    },\n    animeGold: {\n        key: 'animeGold',\n        label: 'Anime (Type Gold)',\n        image: 'asset/image/other/name-anime-gold.png',\n        value: createPresetNameStyle({\n            preset: 'animeGold',\n            shadowColor: '#383838',\n            shadowOffsetY: 3,\n            shadowOffsetX: 2,\n            shadowBlur: 2,\n            hasShadow: true,\n            lineColor: '#333333',\n            lineWidth: 3,\n            lineOffsetX: 1,\n            lineOffsetY: 0,\n            hasOutline: true,\n            gradientAngle: 180,\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\n            hasGradient: true,\n        }),\n    },\n    promo: {\n        key: 'promo',\n        label: 'Promo',\n        image: 'asset/image/other/name-promo.png',\n        value: createPresetNameStyle({\n            preset: 'promo',\n            fillStyle: '#c7080b',\n            shadowColor: '#333333',\n            shadowOffsetY: 0,\n            shadowOffsetX: 0,\n            shadowBlur: 1,\n            hasShadow: true,\n            lineColor: '#8a1801',\n            lineWidth: 3,\n            lineOffsetX: 0,\n            hasOutline: true,\n            lineOffsetY: 0\n        }),\n    },\n};\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\n\nexport const PatternMap: Record<string, {\n    key: string,\n    patternImage: string,\n    blendMode: GlobalCompositeOperation,\n    overrideFill?: boolean,\n    isOption: boolean,\n}> = {\n    none: {\n        key: 'none',\n        patternImage: '',\n        blendMode: 'source-atop',\n        isOption: false,\n    },\n    type1: {\n        key: 'type1',\n        patternImage: 'finish-name-type1',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type2: {\n        key: 'type2',\n        patternImage: 'finish-name-type2',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type3: {\n        key: 'type3',\n        patternImage: 'finish-name-type3',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type4: {\n        key: 'type4',\n        patternImage: 'finish-name-type4',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type5: {\n        key: 'type5',\n        patternImage: 'finish-name-type5',\n        blendMode: 'multiply',\n        overrideFill: true,\n        isOption: true,\n    },\n    type6: {\n        key: 'type6',\n        patternImage: 'finish-name-type6',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type7: {\n        key: 'type7',\n        patternImage: 'finish-name-type7',\n        blendMode: 'lighter',\n        overrideFill: true,\n        isOption: true,\n    },\n    type8: {\n        key: 'type8',\n        patternImage: 'finish-name-type8',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n    type9: {\n        key: 'type9',\n        patternImage: 'finish-name-type9',\n        blendMode: 'source-atop',\n        isOption: true,\n    },\n};\nexport const PatternList = Object.values(PatternMap);","export type OtherMakerCard = ReturnType<typeof getDefaultOtherMakerCard>;\nexport const getDefaultOtherMakerCard = () => ({\n    version: '1.0.0',\n    name: 'Card Name',\n    level: '4',\n    type: 'Warrior/Effect',\n    icon: 'Quick-play',\n    effect: 'Card Effect',\n    atk: '0',\n    def: '0',\n    serial: '1234567890',\n    copyright: '©',\n    attribute: 'Light',\n    id: 'ABCD-XY000',\n    pendulum: {\n        enabled: false,\n        effect: '',\n        blue: '0',\n        red: '0',\n        boxSize: 'Normal',\n        boxSizeEnabled: true,\n    },\n    variant: 'Normal',\n    link: {\n        topLeft: false,\n        topCenter: false,\n        topRight: false,\n        middleLeft: false,\n        middleRight: false,\n        bottomLeft: false,\n        bottomCenter: false,\n        bottomRight: false\n    },\n    layout: 'Effect',\n    boxSize: 'Normal',\n    rarity: 'secret',\n    image: '',\n});\n\nexport type YgoproDeckCardImage = ReturnType<typeof getDefaultYgoproDeckCardImage>;\nexport const getDefaultYgoproDeckCardImage = () => ({\n    id: 46986414,\n    image_url: 'https://images.ygoprodeck.com/images/cards/46986414.jpg',\n    image_url_small: 'https://images.ygoprodeck.com/images/cards_small/46986414.jpg',\n    image_url_cropped: 'https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg'\n});\n\nexport type YgoproDeckCardSet = ReturnType<typeof getDefaultYgoproDeckCardSet>;\nexport const getDefaultYgoproDeckCardSet = () => ({\n    set_name: '1990 Mega-Tins',\n    set_code: 'XX00-EN000',\n    set_rarity: 'Ultra Rare',\n    set_rarity_code: '(UR)',\n    set_price: '0.01',\n});\n\nexport type YgoproDeckCardMisc = ReturnType<typeof getDefaultYgoproDeckCardMisc>;\nexport const getDefaultYgoproDeckCardMisc = () => [\n    {\n        staple: 'No',\n        views: 0,\n        viewsweek: 0,\n        upvotes: 0,\n        downvotes: 0,\n        formats: [] as string[],\n        treated_as: '',\n        tcg_date: '',\n        ocg_date: '',\n        konami_id: 0,\n        has_effect: 1,\n        md_rarity: ''\n    }\n];\n\nexport type YgoproDeckCard = ReturnType<typeof getDefaultYgoproDeckCard>;\nexport const getDefaultYgoproDeckCard = () => ({\n    id: 10000000,\n    name: 'Card Name',\n    typeline: [\n        'Warrior',\n        'Effect',\n    ] as string[] | undefined,\n    type: 'Effect Monster',\n    humanReadableCardType: 'Effect Monster',\n    frameType: 'effect',\n    desc: '\\'\\'The ultimate wizard in terms of attack and defense.\\'\\'',\n    pend_desc: '',\n    monster_desc: 'You can Ritual Summon this card with \"Odd-Eyes Advent\".',\n    race: 'Warrior',\n    atk: 0,\n    def: 0 as number | undefined,\n    level: 4,\n    scale: 4 as number | undefined,\n    linkval: 3 as number | undefined,\n    linkmarkers: [] as string[] | undefined,\n    attribute: 'DARK',\n    archetype: 'Dark Magician',\n    ygoprodeck_url: 'https://ygoprodeck.com/card/dark-magician-4003',\n    card_sets: [] as YgoproDeckCardSet[],\n    card_images: [] as YgoproDeckCardImage[],\n    card_prices: [\n        {\n            cardmarket_price: '0.02',\n            tcgplayer_price: '0.23',\n            ebay_price: '0.99',\n            amazon_price: '14.45',\n            coolstuffinc_price: '0.39'\n        }\n    ],\n    misc_info: getDefaultYgoproDeckCardMisc() as YgoproDeckCardMisc,\n});","export type CoordinateData = {\n    edgeAlignment?: 'left' | 'right',\n    trueWidth: number,\n    trueBaseline: number,\n    trueEdge: number,\n};\n\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\n    'tcg': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-stat': [\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\n    ],\n    'tcg-type-stat': [\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\n    ],\n    'tcg-type': [\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\n    ],\n    'ocg': [\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\n    ],\n    'ocg-stat': [\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\n    ],\n    'ocg-type-stat': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n    'ocg-type': [\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\n    ],\n};\n\nexport const PendulumEffectCoordinate: CoordinateData[] = [\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\n];\n\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\n    tcg: {\n        small: {\n            trueBaseline: 919,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 920,\n            trueEdge: 62.50,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 187.5,\n            trueEdge: 732.00,\n            edgeAlignment: 'right',\n            trueWidth: 648.5,\n        },\n    },\n    ocg: {\n        small: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        medium: {\n            trueBaseline: 917,\n            trueEdge: 63.70,\n            trueWidth: 684.5,\n        },\n        large: {\n            trueBaseline: 190.5,\n            trueEdge: 728.00,\n            edgeAlignment: 'right',\n            trueWidth: 642.5,\n        },\n    },\n};\n\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1146.5,\n        trueEdge: 736,\n        trueWidth: 435,\n    },\n    tcg: {\n        trueBaseline: 1149.5,\n        trueEdge: 733,\n        trueWidth: 380,\n    },\n};\n\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\n    ocg: {\n        trueBaseline: 1148.931,\n        trueEdge: 37.031,\n        trueWidth: 255,\n    },\n    tcg: {\n        trueBaseline: 1149.431,\n        trueEdge: 37.031,\n        trueWidth: 311,\n    },\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\n * \n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\n * \n * Each dicitionary entry has at most 4 fields.\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\n * \n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\n */\nexport const ocgKeywordDataList = [\n    {\n        shortForm: '特殊召喚',\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: 'カード',\n        rubyForm: '{カード}',\n    },\n    {\n        shortForm: 'デュエル',\n        rubyForm: '{デュエル}',\n    },\n    {\n        shortForm: 'マッチ',\n        rubyForm: '{マッチ}',\n    },\n    {\n        shortForm: 'ターン',\n        rubyForm: '{ターン}',\n    },\n    {\n        shortForm: 'プレイヤー',\n        rubyForm: '{プレイヤー}',\n    },\n    {\n        shortForm: '自分',\n        rubyForm: '{自|じ}{分|ぶん}',\n    },\n    {\n        shortForm: '相手',\n        rubyForm: '{相|あい}{手|て}',\n    },\n    {\n        shortForm: 'LP',\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\n        rubyForm: '{LP|ライフポイント}',\n    },\n    {\n        shortForm: 'デッキ',\n        rubyForm: '{デッキ}',\n    },\n    {\n        shortForm: 'メイン',\n        rubyForm: '{メイン}',\n    },\n    {\n        shortForm: 'サイド',\n        rubyForm: '{サイド}',\n    },\n    {\n        shortForm: 'EX',\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\n        rubyForm: '{EX|エクストラ}',\n    },\n    {\n        shortForm: 'フィールド',\n        rubyForm: '{フィールド}',\n    },\n    {\n        shortForm: '墓地',\n        rubyForm: '{墓|ぼ}{地|ち}',\n    },\n    {\n        shortForm: '手札',\n        rubyForm: '{手|て}{札|ふだ}',\n    },\n    {\n        shortForm: 'ゾーン',\n        rubyForm: '{ゾーン}',\n    },\n    {\n        shortForm: 'モンスター',\n        rubyForm: '{モンスター}',\n    },\n    {\n        shortForm: '縦列',\n        rubyForm: '{縦|たて}{列|れつ}',\n    },\n    {\n        shortForm: 'コントローラー',\n        rubyForm: '{コントローラー}',\n    },\n    {\n        shortForm: '持ち主',\n        rubyForm: '{持|も}ち{主|ぬし}',\n    },\n    {\n        shortForm: 'ダメージ',\n        rubyForm: '{ダメージ}',\n    },\n    {\n        shortForm: '戦闘',\n        rubyForm: '{戦|せん}{闘|とう}',\n    },\n    {\n        shortForm: 'スペル',\n        rubyForm: '{スペル}',\n    },\n    {\n        shortForm: 'スピード',\n        rubyForm: '{スピード}',\n    },\n    {\n        shortForm: 'チェーン',\n        rubyForm: '{チェーン}',\n    },\n    {\n        shortForm: 'ブロック',\n        rubyForm: '{ブロック}',\n    },\n    {\n        shortForm: '直接',\n        rubyForm: '{直|ちょく}{接|せつ}',\n    },\n    {\n        shortForm: '素材',\n        rubyForm: '{素|そ}{材|ざい}',\n    },\n    {\n        shortForm: '名',\n        rubyForm: '{名|めい}',\n    },\n    {\n        shortForm: '条件',\n        rubyForm: '{条|じょう}{件|けん}',\n    },\n    {\n        shortForm: 'コイン',\n        rubyForm: '{コイン}',\n    },\n    {\n        shortForm: 'サイコロ',\n        rubyForm: '{サイコロ}',\n    },\n    {\n        shortForm: '元',\n        rubyForm: '{元|もと}',\n    },\n    {\n        shortForm: '先',\n        rubyForm: '{先|さき}',\n    },\n    {\n        shortForm: '状態',\n        rubyForm: '{状|じょう}{態|たい}',\n    },\n    {\n        shortForm: '相互',\n        rubyForm: '{相|そう}{互|ご}',\n    },\n    {\n        shortForm: 'エクストラ',\n        rubyForm: '{エクストラ}',\n    },\n    {\n        shortForm: 'フェイズ',\n        rubyForm: '{フェイズ}',\n    },\n    {\n        shortForm: 'ドロー',\n        rubyForm: '{ドロー}',\n    },\n    {\n        shortForm: 'スタンバイ',\n        rubyForm: '{スタンバイ}',\n    },\n    {\n        shortForm: 'バトル',\n        rubyForm: '{バトル}',\n    },\n    {\n        shortForm: 'エンド',\n        rubyForm: '{エンド}',\n    },\n    {\n        shortForm: 'スタート',\n        rubyForm: '{スタート}',\n    },\n    {\n        shortForm: 'ステップ',\n        rubyForm: '{ステップ}',\n    },\n    {\n        shortForm: '種類',\n        rubyForm: '{種|しゅ}{類|るい}',\n    },\n    {\n        shortForm: '形式',\n        rubyForm: '{形|けい}{式|しき}',\n    },\n    {\n        shortForm: '表側',\n        rubyForm: '{表|おもて}{側|がわ}',\n    },\n    {\n        shortForm: '裏側',\n        rubyForm: '{裏|うら}{側|がわ}',\n    },\n    {\n        shortForm: '表示',\n        rubyForm: '{表|ひょう}{示|じ}',\n    },\n    {\n        shortForm: '裏',\n        rubyForm: '{裏|うら}',\n    },\n    {\n        shortForm: '罠',\n        rubyForm: '{罠|トラップ}',\n    },\n    {\n        shortForm: 'アクション',\n        rubyForm: 'アクション',\n    },\n    {\n        shortForm: '装備',\n        rubyForm: '{装|そう}{備|び}',\n    },\n    {\n        shortForm: '速攻',\n        rubyForm: '{速|そっ}{攻|こう}',\n    },\n    {\n        shortForm: '永続',\n        rubyForm: '{永|えい}{続|ぞく}',\n    },\n    {\n        shortForm: 'カウンター',\n        rubyForm: '{カウンター}',\n    },\n    {\n        shortForm: 'レベル',\n        rubyForm: '{レベル}',\n    },\n    {\n        shortForm: 'ランク',\n        rubyForm: '{ランク}',\n    },\n    {\n        shortForm: 'スケール',\n        rubyForm: '{スケール}',\n    },\n    {\n        shortForm: '攻撃力',\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '守備力',\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\n    },\n    {\n        shortForm: '撃力',\n        rubyForm: '{撃|げき}{力|りょく}',\n    },\n    {\n        shortForm: '勝利',\n        rubyForm: '{勝|しょう}{利|り}',\n    },\n    {\n        shortForm: '属性',\n        rubyForm: '{属|ぞく}{性|せい}',\n    },\n    {\n        shortForm: '種族',\n        rubyForm: '{種|しゅ}{族|ぞく}',\n    },\n    {\n        shortForm: '効果',\n        rubyForm: '{効|こう}{果|か}',\n    },\n    {\n        shortForm: '融合',\n        rubyForm: '{融|ゆう}{合|ごう}',\n    },\n    {\n        shortForm: '儀式',\n        rubyForm: '{儀|ぎ}{式|しき}',\n    },\n    {\n        shortForm: 'マキシマム',\n        rubyForm: '{マキシマム}',\n    },\n    {\n        shortForm: 'トークン',\n        rubyForm: '{トークン}',\n    },\n    {\n        shortForm: 'チューナー',\n        rubyForm: '{チューナー}',\n    },\n    {\n        shortForm: 'デュアル',\n        rubyForm: '{デュアル}',\n    },\n    {\n        shortForm: 'リバース',\n        rubyForm: '{リバース}',\n    },\n    {\n        shortForm: 'トゥーン',\n        rubyForm: '{トゥーン}',\n    },\n    {\n        shortForm: 'スピリット',\n        rubyForm: '{スピリット}',\n    },\n    {\n        shortForm: 'ユニオン',\n        rubyForm: '{ユニオン}',\n    },\n    {\n        shortForm: '光',\n        rubyForm: '{光|ひかり}',\n    },\n    {\n        shortForm: '闇',\n        rubyForm: '{闇|やみ}',\n    },\n    {\n        shortForm: '地',\n        rubyForm: '{地|ち}',\n    },\n    {\n        shortForm: '水',\n        rubyForm: '{水|みず}',\n    },\n    {\n        shortForm: '炎',\n        rubyForm: '{炎|ほのお}',\n    },\n    {\n        shortForm: '風',\n        rubyForm: '{風|かぜ}',\n    },\n    {\n        shortForm: '獣戦士',\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '創造神',\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\n    },\n    {\n        shortForm: 'サイバース',\n        rubyForm: '{サイバース}',\n    },\n    {\n        shortForm: '恐竜',\n        rubyForm: '{恐|きょう}{竜|りゅう}',\n    },\n    {\n        shortForm: '幻神獣',\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\n    },\n    {\n        shortForm: '天使',\n        rubyForm: '{天|てん}{使|し}',\n    },\n    {\n        shortForm: '悪魔',\n        rubyForm: '{悪|あく}{魔|ま}',\n    },\n    {\n        shortForm: '魚',\n        rubyForm: '{魚|さかな}',\n    },\n    {\n        shortForm: 'ギャラクシー',\n        rubyForm: '{ギャラクシー}',\n    },\n    {\n        shortForm: '幻想魔',\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\n    },\n    {\n        shortForm: '昆虫',\n        rubyForm: '{昆|こん}{虫|ちゅう}',\n    },\n    {\n        shortForm: '機械',\n        rubyForm: '{機|き}{械|かい}',\n    },\n    {\n        shortForm: '植物',\n        rubyForm: '{植|しょく}{物|ぶつ}',\n    },\n    {\n        shortForm: '爬虫類',\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\n    },\n    {\n        shortForm: '岩石',\n        rubyForm: '{岩|がん}{石|せき}',\n    },\n    {\n        shortForm: '海竜',\n        rubyForm: '{海|かい}{竜|りゅう}',\n    },\n    {\n        shortForm: '魔法使い',\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\n    },\n    {\n        shortForm: '雷',\n        rubyForm: '{雷|いかずち}',\n    },\n    {\n        shortForm: '鳥獣',\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\n    },\n    {\n        shortForm: '幻竜',\n        rubyForm: '{幻|げん}{竜|りゅう}',\n    },\n    {\n        shortForm: 'アンデット',\n        rubyForm: '{アンデット}',\n    },\n    {\n        shortForm: 'サイボーグ',\n        rubyForm: '{サイボーグ}',\n    },\n    {\n        shortForm: '天界戦士',\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\n    },\n    {\n        shortForm: 'ハイドラゴン',\n        rubyForm: '{ハイドラゴン}',\n    },\n    {\n        shortForm: '魔導騎士',\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\n    },\n    {\n        shortForm: '無効化',\n        rubyForm: '{無|む}{効|こう}{化|か}',\n    },\n    {\n        shortForm: 'オメガ',\n        rubyForm: '{オメガ}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '捨てる',\n        rubyForm: '{捨|す}てる',\n    },\n    {\n        shortForm: '加える',\n        rubyForm: '{加|くわ}える',\n    },\n    {\n        shortForm: 'から離れる',\n        rubyForm: 'から{離|はな}れる',\n    },\n    {\n        shortForm: '与える',\n        rubyForm: '{与|あた}える',\n    },\n    {\n        shortForm: '重ねる',\n        rubyForm: '{重|かさ}ねる',\n    },\n    {\n        shortForm: '取り除く',\n        rubyForm: '{取|と}り{除|のぞ}く',\n    },\n    {\n        shortForm: '取り除い',\n        rubyForm: '{取|と}り{除|のぞ}い',\n    },\n    {\n        shortForm: '除く',\n        rubyForm: '{除|のぞ}く',\n    },\n    {\n        shortForm: '行う',\n        rubyForm: '{行|おこな}う',\n    },\n    {\n        shortForm: '対す',\n        rubyForm: '{対|たい}す',\n    },\n    {\n        shortForm: '送る',\n        rubyForm: '{送|おく}る',\n    },\n    {\n        shortForm: '置く',\n        rubyForm: '{置|お}く',\n    },\n    {\n        shortForm: 'めくる',\n        rubyForm: '{めくる}',\n    },\n    {\n        shortForm: 'アドバンス',\n        rubyForm: '{アドバンス}',\n    },\n    {\n        shortForm: '反転',\n        rubyForm: '{反|はん}{転|てん}',\n    },\n    {\n        shortForm: '特殊',\n        rubyForm: '{特|とく}{殊|しゅ}',\n    },\n    {\n        shortForm: '発動',\n        rubyForm: '{発|はつ}{動|どう}',\n    },\n    {\n        shortForm: '破壊',\n        rubyForm: '{破|は}{壊|かい}',\n    },\n    {\n        shortForm: '対象',\n        rubyForm: '{対|たい}{象|しょう}',\n    },\n    {\n        shortForm: '無効',\n        rubyForm: '{無|む}{効|こう}',\n    },\n    {\n        shortForm: '無視',\n        rubyForm: '{無|む}{視|し}',\n    },\n    {\n        shortForm: '確認',\n        rubyForm: '{確|かく}{認|にん}',\n    },\n    {\n        shortForm: '攻撃',\n        rubyForm: '{攻|こう}{撃|げき}',\n    },\n    {\n        shortForm: '処理',\n        rubyForm: '{処|しょ}{理|り}',\n    },\n    {\n        shortForm: '宣言',\n        rubyForm: '{宣|せん}{言|げん}',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: 'リリース',\n        rubyForm: '{リリース}',\n    },\n    {\n        shortForm: 'スキップ',\n        rubyForm: '{スキップ}',\n    },\n    {\n        shortForm: 'シャッフル',\n        rubyForm: '{シャッフル}',\n    },\n    {\n        shortForm: 'コントロール',\n        rubyForm: '{コントロール}',\n    },\n    {\n        shortForm: 'セット',\n        rubyForm: '{セット}',\n    },\n    {\n        shortForm: 'RUM',\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\n        rubyForm: '{RUM|ランクアップマジック}',\n    },\n    {\n        shortForm: 'S',\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\n        rubyForm: '{S|シンクロ}',\n    },\n    {\n        shortForm: 'X',\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\n        rubyForm: '{X|エクシーズ}',\n    },\n    {\n        shortForm: 'L',\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\n        rubyForm: '{L|リンク}',\n    },\n    {\n        shortForm: 'P',\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\n        rubyForm: '{P|ペンデュラム}',\n    },\n    {\n        shortForm: 'リンク',\n        rubyForm: '{リンク}',\n    },\n    {\n        shortForm: '守備',\n        rubyForm: '{守|しゅ}{備|び}',\n    },\n    {\n        shortForm: '通常',\n        rubyForm: '{通|つう}{常|じょう}',\n    },\n    {\n        shortForm: '可能',\n        rubyForm: '{可|か}{能|のう}',\n    },\n    {\n        shortForm: '神',\n        rubyForm: '{神|かみ}',\n    },\n    {\n        shortForm: '獣',\n        rubyForm: '{獣|けもの}',\n    },\n    {\n        shortForm: 'ドラゴン',\n        rubyForm: '{ドラゴン}',\n    },\n    {\n        shortForm: 'サイキック',\n        rubyForm: '{サイキック}',\n    },\n    {\n        shortForm: '重ねて',\n        rubyForm: '{重|かさ}ねて',\n    },\n    {\n        shortForm: '魔法',\n        rubyForm: '{魔|ま}{法|ほう}',\n    },\n    {\n        shortForm: '戦士',\n        rubyForm: '{戦|せん}{士|し}',\n    },\n    {\n        shortForm: '召喚',\n        rubyForm: '{召|しょう}{喚|かん}',\n    },\n    {\n        shortForm: '合計',\n        rubyForm: '{合|ごう}{計|けい}',\n    },\n    {\n        shortForm: '以上',\n        rubyForm: '{以|い}{上|じょう}',\n    },\n    {\n        shortForm: '上記',\n        rubyForm: '{上|じょう}{記|き}',\n    },\n    {\n        shortForm: '場合',\n        rubyForm: '{場|ば}{合|あい}',\n    },\n    {\n        shortForm: '降臨',\n        rubyForm: '{降|こう}{臨|りん}',\n    },\n    {\n        shortForm: '以外',\n        rubyForm: '{以|い}{外|がい}',\n    },\n    {\n        shortForm: '使用',\n        rubyForm: '{使|し}{用|よう}',\n    },\n    {\n        shortForm: '存在',\n        rubyForm: '{存|そん}{在|ざい}',\n    },\n    {\n        shortForm: '最大',\n        rubyForm: '{最|さい}{大|だい}',\n    },\n    {\n        shortForm: '成功',\n        rubyForm: '{成|せい}{功|こう}',\n    },\n    {\n        shortForm: '自身',\n        rubyForm: '{自|じ}{身|しん}',\n    },\n    {\n        shortForm: '以下',\n        rubyForm: '{以|い}{下|か}',\n    },\n    {\n        shortForm: '終了',\n        rubyForm: '{終|しゅう}{了|りょう}',\n    },\n    {\n        shortForm: '全て',\n        rubyForm: '{全|すべ}て',\n    },\n    {\n        shortForm: '捨て',\n        rubyForm: '{捨|す}て',\n    },\n    {\n        shortForm: '行かず',\n        rubyForm: '{行|い}かず',\n    },\n    {\n        shortForm: 'CNo．',\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\n        rubyForm: '{CNo．||カオスナンバーズ}',\n        rubyFormName: '{CNo||カオスナンバーズ}．',\n    },\n    {\n        shortForm: 'No．',\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\n        rubyForm: '{No．||ナンバーズ}',\n        rubyFormName: '{No||ナンバーズ}．',\n    },\n    {\n        shortForm: 'CX',\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\n        rubyForm: '{CX|カオスエクシーズ}',\n    },\n    {\n        shortForm: '適用',\n        rubyForm: '{適|てき}{用|よう}',\n    },\n    {\n        shortForm: '数値',\n        rubyForm: '{数|すう}{値|ち}',\n    },\n    {\n        shortForm: '計算',\n        rubyForm: '{計|けい}{算|さん}',\n    },\n    {\n        shortForm: '必要',\n        rubyForm: '{必|ひつ}{要|よう}',\n    },\n    {\n        shortForm: '選択',\n        rubyForm: '{選|せん}{択|たく}',\n    },\n    {\n        shortForm: '半分',\n        rubyForm: '{半|はん}{分|ぶん}',\n    },\n    {\n        shortForm: '開始',\n        rubyForm: '{開|かい}{始|し}',\n    },\n    {\n        shortForm: '裏表',\n        rubyForm: '{裏|うら}{表|おもて}',\n    },\n    {\n        shortForm: '回復',\n        rubyForm: '{回|かい}{復|ふく}',\n    },\n    {\n        shortForm: '指定',\n        rubyForm: '{指|し}{定|てい}',\n    },\n    {\n        shortForm: '位置',\n        rubyForm: '{位|い}{置|ち}',\n    },\n    {\n        shortForm: '移動',\n        rubyForm: '{移|い}{動|どう}',\n    },\n    {\n        shortForm: '方法',\n        rubyForm: '{方|ほう}{法|ほう}',\n    },\n    {\n        shortForm: '変更',\n        rubyForm: '{変|へん}{更|こう}',\n    },\n    {\n        shortForm: '発生',\n        rubyForm: '{発|はっ}{生|せい}',\n    },\n    {\n        shortForm: '公開',\n        rubyForm: '{公|こう}{開|かい}',\n    },\n    {\n        shortForm: '順番',\n        rubyForm: '{順|じゅん}{番|ばん}',\n    },\n    {\n        shortForm: '限り',\n        rubyForm: '{限|かぎ}り',\n    },\n    {\n        shortForm: '除外',\n        rubyForm: '{除|じょ}{外|がい}',\n    },\n    {\n        shortForm: '順',\n        rubyForm: '{順|じゅん}',\n    },\n    {\n        shortForm: '代',\n        rubyForm: '{代|か}',\n    },\n    {\n        shortForm: '超',\n        rubyForm: '{超|こ}',\n    },\n    {\n        shortForm: '毎',\n        rubyForm: '{毎|ごと}',\n    },\n    {\n        shortForm: '前',\n        rubyForm: '{前|まえ}',\n    },\n    {\n        shortForm: '違',\n        rubyForm: '{違|ちが}',\n    },\n    {\n        shortForm: '続',\n        rubyForm: '{続|つづ}',\n    },\n    {\n        shortForm: '残',\n        rubyForm: '{残|のこ}',\n    },\n    {\n        shortForm: '他',\n        rubyForm: '{他|ほか}',\n    },\n    {\n        shortForm: '当',\n        rubyForm: '{当|あ}',\n    },\n    {\n        shortForm: '度',\n        rubyForm: '{度|ど}',\n    },\n    {\n        shortForm: '時',\n        rubyForm: '{時|とき}',\n    },\n    {\n        shortForm: '族',\n        rubyForm: '{族|ぞく}',\n    },\n    {\n        shortForm: '数',\n        rubyForm: '{数|かず}',\n    },\n    {\n        shortForm: '体',\n        rubyForm: '{体|たい}',\n    },\n    {\n        shortForm: '限',\n        rubyForm: '{限|ゲン}',\n    },\n    {\n        shortForm: '置',\n        rubyForm: '{置|チ}',\n    },\n    {\n        shortForm: '受',\n        rubyForm: '{受|う}',\n    },\n    {\n        shortForm: '枚',\n        rubyForm: '{枚|まい}',\n    },\n    {\n        shortForm: '後',\n        rubyForm: '{後|ご}',\n    },\n    {\n        shortForm: '送',\n        rubyForm: '{送|おく}',\n    },\n    {\n        shortForm: '事',\n        rubyForm: '{事|こと}',\n    },\n    {\n        shortForm: '内',\n        rubyForm: '{内|うち}',\n    },\n    {\n        shortForm: '見',\n        rubyForm: '{見|み}',\n    },\n    {\n        shortForm: '中',\n        rubyForm: '{中|なか}',\n    },\n    {\n        shortForm: '加',\n        rubyForm: '{加|くわ}',\n    },\n    {\n        shortForm: '選',\n        rubyForm: '{選|えら}',\n    },\n    {\n        shortForm: '一',\n        rubyForm: '{一|いち}',\n    },\n    {\n        shortForm: '番',\n        rubyForm: '{番|ばん}',\n    },\n    {\n        shortForm: '同',\n        rubyForm: '{同|どう}',\n    },\n    {\n        shortForm: '回',\n        rubyForm: '{回|かい}',\n    },\n    {\n        shortForm: '扱',\n        rubyForm: '{扱|あつか}',\n    },\n    {\n        shortForm: '星',\n        rubyForm: '{星|レベル}',\n    },\n    {\n        shortForm: '攻',\n        rubyForm: '{攻|こう}',\n    },\n    {\n        shortForm: '守',\n        rubyForm: '{守|しゅ}',\n    },\n    {\n        shortForm: '戻',\n        rubyForm: '{戻|もど}',\n    },\n    {\n        shortForm: '上',\n        rubyForm: '{上|うえ}',\n    },\n    {\n        shortForm: '次',\n        rubyForm: '{次|つぎ}',\n    },\n    {\n        shortForm: '値',\n        rubyForm: '{値|ち}',\n    },\n    {\n        shortForm: '含',\n        rubyForm: '{含|ふく}',\n    },\n    {\n        shortForm: '与',\n        rubyForm: '{与|むた}',\n    },\n    {\n        shortForm: '得',\n        rubyForm: '{得|え}',\n    },\n    {\n        shortForm: '及',\n        rubyForm: '{及|およ}',\n    },\n    {\n        shortForm: '異',\n        rubyForm: '{異|こと}',\n    },\n    {\n        shortForm: '記',\n        rubyForm: '{記|しる}',\n    },\n    {\n        shortForm: '繰',\n        rubyForm: '{繰|く}',\n    },\n    {\n        shortForm: '返',\n        rubyForm: '{返|かえ}',\n    },\n    {\n        shortForm: '決',\n        rubyForm: '{決|き}',\n    },\n    {\n        shortForm: '互',\n        rubyForm: '{互|たが}',\n    },\n    {\n        shortForm: '払',\n        rubyForm: '{払|はら}',\n    },\n    {\n        shortForm: '多',\n        rubyForm: '{多|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|おお}',\n    },\n    {\n        shortForm: '持',\n        rubyForm: '{持|も}',\n    },\n    {\n        shortForm: '間',\n        rubyForm: '{間|あいだ}',\n    },\n    {\n        shortForm: '所',\n        rubyForm: '{所|しょ}',\n    },\n    {\n        shortForm: '高',\n        rubyForm: '{高|たか}',\n    },\n    {\n        shortForm: '倍',\n        rubyForm: '{倍|ばい}',\n    },\n    {\n        shortForm: '下',\n        rubyForm: '{下|した}',\n    },\n    {\n        shortForm: '際',\n        rubyForm: '{際|さい}',\n    },\n    {\n        shortForm: '好',\n        rubyForm: '{好|す}',\n    },\n    {\n        shortForm: '表',\n        rubyForm: '{表|おもて}',\n    },\n];\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\n    acc[cur.shortForm] = cur;\n    return acc;\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\nconst type8CommonInstruction: FinishInstruction[] = [\n    { blendMode: 'overlay', opacity: 0.65 },\n    { blendMode: 'multiply', opacity: 0.55 },\n];\n\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\n\nexport type FinishInformation = {\n    value: string,\n    label: React.ReactNode,\n    partInstructionMap: Record<string, FinishInstruction[]>,\n};\nexport const FinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {},\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {},\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            'art-overlay': type3CommonInstruction,\n            'art-border': type3CommonInstruction,\n            'art-border-pendulum': type3CommonInstruction,\n            'border-pendulum': type3CommonInstruction,\n            'attribute': type3CommonInstruction,\n            'frame': type3CommonInstruction,\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {},\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {},\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {},\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\n        },\n    },\n    type8: {\n        value: 'type8',\n        label: '8',\n        partInstructionMap: {\n            'art-border': type8CommonInstruction,\n            'art-border-pendulum': type8CommonInstruction,\n            'border-pendulum': type8CommonInstruction,\n            'frame': type8CommonInstruction,\n            'frame-background': type8CommonInstruction,\n            'name': type8CommonInstruction,\n            'star': type8CommonInstruction,\n        },\n    },\n    type9: {\n        value: 'type9',\n        label: '9',\n        partInstructionMap: {\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\n        },\n    },\n};\n\nexport const ArtFinishMap: Record<string, FinishInformation> = {\n    type1: {\n        value: 'type1',\n        label: '1',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n    type2: {\n        value: 'type2',\n        label: '2',\n        partInstructionMap: {\n            art: [\n                { opacity: 0.08, blendMode: 'darken' },\n                { opacity: 0.28, blendMode: 'color-dodge' },\n                { opacity: 0.48, blendMode: 'multiply' },\n            ],\n        },\n    },\n    type3: {\n        value: 'type3',\n        label: '3',\n        partInstructionMap: {\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\n        },\n    },\n    type4: {\n        value: 'type4',\n        label: '4',\n        partInstructionMap: {\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type5: {\n        value: 'type5',\n        label: '5',\n        partInstructionMap: {\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type6: {\n        value: 'type6',\n        label: '6',\n        partInstructionMap: {\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\n        },\n    },\n    type7: {\n        value: 'type7',\n        label: '7',\n        partInstructionMap: {\n            art: [{}],\n        },\n    },\n};\n\nexport type FoilDictionary = {\n    normal: string,\n    gold: string,\n    platinum: string,\n};\nexport const FoilNameMap = {\n    normal: 'normal' as const,\n    gold: 'gold' as const,\n    platinum: 'platinum' as const,\n};\nexport const getFoilList = (dictionary?: FoilDictionary) => [\n    {\n        name: FoilNameMap['normal' as const],\n        label: dictionary?.normal,\n        color: '#747b95',\n        isOption: false,\n    },\n    {\n        name: FoilNameMap['gold' as const],\n        label: dictionary?.gold,\n        color: '#cfa65f',\n        isOption: true,\n    },\n    {\n        name: FoilNameMap['platinum' as const],\n        label: dictionary?.platinum,\n        color: '#b1b1b1',\n        isOption: true,\n    },\n];\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\n    getFont: () => string,\n    getFontInfo: () => {\n        style: '' | 'italic' | 'small-caps',\n        size: `${number}px`,\n        sizeAsNumber: number,\n        family: string,\n        weight: '' | 'bold',\n    },\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\n    setFamily(nextFamily: string): FontGetter,\n};\n\nexport type FontSizeData = {\n    bulletSymbolOffset?: number,\n    bulletSymbolWidth: number,\n    capitalLetterRatio?: number,\n    fontSize: number,\n    headTextFontRatio?: number,\n    headTextSpacing?: number,\n    iconSymbolWidth?: number,\n    largeSymbolRatio?: number,\n    letterSpacing?: number,\n    lineCount: number,\n    lineHeight: number,\n    offsetY?: number,\n    ordinalFontOffsetY?: number,\n    ordinalFontRatio?: number,\n    squareBracketRatio?: number,\n    wordLetterSpacing?: number,\n};\nexport const DefaultFontSizeData = {\n    bulletSymbolOffset: 0,\n    capitalLetterRatio: 1,\n    headTextFontRatio: 0.355,\n    headTextSpacing: 1.5,\n    largeSymbolRatio: 1.35,\n    letterSpacing: 0,\n    offsetY: 0,\n    ordinalFontOffsetY: -2,\n    ordinalFontRatio: 1 / 1.1,\n    squareBracketRatio: 1,\n};\n\n/**\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\n * \n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\n */\nexport type FontDeviation = {\n    yRatio?: number,\n    yOffset?: number,\n};\nexport const DefaultFontDeviation: Required<FontDeviation> = {\n    yOffset: 0,\n    yRatio: 1,\n};\n\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\nexport type FontData = {\n    alphabetFont: string,\n    font: string,\n    fontList: FontSizeData[],\n    letterDeviationMap?: Record<string, FontDeviation>,\n    fontStyle: string,\n    furiganaFont: string,\n    headTextBold?: boolean,\n    headTextFillStyle?: string,\n    headTextGapRatio?: number,\n    headTextHeightRatio?: number,\n    headTextOverflow?: 'normal' | 'condense',\n    metricMethod?: MetricMethod,\n    numberFont?: string,\n    numberFontRatio?: number,\n    ordinalFont: string,\n    symbolFont: string,\n    symbolFontRatio: number,\n    weight?: 'bold',\n};\nexport const DefaultFontData = {\n    headTextHeightRatio: 0.800,\n    headTextOverflow: 'normal' as 'normal' | 'condense',\n    headTextBold: true,\n    headTextGapRatio: 0.03125,\n};\nexport type TextData = {\n    fontData: FontData,\n    fontLevel: number,\n    currentFont: FontGetter,\n};\n\nconst DefaultEffectFontData = {\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    headTextFontRatio: 0.7,\n    headTextHeightRatio: 0.815,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 1,\n    headTextGapRatio: 0,\n};\nconst DefaultTCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: 'MatrixBook',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nexport const DefaultTCGNormalFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"StoneSerif-Italic\"',\n    headTextHeightRatio: 0.750,\n    fontStyle: 'tcg',\n    fontList: [],\n};\nconst DefaultOCGEffectFontData: FontData = {\n    ...DefaultEffectFontData,\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    fontStyle: 'ocg',\n    metricMethod: 'compact',\n    fontList: [],\n};\n\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\nexport const EffectFontData: Record<string, FontData> = {\n    'tcg': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\n        ],\n    },\n    'tcg-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'tcg-type-stat': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\n        ]\n    },\n    'tcg-type': {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\n        ]\n    },\n    'ocg': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\n        ]\n    },\n    'ocg-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n    'ocg-type-stat': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\n        ]\n    },\n    'ocg-type': {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\n        ]\n    },\n};\n\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\n    { bulletSymbolWidth: 23, fontSize: 24.5, lineHeight: 24.9, lineCount: 6 },\n    { bulletSymbolWidth: 23, fontSize: 19.28, lineHeight: 21.5, lineCount: 7 },\n    { bulletSymbolWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\n    { bulletSymbolWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9 },\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\n];\n\nexport const PendulumEffectFontData: Record<string, FontData> = {\n    tcg: {\n        ...DefaultTCGEffectFontData,\n        fontList: [\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\n            { bulletSymbolWidth: 18, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\n            { bulletSymbolWidth: 17, fontSize: 17.0, lineHeight: 17.40, lineCount: 7 },\n            { bulletSymbolWidth: 14, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\n        ],\n    },\n    ocg: {\n        ...DefaultOCGEffectFontData,\n        fontList: [\n            {\n                bulletSymbolWidth: 41,\n                bulletSymbolOffset: 3,\n                fontSize: 45.55,\n                lineHeight: 57.6,\n                headTextFontRatio: 0.2,\n                lineCount: 2,\n            },\n            {\n                bulletSymbolWidth: 31,\n                bulletSymbolOffset: 2,\n                fontSize: 35.55,\n                lineHeight: 40.6,\n                headTextFontRatio: 0.3,\n                lineCount: 3,\n            },\n            {\n                bulletSymbolWidth: 23,\n                bulletSymbolOffset: 1,\n                fontSize: 25.05,\n                lineHeight: 30.6,\n                headTextFontRatio: 0.35,\n                lineCount: 4,\n            },\n            {\n                bulletSymbolWidth: 16,\n                fontSize: 22.05,\n                lineHeight: 25.2,\n                headTextFontRatio: 0.4,\n                lineCount: 5,\n            },\n        ],\n    },\n};\n\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\n    veryStrict: {\n        '1': 600,\n        '2': 620,\n        '3': 640,\n    },\n    strict: {\n        '1': 645,\n        '2': 665,\n        '3': 685,\n    },\n    loose: {\n        '1': 700,\n        '2': 710,\n        '3': 720,\n    },\n    veryLoose: {\n        '1': 740,\n        '2': 770,\n        '3': 800,\n    },\n    relaxed: {\n        '1': 850,\n        '2': 900,\n        '3': 950,\n    },\n};\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\n    veryStrict: {\n        label: '5',\n        order: 1,\n    },\n    strict: {\n        label: '4',\n        order: 2,\n    },\n    loose: {\n        label: '3',\n        order: 3,\n    },\n    veryLoose: {\n        label: '2',\n        order: 4,\n    },\n    relaxed: {\n        label: '1',\n        order: 5,\n    },\n};","import { FontData } from './font-data-effect';\n\nexport type NameFontData = {\n    value: string,\n    labelKey: string,\n    fontData: FontData,\n};\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\n    Default: {\n        value: 'Default',\n        labelKey: 'input.name-style.font-type.default',\n        fontData: {\n            alphabetFont: 'MatrixRegularSmallCaps',\n            font: 'MatrixRegularSmallCaps',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.55,\n            fontList: [{\n                bulletSymbolWidth: 64,\n                fontSize: 91.5,\n                headTextFontRatio: 0.190,\n                letterSpacing: 0.015,\n                lineCount: 1,\n                lineHeight: 91.5,\n                offsetY: 0,\n            }],\n            letterDeviationMap: {\n                i: { yOffset: 1, yRatio: 1.03 },\n                ì: { yOffset: 1, yRatio: 1.03 },\n                í: { yOffset: 1, yRatio: 1.03 },\n                î: { yOffset: 1, yRatio: 1.03 },\n                ï: { yOffset: 1, yRatio: 1.03 },\n                ĩ: { yOffset: 1, yRatio: 1.03 },\n                ī: { yOffset: 1, yRatio: 1.03 },\n                ĭ: { yOffset: 1, yRatio: 1.03 },\n                į: { yOffset: 1, yRatio: 1.03 },\n                ǐ: { yOffset: 1, yRatio: 1.03 },\n                ȉ: { yOffset: 1, yRatio: 1.03 },\n                ȋ: { yOffset: 1, yRatio: 1.03 },\n                ɨ: { yOffset: 1, yRatio: 1.03 },\n                ɩ: { yOffset: 1, yRatio: 1.03 },\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\n                ḭ: { yOffset: 1, yRatio: 1.03 },\n                ḯ: { yOffset: 1, yRatio: 1.03 },\n                ỉ: { yOffset: 1, yRatio: 1.03 },\n                ị: { yOffset: 1, yRatio: 1.03 },\n                I: { yOffset: 1, yRatio: 1.022 },\n                Ì: { yOffset: 1, yRatio: 1.022 },\n                Í: { yOffset: 1, yRatio: 1.022 },\n                Î: { yOffset: 1, yRatio: 1.022 },\n                Ï: { yOffset: 1, yRatio: 1.022 },\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\n                Ī: { yOffset: 1, yRatio: 1.022 },\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\n                Į: { yOffset: 1, yRatio: 1.022 },\n                İ: { yOffset: 1, yRatio: 1.022 },\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\n                Ị: { yOffset: 1, yRatio: 1.022 },\n                E: { yOffset: 1, yRatio: 1.04 },\n                Ĕ: { yOffset: 1, yRatio: 1.04 },\n                ĕ: { yOffset: 1, yRatio: 1.04 },\n                Ḝ: { yOffset: 1, yRatio: 1.04 },\n                ḝ: { yOffset: 1, yRatio: 1.04 },\n                Ȇ: { yOffset: 1, yRatio: 1.04 },\n                ȇ: { yOffset: 1, yRatio: 1.04 },\n                Ê: { yOffset: 1, yRatio: 1.04 },\n                ê: { yOffset: 1, yRatio: 1.04 },\n                Ê̄: { yOffset: 1, yRatio: 1.04 },\n                ê̄: { yOffset: 1, yRatio: 1.04 },\n                Ê̌: { yOffset: 1, yRatio: 1.04 },\n                ê̌: { yOffset: 1, yRatio: 1.04 },\n                Ề: { yOffset: 1, yRatio: 1.04 },\n                ề: { yOffset: 1, yRatio: 1.04 },\n                Ế: { yOffset: 1, yRatio: 1.04 },\n                ế: { yOffset: 1, yRatio: 1.04 },\n                Ể: { yOffset: 1, yRatio: 1.04 },\n                ể: { yOffset: 1, yRatio: 1.04 },\n                Ễ: { yOffset: 1, yRatio: 1.04 },\n                ễ: { yOffset: 1, yRatio: 1.04 },\n                Ệ: { yOffset: 1, yRatio: 1.04 },\n                ệ: { yOffset: 1, yRatio: 1.04 },\n                Ẻ: { yOffset: 1, yRatio: 1.04 },\n                ẻ: { yOffset: 1, yRatio: 1.04 },\n                Ḙ: { yOffset: 1, yRatio: 1.04 },\n                ḙ: { yOffset: 1, yRatio: 1.04 },\n                Ě: { yOffset: 1, yRatio: 1.04 },\n                ě: { yOffset: 1, yRatio: 1.04 },\n                Ɇ: { yOffset: 1, yRatio: 1.04 },\n                ɇ: { yOffset: 1, yRatio: 1.04 },\n                Ė: { yOffset: 1, yRatio: 1.04 },\n                ė: { yOffset: 1, yRatio: 1.04 },\n                Ė́: { yOffset: 1, yRatio: 1.04 },\n                ė́: { yOffset: 1, yRatio: 1.04 },\n                Ė̃: { yOffset: 1, yRatio: 1.04 },\n                ė̃: { yOffset: 1, yRatio: 1.04 },\n                Ẹ: { yOffset: 1, yRatio: 1.04 },\n                ẹ: { yOffset: 1, yRatio: 1.04 },\n                Ë: { yOffset: 1, yRatio: 1.04 },\n                ë: { yOffset: 1, yRatio: 1.04 },\n                È: { yOffset: 1, yRatio: 1.04 },\n                è: { yOffset: 1, yRatio: 1.04 },\n                È̩: { yOffset: 1, yRatio: 1.04 },\n                è̩: { yOffset: 1, yRatio: 1.04 },\n                Ȅ: { yOffset: 1, yRatio: 1.04 },\n                ȅ: { yOffset: 1, yRatio: 1.04 },\n                É: { yOffset: 1, yRatio: 1.04 },\n                é: { yOffset: 1, yRatio: 1.04 },\n                É̩: { yOffset: 1, yRatio: 1.04 },\n                Ē: { yOffset: 1, yRatio: 1.04 },\n                ē: { yOffset: 1, yRatio: 1.04 },\n                Ḕ: { yOffset: 1, yRatio: 1.04 },\n                ḕ: { yOffset: 1, yRatio: 1.04 },\n                Ḗ: { yOffset: 1, yRatio: 1.04 },\n                ḗ: { yOffset: 1, yRatio: 1.04 },\n                Ẽ: { yOffset: 1, yRatio: 1.04 },\n                ẽ: { yOffset: 1, yRatio: 1.04 },\n                Ḛ: { yOffset: 1, yRatio: 1.04 },\n                ḛ: { yOffset: 1, yRatio: 1.04 },\n                Ę: { yOffset: 1, yRatio: 1.04 },\n                ę: { yOffset: 1, yRatio: 1.04 },\n                Ę́: { yOffset: 1, yRatio: 1.04 },\n                ę́: { yOffset: 1, yRatio: 1.04 },\n                Ę̃: { yOffset: 1, yRatio: 1.04 },\n                ę̃: { yOffset: 1, yRatio: 1.04 },\n                Ȩ: { yOffset: 1, yRatio: 1.04 },\n                ȩ: { yOffset: 1, yRatio: 1.04 },\n                E̩: { yOffset: 1, yRatio: 1.04 },\n                e̩: { yOffset: 1, yRatio: 1.04 },\n                ᶒ: { yOffset: 1, yRatio: 1.04 },\n            },\n        },\n    },\n    Arial: {\n        value: 'Arial',\n        labelKey: 'input.name-style.font-type.arial',\n        fontData: {\n            alphabetFont: 'Arial',\n            font: 'Arial',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            fontStyle: 'tcg',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            headTextHeightRatio: 0.825,\n            weight: 'bold',\n            fontList: [{\n                bulletSymbolWidth: 40.67,\n                fontSize: 61,\n                headTextFontRatio: 0.190,\n                letterSpacing: -0.14,\n                lineCount: 1,\n                lineHeight: 61,\n                offsetY: 3,\n            }],\n        },\n    },\n    OCG: {\n        value: 'OCG',\n        labelKey: 'input.name-style.font-type.ocg',\n        fontData: {\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n            headTextHeightRatio: 0.775,\n            headTextOverflow: 'condense',\n            headTextBold: true,\n            metricMethod: 'name',\n            numberFont: 'DFKakuTaiHiStd-W4',\n            numberFontRatio: 1.00,\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n            symbolFont: 'matrix',\n            symbolFontRatio: 0.775,\n            fontStyle: 'ocg',\n            fontList: [{\n                bulletSymbolWidth: 42.67,\n                fontSize: 64,\n                headTextFontRatio: 0.175,\n                headTextSpacing: 3,\n                letterSpacing: -0.03,\n                lineCount: 1,\n                lineHeight: 64,\n                offsetY: 0,\n            }],\n        }\n    },\n};","import { FontData } from './font-data-effect';\n\nexport const tcgCreatorFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            offsetY: -1,\n            bulletSymbolWidth: 20.05,\n            fontSize: 21.2,\n            lineHeight: 21.2,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 20,\n            lineHeight: 20,\n            lineCount: 1,\n            letterSpacing: -0.01,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n    ],\n};\nexport const ocgCreatorFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    metricMethod: 'creator',\n    fontStyle: 'ocg',\n    fontList: [{\n        bulletSymbolWidth: 18,\n        fontSize: 19.0,\n        letterSpacing: 0.05,\n        lineHeight: 20.5,\n        lineCount: 1,\n        headTextFontRatio: 0,\n        wordLetterSpacing: 0.11,\n    }],\n};\nexport const CreatorFontData: Record<string, FontData> = {\n    tcg: tcgCreatorFontData,\n    ocg: ocgCreatorFontData,\n};\n\nexport const tcgPasswordFontData: FontData = {\n    font: 'stone-serif-regular',\n    alphabetFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'stone-serif-regular',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 21,\n            lineHeight: 21,\n            lineCount: 1,\n            letterSpacing: 0,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n            offsetY: 1,\n        },\n    ],\n};\nexport const ocgPasswordFontData: FontData = {\n    font: '\"FOT-Rodin Pro M\"',\n    alphabetFont: '\"FOT-Rodin Pro M\"',\n    numberFont: 'stone-serif-regular',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    metricMethod: 'furigana',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 22.219,\n            lineHeight: 22.219,\n            lineCount: 1,\n            letterSpacing: 0.1,\n            headTextFontRatio: 0.4,\n            largeSymbolRatio: 1.25,\n        },\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 19.0,\n            headTextFontRatio: 0,\n            largeSymbolRatio: 1.25,\n            lineCount: 1,\n            lineHeight: 20.5,\n            ordinalFontOffsetY: 1,\n            ordinalFontRatio: 1.25,\n        },\n    ],\n};\nexport const PasswordFontData: Record<string, FontData> = {\n    tcg: tcgPasswordFontData,\n    ocg: ocgPasswordFontData,\n};\n\nexport const tcgTypeAbilityFontData: FontData = {\n    font: 'YuGiOhITCStoneSerifBSc',\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'tcg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 31.5,\n            lineHeight: 31.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: 0.02,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 32.75,\n            lineHeight: 32.75,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            capitalLetterRatio: 0.95,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n        {\n            bulletSymbolWidth: 14.80,\n            fontSize: 44.5,\n            lineHeight: 44.5,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\n            capitalLetterRatio: 0.90001,\n            squareBracketRatio: 0.94001,\n            letterSpacing: -0.03,\n            headTextFontRatio: 0.4,\n        },\n    ],\n};\nexport const ocgTypeAbilityFontData: FontData = {\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\n    symbolFont: 'matrix',\n    symbolFontRatio: 0.8,\n    headTextHeightRatio: 0.775,\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\n    fontStyle: 'ocg',\n    fontList: [\n        {\n            bulletSymbolWidth: 20.05,\n            fontSize: 25.2,\n            lineHeight: 25.2,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 21.80,\n            fontSize: 26.5,\n            lineHeight: 26.5,\n            lineCount: 1,\n            iconSymbolWidth: 26,\n            headTextFontRatio: 0.300,\n        },\n        {\n            bulletSymbolWidth: 36.80,\n            fontSize: 48,\n            lineHeight: 48,\n            lineCount: 1,\n            iconSymbolWidth: 45,\n            headTextFontRatio: 0.25,\n            headTextSpacing: 3,\n            letterSpacing: -0.07,\n            squareBracketRatio: 1.02501,\n        },\n    ],\n};\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\n    tcg: tcgTypeAbilityFontData,\n    ocg: ocgTypeAbilityFontData,\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\nexport const tcgToOCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    '「': '｢',\n    '」': '｣',\n    '、': '､',\n    // '/': '／',\n    ':': '：',\n    // 'ー': 'ｰ',\n    // '・': '･',\n    // '・': '･',\n    // '：': ':',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\nexport const ocgToTCGLetterMap: Record<string, string> = {\n    '０': '0',\n    '１': '1',\n    '２': '2',\n    '３': '3',\n    '４': '4',\n    '５': '5',\n    '６': '6',\n    '７': '7',\n    '８': '8',\n    '９': '9',\n    'ａ': 'a',\n    'ｂ': 'b',\n    'ｃ': 'c',\n    'ｄ': 'd',\n    'ｅ': 'e',\n    'ｆ': 'f',\n    'ｇ': 'g',\n    'ｈ': 'h',\n    'ｉ': 'i',\n    'ｊ': 'j',\n    'ｋ': 'k',\n    'ｌ': 'l',\n    'ｍ': 'm',\n    'ｎ': 'n',\n    'ｏ': 'o',\n    'ｐ': 'p',\n    'ｑ': 'q',\n    'ｒ': 'r',\n    'ｓ': 's',\n    'ｔ': 't',\n    'ｕ': 'u',\n    'ｖ': 'v',\n    'ｗ': 'w',\n    'ｘ': 'x',\n    'ｙ': 'y',\n    'ｚ': 'z',\n    'Ａ': 'A',\n    'Ｂ': 'B',\n    'Ｃ': 'C',\n    'Ｄ': 'D',\n    'Ｅ': 'E',\n    'Ｆ': 'F',\n    'Ｇ': 'G',\n    'Ｈ': 'H',\n    'Ｉ': 'I',\n    'Ｊ': 'J',\n    'Ｋ': 'K',\n    'Ｌ': 'L',\n    'Ｍ': 'M',\n    'Ｎ': 'N',\n    'Ｏ': 'O',\n    'Ｐ': 'P',\n    'Ｑ': 'Q',\n    'Ｒ': 'R',\n    'Ｓ': 'S',\n    'Ｔ': 'T',\n    'Ｕ': 'U',\n    'Ｖ': 'V',\n    'Ｗ': 'W',\n    'Ｘ': 'X',\n    'Ｙ': 'Y',\n    'Ｚ': 'Z',\n    // '｡': '。',\n    '｢': '「',\n    '｣': '」',\n    '､': '、',\n    // '／': '/',\n    '：': ':',\n    // 'ｰ': 'ー',\n    // '･': '・',\n    // '･': '・',\n    // ':': '：',\n    '∀': 'Ɐ',\n    'ꓯ': 'Ɐ',\n    'ꓛ': 'Ɔ',\n    'ꓱ': 'Ǝ',\n    'ꓞ': 'Ⅎ',\n    'ꓨ': '⅁',\n    'ꓘ': 'Ʞ',\n    'ꓶ': 'Ꞁ',\n    '⅂': 'Ꞁ',\n    'ꓒ': 'Ԁ',\n    'ꓕ': 'Ʇ',\n    'Ո': 'ꓵ',\n    'ꓥ': 'Ʌ',\n    '＜': '<',\n    '＞': '>',\n    '！': '!',\n    '（': '(',\n    '）': ')',\n    '＆': '&',\n    '＇': '\\'',\n    '＠': '@',\n};\n\n// const MirrorableLetter = {\n//     'ꟻ': 'Ｆ',\n//     '⅃': 'Ｌ',\n//     'ꟼ': 'Ｐ',\n//     'И': 'Ｎ',\n//     'Я': 'Ｒ',\n// };\n\nexport const ocgNumberCircleMap: Record<string, string> = {\n    '(１)': '①',\n    '(２)': '②',\n    '(３)': '③',\n    '(４)': '④',\n    '(５)': '⑤',\n    '(６)': '⑥',\n    '(７)': '⑦',\n    '(８)': '⑧',\n    '(９)': '⑨',\n    '(１０)': '⑩',\n    '(１１)': '⑪',\n    '(１２)': '⑫',\n    '(１３)': '⑬',\n    '(１４)': '⑭',\n    '(１５)': '⑮',\n    '(１６)': '⑯',\n    '(１７)': '⑰',\n    '(１８)': '⑱',\n    '(１９)': '⑲',\n    '(２０)': '⑳',\n    '(1)': '①',\n    '(2)': '②',\n    '(3)': '③',\n    '(4)': '④',\n    '(5)': '⑤',\n    '(6)': '⑥',\n    '(7)': '⑦',\n    '(8)': '⑧',\n    '(9)': '⑨',\n    '(10)': '⑩',\n    '(11)': '⑪',\n    '(12)': '⑫',\n    '(13)': '⑬',\n    '(14)': '⑭',\n    '(15)': '⑮',\n    '(16)': '⑯',\n    '(17)': '⑰',\n    '(18)': '⑱',\n    '(19)': '⑲',\n    '(20)': '⑳',\n};\n\n/** Newest at top */\nexport const copyrightMap = {\n    ocg: [\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\n        '©高橋和希 スタジオ・ダイス／集英社',\n        '©高橋和希／集英社',\n    ],\n    tcg: [\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n        '©1996 KAZUKI TAKAHASHI',\n        '©KAZUKI TAKAHASHI / SHUEISHA',\n    ],\n};\n\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\nexport const ocgToTCGTermMap: Record<string, string> = {\n    /** monster type */\n    '水族': 'Aqua',\n    '獣族': 'Beast',\n    '獣戦士族': 'Beast-Warrior',\n    '創造神族': 'Creator God',\n    'サイバース族': 'Cyberse',\n    '恐竜族': 'Dinosaur',\n    '幻神獣族': 'Divine-Beast',\n    'ドラゴン族': 'Dragon',\n    '天使族': 'Fairy',\n    '悪魔族': 'Fiend',\n    '魚族': 'Fish',\n    'ギャラクシー族': 'Galaxy',\n    '幻想魔族': 'Illusion',\n    '昆虫族': 'Insect',\n    '機械族': 'Machine',\n    '植物族': 'Plant',\n    'サイキック族': 'Psychic',\n    '炎族': 'Pyro',\n    '爬虫類族': 'Reptile',\n    '岩石族': 'Rock',\n    '海竜族': 'Sea Serpent',\n    '魔法使い族': 'Spellcaster',\n    '雷族': 'Thunder',\n    '戦士族': 'Warrior',\n    '鳥獣族': 'Winged Beast',\n    '幻竜族': 'Wyrm',\n    'アンデット族': 'Zombie',\n    'サイボーグ族': 'Cyborg',\n    '天界戦士族': 'Celestial Warrior',\n    'ハイドラゴン族': 'High Dragon',\n    '魔導騎士族': 'Magical Knight',\n    'オメガサイキック族': 'Omega Psychic',\n    /** type */\n    'モンスター': 'Monster',\n    '魔法カード': 'Spell Card',\n    '罠カード': 'Trap Card',\n    'アクション': 'Action',\n    /** subType */\n    '通常': 'Normal',\n    '効果': 'Effect',\n    '儀式': 'Ritual',\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\n    '融合': 'Fusion',\n    'シンクロ': 'Synchro',\n    'エクシーズ': 'Xyz',\n    'ペンデュラム': 'Pendulum',\n    'リンク': 'Link',\n    'マキシマム': 'Maximum',\n    'トークン': 'Token',\n    '特殊召喚': 'Special Summon',\n    'ダークシンクロモンスター': 'Dark Synchro',\n    /** ability */\n    'チューナー': 'Tuner',\n    'デュアル': 'Gemini',\n    'リバース': 'Flip',\n    'トゥーン': 'Toon',\n    'スピリット': 'Spirit',\n    'ユニオン': 'Union',\n    /** creator copyright */\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\n    /** sample card */\n    '{純|ジュン}{狐|こ}': 'Junko',\n    [`自分フィールドの効果モンスター×２体以上\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\n    // eslint-disable-next-line quotes\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\n};\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\n    const [ocgTerm, tcgTerm] = cur;\n    acc[tcgTerm] = ocgTerm;\n\n    return acc;\n}, {\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\n} as Record<string, string>);","export type FrameInfo = {\n    name: string,\n    nameKey: string,\n    edition: 'normal' | 'extendend',\n    labelColor: string,\n    labelBackgroundColor?: string,\n    labelBackgroundColorList?: string[],\n    labelBackgroundImage?: string,\n    sortWeight: number,\n};\nexport const FrameInfoMap: Record<string, FrameInfo> = {\n    'normal': {\n        name: 'normal',\n        nameKey: 'input.frame.normal',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c49c5e',\n        sortWeight: 100,\n    },\n    'effect': {\n        name: 'effect',\n        nameKey: 'input.frame.effect',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#b96c49',\n        sortWeight: 90,\n    },\n    'fusion': {\n        name: 'fusion',\n        nameKey: 'input.frame.fusion',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#8948a4',\n        sortWeight: 80,\n    },\n    'synchro': {\n        name: 'synchro',\n        nameKey: 'input.frame.synchro',\n        labelColor: '#000',\n        edition: 'normal',\n        labelBackgroundColor: '#efefef',\n        sortWeight: 70,\n    },\n    'xyz': {\n        name: 'xyz',\n        nameKey: 'input.frame.xyz',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#000000',\n        sortWeight: 60,\n    },\n    'link': {\n        name: 'link',\n        nameKey: 'input.frame.link',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#0c8ac6',\n        sortWeight: 50,\n    },\n    'ritual': {\n        name: 'ritual',\n        nameKey: 'input.frame.ritual',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#5e85c9',\n        sortWeight: 85,\n    },\n    'spell': {\n        name: 'spell',\n        nameKey: 'input.frame.spell',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#1b8f83',\n        sortWeight: 30,\n    },\n    'trap': {\n        name: 'trap',\n        nameKey: 'input.frame.trap',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#c32a8c',\n        sortWeight: 25,\n    },\n    'token': {\n        name: 'token',\n        nameKey: 'input.frame.token',\n        labelColor: '#ffffff',\n        edition: 'normal',\n        labelBackgroundColor: '#6f6c6b',\n        sortWeight: 1,\n    },\n    'dark-synchro': {\n        name: 'dark-synchro',\n        nameKey: 'input.frame.dark-synchro',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4d4543',\n        sortWeight: 15,\n    },\n    'obelisk': {\n        name: 'obelisk',\n        nameKey: 'input.frame.obelisk',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#515eb0',\n        sortWeight: 10,\n    },\n    'osiris': {\n        name: 'osiris',\n        nameKey: 'input.frame.osiris',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#bd5044',\n        sortWeight: 9,\n    },\n    'ra': {\n        name: 'ra',\n        nameKey: 'input.frame.ra',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColor: '#b9ad34',\n        sortWeight: 8,\n    },\n    'raviel': {\n        name: 'raviel',\n        nameKey: 'input.frame.raviel',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#313c5f',\n        sortWeight: 7,\n    },\n    'uria': {\n        name: 'uria',\n        nameKey: 'input.frame.uria',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#623320',\n        sortWeight: 6,\n    },\n    'hamon': {\n        name: 'hamon',\n        nameKey: 'input.frame.hamon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#534a19',\n        sortWeight: 5,\n    },\n    'lg-dragon': {\n        name: 'lg-dragon',\n        nameKey: 'input.frame.lg-dragon',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#4e84a4',\n        sortWeight: 3,\n    },\n    'speed-skill': {\n        name: 'speed-skill',\n        nameKey: 'input.frame.speed-skill',\n        labelColor: '#ffffff',\n        edition: 'extendend',\n        labelBackgroundColor: '#199cd5',\n        sortWeight: 2,\n    },\n    'zarc': {\n        name: 'zarc',\n        nameKey: 'input.frame.zarc',\n        labelColor: '#000',\n        edition: 'extendend',\n        labelBackgroundColorList: [\n            'rgba(185,108,73,1)',\n            'rgba(137,72,164,1)',\n            'rgba(239,239,239,1)',\n            'rgba(0,0,0,1)',\n        ],\n        labelBackgroundImage: `linear-gradient(90deg, ${[\n            'rgba(185,108,73,1) 23%',\n            'rgba(137,72,164,1) 27%',\n            'rgba(137,72,164,1) 48%',\n            'rgba(239,239,239,1) 52%',\n            'rgba(239,239,239,1) 73%',\n            'rgba(0,0,0,1) 77%',\n        ].join(', ')})`,\n        sortWeight: 4,\n    },\n};\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\n    { top: 175, left: 55, width: 100, height: 100 },\n    { top: 165, left: 323, width: 170, height: 80 },\n    { top: 175, left: 655, width: 100, height: 100 },\n    { top: 442, left: 45, width: 70, height: 170 },\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\n    { top: 442, left: 700, width: 70, height: 170 },\n    { top: 775, left: 55, width: 100, height: 100 },\n    { top: 810, left: 323, width: 170, height: 80 },\n    { top: 775, left: 655, width: 100, height: 100 },\n];\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\nexport const LinkRotateMap: Record<string, number> = {\n    '1': LinkRotateList[0],\n    '2': LinkRotateList[1],\n    '3': LinkRotateList[2],\n    '4': LinkRotateList[3],\n    '6': LinkRotateList[5],\n    '7': LinkRotateList[6],\n    '8': LinkRotateList[7],\n    '9': LinkRotateList[8],\n};\nexport const LinkIconMap: Record<string, string> = {\n    '1': '🡔',\n    '2': '🡑',\n    '3': '🡕',\n    '4': '🡐',\n    '6': '🡒',\n    '7': '🡗',\n    '8': '🡓',\n    '9': '🡖',\n};","import { ocgKeywordDataList } from './dictionary';\n\nexport const ST_ICON_SYMBOL = '⦾';\n\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\n\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\n\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\n\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\n\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\n\nexport const NB_WORD_OPEN = '⦉';\nexport const NB_WORD_CLOSE = '⦊';\nexport const NB_LINE_OPEN = '⟅';\nexport const NB_LINE_CLOSE = '⟆';\nexport const NB_UNCOMPRESSED_START = '⟬';\nexport const NB_UNCOMPRESSED_END = '⟭';\n/** Remove all control characters */\nexport const NormalizeTextRegex = new RegExp(`[${[\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n].join('')}]|(\\\\|[^}]+})`, 'g');\n\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\n\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\n\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\n\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\n\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\n\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\n\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\n\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\n\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\n\nexport const OCGNumberRegex = new RegExp('[０-９]');\nexport const NumberRegex = new RegExp('[0-9]');\n\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\n\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\n\nexport const OCGDotRegex = new RegExp('[・]');\nexport const ChoonpuRegex = new RegExp('[ー]');\nexport const NoSpaceRegex = new RegExp('[―]');\n\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\n\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\n\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\n\nexport const OCGOffsetMap: Record<string, number> = {\n    '。': -0.2,\n    '､': -0.2,\n    '｢': 0,\n    '｣': 0,\n    '：': 0,\n    '>': 0.25,\n    '<': -0.25,\n};\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\n    '。': -0.5,\n    '：': -0.25,\n};\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\n    '>': 0.125,\n    '<': 0.125,\n};\nexport const TCGOffsetMap: Record<string, number> = {\n    // Example\n    // '\\\\': -0.025,\n};\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\n};\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\n    // Example\n    // '\\\\': 0.3,\n};\n\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\n\nexport const BULLET_LETTER = '●';\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\n\nexport const MAX_LINE_REVERSE_INDENT = 20;\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\n\nexport const RUBY_REGEX = /{[^{}]+?}/;\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\nexport const RUBY_BONUS_RATIO = 0.1;\n\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\nexport const LETTER_GAP_RATIO = -0.5;\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\nimport { Foil } from './foil-finish';\nimport { CondenseType } from './font-data-effect';\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\nimport { v4 as uuid } from 'uuid';\n\nexport const getDefaultCrop = () => ({\n    x: 0,\n    y: 4,\n    width: 100,\n    height: 89.5,\n    unit: '%' as '%' | 'px',\n    aspect: 1,\n});\n\nexport type Card = ReturnType<typeof getDefaultCard>;\nexport const getDefaultCard = () => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'fusion',\n    foil: 'normal' as Foil,\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\n    finish: [] as string[],\n    artFinish: 'normal',\n    name: 'Junko',\n    nameStyleType: 'auto' as NameStyleType,\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\n    attribute: 'LIGHT',\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6 as number | string,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/h5kXZeC.png',\n    artData: '',\n    artFit: false,\n    artSource: 'online',\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit' as BackgroundType,\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\n    linkMap: [\n        '1',\n        '3',\n        '7',\n        '9',\n    ] as string[],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [\n        'Fairy',\n        'Fusion',\n        'Effect',\n    ] as string[],\n    effectStyle: {\n        condenseTolerant: 'strict' as CondenseType,\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: `[2+ Effect Monsters on your field]\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\n    setId: 'YGOC-EN001',\n    atk: '2000',\n    def: '2000',\n    password: '18199611',\n    sticker: 'holo5',\n    isFirstEdition: true,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    /** Extra information come from different card source such as YGOPro custom card maker */\n    externalInfo: {} as Record<string, any>,\n});\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\nexport const getDefaultInternalCard = () => ({\n    id: uuid(),\n    ...getDefaultCard(),\n});\n\nexport const getEmptyCard = (): Card => ({\n    version: 0,\n    format: 'tcg',\n    frame: 'effect',\n    foil: 'normal',\n    opacity: getDefaultCardOpacity(),\n    finish: [],\n    artFinish: 'normal',\n    name: '',\n    nameStyleType: 'auto',\n    nameStyle: getDefaultNameStyle(),\n    attribute: NO_ATTRIBUTE,\n    subFamily: NO_ICON,\n    cardIcon: 'auto',\n    star: 6,\n    starAlignment: 'auto',\n    art: 'https://i.imgur.com/jjtCuG5.png',\n    artData: '',\n    artSource: 'online',\n    artFit: false,\n    artCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    hasBackground: false,\n    background: '',\n    backgroundData: '',\n    backgroundFit: false,\n    backgroundSource: 'online',\n    backgroundType: 'fit',\n    backgroundCrop: {\n        x: 0,\n        y: 4,\n        width: 100,\n        height: 89.5,\n        unit: '%',\n        aspect: 1,\n    },\n    linkMap: [],\n    isLink: false,\n    isPendulum: false,\n    pendulumFrame: 'auto',\n    pendulumEffect: '',\n    pendulumScaleRed: '4',\n    pendulumScaleBlue: '4',\n    typeAbility: [],\n    effectStyle: {\n        condenseTolerant: 'strict',\n        upSize: 0,\n    },\n    pendulumStyle: {\n        upSize: 0,\n    },\n    effect: '',\n    setId: '',\n    atk: '0',\n    def: '0',\n    password: '',\n    sticker: NO_STICKER,\n    isFirstEdition: false,\n    isSpeedCard: false,\n    isLimitedEdition: false,\n    isDuelTerminalCard: false,\n    isLegacyCard: false,\n    /** A.k.a copyright */\n    creator: '',\n    furiganaHelper: true,\n    statTextStyle: getDefaultTextStyle(),\n    typeTextStyle: getDefaultTextStyle(),\n    effectTextStyle: getDefaultTextStyle(),\n    pendulumTextStyle: getDefaultTextStyle(),\n    otherTextStyle: getDefaultTextStyle(),\n    externalInfo: {},\n});\n\nexport const OpacityList = [\n    {\n        type: 'body' as const,\n        subType: 'artBorder' as const,\n        label: 'Card',\n        labelKey: 'input.opacity.body.label',\n        tooltipKey: 'input.opacity.art-border.tooltip',\n    },\n    {\n        type: 'name' as const,\n        subType: 'nameBorder' as const,\n        label: 'Name',\n        labelKey: 'input.opacity.name.label',\n        tooltipKey: 'input.opacity.name-border.tooltip',\n    },\n    {\n        type: 'pendulum' as const,\n        label: 'Pendulum',\n        labelKey: 'input.opacity.pendulum.label',\n        tooltipKey: null,\n    },\n    {\n        type: 'text' as const,\n        label: 'Effect',\n        labelKey: 'input.opacity.effect.label',\n        tooltipKey: null,\n    },\n];\n\nexport const DefaultColorList = [\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\n\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\n\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\n];\n\nexport const ResolutionMap = {\n    '549x800': {\n        label: '549 × 800',\n        width: 549,\n        height: 800,\n        settingValue: [549, 800] as [number, number],\n    },\n    '561x818': {\n        label: '561 × 818',\n        width: 561,\n        height: 818,\n        settingValue: [561, 818] as [number, number],\n    },\n    '813x1185': {\n        label: '813 × 1185',\n        width: 813,\n        height: 1185,\n        settingValue: [813, 1185] as [number, number],\n    },\n};\nexport const ResolutionList = [\n    ResolutionMap['549x800'],\n    ResolutionMap['561x818'],\n    ResolutionMap['813x1185'],\n];\n\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\nexport const ExportFormatList = [\n    {\n        value: 'csv' as const,\n        label: '.csv',\n    },\n    {\n        value: 'xlsx' as const,\n        label: '.xlsx',\n    },\n];\n\nexport * from './canvas';\nexport * from './compatible-card';\nexport * from './coordinate-data';\nexport * from './dictionary';\nexport * from './foil-finish';\nexport * from './font-data-effect';\nexport * from './font-data-name';\nexport * from './font-data-other';\nexport * from './format';\nexport * from './frame';\nexport * from './icon';\nexport * from './link';\nexport * from './name-preset';\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\n\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'normal' && checkMonster(card);\n};\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'xyz';\n};\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'dark-synchro';\n};\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\n    return card.isLink;\n};\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\n    return card.frame === 'speed-skill' && !checkMonster(card);\n};\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\n};\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\n    return [\n        'fusion',\n        'synchro',\n        'xyz',\n        'link',\n        'dark-synchro',\n        'zarc',\n    ].includes(card.frame);\n};\n\nexport const getCardFrame = (frame: string) => {\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\n};\nexport const getCardIconFromFrame = (frame: string) => {\n    if (frame === 'spell' || frame === 'trap') return 'st';\n    if (frame === 'xyz') return 'rank';\n    if (frame === 'dark-synchro') return 'negative-level';\n    if (frame === 'speed-skill') return 'none';\n    return 'level';\n};\n\nexport const checkLightHeader = (frame: string) => {\n    return !checkMonster({ frame }) || checkLightFrame(frame);\n};\n\nexport const checkLightFrame = (frame: string) => {\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\n};\n\nexport const resolveNameStyle = ({\n    format,\n    frame,\n    nameStyle,\n    nameStyleType,\n    foil,\n}: {\n    nameStyleType: NameStyleType,\n    nameStyle: Partial<NameStyle>,\n    frame: string,\n    format: string,\n    foil: Foil,\n}) => {\n    /** Custom style will be kept as is */\n    if (nameStyleType === 'custom') {\n        return nameStyle;\n    }\n\n    const isSpeedSkill = checkSpeedSkill({ frame });\n    const lightHeader = checkLightHeader(frame);\n\n    let contextualFont = 'Default';\n    if (format === 'ocg') contextualFont = 'OCG';\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\n\n    /** Predefined name style has dynamic font based on format unless explictly stated */\n    let contextualColor = {\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\n    };\n    if (nameStyleType === 'predefined') {\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\n            resultNameStyle.font = contextualFont;\n        }\n\n        return {\n            ...contextualColor,\n            ...resultNameStyle,\n        };\n    }\n\n    let contextualOutline = isSpeedSkill\n        ? {\n            hasOutline: true,\n            lineWidth: 6,\n            strokeStyle: '#000',\n        }\n        : {};\n\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\n\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\n    return {\n        font: contextualFont,\n        ...contextualColor,\n        ...contextualOutline,\n        ...foilStyle,\n        ...frameStyle,\n    };\n};","// @ts-nocheck\n/* eslint-disable */\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\n\"use strict\"\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\nimport { JSONUncrush } from '../3rd';\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\nimport { v4 as uuid } from 'uuid';\n\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\n    version: 've',\n    format: 'fm',\n    frame: 'fr',\n    foil: 'fo',\n    opacity: {\n        _newKey: 'op',\n        body: 'opbd',\n        pendulum: 'oppd',\n        name: 'opnm',\n        text: 'optx',\n        boundless: 'opbl',\n        /** legacy */\n        artFrame: 'opaf',\n        artBorder: 'opab',\n        nameBorder: 'opnb',\n        baseFill: 'opbf',\n    },\n    finish: 'fn',\n    art: 'ar',\n    artData: 'ad',\n    artFit: 'af',\n    artSource: 'as',\n    artFinish: 'afn',\n    artCrop: {\n        _newKey: 'arc',\n        x: 'arx',\n        y: 'ary',\n        width: 'arw',\n        height: 'arh',\n        unit: 'aru',\n        aspect: 'ara',\n    },\n    hasBackground: 'hbg',\n    background: 'bg',\n    backgroundFit: 'bf',\n    backgroundData: 'bgd',\n    backgroundSource: 'bgs',\n    backgroundType: 'bgt',\n    backgroundCrop: {\n        _newKey: 'bgc',\n        x: 'bgx',\n        y: 'bgy',\n        width: 'bgw',\n        height: 'bgh',\n        unit: 'bgu',\n        aspect: 'bga',\n    },\n    name: 'na',\n    nameStyleType: 'nst',\n    effectStyle: {\n        _newKey: 'es',\n        condenseTolerant: 'cdtl',\n        upSize: 'eus',\n    },\n    pendulumStyle: {\n        _newKey: 'ps',\n        upSize: 'pus',\n    },\n    nameStyle: {\n        _newKey: 'ns',\n        font: 'nsft',\n        fillStyle: 'nsfs',\n        headTextFillStyle: 'nshfs',\n        shadowColor: 'nssc',\n        shadowOffsetY: 'nssoy',\n        shadowOffsetX: 'nssox',\n        shadowBlur: 'nssb',\n        hasShadow: 'nshs',\n        lineColor: 'nslc',\n        lineWidth: 'nslw',\n        lineOffsetY: 'nsloy',\n        lineOffsetX: 'nslox',\n        hasOutline: 'nshl',\n        gradientAngle: 'nsgd',\n        gradientColor: 'nscg',\n        hasGradient: 'nshg',\n        preset: 'nspr',\n        pattern: 'nspt',\n    },\n    attribute: 'at',\n    subFamily: 'sf',\n    star: 'st',\n    starAlignment: 'sa',\n    cardIcon: 'it',\n    linkMap: 'lm',\n    isLink: 'il',\n    isPendulum: 'ip',\n    pendulumFrame: 'pf',\n    pendulumEffect: 'pe',\n    pendulumScaleRed: 'rs',\n    pendulumScaleBlue: 'bs',\n    typeAbility: 'ta',\n    effect: 'ef',\n    setId: 'si',\n    atk: 'atk',\n    def: 'def',\n    password: 'pw',\n    sticker: 'sti',\n    isFirstEdition: 'ife',\n    isSpeedCard: 'isp',\n    isDuelTerminalCard: 'idt',\n    isLimitedEdition: 'ile',\n    isLegacyCard: 'ilc',\n    creator: 'cr',\n    furiganaHelper: 'fh',\n    effectTextStyle: 'ets',\n    pendulumTextStyle: 'pts',\n    statTextStyle: 'sts',\n    typeTextStyle: 'tts',\n    otherTextStyle: 'ots',\n    externalInfo: 'ei',\n};\nconst legacyCardFieldShortenMap = {\n    passcode: 'pc',\n    picture: 'pt',\n    pictureCrop: {\n        _newKey: 'ptc',\n        x: 'ptx',\n        y: 'pty',\n        width: 'ptw',\n        height: 'pth',\n        unit: 'ptu',\n        aspect: 'pta',\n    },\n};\nconst cardFieldShortenMap = {\n    ...currentCardFieldShortenMap,\n    ...legacyCardFieldShortenMap,\n};\n\nexport const compressCardData = (\n    card: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const condensedCard: Record<string, any> = {};\n    const normalizedCard = { ...card };\n\n    Object.keys(normalizedCard).forEach(fieldKey => {\n        const fieldValue = normalizedCard[fieldKey];\n\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\n            const newKey = shortenMap[fieldKey]?._newKey;\n\n            if (newKey) {\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\n            }\n        } else {\n            const newFieldKey = shortenMap[fieldKey];\n\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\n        }\n    });\n\n    return condensedCard;\n};\n\nexport const decompressCardData = (\n    condensedCard: Record<string, any>,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const decompressedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && condensedCard[shortendKey]) {\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (condensedCard[shortenKey] != null) {\n                decompressedCard[fullKey] = condensedCard[shortenKey];\n            }\n        }\n    });\n    return decompressedCard;\n};\nexport const legacyReverseCardDataShortener = (\n    condensedCard: Record<string, any> | string,\n    shortenMap: Record<string, any> = cardFieldShortenMap,\n) => {\n    const normalizedCondensedCard = typeof condensedCard === 'string'\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\n        : condensedCard;\n\n    const unshortenedCard: Record<string, any> = {};\n    Object.keys(shortenMap).forEach(fullKey => {\n        const shortenKey = shortenMap[fullKey];\n\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\n            const shortendKey = shortenKey?._newKey;\n\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\n            }\n        } else {\n            if (normalizedCondensedCard[shortenKey] != null) {\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\n            }\n        }\n    });\n    return unshortenedCard;\n};\n\nexport const legacyRebuildCardData = (\n    card: Record<string, any> | string,\n    isCondensed = false,\n) => {\n    let rebuiltCard: Record<string, any>;\n    if (isCondensed) {\n        rebuiltCard = legacyReverseCardDataShortener(card);\n    } else {\n        rebuiltCard = typeof card === 'string'\n            ? JSON.parse(card)\n            : card;\n    }\n\n    return migrateCardData(rebuiltCard);\n};\n\n/** Migrate old version of card data into the new version without information loss */\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\n    const migratedCard = {\n        id: uuid(),\n        ...baseCard,\n        ...clone(card),\n    };\n\n    migratedCard.effectStyle = {\n        ...getEmptyCard().effectStyle,\n        ...migratedCard.effectStyle,\n    };\n\n    if (migratedCard.pendulumStyle == null) {\n        migratedCard.pendulumStyle = {\n            ...getEmptyCard().pendulumStyle,\n        };\n    }\n\n    if (migratedCard.version == null) migratedCard.version = 1;\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\n    if (migratedCard.finish == null) migratedCard.finish = [];\n\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\n    delete (migratedCard as any).picture;\n\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\n    delete (migratedCard as any).pictureCrop;\n\n    /** Seems like no image is fine for now. */\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\n\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\n        delete (migratedCard.opacity as any).artFrame;\n    }\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\n    delete (migratedCard.opacity as any).artFrame;\n\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\n    if (migratedCard.hasBackground == null\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\n    ) {\n        migratedCard.hasBackground = true;\n    }\n    migratedCard.backgroundCrop = {\n        ...getDefaultCrop(),\n        ...migratedCard.backgroundCrop,\n    };\n\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\n        migratedCard.isLink = true;\n    }\n\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\n    delete (migratedCard as any).kanjiHelper;\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\n\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\n    delete (migratedCard as any).passcode;\n\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\n\n    return migratedCard;\n};\n\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'isFirstEdition' in object\n            && 'typeAbility' in object\n            && 'setId' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\n    try {\n        return 'ife' in object\n            && 'ta' in object\n            && 'si' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nexport const ygoCarderToExportableData = (\n    card: Card,\n    _artRef?: HTMLCanvasElement | null,\n) => {\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\n        return {\n            isPartial: true,\n            result: compressCardData(card),\n        };\n    }\n    /** Remove art data here, it will easily exceed the limit of text area */\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\n\n    return {\n        isPartial: false,\n        result: compressCardData(normalizedCard),\n    };\n};\n\nconst ROUNDING_THRESHOLD = 0.1;\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\n    if (typeof numberLeft !== typeof numberRight) return false;\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\n    return numberLeft === numberRight;\n};\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\n    const {\n        aspect: aspectLeft,\n        height: heightLeft,\n        width: widthLeft,\n        x: xLeft,\n        y: yLeft,\n        unit: unitLeft,\n    } = cropLeft ?? {};\n    const {\n        aspect: aspectRight,\n        height: heightRight,\n        width: widthRight,\n        x: xRight,\n        y: yRight,\n        unit: unitRight,\n    } = cropRight ?? {};\n\n    return isPartialNumberEqual(aspectLeft, aspectRight)\n        && isPartialNumberEqual(heightLeft, heightRight)\n        && isPartialNumberEqual(widthLeft, widthRight)\n        && isPartialNumberEqual(xLeft, xRight)\n        && isPartialNumberEqual(yLeft, yRight)\n        && unitLeft === unitRight;\n};\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\n    const {\n        artCrop: artCropLeft,\n        backgroundCrop: backgroundCropLeft,\n        ...restLCard\n    } = cardLeft;\n    const {\n        artCrop: artCropRight,\n        backgroundCrop: backgroundCropRight,\n        ...restRCard\n    } = cardRight;\n\n    return equals(restLCard, restRCard)\n        && isCropDataEqual(artCropLeft, artCropRight)\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\n};","export const normalizeCardName = (name: string) => {\n    try {\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return name;\n    }\n};\nexport const normalizeCardEffect = (effect: string) => {\n    try {\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\n    } catch (e) {\n        console.error(e);\n        return effect;\n    }\n};\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\nexport const isYgoprodeckImage = (link: string) => {\n    try {\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\n\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\n    const link = document.createElement('a');\n\n    link.download = name;\n    link.href = window.URL.createObjectURL(blob);\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\n\n    const downloadEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n    });\n\n    link.dispatchEvent(downloadEvent);\n    link.remove();\n};","import {\n    Card,\n    OtherMakerCard,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    PresetNameStyle,\n    PresetNameStyleMap,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\nimport { isImageData } from './other';\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'Earth',\n    LIGHT: 'Light',\n    DARK: 'Dark',\n    FIRE: 'Fire',\n    WIND: 'Wind',\n    WATER: 'Water',\n    SPELL: 'Spell',\n    TRAP: 'Trap',\n    DIVINE: 'Divine',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'Normal',\n    effect: 'Effect',\n    ritual: 'Ritual',\n    fusion: 'Fusion',\n    synchro: 'Synchro',\n    xyz: 'Xyz',\n    link: 'Link',\n    token: 'Token',\n    spell: 'Spell',\n    trap: 'Trap',\n    'dark-synchro': 'Dark Synchro',\n    zarc: 'Unity',\n    'speed-skill': 'Skill',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n    'common': {\n        key: '',\n    },\n    'rare': {\n        key: 'rare--',\n        text: 'rare',\n    },\n    'secret': {\n        key: 'secretGradient-type3-',\n        text: 'secretGradient',\n        artFinish: 'type3',\n    },\n    'ultra': {\n        key: 'ultra-type3-',\n        text: 'ultra',\n        artFinish: 'type3',\n    },\n    'rainbow': {\n        key: 'platinum-type1-type1',\n        text: 'platinum',\n        artFinish: 'type1',\n        finish: ['type1'],\n    },\n};\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorKey, vendorValue] = cur;\n    acc[vendorValue.key] = vendorKey;\n\n    return acc;\n}, {});\n\n/**\n * Why does artRef here?\n * \n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\n * \n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\n */\nexport const ygoCarderToCardMakerData = (\n    card: Card,\n    artRef?: HTMLCanvasElement | null,\n): { result: OtherMakerCard, isPartial: boolean } => {\n    const {\n        name,\n        star,\n        typeAbility,\n        subFamily,\n        effect,\n        atk,\n        def,\n        art,\n        artData,\n        artSource,\n        password,\n        creator,\n        attribute,\n        setId,\n        pendulumEffect,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        isPendulum,\n        linkMap,\n        frame,\n        externalInfo,\n        nameStyle,\n        nameStyleType,\n        artFinish,\n        finish,\n    } = card;\n    const normalizedName = normalizeCardName(name);\n    const normalizedEffect = normalizeCardEffect(effect);\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\n    const normalizedIcon = cardIconMap[subFamily];\n    const normalizedAttribute = attributeMap[attribute];\n    const normalizedFrame = frameMap[frame];\n    const normalizedRarity = nameStyleType === 'predefined'\n        ? rarityMap[\n            [\n                nameStyle.preset,\n                artFinish,\n                finish.join('|'),\n            ].join('-')\n        ]\n        : 'common';\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\n\n    let isPartial = name !== normalizedName\n        || effect !== normalizedEffect\n        || pendulumEffect !== normalizedPendulumEffect\n        || normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const result = {\n        version: '1.0.0',\n        name: normalizedName,\n        level: `${star}`,\n        type: typeAbility.join('/'),\n        icon: normalizedIcon ?? '',\n        effect: normalizedEffect,\n        atk,\n        def,\n        serial: password,\n        copyright: creator,\n        attribute: normalizedAttribute ?? 'None',\n        id: setId,\n        pendulum: {\n            enabled: isPendulum,\n            effect: normalizedPendulumEffect,\n            blue: pendulumScaleBlue,\n            red: pendulumScaleRed,\n            boxSize: 'Normal',\n            boxSizeEnabled: true,\n            ...pendulum,\n        },\n        variant: 'Normal',\n        link: {\n            topLeft: linkMap.includes('1') ? true : false,\n            topCenter: linkMap.includes('2') ? true : false,\n            topRight: linkMap.includes('3') ? true : false,\n            middleLeft: linkMap.includes('4') ? true : false,\n            middleRight: linkMap.includes('6') ? true : false,\n            bottomLeft: linkMap.includes('7') ? true : false,\n            bottomCenter: linkMap.includes('8') ? true : false,\n            bottomRight: linkMap.includes('9') ? true : false,\n        },\n        layout: normalizedFrame ?? 'Normal',\n        boxSize: 'Normal',\n        rarity: normalizedRarity ?? rarity,\n        /** For other card maker, inline art data is preferred over art link */\n        image: artRef\n            ? artRef.toDataURL('image/jpeg')\n            : artSource === 'offline'\n                ? artData\n                : art,\n        ...rest,\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};\n\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\n    const {\n        name,\n        atk,\n        def,\n        attribute,\n        effect,\n        boxSize,\n        copyright,\n        icon,\n        id,\n        image,\n        layout,\n        level,\n        link,\n        pendulum,\n        rarity,\n        serial,\n        type,\n        variant,\n        version,\n    } = card;\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\n    const normalizedIcon = reverseCardIconMap[icon];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const normalizedFrame = reverseFrameMap[layout];\n    const useImageData = isImageData(image);\n    const levelAsNumber = parseInt(level);\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\n\n    let isPartial = normalizedIcon === undefined\n        || normalizedAttribute === undefined\n        || normalizedFrame === undefined\n        || normalizedRarity === undefined;\n    const {\n        finish,\n        artFinish,\n        text,\n    } = normalizedRarity ?? {};\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        finish: finish ?? [],\n        name,\n        nameStyleType: text ? 'predefined' : 'auto',\n        nameStyle: namePreset\n            ? namePreset.value\n            : getDefaultNameStyle(),\n        atk,\n        def,\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect,\n        creator: copyright,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: id,\n        frame: normalizedFrame ?? 'normal',\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\n        typeAbility: type.split('/').map(entry => entry.trim()),\n        art: useImageData ? '' : image,\n        artFit: true,\n        artData: useImageData ? image : '',\n        artSource: useImageData ? 'offline' : 'online',\n        artFinish: artFinish ?? 'normal',\n        isLink: normalizedFrame === 'link' && link != null,\n        linkMap: [\n            link?.topLeft === true ? '1' : null,\n            link?.topCenter === true ? '2' : null,\n            link?.topRight === true ? '3' : null,\n            link?.middleLeft === true ? '4' : null,\n            link?.middleRight === true ? '6' : null,\n            link?.bottomLeft === true ? '7' : null,\n            link?.bottomCenter === true ? '8' : null,\n            link?.bottomRight === true ? '9' : null,\n        ].filter<string>(entry => typeof entry === 'string'),\n        isPendulum: enabled,\n        pendulumScaleBlue: blue,\n        pendulumScaleRed: red,\n        pendulumEffect: pendulumEffect,\n        password: serial,\n        externalInfo: {\n            version,\n            variant,\n            boxSize,\n            rarity,\n            pendulum: {\n                boxSize: pendulumBoxSize,\n                boxSizeEnabled,\n            },\n        }\n    };\n\n    return {\n        isPartial,\n        result,\n    };\n};","import {\n    Card,\n    getEmptyCard,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    YgoproDeckCard,\n    getDefaultYgoproDeckCard,\n    copyrightMap,\n} from 'src/model';\nimport { checkExtraDeckMonster } from './categorize';\n\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\n    try {\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\n        return 'id' in object\n            && 'frameType' in object\n            && 'card_sets' in object;\n    } catch (e) {\n        console.error(e);\n        return false;\n    }\n};\n\nconst cardIconMap: Record<string, string> = {\n    CONTINUOUS: 'Continuous',\n    COUNTER: 'Counter',\n    EQUIP: 'Equip',\n    FIELD: 'Field',\n    'QUICK-PLAY': 'Quick-Play',\n    RITUAL: 'Ritual',\n    [NO_ICON]: 'None',\n};\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst attributeMap: Record<string, string> = {\n    EARTH: 'EARTH',\n    LIGHT: 'LIGHT',\n    DARK: 'DARK',\n    FIRE: 'FIRE',\n    WIND: 'WIND',\n    WATER: 'WATER',\n    SPELL: 'SPELL',\n    TRAP: 'TRAP',\n    DIVINE: 'DIVINE',\n};\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst frameMap: Record<string, string> = {\n    normal: 'normal',\n    effect: 'effect',\n    ritual: 'ritual',\n    fusion: 'fusion',\n    synchro: 'synchro',\n    xyz: 'xyz',\n    link: 'link',\n    token: 'token',\n    spell: 'spell',\n    trap: 'trap',\n    'speed-skill': 'skill',\n    normal_pendulum: 'normal_pendulum',\n    effect_pendulum: 'effect_pendulum',\n    ritual_pendulum: 'ritual_pendulum',\n    fusion_pendulum: 'fusion_pendulum',\n    synchro_pendulum: 'synchro_pendulum',\n    xyz_pendulum: 'xyz_pendulum',\n};\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\n    const [vendorValue, ourValue] = cur;\n    acc[ourValue] = vendorValue;\n\n    return acc;\n}, {});\n\nconst reverseLinkMap: Record<string, string> = {\n    'Top-Left': '1',\n    'Top': '2',\n    'Top-Right': '3',\n    'Left': '4',\n    'Right': '6',\n    'Bottom-Left': '7',\n    'Bottom': '8',\n    'Bottom-Right': '9',\n};\n\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\n//     'common': {\n//         key: '',\n//     },\n//     'rare': {\n//         key: 'rare--',\n//         text: 'rare',\n//     },\n//     'secret': {\n//         key: 'secretGradient-type3-',\n//         text: 'secretGradient',\n//         artFinish: 'type3',\n//     },\n//     'ultra': {\n//         key: 'ultra-type3-',\n//         text: 'ultra',\n//         artFinish: 'type3',\n//     },\n//     'rainbow': {\n//         key: 'platinum-type1-type1',\n//         text: 'platinum',\n//         artFinish: 'type1',\n//         finish: ['type1'],\n//     },\n// };\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\n//     const [vendorKey, vendorValue] = cur;\n//     acc[vendorValue.key] = vendorKey;\n\n//     return acc;\n// }, {});\n\n/**\n * We have no use case to convert ygoCarder into YgoproDeck yet.\n */\nexport const ygoCarderToYgoproDeckData = (\n    _card: Card,\n    _artRef?: HTMLCanvasElement | null,\n): { result: YgoproDeckCard, isPartial: boolean } => {\n    return {\n        isPartial: false,\n        result: getDefaultYgoproDeckCard(),\n    };\n};\n\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\n    const {\n        atk,\n        attribute,\n        card_images,\n        card_sets,\n        def,\n        desc,\n        frameType,\n        id,\n        level,\n        monster_desc,\n        name,\n        pend_desc,\n        race,\n        scale,\n        typeline,\n        linkval,\n        linkmarkers,\n    } = card;\n    const normalizedIcon = reverseCardIconMap[race];\n    const normalizedAttribute = reverseAttributeMap[attribute];\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\n\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\n    /** Try to being clever */\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\n    const formattedMonsterEffect = (checkExtraDeckMonster({\n        frame: normalizedFrame ?? 'normal'\n    }) && splittedMonsterEffect.length > 1)\n        ? [\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\n            ...splittedMonsterEffect.slice(1),\n        ].join('\\n')\n        : normalizedMonsterEffect;\n    const normalizedPendulumEffect = pend_desc\n        ? pend_desc.replaceAll(/^''|''$/g, '')\n        : '';\n    const cardImage = card_images[0].image_url_cropped;\n\n    const baseCard = getEmptyCard();\n    const result: Card = {\n        ...baseCard,\n        name,\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\n        def: def\n            ? (def < 0 || def == null) ? '?' : `${def}`\n            : '0',\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\n        effect: formattedMonsterEffect,\n        subFamily: normalizedIcon ?? NO_ICON,\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\n        frame: normalizedFrame ?? 'normal',\n        star: frameType === 'link' && linkval ? linkval : level,\n        typeAbility: typeline\n            ? typeline\n            : frameType === 'spell'\n                ? ['Spell Card']\n                : frameType === 'trap'\n                    ? ['Trap Card']\n                    : [],\n        art: cardImage,\n        artSource: 'online',\n        artCrop: {\n            ...baseCard.artCrop,\n            y: 0,\n        },\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\n        isPendulum: subFrame === 'pendulum',\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\n        pendulumEffect: normalizedPendulumEffect,\n        password: `${id}`.padStart(8, '0'),\n        creator: copyrightMap.tcg[0],\n    };\n\n    return {\n        isPartial: false,\n        result,\n    };\n};","const MAX_CONDENSER_THRESHOLD = 1000;\n/** Simple iteration method\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\n * \n * Example, we want to reach satisfy target at 487:\n *\n```\nCurr  Step    Count Explain\n1000  100     30    Initial\n900   100     29    Down\n800   100     28    Down\n700   100     27    Down\n600   100     26    Down\n500   100     25    Down\n400   100     24    Down\n500   10      24    Up => Step / 10\n490   10      23    Down\n480   10      22    Down\n490   1       21    Up => Step / 10\n489   1       20    Down\n488   1       19    Down\n487   1       18    Down => Satisfy\n * ```\n */\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\n    let min = minThreshold;\n    let max = maxThreshold;\n    let median = max;\n    let lastEffective = median;\n    let iterateCount = 30;\n    let magnitude = 100;\n    let magnitudeReductionRatio = 10;\n\n    const reverseSearch = () => {\n        if (magnitude === 1) finish();\n        else {\n            median += magnitude;\n            magnitude /= magnitudeReductionRatio;\n            median -= magnitude;\n        }\n\n        return Math.min(median, max);\n    };\n\n    const searchDown = () => {\n        median -= magnitude;\n        iterateCount -= 1;\n\n        return median;\n    };\n\n    const reset = (minThreshold = min, maxThreshold = max) => {\n        min = minThreshold;\n        max = maxThreshold;\n        median = maxThreshold;\n        iterateCount = 30;\n        magnitude = 100;\n        lastEffective = maxThreshold;\n    };\n\n    const getMedian = () => median;\n    const setMedian = (newMedian: number) => median = newMedian;\n\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\n    const getLastEffective = () => lastEffective;\n    const applyLastEffective = () => {\n        median = lastEffective;\n        iterateCount = -1;\n        return median;\n    };\n\n    const getIterateCount = () => iterateCount;\n    const finish = () => iterateCount = -1;\n\n    return {\n        reset,\n        searchDown,\n        reverseSearch,\n        finish,\n        getMedian,\n        setMedian,\n        setLastEffective,\n        getLastEffective,\n        applyLastEffective,\n        getIterateCount,\n    };\n};\n\nexport const condense = (\n    worker: (currentMedian: number) => boolean,\n    minThreshold = 100,\n) => {\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\n    const condenser = createCondenser();\n    while (condenser.getIterateCount() >= 0) {\n        if (condenser.getIterateCount() <= 0) {\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\n            const finalMedian = condenser.getMedian();\n\n            effectiveMedian = finalMedian;\n            break;\n        } else {\n            const satisfy = worker(condenser.getMedian());\n\n            if (!satisfy && condenser.getMedian() > 0) {\n                /** If overflow, lower the median and apply it */\n                condenser.searchDown();\n            } else {\n                /** Return immediately if max threshold is enough to satisfy the driver */\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\n                else effectiveMedian = condenser.reverseSearch();\n            }\n        }\n    }\n\n    /**\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\n     */\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\n    return forcedMedian;\n};","import { FontGetter } from 'src/model';\n\nexport const createFontGetter = (props?: {\n    defaultWeight?: '' | 'bold',\n    defaultStyle?: '' | 'italic' | 'small-caps',\n    defaultSize?: number | `${number}px`,\n    defaultFamily?: string,\n}): FontGetter => {\n    const {\n        defaultWeight = '',\n        defaultStyle = '',\n        defaultSize = '10px',\n        defaultFamily = 'Arial',\n    } = props ?? {};\n    let weight = defaultWeight;\n    let style = defaultStyle;\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\n    let family = defaultFamily;\n\n    return {\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\n        setWeight(nextWeight) {\n            weight = nextWeight;\n            return this;\n        },\n        setStyle(nextStyle) {\n            style = nextStyle;\n            return this;\n        },\n        setSize(nextSize) {\n            const calculatedSize = typeof nextSize === 'function'\n                ? nextSize(sizeAsNumber)\n                : nextSize;\n            size = typeof calculatedSize === 'number'\n                ? `${calculatedSize}px`\n                : calculatedSize;\n            sizeAsNumber = typeof calculatedSize === 'number'\n                ? calculatedSize\n                : parseFloat(calculatedSize.replaceAll('px', ''));\n            return this;\n        },\n        setFamily(nextFamily) {\n            family = nextFamily;\n            return this;\n        },\n    };\n};","import { ColorPoint } from 'react-linear-gradient-picker';\nimport { getDefaultNameStyle } from 'src/model';\n\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\n\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\n    ? stringifiedPalette.split(',')\n        .map((entry, index) => {\n            const [offset, color] = entry.split('|');\n\n            return { color, offset, id: index + 1 };\n        })\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const getNavigationProps = ({\n    debug,\n    optionLength,\n    stopPropagation = false,\n    setFocus,\n    onTrigger,\n    onCancel,\n    onKeyPress,\n}: {\n    debug?: string,\n    optionLength: number,\n    stopPropagation?: boolean,\n    setFocus: (value: React.SetStateAction<number>) => void,\n    onTrigger: () => void,\n    onCancel?: () => void,\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\n}) => {\n    return {\n        tabIndex: 0,\n        onFocus: () => {\n            if (debug) console.info('Navigation Focus', debug);\n            setFocus(0);\n        },\n        onBlur: () => {\n            if (debug) console.info('Navigation Blur', debug);\n            setFocus(-1);\n        },\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\n            if (stopPropagation) e.stopPropagation();\n            if (debug) console.info('Navigation Keydown', debug, e.key);\n            if (onKeyPress?.(e) === false) return;\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\n            }\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\n                e.preventDefault();\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\n            }\n            else if (e.key === 'Enter' || e.key === ' ') {\n                onTrigger();\n            }\n            else if (e.key === 'Escape') {\n                onCancel?.();\n            }\n        },\n    };\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\n    let result = '';\n    const charactersLength = charSet.length;\n    for (let i = 0; i < length; i++) {\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n};\n\nexport const randomSetID = (format: string) => {\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\n        + '-'\n        + (format === 'OCG' ? 'JP' : 'EN')\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\n        + randomCharacter('0000000000111111111122222222223456789', 1)\n        + randomCharacter('0123456789', 2);\n};\n\nexport const randomPassword = () => {\n    return `${randomCharacter('0123456789', 8)}`;\n};\n\nexport const nextChar = (c: string) => {\n    return String.fromCharCode(c.charCodeAt(0) + 1);\n};\n\nexport function insertUrlParam(key: string, value: string) {\n    if (window.history.pushState) {\n        let searchParams = new URLSearchParams(window.location.search);\n        searchParams.set(key, value);\n        let newurl = window.location.protocol\n            + '//'\n            + window.location.host\n            + window.location.pathname\n            + '?'\n            + searchParams.toString();\n        window.history.pushState({ path: newurl }, '', newurl);\n    }\n};\n\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\n    document.querySelector<HTMLElement>(selector)?.focus();\n};\n\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\n    try {\n        const pureHex = hex.replace('#', '');\n        let rgbaList = [0, 0, 0, 1];\n\n        if (pureHex.length === 3 || pureHex.length === 4) {\n            rgbaList = [\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\n            ];\n        }\n        if (pureHex.length === 6 || pureHex.length === 8) {\n            rgbaList = [\n                parseInt(pureHex.slice(0, 2), 16),\n                parseInt(pureHex.slice(2, 4), 16),\n                parseInt(pureHex.slice(4, 6), 16),\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\n            ];\n        }\n\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\n    } catch (e) {\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\n    }\n};\n\n/** Seriously, what the hell? */\nexport const isMobileDevice = () => {\n    let check = false;\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\n        navigator.userAgent\n        || navigator.vendor\n        || (window as any).opera);\n    return check;\n};\n\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\n    return args.filter(Boolean).join(' ');\n}\n\nexport * from './categorize';\nexport * from './codec';\nexport * from './codec-other-vendor';\nexport * from './codec-ygoprodeck';\nexport * from './condenser';\nexport * from './font';\nexport * from './gradient';\nexport * from './hook';\nexport * from './imgur';\nexport * from './navigation';\nexport * from './normalize';\nexport * from './other';\nexport * from './random';","import styled from 'styled-components';\n\nexport const StyledActionIconButton = styled.button`\n    align-content: center;\n    font-size: var(--fs-lg);\n    border: var(--bw) solid var(--sub-tertiary);\n    border-radius: var(--br-lg);\n    background-color: var(--main-primary);\n    border: var(--bw) solid var(--main-primary);\n    cursor: pointer;\n    &:not(:disabled):hover {\n        background-color: var(--sub-primary);\n    }\n    &:disabled {\n        color: var(--color-dim);\n        cursor: not-allowed;\n        background-color: var(--color-contrast);\n        border: var(--bw) solid var(--color-contrast);\n        .anticon {\n            color: inherit;\n        }\n    }\n    input {\n        display: none;\n    }  \n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\n\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\n    const {\n        creator,\n        effect,\n        format,\n        isFirstEdition,\n        name,\n        password,\n        pendulumEffect,\n        setId,\n        typeAbility,\n    } = card;\n\n    if (format === targetFormat) return card;\n\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\n        ? setId.replace('-EN', '-JP')\n        : targetFormat === 'tcg' && /-JP/.test(setId)\n            ? setId.replace('-JP', '-EN')\n            : setId;\n\n    return {\n        ...card,\n        name: termMap[name] ?? name,\n        format: targetFormat,\n        effect: termMap[effect] ?? effect,\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\n        creator: termMap[creator] ?? creator,\n        password: termMap[password] ?? password,\n        setId: newSetId,\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\n    };\n};","import React from 'react';\n\nexport type LanguageMetadata = {\n    name: string,\n    formalName: string,\n    codeName: string,\n    initialMessage: string,\n    active: boolean,\n    order: number,\n    style?: React.CSSProperties & Record<string, string>,\n};\nexport const getDefaultLanguageMetadata = () => ({\n    name: 'Default',\n    formalName: 'Default',\n    codeName: 'def',\n    initialMessage: '',\n    order: 1000,\n    active: false,\n});\nexport type RawLanguageData = LanguageMetadata & {\n    rawDictionary: Record<string, string>,\n};\nexport type LanguageData = ReturnType<typeof processLanguage>;\nexport type LanguageDataDictionary = LanguageData['dictionary'];\n\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\n    const normalizedRawDictionary = {\n        ...fallbackRawDictionary,\n        ...rawLanguageData.rawDictionary,\n    };\n    const getDictionaryEntry = (entry: string) => {\n        return normalizedRawDictionary[entry] ?? '';\n    };\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\n        const splittedString = template.split(splitRegex);\n\n        return <React.Fragment key={template}>\n            {splittedString.map((entry, index) => {\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\n                return nodeMap[entry];\n            })}\n        </React.Fragment>;\n    };\n    const specializedDictionary = {\n        'error.load.font.tcg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\n        },\n        'error.load.font.ocg': (familyName: string) => {\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\n        },\n        'error.max-size.description': (fileSize: number) => {\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\n        },\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-1'),\n                { siteLink },\n            );\n        },\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.disclaimer.line-5'),\n                { author1, author2 },\n            );\n        },\n        'contributor.template-maker': (\n            artist1: React.ReactNode,\n            artist2: React.ReactNode,\n            artist3: React.ReactNode,\n            artist4: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('contributor.template-maker'),\n                { artist1, artist2, artist3, artist4 },\n            );\n        },\n        'converter.header.warning.label': (\n            maxAmount: number,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('converter.header.warning.label'),\n                { maxAmount },\n            );\n        },\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.introduction'),\n                { settingIcon },\n            );\n        },\n        'guide.format.section-1.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-1.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-2.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-2.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-3.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-3.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-4.content': (\n            separator: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-4.content'),\n                { separator, hotkey, hotkeyAlternative },\n            );\n        },\n        'guide.format.section-5.content': (\n            openTag: React.ReactNode,\n            closeTag: React.ReactNode,\n            hotkey: React.ReactNode,\n            hotkeyAlternative: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('guide.format.section-5.content'),\n                { openTag, closeTag, hotkey, hotkeyAlternative },\n            );\n        },\n        'input.scale.label': (\n            scaleType: React.ReactNode,\n        ) => {\n            return applyTemplateNode(\n                getDictionaryEntry('input.scale.label'),\n                { scaleType },\n            );\n        },\n    };\n\n    return {\n        ...rawLanguageData,\n        rawDictionary: normalizedRawDictionary,\n        dictionary: {\n            ...normalizedRawDictionary,\n            ...specializedDictionary,\n        } as typeof specializedDictionary & Record<string, string>,\n    };\n};","import { create } from 'zustand';\nimport {\n    getDefaultLanguageMetadata,\n    LanguageData,\n    LanguageMetadata,\n    processLanguage,\n    RawLanguageData,\n} from './processor';\n\nexport type I18NStore = {\n    languageInfo: LanguageMetadata,\n    languageMetadataMap: Record<string, LanguageMetadata>,\n    language: LanguageData['dictionary'],\n    error: any,\n    isLoading: boolean,\n    isMetadataReady: boolean,\n    isInitiating: boolean,\n    initiate: () => Promise<void>,\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\n    loadDefaultLanguage: () => Promise<void>,\n    changeLanguage: (language: string) => Promise<void>,\n};\nexport const useI18N = create<I18NStore>((set, get) => {\n    const defaultLanguageName = (() => {\n        /** Direct request from URL is preferred */\n        const url = new URL(window.location.href);\n        const initialParam = url.searchParams;\n        const defaultLanguageFromURL = initialParam.get('language');\n        /** Side effect: Remove default language after load */\n        initialParam.delete('language');\n        window.history.replaceState(window.history.state, '', url.href);\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\n\n        try {\n            const cachedLanguage = localStorage.getItem('language');\n\n            if (cachedLanguage) return cachedLanguage;\n            return 'eng';\n        } catch (e) {\n            console.error('useSetting: Error when getting cached language', e);\n            return 'eng';\n        }\n    })();\n    const languageMap: Partial<Record<string, LanguageData>> = {};\n    const defaultLanguage = processLanguage({\n        ...getDefaultLanguageMetadata(),\n        rawDictionary: {},\n    });\n    const loadLanguageMetadata = async () => {\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\n\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\n\n            set({\n                languageMetadataMap,\n                isMetadataReady: true,\n            });\n        } catch (e) {\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\n            set({\n                languageMetadataMap: {\n                    eng: {\n                        name: 'English',\n                        formalName: 'English',\n                        codeName: 'eng',\n                        initialMessage: 'Loading fonts and scripts…',\n                        order: 1,\n                        active: true\n                    },\n                },\n                isMetadataReady: true,\n            });\n        }\n    };\n    const loadLanguage = async (languageName: string) => {\n        if (languageMap[languageName]) return null;\n        try {\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            const languageData: RawLanguageData = await response.json();\n\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\n            languageMap[languageName] = processedLanguage;\n\n            return processedLanguage;\n        } catch (e) {\n            console.error('loadLanguage: Could not load language, revert back to default', e);\n            return null;\n        }\n    };\n    const changeLanguage = async (languageName: string) => {\n        const nextMeta = get().languageMetadataMap[languageName];\n        if (!nextMeta) return;\n\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\n        // set({ isLoading: true });\n        const languageData = !languageMap[languageName]\n            ? await loadLanguage(languageName)\n            : languageMap[languageName];\n\n        if (languageData) {\n            set({\n                languageInfo: get().languageMetadataMap[languageName],\n                language: languageData.dictionary,\n            });\n            localStorage.setItem('language', languageName);\n            set({\n                isLoading: false,\n                languageInfo: nextMeta,\n            });\n        } else {\n            set({\n                isLoading: false,\n                languageInfo: get().languageMetadataMap.eng,\n                language: defaultLanguage.dictionary,\n            });\n        }\n    };\n\n    return {\n        languageMetadataMap: {},\n        languageInfo: getDefaultLanguageMetadata(),\n        language: defaultLanguage.dictionary,\n        error: null,\n        isInitiating: true,\n        isLoading: true,\n        isMetadataReady: false,\n        initiate: async () => {\n            loadLanguageMetadata();\n        },\n        loadDefaultLanguage: async () => {\n            /** Load english first regardless, so it can act as a fallback language */\n            await loadLanguage('eng');\n            await changeLanguage(defaultLanguageName);\n            set({\n                isInitiating: false,\n            });\n        },\n        loadLanguage,\n        changeLanguage,\n    };\n});\n\nexport const useLanguage = () => {\n    const language = useI18N(({ language }) => language);\n\n    return language;\n};\nexport const getLanguage = () => useI18N.getState().language;\nexport * from './processor';","import { Crop } from 'react-image-crop';\nimport {\n    BackgroundType,\n    Card,\n    CardOpacity,\n    CondenseType,\n    Foil,\n    FoilNameMap,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    getDefaultCrop,\n    getDefaultNameStyle,\n    getDefaultTextStyle,\n    getEmptyCard,\n    InternalCard,\n    NameStyle,\n    NameStyleType,\n    NO_ATTRIBUTE,\n    PresetNameStyle,\n} from 'src/model';\nimport { v4 as uuid } from 'uuid';\n\nconst CsvStandardFieldList = [\n    /** Extremely common stuff for most users */\n    'Format',\n    'Frame',\n    'Name',\n    'Attribute',\n    'Star',\n    'Spell/Trap Icon',\n    'Art Link',\n    'Type Ability',\n    'Effect',\n    'Set Id',\n    'ATK',\n    'DEF',\n    'Password',\n    'Sticker',\n    'Copyright',\n    'Is Pendulum',\n    'Pendulum Effect',\n    'Pendulum Scale Red',\n    'Pendulum Scale Blue',\n    'Is Link',\n    'Link - Top Left Arrow',\n    'Link - Top Arrow',\n    'Link - Top Right Arrow',\n    'Link - Left Arrow',\n    'Link - Right Arrow',\n    'Link - Bottom Left Arrow',\n    'Link - Bottom Arrow',\n    'Link - Bottom Right Arrow',\n    /** More detailed stuffs */\n    'Is First Edition',\n    'Is Speed Card',\n    'Is Limited Edition',\n    'Is Duel Terminal Card',\n    'Is Legacy Card',\n    'Foil',\n    'Art Finish',\n    'Card Finish',\n    'Art Crop - X (%)',\n    'Art Crop - Y (%)',\n    'Art Crop - Width (%)',\n    'Art Crop - Height (%)',\n    'Is Using Full Art',\n    /** Creative customize stuff */\n    'Star Type',\n    'Star Alignment',\n    'Card Icon Type',\n    'Opacity - Body',\n    'Opacity - Pendulum',\n    'Opacity - Text',\n    'Opacity - Name',\n    'Opacity - Base Fill',\n    'Opacity - Art Border',\n    'Opacity - Name Border',\n    'Opacity - Boundless',\n    'Has Background',\n    'Background Link',\n    'Is Using Full Background',\n    'Background Type',\n    'Background Crop - X (%)',\n    'Background Crop - Y (%)',\n    'Background Crop - Width (%)',\n    'Background Crop - Height (%)',\n    'Bottom Frame',\n    'Condense Rate',\n    'Use Furigana Helper',\n    /** Extremely intricate stuff, user usually should not bother with these */\n    'Name Style Type',\n    'Name Style - Font',\n    'Name Style - Fill Style',\n    'Name Style - Headtext Fill Style',\n    'Name Style - Shadow Color',\n    'Name Style - Shadow Offset Y',\n    'Name Style - Shadow Offset X',\n    'Name Style - Shadow Blur',\n    'Name Style - Has Shadow',\n    'Name Style - Line Color',\n    'Name Style - Line Width',\n    'Name Style - Line Offset Y',\n    'Name Style - Line Offset X',\n    'Name Style - Has Outline',\n    'Name Style - Gradient Angle',\n    'Name Style - Gradient Color',\n    'Name Style - Has Gradient',\n    'Name Style - Preset',\n    'Name Style - Pattern',\n    'Stat Style - Is Custom',\n    'Stat Style - Fill Color',\n    'Stat Style - Has Shadow',\n    'Stat Style - Shadow Color',\n    'Type Style - Is Custom',\n    'Type Style - Fill Color',\n    'Type Style - Has Shadow',\n    'Type Style - Shadow Color',\n    'Effect Style - Is Custom',\n    'Effect Style - Fill Color',\n    'Effect Style - Has Shadow',\n    'Effect Style - Shadow Color',\n    'Effect Style - Upsize',\n    'Pendulum Effect Style - Is Custom',\n    'Pendulum Effect Style - Fill Color',\n    'Pendulum Effect Style - Has Shadow',\n    'Pendulum Effect Style - Shadow Color',\n    'Pendulum Effect Style - Upsize',\n    'Other Style - Is Custom',\n    'Other Style - Fill Color',\n    'Other Style - Has Shadow',\n    'Other Style - Shadow Color',\n    'External Info (JSON)',\n] as const;\nconst CsvFieldList = [\n    ...CsvStandardFieldList,\n    /**\n     * External fields that is not standard but we try to account for\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\n     * */\n    'Level/Rank',\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\n    'spell_type/trap_type',\n    'Type_1',\n    'Type_2',\n    'Type_3',\n    'Type_4',\n    'Set_ID',\n    // 'foil', // Unclear + Conflict\n    'Borderless', // Unclear\n    'Edition',\n    'Rarity',\n    'Background_Type',\n    'Card_Background', // Unclear\n    'Font_Style', // Unclear\n    'Art_Finish',\n    'Image_Frame_Type', // Unclear\n] as const;\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\ntype CsvField = typeof CsvFieldList[number];\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\n    const normalizedColumnName = normalizeFieldName(field);\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n    return acc;\n}, {} as Record<CsvField, number | undefined>);\n\nconst normalizeCsvData = (data: any) => {\n    if (data == null) return '';\n    if (data === '') return '';\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\n};\nexport const cardListToCsv = (cardList: Card[]) => {\n    const valueList: string[] = [];\n    const rowLength = CsvStandardFieldList.length;\n    let error = '';\n\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\n            const index = analyzeExportHeader[key];\n    \n            if (typeof index === 'number') {\n                if (typeof value === 'string') rowValue[index] = value;\n                if (typeof value === 'number') rowValue[index] = `${value}`;\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\n                if (value == null) rowValue[index] = '';\n            }\n        };\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\n        const rowValue = Array(rowLength).map(() => '');\n        const {\n            art,\n            artCrop,\n            artFinish,\n            artFit,\n            artSource,\n            atk,\n            attribute,\n            background,\n            backgroundCrop,\n            backgroundFit,\n            backgroundSource,\n            backgroundType,\n            cardIcon,\n            creator,\n            def,\n            effect,\n            effectStyle,\n            effectTextStyle,\n            externalInfo,\n            finish,\n            foil,\n            format,\n            frame,\n            furiganaHelper,\n            hasBackground,\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLegacyCard,\n            isLimitedEdition,\n            isLink,\n            isPendulum,\n            isSpeedCard,\n            linkMap,\n            name,\n            nameStyle,\n            nameStyleType,\n            opacity,\n            otherTextStyle,\n            password,\n            pendulumEffect,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n            pendulumStyle,\n            pendulumTextStyle,\n            setId,\n            star,\n            starAlignment,\n            statTextStyle,\n            sticker,\n            subFamily,\n            typeAbility,\n            typeTextStyle,\n        } = cardList[cnt];\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\n\n        write('Format', format);\n        write('Frame', frame);\n        write('Name', name);\n        write('Attribute', attribute);\n        write('Star', `${star}`);\n        write('Spell/Trap Icon', subFamily);\n        write('Art Link', art);\n        write('Type Ability', typeAbility.join('/'));\n        write('Effect', effect);\n        write('Set Id', setId);\n        write('ATK', atk);\n        write('DEF', def);\n        write('Password', password);\n        write('Sticker', sticker);\n        write('Copyright', creator);\n        write('Is Pendulum', isPendulum);\n        write('Pendulum Effect', pendulumEffect);\n        write('Pendulum Scale Red', pendulumScaleRed);\n        write('Pendulum Scale Blue', pendulumScaleBlue);\n        write('Is Link', isLink);\n        write('Link - Top Left Arrow', linkMap.includes('1'));\n        write('Link - Top Arrow', linkMap.includes('2'));\n        write('Link - Top Right Arrow', linkMap.includes('3'));\n        write('Link - Left Arrow', linkMap.includes('4'));\n        write('Link - Right Arrow', linkMap.includes('6'));\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\n        write('Link - Bottom Arrow', linkMap.includes('8'));\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\n        write('Is First Edition', isFirstEdition);\n        write('Is Speed Card', isSpeedCard);\n        write('Is Limited Edition', isLimitedEdition);\n        write('Is Duel Terminal Card', isDuelTerminalCard);\n        write('Is Legacy Card', isLegacyCard);\n        write('Foil', foil);\n        write('Art Finish', artFinish);\n        write('Card Finish', finish.join(','));\n        write('Art Crop - X (%)', artCrop.x);\n        write('Art Crop - Y (%)', artCrop.y);\n        write('Art Crop - Width (%)', artCrop.width);\n        write('Art Crop - Height (%)', artCrop.height);\n        write('Is Using Full Art', artFit);\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\n        write('Star Alignment', starAlignment);\n        write('Card Icon Type', cardIcon);\n        write('Opacity - Body', opacity.body);\n        write('Opacity - Pendulum', opacity.pendulum);\n        write('Opacity - Text', opacity.text);\n        write('Opacity - Name', opacity.name);\n        write('Opacity - Base Fill', opacity.baseFill);\n        write('Opacity - Art Border', opacity.artBorder);\n        write('Opacity - Name Border', opacity.nameBorder);\n        write('Opacity - Boundless', opacity.boundless);\n        write('Has Background', hasBackground);\n        write('Background Link', background);\n        write('Is Using Full Background', backgroundFit);\n        write('Background Type', backgroundType);\n        write('Background Crop - X (%)', backgroundCrop.x);\n        write('Background Crop - Y (%)', backgroundCrop.y);\n        write('Background Crop - Width (%)', backgroundCrop.width);\n        write('Background Crop - Height (%)', backgroundCrop.height);\n        write('Bottom Frame', pendulumFrame);\n        write('Condense Rate', effectStyle.condenseTolerant);\n        write('Use Furigana Helper', furiganaHelper);\n        write('Name Style Type', nameStyleType);\n        write('Name Style - Font', nameStyle.font);\n        write('Name Style - Fill Style', nameStyle.fillStyle);\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\n        write('Name Style - Line Color', nameStyle.lineColor);\n        write('Name Style - Line Width', nameStyle.lineWidth);\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\n        write('Name Style - Has Outline', nameStyle.hasOutline);\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\n        write('Name Style - Preset', nameStyle.preset);\n        write('Name Style - Pattern', nameStyle.pattern);\n        write('Stat Style - Is Custom', statTextStyle[0]);\n        write('Stat Style - Fill Color', statTextStyle[1]);\n        write('Stat Style - Has Shadow', statTextStyle[2]);\n        write('Stat Style - Shadow Color', statTextStyle[3]);\n        write('Type Style - Is Custom', typeTextStyle[0]);\n        write('Type Style - Fill Color', typeTextStyle[1]);\n        write('Type Style - Has Shadow', typeTextStyle[2]);\n        write('Type Style - Shadow Color', typeTextStyle[3]);\n        write('Effect Style - Is Custom', effectTextStyle[0]);\n        write('Effect Style - Fill Color', effectTextStyle[1]);\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\n        write('Effect Style - Upsize', effectStyle.upSize);\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\n        write('Other Style - Is Custom', otherTextStyle[0]);\n        write('Other Style - Fill Color', otherTextStyle[1]);\n        write('Other Style - Has Shadow', otherTextStyle[2]);\n        write('Other Style - Shadow Color', otherTextStyle[3]);\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\n\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\n            error = 'offline-data';\n        }\n\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\n    }\n\n    return {\n        value: [\n            CsvStandardFieldList.join(','),\n            valueList.join('\\n'),\n        ].join('\\n'),\n        error,\n    };\n};\n\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\n    return header.reduce((acc, field, index) => {\n        const normalizedColumnName = normalizeFieldName(field);\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\n\n        return acc;\n    }, {} as Record<CsvField, number | undefined>);\n};\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\n    return (field: CsvField) => {\n        const columnIndex = headerIndexMap[field] ?? -1;\n        const value = (row[columnIndex] ?? '').trim();\n\n        return value === ''\n            ? undefined\n            : value;\n    };\n};\nconst normalizeBoolean = (value: any, fallback: boolean) => {\n    if (typeof value === 'boolean') return value;\n    if (typeof value === 'string') {\n        const normalizedValue = value.toLowerCase();\n        return normalizedValue === 'true'\n            ? true\n            : normalizedValue === 'false'\n                ? false\n                : fallback;\n    }\n    return fallback;\n};\nconst normalizeInt = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\n    return fallback;\n};\nconst normalizeFloat = (value: any, fallback: number) => {\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\n    return fallback;\n};\nconst normalizeColor = (value: any, fallback: string) => {\n    if (typeof value === 'string') {\n        if (value.startsWith('#')) return value;\n        return `#${value}`;\n    }\n    return fallback;\n};\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\n    try {\n        const headerIndexMap = analyzeImportHeader(data[0]);\n\n        return data\n            .map((row, index) => {\n                /** Ignore header */\n                if (index === 0) return null;\n                /** Ignore empty row */\n                if (row.join('') === '') return null;\n                const emptyCard = getEmptyCard();\n                const reader = getCsvFieldReader(row, headerIndexMap);\n\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\n\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\n                const star = reader('Star Type') === 'text'\n                    ? rawStar\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\n                        ? parseInt(rawStar)\n                        : rawStar;\n\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\n\n                const rawAttribute = reader('Attribute')?.toUpperCase();\n                const attribute = rawAttribute\n                    ? rawAttribute === 'NONE'\n                        ? NO_ATTRIBUTE\n                        : rawAttribute\n                    : frame === 'spell'\n                        ? 'SPELL'\n                        : frame === 'trap'\n                            ? 'TRAP'\n                            : emptyCard.attribute;\n\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\n                const atk = reader('ATK') ?? '';\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\n                const creator = reader('Copyright') ?? '';\n                const def = reader('DEF') ?? '';\n                const effect = reader('Effect') ?? '';\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\n                const name = reader('Name') ?? '';\n                const password = reader('Password') ?? '';\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\n\n                const edition = reader('Edition')?.toLowerCase();\n                const isFirstEdition = normalizeBoolean(\n                    reader('Is First Edition'),\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\n                );\n                const isDuelTerminalCard = normalizeBoolean(\n                    reader('Is Duel Terminal Card'),\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\n                );\n                const isLimitedEdition = normalizeBoolean(\n                    reader('Is Limited Edition'),\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\n                );\n                const isSpeedCard = normalizeBoolean(\n                    reader('Is Speed Card'),\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\n                );\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\n\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\n\n                const rawTypeAbility = reader('Type Ability');\n                const typeAbility = rawTypeAbility\n                    ? rawTypeAbility.split('/')\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\n                        .filter<string>(entry => typeof entry === 'string')\n                        .filter(entry => entry !== '');\n\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\n\n                const emptyOpacity = getDefaultCardOpacity();\n                const opacity: CardOpacity = {\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\n                };\n\n                const emptyArtCrop = getDefaultCrop();\n                const art = reader('Art Link') ?? emptyCard.art;\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\n                const artCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\n                    unit: '%',\n                };\n\n                const emptyBackgroundCrop = getDefaultCrop();\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\n                const background = reader('Background Link') ?? emptyCard.background;\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\n                const backgroundCrop: Crop = {\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\n                    unit: '%',\n                };\n\n                const emptyNameStyle = getDefaultNameStyle();\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\n                const nameStyle: NameStyle = {\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\n                };\n\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\n                const linkMap = [\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\n                ].filter(entry => entry !== '') ?? [];\n\n                const emptyTextStyle = getDefaultTextStyle();\n                const statTextStyle = [\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const typeTextStyle = [\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const effectTextStyle = [\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const pendulumTextStyle = [\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                const otherTextStyle = [\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\n                ] as [boolean, string, boolean, string];\n                let externalInfo = {};\n                try {\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\n                } catch (e) {\n                    console.error('csvToCardList', e);\n                }\n\n                return {\n                    id: uuid(),\n                    ...emptyCard,\n                    art,\n                    artCrop,\n                    artFinish,\n                    artFit,\n                    artSource: 'online',\n                    atk,\n                    attribute,\n                    background,\n                    backgroundCrop,\n                    backgroundFit,\n                    backgroundSource: 'online',\n                    backgroundType,\n                    cardIcon,\n                    condenseTolerant,\n                    creator,\n                    def,\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\n                    effect,\n                    effectTextStyle,\n                    externalInfo,\n                    finish,\n                    foil,\n                    format,\n                    frame,\n                    furiganaHelper,\n                    hasBackground,\n                    isDuelTerminalCard,\n                    isFirstEdition,\n                    isLegacyCard,\n                    isLimitedEdition,\n                    isLink,\n                    isPendulum,\n                    isSpeedCard,\n                    linkMap,\n                    name,\n                    nameStyle,\n                    nameStyleType,\n                    opacity,\n                    otherTextStyle,\n                    password,\n                    pendulumEffect,\n                    pendulumFrame,\n                    pendulumScaleBlue,\n                    pendulumScaleRed,\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\n                    pendulumTextStyle,\n                    setId,\n                    star,\n                    starAlignment,\n                    statTextStyle,\n                    sticker,\n                    subFamily,\n                    typeAbility,\n                    typeTextStyle,\n                };\n            })\n            // .map(migrateCardData)\n            .filter(entry => {\n                return entry != null;\n            });\n    } catch (e) {\n        console.error('csvToCardList', e);\n        return [];\n    }\n};","import { clone } from 'ramda';\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\nimport { create } from 'zustand';\nimport { subscribeWithSelector } from 'zustand/middleware';\nimport { v4 as uuid } from 'uuid';\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\n\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\n\n    if (isLeftFinite && !isRightFinite) return -1;\n    if (!isLeftFinite && isRightFinite) return 1;\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\n\n    const fallbackStatLeft = statLeft === '?'\n        ? 1\n        : statLeft === ''\n            ? -1\n            : 0;\n    const fallbackStatRight = statRight === '?'\n        ? 1\n        : statRight === ''\n            ? -1\n            : 0;\n\n    if (\n        fallbackStatRight - fallbackStatLeft === 0\n        && typeof statLeft === 'string'\n        && typeof statRight === 'string'\n    ) return (statLeft ?? '').localeCompare(statRight);\n    return fallbackStatRight - fallbackStatLeft;\n};\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\nconst compareStar = (l: InternalCard, r: InternalCard) => {\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\n    return compareInt(l.star, r.star);\n};\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\n\n    if (frameResult !== 0) return frameResult;\n\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\n\n    return bottomFrameResult;\n};\nconst normalizeCard = (card: InternalCard) => {\n    const normalizedCard = { ...card };\n    const { frame, isLink } = normalizedCard;\n\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\n        normalizedCard.atk = '';\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n    if (isLink) {\n        normalizedCard.def = '';\n        normalizedCard.star = 0;\n    }\n\n    return normalizedCard;\n};\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\n        const result = compareList[cnt](lCard, rCard);\n\n        if (result !== 0) return result;\n    }\n    return 0;\n};\nexport const SortFunctionMap = {\n    name: {\n        key: 'name',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareName,\n                        compareStar,\n                        compareFrame,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    atk: {\n        key: 'atk',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareAtk,\n                        compareDef,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    def: {\n        key: 'def',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareDef,\n                        compareAtk,\n                        compareStar,\n                        compareFrame,\n                        compareName,\n                        compareSetId,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    set: {\n        key: 'set',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareSetId,\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n    level: {\n        key: 'level',\n        sortFunction: (cardList: InternalCard[]) => {\n            return cardList\n                .map(normalizeCard)\n                .sort((l, r) => chainCompare(\n                    [\n                        compareFrame,\n                        compareStar,\n                        compareName,\n                        compareSetId,\n                        compareAtk,\n                        compareDef,\n                    ],\n                    l,\n                    r,\n                ));\n        },\n    },\n} as const;\nconst applyFilter = (\n    cardList: InternalCard[],\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n) => {\n    const filterList = Object\n        .values(filterMap)\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\n\n    if (filterList.length === 0) return cardList;\n    return filterList.reduce((filteredList, currentFilter) => {\n        return currentFilter(filteredList);\n    }, cardList);\n};\ntype CardFilter = {\n    type: 'text',\n    value: string,\n};\ntype CardFilterType = CardFilter['type'];\nexport type CardListStore = {\n    activeId: string,\n    cardDisplayList: InternalCard[],\n    cardList: InternalCard[],\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\n    filterResetSignal: number,\n    isListDirty: boolean,\n    listName: string,\n    pendingActiveCard?: InternalCard,\n    visible: boolean,\n    addCard: (card: Card) => void,\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\n    deleteCard: (id: string) => void,\n    duplicateCard: (card: Card, ) => void,\n    resetFilter: () => void,\n    setActiveId: (id: string) => void,\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\n    setFilterFunction: (type: CardFilter) => void,\n    setListName: (name: string) => void,\n    setPendingActiveCard: (card?: InternalCard) => void,\n    sortList: (type: keyof typeof SortFunctionMap) => void,\n    toggleVisible: (status?: boolean) => void,\n};\nexport const useCardList = create<\n    CardListStore,\n    [['zustand/subscribeWithSelector', never]]\n>(subscribeWithSelector((set) => {\n    return {\n        activeId: '',\n        cardDisplayList: [],\n        cardList: [],\n        filterFunctionMap: {},\n        filterResetSignal: 0,\n        isListDirty: false,\n        listName: 'card-list',\n        pendingActiveCard: undefined,\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\n        setFilterFunction: ({ type, value }) => set(({\n            cardList,\n            filterFunctionMap,\n        }) => {\n            const nextFilterFunctionMap = { ...filterFunctionMap };\n            if (type === 'text') {\n                const normalizedValue = value.toLowerCase();\n                nextFilterFunctionMap[type] = cardList => {\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\n                        return (normalizeCardName(name).toLowerCase()\n                            + normalizeCardEffect(effect).toLowerCase()\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\n                    });\n                };\n            }\n\n            return {\n                filterFunctionMap: nextFilterFunctionMap,\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\n            };\n        }),\n        resetFilter: () => {\n            set(({ filterResetSignal, cardList }) => {\n                return {\n                    filterFunctionMap: {},\n                    filterResetSignal: filterResetSignal + 1,\n                    cardDisplayList: [...cardList],\n                };\n            });\n        },\n        addCard: card => set(({ cardList }) => {\n            const id = uuid();\n            const newCard = { id, ...card };\n\n            return {\n                activeId: newCard.id,\n                cardList: [...cardList, newCard],\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\n                cardDisplayList: [...cardList, newCard],\n            };\n        }),\n        changeEditStatus: event => {\n            if (event === 'load') set({ isListDirty: false });\n            if (event === 'download') set({ isListDirty: false });\n        },\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\n        setListName: name => set({ listName: name }),\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\n            set(({ cardList, cardDisplayList, isListDirty }) => {\n                let nextIsListDirty = isListDirty;\n\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\n                if (nextIsListDirty === false && checkPurity) {\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\n\n                    nextIsListDirty = targetCard\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\n                        : true;\n                }\n                const nextCardList = cardList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                const nextCardDisplayList = cardDisplayList.map(card => {\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\n                    return card;\n                });\n                return {\n                    isListDirty: nextIsListDirty,\n                    cardList: nextCardList,\n                    cardDisplayList: nextCardDisplayList,\n                };\n            });\n        },\n        setActiveId: id => set({ activeId: id }),\n        setCardList: (cardList, activeId) => {\n            /** Reset all filter each time a new list is coming */\n            set({\n                filterFunctionMap: {},\n                isListDirty: false,\n                activeId: activeId ?? cardList[0]?.id,\n                cardList: cardList,\n                cardDisplayList: [...cardList],\n            });\n        },\n        deleteCard: id => {\n            set(({ cardList, activeId, cardDisplayList }) => {\n                const normalizedCardList = cardList.filter(card => card.id !== id);\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\n                const nextActiveId = activeId === id\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\n                    : activeId;\n\n                return {\n                    activeId: nextActiveId,\n                    cardList: normalizedCardList,\n                    cardDisplayList: normalizedCardDisplayList,\n                };\n            });\n        },\n        duplicateCard: card => {\n            set(({ cardList, filterFunctionMap }) => {\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\n                const clonedId = uuid();\n                const clonedCard = {\n                    ...clone(card),\n                    name: `${card.name} - Copy`,\n                    id: clonedId,\n                };\n                const nextCardList = targetIndex < 0\n                    ? [...cardList, clonedCard]\n                    : [\n                        ...cardList.slice(0, targetIndex),\n                        cardList[targetIndex],\n                        clonedCard,\n                        ...cardList.slice(targetIndex + 1, cardList.length),\n                    ];\n\n                return {\n                    activeId: clonedId,\n                    pendingActiveCard: clonedCard,\n                    cardList: nextCardList,\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\n                };\n            });\n        },\n        sortList: type => {\n            set(({ cardDisplayList, cardList }) => {\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\n\n                return {\n                    cardDisplayList: sortedDisplayList,\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\n                    cardList: sortedList,\n                };\n            });\n        },\n    };\n}));\n\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\nimport { create } from 'zustand';\nimport debounce from 'lodash.debounce';\nimport throttle from 'lodash.throttle';\nimport {\n    migrateCardData,\n    legacyRebuildCardData,\n    checkYgoCarderCard,\n    checkCompactYgoCarderCard,\n    decompressCardData,\n    cardMakerToYgoCarderData,\n    checkYgoproDeckCard,\n    ygoproDeckToYgoCarderData,\n} from 'src/util';\nimport { notification } from 'antd';\nimport { getLanguage } from './use-i18n';\nimport { useCardList } from './use-card-list';\nimport { v4 as uuid } from 'uuid';\n\n/** This method decode the following data into ygocarder uncompress data:\n * * Compressed legacy ygocarder data\n * * Uncompress ygocarder data (return as is)\n * * Compressed ygocarder data\n * * Other vendor data\n */\nexport const decodeCard = (\n    cardData: Record<string, any> | string | null,\n    baseCard?: Card,\n): {\n    card: InternalCard,\n    isPartial: boolean,\n} => {\n    const id = uuid();\n    let decodedCard = getEmptyCard();\n    let isPartial = false;\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\n    try {\n        const normalizedCard = typeof cardData === 'string'\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\n            : cardData;\n\n        /** Merge card */\n        if (baseCard) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            /** First chance, assume it is a partial compressed card */\n            if (Object.keys(fullCard).length > 0) {\n                decodedCard = migrateCardData(fullCard, baseCard);\n            }\n            /** Second chance, assume it is a partial card */\n            else {\n                decodedCard = migrateCardData(normalizedCard, baseCard);\n            }\n        }\n        else if (checkYgoCarderCard(normalizedCard)) {\n            decodedCard = migrateCardData(normalizedCard);\n        }\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\n\n            decodedCard = migrateCardData(fullCard);\n        }\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\n        else if (Array.isArray(normalizedCard.data)) {\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else if (checkYgoproDeckCard(normalizedCard)) {\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n        else {\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\n            isPartial = isPartialCard;\n            decodedCard = result;\n        }\n    } catch (e) {\n        console.error('decodedCard', cardData, e);\n        try {\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\n            notification.info({\n                message: getLanguage()['service.decode.outdated.message'],\n                description: getLanguage()['service.decode.outdated.description'],\n            });\n        } catch (e) {\n            console.error('cardData', cardData, e);\n            notification.error({\n                message: getLanguage()['service.decode.error.message'],\n                description: getLanguage()['service.decode.error.description'],\n            });\n        }\n    }\n    return {\n        isPartial,\n        card: { ...decodedCard, id },\n    };\n};\n\n/**\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\n */\nexport const retrieveSavedCard = (): InternalCard => {\n    try {\n        const localCardVersion = localStorage.getItem('card-version');\n        const stringifedLocalCardData = localStorage.getItem('card-data');\n        const localCardData = stringifedLocalCardData\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\n            : null;\n\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\n        if (urlCardData) {\n            /**\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\n             */\n            const { card: decodedCard } = decodeCard(urlCardData);\n            const card = migrateCardData(decodedCard);\n            const { artSource, backgroundSource } = card;\n            if (artSource === 'online' && backgroundSource === 'online') {\n                return decodeCard(urlCardData).card;\n            }\n\n            const combinedCard = { ...card };\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\n\n            return combinedCard;\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\n            return localCardData;\n        }\n        return getDefaultInternalCard();\n    } catch (e) {\n        console.error(e);\n        return getDefaultInternalCard();\n    }\n};\n\nconst VariantConfigMap = {\n    debounce: { type: 'debounce' as const, wait: 400 },\n    throttle: { type: 'throttle' as const, wait: 1000 },\n};\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\n    return 'id' in card && card.id !== '';\n};\nexport type CardStore = {\n    card: InternalCard,\n    /**\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\n     */\n    setCard: (\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\n        forcePurityCheck?: boolean,\n    ) => void,\n    getUpdater: (\n        key: string,\n        valueTransform?: (value: any) => any,\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\n    ) => (e: any) => void,\n};\nexport const useCard = create<CardStore>((set, get) => {\n    return {\n        card: getDefaultInternalCard(),\n        setCard: (cardTransform, forcePurityCheck) => {\n            /** Change some fields inside a card, check list purity afterward */\n            const changeActiveCard = useCardList.getState().changeActiveCard;\n            if (typeof cardTransform === 'function') {\n                set(cur => {\n                    const nextCard = cardTransform(cur.card);\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\n\n                    return { card: nextCard };\n                });\n            }\n            /** Change the whole card */\n            else if (isInternalCard(cardTransform)) {\n                changeActiveCard(cardTransform, forcePurityCheck);\n                set({ card: cardTransform });\n            }\n            else {\n                const normalizedCard = { id: uuid(), ...cardTransform };\n                changeActiveCard(normalizedCard, forcePurityCheck);\n                set({ card: normalizedCard });\n            }\n        },\n        getUpdater: (\n            key: string,\n            valueTransform: (value: any) => any = (value) => value,\n            variant,\n        ) => {\n            const { setCard } = get();\n            const returnFunction = (e: any) => {\n                setCard(current => ({\n                    ...current,\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\n                }));\n            };\n\n            if (!variant) return returnFunction;\n            const variantConfig = typeof variant === 'string'\n                ? VariantConfigMap[variant] ?? undefined\n                : variant;\n\n            if (!variantConfig) return returnFunction;\n            const { wait, type } = variantConfig;\n\n            if (type === 'debounce') return debounce(returnFunction, wait);\n            if (type === 'throttle') return throttle(returnFunction, wait);\n\n            return returnFunction;\n        }\n    };\n});","import { CanvasConst, ExportFormat } from 'src/model';\nimport { create } from 'zustand';\n\nexport type Setting = {\n    exportFormat: ExportFormat,\n    resolution: [number, number],\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n    allowHotkey: boolean,\n    reduceMotionColor: boolean,\n};\nexport type SettingStore = {\n    setting: Setting,\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\n};\nexport const useSetting = create<SettingStore>((set) => {\n    const {\n        allowHotkey,\n        exportFormat,\n        reduceMotionColor,\n        resolution,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = ((): Record<string, any> => {\n        try {\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\n\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\n            return {};\n        } catch (e) {\n            console.error('useSetting: Error when getting cached setting', e);\n            return {};\n        }\n    })();\n\n    return {\n        setting: {\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\n                ? resolution as [number, number]\n                : [CanvasConst.width, CanvasConst.height],\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\n        },\n        updateSetting: transformerOrPayload => {\n            set(currentStore => {\n                const newSetting = typeof transformerOrPayload === 'function'\n                    ? transformerOrPayload(currentStore.setting)\n                    : { ...currentStore.setting, ...transformerOrPayload };\n\n                localStorage.setItem('setting', JSON.stringify(newSetting));\n\n                return {\n                    setting: newSetting,\n                };\n            });\n        }\n    };\n});","import { useCallback, useEffect, useRef } from 'react';\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\nimport { useCard } from './use-card';\nimport { CardOpacity } from 'src/model';\nimport { useSetting } from './use-setting';\nimport { notification } from 'antd';\nimport { useLanguage } from './use-i18n';\n\nexport type UseCardExport = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\n    exportRef: React.MutableRefObject<{\n        currentPipeline: Promise<void>;\n        pipelineRunning: boolean;\n    }>,\n    onExport: (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        isRelevant: () => boolean,\n    }) => Promise<void>,\n    onDownloadError: () => void,\n    onDownloadComplete: () => void,\n};\nexport const useCardExport = ({\n    isTainted,\n    isInitializing,\n    exportCanvasRef,\n    exportRef,\n    onExport,\n    onDownloadError,\n    onDownloadComplete,\n}: UseCardExport) => {\n    const language = useLanguage();\n    const {\n        card: currentCard,\n    } = useCard();\n    const resolution = useSetting(state => state.setting.resolution);\n    const {\n        opacity,\n        name,\n        isPendulum,\n    } = currentCard;\n    const pendingSave = useRef(false);\n\n    const download = useCallback((size: [number, number] = resolution) => {\n        const drawCanvas = exportCanvasRef.current;\n        /** Clone node so we can resize it as will */\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\n        const drawCanvasContext = drawCanvas?.getContext('2d');\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\n        if (drawCanvas && drawCanvasContext\n            && clonedCanvas && clonedCanvasContext\n            && !isTainted\n        ) {\n            try {\n                if (size) {\n                    clonedCanvas.width = size[0];\n                    clonedCanvas.height = size[1];\n                }\n                /** Resize here */\n                clonedCanvasContext.drawImage(\n                    drawCanvas,\n                    0, 0, drawCanvas.width, drawCanvas.height,\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\n                );\n\n                const normalizedName = normalizeCardName(name);\n                var link = document.createElement('a');\n                link.download = normalizedName\n                    ? `${normalizedName}.png`\n                    : 'card.png';\n                link.href = clonedCanvas.toDataURL('image/png');\n                link.click();\n            } catch (e) {\n                onDownloadError();\n            }\n        }\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\n        onDownloadComplete();\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\n    const onSave = (size?: [number, number]) => {\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\n        const queuingSize = size ? [...size] as [number, number] : undefined;\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\n        setTimeout(() => {\n            if (exportRef.current.pipelineRunning === false) {\n                download(queuingSize);\n            } else pendingSave.current = true;\n        }, 200);\n    };\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const normalizedName = normalizeCardName(name);\n\n            if (relevant) {\n                document.title = normalizedName\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\n                    : 'Yu-Gi-Oh Carder';\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [name]);\n\n    useEffect(() => {\n        let saveBeforeReload = () => {\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n        };\n        window.addEventListener('beforeunload', saveBeforeReload);\n\n        return () => {\n            window.removeEventListener('beforeunload', saveBeforeReload);\n        };\n    });\n\n    useEffect(() => {\n        let relevant = true;\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        if (isInitializing === false) {\n            try {\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\n            } catch (e) {\n                /** Ensure it does not fire repeatedly */\n                const key = 'fail-to-set-storage-notification';\n                notification.close(key);\n                notification.error({\n                    key,\n                    message: language['error.card-max-size.message'],\n                    description: language['error.card-max-size.description'],\n                });\n            }\n\n            /**\n             * Run export pipeline:\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\n             * - If the (1) pipeline is no longer relevant, end effect.\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\n             * - If the (2) pipeline is no longer relevant, end effect.\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\n             */\n            (async () => {\n                const canvasRef = exportCanvasRef.current;\n                if (canvasRef) {\n                    window.addEventListener('beforeunload', confirmReload);\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\n\n                    exportRef.current.pipelineRunning = true;\n                    /** Artifical delay, turn on to test export timing */\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\n                    await exportRef.current.currentPipeline;\n\n                    if (relevant) {\n                        exportRef.current.currentPipeline = onExport({\n                            isPendulum,\n                            opacity,\n                            isRelevant: () => relevant,\n                        });\n\n                        await exportRef.current.currentPipeline;\n                        if (relevant) {\n                            /** Never include art data here, it will easily exceed the limit of url length */\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\n\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\n                            window.removeEventListener('beforeunload', confirmReload);\n                            exportRef.current.pipelineRunning = false;\n\n                            if (pendingSave.current) {\n                                pendingSave.current = false;\n                                download();\n                            }\n                        }\n                    }\n                }\n            })();\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n            relevant = false;\n        };\n    });\n\n    return {\n        onSave,\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\n    };\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\nimport { CanvasTextStyle } from 'src/service';\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\n\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\n\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\nexport const drawMarker = ({\n    ctx,\n    color = randomDarkColor(), width,\n    offset = 4,\n    edge, baseline,\n    xRatio,\n}: {\n    ctx: CanvasRenderingContext2D,\n    color?: string, width: number,\n    offset?: number,\n    edge: number, baseline: number,\n    xRatio: number,\n}) => {\n    const currentFillStyle = ctx.fillStyle;\n    ctx.fillStyle = color;\n    ctx.beginPath();\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\n    // ctx.fill();\n    ctx.fillStyle = currentFillStyle;\n};\n\n/**\n * @summary Letter spacing rules:\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\n * * Positive letter spacing will create a gap between each letter, and vice versa.\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\n */\n\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\nexport const fillTextLeftWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacingRatio: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'left';\n    const charList = str.split('');\n    let curLeft = edge;\n\n    charList.forEach(char => {\n        ctx.fillText(char, curLeft, baseline);\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\n    });\n\n    return curLeft;\n};\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\nexport const fillTextRightWithSpacing = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    str: string,\n    letterSpacing: number,\n    edge: number,\n    baseline: number,\n    option?: {\n        stroke?: boolean,\n    }\n) => {\n    if (!ctx || !str) return edge;\n\n    const { stroke = false } = option ?? {};\n    ctx.textAlign = 'right';\n    const charList = str.split('');\n    let curRight = edge;\n\n    charList.forEach((c, index) => {\n        const char = charList[charList.length - index - 1];\n        ctx.fillText(char, curRight, baseline);\n        if (stroke) ctx.strokeText(char, curRight, baseline);\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\n    });\n    return curRight;\n};\n\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\nexport const clearCanvas = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    width = CanvasWidth,\n    height = CanvasHeight,\n): ctx is CanvasRenderingContext2D => {\n    if (ctx) {\n        ctx.clearRect(0, 0, width, height);\n\n        return true;\n    };\n    return false;\n};\n\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\nexport const getFinishIterator = (\n    finish: string[],\n    finishMap: Record<string, FinishInformation> = FinishMap,\n) => {\n    return async (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => {\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\n        for (const finishType of finish) {\n            const finishInformation = finishMap[finishType];\n            if (caller && finishMap[finishType]) {\n                const { partInstructionMap } = finishInformation;\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\n\n                if (instructionList.length) {\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\n                        ctx.globalCompositeOperation = blendMode;\n                        ctx.globalAlpha = opacity;\n\n                        await caller(finishType);\n                    }\n                } else {\n                    await caller(finishType);\n                }\n                ctx.globalAlpha = 1;\n                ctx.globalCompositeOperation = 'source-over';\n            }\n        }\n        ctx.globalAlpha = 1;\n        ctx.globalCompositeOperation = 'source-over';\n    };\n};\n\nconst DEFAULT_SHADOW_OFFSET_X = 0;\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\nconst DEFAULT_SHADOW_BLUR = 0;\nconst DEFAULT_SHADOW_COLOR = '#000000';\nconst DEFAULT_TEXT_COLOR = '#000000';\n\nexport const setTextStyle = ({\n    ctx,\n    x = DEFAULT_SHADOW_OFFSET_X,\n    y = DEFAULT_SHADOW_OFFSET_Y,\n    blur = DEFAULT_SHADOW_BLUR,\n    color = DEFAULT_TEXT_COLOR,\n    shadowColor = DEFAULT_SHADOW_COLOR,\n}: {\n    ctx: CanvasRenderingContext2D,\n} & CanvasTextStyle) => {\n    ctx.shadowOffsetX = x;\n    ctx.shadowOffsetY = y;\n    ctx.shadowBlur = blur;\n    ctx.shadowColor = shadowColor;\n    ctx.fillStyle = color;\n\n    return () => {\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\n    };\n};","import { CanvasTextStyle } from 'src/service';\nimport { setTextStyle } from './canvas-util';\n\nconst imageCacheMap: Record<string, {\n    image: HTMLImageElement,\n    ready: boolean,\n    error: boolean,\n    cache: boolean,\n}> = {};\n\nexport const drawFrom = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /**\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\n         * \n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\n        */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY);\n            /** Same treatment for chrome mobile bug */\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n\n                ctx.drawImage(image, normalizedX, normalizedY);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAsset = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number) = 0,\n    sy: number | ((image: HTMLImageElement) => number) = 0,\n) => {\n    return await drawFrom(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n    );\n};\n\nexport const drawFromWithSize = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    source: string,\n    sx: number | ((image: HTMLImageElement) => number),\n    sy: number | ((image: HTMLImageElement) => number),\n    dw: number | ((image: HTMLImageElement) => number),\n    dh: number | ((image: HTMLImageElement) => number),\n) => {\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\n    return new Promise<boolean>(resolve => {\n        /** Check `drawFrom` comment for disable reasons */\n        if (imageCacheMap[source]?.ready === true) {\n            const image = imageCacheMap[source].image;\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\n\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n        if (imageCacheMap[source]?.error) {\n            setTimeout(() => resolve(true), 0);\n            return;\n        }\n\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\n        const image = imageCached\n            ? imageCacheMap[source].image\n            : new Image();\n\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\n        image.addEventListener(\n            'load',\n            () => {\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\n    \n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].ready = true;\n                    imageCacheMap[source].error = false;\n                }\n                resolve(true);\n            },\n            { once: true },\n        );\n        image.addEventListener(\n            'error',\n            () => {\n                if (imageCacheMap[source]) {\n                    imageCacheMap[source].error = true;\n                }\n                resolve(false);\n            },\n            { once: true },\n        );\n\n        if (!imageCached) imageCacheMap[source] = {\n            image: image,\n            ready: false,\n            error: false,\n            cache: true,\n        };\n    });\n};\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\n    ctx,\n    source,\n    sx, sy,\n    dw, dh,\n) => {\n    return await drawFromWithSize(\n        ctx,\n        '/asset/image/' + source,\n        sx, sy,\n        dw, dh,\n    );\n};\n\nexport const drawWithStyle = async (\n    canvas: HTMLCanvasElement,\n    source: string,\n    dx: number, dy: number,\n    sw: number, sh: number,\n    style?: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n    const clonedCanvas = document.createElement('canvas');\n    clonedCanvas.width = sw;\n    clonedCanvas.height = sh;\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\n\n    if (!clonedCtx || !ctx) return;\n\n    /**\n     * * First, we clone a canvas with the same size of the destination one.\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\n     * \n     * Needless to say this will not work very well with multi-colored asset.\n     * */\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    if (style?.color) {\n        clonedCtx.fillStyle = style.color;\n        clonedCtx.fillRect(0, 0, sw, sh);\n        clonedCtx.globalCompositeOperation = 'destination-in';\n    }\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\n    clonedCtx.globalCompositeOperation = 'source-over';\n\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\n    ctx.drawImage(clonedCanvas, dx, dy);\n    resetMainCanvasStyle();\n};","import {\n    ChiisaiRegex,\n    ChoonpuRegex,\n    DefaultFontDeviation,\n    FontDeviation,\n    HiraganaRegex,\n    KatakanaRegex,\n    MetricMethod,\n    NoSpaceRegex,\n    OCGBoxSpacingRatioMap,\n    OCGDotRegex,\n    OCGIncreasedLevel2WidthRegex,\n    OCGIncreasedWidthRegex,\n    OCGLastOfLineOffsetMap,\n    OCGNumberRegex,\n    OCGOffsetMap,\n    OCG_REDUCED_AT_END_LINE_RATIO,\n    TCGBoxSpacingRatioMap,\n    TCGLastOfLineOffsetMap,\n    TCGOffsetMap,\n    nonBreakableSymbolRegex,\n} from 'src/model';\n\n/**\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\n *\n * Each letter has 3 main values:\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\n * \n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\n * \n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\n */\nexport const getLetterWidth = ({\n    ctx,\n    letter,\n    isLastOfLine = false,\n    debug,\n    fontStyle,\n    xRatio,\n    metricMethod = 'standard',\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    isLastOfLine?: boolean,\n    fontStyle: string,\n    xRatio: number,\n    metricMethod?: MetricMethod,\n    debug?: string,\n}) => {\n    if (nonBreakableSymbolRegex.test(letter)) return {\n        width: 0,\n        boundWidth: 0,\n    };\n\n    const boxSpacingRatioMap = fontStyle === 'tcg'\n        ? TCGBoxSpacingRatioMap\n        : OCGBoxSpacingRatioMap;\n    const offsetMap = fontStyle === 'tcg'\n        ? TCGOffsetMap\n        : OCGOffsetMap;\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\n        ? TCGLastOfLineOffsetMap\n        : OCGLastOfLineOffsetMap;\n    const metric = ctx.measureText(letter);\n    const {\n        width,\n        actualBoundingBoxLeft,\n        actualBoundingBoxRight,\n    } = metric;\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\n    let kerningScaleRatio = 1;\n    if (metricMethod === 'name') {\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\n    }\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\n            ? 0.046875\n            : 0;\n    let boundWidth = actualBoundWidth;\n    let offsetRatio = (isLastOfLine\n        ? lastOfLineOffsetMap[letter]\n        : offsetMap[letter]) ?? 0;\n\n    if (fontStyle === 'tcg') {\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\n\n        return {\n            width,\n            actualBoundWidth,\n            boundWidth: width + 2 * letterBoxSpacing,\n            metric,\n            offsetRatio,\n        };\n    }\n\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\n        + (metricMethod === 'furigana'\n            ? 0\n            : Math.min(\n                width * 0.075,\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\n            ));\n    let letterRatio = 1;\n    let endLineRatio = 1;\n    let standardMetricRatio = 1.000;\n    if (OCGDotRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana'\n            ? actualBoundWidth\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\n        standardMetricRatio = 0.600;\n    }\n    else if (ChoonpuRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\n        letterBoxSpacing = 2;\n    }\n    else if (ChiisaiRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\n    }\n    else if (OCGNumberRegex.test(letter)) {\n        boundWidth = width;\n    }\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 2;\n    }\n    else if (OCGIncreasedWidthRegex.test(letter)) {\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\n    }\n    else if (HiraganaRegex.test(letter)) {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    else if (KatakanaRegex.test(letter)) {\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\n    }\n    else if (NoSpaceRegex.test(letter)) {\n        boundWidth = width;\n        letterBoxSpacing = 0;\n    }\n    else {\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\n    }\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\n\n    const actualLetterWidth = width * letterRatio * endLineRatio;\n\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\n    return {\n        width,\n        actualBoundWidth,\n        boundWidth: metricMethod === 'standard'\n            ? width * standardMetricRatio\n            : boundWidth + letterBoxSpacing * 2,\n        metric,\n        offsetRatio,\n    };\n};\n\nexport type TextDrawer = (props: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    scaledEdge: number,\n    scaledBaseline: number,\n}) => void;\n/** \n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\n */\nexport const drawLetter = ({\n    ctx,\n    baseline,\n    edge,\n    letter,\n    xRatio,\n    deviation = {},\n    letterMetric,\n    textDrawer,\n}: {\n    ctx: CanvasRenderingContext2D,\n    letter: string,\n    letterMetric?: ReturnType<typeof getLetterWidth>,\n    edge: number,\n    baseline: number,\n    xRatio: number,\n    deviation?: FontDeviation,\n    textDrawer?: TextDrawer,\n}) => {\n    const {\n        boundWidth,\n        metric = ctx.measureText(letter),\n        offsetRatio = 0,\n    } = letterMetric ?? {};\n    const {\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\n        yRatio = DefaultFontDeviation.yRatio,\n    } = xRatio < 1 ? {} : deviation;\n\n    const letterWidth = metric.width * xRatio;\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\n    const worker = textDrawer ?? (({\n        ctx,\n        letter,\n        scaledBaseline,\n        scaledEdge,\n    }) => {\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\n    });\n\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\n    const externalOffset = scaledBoundingWidth * offsetRatio;\n    ctx.scale(1, yRatio);\n    worker({\n        ctx,\n        letter,\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\n    });\n    ctx.scale(1, 1 / yRatio);\n};","import {\n    BREAKABLE_LETTER,\n    DefaultFontSizeData,\n    FontData,\n    FontSizeData,\n    NB_WORD_CLOSE,\n    NB_WORD_OPEN,\n} from 'src/model';\nimport { createFontGetter } from 'src/util';\n\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\n    const regex = keepControlCharacter\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\n\n    return text\n        .split(regex)\n        .filter(token => token != null && token !== '');\n};\n\nexport const getTextWorker = (\n    ctx: CanvasRenderingContext2D,\n    fontData: FontData,\n    fontSizeData: FontSizeData,\n    fontController: ReturnType<typeof createFontGetter>,\n) => {\n    const {\n        fontSize,\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\n    } = fontSizeData;\n    const {\n        font,\n        ordinalFont,\n        symbolFont,\n        symbolFontRatio,\n        numberFont = font,\n        numberFontRatio = 1,\n        furiganaFont,\n    } = fontData;\n\n    let numberFontMemory = fontController.getFontInfo();\n    const applyNumberFont = () => {\n        numberFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\n    };\n    const stopApplyNumberFont = () => {\n        ctx.font = fontController\n            .setFamily(numberFontMemory.family)\n            .setSize(numberFontMemory.size)\n            .getFont();\n    };\n\n    let symbolFontMemory = fontController.getFontInfo();\n    const applySymbolFont = () => {\n        symbolFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\n    };\n    const stopApplySymbolFont = () => {\n        ctx.font = fontController\n            .setFamily(symbolFontMemory.family)\n            .setSize(symbolFontMemory.size)\n            .getFont();\n    };\n\n    let ordinalFontMemory = fontController.getFontInfo();\n    const applyOrdinalFont = () => {\n        ordinalFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\n    };\n    const stopApplyOrdinalFont = () => {\n        ctx.font = fontController\n            .setFamily(ordinalFontMemory.family)\n            .setSize(ordinalFontMemory.size)\n            .getFont();\n    };\n\n    const resetScale = () => {\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n    };\n\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\n        ctx.scale(xRatio, yRatio);\n    };\n\n    let furiganaFontMemory = fontController.getFontInfo();\n    const applyFuriganaFont = (bold = false) => {\n        furiganaFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\n    };\n    const stopApplyFuriganaFont = () => {\n        ctx.font = fontController\n            .setFamily(furiganaFontMemory.family)\n            .setWeight(furiganaFontMemory.weight)\n            .setSize(furiganaFontMemory.size)\n            .getFont();\n    };\n\n    const applyScale = (xScale = 1, yScale = xScale) => {\n        ctx.scale(xScale, yScale);\n    };\n\n    const reverseScale = (scaleValue = 1) => {\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\n    };\n\n    let largerTextFontMemory = fontController.getFontInfo();\n    const applyLargerText = (fontRatio = 1) => {\n        largerTextFontMemory = fontController.getFontInfo();\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\n    };\n    const stopApplyLargerText = () => {\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\n    };\n\n    return {\n        applyNumberFont, stopApplyNumberFont,\n        applyLargerText, stopApplyLargerText,\n        applySymbolFont, stopApplySymbolFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applyFuriganaFont, stopApplyFuriganaFont,\n\n        applyAsymmetricScale,\n        applyScale,\n        resetScale,\n        reverseScale,\n    };\n};\n\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\n * \n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\n*/\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\n    const bulletRadius = (width - spaceAfter) / 2;\n    ctx.beginPath();\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = '#003300';\n    ctx.stroke();\n};\n\n/**\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\n * \n * @summary All ruby (head text) rules:\n * * A token may or may not has head text.\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\n * */\nexport const analyzeHeadText = ({\n    footText, footTextWidth,\n    headText, headTextLetterWidth,\n    headTextGap,\n    headTextSpacing,\n    gapPadding,\n    debug,\n    fitFootText,\n    sentenceXRatio,\n    xRatio,\n}: {\n    headText: string,\n    headTextLetterWidth: number,\n    footText: string,\n    footTextWidth: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    gapPadding: number,\n    debug?: string,\n    fitFootText: boolean,\n    sentenceXRatio: number,\n    xRatio: number,\n}) => {\n    const noHeadText = headText.length === 0;\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\n    let alignCenterLetterSpacing = headTextSpacing;\n    let internalXRatio = 0;\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\n    if (condenseHeadText <= 0.95) {\n        /** Most case fall to this category */\n        alignCenterLetterSpacing = headTextSpacing * 1;\n    }\n    else if (condenseHeadText <= 1.175) {\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? 0\n            : headTextSpacing * 3;\n    }\n    else if (condenseHeadText <= 1.560) {\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 3;\n    }\n    else {\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\n        internalXRatio = 0.66;\n        alignCenterLetterSpacing = headTextSpacing >= 0\n            ? headTextSpacing * -1/4\n            : headTextSpacing * 2;\n    }\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\n        alignCenterLetterSpacing = headTextSpacing;\n    }\n\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\n        ? xRatio\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\n            + alignCenterLetterSpacing * (headText.length - 1);\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\n    const alignEvenlyHeadTextWidth = footTextWidth;\n\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\n        ? 'center' as const\n        : 'space-around' as const;\n    const letterSpacing = alignment === 'center'\n        ? alignCenterLetterSpacing\n        : alignEvenlyLetterSpacing;\n    const trueHeadTextWidth = alignment === 'center'\n        ? gapPadding * 2 + alignCenterHeadTextWidth\n        : alignEvenlyHeadTextWidth;\n    const headTextWidth = fitFootText\n        ? Math.min(trueHeadTextWidth, footTextWidth)\n        : trueHeadTextWidth;\n    const baseHalfGap = alignment === 'center'\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\n        : 0;\n    const halfGap = Math.max(\n        headTextGap,\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\n    );\n\n    if (debug) console.info(\n        `analyzeHeadText ${debug}`,\n        alignment,\n        letterSpacing,\n        '|',\n        headText, headTextWidth, trueHeadTextWidth,\n        footText, footTextWidth,\n        halfGap,\n    );\n    return {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        headTextWidth,\n        /**\n         * Simple visualization:\n         * * Center: `[gap][letter + spacing][gap]`\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\n         */\n        alignment,\n        /** \n         * * Positive gap will take space from other.\n         * * Negative app allow other to use their space.\n         */\n        halfGap,\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\n    };\n};\n\n/**\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\n * \n * * If the previous gap is positive (push to their right):\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\n * * If the previous gap is negative (pull the next token to them):\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\n */\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\n    return prevGap >= 0\n        ? curGap >= 0\n            ? 0\n            : Math.max(prevGap * -1, curGap) * -1\n        : curGap >= 0\n            ? Math.max(prevGap, curGap * -1) * -1\n            : 0;\n};","import {\n    FontData,\n    BULLET_LETTER,\n    TCGSymbolLetterRegex,\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    FragmentSplitRegex,\n    WholeWordRegex,\n    DefaultFontSizeData,\n    ST_ICON_SYMBOL,\n    TextData,\n    NoSpaceRegex,\n    LETTER_GAP_RATIO,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    SquareBracketLetterRegex,\n    CapitalLetterRegex,\n    NumberRegex,\n    OCGNoOverheadGapRegex,\n    GAP_PER_WIDTH_RATIO,\n    RUBY_REGEX,\n    DefaultFontData,\n    RUBY_BONUS_RATIO,\n    NON_BREAKABLE_SYMBOL_SOURCE,\n    NonCompressableRegex,\n} from 'src/model';\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\nimport { createFontGetter } from 'src/util';\nimport { getLetterWidth } from './letter';\n\n/** \n * Return information of a token.\n * @returns\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\n */\nexport const analyzeToken = ({\n    ctx,\n    token: rawToken, nextToken,\n    xRatio,\n    previousTokenGap = 0,\n    letterSpacing = DefaultFontSizeData.letterSpacing,\n    format,\n    textData,\n    // debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    token: string,\n    nextToken: string | undefined,\n    xRatio: number,\n    previousTokenGap?: number,\n    letterSpacing?: number,\n    format: string,\n    // debug?: boolean,\n    textData: {\n        fontData: FontData,\n        fontLevel: number,\n        currentFont: ReturnType<typeof createFontGetter>,\n    },\n}) => {\n    if (!ctx || !rawToken) return {\n        totalWidth: 0,\n        leftMostLetter: '',\n        spaceCount: 0,\n        spaceAtEnd: false,\n        rightGap: 0,\n        leftGap: 0,\n    };\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const {\n        metricMethod,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        fontStyle,\n    } = fontData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        bulletSymbolWidth,\n        capitalLetterRatio,\n        fontSize,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\n    const {\n        applyScale, reverseScale,\n        applyLargerText, stopApplyLargerText,\n        applyFuriganaFont, stopApplyFuriganaFont,\n        applyOrdinalFont, stopApplyOrdinalFont,\n        applySymbolFont, stopApplySymbolFont,\n        applyNumberFont, stopApplyNumberFont,\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    let leftMostLetter = '';\n    let totalWidth = 0;\n    let spaceCount = 0;\n    let spaceAtEnd = false;\n    const isLastOfLine = nextToken === undefined;\n    /** The right gap of a token will influence the left gap of the next token */\n    let currentRightGap = previousTokenGap ?? 0;\n    /** Whether or not it is affected by rebalance calculation */\n    let offsetable = false;\n    let leftMostGap = 0;\n\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\n        const isLeftmostFragment = cnt === 0;\n        const fragment = fragmentList[cnt];\n\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\n        if (fragment === ST_ICON_SYMBOL) {\n            currentRightGap = 0;\n            const fragmentWidth = iconSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\n        else if (fragment === BULLET_LETTER) {\n            currentRightGap = 0;\n            const fragmentWidth = bulletSymbolWidth / xRatio;\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Copyright symbol © is unscalable (creator text) */\n        else if (/[©]/.test(fragment)) {\n            currentRightGap = 0;\n            applyLargerText(largeSymbolRatio);\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyLargerText();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** OCG Ordinal symbol is unscalable */\n        else if (NonCompressableRegex.test(fragment)) {\n            currentRightGap = 0;\n            applyOrdinalFont();\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\n            stopApplyOrdinalFont();\n            totalWidth += fragmentWidth * letterSpacingRatio;\n\n            spaceCount += 1;\n            if (isLeftmostFragment) {\n                leftMostGap = 0;\n                leftMostLetter = fragment[0];\n            }\n        }\n        /** Process ruby syntax */\n        else if (RUBY_REGEX.test(fragment)) {\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n            const fitFootText = rubyType === '||';\n            /** Calculate foot text's width */\n            const {\n                totalWidth: footTextWidth,\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\n\n            /** Calculate head text's width */\n            applyFuriganaFont();\n            const headTextLetterWidth = headText\n                .split('')\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                .reduce((acc, cur) => acc + cur, 0);\n            stopApplyFuriganaFont();\n\n            /** Calculate gap */\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\n                headText,\n                headTextLetterWidth: headTextLetterWidth / xRatio,\n                footText,\n                footTextWidth,\n                headTextGap: defaultGap / xRatio,\n                headTextSpacing,\n                gapPadding: headTextGapRatio * fontSize / xRatio,\n                fitFootText,\n                sentenceXRatio: xRatio,\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n            });\n            const halfGap = headText.length === 0\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\n                : baseHalfGap;\n            const leftGap = halfGap;\n            const rightGap = halfGap;\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            currentRightGap = rightGap;\n            totalWidth += boundWidth - lostLeftWidth;\n            spaceCount += 1;\n\n            if (isLeftmostFragment) {\n                offsetable = true;\n                leftMostGap = leftGap;\n                leftMostLetter = footText[0];\n            }\n        }\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\n        else if (WholeWordRegex.test(fragment)) {\n            /** Whole word may have their own spacing ratio */\n            const normalizedWordSpacingRatio = wordLetterSpacing\n                ? 1 + wordLetterSpacing / 2\n                : letterSpacingRatio;\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n            let remainFragment = fragment;\n            let fragmentWidth = 0;\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\n             * * Split the current word into two part: The first letter and the rest of the word.\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\n             */\n            while (remainFragment !== '') {\n                let currentLetter = remainFragment[0];\n                let nextRemainFragment = remainFragment.slice(1);\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\n                if (SquareBracketLetterRegex.test(currentLetter)) {\n                    applyScale(squareBracketRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(squareBracketRatio);\n                }\n                /** Captial letters may have different scaling */\n                else if (CapitalLetterRegex.test(currentLetter)) {\n                    applyScale(capitalLetterRatio);\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    reverseScale(capitalLetterRatio);\n                }\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\n                else if (NumberRegex.test(currentLetter)) {\n                    applyNumberFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplyNumberFont();\n                }\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                    applySymbolFont();\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                    stopApplySymbolFont();\n                }\n                /** No special treatment for the usual letters */\n                else {\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                }\n                fragmentWidth += actualLetterWidth;\n                remainFragment = nextRemainFragment;\n            }\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            ctx.letterSpacing = '0px';\n        }\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n            applySymbolFont();\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\n            stopApplySymbolFont();\n\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n        }\n        else {\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\n            const fragmentWidth = boundWidth * letterSpacingRatio;\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\n            const rightGap = leftGap;\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n            totalWidth += fragmentWidth - lostLeftWidth;\n            currentRightGap = rightGap;\n            if (\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\n                && NoSpaceRegex.test(fragment) === false\n            ) {\n                spaceCount += 1;\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\n            }\n            if (isLeftmostFragment) {\n                leftMostGap = leftGap;\n                leftMostLetter = fragment[0];\n            }\n            if (OCGNoOverheadGapRegex.test(fragment)) {\n                leftMostGap = 0;\n                currentRightGap = 0;\n            }\n        }\n    }\n\n    return {\n        totalWidth,\n        spaceCount,\n        spaceAtEnd,\n        leftMostLetter,\n        rightGap: currentRightGap,\n        leftGap: leftMostGap,\n        offsetable,\n    };\n};\n\n/**\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\n * \n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\n */\nexport const analyzeLine = ({\n    ctx,\n    line,\n    width,\n    xRatio: baseXRatio,\n    format,\n    isLast,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    line: string,\n    width: number,\n    xRatio: number,\n    format: string,\n    isLast: boolean,\n    textData: TextData,\n}) => {\n    const tokenList = tokenizeText(line);\n    let totalContentWidth = 0;\n    let lineSpaceCount = 0;\n    let currentGap = 0;\n\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n        const token = tokenList[cnt];\n        const nextToken = tokenList[cnt + 1];\n        /** Non-compressable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            continue;\n        }\n        const {\n            spaceCount,\n            totalWidth,\n            spaceAtEnd,\n            leftGap,\n            rightGap,\n            leftMostLetter,\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\n        /** Check `createLineList` function about first token indentation. */\n        const indent = (\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n            +\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\n        );\n\n        currentGap = rightGap * xRatio;\n        totalContentWidth += totalWidth * xRatio + indent;\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\n    }\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\n    const spaceWidth = isLast\n        ? format === 'tcg'\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\n        : expectedSpaceWidth;\n\n    return {\n        tokenList,\n        spaceWidth,\n    };\n};","import {\n    OCGAlphabetRegex,\n    MAX_LINE_REVERSE_INDENT,\n    START_OF_LINE_ALPHABET_OFFSET,\n    TextData,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n} from 'src/model';\nimport { tokenizeText } from './text-util';\nimport { analyzeToken } from './text-analyze';\n\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\nexport const createLineList = ({\n    ctx,\n    median,\n    paragraphList,\n    additionalLineCount = 0,\n    width,\n    format,\n    textData,\n}: {\n    ctx: CanvasRenderingContext2D,\n    median: number,\n    width: number,\n    paragraphList: string[],\n    additionalLineCount?: number,\n    format: string,\n    textData: TextData,\n}) => {\n    const { fontData, fontLevel } = textData;\n    const { letterSpacing } = fontData.fontList[fontLevel];\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\n        // Calculate hypothesis canvas width with the provided median ratio\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\n        const scaledWidth = width / baseXRatio;\n        const tokenList = tokenizeText(curr, true);\n        let addedLineCount = 1;\n        let wordList: string[] = [];\n        let currentLineWidth = 0;\n        let currentGap = 0;\n        let unCompressedFlag = 0;\n\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\n            const token = tokenList[cnt];\n            const nextToken = tokenList[cnt + 1];\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\n             * Control letters do not get draw so this will not affect the calculation result.\n             */\n            if (token === NB_UNCOMPRESSED_START) {\n                unCompressedFlag += 1;\n                xRatio = 1;\n            } else if (token === NB_UNCOMPRESSED_END) {\n                unCompressedFlag -= 1;\n                xRatio = baseXRatio;\n            }\n            let {\n                leftMostLetter,\n                totalWidth,\n                rightGap,\n                leftGap,\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\n\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\n             */\n            const indent = cnt === 0\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n                : 0;\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\n            if (currentLineWidth + tokenWidth > scaledWidth) {\n                let line = wordList.join('').trim();\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n                unCompressedFlag = 0;\n                currentLineList.push({\n                    line,\n                    effectiveMedian: median,\n                    isLast: false,\n                    actualLineWidth: currentLineWidth,\n                });\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\n                let {\n                    totalWidth,\n                    rightGap,\n                    leftGap,\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\n                /** Of course we also re-calculate overflow possibility. */\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\n                let tokenWidth = totalWidth + indent;\n                currentLineWidth = tokenWidth;\n                currentGap = rightGap;\n                wordList = [token];\n                addedLineCount += 1;\n            } else {\n                currentLineWidth += tokenWidth;\n                currentGap = rightGap;\n                wordList.push(token);\n            }\n        }\n\n        /** If no more tokens left in the sentence, wrap them into the last line. */\n        let line = wordList.join('').trim();\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\n        unCompressedFlag = 0;\n        currentLineList.push({\n            line,\n            effectiveMedian: median,\n            isLast: true,\n            actualLineWidth: currentLineWidth,\n        });\n\n        return accumulatedLineCount + addedLineCount;\n    }, 0) + (additionalLineCount ?? 0);\n\n    return { currentLineList, currentLineCount };\n};","import {\n    analyzeHeadText,\n    getTextWorker,\n} from './text-util';\nimport { getLetterWidth } from './letter';\nimport { RUBY_BONUS_RATIO } from 'src/model';\n\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\n * \n * Head text has four cases of compression:\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\n*/\nexport const fillHeadText = ({\n    ctx,\n    fontSize,\n    edge, baseline,\n    headText, headTextLetterWidth,\n    footText, footTextWidth,\n    headTextGap,\n    headTextSpacing,\n    headTextHeightRatio,\n    headTextBold,\n    headTextGapRatio,\n    xRatio,\n    fontStyle,\n    textWorker,\n    fitFootText,\n    headTextOverflow,\n}: {\n    ctx: CanvasRenderingContext2D,\n    fontSize: number,\n    headText: string, headTextLetterWidth: number,\n    footText: string, footTextWidth: number,\n    edge: number, baseline: number,\n    headTextGap: number,\n    headTextSpacing: number,\n    headTextHeightRatio: number,\n    headTextBold: boolean,\n    headTextGapRatio: number,\n    xRatio: number,\n    fontStyle: string,\n    textWorker: ReturnType<typeof getTextWorker>,\n    fitFootText: boolean,\n    headTextOverflow: 'normal' | 'condense',\n}) => {\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\n    /** Custom ratio for case 2 */\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\n        : 0;\n    const {\n        gapPadding,\n        letterSpacing,\n        trueHeadTextWidth,\n        halfGap,\n        alignment,\n        headTextXRatio,\n    } = analyzeHeadText({\n        headText, headTextLetterWidth,\n        footText, footTextWidth: footTextWidth * xRatio,\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\n        gapPadding: fontSize * headTextGapRatio,\n        fitFootText,\n        sentenceXRatio: xRatio,\n        xRatio: externalHeadTextXRatio,\n    });\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\n\n    if (headText.length === 0) return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n\n    /** Custom ratio for case 4 */\n    const baseLoneTokenRatio = fitFootText\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\n        : 1;\n\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\n    const finalizedRatio = fitFootText\n        ? baseLoneTokenRatio\n        : (externalHeadTextXRatio && alignment === 'center')\n            ? externalHeadTextXRatio\n            : headTextXRatio;\n\n    let currentEdge = edge;\n    resetScale();\n    if (fitFootText || finalizedRatio) {\n        applyScale(finalizedRatio, 1);\n        currentEdge = edge / finalizedRatio;\n    }\n\n    if (alignment === 'center') {\n        currentEdge += gapPadding;\n        /** Adjust head text's drawing position to fit case. */\n        if (!overflow) {\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\n        } else if (finalizedRatio > baseLoneTokenRatio) {\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\n        }\n    } else {\n        currentEdge += letterSpacing / 2;\n    }\n\n    for (const letter of headText) {\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\n        applyFuriganaFont();\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\n        const boundingOffset = (width - boundWidth) / 2;\n        stopApplyFuriganaFont();\n\n        applyFuriganaFont(headTextBold);\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\n        stopApplyFuriganaFont();\n        currentEdge += (boundWidth + letterSpacing);\n    }\n    if (fitFootText || finalizedRatio) {\n        resetScale();\n    }\n    applyScale(xRatio, 1);\n\n    return {\n        trueHeadTextWidth,\n        halfGap,\n    };\n};","import {\n    BULLET_LETTER,\n    CapitalLetterRegex,\n    DefaultFontData,\n    DefaultFontSizeData,\n    FragmentSplitRegex,\n    LETTER_GAP_RATIO,\n    MAX_LINE_REVERSE_INDENT,\n    NB_UNCOMPRESSED_END,\n    NB_UNCOMPRESSED_START,\n    NoSpaceRegex,\n    NonCompressableRegex,\n    NumberRegex,\n    OCGAlphabetRegex,\n    OCGNoOverheadGapRegex,\n    RUBY_BONUS_RATIO,\n    RUBY_REGEX,\n    START_OF_LINE_ALPHABET_OFFSET,\n    ST_ICON_SYMBOL,\n    SquareBracketLetterRegex,\n    TCGSymbolLetterRegex,\n    TextData,\n    WholeWordRegex,\n    getBulletSpacing,\n} from 'src/model';\nimport {\n    drawBullet,\n    getLostLeftWidth,\n    analyzeHeadText,\n    getTextWorker,\n    tokenizeText,\n} from './text-util';\nimport { analyzeToken } from './text-analyze';\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\nimport { fillHeadText } from './text-overhead';\nimport { drawMarker } from './canvas-util';\n\n/**\n * This is the heart and soul of drawer, please test this thoroughly for each change.\n * \n * @summary Text hierachy\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\n *   * Block: Whole text in a section.\n * \n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\n * **/\nexport const drawLine = ({\n    ctx,\n    tokenList,\n    trueEdge, trueBaseline,\n    spaceWidth = 0,\n    xRatio: baseXRatio, yRatio = 1,\n    textData,\n    format,\n    textDrawer,\n    debug = false,\n}: {\n    ctx: CanvasRenderingContext2D,\n    format: string,\n    tokenList: string[],\n    xRatio: number,\n    yRatio?: number,\n    trueEdge: number,\n    trueBaseline: number,\n    spaceWidth?: number,\n    textData: TextData,\n    textDrawer?: TextDrawer,\n    debug?: boolean,\n}) => {\n    const {\n        currentFont,\n        fontData,\n        fontLevel,\n    } = textData;\n    const fontSizeData = fontData.fontList[fontLevel];\n    const {\n        headTextFillStyle,\n        headTextBold = DefaultFontData.headTextBold,\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\n        headTextOverflow = DefaultFontData.headTextOverflow,\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\n        metricMethod,\n        fontStyle,\n        letterDeviationMap = {},\n    } = fontData;\n    const {\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\n        bulletSymbolWidth,\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\n        fontSize,\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\n        iconSymbolWidth = bulletSymbolWidth,\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\n        letterSpacing = DefaultFontSizeData.letterSpacing,\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\n        wordLetterSpacing,\n    } = fontSizeData;\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\n    const {\n        stopApplyFuriganaFont, applyFuriganaFont,\n        stopApplyLargerText, applyLargerText,\n        stopApplyNumberFont, applyNumberFont,\n        stopApplyOrdinalFont, applyOrdinalFont,\n        applyScale, reverseScale,\n        applySymbolFont, stopApplySymbolFont,\n        applyAsymmetricScale, resetScale,\n    } = textWorker;\n\n    const letterSpacingRatio = 1 + letterSpacing / 2;\n    const baseline = trueBaseline / yRatio;\n    let previousTokenGap = 0;\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\n    let previousTokenRebalanceOffset = 0;\n    let tokenEdge = trueEdge;\n\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\n     */\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\n        const token = tokenList[tokenCnt];\n        /** Turn on/off non-condenseable mode */\n        if (token === NB_UNCOMPRESSED_START) {\n            xRatio = 1;\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            continue;\n        }\n        else if (token === NB_UNCOMPRESSED_END) {\n            xRatio = baseXRatio;\n            ctx.scale(xRatio, 1);\n            continue;\n        }\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\n        const defaultGap = fontSize * gapRatio;\n        const nextToken = tokenList[tokenCnt + 1];\n        const next2ndToken = tokenList[tokenCnt + 2];\n        const analyzeTokenParameter = {\n            ctx,\n            xRatio,\n            letterSpacing,\n            format,\n            textData,\n        };\n        const drawLetterParameter = {\n            ctx,\n            baseline,\n            xRatio,\n            textDrawer,\n        };\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\n        const {\n            leftMostLetter,\n            leftGap,\n            rightGap: tokenRightGap,\n            totalWidth: totalTokenWidth,\n            spaceCount,\n        } = analyzeToken({\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\n        });\n\n        /** Again, first token indentation. */\n        const indent = tokenCnt === 0\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\n            : 0;\n        let fragmentEdge = tokenEdge + indent;\n        let currentRightGap = previousTokenGap;\n\n        /** Draw all the fragments of a token. */\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\n            const fragment = fragmentList[fragmentCnt];\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\n\n            /** These fragments do not have any visual */\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\n            else if (fragment === ST_ICON_SYMBOL) {\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\n            else if (fragment === BULLET_LETTER) {\n                resetScale();\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Copyright symbol © is not condenseable and use larger font. */\n            else if (/[©]/.test(fragment)) {\n                resetScale();\n                applyLargerText(largeSymbolRatio);\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyLargerText();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** OCG Ordinal symbol is not condenseable and use different font. */\n            else if (NonCompressableRegex.test(fragment)) {\n                resetScale();\n                applyOrdinalFont();\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter: fragment,\n                    edge: fragmentEdge * xRatio,\n                    baseline: trueBaseline + ordinalFontOffsetY,\n                });\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\n                stopApplyOrdinalFont();\n                applyAsymmetricScale(xRatio, yRatio);\n\n                fragmentEdge += spaceWidth;\n                currentRightGap = 0;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** Fragment with overhead text. */\n            else if (RUBY_REGEX.test(fragment)) {\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\n                const fitFootText = rubyType === '||';\n                /** We do not support nested overhead text. */\n                const { totalWidth: footTextWidth } = analyzeToken({\n                    token: footText, nextToken: nextFragment,\n                    previousTokenGap: 0,\n                    ...analyzeTokenParameter,\n                });\n\n                /** Calculate letter width first before deciding the spacing. */\n                applyFuriganaFont();\n                const headTextLetterWidth = headText\n                    .split('')\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\n                    .reduce((acc, cur) => acc + cur, 0);\n                stopApplyFuriganaFont();\n\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\n                const {\n                    headTextWidth,\n                    halfGap: baseHalfGap,\n                } = analyzeHeadText({\n                    headText,\n                    headTextLetterWidth,\n                    footText,\n                    footTextWidth: footTextWidth * xRatio,\n                    headTextGap: defaultGap,\n                    headTextSpacing: headTextSpacing * xRatio,\n                    gapPadding: fontSize * headTextGapRatio,\n                    fitFootText,\n                    sentenceXRatio: xRatio,\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\n                });\n                const halfGap = headText.length === 0\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\n                    : baseHalfGap;\n                const rightGap = halfGap;\n                const leftGap = halfGap;\n                /** Lost left width because of negative gap of the previous fragment OR token */\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\n\n                const {\n                    offsetable: isNextTokenOffsetable,\n                    leftGap: nextUncompressedLeftGap\n                } = analyzeToken({\n                    token: nextFragment, nextToken: next2ndFragment,\n                    previousTokenGap: rightGap / xRatio,\n                    ...analyzeTokenParameter,\n                });\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\n                let rebalancedSpace = 0;\n                let nextTokenRebalanceOffset = 0;\n\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\n                } else {\n                    // rebalancedSpace = totalVacantSpace / 2;\n                    rebalancedSpace = vacantLeftWidth;\n                }\n                const footTextFragmentEdge = fragmentEdge\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\n                    + previousTokenRebalanceOffset;\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\n\n                /** Draw actual foot text here */\n                drawLine({\n                    ctx,\n                    format,\n                    textData,\n                    tokenList: tokenizeText(footText),\n                    trueBaseline: baseline,\n                    trueEdge: footTextFragmentEdge,\n                    xRatio,\n                    yRatio,\n                    spaceWidth: 0,\n                    textDrawer,\n                    debug: false,\n                });\n\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\n                const currentFillStyle = ctx.fillStyle;\n                const currentStrokeStyle = ctx.strokeStyle;\n                const currentShadowColor = ctx.shadowColor;\n                const currentShadowOffsetX = ctx.shadowOffsetX;\n                const currentShadowOffsetY = ctx.shadowOffsetY;\n                const currentShadowBlur = ctx.shadowBlur;\n                if (headTextFillStyle) {\n                    ctx.fillStyle = headTextFillStyle;\n                    ctx.strokeStyle = '';\n                    ctx.shadowColor = '';\n                    ctx.shadowOffsetX = 0;\n                    ctx.shadowOffsetY = 0;\n                    ctx.shadowBlur = 0;\n                }\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\n                fillHeadText({\n                    ctx,\n                    fontSize,\n                    edge: headTextFragmentEdge, baseline,\n                    headText, headTextLetterWidth,\n                    footText, footTextWidth,\n                    headTextGap: defaultGap,\n                    headTextSpacing,\n                    headTextHeightRatio,\n                    headTextBold,\n                    headTextGapRatio,\n                    xRatio,\n                    fontStyle,\n                    textWorker,\n                    fitFootText,\n                    headTextOverflow,\n                });\n                /** Restore foot text's original style */\n                ctx.fillStyle = currentFillStyle;\n                ctx.strokeStyle = currentStrokeStyle;\n                ctx.shadowColor = currentShadowColor;\n                ctx.shadowOffsetX = currentShadowOffsetX;\n                ctx.shadowOffsetY = currentShadowOffsetY;\n                ctx.shadowBlur = currentShadowBlur;\n\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\n                currentRightGap = rightGap;\n            }\n            /** Draw \"whole words\". */\n            else if (WholeWordRegex.test(fragment)) {\n                const normalizedWordSpacingRatio = wordLetterSpacing\n                    ? 1 + wordLetterSpacing / 2\n                    : letterSpacingRatio;\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\n\n                /**\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\n                 * \n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\n                 */\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n                fragmentEdge -= lostLeftWidth;\n\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\n                let remainFragment = fragment;\n                let currentPosition = fragmentEdge;\n                while (remainFragment !== '') {\n                    let currentLetter = remainFragment[0];\n                    let nextRemainFragment = remainFragment.slice(1);\n                    let actualLetterWidth = 0;\n                    const drawLetterofWordParameter = {\n                        ...drawLetterParameter,\n                        deviation: letterDeviationMap[currentLetter],\n                        letter: currentLetter,\n                        edge: currentPosition,\n                    };\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\n                        applyScale(squareBracketRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / squareBracketRatio,\n                            baseline: baseline / squareBracketRatio,\n                        });\n                        reverseScale(squareBracketRatio);\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\n                        applyScale(capitalLetterRatio);\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\n                            : 0;\n                        drawLetter({\n                            ...drawLetterofWordParameter,\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\n                            baseline: baseline / capitalLetterRatio\n                        });\n                        reverseScale(capitalLetterRatio);\n                    } else if (NumberRegex.test(currentLetter)) {\n                        applyNumberFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplyNumberFont();\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\n                        applySymbolFont();\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                        stopApplySymbolFont();\n                    } else {\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\n                        drawLetter(drawLetterofWordParameter);\n                    }\n                    currentPosition += actualLetterWidth * xRatio;\n                    remainFragment = nextRemainFragment;\n                }\n\n                fragmentEdge = currentPosition;\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n                ctx.letterSpacing = '0px';\n            }\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\n                const letter = fragment;\n                applySymbolFont();\n\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\n                fragmentEdge += letterWidth;\n\n                stopApplySymbolFont();\n\n                currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n            /** All other fragments */\n            else {\n                const letter = fragment;\n                const letterMetric = getLetterWidth({\n                    ctx,\n                    letter,\n                    fontStyle,\n                    metricMethod,\n                    isLastOfLine: nextFragment === undefined,\n                    xRatio,\n                });\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\n                const rightGap = leftGap;\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\n\n                fragmentEdge -= lostLeftWidth;\n                drawLetter({\n                    ...drawLetterParameter,\n                    letter,\n                    edge: fragmentEdge,\n                    deviation: letterDeviationMap[letter],\n                    letterMetric,\n                });\n                fragmentEdge += letterWidth;\n                if (\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\n                    && NoSpaceRegex.test(letter) !== true\n                ) {\n                    fragmentEdge += spaceWidth;\n                }\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\n                previousTokenRebalanceOffset = 0;\n            }\n        }\n\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\n        previousTokenGap = tokenRightGap * xRatio;\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\n    }\n\n    return {\n        tokenEdge,\n        iconPositionList,\n    };\n};","import {\n    NB_LINE_OPEN,\n    NB_LINE_CLOSE,\n    OCG_RUBY_SOURCE,\n    OCG_KEYWORD_SOURCE,\n    ocgKeywordDataMap,\n    WHOLE_WORD_SOURCE,\n    NOT_END_OF_LINE_SOURCE,\n    NOT_START_OF_LINE_SOURCE,\n    NOT_SPLIT_SOURCE,\n    OCG_BULLET_SOURCE,\n    tcgToOCGLetterMap,\n    ocgToTCGLetterMap,\n    UNCOMPRESSED_SOURCE,\n    ocgNumberCircleMap,\n    NB_WORD_OPEN,\n    NB_WORD_CLOSE,\n    FLAVOR_CONDITION_SOURCE,\n    NB_UNCOMPRESSED_START,\n    NB_UNCOMPRESSED_END,\n    contextualDoubleQuoteRegex\n} from 'src/model';\n\nexport const splitEffect = (effect: string, isNormal = false) => {\n    let effectText = effect;\n\n    let fullLineList = [];\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\n    let materialReplacement;\n    let material;\n    do {\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\n        material = wholeLineRegex.exec(effectText)?.[2];\n\n        if (material && materialReplacement) {\n            fullLineList.push(material);\n            effectText = effectText.replace(materialReplacement, '');\n        }\n    } while (materialReplacement && material);\n\n    let effectFlavorCondition = '';\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\n    if (potentialFlavorConditionText && isNormal) {\n        effectFlavorCondition = potentialFlavorConditionText.trim();\n        effectText = effectText.replace(potentialFlavorConditionText, '');\n    } else effectFlavorCondition = '';\n\n    return {\n        fullLineList,\n        effectText,\n        effectFlavorCondition,\n    };\n};\n\nexport const normalizeCardText = (\n    text: string,\n    format: string,\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\n) => {\n    const {\n        multiline = true,\n        furiganaHelper = true,\n        dictionaryType = 'rubyForm',\n    } = option ?? {};\n    const nonNullableText = text ?? '';\n\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\n    let normalizedText = '';\n    let letterSwapMap = format === 'ocg'\n        ? tcgToOCGLetterMap\n        : ocgToTCGLetterMap;\n    for (const letter of nonNullableText) {\n        normalizedText += letterSwapMap[letter] ?? letter;\n    }\n\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\n    const textAfterJoinRow = normalizedText;\n\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\n    const textAfterSplitBlockRow = multiline\n        ? textAfterJoinRow\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\n        : textAfterJoinRow;\n\n    /** Various contextual swaps */\n    const textAfterSwapLetter = textAfterSplitBlockRow\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\n\n            return correspondingCircleSymbol ?? m;\n        });\n\n    const textAfterDetectBlockWord = textAfterSwapLetter\n        /** Convert non-compressable syntax into internal control characters */\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\n        /** Convert ruby syntax into internal control characters */\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Apply dictionary */\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\n        ? textAfterDetectBlockWord\n        : textAfterDetectBlockWord\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\n\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\n            });\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\n    */\n    const textAfterProcessing = textAfterDictionaryMatch\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\n\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\n     * * `((()))` => `()`\n     * * `(()())` => `()`\n     * * `((()()))` => `()`\n     * * `()()()` => `()()()`\n     */\n    let textAfterNormalizeBlockWord = [];\n    let currentDepth = 0;\n    for (const letter of textAfterProcessing) {\n        if (letter === NB_WORD_OPEN) {\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n            currentDepth += 1;\n        } else if (letter === NB_WORD_CLOSE) {\n            currentDepth -= 1;\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\n        } else textAfterNormalizeBlockWord.push(letter);\n    }\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\n    const finalizedText = textAfterNormalizeBlockWord.join('')\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\n\n    return finalizedText;\n};","import { CanvasTextStyle } from 'src/service';\nimport {\n    CanvasConst,\n    CondenseType,\n    EffectFontData,\n    CoordinateData,\n    EffectCoordinateData,\n    CondenseTolerantMap,\n    FontData,\n    TCGVanillaTypeStatFontList,\n    DefaultTCGNormalFontData,\n} from '../../model';\nimport { condense, createFontGetter } from '../../util';\nimport { setTextStyle } from '../canvas-util';\nimport { createLineList } from '../line';\nimport { drawLine } from '../text';\nimport { analyzeLine } from '../text-analyze';\nimport { normalizeCardText, splitEffect } from '../text-normalize';\nimport { tokenizeText } from '../text-util';\n\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\nexport const getEffectFontAndCoordinate = ({\n    format,\n    isNormal,\n    statInEffect,\n    typeInEffect,\n}: {\n    format: string,\n    statInEffect: boolean,\n    typeInEffect: boolean,\n    isNormal: boolean,\n}) => {\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\n        .filter(entry => entry !== '').join('-');\n\n    let fontData = EffectFontData[fontDataKey];\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\n        fontData = DefaultTCGNormalFontData;\n        fontData.fontList = TCGVanillaTypeStatFontList;\n    }\n\n    return {\n        fontDataKey,\n        fontData,\n        sizeList: EffectCoordinateData[coordinateKey],\n    };\n};\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\nexport const drawEffect = ({\n    ctx,\n    content,\n    isNormal = false,\n    fontData = EffectFontData.tcg,\n    textStyle,\n    sizeList = EffectCoordinateData['tcg-type'],\n    condenseTolerant = 'strict',\n    format,\n    furiganaHelper,\n    option,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    content: string,\n    isNormal?: boolean,\n    fontData?: FontData,\n    textStyle?: CanvasTextStyle,\n    sizeList?: CoordinateData[],\n    condenseTolerant?: CondenseType,\n    format: string,\n    furiganaHelper: boolean,\n    option?: {\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\n        forceRelaxCondenseLimit?: number,\n        defaultSizeLevel?: number,\n    },\n}) => {\n    const {\n        defaultSizeLevel,\n        forceRelaxCondenseLimit,\n    } = option ?? {};\n    let effectSizeLevel = defaultSizeLevel ?? 0;\n    if (!ctx || !content) return effectSizeLevel;\n\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\n    const {\n        effectText,\n        effectFlavorCondition,\n        fullLineList,\n    } = splitEffect(normalizedContent, isNormal);\n\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\n    const paragraphList = effectText ? effectText.split('\\n') : [];\n\n    const { font, fontList } = fontData;\n    const yRatio = 1;\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\n                ? CondenseTolerantMap['relaxed']\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\n            : {\n                '1': 800,\n                '2': 800,\n                '3': 800,\n            };\n        const fontSizeData = fontList[effectSizeLevel];\n        const {\n            fontSize,\n            lineHeight,\n            lineCount,\n        } = fontSizeData;\n        const {\n            trueEdge,\n            trueWidth: trueWidthStart,\n            trueBaseline: trueBaselineStart,\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\n\n        const currentFont = createFontGetter();\n        ctx.font = currentFont\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\n            .setWeight(format === 'tcg' ? '' : '')\n            .setSize(fontSize)\n            .setFamily(font)\n            .getFont();\n        ctx.textAlign = 'left';\n        const textData = {\n            fontData,\n            fontLevel: effectSizeLevel,\n            currentFont,\n        };\n        // [CREATE SENTENCE ON EACH LINE]\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\n\n        // [FIND SUITABLE CONDENSE RATIO]\n        const effectiveMedian = condense(\n            median => {\n                const { currentLineList, currentLineCount } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList,\n                    additionalLineCount,\n                    format, textData,\n                    width,\n                });\n                lineListWithRatio = currentLineList;\n\n                if (currentLineCount > lineCount) return false;\n                return true;\n            },\n            200,\n        );\n\n        // [START DRAWING]\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\n        if (\n            (effectiveMedian < tolerantValue)\n            && (effectSizeLevel < fontList.length - 1)\n        ) {\n            effectSizeLevel += 1;\n        } else {\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\n\n            let trueBaseline = trueBaselineStart + lineHeight;\n            /** Naturally, non-brekable lines have their own condense ratio. */\n            const fullLineListWithRatio = fullLineList.map(line => {\n                return {\n                    line,\n                    isLast: true,\n                    effectiveMedian: condense(\n                        median => {\n                            const { currentLineCount } = createLineList({\n                                ctx,\n                                median,\n                                paragraphList: [line],\n                                format, textData,\n                                width,\n                            });\n    \n                            if (currentLineCount > 1) return false;\n                            return true;\n                        },\n                    )\n                };\n            });\n\n            /** Draw each line based on their token list and corresponding ratio. */\n            [\n                ...fullLineListWithRatio,\n                ...lineListWithRatio,\n            ].forEach(({\n                line,\n                isLast,\n                effectiveMedian,\n            }) => {\n                const xRatio = effectiveMedian / 1000;\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\n\n                ctx.scale(xRatio, yRatio);\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    spaceWidth,\n                    textData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            });\n\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\n            if (effectFlavorCondition.length > 0) {\n                const flavorFontData = EffectFontData.tcg;\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\n                const {\n                    fontSize,\n                    lineHeight,\n                } = flavorFontSizeData;\n                const flavorTextCurrentFont = createFontGetter();\n                ctx.font = flavorTextCurrentFont\n                    .setSize(fontSize)\n                    .setFamily(flavorFontData.font)\n                    .getFont();\n                const flavorTextData = {\n                    fontData: flavorFontData,\n                    fontLevel: effectSizeLevel,\n                    currentFont: flavorTextCurrentFont,\n                };\n                const internalEffectiveMedian = condense(\n                    median => {\n                        const { currentLineCount } = createLineList({\n                            ctx,\n                            median,\n                            paragraphList: [effectFlavorCondition],\n                            format, textData: flavorTextData,\n                            width,\n                        });\n\n                        if (currentLineCount > 1) return false;\n                        return true;\n                    },\n                );\n                const xRatio = internalEffectiveMedian / 1000;\n\n                ctx.scale(xRatio, yRatio);\n                const tokenList = tokenizeText(effectFlavorCondition);\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\n                 * \n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\n                 * \n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\n                 * */\n                drawLine({\n                    ctx,\n                    tokenList,\n                    xRatio, yRatio,\n                    trueEdge, trueBaseline,\n                    textData: flavorTextData,\n                    format,\n                });\n                trueBaseline += lineHeight;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n            }\n            break;\n        }\n        resetStyle();\n    }\n\n    return effectSizeLevel;\n};","\nimport { CanvasConst, NO_STICKER } from 'src/model';\nimport { drawAsset, drawWithStyle } from '../image';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: CanvasWidth,\n} = CanvasConst;\n\nexport const drawStarContent = async ({\n    ctx,\n    cardIcon,\n    text,\n    star,\n    starAlignment = 'auto',\n    style,\n    onStarDraw,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    cardIcon: string,\n    text: string | null,\n    star: string | number,\n    starAlignment: string,\n    style?: CanvasTextStyle,\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\n}) => {\n    const starWidth = 50;\n    const startSpacing = 4;\n    let normalizedStarCount = typeof star === 'string'\n        ? star === '' ? 0 : 1\n        : typeof star === 'number' ? star : 0;\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\n    const baseline = 145;\n\n    let alignment = 'right';\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\n    alignment = starAlignment === 'auto'\n        ? alignment\n        : starAlignment;\n    if (normalizedStarCount > 12) alignment = 'center';\n\n    if (text && alignment === 'center') {\n        normalizedStarCount = 0;\n        totalWidth = 0;\n    }\n\n    /** Level / Rank 13 is center-aligned. */\n    const leftEdge = alignment === 'center'\n        ? (CanvasWidth + totalWidth) / 2\n        : alignment === 'left'\n            ? 85.9125 + totalWidth\n            : 728.775;\n\n    let offset = 0 - (starWidth + startSpacing);\n\n    if (ctx && text && cardIcon !== 'st') {\n        const fontSize = 50;\n        const resetShadow = setTextStyle({ ctx, ...style });\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\n            ? alignment\n            : 'left';\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\n        const offset = alignment === 'center'\n            ? ctx.measureText(text).width / -2\n            : alignment === 'left'\n                ? startSpacing\n                : (starWidth + startSpacing * 2) * -1;\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\n        ctx.textAlign = 'left';\n        resetShadow();\n    }\n\n    return await Promise.all([...Array(normalizedStarCount)]\n        .map(async () => {\n            offset += (starWidth + startSpacing);\n            let coordinate: [number, number] = [\n                leftEdge - (starWidth + offset),\n                baseline,\n            ];\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\n            return await onStarDraw(coordinate);\n        })\n    );\n};\n\nexport const drawSticker = async ({\n    ctx,\n    sticker,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    sticker: string,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    if (sticker === NO_STICKER) return Promise.resolve();\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\n};\n\n/** Duel terminal mark and Speed card mark. */\nexport const drawPredefinedMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isDuelTerminalCard,\n    isSpeedCard,\n    bordered,\n    textStyle,\n}: {\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isDuelTerminalCard: boolean,\n    isSpeedCard: boolean,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const ctx = canvas?.getContext('2d');\n\n    if (!ctx) return;\n\n    if (isDuelTerminalCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1072, 175, 35]\n            : isLink\n                ? [151, 848, 216, 24]\n                : [80, 843, 270, 30];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n    if (isSpeedCard) {\n        const coordinate: [number, number, number, number] = isPendulum\n            ? [255, 1084, 176.4, 25]\n            : isLink\n                ? [151, 854, 215.6, 22]\n                : [80, 850, 245, 25];\n\n        await drawWithStyle(\n            canvas,\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\n            ...coordinate,\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n        );\n    }\n};\n\nexport const drawLimitedEditionMark = async ({\n    canvas,\n    type,\n    isPendulum,\n    isLink,\n    isLegacyCard,\n    widthOffset,\n    bordered,\n    textStyle,\n}: {\n    ctx: CanvasRenderingContext2D | null | undefined,\n    canvas: HTMLCanvasElement,\n    type: string,\n    isPendulum: boolean,\n    isLink: boolean,\n    isLegacyCard: boolean,\n    /** When the creator text is too long, this mark must be compressed */\n    widthOffset: number,\n    bordered: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\n        ? [145, 1122, 240 - widthOffset, 37]\n        : isLink\n            ? [151, 846, 216, 36]\n            : [80, 843, 240, 40];\n\n    await drawWithStyle(\n        canvas,\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\n        ...coordinate,\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\n    );\n};\n\nexport const drawLinkRatingText = async (\n    canvas: HTMLCanvasElement,\n    linkMap: string[],\n    style: CanvasTextStyle,\n) => {\n    const ctx = canvas.getContext('2d');\n\n    if (!ctx || !Array.isArray(linkMap)) return;\n\n    await drawWithStyle(\n        canvas,\n        'link/link-text.png',\n        600, 1080,\n        120, 30,\n        style,\n    );\n    const resetStyle = setTextStyle({ ctx, ...style });\n    ctx.textAlign = 'right';\n    ctx.scale(1.2, 1);\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.textAlign = 'left';\n    resetStyle();\n};","import {\n    ArrowPositionList,\n    BackgroundType,\n    CanvasConst,\n    CardArtCanvasCoordinateMap,\n    CardOpacity,\n    Foil,\n    getArtCanvasCoordinate,\n    NO_ATTRIBUTE,\n} from 'src/model';\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\nimport { getCardIconFromFrame } from 'src/util';\nimport { drawStarContent } from './with-image';\nimport { CanvasTextStyle } from 'src/service';\n\nconst {\n    width: cardWidth,\n    height: cardHeight,\n    topToPendulumStructure,\n    pendulumStructureHeight,\n    leftToPendulumStructure,\n    effectBoxHeight,\n    effectBoxWidth,\n    leftToEffectBox,\n    topToEffectBox,\n} = CanvasConst;\n/** Various function used to draw the layout of a card is abstracted to this factory. */\nexport const getLayoutDrawFunction = ({\n    canvas,\n    artworkCanvas,\n    backgroundCanvas,\n    format,\n    hasBackground,\n    frame, bottomFrame,\n    backgroundType,\n    cardIcon,\n    attribute,\n    star,\n    foil,\n    pendulumSize,\n    opacity,\n    isLink, isSpeedSkill, isXyz,\n    isPendulum,\n    loopFinish,\n    loopArtFinish,\n}: {\n    canvas: HTMLCanvasElement,\n    artworkCanvas: HTMLCanvasElement | null,\n    backgroundCanvas: HTMLCanvasElement | null,\n    format: string,\n    frame: string, bottomFrame: string,\n    hasBackground: boolean,\n    backgroundType: BackgroundType,\n    cardIcon: string,\n    attribute: string,\n    star: number | string,\n    foil: Foil,\n    pendulumSize: string,\n    opacity: CardOpacity,\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\n    isPendulum: boolean,\n    loopFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n    loopArtFinish: (\n        ctx?: CanvasRenderingContext2D | null,\n        name?: string,\n        caller?: (finishType: string) => Promise<any>,\n    ) => Promise<void>,\n}) => {\n    const ctx = canvas.getContext('2d');\n    const {\n        artBorder: keepArtBorder,\n        nameBorder,\n        body: opacityBody,\n        name: opacityName,\n        pendulum: opacityPendulum,\n        text: opacityText,\n        boundless,\n    } = opacity;\n    const {\n        artX,\n        artY,\n        artFinishX,\n        artFinishY,\n        artWidth,\n    } = getArtCanvasCoordinate(isPendulum, opacity);\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\n    const artBoxY = 170, artBoxX = 60;\n    const effectBoxY = 860, effectBoxX = 35;\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\n\n    const hasFoil = foil !== 'normal';\n    const frameBorderType = isXyz || isSpeedSkill\n        ? frame\n        : 'normal';\n    const nameBorderType = frameBorderType;\n    const applyArtFinish = !boundless && artBorder;\n\n    const resultAPI = {\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\n         * \n         *  * Trying to draw only a portion of the image.\n         *  * The source image has totally different size compare to the destination boundary.\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\n         */\n        calculateCardArtRedrawCoordination(\n            imageCanvas: HTMLCanvasElement,\n            customOpacity?: CardOpacity,\n            extraHeightRatio = 1,\n            customBackgroundType?: BackgroundType,\n        ) {\n            const normalizedOpacity = customOpacity ?? opacity;\n            const {\n                body: bodyOpacity\n            } = normalizedOpacity;\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\n            const imageScaledRatio = artWidth / imageWidth;\n            const sourceOffsetX = bodyOpacity < 100\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\n                : 0;\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\n            const sourceOffsetY = bodyOpacity < 100\n                ? (topToPendulumStructure - artY) / imageScaledRatio\n                : 0;\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\n            const offsetHeight = bodyOpacity < 100\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\n                : 0;\n\n            const destinationX = artX + destinationOffsetX;\n            const destinationY = artY + destinationOffsetY;\n            const destinationWidth = artWidth - destinationOffsetX * 2;\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\n\n            return {\n                imageScaledRatio,\n                sourceOffsetX,\n                sourceOffsetY,\n                destinationOffsetX,\n                destinationOffsetY,\n                offsetHeight,\n                destinationX,\n                destinationY,\n                destinationWidth,\n                destinationHeight,\n            };\n        },\n\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\n        drawFrame: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityBody / 100;\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\n\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\n                if (clonedCanvas && clonedCanvasContext) {\n                    /** Clone background to create a new frame */\n                    clonedCanvas.width = cardWidth;\n                    clonedCanvas.height = cardHeight;\n                    clonedCanvasContext.drawImage(\n                        backgroundCanvas,\n                        0, 0, backgroundWidth, backgroundHeight,\n                        0, 0, cardWidth, cardHeight,\n                    );\n                    /** Clear slot for card art */\n                    clonedCanvasContext.clearRect(\n                        CardArtCanvasCoordinateMap.normal.artX,\n                        CardArtCanvasCoordinateMap.normal.artY,\n                        CardArtCanvasCoordinateMap.normal.artWidth,\n                        CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\n                    );\n                    /** Clear slot for effect box */\n                    clonedCanvasContext.clearRect(\n                        leftToEffectBox,\n                        topToEffectBox,\n                        effectBoxWidth,\n                        effectBoxHeight,\n                    );\n                    ctx.drawImage(\n                        clonedCanvas,\n                        0, 0,\n                        cardWidth, cardHeight,\n                        0, 0,\n                        cardWidth, cardHeight,\n                    );\n                }\n            }\n            ctx.globalAlpha = 1;\n        },\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\n        drawCardArt: () => {\n            if (!artworkCanvas || !ctx) return;\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n            if (imageHeight <= 0) return;\n            ctx.drawImage(\n                artworkCanvas,\n                0, 0,\n                imageWidth, imageHeight,\n                artX, artY,\n                artWidth, artWidth / (imageWidth / imageHeight),\n            );\n        },\n        drawBackground: (\n            boundary?: 'pendulum',\n        ) => {\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\n\n            if (backgroundHeight <= 0) return;\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\n\n                if (backgroundType === 'full') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        { ...opacity, body: 0 },\n                        undefined,\n                        'full',\n                    );\n                } else if (backgroundType === 'fit') {\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\n                        backgroundCanvas,\n                        opacity,\n                        undefined,\n                        'fit',\n                    );\n                }\n\n                const {\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\n                    offsetHeight: backgroundOffsetHeight,\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\n                } = redrawCoordination;\n                ctx.drawImage(\n                    backgroundCanvas,\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\n                    backgroundDestinationX, backgroundDestinationY,\n                    backgroundDestinationWidth, backgroundDestinationHeight,\n                );\n                return;\n            }\n\n            const {\n                artX,\n                artY,\n                artWidth,\n            } = getArtCanvasCoordinate(\n                isPendulum,\n                { ...opacity, boundless: true },\n                backgroundType,\n            );\n            ctx.drawImage(\n                backgroundCanvas,\n                0, 0,\n                backgroundWidth, backgroundHeight,\n                artX, artY,\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\n            );\n        },\n        drawAttribute: async () => {\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\n        },\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n            await drawStarContent({\n                ctx,\n                cardIcon: normalizedCardIcon,\n                text: typeof star === 'string' ? star : null,\n                star,\n                starAlignment,\n                style,\n                onStarDraw: async coordinate => {\n                    return normalizedCardIcon === 'st'\n                        ? Promise.resolve()\n                        : await loopFinish(\n                            ctx,\n                            'star',\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\n                        );\n                },\n            });\n        },\n        drawPendulumScaleIcon: async () => {\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\n        },\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n        drawLinkArrowMap: async (linkMap: string[]) => {\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\n                .map(async entry => {\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\n                    const isActive = linkMap.includes(`${entry}`);\n                    const baseLink = `link/link-inactive-${entry}`;\n                    const activeLink = `link/link-active-${entry}`;\n                    const coordinate = [left, top, width, height] as const;\n\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\n                    if (isActive) {\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\n                    } else return;\n                })\n            );\n        },\n        drawStatBorder: async (style: CanvasTextStyle) => {\n            await drawWithStyle(\n                canvas,\n                'frame/frame-stat-border.png',\n                0, 1070,\n                813, 20,\n                style,\n            );\n        },\n\n        /** @summary BACKGROUND section */\n\n        drawNameBackground: async () => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityName / 100;\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\n            ctx.globalAlpha = 1;\n        },\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\n        drawEffectBackground: async (withPendulum = false) => {\n            if (!ctx) return;\n\n            ctx.globalAlpha = opacityText / 100;\n            await drawAsset(\n                ctx,\n                `background/background-text-${bottomFrame}.png`,\n                backgroundEffectBoxX, backgroundEffectBoxY,\n            );\n            if (withPendulum) {\n                ctx.globalAlpha = opacityPendulum / 100;\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\n            }\n            ctx.globalAlpha = 1;\n        },\n\n        /** @summary BORDER section */\n\n        drawFrameBorder: async () => {\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\n        },\n        drawNameBorder: async () => {\n            return nameBorder\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\n                : Promise.resolve();\n        },\n        drawArtBorder: async () => {\n            if (artBorder) {\n                let artFrameSource = '';\n                if (isXyz || isSpeedSkill) {\n                    artFrameSource = `frame/art-border-${frame}.png`;\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\n                    artFrameSource = 'frame/art-border-special.png';\n                } else {\n                    artFrameSource = 'frame/art-border.png';\n                }\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\n            }\n        },\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\n            await drawAsset(\n                ctx,\n                `frame-pendulum/border-pendulum-${pendulumSize}`\n                + `-${foilType}`\n                + (artBorder ? '' : '-artless')\n                + '.png',\n                30, 185,\n            );\n        },\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\n         * \n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\n        drawEffectBorder: async () => {\n            if (!hasFoil && bottomFrame === 'speed-skill') {\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\n            } else {\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\n            }\n        },\n        drawCardBorder: async () => {\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\n        },\n\n        /** @summary FOIL section */\n\n        drawArtBorderFoil: async () => {\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\n        },\n        drawEffectBorderFoil: async () => {\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\n        },\n        drawLinkMapFoil: async (withBorder = artBorder) => {\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\n        },\n\n        /** @summary FINISH section */\n\n        drawNameFinish: async () => {\n            if (artBorder || nameBorder) await loopFinish(\n                ctx,\n                'name',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\n                },\n            );\n        },\n        drawAttributeFinish: async () => {\n            if (attribute !== NO_ATTRIBUTE) {\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\n            }\n        },\n        drawArtFinish: async () => {\n            if (applyArtFinish) await loopArtFinish(\n                ctx,\n                'art',\n                async finishType => await drawAsset(\n                    ctx,\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\n                    artFinishX, artFinishY,\n                ),\n            );\n        },\n        /**\n         * * ArtFinish: Controlled by `artFinish` attribute.\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\n         * \n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\n         */\n        drawArtOverlayFinish: async () => {\n            await loopFinish(\n                ctx,\n                'art-overlay',\n                async type => {\n                    return drawAsset(\n                        ctx,\n                        'finish/finish'\n                        + `-${type}`\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\n                        + '-overlay'\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\n                        + '.png',\n                        artFinishX, artFinishY,\n                    );\n                },\n            );\n        },\n        drawArtBorderFinish: async () => {\n            if (artBorder) {\n                await loopFinish(\n                    ctx,\n                    'art-border',\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\n                );\n            }\n        },\n        drawPendulumArtBorderFinish: async () => {\n            if (artBorder) await loopFinish(\n                ctx,\n                'art-border-pendulum',\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawBorderPendulumFinish: async () => {\n            await loopFinish(\n                ctx,\n                'border-pendulum',\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\n            );\n        },\n        drawFrameFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        drawFrameBackgroundFinish: async () => {\n            await loopFinish(\n                ctx,\n                'frame-background',\n                async type => {\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\n                },\n            );\n        },\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\n        drawOverlayFinish: async () => {\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\n        },\n        drawCardBorderFinish: async () => {\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\n        },\n    };\n\n    return resultAPI;\n};","import {\n    DefaultFontSizeData,\n    NormalizeTextRegex,\n    NameFontDataMap,\n    NameStyle,\n    PatternMap,\n    TCG_LETTER_JOINLIST,\n    getDefaultNameStyle,\n} from 'src/model';\nimport { parsePalette, createFontGetter, condense } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAsset, drawAssetWithSize } from '../image';\n\nconst getNameGradient = (\n    ctx: CanvasRenderingContext2D,\n    angleAsDegree: number,\n    colorStopList: { offset: string, color: string }[],\n    edge: number,\n    contentWidth: number,\n    baseline: number,\n    maxAscent: number,\n    maxDescent: number,\n) => {\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\n     * \n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\n    const baseKAF = angleAsDegree % 360;\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\n    const KAF = baseKAF % 90;\n    const originWidth = contentWidth;\n    const originHeight = maxAscent + maxDescent;\n    // Testing only\n    // const originWidth = 16;\n    // const originHeight = 8;\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\n    const cx = edge + originWidth / 2;\n    const cy = baseline + (maxDescent - maxAscent) / 2;\n\n    let width = originWidth, height = originHeight;\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\n\n    /**\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\n     * \n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\n     */\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\n    if (AD > 0) {\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\n        const DAF = KAD - KAF;\n        const FDA = 90 - DAF;\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\n        let offsetX = AL;\n        let offsetY = FL;\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\n\n        const topX = cx + offsetX;\n        const topY = cy - offsetY;\n        const botX = cx - offsetX;\n        const botY = cy + offsetY;\n        // console.info('metric', {\n        //     quarterSlot, baseKAF,\n        //     '\\n', width, height, cx, cy,\n        //     '\\n', KAF, KAD, DAF, FDA,\n        //     '\\n', AD, AF, AL, FL,\n        //     '\\n', maxAscent, maxDescent, baseline,\n        //     '\\n', topX, topY, botX, botY,\n        // });\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\n\n        return gradient;\n    }\n    return undefined;\n};\n\n/**\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\n */\nexport const drawName = async (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    trueBaseline: number,\n    width: number,\n    style: Partial<NameStyle>,\n    option: {\n        frame: string,\n        cloneNode: HTMLCanvasElement | null | undefined,\n        format: string,\n        isSpeedSkill?: boolean,\n        furiganaHelper: boolean,\n    },\n) => {\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\n    const cloneCtx = cloneNode?.getContext('2d');\n    if (ctx && cloneCtx && value) {\n        const {\n            font,\n            fillStyle,\n            headTextFillStyle,\n            shadowBlur,\n            hasShadow,\n            shadowColor,\n            shadowOffsetX,\n            shadowOffsetY,\n            hasOutline: hasDefaultOutline,\n            lineColor,\n            lineWidth,\n            lineOffsetX,\n            lineOffsetY,\n            hasGradient,\n            gradientAngle,\n            gradientColor,\n            pattern,\n        } = { ...getDefaultNameStyle(), ...style };\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\n        const hasOutline = hasDefaultOutline;\n\n        ctx.textAlign = 'left';\n        if (hasShadow) {\n            ctx.shadowColor = shadowColor;\n            ctx.shadowOffsetY = shadowOffsetY;\n            ctx.shadowOffsetX = shadowOffsetX;\n            ctx.shadowBlur = shadowBlur;\n        }\n        if (hasDefaultOutline) {\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = lineColor;\n        }\n        const fontData = {\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\n            headTextFillStyle,\n        };\n        const fontGetter = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const textData = {\n            fontLevel: 0,\n            fontData,\n            currentFont: fontGetter,\n        };\n        const quoteConvertedValue = normalizeCardText(\n            value,\n            format,\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\n        );\n\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\n        const crudeTokenList = format === 'ocg'\n            ? [quoteConvertedValue]\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\n        const fontGetterForWidthCalculating = createFontGetter({\n            defaultFamily: fontData.font,\n            defaultSize: fontData.fontList[0].fontSize,\n            defaultWeight: fontData.weight,\n        });\n        const normalStyle = fontGetterForWidthCalculating.getFont();\n        const symbolStyle = fontGetterForWidthCalculating\n            .setSize(cur => cur * fontData.symbolFontRatio)\n            .setStyle('small-caps')\n            .setFamily(fontData.symbolFont)\n            .getFont();\n        let maxAscent = 0;\n        let maxDescent = 0;\n        crudeTokenList.forEach((cur, index) => {\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\n\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\n        }, 0);\n\n        ctx.font = normalStyle;\n        /** Calculate fitting ratio like normal */\n        let actualLineWidth = 0;\n        const internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [quoteConvertedValue],\n                    format, textData,\n                    width,\n                });\n\n                if (currentLineCount > 1) return false;\n                actualLineWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n        const xRatio = internalEffectiveMedian / 1000;\n        const yRatio = 1;\n\n        ctx.scale(xRatio, yRatio);\n\n        /** Calculate gradient and offset based on card's frame. */\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\n        const tokenList = tokenizeText(quoteConvertedValue);\n        const gradient = actualLineWidth > 0 && hasGradient\n            ? getNameGradient(\n                ctx,\n                gradientAngle,\n                parsePalette(gradientColor),\n                edge,\n                actualLineWidth,\n                trueBaseline,\n                maxAscent, maxDescent,\n            )\n            : undefined;\n\n\n        /** First iteration: Draw the card name with color, shadow and gradient */\n        ctx.fillStyle = gradient ?? fillStyle;\n        drawLine({\n            ctx,\n            tokenList,\n            xRatio, yRatio,\n            trueEdge: edge, trueBaseline,\n            textData,\n            format,\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\n            },\n        });\n\n        /** Second iteration, draw pattern, we follow these steps:\n         *  * We create a second, temporary canvas node.\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\n         */\n        if (patternImage && cloneNode) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\n            cloneCtx.globalCompositeOperation = patternBlendMode;\n            await drawAssetWithSize(\n                cloneCtx, `finish-name/${patternImage}.png`,\n                edge, trueBaseline - maxAscent,\n                width,\n                maxAscent + maxDescent,\n            );\n            ctx.globalCompositeOperation = 'source-in';\n            ctx.drawImage(cloneNode, 0, 0);\n            ctx.scale(xRatio, yRatio);\n            ctx.globalCompositeOperation = 'source-over';\n\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\n             * \n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\n             */\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: () => {},\n            });\n        }\n\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\n        if (hasOutline) {\n            ctx.globalCompositeOperation = 'destination-over';\n            drawLine({\n                ctx,\n                tokenList,\n                xRatio, yRatio,\n                trueEdge: edge, trueBaseline,\n                textData,\n                format,\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n                    ctx.lineJoin = 'round';\n                    ctx.strokeText(\n                        letter,\n                        scaledEdge + lineOffsetX,\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\n                    );\n                },\n            });\n        }\n        ctx.globalCompositeOperation = 'source-over';\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n        const defaultTextStyle = getDefaultNameStyle();\n        ctx.fillStyle = defaultTextStyle.fillStyle;\n        ctx.shadowColor = defaultTextStyle.shadowColor;\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\n        ctx.lineWidth = defaultTextStyle.lineWidth;\n        ctx.strokeStyle = defaultTextStyle.lineColor;\n        ctx.lineJoin = 'miter';\n        ctx.globalCompositeOperation = 'source-over';\n    }\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { drawAssetWithSize } from '../image';\nimport { CanvasTextStyle } from 'src/service';\n\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\nconst sizeMap: Record<string, number> = {\n    small: 0,\n    medium: 1,\n    large: 2,\n};\nexport const drawTypeAbilityText = ({\n    ctx,\n    value,\n    format,\n    metricMethod,\n    size,\n    furiganaHelper,\n}: {\n    ctx: CanvasRenderingContext2D,\n    value: string,\n    format: string,\n    metricMethod?: FontData['metricMethod'],\n    size: 'small' | 'medium' | 'large',\n    furiganaHelper: boolean,\n}) => {\n    const {\n        edgeAlignment = 'left',\n        trueEdge,\n        trueBaseline,\n        trueWidth: width,\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\n    const fontData = getTypeAbilityFontData()[format];\n    if (metricMethod) fontData.metricMethod = metricMethod;\n    const { font } = fontData;\n    const fontLevel = sizeMap[size];\n    const fontSizeData = fontData.fontList[fontLevel];\n    const fontGetter = createFontGetter({\n        defaultFamily: font,\n        defaultSize: `${fontSizeData.fontSize}px`,\n    });\n    const textData = {\n        fontLevel,\n        fontData,\n        currentFont: fontGetter,\n    };\n    let actualLineWidth = 0;\n\n    ctx.font = fontGetter.getFont();\n    ctx.textAlign = 'left';\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\n    const internalEffectiveMedian = condense(\n        median => {\n            const { currentLineCount, currentLineList } = createLineList({\n                ctx,\n                median,\n                paragraphList: [normalizedText],\n                format, textData,\n                width,\n            });\n    \n            if (currentLineCount > 1) return false;\n            actualLineWidth = currentLineList[0].actualLineWidth;\n            return true;\n        },\n    );\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n\n    return {\n        ...result,\n        xRatio,\n    };\n};\n\nexport const drawTypeAbility = async ({\n    ctx,\n    typeAbility,\n    subFamily,\n    format,\n    frame,\n    size,\n    isMonster,\n    textStyle,\n    furiganaHelper,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    typeAbility: string,\n    subFamily: string,\n    format: string,\n    frame: string,\n    size: 'small' | 'medium' | 'large',\n    isMonster: boolean,\n    textStyle: CanvasTextStyle,\n    furiganaHelper: boolean,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const willDrawTypeAbility = typeAbility.length > 0;\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\n    const typeAbilityWithIcon = typeAbility\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\n    const normalizedTypeAbilityText = willDrawTypeAbility\n        ? format === 'tcg'\n            ? size === 'large'\n                ? `[  ${typeAbilityWithIcon}  ]`\n                : `[${typeAbilityWithIcon}]`\n            : `【${typeAbilityWithIcon}】`\n        : '';\n    if (!willDrawTypeAbility) return;\n\n    /** Special treatment for speed skill */\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\n        ? '#ffffff'\n        : '#000000';\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\n        ctx,\n        format,\n        size,\n        value: normalizedTypeAbilityText,\n        metricMethod: !isMonster ? 'compact' : undefined,\n        furiganaHelper,\n    });\n    resetStyle();\n\n    let offsetY = format === 'ocg' ? -4 : 0;\n    let offsetX = format === 'ocg' ? -3 : 0;\n\n    if (willDrawIcon) {\n        const { edge, baseline } = iconPositionList[0];\n        await drawAssetWithSize(\n            ctx,\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\n            image => image.naturalWidth,\n            image => image.naturalWidth,\n        );\n    } else {\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\n        //     const iconSize = size * 0.9;\n\n        //     return drawAssetWithSize(\n        //         ctx,\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\n        //         () => edge + size * 0.125,\n        //         baseline - size * 0.850,\n        //         () => iconSize,\n        //         () => iconSize,\n        //     );\n        // }));\n    }\n};","import { CanvasTextStyle } from 'src/service';\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\n\nexport const drawScale = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (ctx && value) {\n        const fontSize = 60.5;\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\n        ctx.textAlign = 'left';\n\n        const digitScaleRatio = 0.65;\n        const digitList = `${value}`.split('');\n        let totalWidth = 0;\n\n        digitList.forEach(digit => {\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n        let accLeft = edge - totalWidth / 2;\n\n        digitList.forEach(digit => {\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\n        });\n    }\n};\n\nexport const draw1stEdition = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    edge = 99,\n    baseline = 1150.93,\n    baselineOffset = 0,\n    option: {\n        stroke?: boolean,\n        textStyle?: CanvasTextStyle,\n    } = {\n        stroke: false,\n    },\n) => {\n    if (!ctx) return;\n\n    const { stroke = false, textStyle } = option ?? {};\n    const resetStyle = setTextStyle({\n        ctx,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n    const superTextOffset = 7.4;\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\n\n    let left = edge;\n    ctx.fillText('1', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText('1', left, baseline);\n    left += ctx.measureText('1').width - 2;\n\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\n    left += ctx.measureText('st').width;\n\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\n    resetStyle();\n};\n\nexport const drawStatText = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx) return;\n\n    ctx.scale(1, 0.98);\n    ctx.font = 'bold 35.73px Matrix-Bold';\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    ctx.scale(1, 1.01);\n    ctx.font = 'bold 34.74px Matrix-Bold';\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n};\n\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\nexport const drawStat = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string | number,\n    edge: number,\n    baseline: number,\n) => {\n    if (!ctx || value == null) return;\n\n    const statWidth = 73.97;\n    if (value === '∞') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 37px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else\n    if (value === '?') {\n        ctx.textAlign = 'right';\n        ctx.font = 'bold 34px matrix';\n        ctx.fillText(value, edge + statWidth, baseline);\n    } else {\n        ctx.textAlign = 'left';\n        const tokenizedText = `${value}`.split('?');\n\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\n            ctx.font = '37px MatrixBoldSmallCaps';\n            let nextWidth = prev + ctx.measureText(curr).width;\n\n            if (index < tokenizedText.length - 1) {\n                ctx.font = '37px matrix';\n                nextWidth += ctx.measureText('?').width;\n            }\n\n            return nextWidth;\n        }, 0);\n\n        if (totalWidth > 0) {\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\n\n            ctx.scale(condenseRatio, 1);\n            tokenizedText.reduce((prev, _, index, arr) => {\n                const curText = arr[arr.length - 1 - index];\n                let nextEdge = prev;\n                ctx.font = '37px MatrixBoldSmallCaps';\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\n\n                if (index < tokenizedText.length - 1) {\n                    ctx.font = 'bold 37px matrix';\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\n                }\n\n                return nextEdge;\n            }, edge + statWidth);\n            ctx.scale(1 / condenseRatio, 1);\n        }\n    }\n};\n\nexport const drawSetId = (\n    ctx: CanvasRenderingContext2D | null | undefined,\n    value: string,\n    option: {\n        isPendulum: boolean,\n        isLink: boolean,\n        withShadow: boolean,\n        format: string,\n        lightFooter: boolean,\n        textStyle?: CanvasTextStyle,\n    }\n) => {\n    if (!ctx) return;\n\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\n    let spacing = 0.125;\n    let offsetY = 0;\n    let xOffset = 0;\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\n    if (format === 'ocg') {\n        spacing = 0.145;\n        offsetY = -1;\n        xOffset = -3;\n    }\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\n        shadowColor: withShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: withShadow && !isPendulum ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    if (isPendulum) {\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\n    } else if (isLink) {\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\n    } else {\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\n    }\n    resetTextStyle();\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\nimport {\n    clearCanvas,\n    draw1stEdition,\n    drawCreatorText,\n    drawEffect,\n    drawName,\n    drawScale,\n    drawStat,\n    drawStatText,\n    drawSetId,\n    drawSticker,\n    getFinishIterator,\n    drawTypeAbility,\n    getEffectFontAndCoordinate,\n    drawAsset,\n    getLayoutDrawFunction,\n    drawLinkRatingText,\n    drawPredefinedMark,\n    setTextStyle,\n    drawPasswordText,\n    drawLimitedEditionMark,\n} from 'src/draw';\nimport {\n    CanvasConst,\n    MasterSeriesCanvas,\n    NO_ATTRIBUTE,\n    getArtCanvasCoordinate,\n    getDefaultCardOpacity,\n    PendulumEffectFontData,\n    PendulumEffectCoordinate,\n    FinishMap,\n    ArtFinishMap,\n    CardOpacity,\n    CardArtCanvasCoordinateMap,\n    DEFAULT_BASE_FILL_COLOR,\n    DEFAULT_EFFECT_NORMAL_SIZE,\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n} from 'src/model';\nimport {\n    checkLightHeader,\n    checkLink,\n    checkMonster,\n    checkNormal,\n    checkSpeedSkill,\n    checkXyz,\n    resolveNameStyle,\n} from 'src/util';\nimport { useCard } from '../use-card';\nimport { prepareStyle } from './prepare-style';\nimport { LanguageDataDictionary } from '../use-i18n';\nimport { notification } from 'antd';\n\nconst {\n    height: CanvasHeight,\n    width: CanvasWidth,\n} = CanvasConst;\ntype DrawerProp = {\n    imageChangeCount: number,\n    pendulumSize?: 'medium',\n    isInitializing: boolean,\n    language: LanguageDataDictionary,\n};\ntype DrawingPipeline = {\n    name: string,\n    order: number,\n    rerun: number,\n    instructor: () => Promise<any>,\n};\n/**\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\n */\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\n    const {\n        card,\n    } = useCard();\n    const {\n        exportCanvasRef,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        creatorCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        passwordCanvasRef,\n        pendulumEffectCanvasRef,\n        pendulumScaleCanvasRef,\n        setIdCanvasRef,\n        statCanvasRef,\n        stickerCanvasRef,\n        cardIconCanvasRef,\n        typeCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    } = canvasMap;\n    const {\n        format,\n        hasBackground, backgroundType,\n        frame, foil, finish, artFinish, opacity,\n        name, nameStyle, nameStyleType,\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\n        effect,\n        effectStyle,\n        typeAbility,\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\n        atk, def, linkMap,\n        attribute,\n        cardIcon, subFamily, star, starAlignment,\n        setId,\n        password, creator, sticker,\n        isLegacyCard,\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\n        furiganaHelper,\n    } = card;\n\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\n        frame: {\n            name: 'frame',\n            order: 1,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        attribute: {\n            name: 'attribute',\n            order: 2,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        sticker: {\n            name: 'sticker',\n            order: 3,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        creator: {\n            name: 'creator',\n            order: 4,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        name: {\n            name: 'name',\n            order: 5,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        typeAbility: {\n            name: 'typeAbility',\n            order: 6,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n        overlay: {\n            name: 'overlay',\n            order: 7,\n            rerun: 0,\n            instructor: () => Promise.resolve(),\n        },\n    });\n\n    const bottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n\n    const condenseTolerant = effectStyle?.condenseTolerant;\n\n    const isNormal = checkNormal(card);\n    const isXyz = checkXyz(card);\n    const isLink = checkLink(card);\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n\n    const { body = 100, boundless } = opacity;\n    const requireShadow = !!(body < 50 || boundless);\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\n    const lightHeader = checkLightHeader(frame);\n    const {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n        resolvedOtherEffectTextStyle,\n    } = useMemo(() => {\n        return prepareStyle({\n            lightFooter,\n            lightHeader,\n            requireShadow,\n            effectTextStyle,\n            pendulumTextStyle,\n            otherTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        });\n    }, [\n        lightFooter,\n        lightHeader,\n        requireShadow,\n        effectTextStyle,\n        pendulumTextStyle,\n        otherTextStyle,\n        statTextStyle,\n        typeTextStyle,\n    ]);\n\n    const normalizedSubFamily = subFamily.toUpperCase();\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const typeInEffect = cardIcon === 'auto'\n        ? isMonster || isSpeedSkill\n        : cardIcon !== 'st' || isLink;\n\n    const {\n        isInitializing,\n        imageChangeCount,\n        pendulumSize = 'medium',\n        language,\n    } = props;\n    const readyToDraw = active && isInitializing === false;\n\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\n\n    /** DRAW CARD STRUCTURE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.frame.rerun += 1;\n        drawingPipeline.current.frame.instructor = async () => {\n            const ctx = frameCanvasRef.current?.getContext('2d');\n            const artworkCanvas = artworkCanvasRef.current;\n            const backgroundCanvas = backgroundCanvasRef.current;\n\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                artBorder: keepArtBorder,\n                body: opacityBody,\n                boundless,\n                baseFill,\n            } = normalizedOpacity;\n\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\n             * * Set default base fill to transparency fix the problem.\n             * \n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\n             */\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\n                return new Promise(resolve => {\n                    setTimeout(() => {\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\n                        ctx.fillRect(x, y, w, h);\n                        resolve(true);\n                    }, 0);\n                });\n            };\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\n\n            /** Base colored background so the card is not see-through even with transparent artwork */\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\n\n            const {\n                drawAttribute,\n                drawBackground,\n                drawCardArt,\n                drawFrame,\n                drawLinkArrowMap,\n                drawPendulumScaleIcon,\n                drawStar,\n\n                drawNameBackground,\n                drawEffectBackground,\n\n                drawFrameBorder,\n                drawNameBorder,\n                drawArtBorder,\n                drawPendulumBorder,\n                drawBorderPendulumFinish,\n                drawEffectBorder,\n                drawCardBorder,\n                drawStatBorder,\n\n                drawAttributeFinish,\n                drawArtBorderFoil,\n                drawEffectBorderFoil,\n                drawLinkMapFoil,\n\n                drawNameFinish,\n                drawArtFinish,\n                drawArtOverlayFinish,\n                drawArtBorderFinish,\n                drawPendulumArtBorderFinish,\n                drawFrameFinish,\n                drawFrameBackgroundFinish,\n                drawOverlayFinish,\n                drawCardBorderFinish,\n\n                calculateCardArtRedrawCoordination,\n            } = getLayoutDrawFunction({\n                canvas: frameCanvasRef.current,\n                artworkCanvas, backgroundCanvas,\n                format,\n                frame, bottomFrame,\n                hasBackground,\n                backgroundType,\n                attribute,\n                cardIcon, star,\n                foil,\n                pendulumSize,\n                opacity: normalizedOpacity,\n                isLink, isSpeedSkill, isXyz,\n                isPendulum,\n                loopFinish,\n                loopArtFinish,\n            });\n\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\n            if (backgroundCanvas && ctx) drawBackground();\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\n            await drawFrame();\n            await drawCardBorder();\n            await drawCardBorderFinish();\n\n            /** @summary Draw NON-PENDULUM card layout */\n            if (!isPendulum) {\n                if (!boundless) {\n                    await drawNameBackground();\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\n                    await drawEffectBorderFoil();\n                }\n                await drawArtBorder();\n                await drawArtBorderFoil();\n                await drawArtBorderFinish();\n            }\n\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\n            if (isPendulum && !isLink && !boundless) {\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\n                    const {\n                        sourceOffsetX, sourceOffsetY,\n                        offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\n\n                    /** To avoid stacking transprency, we clear the area before redrawing */\n                    await fillBaseColor(\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n\n                    drawBackground('pendulum');\n                    ctx.drawImage(\n                        artworkCanvas,\n                        sourceOffsetX, sourceOffsetY,\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\n                        destinationX, destinationY,\n                        destinationWidth, destinationHeight,\n                    );\n                }\n\n                await drawNameBackground();\n                await drawEffectBackground(true);\n            }\n\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\n            await drawArtFinish();\n            await drawArtOverlayFinish();\n\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\n            if (isPendulum && !isLink && !boundless) {\n                await drawPendulumScaleIcon();\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\n                await drawPendulumBorder(hasArtBorder, 'normal');\n                await drawPendulumBorder(hasArtBorder, foil);\n                await drawPendulumArtBorderFinish();\n                if (hasArtBorder) await drawBorderPendulumFinish();\n            }\n\n            if (!boundless) {\n                await drawFrameFinish();\n                await drawNameFinish();\n            }\n            if (hasArtBorder) await drawFrameBackgroundFinish();\n\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\n            if (boundless) {\n                if (isLink) {\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\n                    await drawArtBorderFinish();\n                } else if (isPendulum) {\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\n                        const {\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        } = calculateCardArtRedrawCoordination(\n                            artworkCanvas,\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\n                            extraHeightRatio,\n                        );\n    \n                        await fillBaseColor(\n                            destinationX, destinationY,\n                            destinationWidth, destinationHeight,\n                        );\n                        drawBackground('pendulum');\n                    }\n                    if (hasArtBorder) {\n                        await drawPendulumBorder(hasArtBorder, 'normal');\n                        await drawPendulumBorder(hasArtBorder, foil);\n                    }\n                    await drawPendulumArtBorderFinish();\n                }\n                await drawNameBackground();\n                await drawNameFinish();\n                await drawNameBorder();\n                if (artworkCanvas && ctx) drawCardArt();\n                await drawArtOverlayFinish();\n\n                /** Redraw various part here because the extended artwork may overlap with those */\n                if (isPendulum && !isLink) {\n                    await drawEffectBackground(true);\n                    await drawPendulumScaleIcon();\n                    await drawPendulumBorder(false, 'normal');\n                    await drawPendulumBorder(false, foil);\n                    await drawBorderPendulumFinish();\n                } else {\n                    await drawEffectBackground();\n                    await drawEffectBorder();\n                    await drawEffectBorderFoil();\n                }\n                await drawFrameFinish();\n            }\n\n            if (statInEffect) await drawStatBorder({\n                color: '#000000',\n                ...resolvedStatTextStyle,\n            });\n\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\n            if (!isPendulum && isLink) {\n                await drawLinkArrowMap(linkMap);\n                await drawLinkMapFoil(false);\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\n                resetStyle();\n            }\n\n            await drawAttribute();\n            await drawAttributeFinish();\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\n            if (!boundless) await drawNameBorder();\n            await drawFrameBorder();\n            await drawPredefinedMark({\n                canvas: frameCanvasRef.current,\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                isDuelTerminalCard, isSpeedCard,\n                isLink, isPendulum,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            await drawOverlayFinish();\n        };\n    }, [\n        readyToDraw,\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        frameCanvasRef,\n        frame,\n        format,\n        hasBackground,\n        backgroundType,\n        attribute,\n        bottomFrame,\n        foil,\n        star,\n        starAlignment,\n        cardIcon,\n        isDuelTerminalCard,\n        isLink,\n        isPendulum,\n        isSpeedCard,\n        isSpeedSkill,\n        isXyz,\n        lightFooter,\n        linkMap,\n        resolvedStatTextStyle,\n        resolvedOtherEffectTextStyle,\n        loopArtFinish,\n        loopFinish,\n        opacity,\n        pendulumSize,\n        statInEffect,\n        levelStyle,\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\n    ]);\n\n    /** DRAW SCALE */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\n        }\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\n\n    /** DRAW NAME */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        drawingPipeline.current.name.rerun += 1;\n        drawingPipeline.current.name.instructor = async () => {\n            const ctx = nameCanvasRef.current?.getContext('2d');\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\n\n            if (!clearCanvas(ctx) || !cloneNode) return;\n\n            await drawName(\n                ctx,\n                name,\n                format === 'tcg' ? 60 : 68, 116,\n                attribute === NO_ATTRIBUTE\n                    ? (format === 'tcg' ? 688 : 674)\n                    : (format === 'tcg' ? 608 : 598),\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\n            );\n        };\n    }, [\n        readyToDraw,\n        attribute,\n        foil,\n        format,\n        frame,\n        furiganaHelper,\n        isSpeedSkill,\n        name,\n        nameCanvasRef,\n        nameStyle,\n        nameStyleType,\n    ]);\n\n    /** DRAW STAT (ATK / DEF) */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = statCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx) || !statInEffect) return;\n\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\n        drawStat(ctx, atk, 508.824, 1106.494);\n        if (!isLink) {\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\n            drawStat(ctx, def, 673.865, 1106.494);\n        }\n        resetStyle();\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\n\n    /** DRAW SET ID */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = setIdCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n\n        drawSetId(\n            ctx,\n            setId,\n            {\n                isLink, isPendulum,\n                withShadow: requireShadow && !isPendulum,\n                format,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            }\n        );\n    }, [\n        readyToDraw,\n        format,\n        isLink,\n        isPendulum,\n        lightFooter,\n        setIdCanvasRef,\n        setId,\n        isSpeedSkill,\n        bottomFrame,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = passwordCanvasRef.current?.getContext('2d');\n        if (!clearCanvas(ctx)) return;\n\n        const endOfPassword = drawPasswordText({\n            ctx,\n            value: password,\n            lightFooter,\n            alignment: 'left',\n            format,\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\n            textStyle: resolvedOtherEffectTextStyle,\n        });\n        if (isFirstEdition) {\n            const left = isLegacyCard && !isPendulum\n                ? isLink ? 151 : 89\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\n            const bottom = isLegacyCard && !isPendulum\n                ? 871\n                : 1150.93;\n            const bottomOffset = isLegacyCard && !isPendulum\n                ? 0\n                : isSpeedSkill ? -2 : -1;\n\n            draw1stEdition(\n                ctx,\n                left,\n                bottom,\n                bottomOffset,\n                {\n                    textStyle: {\n                        color: lightFooter ? '#ffffff' : '#000000',\n                        ...resolvedOtherEffectTextStyle,\n                    }\n                },\n            );\n        }\n    }, [\n        readyToDraw,\n        isFirstEdition,\n        password,\n        passwordCanvasRef,\n        lightFooter,\n        format,\n        requireShadow,\n        isLink,\n        isSpeedSkill,\n        isPendulum,\n        isLegacyCard,\n        bottomFrame,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = creatorCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.creator.rerun += 1;\n        drawingPipeline.current.creator.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\n            const {\n                body: opacityBody,\n                boundless,\n            } = normalizedOpacity;\n            const endOfCreatorText = drawCreatorText({\n                ctx: creatorCanvasRef.current?.getContext('2d'),\n                format,\n                value: creator,\n                alignment: 'right',\n                baselineOffset: isSpeedSkill ? -2 : 0,\n                hasShadow: requireShadow,\n                lightFooter,\n                textStyle: resolvedOtherEffectTextStyle,\n            });\n            const compactThreshold = format === 'tcg' ? 390 : 350;\n            const compactOffset = format === 'tcg' ? 30 : 40;\n\n            if (isLimitedEdition && creatorCanvasRef.current) {\n                await drawLimitedEditionMark({\n                    canvas: creatorCanvasRef.current,\n                    ctx,\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\n                    isLink, isPendulum,\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\n                        ? compactOffset\n                        : 0,\n                    isLegacyCard,\n                    textStyle: resolvedOtherEffectTextStyle,\n                });\n            }\n        };\n    }, [\n        readyToDraw,\n        creator,\n        creatorCanvasRef,\n        effectCanvasRef,\n        format,\n        isLegacyCard,\n        isLimitedEdition,\n        isLink,\n        isPendulum,\n        isSpeedSkill,\n        lightFooter,\n        opacity,\n        requireShadow,\n        resolvedOtherEffectTextStyle,\n    ]);\n\n    /** DRAW STICKER */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        drawingPipeline.current.sticker.rerun += 1;\n        drawingPipeline.current.sticker.instructor = async () => {\n            return await drawSticker({\n                ctx: stickerCanvasRef.current?.getContext('2d'),\n                sticker,\n            });\n        };\n    }, [readyToDraw, sticker, stickerCanvasRef]);\n\n    /** DRAW CARD EFFECT + TYPE ABILITY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n\n        const ctx = effectCanvasRef.current?.getContext('2d');\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.typeAbility.rerun += 1;\n        drawingPipeline.current.typeAbility.instructor = async () => {\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\n\n            const { condenseTolerant, upSize } = effectStyle ?? {};\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\n            const effectIndexSize = drawEffect({\n                ctx,\n                content: effect,\n                isNormal,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                ...getEffectFontAndCoordinate({\n                    format,\n                    statInEffect,\n                    typeInEffect,\n                    isNormal,\n                }),\n                textStyle: resolvedEffectTextStyle,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                },\n            });\n            await drawTypeAbility({\n                ctx: typeCtx,\n                format,\n                frame,\n                furiganaHelper,\n                isMonster,\n                textStyle: resolvedTypeTextStyle,\n                size: !typeInEffect\n                    ? 'large'\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\n                subFamily: normalizedSubFamily,\n                typeAbility: normalizedTypeAbility,\n            });\n        };\n    }, [\n        readyToDraw,\n        typeInEffect,\n        statInEffect,\n        effectStyle,\n        effect,\n        effectTextStyle,\n        effectCanvasRef,\n        format,\n        frame,\n        furiganaHelper,\n        isMonster,\n        isNormal,\n        resolvedTypeTextStyle,\n        resolvedEffectTextStyle,\n        normalizedSubFamily,\n        normalizedTypeAbility,\n        typeCanvasRef,\n    ]);\n\n    /** DRAW PENDULUM EFFECT */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\n\n        if (!clearCanvas(ctx)) return;\n        if (isPendulum) {\n            const { upSize } = pendulumStyle ?? {};\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\n            drawEffect({\n                ctx,\n                content: pendulumEffect,\n                isNormal: false,\n                fontData: PendulumEffectFontData[format],\n                textStyle: resolvedPendulumEffectTextStyle,\n                sizeList: PendulumEffectCoordinate,\n                condenseTolerant,\n                format,\n                furiganaHelper,\n                option: {\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\n                }\n            });\n        }\n    }, [\n        readyToDraw,\n        condenseTolerant,\n        format,\n        isPendulum,\n        pendulumEffectCanvasRef,\n        pendulumEffect,\n        pendulumStyle,\n        pendulumTextStyle,\n        furiganaHelper,\n        resolvedPendulumEffectTextStyle,\n    ]);\n\n    /** DRAW TOTAL OVERLAY */\n    useEffect(() => {\n        if (!readyToDraw) return;\n        const ctx = finishCanvasRef.current?.getContext('2d');\n\n        drawingPipeline.current.overlay.rerun += 1;\n        drawingPipeline.current.overlay.instructor = async () => {\n            if (!clearCanvas(ctx)) return;\n            await loopFinish(\n                ctx,\n                'total-overlay',\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\n            );\n        };\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\n\n    const drawHistory = useRef<Record<string, number>>({});\n    const onExport = useCallback(async (exportProps: {\n        isPendulum: boolean,\n        opacity: Partial<CardOpacity>,\n        // isRelevant: () => boolean,\n    }) => {\n        const {\n            // isRelevant,\n            isPendulum = false,\n            opacity,\n        } = exportProps;\n        const exportCanvas = exportCanvasRef.current;\n        const exportCtx = exportCanvas?.getContext('2d');\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\n        const generateLayer = (\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\n            exportCtx: CanvasRenderingContext2D | null | undefined,\n            delayQueue: number = 0,\n        ) => {\n            return new Promise<boolean>(resolve => {\n                setTimeout(() => {\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\n                    else {\n                        try {\n                            canvasLayer.current.toBlob(blob => {\n                                if (!blob) resolve(false);\n                                else {\n                                    const url = URL.createObjectURL(blob);\n                                    if (!url) resolve(false);\n                                    else {\n                                        const layer = new Image();\n                                        layer.src = url;\n                                        layer.onload = () => {\n                                            exportCtx.drawImage(layer, 0, 0);\n                                            URL.revokeObjectURL(url);\n                                            resolve(true);\n                                        };\n                                        layer.onerror = () => {\n                                            URL.revokeObjectURL(url);\n                                            resolve(false);\n                                        };\n                                    }\n                                }\n                            });\n                        } catch (e) {\n                            /** Draw directly into export canvas, which will tainted the export canvas afterward. */\n                            exportCtx.drawImage(canvasLayer.current, 0, 0);\n                            console.error(e);\n                            resolve(false);\n                        }\n                    }\n                }, delayQueue * 25);\n            });\n        };\n\n        if (exportCanvas && exportCtx) {\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\n            await Promise.all(Object\n                .values(drawingPipeline.current)\n                .sort((l, r) => l.order - r.order)\n                .map(({ instructor, rerun, name }) => {\n                    if (\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\n                        || !drawHistory.current[name]\n                    ) {\n                        drawHistory.current[name] = rerun;\n\n                        return instructor();\n                    }\n                    return Promise.resolve();\n                })).catch(e => {\n                    console.error(e);\n                    /** Ensure it does not fire repeatedly */\n                    const key = 'fail-to-draw-notification';\n                    notification.close(key);\n                    notification.error({\n                        key,\n                        message: language['error.draw.error.message'],\n                        description: language['error.draw.error.description'],\n                    });\n                });\n            // await generateLayer(frameCanvas, exportCtx);\n            const artworkCanvas = artworkCanvasRef.current;\n            if (artworkCanvas && exportCtx) {\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\n\n                if (imageHeight > 0) {\n                    exportCtx.drawImage(\n                        artworkCanvas,\n                        0, 0,\n                        imageWidth, imageHeight,\n                        artX, artY,\n                        artWidth, artWidth / (imageWidth / imageHeight),\n                    );\n                }\n            }\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\n            await generateLayer(frameCanvasRef, exportCtx, 0);\n            await generateLayer(nameCanvasRef, exportCtx, 0);\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\n            await generateLayer(typeCanvasRef, exportCtx, 0);\n            await generateLayer(effectCanvasRef, exportCtx, 0);\n            await generateLayer(statCanvasRef, exportCtx, 0);\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\n            await generateLayer(finishCanvasRef, exportCtx, 0);\n\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\n        }\n    }, [\n        language,\n        artworkCanvasRef, \n        cardIconCanvasRef, \n        creatorCanvasRef, \n        exportCanvasRef, \n        effectCanvasRef, \n        finishCanvasRef, \n        lightboxCanvasRef, \n        nameCanvasRef, \n        passwordCanvasRef, \n        pendulumEffectCanvasRef, \n        pendulumScaleCanvasRef, \n        setIdCanvasRef, \n        frameCanvasRef, \n        statCanvasRef, \n        stickerCanvasRef, \n        typeCanvasRef,\n    ]);\n\n    return {\n        drawingPipeline,\n        onExport,\n    };\n};\n\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\n\nexport type CanvasTextStyle = {\n    x?: number,\n    y?: number,\n    blur?: number,\n    color?: string,\n    shadowColor?: string,\n};\n\nexport const prepareStyle = ({\n    // lightFooter,\n    lightHeader,\n    requireShadow,\n    effectTextStyle,\n    pendulumTextStyle,\n    otherTextStyle,\n    statTextStyle,\n    typeTextStyle,\n}: {\n    requireShadow: boolean,\n    lightHeader: boolean,\n    lightFooter: boolean,\n    effectTextStyle: TextStyle,\n    pendulumTextStyle: TextStyle,\n    otherTextStyle: TextStyle,\n    statTextStyle: TextStyle,\n    typeTextStyle: TextStyle,\n}) => {\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\n    const levelStyle = requireShadow\n        ? {\n            blur: 2,\n            y: 1,\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\n            ...levelColor,\n        }\n        : levelColor;\n\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\n        ? {\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\n            color: effectTextFillStyle,\n        }\n        : {};\n\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\n        ? {\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\n            color: pendulumEffectTextFillStyle,\n        }\n        : {};\n\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\n        ? {\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\n            color: typeTextFillStyle,\n        }\n        : {};\n\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\n        ? {\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\n            color: statTextFillStyle,\n        }\n        : {};\n\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\n        ? {\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\n            color: otherEffectTextFillStyle,\n        }\n        : {};\n\n    return {\n        levelStyle,\n        resolvedEffectTextStyle,\n        resolvedOtherEffectTextStyle,\n        resolvedPendulumEffectTextStyle,\n        resolvedStatTextStyle,\n        resolvedTypeTextStyle,\n    };\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawPasswordText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return 0;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        x: 0,\n        y: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\n    const isNumberPassword = /^[0-9]*$/.test(value);\n    const fontData = PasswordFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: !isNumberPassword ? 1 : 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return result.tokenEdge;\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\nimport { condense, createFontGetter } from 'src/util';\nimport { tokenizeText } from '../text-util';\nimport { drawLine } from '../text';\nimport { createLineList } from '../line';\nimport { normalizeCardText } from '../text-normalize';\nimport { clearCanvas, setTextStyle } from '../canvas-util';\nimport { CanvasTextStyle } from 'src/service';\n\nexport const drawCreatorText = ({\n    ctx,\n    value,\n    format,\n    alignment,\n    baselineOffset = 0,\n    lightFooter,\n    hasShadow,\n    textStyle,\n}: {\n    ctx?: CanvasRenderingContext2D | null,\n    value: string,\n    format: string,\n    alignment: 'left' | 'right',\n    baselineOffset?: number,\n    lightFooter: boolean,\n    hasShadow?: boolean,\n    textStyle?: CanvasTextStyle,\n}) => {\n    if (!clearCanvas(ctx)) return;\n\n    const resetTextStyle = setTextStyle({\n        ctx,\n        color: lightFooter ? '#ffffff' : '#000000',\n        shadowColor: hasShadow\n            ? lightFooter ? '#000000' : '#ffffff'\n            : '#000000',\n        y: 0,\n        x: 0,\n        blur: hasShadow ? 3 : 0,\n        ...textStyle,\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\n    });\n\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\n    const fontData = CreatorFontData[format];\n    const { font } = fontData;\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\n\n    /** Calculation */\n    let textData = {\n        fontLevel: 0,\n        fontData,\n        currentFont: createFontGetter(),\n    };\n    let actualLineWidth = 0;\n    let internalEffectiveMedian = 1000;\n    let fontSizeData = fontData.fontList[0];\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\n        fontSizeData = fontData.fontList[fontLevel];\n        const fontGetter = createFontGetter({\n            defaultFamily: font,\n            defaultSize: `${fontSizeData.fontSize}px`,\n            defaultWeight: hasShadow ? 'bold' : '',\n        });\n        let internalTextData = {\n            fontLevel,\n            fontData,\n            currentFont: fontGetter,\n        };\n        let internalTrueWidth = 0;\n        ctx.font = fontGetter.getFont();\n        ctx.textAlign = 'left';\n        internalEffectiveMedian = condense(\n            median => {\n                const { currentLineCount, currentLineList } = createLineList({\n                    ctx,\n                    median,\n                    paragraphList: [normalizedText],\n                    format, textData: internalTextData,\n                    width,\n                });\n        \n                if (currentLineCount > 1) return false;\n                internalTrueWidth = currentLineList[0].actualLineWidth;\n                return true;\n            },\n        );\n\n        actualLineWidth = internalTrueWidth;\n        textData = internalTextData;\n        if (internalEffectiveMedian >= 1000) break;\n    }\n\n    /** Drawing */\n    const xRatio = internalEffectiveMedian / 1000;\n    const yRatio = 1;\n    ctx.scale(xRatio, yRatio);\n    const result = drawLine({\n        ctx,\n        tokenList: tokenizeText(normalizedText),\n        xRatio, yRatio,\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\n        textData,\n        format,\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\n        },\n    });\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\n    resetTextStyle();\n\n    return {\n        /** End edge is alignment insensitive */\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\n        ...result,\n    };\n};","import { Modal, notification, Tooltip } from 'antd';\nimport { StyledActionIconButton } from './styled';\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { useState } from 'react';\nimport {\n    downloadBlob,\n    checkYgoCarderCard,\n    mergeClass,\n    ygoCarderToCardMakerData,\n    compressCardData,\n    checkCompactYgoCarderCard,\n} from 'src/util';\nimport JSZip from 'jszip';\n\nconst StyledBatchConverterModal = styled(Modal)`\n    .controller {\n        display: flex;\n        gap: var(--spacing);\n        align-items: center;\n        label {\n            background: var(--main-level-4);\n            border: var(--bw) solid var(--sub-level-4);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br);\n        }\n        .toggle-button {\n            padding: 0;\n            /** Alignemnt */\n            width: 26px;\n            height: 26px;\n            background-color: var(--main-primary);\n            border: var(--bw) solid var(--sub-primary);\n            border-radius: var(--br);\n            box-shadow: var(--bs-block);\n            cursor: pointer;\n            transform: rotate(0deg);\n            transition: transform 0.33s ease-in-out;\n            &.reverse{\n                transform: rotate(-180deg);\n                transition: transform 0.33s ease-in-out;\n            }\n            &:hover {\n                background-color: var(--sub-primary);\n            }\n        }\n    }\n    .announce {\n        text-align: center;\n        .warning {\n            color: var(--main-danger);\n        }\n        .in-progress {\n            color: var(--main-info);\n        }\n    }\n    .file-panel {\n        margin-top: var(--spacing);\n        input {\n            width: 100%;\n            background: var(--main-level-4);\n            padding: var(--spacing-xs);\n            border-radius: var(--br);\n            cursor: pointer;\n            margin-bottom: var(--spacing-sm);\n        }\n        .file-list {\n            margin-top: var(--spacing-sm);\n            &:empty {\n                margin-top: 0;\n            }\n        }\n        .file-entry {\n            display: grid;\n            grid-template-columns: 1fr max-content;\n            gap: var(--spacing-xs);\n            background-color: var(--main-level-1);\n            border: 1px solid var(--sub-level-3);\n            padding: 0 var(--spacing-xs);\n            border-radius: var(--br-lg);\n            + .file-entry {\n                margin-top: var(--spacing-xxs);\n            }\n            .file-action {\n                .anticon:hover {\n                    color: var(--sub-danger);\n                }\n            }\n        }\n    }\n`;\n\nexport type BatchConverter = {\n    language: LanguageDataDictionary,\n}\nexport const BatchConverter = ({\n    language,\n}: BatchConverter) => {\n    const fileLimit = 50;\n    const [visible, setVisible] = useState(false);\n    const [isRunning, setRunning] = useState(false);\n    const [isReverse, setReverse] = useState(false);\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\n    const isExceedMaxAmount = fileList.length > fileLimit;\n\n    return <>\n        <StyledBatchConverterModal\n            visible={visible}\n            title={language['converter.header.label']}\n            okButtonProps={{\n                disabled: isExceedMaxAmount || isRunning,\n            }}\n            okText={language['converter.ok.label']}\n            cancelText={language['converter.cancel.label']}\n            onCancel={() => setVisible(false)}\n            onOk={async () => {\n                try {\n                    setRunning(true);\n                    /** Convert here */\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\n                            const reader = new FileReader();\n                            reader.onload = ({ target }) => {\n                                if (!target) {\n                                    reject('Not a valid target');\n                                    return;\n                                }\n\n                                const { result } = target;\n                                if (typeof result !== 'string') {\n                                    reject('Not a valid result');\n                                    return;\n                                }\n\n                                let resultObject = JSON.parse(result);\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\n                                if (checkYgoCarderCard(resultObject)) {\n                                    resultObject = compressCardData(resultObject);\n                                }\n\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\n                                let convertedCard: Record<string, any> | null = null;\n                                if (isReverse) {\n                                    /** Ygocarder into other vendor */\n                                    convertedCard = isYgoCarderCard\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\n                                        : resultObject;\n                                } else {\n                                    /** Other vendor into ygocarder */\n                                    convertedCard = isYgoCarderCard\n                                        ? resultObject\n                                        : compressCardData(decodeCard(resultObject).card);\n                                }\n\n                                if (!convertedCard) {\n                                    reject('Not a valid converted result');\n                                    return;\n                                }\n                                const blob = new Blob(\n                                    [`${JSON.stringify(convertedCard)}`],\n                                    { type: 'application/json' },\n                                );\n                                resolve({ blob, name });\n                            };\n                            reader.readAsText(file);\n                        });\n                    }));\n\n                    const zipObject = new JSZip();\n                    convertedFileList.forEach(({ blob, name }) => {\n                        zipObject.file(name, blob);\n                    });\n                    const zipBlob = await zipObject.generateAsync({\n                        type: 'blob',\n                    });\n                    downloadBlob(\n                        'convert-result.zip',\n                        zipBlob,\n                        'application/zip',\n                    );\n                    setRunning(false);\n                    setVisible(false);\n                } catch (e) {\n                    console.error(e);\n                    notification.error({\n                        message: language['error.convert.message'],\n                        description: language['error.convert.description'],\n                    });\n                    setRunning(false);\n                }\n            }}\n        >\n            <div className=\"controller\">\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\n                <div>\n                    <button\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\n                        onClick={() => setReverse(cur => !cur)}\n                    >\n                        <ArrowRightOutlined />\n                    </button>\n                </div>\n                <label>Yugioh Carder</label>\n            </div>\n            <div className=\"file-panel\">\n                <input\n                    type=\"file\"\n                    accept=\"application/json\"\n                    multiple\n                    onChange={e => {\n                        const fileFromInput = e.target.files;\n\n                        if (fileFromInput) {\n                            const nextFileList: { file: File, name: string }[] = [];\n\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\n                                const targetFile = fileFromInput.item(cnt);\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\n                            }\n\n                            setFileList(nextFileList);\n                        }\n                    }}\n                />\n                <div className=\"announce\">\n                    {language['converter.header.information.label']}\n                    {isRunning && <div className=\"in-progress\">\n                        {language['converter.header.in-progress.label']}\n                    </div>}\n                    {isExceedMaxAmount && <div className=\"warning\">\n                        {language['converter.header.warning.label'](fileLimit)}\n                    </div>}\n                </div>\n                <div className=\"file-list\">\n                    {fileList.map(({ name }) => {\n                        return <div key={name} className=\"file-entry\">\n                            <div>{name}</div>\n                            <div className=\"file-action\">\n                                <CloseOutlined\n                                    disabled={isRunning}\n                                    onClick={() => setFileList(curList => {\n                                        return curList.filter(entry => entry.name !== name);\n                                    })}\n                                />\n                            </div>\n                        </div>;\n                    })}\n                </div>\n            </div>\n        </StyledBatchConverterModal>\n        <Tooltip overlay={language['converter.header.label']}>\n            <StyledActionIconButton\n                className=\"batch-converter\"\n                onClick={() => setVisible(true)}\n            >\n                <RetweetOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n};","import React, { ErrorInfo } from 'react';\nimport * as Sentry from '@sentry/react';\n\nexport type ErrorBoundaryProps = {\n    fallback?: React.ReactChild,\n};\nexport type ErrorBoundaryState = {\n    hasError: false,\n};\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\n    constructor(props: ErrorBoundaryProps) {\n        super(props);\n        this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error: unknown) {\n        console.error('Boundary', error);\n        // Update state so the next render will show the fallback UI.\n        return { hasError: true };\n    }\n  \n    componentDidCatch(error: Error, info: ErrorInfo) {\n        // Example \"componentStack\":\n        //   in ComponentThatThrows (created by App)\n        //   in ErrorBoundary (created by App)\n        //   in div (created by App)\n        //   in App\n        Sentry.captureException(error, { data: info.componentStack });\n    }\n  \n    render() {\n        if (this.state.hasError) {\n            // You can render any custom fallback UI\n            return this.props.fallback;\n        }\n    \n        return this.props.children;\n    }\n  }","import { Popover } from 'antd';\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\n\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    cursor: pointer;\n    display: inline-block;\n`;\n\nexport type Explanation = {\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\n} & ExtractProps<typeof Popover>;\nexport const Explanation = ({\n    overlayClassName,\n    iconProps,\n    ...rest\n}: Explanation) => {\n    const { className, ...restIconProps } = iconProps ?? {};\n\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\n    </Popover>;\n};","import { Tooltip } from 'antd';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { ExtractProps } from 'src/type';\nimport styled from 'styled-components';\nimport React from 'react';\n\nexport const StyledIconButtonContainer = styled.span`\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    margin-left: var(--spacing-xs);\n    width: 24px;\n    height: 24px;\n    border: var(--bw) solid var(--sub-level-1);\n    background-color: var(--main-level-4);\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n\tcursor: pointer;\n\t&:hover {\n\t\tbackground-color: var(--sub-level-4);\n\t}\n`;\n\nexport type IconButton = {\n    Icon: typeof SyncOutlined,\n    children?: React.ReactNode,\n    onClick?: () => void,\n    iconProps?: ExtractProps<typeof SyncOutlined>,\n    tooltipProps?: ExtractProps<typeof Tooltip>,\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\n}\nexport const IconButton = ({\n    Icon,\n    children,\n    onClick,\n    iconProps,\n    tooltipProps,\n    containerProps,\n}: IconButton) => {\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\n\n    return <Tooltip title={null} {...tooltipProps}>\n        <StyledIconButtonContainer\n            tabIndex={0}\n            {...restContainerProps}\n            onClick={e => {\n                onClick?.();\n                customOnClick?.(e);\n            }}\n            onKeyDown={e => {\n                onKeyDown?.(e);\n                if (e.key === 'Enter') {\n                    onClick?.();\n                }\n            }}\n            className={['icon-button', className ?? ''].join(' ')}\n        >\n            <>\n                <Icon {...iconProps} />{children}\n            </>\n        </StyledIconButtonContainer>\n    </Tooltip>;\n};\n\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\n    cursor: pointer;\n    .button-label {\n        display: grid;\n        label {\n            cursor: pointer;\n            line-height: 1;\n            font-size: var(--fs-xs);\n            margin-top: var(--spacing-xs);\n        }\n    }\n    .anticon {\n        font-size: var(--fs-xl);\n        justify-self: center;\n    }\n    &:hover {\n        color: var(--main-active);\n        .anticon {\n            color: var(--sub-active);\n        }\n    }\n`;","import { css } from 'styled-components';\n\nexport const InputTrainStyle = css`\n    display: flex;\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n        display: flex;\n        flex: 1 1 auto;\n\t\t&:focus-visible {\n\t\t\t.radio-train-focused,\n\t\t\t.checkbox-train-focused {\n\t\t\t\tbackground-color: var(--main-level-3);\n\t\t\t}\n\t\t}\n    }\n    .ant-radio-button-wrapper {\n        user-select: none;\n    }\n    .ant-radio-button-wrapper:first-child,\n    .ant-radio-button-wrapper:last-child {\n        border-radius: 0;\n    }\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\n        border-left-color: var(--sub-level-1);\n    }\n`;","import styled from 'styled-components';\nimport { InputTrainStyle } from './input-train.styled';\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { Tooltip } from 'antd';\n\ndeclare module 'react' {\n    function forwardRef<T, P = {}>(\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\n}\n\nconst StyledRadioTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type RadioTrainRef = {\n    focus: () => void,\n}\nexport type RadioTrain<Value = string | number> = {\n    className?: string,\n    strict?: boolean,\n    value: Value,\n    optionList: {\n        label: React.ReactNode,\n        value: Value,\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\n    }[],\n    onChange: (value: Value) => void,\n    children?: React.ReactNode,\n    suffix?: React.ReactNode,\n}\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    suffix,\n    className,\n    strict = false,\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\n    const [focus, setFocus] = useState(-1);\n    const internalRef = useRef<HTMLDivElement>(null);\n    const optionLength = optionList.length;\n\n    useImperativeHandle(ref, () => ({\n        focus: () => internalRef.current?.focus(),\n    }));\n\n    return <StyledRadioTrainContainer\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div ref={internalRef}\n            className=\"radio-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        onChange(target.value);\n                    }\n                },\n            })}\n        >\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\n                const { className } = props ?? {};\n                const isChecked = strict\n                    ? value === activeValue\n                    : `${value}` === `${activeValue}`;\n\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\n                    <label\n                        {...props}\n                        className={[\n                            'ant-radio-button-wrapper',\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                            className ?? '',\n                            focus === index ? 'radio-train-focused' : '',\n                        ].join(' ')}\n                        onClick={() => onChange(value)}\n                    >\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                            <span className=\"ant-radio-button-inner\"></span>\n                        </span>\n                        <span className=\"label\">{label}</span>\n                    </label>\n                </Tooltip>;\n            })}\n        </div>\n        {suffix}\n    </StyledRadioTrainContainer>;\n};\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { useLanguage, useSetting } from 'src/service';\nimport { SettingFilled } from '@ant-design/icons';\nimport styled, { css, keyframes } from 'styled-components';\nimport { Checkbox, Popover, Tooltip } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { RadioTrain } from '../input-train';\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\n\nconst rotate = keyframes`\n    to {\n        transform: rotate(360deg);\n    }\n`;\nconst StyledSettingPanel = styled.div`\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: var(--spacing-sm);\n    background-color: var(--main-level-3);\n    padding: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    color: var(--color);\n    .list-option {\n        margin-bottom: var(--spacing-xs);\n    }\n`;\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\n    .anticon-setting {\n        > svg {\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\n        }\n    }\n`;\nexport const SettingButton = () => {\n    const language = useLanguage();\n    const {\n        setting,\n        updateSetting,\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\n    const {\n        exportFormat,\n        resolution,\n        allowHotkey,\n        reduceMotionColor,\n        showCreativeOption,\n        showExtraDecorativeOption,\n    } = setting;\n\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\n        <Popover\n            trigger={['click']}\n            overlayClassName=\"setting-button-overlay\"\n            content={<StyledSettingPanel>\n                <div>\n                    <Checkbox\n                        checked={reduceMotionColor}\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showExtraDecorativeOption}\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Checkbox\n                        checked={showCreativeOption}\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\n                    >{language['setting.option.creative.label']}</Checkbox>\n                </div>\n                <div>\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\n                        <Checkbox\n                            checked={allowHotkey}\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\n                        >{language['setting.option.hotkey.label']}</Checkbox>\n                    </Tooltip>\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\n                    <RadioTrain\n                        value={`${resolution[0]}x${resolution[1]}`}\n                        optionList={ResolutionList.map(({ height, width, label }) => ({\n                            value: `${width}x${height}`,\n                            label: label,\n                        }))}\n                        onChange={value => {\n                            if (ResolutionMap[value as keyof typeof ResolutionMap]) {\n                                updateSetting({ resolution: ResolutionMap[value as keyof typeof ResolutionMap].settingValue });\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\n                    <RadioTrain\n                        value={exportFormat}\n                        optionList={ExportFormatList}\n                        onChange={value => {\n                            updateSetting({ exportFormat: value });\n                        }}\n                    />\n                </div>\n                <div>\n                    <small>{language['setting.alert']}</small>\n                </div>\n            </StyledSettingPanel>}\n        >\n            <div className=\"button-label\">\n                <SettingFilled />\n                <label>{language['setting.button.label']}</label>\n            </div>\n        </Popover>\n    </StyledSettingButtonContainer>;\n};","import { useEffect, useState } from 'react';\n\ntype VersionLog = { version: string, logList: { content: string }[] }[];\nconst VersionLogStore = (() => {\n    let isReady = false;\n    let versionLog: VersionLog = [];\n\n    return {\n        getLog: async () => {\n            if (isReady) return versionLog;\n            const response = await fetch(\n                `${process.env.PUBLIC_URL}/log/version.json`,\n                {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'Accept': 'application/json'\n                    }\n                }\n            );\n            try {\n                const responseLog = await response.json();\n                versionLog = responseLog;\n                isReady = true;\n\n                return versionLog;\n            } catch (e) {\n                console.error(e);\n            }\n            return [];\n        }\n    };\n})();\nexport const VersionLog = () => {\n    const [log, setLog] = useState<VersionLog>([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        (async () => {\n            setLoading(true);\n            const log = await VersionLogStore.getLog();\n\n            setLoading(false);\n            setLog(log);\n        })();\n    }, []);\n\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\n    if (loading) return <div>Loading changelog...</div>;\n    return <div>\n        {log.map(({ logList, version }, index) => {\n            return <div key={`${version}-${index}`}>\n                <b>{version}</b><br />\n                <ul>\n                    {/* Using index as key here is safe as the component is stateless */}\n                    {logList.map(({ content }, index) => {\n                        return <li key={index}>\n                            {content}\n                        </li>;\n                    })}\n                </ul>\n            </div>;\n        })}\n    </div>;\n};","import { Popover } from 'antd';\nimport styled from 'styled-components';\n\nexport const StyledCode = styled.span`\n    background: var(--main-level-1);\n    padding: var(--spacing-px) var(--spacing-xxs);\n    border: var(--bw) solid #4e84a4;\n    border-radius: var(--br);\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\n`;\n\nexport const StyledMarkdown = styled.div`\n    padding: var(--spacing-xs);\n    background-color: var(--main-level-3);\n    font-size: var(--fs);\n    color: var(--color-heavy);\n    text-shadow: var(--ts);\n    p {\n        white-space: pre-line;\n    }\n    ul {\n        padding-inline-start: var(--spacing-2xl);\n        margin-block-end: 0;\n        li {\n            line-height: 1.5;\n        }\n    }\n    :last-child {\n        margin-bottom: 0;\n    }\n`;\n\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\n    max-width: 550px;\n    border-radius: var(--br-lg);\n    border: var(--bw) solid var(--sub-level-1);\n`;\n\nexport const InternalPopover = ({\n    content,\n    children,\n    ...rest\n}: React.ComponentProps<typeof Popover>) => {\n    if (content) {\n        return <Popover content={content} {...rest}>{children}</Popover>;\n    }\n    return <>{children}</>;\n};","import { GithubFilled, BugOutlined, DatabaseFilled, TagsFilled } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Explanation } from '../explanation';\nimport { SettingButton } from '../setting';\nimport { useCardList, useI18N, useLanguage } from 'src/service';\nimport { Popover, Radio } from 'antd';\nimport { StyledHeaderButtonContainer } from '../icon-button';\nimport { useShallow } from 'zustand/react/shallow';\nimport { mergeClass } from 'src/util';\nimport { VersionLog } from './version-log';\nimport { StyledPopMarkdown } from '../atom';\nimport './app-header.scss';\n\nexport const Affiliation = () => {\n    return <div className=\"affiliation\">\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\n        <div className=\"affiliation-link\">\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\n                <GithubFilled />\n            </a>\n        </div>\n    </div>;\n};\n\nconst StyledVersionLog = styled(StyledPopMarkdown)`\n    overflow: auto;\n    max-height: 300px;\n`;\n\nconst StyledAppHeaderButtonContainer = styled.div`\n    align-content: center;\n    align-self: center;\n    border-left: var(--bw) dashed #b1b1b1;\n    padding-left: var(--spacing);\n    margin-left: var(--spacing);\n    height: 100%;\n    .button-label {\n        position: relative;\n    }\n    .manager-notice {\n        position: absolute;\n        color: var(--main-danger);\n        right: 0;\n        top: 0;\n        line-height: 1;\n    }\n`;\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\nexport const AppHeader = () => {\n    const {\n        language,\n        languageInfo,\n        languageMetadataMap,\n        changeLanguage,\n    } = useI18N(({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }) => ({\n        languageInfo,\n        language,\n        languageMetadataMap,\n        changeLanguage,\n    }));\n    const {\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        isListDirty,\n        toggleVisible,\n        visible,\n    })));\n\n    return <div className=\"app-header\">\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\n        <div className=\"app-description\">\n            <div className=\"header-language\">\n                <h1>Yugioh Carder</h1>\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\n                    {Object.values(languageMetadataMap)\n                        .filter(({ active }) => active)\n                        .map(({ codeName, name }) => {\n                            return <Radio.Button key={codeName}\n                                value={codeName}\n                                onChange={e => changeLanguage(e.target.value)}\n                            >\n                                {name}\n                            </Radio.Button>;\n                        })}\n                </Radio.Group>\n                <span className=\"bug-report\">\n                    <div id=\"sentry-bug-report\">\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\n                    </div>\n                </span>\n                <Popover\n                    placement=\"bottom\"\n                    content={<StyledVersionLog>\n                        <VersionLog />\n                    </StyledVersionLog>}\n                >\n                    <TagsFilled className=\"app-log\" />\n                </Popover>\n            </div>\n            <div className=\"app-contribution\">\n                <span className=\"app-creator\">\n                    {language['contributor.gui.label']}: <a\n                        href=\"https://github.com/lauqerm/ygocarder\"\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                    >\n                        <b>Lauqerm</b>\n                    </a>&nbsp;<Explanation\n                        content={<StyledPopMarkdown className=\"disclaimer\">\n                            <h2>{language['contributor.disclaimer.label']}</h2>\n                            <ul>\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\n                                <li>{language['contributor.disclaimer.line-2']}</li>\n                                <li>{language['contributor.disclaimer.line-3']}</li>\n                                <li>{language['contributor.disclaimer.line-4']}</li>\n                                <li>{language['contributor.disclaimer.line-5'](\n                                    <a key=\"template-maker-1\"\n                                        href=\"https://www.deviantart.com/grezar\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">Grezar</a>,\n                                    <a key=\"template-maker-2\"\n                                        href=\"https://www.deviantart.com/9558able\"\n                                        target=\"_blank\"\n                                        rel=\"noreferrer\">9558able</a>\n                                )}</li>\n                                <li>{language['contributor.disclaimer.line-6']}</li>\n                            </ul>\n                        </StyledPopMarkdown>}\n                    />\n                </span>\n                <span className=\"template-creator\">\n                    {language['contributor.template-maker'](\n                        <a key=\"artist-1\"\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\n                        <a key=\"artist-2\"\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>9558able</b></a>,\n                        <a key=\"artist-3\"\n                            href=\"https://www.deviantart.com/slackermagician\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\n                        <a key=\"artist-4\"\n                            href=\"https://www.deviantart.com/icycatelf\"\n                            target=\"_blank\"\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\n                    )}\n                </span>\n            </div>\n        </div>\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\n            <SettingButton />\n        </StyledAppHeaderButtonContainer>\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\n            <StyledHeaderButtonContainer\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\n                onClick={() => toggleVisible()}\n            >\n                <div className=\"button-label\">\n                    <DatabaseFilled />\n                    <label>{language['manager.icon.title']}</label>\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\n                </div>\n            </StyledHeaderButtonContainer>\n        </StyledAppHeaderButtonContainer>\n    </div>;\n};\n\nexport const TaintedCanvasPanel = () => {\n    const language = useLanguage();\n\n    return <StyledPopMarkdown className=\"disclaimer\">\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\n    </StyledPopMarkdown>;\n};\n\nexport const TaintedCanvasWarning = () => {\n    return <Explanation\n        overlayClassName=\"disclaimer-overlay\"\n        content={<TaintedCanvasPanel />}\n    />;\n};","import { Button, Drawer } from 'antd';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport { StyledCode } from '../atom';\nimport './formatting-guide.scss';\n\nconst StyledContainer = styled.div`\n    white-space: pre-line;\n`;\nconst StyledImageSection = styled.div`\n    display: grid;\n    grid-template-columns: 615fr 703fr;\n    gap: var(--spacing-sm);\n    padding: var(--spacing-sm) 0;\n    overflow: hidden;\n    .panel-box {\n        min-width: 0;\n        position: relative;\n        overflow: hidden;\n    }\n`;\nconst StyledImageWithCaptionContainer = styled.div`\n    min-width: 0;\n    position: relative;\n    overflow: hidden;\n    .caption {\n        position: absolute;\n        right: 0;\n        bottom: 0;\n        padding: var(--spacing-px) var(--spacing-sm);\n        background: var(--main-level-5);\n        border-radius: var(--br-lg) 0 0 0;\n        box-shadow: var(--bs-block);\n    }\n    > img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n        border-radius: var(--br-lg);\n    }\n`;\nexport type ImageWithCaption = {\n    caption?: React.ReactNode,\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\n} & React.ImgHTMLAttributes<HTMLImageElement>;\nexport const ImageWithCaption = ({\n    caption,\n    containerProps,\n    alt,\n    ...rest\n}: ImageWithCaption) => {\n    const { className } = containerProps ?? {};\n\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\n        <img alt={alt} {...rest} />\n        <div className=\"caption\">{caption}</div>\n    </StyledImageWithCaptionContainer>;\n};\n\nexport const FormattingHelpDrawer = () => {\n    const [modalOpen, setDrawerOpen] = useState(false);\n    const language = useLanguage();\n\n    return <>\n        <Drawer\n            footer={null}\n            visible={modalOpen}\n            width={'60%'}\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                    setDrawerOpen(false);\n                }}\n            >{language['guide.format.close']}</Button></div>}\n            className=\"formattting-guide-overlay\"\n            onClose={() => {\n                setDrawerOpen(false);\n            }}\n        >\n            <StyledContainer>\n                <p>\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\n                </p>\n                <h2>{language['guide.format.section-1.label']}</h2>\n                {language['guide.format.section-1.content'](\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-2.label']}</h2>\n                {language['guide.format.section-2.content'](\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-3.label']}</h2>\n                {language['guide.format.section-3.content'](\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-4.label']}</h2>\n                {language['guide.format.section-4.content'](\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n                <h2>{language['guide.format.section-5.label']}</h2>\n                {language['guide.format.section-5.content'](\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\n                )}\n                <StyledImageSection className=\"panel-figure\">\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-raw' }}\n                        alt={'non-breakable line raw'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\n                        caption={language['guide.format.caption.input']}\n                    />\n                    <ImageWithCaption\n                        containerProps={{ className: 'panel-box box-preview' }}\n                        alt={'non-breakable line preview'}\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\n                        caption={language['guide.format.caption.output']}\n                    />\n                </StyledImageSection>\n            </StyledContainer>\n        </Drawer>\n        <Button\n            className=\"formatting-help-button\"\n            type=\"primary\"\n            onClick={() => {\n                setDrawerOpen(true);\n            }}\n        >\n            {language['guide.format.label']} <BulbFilled />\n        </Button>\n    </>;\n};","import { FrameInfo } from 'src/model';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\n    display: grid;\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\n    > label {\n        cursor: pointer;\n        padding: 0 var(--spacing-xxs);\n        text-align: center;\n    }\n`;\nconst StyledFramePillar = styled.div`\n    display: inline-block;\n    width: 10px;\n`;\nexport const FrameInfoBlock = ({\n    nameKey,\n    labelBackgroundColor,\n    labelBackgroundColorList,\n    className,\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\n    const language = useLanguage();\n\n    return <StyledFrameContainer\n        className={`frame-info-block ${className ?? ''}`}\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\n    >\n        {labelBackgroundColorList\n            ? <StyledFramePillar>\n                {labelBackgroundColorList.map(color => <div\n                    key={color} \n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\n                />)}\n            </StyledFramePillar>\n            : labelBackgroundColor\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\n                : null}\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\n    </StyledFrameContainer>;\n};\n","import { Menu } from 'antd';\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\nimport { useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\n    color: var(--color);\n    padding: 1px 12px 5px 12px; // Alignment\n    font-size: var(--fs-sm);\n    border-bottom: var(--bw) solid var(--sub-level-4);\n    cursor: default;\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\n        cursor: default;\n        background: var(--main-level-3);\n    }\n`;\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\n    &li.ant-dropdown-menu-item:hover {\n        background-color: var(--sub-active);\n    }\n    &.active-setting {\n        background-color: var(--main-active);\n    }\n`;\nexport type ResolutionPicker = {\n    onChange?: (nextResolution: [number, number]) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ResolutionPicker = ({\n    onChange,\n    ...rest\n}: ResolutionPicker) => {\n    const language = useLanguage();\n    const {\n        resolution,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        resolution,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.resolution.label']}\n        </StyledDownloadDropdownLabel>\n        {ResolutionList.map(({ width, height, label }) => {\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        resolution: [width, height],\n                    });\n                    onChange?.([width, height]);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};\n\nexport type ExportFormatPicker = {\n    onChange?: (nextFormat: ExportFormat) => void,\n} & React.ComponentProps<typeof Menu>;\nexport const ExportFormatPicker = ({\n    onChange,\n    ...rest\n}: ExportFormatPicker) => {\n    const language = useLanguage();\n    const {\n        exportFormat,\n        updateSetting,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, exportFormat },\n        updateSetting,\n    }) => ({\n        allowHotkey,\n        exportFormat,\n        updateSetting,\n    })));\n\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\n            {language['setting.option.export-format.label']}\n        </StyledDownloadDropdownLabel>\n        {ExportFormatList.map(({ value, label }) => {\n            return <StyledDownloadDropdownOption key={label}\n                className={value === exportFormat ? 'active-setting' : ''}\n                onClick={() => {\n                    updateSetting({\n                        exportFormat: value,\n                    });\n                    onChange?.(value);\n                }}\n            >\n                {label}\n            </StyledDownloadDropdownOption>;\n        })}\n    </Menu>;\n};","import { Spin } from 'antd';\nimport styled from 'styled-components';\n\nconst StyledLoadingFullViewContainer = styled.div`\n    display: flex;\n\tposition: absolute;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\n    justify-content: center;\n    align-items: center;\n    z-index: 999;\n`;\n\nexport const Loading = () => {\n    return <Spin />;\n};\nLoading.FullView = () => {\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\n        <Spin size=\"large\" />\n    </StyledLoadingFullViewContainer>;\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\nimport ReactCrop from 'react-image-crop';\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\nimport { Loading } from '../loading';\nimport { IconButton } from '../icon-button';\nimport { useLanguage } from 'src/service';\nimport { mergeClass } from 'src/util';\nimport 'react-image-crop/dist/ReactCrop.css';\nimport './image-cropper.scss';\n\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\n    if (!crop || !canvas) return;\n    canvas.toBlob(\n        (blob) => {\n            if (blob !== null) {\n                const previewUrl = window.URL.createObjectURL(blob);\n\n                const anchor = document.createElement('a');\n                anchor.download = 'crop-preview.png';\n                anchor.href = URL.createObjectURL(blob);\n                anchor.click();\n\n                window.URL.revokeObjectURL(previewUrl);\n            }\n        },\n        'image/png',\n        1\n    );\n}\n\n/**\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\n * \n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\n */\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\n    if (!image) return crop;\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\n\n    /** Migrate old unit */\n    if (unit === 'px') {\n        const oldHeightToWidthRatio = 300 / 375;\n        const newHeightToWidthRatio = 400 / 300;\n        const { width: imageWidth, height: imageHeight } = image;\n\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\n\n        return {\n            unit: '%' as 'px' | '%',\n            x: nextX / imageWidth * 100,\n            y: nextY / imageHeight * 100,\n            width: newWidth / imageWidth * 100,\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\n            aspect: ratio,\n        };\n    }\n\n    if (x < 0) return { ...crop, x: 0 };\n    if (y < 0) return { ...crop, y: 0 };\n    const { naturalHeight, naturalWidth } = image;\n    const width = cropWidth ?? 0;\n    const height = cropHeight ?? 0;\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\n    const nextHeight = isRatioAcceptable\n        ? height\n        : width * image.naturalWidth /** Restore original size */\n            / ratio /** Get height with corresponding aspect ratio */\n            / image.naturalHeight /** Convert back to percent */;\n\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\n    const oversizeRatio = nextHeight / 100;\n    const normalizedHeight = oversizeRatio > 1\n        ? 100\n        : nextHeight;\n    const normalizedWidth = oversizeRatio > 1\n        ? width / oversizeRatio\n        : width;\n    const normalizedX = oversizeRatio > 1\n        ? (100 - normalizedWidth) / 2\n        : (x < 0 ? 0 : x);\n    const normalizedY = oversizeRatio > 1\n        ? 0\n        : (y < 0 ? 0 : y);\n\n    return {\n        ...crop,\n        x: normalizedX,\n        y: normalizedY,\n        height: normalizedHeight,\n        width: normalizedWidth,\n        aspect: ratio,\n    };\n};\n\nexport type ImageCropperRef = {\n    isLoading: () => boolean,\n    hasImage: () => boolean,\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\n}\nexport type ImageCropper = {\n    title?: React.ReactNode,\n    backgroundColor?: string,\n    className?: string,\n    /** Stretch or squeeze image so it fit with the provided ratio */\n    forceFit?: boolean,\n    defaultSourceType?: string,\n    defaultInternalSource?: string,\n    defaultExternalSource?: string,\n    receivingCanvas?: HTMLCanvasElement | null,\n    children?: React.ReactNode,\n    beforeCropper?: React.ReactNode,\n    defaultCropInfo: Partial<ReactCrop.Crop>,\n    ratio: number,\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\n    onSourceLoaded?: (crossorigin?: string) => void,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\n    onTainted: () => void,\n    onMaxSizeExceeded: (size: number) => void,\n    onForceFitChange?: (status: boolean) => void,\n}\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\n    title,\n    backgroundColor,\n    className,\n    forceFit,\n    defaultSourceType,\n    defaultInternalSource = '',\n    defaultExternalSource = '',\n    receivingCanvas,\n    children,\n    beforeCropper,\n    defaultCropInfo,\n    ratio,\n    onSourceLoaded = () => { },\n    onSourceChange = () => { },\n    onCropChange = () => { },\n    onTainted = () => { },\n    onMaxSizeExceeded = () => { },\n    onForceFitChange = () => { },\n}: ImageCropper, forwardedRef) => {\n    const normalizedDefaultSource = defaultSourceType === 'offline'\n        ? 'offline'\n        : 'online';\n    const language = useLanguage();\n    const fileInputRef = useRef<Input>(null);\n    const [\n        crossorigin,\n        setCrossOrigin,\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\n    const [redrawSignal, setRedrawSignal] = useState(0);\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\n    const [isLoading, setLoading] = useState(false);\n    const [error, setError] = useState<any>(null);\n    const [interacted, setInteracted] = useState(false);\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\n    const imgRef = useRef<HTMLImageElement | null>(null);\n    const [crop, setCrop] = useState({\n        current: defaultCropInfo,\n        completed: null as ReactCrop.Crop | null,\n    });\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\n    const {\n        current: currentCrop,\n        completed: completedCrop,\n    } = crop;\n\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files.length > 0) {\n            const targetFile = e.target.files[0];\n            const maxFileSize = 4;\n\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\n                setLoading(true);\n                const reader = new FileReader();\n                reader.addEventListener('load', () => {\n                    if (typeof reader.result === 'string') {\n                        setCrossOrigin('anonymous');\n                        setInternalSource(reader.result);\n                        setSourceType('offline');\n                        setInputMode('offline');\n                        onSourceChange('offline', reader.result);\n                        setLoading(false);\n                    }\n                });\n                reader.readAsDataURL(targetFile);\n            } else {\n                onMaxSizeExceeded(maxFileSize);\n            }\n        } else alert(language['image-cropper.not-found-warning']);\n    };\n\n    const pendingCrop = useRef({\n        source: '',\n        crop: null as Partial<ReactCrop.Crop> | null,\n    });\n    const onLoad = useCallback((img: HTMLImageElement) => {\n        setLoading(false);\n        setError(null);\n        onSourceLoaded(crossorigin);\n        imgRef.current = img;\n        /** @todo Check if we really need timeout delay here */\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\n            const internalId = pendingId.current;\n            setTimeout(() => {\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\n                setCrop({\n                    completed: normalizedCrop,\n                    current: normalizedCrop,\n                });\n                setMigrated(true);\n                pendingCrop.current = {\n                    source: '',\n                    crop: null,\n                };\n            }, 250);\n        } else {\n            setTimeout(() => {\n                setCrop(cur => {\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\n\n                    return {\n                        completed: normalizedCrop,\n                        current: normalizedCrop,\n                    };\n                });\n                setMigrated(true);\n            }, 250);\n        }\n    }, [crossorigin, onSourceLoaded, ratio]);\n\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const source = e.target.value;\n\n        setCrossOrigin('anonymous');\n        setLoading(true);\n        setSourceType('online');\n        setInputMode('online');\n        onSourceChange('online', source);\n        setExternalSource(source);\n    };\n\n    useEffect(() => {\n        const image = imgRef.current;\n        if (!completedCrop || !receivingCanvas || !image) return;\n\n        const { aspect: ratio } = completedCrop;\n\n        /** Increase image size for a bit */\n        receivingCanvas.style.transform = 'scale(2)';\n        const ctx = receivingCanvas.getContext('2d');\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\n\n        const { naturalHeight, naturalWidth } = image;\n        const zoomX = naturalWidth / image.width;\n        const zoomY = naturalHeight / image.height;\n        const cropUnit = completedCrop.unit ?? 'px';\n        const pixelRatio = window.devicePixelRatio;\n\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        /** Snap sizing into whole pixel for a more crispy image. */\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\n        let drawCoordinateX = Math.min(\n            naturalWidth,\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\n        );\n        let drawCoordinateY = Math.min(\n            naturalHeight,\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\n        );\n        ctx.imageSmoothingQuality = 'high';\n        if (drawWidth <= 0 || drawHeight <= 0) return;\n\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\n        if (\n            // Size overflow\n            (drawCoordinateX + drawWidth) > naturalWidth\n            || (drawCoordinateY + drawHeight) > naturalHeight\n            // Edge overflow\n            || drawCoordinateX < 0\n            || drawCoordinateY < 0\n            // Ratio overflow\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\n        ) {\n            /** Try to maximize new crop section's area */\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            /**\n             * Automatically center current crop section.\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\n             * */\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n                drawCoordinateX = 0;\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: 0,\n                    y: drawCoordinateY / naturalHeight * 100,\n                };\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\n                drawCoordinateY = 0;\n                fitCropData = {\n                    unit: '%',\n                    aspect: ratio,\n                    height: drawHeight / naturalHeight * 100,\n                    width: drawWidth / naturalWidth * 100,\n                    x: drawCoordinateX / naturalWidth * 100,\n                    y: 0,\n                };\n            }\n        }\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\n\n        if (forceFit) {\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\n            if (prominentSide === 'width') {\n                drawWidth = naturalWidth;\n                drawHeight = drawWidth / ratio;\n            } else {\n                drawWidth = naturalHeight * ratio;\n                drawHeight = naturalHeight;\n            }\n            receivingCanvas.width = drawWidth;\n            receivingCanvas.height = drawHeight;\n            ctx.drawImage(\n                image,\n                0,\n                0,\n                naturalWidth,\n                naturalHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        } else {\n            receivingCanvas.width = (drawWidth ?? 0);\n            receivingCanvas.height = (drawHeight ?? 0);\n            ctx.drawImage(\n                image,\n                drawCoordinateX,\n                drawCoordinateY,\n                drawWidth,\n                drawHeight,\n                0,\n                0,\n                drawWidth,\n                drawHeight,\n            );\n        }\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\n        else if (ratio === completedCrop.aspect) {\n            onCropChange(completedCrop, sourceType, interacted);\n        }\n        if (fitCropData) {\n            setCrop(cur => ({ ...cur, current: fitCropData }));\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\n\n    useEffect(() => {\n        setInteracted(false);\n        setCrop(cur => {\n            if (imgRef.current != null && cur.current) {\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\n                return {\n                    current: newValue,\n                    completed: newValue,\n                };\n            }\n            return cur;\n        });\n    }, [ratio]);\n\n    const pendingId = useRef(0);\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => isLoading,\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\n            setInteracted(false);\n            if (currentSource !== source) {\n                setLoading(true);\n                setSourceType(type);\n                setInputMode(type);\n                onSourceChange(type, source);\n                if (type === 'offline') {\n                    setInternalSource(source);\n                } else setExternalSource(source);\n            }\n            setCrossOrigin('anonymous');\n            setMigrated(cropInfo.unit === '%');\n            pendingId.current += 1;\n            pendingCrop.current = {\n                source,\n                crop: cropInfo,\n            };\n            setRedrawSignal(cur => cur + 1);\n        }\n    }));\n\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\n    return (\n        <div className={`card-image-cropper ${className}`}>\n            <div className=\"card-image-source-input\">\n                {children}\n                <div className=\"card-image-source-input-container\">\n                    <div className=\"card-image-source-input-title\">\n                        <span className=\"field-title\">\n                            {title} <IconButton\n                                Icon={DownloadOutlined}\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\n                                tooltipProps={{\n                                    overlay: isDownloadable\n                                        ? language['image-cropper.download']\n                                        : language['image-cropper.no-download']\n                                }}\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\n                            />\n                        </span>\n                        <Radio.Group\n                            className=\"card-image-source-type-input\"\n                            onChange={e => {\n                                const value = e.target.value;\n                                setInputMode(value);\n                                if (\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\n                                ) {\n                                    setSourceType(value);\n                                    if (value === 'offline') {\n                                        setCrossOrigin('anonymous');\n                                        onSourceChange('offline', internalSource);\n                                    } else {\n                                        onSourceChange('online', externalSource);\n                                    }\n                                    setLoading(true);\n                                }\n                            }}\n                            value={inputMode}\n                        >\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\n                                {language['image-cropper.source.online.tooltip']}\n                            </Radio.Button>\n                            <Tooltip\n                                placement=\"topLeft\"\n                                title={<div className=\"image-warning\">\n                                    {language['image-cropper.offline-warning']}\n                                </div>}\n                            >\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\n                                    {language['image-cropper.source.offline.tooltip']}\n                                </Radio.Button>\n                            </Tooltip>\n                        </Radio.Group>\n                    </div>\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\n                        <Input key=\"key\"\n                            placeholder={language['image-cropper.placeholder']}\n                            value={externalSource}\n                            onChange={applyOnlineSource}\n                            maxLength={512}\n                            allowClear\n                        />\n                        {<div className=\"online-image-tip\">\n                            {language['image-cropper.online-tip']}\n                        </div>}\n                    </div>\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\n                        <Input ref={fileInputRef}\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={applyOfflineSource}\n                            onClick={() => fileInputRef.current?.setValue('')}\n                        />\n                        <hr />\n                        {language['image-cropper.offline-warning']}\n                    </div>\n                </div>\n            </div>\n            {beforeCropper}\n            <div className=\"card-cropper\" onKeyDown={() => {\n                /** Nudge selection also count as user interaction */\n                setInteracted(true);\n            }}>\n                {isLoading && <Loading.FullView />}\n                {(hasImage && !error) && <div className=\"card-image-option\">\n                    <Tooltip\n                        placement=\"left\"\n                        overlay={forceFit\n                            ? language['image-cropper.button.use-crop.tooltip']\n                            : language['image-cropper.button.force-fit.tooltip']}\n                    >\n                        <div\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\n                            onClick={() => {\n                                setInteracted(true);\n                                onForceFitChange(!forceFit);\n                            }}\n                        >\n                            <FullscreenOutlined />\n                        </div>\n                    </Tooltip>\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { width, x } = cur.completed ?? {};\n\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    x: (100 - width) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\n                            setInteracted(true);\n                            setCrop(cur => {\n                                const { height, y } = cur.completed ?? {};\n\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\n                                const newCrop: ReactCrop.Crop = {\n                                    ...cur.completed,\n                                    y: (100 - height) / 2,\n                                };\n\n                                return {\n                                    current: newCrop,\n                                    completed: newCrop,\n                                };\n                            });\n                        }}>\n                            <VerticalAlignMiddleOutlined />\n                        </div>\n                    </Tooltip>}\n                </div>}\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\n                    description={language['image-cropper.not-found-warning']}\n                    image={null}\n                />}\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\n                    src={sourceType === 'offline' ? internalSource : externalSource}\n                    disabled={forceFit}\n                    className={forceFit ? 'force-fitted' : ''}\n                    imageStyle={backgroundColor\n                        ? {\n                            backgroundColor,\n                        }\n                        : {\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\n                        }}\n                    onImageLoaded={onLoad}\n                    onImageError={() => {\n                        pendingCrop.current = {\n                            source: '',\n                            crop: null,\n                        };\n                        if (!receivingCanvas) {\n                            setLoading(false);\n                            setError('No receiving canvas');\n                            onTainted();\n                        }\n                        else if (\n                            (sourceType === 'online' && (externalSource ?? '') === '')\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\n                        ) {\n                            const { width, height } = receivingCanvas;\n                            const ctx = receivingCanvas.getContext('2d');\n\n                            ctx?.clearRect(0, 0, width, height);\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\n                            onSourceLoaded(crossorigin);\n                            setLoading(false);\n                            setError('Image not found');\n                        } else {\n                            setCrossOrigin(undefined);\n                            onTainted();\n                        }\n                        if (crossorigin === undefined) {\n                            setLoading(false);\n                            setError('Tainted canvas');\n                        }\n                    }}\n                    crop={currentCrop}\n                    onDragStart={() => {\n                        setInteracted(true);\n                    }}\n                    onChange={(pixelCropData, percentCropData) => {\n                        const image = imgRef.current;\n                        if (pendingCrop.current.crop) return;\n                        if (!isMigrated) {\n                            setMigrated(true);\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(pixelCropData, image, ratio)\n                                };\n                            });\n                        } else {\n                            setCrop(cur => {\n                                return {\n                                    ...cur,\n                                    current: normalizeCrop(percentCropData, image, ratio)\n                                };\n                            });\n                        }\n                    }}\n                    onComplete={(_, percentData) => {\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\n                    }}\n                    ruleOfThirds={true}\n                    crossorigin={crossorigin}\n                />\n            </div>\n        </div>\n    );\n});\n","import { Checkbox, Tooltip } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { mergeClass } from 'src/util';\nimport { LinkRotateList } from 'src/model';\n\nconst StyledLinkMarkChooser = styled.div`\n    --link-arrow-icon-size: 16px;\n    --link-arrow-border-size: 8px;\n    --link-arrow-half-size: 13px;\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n    font-weight: 500;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    padding: var(--spacing-sm);\n    background-color: var(--main-level-4);\n    box-shadow: var(--bs-block);\n    border-radius: var(--br-lg);\n    .title {\n        line-height: 0;\n        margin-bottom: var(--spacing-sm);\n    }\n    .container {\n        display: grid;\n        grid-template-columns: 1fr 1fr 1fr;\n        grid-template-rows: 1fr 1fr 1fr;\n        width: calc(3 * var(--link-arrow-full-size));\n        height: calc(3 * var(--link-arrow-full-size));\n        column-gap: 0;\n        row-gap: 0;\n        background-color: var(--main-level-1);\n        box-shadow: 0 0 2px 1px #141414 inset;\n        border-radius: var(--br-lg);\n        margin: auto;\n        .link-marker-icon {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            width: 0;\n            height: 0;\n            border-style: solid;\n            position: absolute;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n            border-color: transparent transparent #484848 transparent;\n            .anticon {\n                font-size: var(--link-arrow-icon-size);\n            }\n        }\n        .link-marker-button.marker-checked .link-marker-icon {\n            border-color: transparent transparent var(--sub-active) transparent;\n        }\n    }\n    .link-marker-reset {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n    .marker-checked {\n        color: var(--sub-active);\n    }\n    &.chooser-disabled {\n        .container {\n            background-color: var(--main-level-4);\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\n            .link-marker-icon {\n                border-color: transparent transparent #585858 transparent;\n            }\n            .link-marker-button.marker-checked .link-marker-icon {\n                border-color: transparent transparent var(--sub-disabled) transparent;\n            }\n            .link-marker-reset .anticon {\n                color: var(--main-level-4);\n            }\n        }\n    }\n    &.chooser-active {\n        .link-marker-reset,\n        .link-marker-button {\n            cursor: pointer;\n            border-radius: var(--br-lg);\n            &:hover {\n                background-color: var(--sub-level-1);\n            }\n        }\n    }\n`;\n\nexport type LinkMarkChooser = {\n    active: boolean,\n    defaultValue?: string[],\n    onChange?: (value: string[]) => void,\n    onStatusChange: (status: boolean) => void,\n};\nexport const LinkMarkChooser = ({\n    active,\n    defaultValue = [],\n    onChange = () => {},\n    onStatusChange,\n}: LinkMarkChooser) => {\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\n    const language = useLanguage();\n\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\n    useEffect(() => {\n        onChange(choosenArrow);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [literalChoosenArrow]);\n\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\n        <div className=\"title\">\n            <Checkbox\n                checked={active}\n                onChange={e => onStatusChange(e.target.checked)}\n            >{language['link-picker.label']}</Checkbox>\n        </div>\n        <div className=\"container\">\n            {[...Array(9)].map((_, index) => {\n                const normalizedIndex = `${index + 1}`;\n\n                if (normalizedIndex === '5') return <Tooltip\n                    key=\"5\"\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\n                >\n                    <div className=\"link-marker-reset\" onClick={() => {\n                        if (active) setChoosenArrow([]);\n                    }}>\n                        <CloseCircleOutlined />\n                    </div>\n                </Tooltip>;\n\n                return <div key={normalizedIndex}\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\n                    onClick={() => {\n                        if (active) setChoosenArrow(cur => {\n                            let newMap = [...cur];\n\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\n                            else newMap.push(normalizedIndex);\n\n                            return newMap;\n                        });\n                    }}\n                >\n                    <div\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\n                    />\n                </div>;\n            })}\n        </div>\n    </StyledLinkMarkChooser>;\n};","import styled from 'styled-components';\nimport { Slider } from 'antd';\nimport { ErrorBoundary } from './error-boundary';\n\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\n    return <ErrorBoundary fallback={<></>}>\n        <Slider {...props} />\n    </ErrorBoundary>;\n};\n\nexport const StandaloneLabel = styled.div`\n    font-weight: 500;\n    border-color: transparent;\n    background-color: transparent;\n    color: var(--color-vendor);\n    text-shadow: var(--ts);\n    user-select: none;\n    display: inline-block;\n    height: 32px;\n    width: var(--width-label);\n    line-height: 30px;\n    position: relative;\n    min-width: var(--width-label);\n    text-align: right;\n    padding-right: var(--spacing-antd);\n`;\n\nexport const StyledDropdownOption = styled.div`\n    display: flex;\n    align-items: center;\n    padding: var(--spacing-xs) var(--spacing);\n    cursor: pointer;\n    &:hover {\n        background-color: var(--sub-active);\n    }\n    &.menu-active {\n        background-color: var(--main-active);\n        &:hover {\n            background-color: var(--sub-active);\n        }\n    }\n`;\nexport const StyledDropdownContainer = styled.div`\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br-lg);\n    background-color: var(--main-level-3);\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\n    padding: var(--spacing-xs) 0;\n    color: var(--color);\n`;\nexport const StyledDropdown = {\n    Container: StyledDropdownContainer,\n    Option: StyledDropdownOption,\n};\n\nexport * from './app-header';\nexport * from './atom';\nexport * from './error-boundary';\nexport * from './explanation';\nexport * from './formatting-guide';\nexport * from './frame-info-block';\nexport * from './icon-button';\nexport * from './input-train';\nexport * from './setting-panel';\nexport * from './setting';\nexport type { ImageCropperRef } from './image-cropper';\nexport { ImageCropper } from './image-cropper';\nexport { LinkMarkChooser } from './link-marker';\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\nimport { MasterSeriesCanvas } from 'src/model';\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\nimport { MenuOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forceRefocus } from 'src/util';\nimport { ResolutionPicker } from 'src/component';\n\nconst StyledDownloadButton = styled(Button)`\n    padding: 0;\n    .button-label {\n        height: 100%; // Alignment\n        align-content: center;\n        border-radius: var(--br-lg);\n        line-height: 1.5;\n        .label-content {\n            padding: 4px 15px;\n            border: var(--bw) solid transparent;\n            border-radius: var(--br-lg);\n            line-height: 29px; // Alignment\n        }\n    }\n    .button-option {\n        position: absolute;\n        right: 0;\n        top: 0;\n        height: 100%;\n        display: flex;\n        align-items: center;\n        padding: var(--spacing);\n        border-left: var(--bw) solid var(--sub-secondary);\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        .anticon {\n            font-size: var(--fs-2xl);\n            margin-left: 0;\n        }\n        &:hover {\n            background: #399af9;\n        }\n    }\n`;\nexport type DownloadButtonRef = {\n    download: () => void,\n    isPipelineRunning: () => boolean,\n}\nexport type DownloadButton = {\n    isTainted: boolean,\n    isInitializing: boolean,\n    imageChangeCount: number,\n    canvasMap: MasterSeriesCanvas,\n    onDownloadError: () => void,\n};\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\n    isTainted,\n    isInitializing,\n    imageChangeCount,\n    canvasMap,\n    onDownloadError,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        allowHotkey,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey },\n    }) => ({\n        allowHotkey,\n    })));\n    const { onExport } = useMasterSeriDrawer(\n        true,\n        canvasMap,\n        {\n            imageChangeCount,\n            isInitializing,\n            language,\n        },\n    );\n    const {\n        exportCanvasRef,\n    } = canvasMap;\n    const exportRef = useRef({\n        currentPipeline: Promise.resolve(),\n        pipelineRunning: false,\n    });\n    const [isDownloading, setDownloading] = useState(false);\n    const onDownloadComplete = useCallback(() => {\n        setDownloading(false);\n    }, []);\n    const { onSave, isPipelineRunning } = useCardExport({\n        isTainted,\n        isInitializing,\n        exportCanvasRef,\n        exportRef,\n        onExport,\n        onDownloadError,\n        onDownloadComplete,\n    });\n\n    const download = (size?: [number, number]) => {\n        if (isDownloading) return;\n        if (isTainted) {\n            notification.error({\n                message: language['prompt.download.tainted.message'],\n            });\n            return;\n        }\n        setDownloading(true);\n        onSave(size);\n        return;\n    };\n    useImperativeHandle(ref, () => ({\n        download,\n        isPipelineRunning,\n    }));\n\n    if (isTainted) return null;\n    return <div className=\"save-button-container\">\n        <div id=\"save-button-waiting\" />\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\n                <div className=\"button-label\">\n                    <div className=\"label-content\" onClick={() => download()}>\n                        {isDownloading\n                            ? language['button.download.ongoing.label']\n                            : language['button.download.label']}\n                    </div>\n                </div>\n            </Tooltip>\n            <Dropdown\n                disabled={isDownloading}\n                className=\"save-button-dropdown\"\n                placement=\"bottomRight\"\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\n            >\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\n                    <MenuOutlined />\n                </div>\n            </Dropdown>\n        </StyledDownloadButton>\n    </div>;\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledActionIconButton } from './styled';\nimport copy from 'copy-to-clipboard';\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined } from '@ant-design/icons';\nimport { Card } from 'src/model';\nimport { useShallow } from 'zustand/react/shallow';\n\nconst StyledExportContainer = styled.div`\n    ${StyledActionIconButton} {\n        font-size: var(--fs);\n        padding-bottom: var(--spacing-sm);\n        .icon {\n            font-size: var(--fs-4xl);\n        }\n        &.export-download-image {\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\n            border-bottom: var(--bw) solid var(--sub-secondary);\n            &:disabled {\n                border-bottom: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n    .radio-train-input-group {\n        flex-wrap: wrap;\n    }\n    .export-container-result {\n        margin-top: var(--spacing-lg);\n        display: grid;\n        gap: var(--spacing-lg);\n        align-items: center;\n        grid-template-columns: 1fr 1fr 1fr;\n        &.mode-other {\n            grid-template-columns: 1fr 1fr;\n        }\n        button {\n            display: flex;\n            flex-direction: column;\n            justify-content: center;\n            width: 100%;\n            height: 100%;\n        }\n        > div {\n            height: 100%;\n        }\n    }\n    .partial-alert {\n        margin-top: var(--spacing-lg);\n        padding-bottom: var(--spacing-sm);\n        border-bottom: var(--bw) solid var(--sub-secondary);\n        + .export-container-result {\n            margin-top: var(--spacing-sm);\n        }\n    }\n    .resolution-picker {\n        background-color: var(--main-level-4);\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\n        padding: var(--spacing-xs);\n        line-height: 1;\n        text-align: center;\n        border: var(--bw) solid var(--main-level-2);\n        cursor: pointer;\n    }\n    .export-input-raw {\n        grid-column: 1 / -1;\n    }\n`;\n\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\ntype CardDataCopyButton = {\n    data: string,\n    children?: React.ReactNode,\n    disabled: boolean,\n}\nconst CardDataCopyButton = ({\n    data,\n    children,\n    disabled,\n}: CardDataCopyButton) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledCardDataCopyButton\n        disabled={disabled}\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledCardDataCopyButton>;\n};\n\ntype ExportMode = 'ygocarder' | 'other';\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\n    {\n        label: language['button.import.for-ygocarder.label'],\n        value: 'ygocarder' as const,\n        converter: ygoCarderToExportableData,\n    },\n    {\n        label: language['button.import.for-other.label'],\n        value: 'other' as const,\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\n            isPartial: boolean;\n            result: Record<string, any>;\n        },\n    },\n];\n\nexport type ExportPanelRef = {\n    setCardData: (card: Card, openModal?: boolean) => void,\n};\nexport type ExportPanel = {\n    tainted: boolean,\n    artworkCanvas: HTMLCanvasElement | null,\n    onRequireExportData: () => void,\n    onRequireDownload: () => void,\n    onClose: () => void,\n};\nexport const ExportPanel = forwardRef(({\n    tainted,\n    artworkCanvas,\n    onRequireExportData,\n    onRequireDownload,\n    onClose,\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\n    const [visible, setVisible] = useState(false);\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\n        other: { name: '', data: '', isPartial: false },\n        ygocarder: { name: '', data: '', isPartial: false },\n    });\n    const {\n        allowHotkey,\n        resolution,\n    } = useSetting(useShallow(({\n        setting: { allowHotkey, resolution },\n    }) => ({\n        allowHotkey,\n        resolution,\n    })));\n    const language = useLanguage();\n    const inputId = 'export-input-raw';\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n    const downloadAsFile = (name: string, rawData: string) => {\n        const blob = new Blob([rawData], { type: 'application/json' });\n        downloadBlob(\n            normalizeCardName(name),\n            blob,\n            'application/json',\n        );\n    };\n\n    useImperativeHandle(ref, () => ({\n        setCardData: (card: Card, openModal = true) => {\n            if (openModal) setVisible(true);\n            setInternalCardData(getExportModeDataList(language)\n                .map(({ value, converter }) => {\n                    try {\n                        const {\n                            isPartial,\n                            result,\n                        } = converter(card, artworkCanvas);\n\n                        return {\n                            value,\n                            isPartial,\n                            name: normalizeCardName(card.name),\n                            data: `${JSON.stringify(result)}`,\n                        };\n                    } catch (e) {\n                        console.error(e);\n\n                        return {\n                            value,\n                            isPartial: false,\n                            name: 'Unknown',\n                            data: '',\n                        };\n                    }\n                })\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\n                    prev[value] = { name, data, isPartial };\n\n                    return prev;\n                }, { ...internalCardData })\n            );\n        },\n    }));\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible && mode === 'ygocarder') focusInput();\n        }, 100);\n    }, [mode, focusInput, visible]);\n\n    const {\n        data,\n        isPartial,\n        name,\n    } = internalCardData[mode];\n    return <>\n        <Modal\n            visible={visible}\n            title={language['button.export-modal.label']}\n            className=\"global-overlay\"\n            onCancel={() => {\n                setVisible(false);\n                onClose();\n            }}\n            cancelText={language['converter.cancel.label']}\n            okButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n        >\n            <StyledExportContainer>\n                <RadioTrain<ExportMode>\n                    optionList={getExportModeDataList(language)}\n                    onChange={mode => setMode(mode)}\n                    value={mode}\n                />\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\n                    <b>{language['service.decode.partial.message']}</b>\n                    <br />\n                    {language['service.decode.partial.description']}\n                </div>}\n                <div className={mergeClass('export-container-result', `mode-${mode}`)}>\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\n                        <div>\n                            <StyledActionIconButton\n                                disabled={tainted && mode === 'other'}\n                                onClick={() => {\n                                    const blob = new Blob([data], { type: 'application/json' });\n                                    downloadBlob(\n                                        normalizeCardName(name),\n                                        blob,\n                                        'application/json',\n                                    );\n                                }}\n                            >\n                                <div className=\"icon\"><DownloadOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.download-button.label']}\n                                </div>\n                            </StyledActionIconButton>\n                        </div>\n                    </InternalPopover>\n                    {mode === 'ygocarder' && <InternalPopover\n                        content={isPartial\n                            ? <StyledPopMarkdown>\n                                {language['prompt.export.offline-warning.message']}\n                            </StyledPopMarkdown>\n                            : undefined}\n                    >\n                        <div>\n                            <CardDataCopyButton\n                                disabled={isPartial}\n                                data={internalCardData.ygocarder.data}\n                            >\n                                <div className=\"icon\"><CopyOutlined /></div>\n                                <div className=\"label\">\n                                    {language['button.export-modal.copy-button.label']}\n                                </div>\n                            </CardDataCopyButton>\n                        </div>\n                    </InternalPopover>}\n                    <div>\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\n                            <div>\n                                <StyledActionIconButton\n                                    disabled={tainted}\n                                    className=\"export-download-image\"\n                                    onClick={onRequireDownload}\n                                >\n                                    <div className=\"icon\"><FileImageOutlined /></div>\n                                    <div className=\"label\">\n                                        {language['button.export-modal.save-button.label']}\n                                    </div>\n                                </StyledActionIconButton>\n                            </div>\n                        </InternalPopover>\n                        <Dropdown overlay={<ResolutionPicker />}>\n                            <div className=\"resolution-picker\">\n                                {resolution[0]} × {resolution[1]}\n                            </div>\n                        </Dropdown>\n                    </div>\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\n                        id={inputId}\n                        className=\"export-input-raw\"\n                        size=\"small\"\n                        value={internalCardData.ygocarder.data}\n                        rows={5}\n                    />}\n                </div>\n            </StyledExportContainer>\n        </Modal>\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\n            <button className=\"primary-button export-button\" onClick={() => {\n                onRequireExportData();\n                setVisible(true);\n            }}>\n                {language['button.export.label']}\n            </button>\n        </Tooltip>\n        <Dropdown \n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\n                    return <Menu.Item key={`${index}`}\n                        onClick={() => {\n                            try {\n                                const card = useCard.getState().card;\n                                const {\n                                    result,\n                                } = converter(card, artworkCanvas);\n\n                                downloadAsFile(\n                                    normalizeCardName(card.name),\n                                    `${JSON.stringify(result)}`,\n                                );\n                            } catch (e) {\n                                console.error(e);\n                                notification.error({\n                                    message: language['error.export.message'],\n                                    description: language['error.export.description'],\n                                });\n                            }\n                        }}\n                    >\n                        {label}\n                    </Menu.Item>;\n                })}\n            </Menu>}\n        >\n            <StyledActionIconButton className=\"secondary-button export-custom\">\n                <DownloadOutlined />\n            </StyledActionIconButton>\n        </Dropdown>\n    </>;\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { UploadOutlined } from '@ant-design/icons';\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\nimport { StyledActionIconButton } from './styled';\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\nimport { JSONUncrush } from 'src/3rd';\n\nconst StyledImportContainer = styled.div`\n    .prompt-alert {\n        margin-bottom: var(--spacing-sm);\n        .alert {\n            color: var(--main-danger);\n        }\n    }\n    .import-container-upload {\n        margin-top: var(--spacing-sm);\n        text-align: center;\n        .import-custom,\n        .import-empty {\n            font-size: var(--fs);\n        }\n        .import-custom {\n            margin-right: var(--spacing);\n        }\n        .option-separator {\n            display: inline-block;\n            margin-right: var(--spacing);\n        }\n        ${StyledActionIconButton} {\n            background-color: var(--main-level-4);\n            border: var(--bw) solid var(--color-contrast);\n            &:hover {\n                background-color: var(--sub-level-4);\n            }\n        }\n    }\n`;\n\nexport type ImportPanelRef = {\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\n};\nexport type ImportPanel = {\n    language: LanguageDataDictionary,\n    allowHotkey: boolean,\n    onImport: (\n        data: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => void,\n    onClose: () => void,\n};\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\n    allowHotkey,\n    language,\n    onImport,\n    onClose,\n}, ref) => {\n    const directUploadId = 'import-direct-upload';\n    const uploadId = 'import-upload';\n    const inputId = 'import-textarea';\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\n    const [inputKey, setInputKey] = useState(0);\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\n    const [visible, setVisible] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const focusInput = useCallback(() => {\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\n        if (target) {\n            target.focus();\n            target.select();\n        }\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (visible) focusInput();\n        }, 100);\n    }, [focusInput, visible]);\n\n    useImperativeHandle(ref, () => ({\n        requestImport: mode => {\n            setMode(mode);\n            setVisible(true);\n        }\n    }));\n\n    const cleanup = () => {\n        setInputKey(cur => cur + 1);\n        setVisible(false);\n        setLoading(false);\n        onClose();\n    };\n    const startImport = async (\n        cardData: string | Record<string, any> | null,\n        imageSurvey = false,\n    ) => {\n        try {\n            if (cardData) {\n                const {\n                    card: decodedCard,\n                    isPartial,\n                } = decodeCard(\n                    cardData,\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\n                );\n\n                if (isPartial) {\n                    notification.info({\n                        message: language['service.decode.partial.message'],\n                        description: language['service.decode.partial.description'],\n                    });\n                }\n\n                /**\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\n                 */\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\n                    const surveyedDecodedCard: Card = { ...decodedCard };\n                    try {\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\n                        if (imgurResponse.status !== 200) {\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\n                        }\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\n\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\n                    } catch (e) {\n                        /** Failing the upload process does not terminate the import process */\n                        console.error('Upload error:', e);\n                        notification.error({\n                            message: language['prompt.import.imgur.message'],\n                            description: language['prompt.import.imgur.description'],\n                        });\n                    }\n                    onImport(surveyedDecodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                } else {\n                    onImport(decodedCard, {\n                        forcePurityCheck: true,\n                        writeOnCurrentCard: mode === 'new' ? false : true,\n                        addToList: mode === 'new',\n                    });\n                }\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        }\n    };\n    const getFileAndImport = (fileList?: FileList | null) => {\n        if (fileList) {\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                const targetFile = fileList.item(cnt);\n                if (!targetFile) continue;\n\n                const reader = new FileReader();\n                reader.onload = ({ target }) => {\n                    if (!target) return;\n\n                    const { result } = target;\n                    if (typeof result !== 'string') return;\n                    startImport(result);\n                };\n                reader.readAsText(targetFile);\n                break;\n            }\n        };\n    };\n    const startRequest = async () => {\n        try {\n            const target = document.getElementById(inputId) as HTMLInputElement;\n            if (target) {\n                const { value } = target;\n                const normalizedValue = value.trim() ?? '';\n                let uncrushedValue = '';\n                try {\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\n                } catch (e) {}\n                let cardData: string | null | Record<string, any> = null;\n\n                /** Potential JSON data */\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\n                    cardData = normalizedValue;\n                }\n                /** Potential crushed data */\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\n                    cardData = JSON.parse(uncrushedValue);\n                }\n                else {\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\n                        /** Potential ygopro deck API */\n                        ? normalizedValue\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\n                    setLoading(true);\n                    const response = await fetch(ygoproDeckApi);\n                    if (!response.ok) {\n                        throw new Error(`Response status: ${response.status}`);\n                    }\n\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\n                        ?? baseCardData.data.sort((l, r) => {\n                            const lMisc = l.misc_info?.[0];\n                            const rMisc = r.misc_info?.[0];\n\n                            if (!lMisc || !rMisc) return 0;\n\n                            /** We prioritize most recently popular card, then all-time popular card */\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\n\n                            return rMisc.views - lMisc.views;\n                        })[0];\n                }\n\n                await startImport(cardData, true);\n            }\n        } catch (e) {\n            console.error('Import error:', e);\n            notification.error({\n                message: language['error.import.error.message'],\n                description: language['error.import.error.description'],\n            });\n        } finally {\n            cleanup();\n        }\n    };\n\n    return <>\n        <Modal\n            visible={visible}\n            title={mode === 'merge'\n                ? language['button.import.merge.label']\n                : language['button.import.label']}\n            className=\"global-overlay\"\n            onCancel={cleanup}\n            okText={language['prompt.import.ok.label']}\n            confirmLoading={loading}\n            cancelButtonProps={{\n                style: { display: 'none' },\n            }}\n            destroyOnClose={false}\n            onOk={startRequest}\n        >\n            <StyledImportContainer>\n                {mode !== 'merge'\n                    ? <div className=\"prompt-alert\">\n                        {language['prompt.import.instruction.line-1']}\n                        <br />\n                        {language['prompt.import.instruction.line-2']}\n                        <br />\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\n                    </div>\n                    : null}\n                <div className=\"import-container-input\">\n                    <Input.TextArea key={`input-${inputKey}`}\n                        id={inputId}\n                        className=\"import-input-raw\"\n                        size=\"small\"\n                        placeholder={language['prompt.import.message']}\n                        disabled={loading}\n                        onPressEnter={startRequest}\n                        rows={4}\n                    />\n                </div>\n                {mode !== 'merge'\n                    ? <div className=\"import-container-upload\">\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                        <StyledActionIconButton\n                            className=\"import-custom\"\n                            onClick={() => {\n                                const target = document.getElementById(uploadId);\n                                if (target) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\n                                type=\"file\"\n                                id={uploadId}\n                                accept=\"application/json\"\n                                className=\"import-upload-input\"\n                                onChange={() => {\n                                    const fileList = ygoCarderImportInputRef.current?.files;\n\n                                    getFileAndImport(fileList);\n                                    cleanup();\n                                }}\n                            />\n                            {language['button.import.tooltip']}\n                        </StyledActionIconButton>\n                        {mode === 'new' && <>\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\n                            <StyledActionIconButton\n                                className=\"import-empty\"\n                                onClick={() => {\n                                    startImport(getEmptyCard());\n                                    cleanup();\n                                }}\n                            >\n                                {language['button.empty.label']}\n                            </StyledActionIconButton>\n                        </>}\n                    </div>\n                    : null}\n            </StyledImportContainer>\n        </Modal>\n        <Tooltip\n            overlay={allowHotkey\n                ? <div className=\"center\">\n                    <div>Ctrl-E / ⌘-E</div>\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\n                </div>\n                : null}\n        >\n            <button\n                className=\"primary-button import-button\"\n                onClick={() => {\n                    setMode('replace');\n                    setVisible(true);\n                }}\n            >\n                {language['button.import.label']}\n            </button>\n        </Tooltip>\n        <Tooltip overlay={language['button.import.tooltip']}>\n            <StyledActionIconButton\n                className=\"secondary-button import-custom\"\n                onClick={() => {\n                    const target = document.getElementById(directUploadId);\n                    if (target) {\n                        target.click();\n                    }\n                }}\n            >\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\n                    type=\"file\"\n                    id={directUploadId}\n                    accept=\"application/json\"\n                    className=\"import-upload-input\"\n                    onChange={() => {\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\n\n                        getFileAndImport(fileList);\n                        cleanup();\n                    }}\n                />\n                <UploadOutlined />\n            </StyledActionIconButton>\n        </Tooltip>\n    </>;\n});\n\nexport const StyledImportDropdownOverlay = styled(Menu)`\n    .ant-dropdown-menu-item {\n        padding: 0;\n    }\n    .import-upload-button {\n        /** Mimic antd */\n        cursor: pointer;\n        padding: 5px 12px;\n        background: transparent;\n        border: none;\n        width: 100%;\n        text-align: left;\n    }\n    .import-upload-input {\n        display: none;\n    }\n`;\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\nexport type UnusedImportButton = ImportPanel & {\n    importData: (\n        event?: {\n            preventDefault: () => void;\n        },\n        fromHotkey?: boolean,\n        directData?: string,\n    ) => void,\n};\nexport const UnusedImportButton = ({\n    language,\n    importData,\n}: UnusedImportButton) => {\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\n\n    return <Dropdown\n        forceRender={true}\n        visible={true}\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\n            {[\n                {\n                    label: language['button.import.for-ygocarder.label'],\n                    id: 'for-ygocarder',\n                    ref: ygoCarderImportDirectInputRef,\n                    // converter: undefined,\n                },\n                {\n                    label: language['button.import.for-other.label'],\n                    id: 'for-other',\n                    ref: otherVendorImportInputRef,\n                    // converter: ygoCarderToCardMakerData,\n                },\n            ].map(({ label, id, ref }) => {\n                return <Menu.Item key={`${id}`}>\n                    <input ref={ref}\n                        type=\"file\"\n                        id={id}\n                        accept=\"application/json\"\n                        className=\"import-upload-input\"\n                        onChange={() => {\n                            const fileList = ref.current?.files;\n                            if (fileList) {\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\n                                    const targetFile = fileList.item(cnt);\n                                    if (!targetFile) continue;\n\n                                    const reader = new FileReader();\n                                    reader.onload = ({ target }) => {\n                                        if (!target) return;\n\n                                        const { result } = target;\n                                        if (typeof result !== 'string') return;\n                                        importData(undefined, false, result);\n                                    };\n                                    reader.readAsText(targetFile);\n                                }\n                            }\n                        }}\n                    />\n                    <button\n                        className=\"import-upload-button\"\n                        type=\"button\"\n                        onClick={() => {\n                            const target = document.getElementById(id);\n                            if (target) {\n                                target.click();\n                            }\n                        }}\n                    >\n                        {label}\n                    </button>\n                </Menu.Item>;\n            })}\n        </StyledImportDropdownOverlay>}\n    >\n        <button className=\"secondary-button import-custom\">\n            <UploadOutlined />\n        </button>\n    </Dropdown>;\n};","export const uploadToImgur = async (imgLink: string) => {\n    const myHeaders = new Headers();\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\n\n    const formdata = new FormData();\n    formdata.append('image', imgLink);\n    formdata.append('type', 'url');\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\n\n    return await fetch('https://api.imgur.com/3/image', {\n        method: 'POST',\n        headers: myHeaders,\n        body: formdata,\n        redirect: 'follow',\n    });\n};","import {\n    frameList,\n    IconList,\n    AttributeList,\n    StickerList,\n    getFoilList,\n    CondenseTolerantLabelMap,\n    NameFontDataMap,\n    NO_ATTRIBUTE,\n    NO_ICON,\n    ArtFinishMap,\n    FinishMap,\n    FoilDictionary,\n    NO_STICKER,\n} from '../../model';\nimport { FrameInfoBlock } from 'src/component';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Tooltip } from 'antd';\n\nexport const FormatButtonList = [\n    {\n        label: 'OCG',\n        value: 'ocg',\n        props: {\n            className: 'ocg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n    {\n        label: 'TCG',\n        value: 'tcg',\n        props: {\n            className: 'tcg-button',\n            style: { fontWeight: 'bold' } as React.CSSProperties\n        },\n    },\n];\n\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\n        value: name,\n        props: {\n            style: {\n                color,\n                fontWeight: 'bold',\n            } as React.CSSProperties,\n        }\n    }));\n};\n\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\n    label,\n    value,\n}));\n\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\n    label: dictionary[labelKey],\n    value,\n}));\n\nexport const ArtFinishButtonList = [\n    { value: 'normal', label: <CloseCircleOutlined /> },\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\n        label,\n        value,\n    })),\n];\n\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\n    label: <FrameInfoBlock\n        labelBackgroundColor={labelBackgroundColor}\n        labelBackgroundColorList={labelBackgroundColorList}\n        nameKey={nameKey}\n    />,\n    value: name,\n    edition,\n}));\n\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\n    .map(({ name, nameKey, isCreative }) => ({\n        label: name === NO_ATTRIBUTE\n            ? <CloseCircleOutlined />\n            : <Tooltip overlay={dictionary[nameKey]}>\n                <img\n                    alt={dictionary[nameKey]}\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\n                />\n                </Tooltip>,\n        value: name,\n        isCreative,\n    }))\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\n\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\n    label: value === NO_ICON\n        ? <CloseCircleOutlined />\n        : <Tooltip overlay={dictionary[nameKey]}>\n            <img\n                alt={dictionary[nameKey]}\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\n            />\n        </Tooltip>,\n    value,\n}));\n\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\n\nexport const StickerButtonList = StickerList.map(({ value }) => ({\n    label: value === NO_STICKER\n        ? <CloseCircleOutlined />\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\n    value,\n}));\n\nexport const CondenseThresholdButtonList = Object\n    .entries(CondenseTolerantLabelMap)\n    .map(([key, { label, order }]) => {\n        return {\n            label,\n            value: key,\n            order\n        };\n    })\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\n// import Moveable from 'react-moveable';\n// import { EllipsisOutlined } from '@ant-design/icons';\nimport { Explanation, StyledPopMarkdown } from 'src/component';\nimport { useLanguage } from 'src/service';\nimport styled from 'styled-components';\n\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\n    //IE support\n    if ((document as any).selection) {\n        target.focus();\n        const sel = (document as any).selection.createRange();\n        sel.text = myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n    //MOZILLA and others\n    else if (target.selectionStart || target.selectionStart === 0) {\n        const startPos = target.selectionStart;\n        const endPos = target.selectionEnd;\n        target.value = target.value.substring(0, startPos)\n            + myValue\n            + target.value.substring(endPos, target.value.length);\n        target.selectionStart = startPos + myValue.length;\n        target.selectionEnd = startPos + myValue.length;\n        target.focus();\n\n        return {\n            value: target.value,\n            position: startPos + myValue.length,\n        };\n    } else {\n        target.value += myValue;\n\n        return {\n            value: target.value,\n            position: 0,\n        };\n    }\n}\n\nconst StyledCharPickerContainer = styled.div`\n    z-index: 10;\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    align-items: center;\n    column-gap: var(--spacing-sm);\n\n    .char-picker {\n        z-index: 1;\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\n        button.ant-btn {\n            padding: 0 var(--spacing-xs);\n        }\n        .handler,\n        .ant-btn {\n            background-color: var(--main-level-1);\n            color: var(--color-heavy);\n            text-shadow: var(--ts);\n            font-family: Segoe UI Symbol, sans-serif;\n            border: 1px solid var(--sub-level-1);\n            border-radius: 0;\n            padding: 0 var(--spacing);\n            + .ant-btn {\n                border-left-width: 0;\n            }\n            &:hover {\n                color: var(--main-active);\n            }\n            &:first-child {\n                border-radius: var(--br) 0 0 var(--br);\n            }\n            &:last-child {\n                border-radius: 0 var(--br) var(--br) 0;\n            }\n        }\n        /** Currently char picker no longer movable */\n        /* .handler {\n            cursor: grabbing;\n            background-color: var(--main-level-2);\n            height: unset;\n            font-size: var(--fs-xl);\n            height: var(--fs-xl);\n            line-height: 1;\n            padding: 0;\n            text-align: center;\n        } */\n    }\n    .moveable-control-box {\n        .moveable-control.moveable-origin,\n        .moveable-line.moveable-direction {\n            border-color: transparent;\n            background: none;\n        }\n    }\n`;\n\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\nexport type CharPicker = {\n    targetId: string,\n    onPick?: (value: string, letter: string) => void,\n}\nexport const CharPicker = ({\n    targetId = '',\n    onPick = () => {},\n}: CharPicker) => {\n    const language = useLanguage();\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\n    const internalOnPick = (letter: string) => {\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\n        if (inputTarget) {\n            const { value } = insertAtCursor(inputTarget, letter);\n\n            onPick(value, letter);\n        }\n    };\n\n    // useEffect(() => {\n    //     setTarget(document.getElementById('char-picker'));\n    // }, []);\n\n    // const onDrag = useCallback(({\n    //     target,\n    //     left, top,\n    //     transform,\n    // }) => {\n    //     target!.style.left = `${left}px`;\n    //     target!.style.top = `${top}px`;\n    //     target!.style.transform = transform;\n    // }, []);\n\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\n        {<div id={'char-picker'} className=\"char-picker\">\n            {/* <div className=\"handler\">\n                <EllipsisOutlined />\n            </div> */}\n            {[\n                '∞',\n                '☆',\n                '★',\n                '●',\n                '©',\n                '™',\n                'Ɐ',\n                'Я',\n                '∅',\n                '※',\n            ].map(entry => {\n                return <button key={entry}\n                    tabIndex={-1}\n                    className=\"ant-btn\"\n                    onClick={() => internalOnPick(entry)}\n                >{entry}</button>;\n            })}\n        </div>}\n        <div className=\"char-picker-guideline\">\n            <Explanation\n                content={<StyledPopMarkdown>\n                    {language['input.char-picker.guide.header']}\n                    <ul>\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\n                    </ul>\n                </StyledPopMarkdown>}\n            />\n        </div>\n        {/* <Moveable\n            target={target}\n            container={null}\n            edge={false}\n            draggable={true}\n            throttleDrag={0}\n            onDrag={onDrag}\n        /> */}\n    </StyledCharPickerContainer>;\n};","import { Button, InputNumber } from 'antd';\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { ChromePicker } from 'react-color';\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\nimport debounce from 'lodash.debounce';\nimport { useLanguage } from 'src/service';\nimport 'react-linear-gradient-picker/dist/index.css';\nimport './gradient-picker.scss';\n\ntype WrappedColorPicker = {\n    disabled?: boolean,\n    color?: string,\n    onSelect?: (color: string, opacity?: number) => void,\n    onOffsetChange?: (id: number, offset: string) => void,\n    onRemove?: (id: number) => void,\n    opacity?: number,\n};\ntype WrappedColorPickerRef = {\n    setColor: (stopColor: ColorPoint) => void,\n    setCurrentOffset: (id: number, offset: string) => void,\n}\nconst WrappedColorPicker = forwardRef(({\n    disabled,\n    color,\n    onSelect,\n    onOffsetChange,\n    onRemove,\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\n    const language = useLanguage();\n    const [internalColor, setInternalColor] = useState(color);\n    const [internalOffset, setInternalOffset] = useState(0);\n    const [internalId, setInternalId] = useState(-1);\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\n\n    useImperativeHandle(ref, () => ({\n        setColor: colorInfo => {\n            if (colorInfo) {\n                const { color, offset, id } = colorInfo;\n                const { min, max, round } = Math;\n    \n                setInternalColor(color);\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n                setInternalId(id);\n            }\n        },\n        setCurrentOffset: (id, offset) => {\n            const { min, max, round } = Math;\n\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\n        }\n    }));\n\n    useEffect(() => {\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\n    }, [internalId, internalOffset, onOffsetChange]);\n\n    return <div className=\"stop-point-control-panel\">\n        <div className=\"stop-point-offset-input\">\n            <div>\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\n                    value={internalOffset}\n                    size=\"small\"\n                    max={100} min={0}\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\n                />\n            </div>\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\n                {language['input.name-style.gradient.color-remove.label']}\n            </Button>\n        </div>\n        <ChromePicker\n            styles={{\n                default: {\n                    picker: {\n                        color: '#000000',\n                        background: 'var(--main-level-3)',\n                        boxShadow: 'none',\n                    },\n                    body: {\n                        padding: 'var(--spacing) var(--spacing)',\n                    }\n                },\n            }}\n            disableAlpha={true}\n            color={internalColor}\n            onChange={color => setInternalColor(color.hex)}\n            onChangeComplete={color => {\n                setInternalColor(color.hex);\n                onSelect?.(color.hex);\n            }}\n        />\n    </div>;\n});\n\nconst MAX_STOP_POINT = 20;\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\n    return {\n        colorList: newColorList,\n        raw: stringifyPalette(newColorList),\n    };\n};\nexport type TextGradientPicker = {\n    palette?: string,\n    angle?: number,\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\n};\nexport const TextGradientPicker = ({\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\n    angle: externalAngle = 180,\n    memoizedOnChange,\n}: TextGradientPicker) => {\n    const language = useLanguage();\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\n    const [angle, setAngle] = useState(externalAngle);\n    const [palette, setPalette] = useState(() => {\n        const intialPalette = parsePalette(externalPalette);\n\n        return {\n            raw: externalPalette,\n            colorList: intialPalette,\n            currentControlId: intialPalette[0]?.id ?? -1,\n        };\n    });\n\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\n\n        return { ...cur, ...getPaletteInfo(nextColorList) };\n    }), []);\n\n    useEffect(() => {\n        setAngle(externalAngle);\n    }, [externalAngle]);\n\n    useEffect(() => {\n        const newPalette = parsePalette(externalPalette);\n\n        setPalette({\n            raw: externalPalette,\n            colorList: newPalette,\n            currentControlId: newPalette[0]?.id ?? -1,\n        });\n    }, [externalPalette]);\n\n    const setPickerOnMount = useRef(false);\n    useEffect(() => {\n        if (palette.colorList[0] && setPickerOnMount.current) {\n            setPickerOnMount.current = true;\n            pickerRef.current?.setColor(palette.colorList[0]);\n        }\n    }, [palette.colorList]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            const { colorList, currentControlId } = palette;\n            if (relevant && currentControlId >= 0) {\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\n\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\n            }\n        }, 100);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette]);\n\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                memoizedOnChange(palette.colorList, angle);\n            }\n        }, 200);\n\n        return () => {\n            relevant = false;\n        };\n    }, [palette, angle, memoizedOnChange]);\n\n    return <div className=\"controls-wrapper gradient-picker-container\">\n        <div className=\"gradient-angle-control\">\n            <h2>\n                {language['input.name-style.gradient.color-point.label']}\n            </h2>\n            <Button\n                size=\"small\"\n                className=\"add-stop-color\"\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\n                onClick={() => {\n                    setPalette(cur => {\n                        const nextColorList = [\n                            ...cur.colorList,\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\n\n                        return {\n                            ...cur,\n                            ...getPaletteInfo(nextColorList)\n                        };\n                    });\n                }}\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\n            <div className=\"angle-picker-container\">\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\n            </div>\n        </div>\n        <div className=\"stop-color-picker-container\">\n            <GradientPicker {...{\n                width: 370,\n                paletteHeight: 32,\n                maxStops: MAX_STOP_POINT,\n                minStops: 2,\n                stopRemovalDrop: 99999,\n                palette: palette.colorList,\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\n                onColorStopSelect: stopColor => {\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\n                    pickerRef.current?.setColor(stopColor);\n                },\n            }}>\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\n                <WrappedColorPicker ref={pickerRef}\n                    disabled={palette.colorList.length <= 1}\n                    onOffsetChange={changePalette}\n                    onRemove={id => {\n                        setPalette(cur => {\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\n                            const nextId = nextColorList?.[0].id ?? -1;\n                            if (nextId > 0 && palette.colorList[nextId]) {\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\n                            }\n\n                            return {\n                                ...getPaletteInfo(nextColorList),\n                                currentControlId: nextId,\n                            };\n                        });\n                    }}\n                />\n            </GradientPicker>\n        </div>\n    </div>;\n};","import { StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\n\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\n    background-color: var(--main-level-4);\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\n    padding: var(--spacing-xxs) var(--spacing-xs);\n    margin: calc(-1 * var(--spacing-xxs)) 0;\n    border-radius: var(--br-lg);\n    box-shadow: var(--bs-button);\n    color: var(--color-heavy);\n    cursor: pointer;\n    ${({ $softMode, $active }) => {\n        return $softMode\n            ? `\n                border: var(--bw) solid var(--main-level-4);\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\n            `\n            : '';\n    }}\n    &:hover {\n        background-color: var(--sub-level-4);\n    }\n`;\n\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(2, 200px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    .alert {\n        grid-column: span 2;\n        font-size: var(--fs-sm);\n        text-align: center;\n    }\n`;\nexport const StyledPatternOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    align-self: center;\n    text-align: center;\n    &:not(.menu-off) {\n        min-height: 23.2px;\n        &.menu-active {\n            outline: var(--bw-lg) solid var(--main-active);\n            &:hover {\n                outline: var(--bw-lg) solid var(--sub-active);\n            }\n        }\n        :hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.menu-off {\n        &:hover {\n            color: var(--main-link);\n            .anticon {\n                color: var(--main-link);\n            }\n        }\n    }\n    img {\n        max-width: 100%;\n        border: var(--bw) solid var(--sub-level-1);\n    }\n`;\n\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\n    display: grid;\n    grid-template-columns: repeat(4, 120px);\n    gap: var(--spacing-sm);\n    padding: var(--spacing-xs);\n    &:focus-visible {\n        outline: none;\n        box-shadow: 0 0 0 2px var(--focus) inset;\n    }\n`;\nexport const StyledPredefinedOption = styled.div`\n    line-height: 0;\n    cursor: pointer;\n    min-height: 26.13px;\n    &.menu-active {\n        outline: var(--bw-lg) solid var(--main-active);\n        &:hover {\n            outline: var(--bw-lg) solid var(--sub-active);\n        }\n    }\n    &.preset-item-focused {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    :hover {\n        outline: var(--bw-lg) solid var(--sub-active);\n    }\n    img {\n        max-width: 100%;\n    }\n`;","import { InputNumber } from 'antd';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport PowerSlider from 'react-input-slider';\nimport { GuardedSlider } from 'src/component';\nimport { DefaultColorList, NameStyle } from 'src/model';\nimport { useLanguage } from 'src/service';\n\nexport type GridSliderInputRef = {\n    setValue: (value: Partial<{\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }>) => void,\n};\nexport type GridSliderInput = {\n    className: string,\n    defaultValue: Partial<NameStyle>,\n    fieldMap: {\n        x: keyof NameStyle,\n        y: keyof NameStyle,\n        width: keyof NameStyle,\n        color: keyof NameStyle,\n    },\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\n    onChange: (value: {\n        x: number;\n        y: number;\n        width: number;\n        color: string;\n    }) => void,\n}\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\n    className,\n    defaultValue,\n    fieldMap,\n    labelMap,\n    onChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        x: xField,\n        y: yField,\n        color: colorField,\n        width: widthField,\n    } = fieldMap;\n    const [value, setValue] = useState(() => {\n        const xValue = defaultValue[xField] as number;\n        const yValue = defaultValue[yField] as number;\n        const colorValue = defaultValue[colorField] as string;\n        const widthValue = defaultValue[widthField] as number;\n\n        return {\n            x: xValue ?? 0,\n            y: yValue ?? 0,\n            width: widthValue ?? 0,\n            color: colorValue,\n        };\n    });\n    const {\n        x,\n        y,\n        color,\n        width,\n    } = value;\n    const widthLabel = labelMap[widthField];\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(value);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on handler */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\n\n            for (const key in keyList) {\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\n                    setValue(cur => ({ ...cur, ...nextValue }));\n                    return;\n                }\n            }\n        },\n    }));\n\n    return <div className={className}>\n        <h2>{language['input.name-style.slider.position.label']}</h2>\n        <div className=\"line-position\">\n            <PowerSlider axis=\"xy\"\n                styles={{\n                    track: {\n                        backgroundColor: 'var(--main-slider)',\n                        width: 100,\n                        height: 100,\n                        gridRow: 'span 3',\n                        position: 'relative',\n                    },\n                    thumb: {\n                        backgroundColor: 'var(--sub-slider)',\n                        zIndex: 10,\n                    },\n                }}\n                xmax={5} xmin={-5}\n                ymax={5} ymin={-5}\n                x={x ?? 0}\n                y={y ?? 0}\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={x}\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\n                    size=\"small\"\n                    value={y}\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\n                />\n            </div>\n            <div className=\"single-slider\">\n                {widthLabel}: <GuardedSlider\n                    value={width}\n                    min={1}\n                    max={10}\n                    onChange={value => {\n                        if (typeof value === 'number') {\n                            setValue(cur => ({ ...cur, width: value }));\n                        }\n                    }}\n                />\n            </div>\n        </div>\n        <h2>{language['input.name-style.slider.color.label']}</h2>\n        <CompactPicker\n            colors={DefaultColorList}\n            color={color}\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\n        />\n    </div>;\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\nimport { getNavigationProps, mergeClass } from 'src/util';\n// import { Tooltip } from 'antd';\n\nexport type PredefinedOptionGridRef = {\n    focus: () => void,\n};\nexport type PredefinedOptionGrid = {\n    active: boolean,\n    value: Partial<NameStyle>,\n    onClick: (value: {\n        key: PresetNameStyle,\n        label: string,\n        image: string,\n        value: Partial<NameStyle>,\n    }) => void,\n    onCancel?: () => void,\n};\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\n    active,\n    value,\n    onClick,\n    onCancel,\n}, ref) => {\n    const containerRef = useRef<HTMLDivElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => containerRef.current?.focus(),\n    }));\n\n    return <StyledPredefinedContainer ref={containerRef}\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: PresetNameStyleList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\n            },\n            onCancel: () => {\n                onCancel?.();\n            }\n        })}\n    >\n        {PresetNameStyleList.map((entry, index) => {\n            const { key, image, label } = entry;\n\n            return <StyledPredefinedOption key={key}\n                className={mergeClass(\n                    'preset-item',\n                    value.preset === key && active ? 'menu-active' : '',\n                    focus === index ? 'preset-item-focused' : '',\n                )}\n                onClick={e => {\n                    e.stopPropagation();\n                    onClick(entry);\n                }}\n            >\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\n                {/* <Tooltip title={label} placement=\"right\"> */}\n                <img\n                    className=\"preset-preview\"\n                    src={`${process.env.PUBLIC_URL}/${image}`}\n                    alt={label}\n                />\n                {/* </Tooltip> */}\n            </StyledPredefinedOption>;\n        })}\n    </StyledPredefinedContainer>;\n});","import { Checkbox, Popover } from 'antd';\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\nimport { CompactPicker } from 'react-color';\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport {\n    PresetNameStyleMap,\n    NameStyle,\n    NameStyleType,\n    PatternList,\n    FrameInfo,\n    DefaultColorList,\n} from '../../../model';\nimport debounce from 'lodash.debounce';\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\nimport { TextGradientPicker } from './gradient-picker';\nimport { getNameFontOptionList } from '../const';\nimport { StyledDropdown } from 'src/component';\nimport {\n    StyledPatternContainer,\n    StyledPatternOption,\n    StyledPickerButton,\n} from './style-picker.styled';\nimport { useLanguage, useSetting } from 'src/service';\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\nimport './style-picker.scss';\n\nexport type NameStylePickerRef = {\n    setValue: (value: Partial<NameStyle>) => void,\n};\nexport type NameStylePicker = {\n    frameInfo?: FrameInfo,\n    defaultType: NameStyleType,\n    defaultValue: Partial<NameStyle>,\n    showExtraDecorativeOption: boolean,\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\n};\nexport const NameStylePicker = forwardRef(({\n    frameInfo,\n    defaultType,\n    defaultValue,\n    showExtraDecorativeOption,\n    onChange: undebouncedOnChange,\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\n    const language = useLanguage();\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\n    const [focus, setFocus] = useState(-1);\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\n    const [type, setType] = useState(defaultType);\n    const [value, setValue] = useState(defaultValue);\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\n        customStyleSignal();\n    }, [customStyleSignal]);\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\n\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\n\n    useEffect(() => {\n        if (sendCustomStyleSignal !== 0) {\n            setType('custom');\n            onChange('custom', value);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [sendCustomStyleSignal]);\n\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\n\n    useImperativeHandle(ref, () => ({\n        setValue: nextValue => {\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\n\n            const {\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\n            } = nextValue;\n            shadowPickeRef.current?.setValue({\n                x: shadowOffsetX, y: shadowOffsetY,\n                width: shadowBlur, color: shadowColor,\n            });\n            outlinePickeRef.current?.setValue({\n                x: lineOffsetX, y: lineOffsetY,\n                width: lineWidth, color: lineColor,\n            });\n        },\n    }));\n    const {\n        fillStyle,\n        headTextFillStyle,\n        hasOutline,\n        hasShadow,\n        hasGradient, gradientColor, gradientAngle,\n        pattern,\n        font,\n    } = value;\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\n    const patternStyle = {\n        background: labelBackgroundColor,\n        backgroundImage: labelBackgroundImage,\n    };\n    const isStyleCustom = type === 'custom';\n    const isStylePredefined = type === 'predefined';\n    const optionInputContainerId = 'name-style-option-input-container';\n    const applyAutoStyle = () => {\n        setType('auto');\n        if (type !== 'auto') onChange('auto', value);\n    };\n    const applyPredefinedStyle = () => {\n        const presetValue = value.preset\n            ? PresetNameStyleMap[value.preset]?.value\n            : {};\n        setType('predefined');\n        setValue(cur => ({ ...cur, ...presetValue }));\n        onChange('predefined', { ...value, ...presetValue });\n    };\n    const applyCustomStyle = () => {\n        setType('custom');\n        if (type !== 'custom') onChange('custom', value);\n    };\n    return <div className=\"ant-input-group-wrapper text-style-input\">\n        <span className=\"ant-input-wrapper ant-input-group\">\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\n            <span className=\"name-style-input-container\">\n                <div\n                    id={optionInputContainerId}\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\n                    {...getNavigationProps({\n                        setFocus,\n                        optionLength: 3,\n                        onKeyPress: e => {\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\n                                e.preventDefault();\n                                setFocus(1);\n                                setPredefinedDropdownVisible(true);\n                                /** Popover takes time to mount / become visible */\n                                setTimeout(() => {\n                                    if (focus === 1) optionGridRef.current?.focus();\n                                }, 200);\n\n                                return false;\n                            }\n                        },\n                        onTrigger() {\n                            if (focus === 0) applyAutoStyle();\n                            if (focus === 1) applyPredefinedStyle();\n                            if (focus === 2) applyCustomStyle();\n                        },\n                    })}\n                >\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            type === 'auto' && 'ant-radio-wrapper-checked',\n                            focus === 0 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyAutoStyle()}\n                    >\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\n                            <span className=\"ant-radio-inner\" />\n                        </span>\n                        <span className=\"ant-radio-label\">\n                            {language['input.name-style.type.auto.label']}\n                        </span>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStylePredefined && 'ant-radio-wrapper-checked',\n                            focus === 1 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyPredefinedStyle()}\n                    >\n                        <Popover\n                            visible={predefinedDropdownVisible}\n                            onVisibleChange={setPredefinedDropdownVisible}\n                            trigger={['hover', 'click']}\n                            placement=\"bottomLeft\"\n                            overlayClassName=\"predefined-picker-overlay\"\n                            content={<div className=\"overlay-event-absorber\">\n                                <PredefinedOptionGrid ref={optionGridRef}\n                                    active={isStylePredefined}\n                                    value={value}\n                                    onCancel={() => {\n                                        setPredefinedDropdownVisible(false);\n                                        document.getElementById(optionInputContainerId)?.focus();\n                                    }}\n                                    onClick={({ key }) => {\n                                        const presetValue = key\n                                            ? PresetNameStyleMap[key]?.value\n                                            : {};\n                                        setType('predefined');\n                                        setValue(cur => ({ ...cur, ...presetValue }));\n                                        onChange('predefined', { ...value, ...presetValue });\n                                    }}\n                                />\n                            </div>}\n                        >\n                            <span className=\"name-style-option-label\">\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\n                                    <span className=\"ant-radio-inner\" />\n                                </span>\n                                <span className=\"ant-radio-label\">\n                                    {language['input.name-style.type.predefined.label']}\n                                </span>\n                            </span>\n                        </Popover>\n                    </label>\n                    <span className=\"name-style-option-break\" />\n                    <label\n                        className={mergeClass(\n                            'ant-radio-wrapper',\n                            isStyleCustom && 'ant-radio-wrapper-checked',\n                            focus === 2 && 'ant-radio-focused',\n                        )}\n                        onClick={() => applyCustomStyle()}\n                    >\n                        <span>\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\n                                <span className=\"ant-radio-inner\" />\n                            </span>\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\n                                {language['input.name-style.type.custom.label']}\n                            </span>\n                        </span>\n                    </label>\n                </div>\n                <div className=\"style-picker\">\n                    <Popover key=\"color-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.text.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={fillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                                <hr />\n                                <div className=\"custom-style-text\">\n                                    <h3>\n                                        {language['input.name-style.color.ruby.label']}\n                                    </h3>\n                                    <CompactPicker\n                                        colors={DefaultColorList}\n                                        color={headTextFillStyle}\n                                        onChangeComplete={color => {\n                                            setType('custom');\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\n                                            customStyleSignal();\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.shadow.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\n                                    className=\"custom-style-shadow\"\n                                    fieldMap={{\n                                        color: 'shadowColor',\n                                        width: 'shadowBlur',\n                                        x: 'shadowOffsetX',\n                                        y: 'shadowOffsetY',\n                                    }}\n                                    labelMap={{\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            shadowBlur: width,\n                                            shadowColor: color,\n                                            shadowOffsetX: x,\n                                            shadowOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasShadow}\n                            className=\"picker-dropdown shadow-picker-dropdown\"\n                        >\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"outline-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.outline.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\n                                    className=\"custom-style-line\"\n                                    fieldMap={{\n                                        color: 'lineColor',\n                                        width: 'lineWidth',\n                                        x: 'lineOffsetX',\n                                        y: 'lineOffsetY',\n                                    }}\n                                    labelMap={{\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\n                                    }}\n                                    defaultValue={value}\n                                    onChange={({ color, width, x, y }) => {\n                                        setValue(cur => ({\n                                            ...cur,\n                                            lineWidth: width,\n                                            lineColor: color,\n                                            lineOffsetX: x,\n                                            lineOffsetY: y,\n                                        }));\n                                        customStyleSignal();\n                                    }}\n                                />}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasOutline}\n                            className=\"picker-dropdown outline-picker-dropdown\"\n                        >\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <div className={'custom-style-picker'}>\n                                <h3 className=\"custom-style-expand\">\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\n                                        setType('custom');\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\n                                        customStyleSignal();\n                                    }}>\n                                        {language['input.name-style.gradient.toggle.label']}\n                                    </Checkbox>\n                                </h3>\n                                {hasGradient && <div className=\"custom-style-gradient\">\n                                    <TextGradientPicker\n                                        angle={gradientAngle}\n                                        palette={gradientColor}\n                                        memoizedOnChange={memoizedOnGradientChange}\n                                    />\n                                </div>}\n                            </div>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && hasGradient}\n                            className=\"picker-dropdown gradient-picker-dropdown\"\n                        >\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\n                        </StyledPickerButton>\n                    </Popover>}\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\n                                <div className=\"alert\">\n                                    {language['input.name-style.pattern.alert']}\n                                </div>\n                                {PatternList.map(({ key, patternImage }) => {\n                                    return <StyledPatternOption key={key}\n                                        className={[\n                                            'pattern-option',\n                                            value.pattern === key ? 'menu-active' : '',\n                                            patternImage ? '' : 'menu-off',\n                                        ].join(' ')}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, pattern: key }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {patternImage\n                                            ? <img\n                                                style={patternImage ? patternStyle : {}}\n                                                className=\"pattern-image\"\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\n                                                alt={key}\n                                            />\n                                            : <>\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\n                                            </>}\n                                    </StyledPatternOption>;\n                                })}\n                            </StyledPatternContainer>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton\n                            $softMode={reduceColorMotion}\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\n                            className=\"picker-dropdown pattern-picker-dropdown\"\n                        >\n                            {language['input.name-style.pattern.label']}\n                        </StyledPickerButton>\n                    </Popover>}\n                    <Popover key=\"font-picker\"\n                        trigger={['click']}\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledDropdown.Container>\n                                {fontList.map(({ value: fontValue, label }) => {\n                                    return <StyledDropdown.Option key={fontValue}\n                                        className={font === fontValue ? 'menu-active' : ''}\n                                        onClick={() => {\n                                            setValue(cur => ({ ...cur, font: fontValue }));\n                                            customStyleSignal();\n                                        }}\n                                    >\n                                        {label}\n                                    </StyledDropdown.Option>;\n                                })}\n                            </StyledDropdown.Container>\n                        </div>}\n                        placement=\"bottomLeft\"\n                    >\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\n                            {language['input.name-style.font.label']}\n                        </StyledPickerButton>\n                    </Popover>\n                </div>\n            </span>\n        </span>\n    </div>;\n});\n","import { useCallback, useState } from 'react';\n\nexport const useRefresh = (): [() => void, number] => {\n    const [cnt, setCnt] = useState(0);\n    const refresh = useCallback(() => {\n        setCnt(cur => cur + 1);\n    }, []);\n\n    return [refresh, cnt];\n};","import { css } from 'styled-components';\n\nexport const TrainGridStyle = css`\n    .checkbox-train-input-group,\n    .radio-train-input-group {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tcolumn-gap: var(--spacing-xs);\n\t\trow-gap: var(--spacing-xs);\n\t\tbox-shadow: none;\n\t\tborder-radius: 0;\n\t\t&:focus-visible {\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\n\t\t}\n\t\t.ant-radio-button-wrapper:first-child,\n\t\t.ant-radio-button-wrapper:last-child {\n\t\t\tborder-radius: 0;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1;\n\t\t\twhite-space: nowrap;\n\t\t\tborder: none;\n\t\t\tbox-shadow: var(--bs-1);\n\t\t\tpadding: 0;\n\t\t\tmin-width: 90px;\n\t\t\theight: 28px;\n\t\t\tline-height: 28px;\n\t\t\ttext-align: center;\n\t\t\ttext-shadow: none;\n\t\t\tfont-size: var(--fs-sm);\n\t\t\t&:hover {\n\t\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\t\toutline-offset: var(--bw);\n\t\t\t}\n\t\t\t&::before {\n\t\t\t\tdisplay: none;\n\t\t\t}\n\t\t}\n\t\t.ant-radio-button-wrapper-checked {\n\t\t\toutline: var(--bw) solid var(--main-active);\n\t\t\toutline-offset: var(--bw);\n\t\t}\n\t}\n`;","import { useCard, useSetting } from 'src/service';\nimport { useCallback, useMemo } from 'react';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { tcgToOCGTermMap } from 'src/model';\nimport { TrainGridStyle } from './input-train.styled';\nimport { RadioTrain } from 'src/component';\n\nconst StyledFrameTrain = styled(RadioTrain)`\n\t${TrainGridStyle}\n`;\n\nexport type FrameTrain = {\n    onSTFrameChange: (value: string[]) => void,\n};\nexport const FrameTrain = ({\n    onSTFrameChange,\n}: FrameTrain) => {\n    const {\n        setting,\n    } = useSetting();\n    const { showExtraDecorativeOption } = setting;\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    const {\n        frame,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        frame: card.frame,\n        setCard,\n    })));\n    const changeFrame = useCallback((frameValue: number | string) => {\n        setCard(currentCard => {\n            const {\n                typeAbility,\n                isPendulum,\n                attribute,\n                format,\n            } = currentCard;\n            const nextFrame = `${frameValue}`;\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\n            const termMap = format === 'tcg'\n                ? {\n                    'Spell Card': 'Spell Card',\n                    'Trap Card': 'Trap Card',\n                }\n                : tcgToOCGTermMap;\n            const newTypeAbility = nextFrame === 'spell'\n                ? [termMap['Spell Card']]\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\n            if (isST) onSTFrameChange(newTypeAbility);\n\n            return {\n                ...currentCard,\n                frame: nextFrame,\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\n                isLink: nextFrame === 'link' ? true : false,\n                attribute: isST\n                    ? `${nextFrame}`.toUpperCase()\n                    : attribute,\n                typeAbility: newTypeAbility,\n            };\n        });\n    }, [setCard, onSTFrameChange]);\n\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\n};","import styled from 'styled-components';\nimport { useState } from 'react';\nimport { getNavigationProps } from 'src/util';\nimport { InputTrainStyle } from 'src/component';\n\nconst StyledCheckboxTrainContainer = styled.div`\n    ${InputTrainStyle}\n`;\nexport type CheckboxTrain = {\n    className?: string,\n    value: string[],\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\n    onChange: (value: (string | number)[]) => void,\n    children?: React.ReactNode,\n}\nexport const CheckboxTrain = ({\n    onChange,\n    value: activeValue,\n    optionList,\n    children,\n    className,\n}: CheckboxTrain) => {\n    const [focus, setFocus] = useState(-1);\n    const optionLength = optionList.length;\n\n    return <StyledCheckboxTrainContainer\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\n    >\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\n        <div\n            className=\"checkbox-train-input-group\"\n            {...getNavigationProps({\n                setFocus,\n                optionLength,\n                onTrigger: () => {\n                    const target = optionList[focus];\n                    if (target) {\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\n                            : [...activeValue, `${target.value}`]);\n                    }\n                },\n            })}\n        >\n            {optionList.map((entry, index) => {\n                const { label, value, props } = entry;\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\n\n                return <label key={value}\n                    {...props}\n                    className={[\n                        'ant-radio-button-wrapper',\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\n                        focus === index ? 'checkbox-train-focused' : '',\n                    ].join(' ')}\n                    onClick={() => {\n                        onChange(isChecked\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\n                            : [...activeValue, `${value}`]);\n                    }}\n                >\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\n                        <span className=\"ant-radio-button-inner\"></span>\n                    </span>\n                    <span className=\"label\">{label}</span>\n                </label>;\n            })}\n        </div>\n    </StyledCheckboxTrainContainer>;\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageCropper = styled(ImageCropper)`\n    display: grid;\n    grid-template-columns: max-content max-content;\n    align-items: start;\n    gap: 0;\n    .card-image-source-input {\n        display: flex;\n        flex-direction: column-reverse;\n        .online-image-tip {\n            text-align: center;\n        }\n    }\n    .card-cropper {\n        width: 375px;\n        text-align: center;\n    }\n`;\n\nexport type BackgroundInputGroupRef = {\n    hasImage: () => boolean,\n    setValue: (value: {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type BackgroundInputGroup = {\n    children?: React.ReactNode,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\n    backgroundColor,\n    children,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n            isPendulum,\n            opacity,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\n        isPendulum,\n        opacity,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            backgroundFit: status,\n        };\n    }), [setCard]);\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                backgroundCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\n            if (backgroundSource === 'offline') {\n                if (typeof backgroundData === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\n                }\n            } else {\n                if (typeof background === 'string' && backgroundCrop) {\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\n                }\n            }\n        }\n    }));\n\n    return <StyledImageCropper\n        ref={imageCropperRef}\n        title={language['input.background-image.label']}\n        backgroundColor={backgroundColor}\n        defaultSourceType={backgroundSource}\n        defaultInternalSource={backgroundData}\n        defaultExternalSource={background}\n        defaultCropInfo={backgroundCrop}\n        receivingCanvas={receivingCanvas}\n        forceFit={backgroundFit}\n        onSourceChange={(type, data) => {\n            changeBackgroundSource(type);\n            if (type === 'offline') changeBackgroundData(data);\n            else changeBackground(data);\n        }}\n        onCropChange={changeBackgroundCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeBackgroundFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).backgroundRatio}\n        beforeCropper={null}\n    >\n        {children}\n    </StyledImageCropper>;\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { CompactPicker } from 'react-color';\nimport {\n    BackgroundType,\n    getBackgroundTypeList,\n    CardOpacity,\n    DEFAULT_BASE_FILL_COLOR,\n    OpacityList,\n    getDefaultCardOpacity,\n    DefaultColorList,\n} from 'src/model';\nimport styled from 'styled-components';\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { BorderOuterOutlined } from '@ant-design/icons';\nimport './layout-picker.scss';\n\nconst StyledBoundlessOverlay = styled.span`\n    white-space: pre-line;\n`;\nconst StyledLayoutPickerContainer = styled.div`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    padding: 2px 0;\n    align-items: center;\n    .slider-label,\n    .ant-slider,\n    .slider-padding {\n        border: var(--bw) solid var(--sub-level-1);\n        background-color: var(--main-level-4);\n    }\n    .slider-label {\n        display: inline-flex;\n        column-gap: var(--spacing-xs);\n        border-right: none;\n        padding: var(--spacing-xxs) var(--spacing-xs);\n        border-radius: var(--br) 0 0 var(--br);\n        box-shadow: var(--bs-input);\n        .ant-checkbox-wrapper {\n            transform: translateY(-1px); // Alignment\n        }\n    }\n    .ant-slider {\n        margin: 0;\n        border-left: none;\n        border-right: none;\n        height: 28px; // Alignment\n        padding-top: 11px; // Alignment\n    }\n    .slider-padding {\n        border-left: none;\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .ant-slider-rail,\n    .ant-slider-track {\n        border-radius: 0 var(--br) var(--br) 0;\n    }\n    .card-opacity-slider {\n        flex: 0 1 auto;\n        display: grid;\n        grid-template-columns: max-content 60px 45px 12px;\n        &.inactive {\n            .slider-label,\n            .ant-slider,\n            .slider-padding {\n                background-color: var(--main-level-3);\n            }\n        }\n    }\n    .ant-input-number.ant-input-number-sm {\n        height: 28px; // Alignment\n        width: unset;\n        border-radius: 0;\n        box-shadow: var(--bs-input);\n        .ant-input-number-input {\n            height: 26px; // Alignment\n        }\n    }\n    .background-preview {\n        display: inline-block;\n        line-height: 0;\n        width: 17px;\n        height: 17px; // Alignment\n        align-self: center;\n        border: 1px solid #333333;\n        cursor: pointer;\n        text-align: center;\n        user-select: none;\n        &:hover {\n            box-shadow: 0 0 2px 0 #222222;\n        }\n        .background-preview-callback-passer {\n            width: 100%;\n            height: 100%;\n        }\n        .background-image-preview {\n            max-width: 15px;\n            max-height: 15px;\n        }\n        .no-background-icon {\n            font-size: 15px; // Alignment\n        }\n    }\n`;\nconst StyledBaseFillPickerContainer = styled.div`\n    --input-width: 315px;\n    &.overlay-no-background-image {\n        .card-image-cropper {\n            grid-template-columns: 1fr;\n        }\n        .card-cropper {\n            min-height: 0;\n            line-height: 0;\n            width: 0;\n            visibility: hidden;\n            position: absolute;\n        }\n        .card-image-source-input {\n            padding-right: 0;\n            margin-right: 0;\n            border-right: none;\n        }\n        i {\n            max-width: var(--input-width); // Alignment\n        }\n    }\n    i {\n        display: inline-block;\n        font-size: var(--fs-sm);\n        color: var(--color);\n        font-weight: normal;\n    }\n    .background-picker {\n        padding: var(--spacing-xs);\n        /** No display none here, again we want to keep card cropper painted, just not visible */\n        &.overlay-no-background {\n            visibility: hidden;\n            height: 0;\n            width: 0;\n            padding: 0;\n        }\n        .card-image-input {\n            text-align: center;\n            max-width: var(--input-width);\n        }\n    }\n    .card-image-source-input {\n        height: 100%;\n        justify-content: start;\n        padding-right: var(--spacing-xs);\n        margin-right: var(--spacing-xs);\n        border-right: var(--bw) solid var(--sub-level-4);\n        .type-section h2 {\n            margin-top: var(--spacing-xs);\n        }\n        .background-type-picker {\n            .radio-train-input-group {\n                display: grid;\n            }\n            .ant-radio-button-wrapper {\n                border-left: var(--bw) solid var(--sub-level-1);\n            }\n        }\n        .color-section h2 {\n            padding-top: 0;\n            padding-left: 0;\n        }\n    }\n    .color-section {\n        > h2 + div {\n            > div:first-child {\n                box-shadow: none !important; // Override inline style\n            }\n            > div:nth-child(2) {\n                border: var(--bw) solid var(--main-level-1);\n            }\n        }\n    }\n`;\n\nexport type LayoutPicker = {\n    defaultValue: Partial<CardOpacity>,\n    onChange: (opacity: CardOpacity) => void,\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\nexport type OpacityPickerRef = {\n    setValue: (opacity: Partial<CardOpacity> & {\n        background?: string,\n        backgroundData?: string,\n        backgroundSource?: string,\n        backgroundCrop?: Partial<ReactCrop.Crop>,\n        backgroundType?: BackgroundType,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\n    receivingCanvas,\n    defaultValue,\n    onTainted,\n    onChange,\n    onSourceLoaded,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            background,\n            backgroundData,\n            backgroundSource,\n            backgroundType,\n            hasBackground,\n            isPendulum,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        background,\n        backgroundData,\n        backgroundSource,\n        backgroundType,\n        getUpdater,\n        hasBackground,\n        isPendulum,\n        setCard,\n    })));\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\n\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n\n        return { ...currentCard, hasBackground: nextValue };\n    }), [setCard]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                onChange(opacity);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [opacity]);\n\n    useEffect(() => {\n        /** Force render, otherwise we will miss the image */\n        setBackgroundInputVisible(false);\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\n        setTimeout(() => {\n            setBackgroundInputHidden(false);\n        }, 250);\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\n            }\n            for (const key in newValue) {\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\n                    setOpacity(cur => {\n                        return { ...cur, ...newValue };\n                    });\n                }\n            }\n        }\n    }));\n\n    const noBackground = (background ?? '').length === 0\n        && (backgroundInputRef.current?.hasImage() !== true);\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\n        <Tooltip\n            overlayClassName=\"long-tooltip-overlay\"\n            title={<StyledBoundlessOverlay>\n                {language['input.opacity.boundless.tooltip']}\n            </StyledBoundlessOverlay>}\n        >\n            <Checkbox\n                className=\"art-frame\"\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\n                checked={opacity.boundless}\n            >\n                {language['input.opacity.boundless.label']}\n            </Checkbox>\n        </Tooltip>\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\n            if (type === 'pendulum' && !isPendulum) return null;\n            const activable = !!subType;\n            const isActive = subType && opacity[subType];\n            return <div key={type}\n                className={[\n                    'card-opacity-slider',\n                    isActive ? '' : 'inactive',\n                ].join(' ')}\n            >\n                <div className=\"slider-label\">\n                    {type === 'body' && <Popover\n                        visible={backgroundInputVisible}\n                        destroyTooltipOnHide={false}\n                        trigger={['click']}\n                        onVisibleChange={setBackgroundInputVisible}\n                        overlayClassName={[\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\n                            backgroundInputVisible ? 'picker-visible' : '',\n                            backgroundInputHidden ? 'picker-hidden' : '',\n                        ].join(' ')}\n                        content={<div className=\"overlay-event-absorber\">\n                            <StyledBaseFillPickerContainer\n                                className={[\n                                    'custom-style-picker',\n                                    noBackground ? 'overlay-no-background-image' : ''\n                                ].join(' ')}\n                            >\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\n                                    <Checkbox\n                                        checked={hasBackground}\n                                        onChange={e => {\n                                            changeHasBackground(e);\n                                        }}\n                                    >{language['input.background.toggle-label']}</Checkbox>\n                                    <br />\n                                    <i>{language['input.background.description']}</i>\n                                </h3>\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\n                                    <BackgroundInputGroup\n                                        ref={backgroundInputRef}\n                                        receivingCanvas={receivingCanvas}\n                                        onSourceLoaded={onSourceLoaded}\n                                        onTainted={onTainted}\n                                        onCropChange={onCropChange}\n                                        backgroundColor={opacity.baseFill}\n                                    >\n                                        <div className=\"layout-picker-panel\">\n                                            <div className=\"layout-picker-subpanel color-section\">\n                                                <h2>{language['input.background-color.label']}</h2>\n                                                <CompactPicker\n                                                    colors={DefaultColorList}\n                                                    color={opacity.baseFill}\n                                                    onChangeComplete={color => {\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\n                                                    }}\n                                                />\n                                            </div>\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\n                                                <h2>{language['input.background-type.label']}</h2>\n                                                <RadioTrain\n                                                    className=\"background-type-picker\"\n                                                    onChange={changeBackgroundType}\n                                                    optionList={getBackgroundTypeList({\n                                                        fit: language['input.background-type.fit.label'],\n                                                        full: language['input.background-type.full.label'],\n                                                        frame: language['input.background-type.frame.label'],\n                                                    })}\n                                                    value={backgroundType}\n                                                />\n                                            </div>}\n                                        </div>\n                                    </BackgroundInputGroup>\n                                </div>\n                            </StyledBaseFillPickerContainer>\n                        </div>}\n                        placement=\"bottom\"\n                    >\n                        <div\n                            className=\"background-preview\"\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\n                        >\n                            <Tooltip overlay={language['input.background.toolip']}>\n                                <div className=\"background-preview-callback-passer\">\n                                    {hasBackground\n                                        ? background\n                                            ? <img\n                                                className=\"background-image-preview\"\n                                                src={backgroundSource === 'online'\n                                                    ? background\n                                                    : backgroundData}\n                                                alt=\"Background\"\n                                            />\n                                            : null\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\n                                </div>\n                            </Tooltip>\n                        </div>\n                    </Popover>}\n                    {activable && <Tooltip\n                        title={tooltipKey\n                            ? language[tooltipKey] ?? null\n                            : null}\n                        overlayClassName=\"long-tooltip-overlay\"\n                    >\n                        <Checkbox\n                            checked={isActive}\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\n                        />\n                    </Tooltip>}\n                    {language[labelKey]}\n                </div>\n                <InputNumber\n                    size=\"small\"\n                    min={0}\n                    max={100}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\n                    value={opacity[type] ?? 100}\n                />\n                <GuardedSlider\n                    min={0}\n                    max={100}\n                    step={5}\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\n                    value={opacity[type] ?? 100}\n                />\n                <div className=\"slider-padding\" />\n            </div>;\n        })}\n    </StyledLayoutPickerContainer>;\n});","import { Input, Popover } from 'antd';\nimport { RadioTrain, StyledDropdown } from 'src/component';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\nimport { StarButtonList, getSTIconButtonList } from '../const';\nimport { checkDarkSynchro, checkXyz } from 'src/util';\nimport styled from 'styled-components';\nimport { IconTypeList, IconTypeMap } from 'src/model';\n\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\n    img.icon-image {\n        width: var(--fs-lg);\n    }\n`;\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\n    .custom-star-input {\n        width: 6.5rem;\n    }\n    .checkbox-star-suffix {\n        display: flex;\n        flex-wrap: wrap;\n        column-gap: var(--spacing-sm);\n        row-gap: var(--spacing-xxs);\n        margin-left: var(--spacing-sm);\n    }\n`;\n\nexport type CardIconInputGroupRef = {}\nexport type CardIconInputGroup = {\n    isLink: boolean,\n    isMonster: boolean,\n    showCreativeOption: boolean,\n};\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\n    isLink,\n    isMonster,\n    showCreativeOption,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            subFamily,\n            cardIcon,\n            star,\n            starAlignment,\n        },\n        getUpdater,\n    }) => ({\n        frame,\n        subFamily,\n        cardIcon,\n        star,\n        starAlignment,\n        getUpdater,\n    })));\n    const isDarkSynchro = checkDarkSynchro({ frame });\n    const isXyz = checkXyz({ frame });\n\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({}));\n\n    const iconTypeData = cardIcon === 'auto'\n        ? IconTypeMap[isMonster\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\n            : 'st'\n        ]\n        : IconTypeMap[cardIcon];\n    const iconDropdownText = language[iconTypeData.labelKey];\n    const IconDropdownLabel = showCreativeOption\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\n        : iconDropdownText;\n    const IconDropdown = <Popover key=\"icon-type-picker\"\n        trigger={['click']}\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledIconDropdown>\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\n                    return <StyledDropdown.Option key={value}\n                        className={value === cardIcon ? 'menu-active' : ''}\n                        onClick={() => changeCardIcon(value)}\n                    >\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\n                    </StyledDropdown.Option>;\n                })}\n            </StyledIconDropdown>\n        </div>}\n        placement=\"bottomRight\"\n    >\n        <span\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\n        >\n            {IconDropdownLabel}\n        </span>\n    </Popover>;\n    const DropdownChildren = showCreativeOption\n        ? IconDropdown\n        : IconDropdownLabel;\n    return !isLink\n        ? iconTypeData.value === 'st'\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\n                {DropdownChildren}\n            </RadioTrain>\n            : <StyledCheckboxStarTrain\n                className=\"checkbox-star-train\"\n                value={star}\n                onChange={changeStar}\n                optionList={StarButtonList}\n                strict={true}\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\n                    <Input\n                        className=\"custom-star-input\"\n                        value={typeof star === 'number' ? '' : star}\n                        allowClear\n                        onChange={changeStar}\n                        placeholder={language['input.icon-type.custom.placeholder']}\n                    />\n                    <RadioTrain\n                        value={starAlignment}\n                        onChange={changeStarAlignment}\n                        optionList={[\n                            {\n                                value: 'auto',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\n                                label: <CloseCircleOutlined />,\n                            },\n                            {\n                                value: 'left',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\n                                label: <AlignLeftOutlined />,\n                            },\n                            {\n                                value: 'center',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\n                                label: <AlignCenterOutlined />,\n                            },\n                            {\n                                value: 'right',\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\n                                label: <AlignRightOutlined />,\n                            },\n                        ]}\n                    />\n                </div>}\n            >\n                {DropdownChildren}\n            </StyledCheckboxStarTrain>\n        : null;\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\nexport const resolveHotkey = (\n    value: string,\n    key: string,\n    selectionStart: number,\n    selectionEnd: number,\n    allowNewLine: boolean,\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\n) => {\n    const selectedText = value.substring(selectionStart, selectionEnd);\n    const nextLetter = value[selectionEnd];\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\n    let wrappedText = selectedText;\n    let cursorOffset = 2;\n    switch (key) {\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\n            cursorOffset = keepInline ? 2 : 3;\n            break;\n        case '2': wrappedText = `{${selectedText}}`; break;\n        case '3': wrappedText = `{${selectedText}|}`; break;\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\n    }\n    const joinedText = value.substring(0, selectionStart)\n        + `${wrappedText}`\n        + value.substring(selectionEnd, value.length);\n\n    onResult(joinedText, selectionEnd + cursorOffset);\n};\n\nexport const placeCursorInInput = ({\n    id,\n    placement,\n}: {\n    id: string;\n    placement: number;\n}) => {\n    if (id && placement >= 0) {\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\n\n        if (target && (target.selectionEnd ?? -1) >= 0) {\n            target.selectionEnd = placement;\n        }\n    }\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { TextAreaProps } from 'antd/lib/input';\n\nconst { TextArea } = Input;\nexport type CardTextAreaRef = {\n    setValue: (nextValue: string) => void,\n    getPickerRef: () => null | {\n        id: string, \n        setValue: (nextValue: string) => void;\n    },\n};\nexport type CardTextArea = {\n    allowHotkey?: boolean,\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: { target: { value: string } }) => void,\n} & Partial<TextAreaProps>;\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\n    id,\n    allowHotkey,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== immediateValue.current) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\n    }));\n\n    return <TextArea\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        spellCheck={false}\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    true,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={internalOnChange}\n        {...rest}\n    />;\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\nimport { Input } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { InputProps } from 'antd/lib/input';\nimport { useSetting } from 'src/service';\n\nexport type CardTextInputRef = {\n    setValue: (nextValue: string) => void,\n};\nexport type CardTextInput = {\n    defaultValue: string,\n    onTakePicker?: (ref: {\n        id: string, \n        setValue: (nextValue: string) => void;\n    }) => void,\n    onChange: (e: {target: { value: string }}) => void,\n} & Partial<InputProps>;\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\n    id,\n    defaultValue,\n    onTakePicker,\n    onChange,\n    onKeyDown,\n    className,\n    ...rest\n}, ref) => {\n    const { setting } = useSetting();\n    const { allowHotkey } = setting;\n    const immediateValue = useRef(defaultValue);\n    const [value, setValue] = useState(defaultValue);\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\n        immediateValue.current = normalizedValue;\n        setValue(normalizedValue);\n    }, []);\n\n    useEffect(() => {\n        placeCursorInInput(cursorData);\n    }, [cursorData]);\n\n    useEffect(() => {\n        onChange({ target: { value } });\n    /** No need to depend on callback */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [value]);\n\n    const externalSetValue = (nextValue: string) => {\n        if (nextValue !== value) {\n            internalOnChange(nextValue);\n        }\n    };\n    useImperativeHandle(ref, () => ({\n        setValue: externalSetValue,\n    }));\n\n    return <Input\n        id={id}\n        autoComplete=\"off\"\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\n        allowClear\n        className={`${id}-input ${className}`}\n        value={value}\n        onKeyDown={ev => {\n            onKeyDown?.(ev);\n            if (!allowHotkey) return;\n            const { ctrlKey, key, metaKey } = ev;\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\n                ev.preventDefault();\n                resolveHotkey(\n                    ev.currentTarget.value, key,\n                    selectionStart, selectionEnd,\n                    false,\n                    (joinedText, placement) => {\n                        internalOnChange(joinedText);\n                        setCursorData({ id, placement });\n                    }\n                );\n            }\n        }}\n        onChange={ev => internalOnChange(ev.target.value)}\n        {...rest}\n    />;\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\nimport { useCard } from 'src/service';\n\nexport type EffectInputGroupRef = {\n    setValue: (value: string) => void,\n};\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const getUpdater = useCard(state => state.getUpdater);\n    const effectInputRef = useRef<CardTextAreaRef>(null);\n\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\n\n    useEffect(() => {\n        const pickerRef = effectInputRef.current?.getPickerRef();\n\n        if (pickerRef) onTakePicker?.(pickerRef);\n    /** No need to depend on handler */\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n        setValue: (value) => {\n            effectInputRef.current?.setValue(value);\n        }\n    }));\n\n    return <CardTextArea ref={effectInputRef}\n        id=\"effect\"\n        allowHotkey\n        defaultValue={useCard.getState().card.effect}\n        onChange={changeEffect}\n        onTakePicker={onTakePicker}\n        rows={9}\n    />;\n});","import { useCallback } from 'react';\nimport { Checkbox, Tooltip } from 'antd';\nimport { useCard, useLanguage } from '../../service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { Card } from 'src/model';\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\n\nconst StyledCheckboxGroup = styled.div`\n    align-self: center;\n    text-align: right;\n    .ant-checkbox + span {\n        user-select: none;\n    }\n`;\n\nexport type CardCheckboxGroup = {};\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\n    const language = useLanguage();\n    const {\n        isDuelTerminalCard,\n        isFirstEdition,\n        isSpeedCard,\n        isLimitedEdition,\n        isLegacyCard,\n        setCard,\n    } = useCard(useShallow(({\n        card,\n        setCard,\n    }) => ({\n        isSpeedCard: card.isSpeedCard,\n        isDuelTerminalCard: card.isDuelTerminalCard,\n        isFirstEdition: card.isFirstEdition,\n        isLimitedEdition: card.isLimitedEdition,\n        isLegacyCard: card.isLegacyCard,\n        setCard,\n    })));\n\n    /** \n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\n     */\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: true,\n                    isLimitedEdition: false,\n                };\n            }\n        } else updatedPart = {\n            isFirstEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isFirstEdition: false,\n                    isLimitedEdition: true,\n                };\n            }\n        } else updatedPart = {\n            isLimitedEdition: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: true,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: false,\n                };\n            } else {\n                updatedPart = {\n                    isSpeedCard: false,\n                    isDuelTerminalCard: true,\n                };\n            }\n        } else updatedPart = {\n            isDuelTerminalCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        let updatedPart: Partial<Card>;\n\n        if (nextValue) {\n            if (isLegacyCard) {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isFirstEdition: false,\n                    isLimitedEdition: false,\n                    isSpeedCard: true,\n                };\n            } else {\n                updatedPart = {\n                    isDuelTerminalCard: false,\n                    isSpeedCard: true,\n                };\n            }\n        } else updatedPart = {\n            isSpeedCard: false,\n        };\n\n        return { ...currentCard, ...updatedPart };\n    }), [setCard, isLegacyCard]);\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\n        const nextValue = e.target.checked;\n        const {\n            isDuelTerminalCard,\n            isFirstEdition,\n            isLimitedEdition,\n            isSpeedCard,\n        } = currentCard;\n        /**\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\n         */\n        let nextIsDuelTerminalCard = false;\n        let nextIsFirstEdition = false;\n        let nextIsLimitedEdition = false;\n        let nextIsSpeedCard = false;\n\n        if (nextValue) {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\n                ? false\n                : isLimitedEdition;\n        } else {\n            nextIsFirstEdition = isFirstEdition;\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\n\n            nextIsSpeedCard = isSpeedCard;\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\n        }\n\n        return {\n            ...currentCard,\n            isLegacyCard: nextValue,\n            isDuelTerminalCard: nextIsDuelTerminalCard,\n            isFirstEdition: nextIsFirstEdition,\n            isLimitedEdition: nextIsLimitedEdition,\n            isSpeedCard: nextIsSpeedCard,\n        };\n    }), [setCard]);\n\n    return <StyledCheckboxGroup className=\"checkbox-input\">\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\n            <Checkbox\n                className=\"input-legacy\"\n                onChange={onLegacyCardChange}\n                checked={isLegacyCard}\n                tabIndex={0}\n            >\n                {language['input.legacy.label']}\n            </Checkbox>\n        </Tooltip>\n        <Checkbox\n            className=\"input-1st\"\n            onChange={onFirstEditionChange}\n            checked={isFirstEdition}\n            tabIndex={0}\n        >\n            {language['input.1st-edition.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-limited\"\n            onChange={onLimitedEditionChange}\n            checked={isLimitedEdition}\n            tabIndex={0}\n        >\n            {language['input.limited-edition.label']}\n        </Checkbox>\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\n        <Checkbox\n            className=\"input-speed\"\n            onChange={onSpeedCardChange}\n            checked={isSpeedCard}\n            tabIndex={0}\n        >\n            {language['input.speed-duel.label']}\n        </Checkbox>\n        <Checkbox\n            className=\"input-terminal\"\n            onChange={onDuelTerminalCardChange}\n            checked={isDuelTerminalCard}\n            tabIndex={0}\n        >\n            {language['input.duel-terminal.label']}\n        </Checkbox>\n    </StyledCheckboxGroup>;\n};","import { RadioTrain, StyledDropdown } from 'src/component';\nimport styled from 'styled-components';\nimport { TrainGridStyle } from './input-train';\n\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\n    padding: var(--spacing-xs);\n    .radio-train {\n        display: flex;\n        flex-wrap: wrap;\n        max-width: 550px;\n        .radio-train-input-group {\n            gap: var(--spacing);\n        }\n    }\n    .ant-checkbox-wrapper {\n        color: var(--color-heavy);\n    }\n    .frame-auto-checkbox {\n        margin-bottom: var(--spacing-xs);\n    }\n    ${TrainGridStyle}\n`;\n\nexport const StyledInputLabelWithButton = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\t.input-label {\n\t\tflex: 1;\n\t}\n`;\n\nexport const StyledNameSetIdInputContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-top: var(--spacing-sm);\n    flex-wrap: wrap;\n    row-gap: var(--spacing-sm);\n`;\n\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\n    &.radio-train {\n        .ant-radio-button-wrapper-checked {\n            &.ocg-button {\n                background-color: var(--main-red-scale);\n                border-color: var(--sub-red-scale);\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\n                    border-right-color: var(--sub-red-scale);\n                }\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\n                    border-color: var(--sub-red-scale);\n                }\n                &:hover {\n                    background-color: var(--sub-red-scale);\n                    color: var(--color-heavy);\n                }\n            }\n            &.tcg-button {\n                background-color: var(--main-blue-scale);\n                border-color: var(--sub-blue-scale);\n                &:hover {\n                    background-color: var(--sub-blue-scale);\n                    color: var(--color-heavy);\n                }\n            }\n        }\n        .ocg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-red-scale);\n            }\n        }\n        .tcg-button {\n            color: var(--color-heavy);\n            &:hover {\n                color: var(--sub-blue-scale);\n            }\n        }\n    }\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { IconButton, RadioTrain } from 'src/component';\nimport { CardCheckboxGroup } from '../input-checkbox-group';\nimport { randomPassword } from 'src/util';\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\nimport { useShallow } from 'zustand/react/shallow';\nimport { StickerButtonList } from '../const';\nimport styled from 'styled-components';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport { Dropdown, Menu } from 'antd';\nimport { copyrightMap } from 'src/model';\n\nconst StyledFooterInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-sm);\n    .checkbox-input {\n        align-self: center;\n        .ant-checkbox + span {\n            user-select: none;\n        }\n    }\n    .sticker-input,\n    .checkbox-input {\n        grid-column: span 2;\n    }\n    .sticker-input .ant-radio-button-wrapper {\n        padding-left: var(--spacing-sm);\n        padding-right: var(--spacing-sm);\n    }\n`;\n\nexport type FooterInputGroupRef = {\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\n};\nexport type FooterInputGroup = {\n    isMonster: boolean,\n    showCreativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\n    isMonster,\n    showCreativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        sticker,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: { sticker, format },\n        getUpdater,\n    }) => ({\n        sticker,\n        format,\n        getUpdater,\n    })));\n    const passwordInputRef = useRef<CardTextInputRef>(null);\n    const creatorInputRef = useRef<CardTextInputRef>(null);\n    const atkInputRef = useRef<CardTextInputRef>(null);\n    const defInputRef = useRef<CardTextInputRef>(null);\n\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\n        ? copyrightMap[format as keyof typeof copyrightMap]\n        : copyrightMap.tcg;\n\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ password, creator, atk, def }) => {\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\n        }\n    }));\n\n    return <StyledFooterInputContainer className=\"card-footer-input\">\n        {(isMonster || showCreativeOption) && <>\n            <CardTextInput ref={atkInputRef}\n                id=\"atk\"\n                addonBefore={language['input.atk.label']}\n                defaultValue={useCard.getState().card.atk}\n                onChange={changeATK}\n                onTakePicker={onTakePicker}\n            />\n            <CardTextInput ref={defInputRef}\n                id=\"def\"\n                addonBefore={language['input.def.label']}\n                defaultValue={useCard.getState().card.def}\n                onChange={changeDEF}\n                onTakePicker={onTakePicker}\n            />\n        </>}\n        <CardTextInput ref={passwordInputRef}\n            id=\"password\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.password.label']}</div>\n                <IconButton\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.password}\n            onChange={changePassword}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={creatorInputRef}\n            id=\"creator\"\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\n                <Dropdown\n                    className=\"save-button-dropdown\"\n                    placement=\"topLeft\"\n                    arrow\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\n                        {copyrightList.map((text, index) => {\n                            return <Menu.Item key={`${index}`}\n                                onClick={() => {\n                                    creatorInputRef.current?.setValue(text);\n                                }}\n                            >\n                                {text}\n                            </Menu.Item>;\n                        })}\n                    </Menu>}\n                >\n                    <div>\n                    <IconButton\n                    onClick={() => {}}\n                        Icon={UnorderedListOutlined}\n                    />\n                    </div>\n                </Dropdown>\n            </StyledInputLabelWithButton>}\n            defaultValue={useCard.getState().card.creator}\n            onChange={changeCreator}\n            onTakePicker={onTakePicker}\n        />\n        <CardCheckboxGroup />\n        <RadioTrain\n            className=\"sticker-input fill-input-train\"\n            value={sticker}\n            onChange={onStickerChange}\n            optionList={StickerButtonList}\n        >\n            <span>{language['input.sticker.label']}</span>\n        </RadioTrain>\n    </StyledFooterInputContainer>;\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { useCard, useLanguage } from 'src/service';\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\nimport { useShallow } from 'zustand/react/shallow';\nimport { ArtFinishButtonList } from '../const';\nimport { getArtCanvasCoordinate } from 'src/model';\nimport styled from 'styled-components';\nimport { notification } from 'antd';\n\nconst StyledImageRadioTrain = styled(RadioTrain)`\n    .ant-input-group-addon {\n        flex: 0;\n    }\n    .radio-train-input-group .ant-radio-button-wrapper {\n        min-width: unset;\n    }\n`;\n\nexport type ImageInputGroupRef = {\n    setValue: (value: {\n        art?: string,\n        artData?: string,\n        artSource?: string,\n        artCrop?: Partial<ReactCrop.Crop>,\n    }) => void,\n    isLoading: () => boolean,\n};\nexport type ImageInputGroup = {\n    showExtraDecorativeOption: boolean,\n    receivingCanvas: HTMLCanvasElement | null,\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\n    onTainted: ImageCropper['onTainted'],\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\n};\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\n    showExtraDecorativeOption,\n    receivingCanvas,\n    onSourceLoaded,\n    onTainted,\n    onCropChange,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            opacity,\n            artFinish,\n            linkMap,\n            isPendulum,\n            isLink,\n            art, artCrop, artData, artSource, artFit,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        opacity,\n        artFinish,\n        linkMap,\n        isPendulum,\n        isLink,\n        art, artCrop, artData, artSource, artFit,\n        getUpdater,\n        setCard,\n    })));\n    const imageCropperRef = useRef<ImageCropperRef>(null);\n\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            isLink: willBecomeLink,\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\n        };\n    }), [setCard]);\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\n        return {\n            ...currentCard,\n            artFit: status,\n        };\n    }), [setCard]);\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\n        onCropChange?.(cropInfo, sourceType);\n        if (cropInfo) setCard(\n            curr => ({\n                ...curr,\n                artCrop: cropInfo,\n            }),\n            byUser,\n        );\n    }, [onCropChange, setCard]);\n\n    useImperativeHandle(ref, () => ({\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\n        setValue: ({ art, artCrop, artData, artSource }) => {\n            if (artSource === 'offline') {\n                if (typeof artData === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\n                }\n            } else {\n                if (typeof art === 'string' && artCrop) {\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\n                }\n            }\n        }\n    }));\n\n    return <ImageCropper\n        ref={imageCropperRef}\n        title={language['input.card-art.label']}\n        defaultSourceType={artSource}\n        defaultExternalSource={art}\n        defaultInternalSource={artData}\n        defaultCropInfo={artCrop}\n        forceFit={artFit}\n        receivingCanvas={receivingCanvas}\n        onSourceChange={(type, data) => {\n            changeArtSource(type);\n            if (type === 'offline') changeArtData(data);\n            else changeArt(data);\n        }}\n        onCropChange={changeImageCrop}\n        onTainted={onTainted}\n        onSourceLoaded={onSourceLoaded}\n        onForceFitChange={changeArtFit}\n        onMaxSizeExceeded={size => {\n            notification.error({\n                description: language['error.max-size.description'](size),\n                message: language['error.max-size.message'],\n            });\n        }}\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\n        beforeCropper={showExtraDecorativeOption\n            ? <StyledImageRadioTrain\n                className=\"art-finish-checkbox fill-input-train\"\n                value={artFinish}\n                onChange={changeArtFinish}\n                optionList={ArtFinishButtonList}\n            >\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\n            </StyledImageRadioTrain>\n            : null\n        }\n    >\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\n            active={isLink}\n            defaultValue={linkMap}\n            onChange={changeLinkMap}\n            onStatusChange={changeLinkStatus}\n        />\n    </ImageCropper>;\n});","import { Tooltip } from 'antd';\nimport { IconButton } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\nimport { SyncOutlined } from '@ant-design/icons';\nimport { normalizeCardName, randomSetID } from 'src/util';\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\nimport styled from 'styled-components';\n\nconst StyledNameInputContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    gap: var(--spacing-sm);\n    width: 100%;\n    .name-input {\n        flex: 3;\n        min-width: 400px;\n    }\n    .set-id-input {\n        flex: 1;\n        min-width: 250px;\n    }\n`;\nconst StyledCopyButton = styled.span`\n    cursor: pointer;\n`;\n\nexport type NameSetInputGroupRef = {\n    setValue: (value: { name?: string, setId?: string }) => void,\n}\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        name,\n        format,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            name,\n            format,\n        },\n        getUpdater,\n    }) => ({\n        name,\n        format,\n        getUpdater,\n    })));\n    const nameInputRef = useRef<CardTextInputRef>(null);\n    const setIdInputRef = useRef<CardTextInputRef>(null);\n\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ name, setId }) => {\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\n        }\n    }));\n\n    return <StyledNameInputContainer className=\"name-id-input\">\n        <CardTextInput ref={nameInputRef}\n            id=\"name\"\n            defaultValue={name}\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\n                <StyledCopyButton onClick={() => {\n                    navigator.clipboard.writeText(normalizeCardName(name));\n                }}>\n                    {language['input.name.label']}\n                </StyledCopyButton>\n            </Tooltip>}\n            onChange={changeName}\n            onTakePicker={onTakePicker}\n        />\n        <CardTextInput ref={setIdInputRef}\n            id=\"set-id\"\n            defaultValue={useCard.getState().card.setId}\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\n                <div className=\"input-label\">\n                    {language['input.set-id.label']}\n                </div>\n                <IconButton\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\n                    Icon={SyncOutlined}\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\n                />\n            </StyledInputLabelWithButton>}\n            onChange={changeSetId}\n            onTakePicker={onTakePicker}\n        />\n    </StyledNameInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport { FrameInfoMap } from 'src/model';\nimport { CaretDownOutlined } from '@ant-design/icons';\nimport { getFrameButtonList } from '../const';\nimport styled from 'styled-components';\nimport { getNavigationProps } from 'src/util';\n\ntype BottomFrameOptionGridRef = {\n    focus: () => void,\n};\ntype BottomFrameOptionGrid = {\n    pendulumFrame: string,\n    frameList: ReturnType<typeof getFrameButtonList>,\n    onChange: (value: string | number) => void,\n    onCancel: () => void,\n};\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\n    frameList,\n    pendulumFrame,\n    onChange,\n    onCancel,\n}, ref) => {\n    const language = useLanguage();\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const inputRef = useRef<HTMLInputElement>(null);\n    const [focus, setFocus] = useState(0);\n\n    useImperativeHandle(ref, () => ({\n        focus: () => inputRef.current?.focus(),\n    }));\n\n    return <StyledPendulumFrameContainer\n        className=\"pendulum-frame-picker\"\n        {...getNavigationProps({\n            stopPropagation: true,\n            optionLength: frameList.length,\n            setFocus,\n            onTrigger: () => {\n                if (focus >= 0) onChange(frameList[focus].value);\n            },\n            onCancel,\n        })}\n    >\n        <Checkbox ref={inputRef}\n            className=\"frame-auto-checkbox\"\n            checked={pendulumFrame === 'auto'}\n            onChange={e => {\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\n            }}\n        >{language['input.frame.auto']}</Checkbox>\n        <RadioTrain\n            className=\"frame-radio\"\n            value={pendulumFrame}\n            onChange={onChange}\n            optionList={frameList}\n        />\n    </StyledPendulumFrameContainer>;\n});\n\nconst StyledPendulumFrameInputContainer = styled.div`\n    display: inline-flex;\n    cursor: pointer;\n    box-shadow: var(--bs-input);\n    vertical-align: bottom;\n    box-shadow: var(--bs-button);\n    border-radius: var(--br-lg);\n    &:focus-visible {\n        outline: 2px solid var(--focus);\n    }\n    .pendulum-frame-info-block {\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\n        line-height: 2; // Alignment\n        background-color: var(--main-level-4);\n        min-width: 110px;\n        overflow: hidden;\n        border: var(--bw) solid var(--sub-level-1);\n        .frame-info-block-label {\n            padding: var(--spacing-px) var(--spacing-xs);\n        }\n    }\n    .pendulum-frame-label {\n        display: inline-block;\n        background: var(--main-level-4);\n        border: var(--bw) solid var(--sub-level-1);\n        border-right: none;\n        padding: var(--spacing-px) var(--spacing-xs);\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\n        line-height: 2; // Alignment\n        &:last-child {\n            border-radius: var(--br-lg);\n            border-right: var(--bw) solid var(--sub-level-1);\n        }\n    }\n`;\nconst StyledPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    column-gap: var(--spacing-sm);\n    row-gap: var(--spacing-sm);\n    .red-scale {\n        color: var(--sub-red-scale);\n    }\n    .blue-scale {\n        color: var(--sub-blue-scale);\n    }\n    .joined-row {\n        position: 'relative';\n        grid-column: span 2;\n        .standalone-label {\n            min-width: 0;\n            width: unset;\n            padding-left: var(--spacing-antd);\n        }\n        .pendulum-checkbox {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n            line-height: 32px;\n            text-align: right;\n            font-weight: 500;\n            margin-right: 0;\n            padding-right: var(--spacing);\n            > span {\n                padding-right: 0;\n            }\n        }\n        .pendulum-checkbox-placeholder {\n            display: inline-block;\n            /** Alignment **/\n            width: var(--width-label);\n        }\n        .pendulum-frame-input {\n            margin-right: var(--spacing-lg);\n        }\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\n            margin-left: 0;\n        }\n    }\n`;\n\nexport type PendulumInputGroupRef = {\n    setValue: (value: { pendulumEffect?: string }) => void,\n}\nexport type PendulumInputGroup = {\n    showCreativeOption: boolean,\n    showExtraDecorativeOption: boolean,\n} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\n    showCreativeOption,\n    showExtraDecorativeOption,\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            isPendulum,\n            pendulumFrame,\n            pendulumScaleBlue,\n            pendulumScaleRed,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        isPendulum,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setCard,\n        getUpdater,\n    })));\n    const containerRef = useRef<HTMLDivElement>(null);\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\n    const [isMirrorScale, setMirrorScale] = useState(true);\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\n    const changeToPendulum = (e: any) => setCard(currentCard => {\n        const willBecomePendulum = e.target.checked;\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\n        // const currentOpacity = currentCard.opacity;\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\n        //     ? { ...currentOpacity, pendulum: 85 }\n        //     : currentOpacity;\n\n        return {\n            ...currentCard,\n            // opacity: nextOpacity,\n            isPendulum: willBecomePendulum,\n            isLink: willBecomePendulum ? false : currentCard.isLink,\n        };\n    });\n    const changeBottomFrame = (value: string | number) => {\n        const normalizedValue = `${value}`;\n\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\n        setCard(currentCard => {\n            return { ...currentCard, pendulumFrame: normalizedValue };\n        });\n    };\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\n\n    const frameList = useMemo(() => getFrameButtonList()\n        .filter(entry => {\n            return showExtraDecorativeOption || entry.edition === 'normal';\n        }),\n        [showExtraDecorativeOption],\n    );\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ pendulumEffect }) => {\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\n        }\n    }));\n\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\n    return <StyledPendulumInputContainer\n        className=\"pendulum-input\"\n    >\n        <div className=\"joined-row pendulum-option\">\n            <div className=\"pendulum-checkbox\">\n                <Checkbox\n                    onChange={changeToPendulum}\n                    checked={isPendulum}\n                >{language['input.pendulum.label']}</Checkbox>\n            </div>\n            {showCreativeOption && <Popover\n                visible={frameDropdownVisible}\n                onVisibleChange={setFrameDropdownVisibleVisible}\n                trigger={['hover', 'click']}\n                placement=\"bottom\"\n                overlayClassName=\"pendulum-frame-picker-overlay\"\n                content={<div className=\"overlay-event-absorber\">\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\n                        frameList={frameList}\n                        pendulumFrame={pendulumFrame}\n                        onCancel={() => {\n                            setFrameDropdownVisibleVisible(false);\n                            containerRef.current?.focus();\n                        }}\n                        onChange={changeBottomFrame}\n                    />\n                </div>}\n            >\n                <StyledPendulumFrameInputContainer ref={containerRef}\n                    className=\"pendulum-frame-input\"\n                    tabIndex={0}\n                    onKeyDown={e => {\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\n                            setFrameDropdownVisibleVisible(true);\n                            /** Popover takes time to mount / become visible */\n                            setTimeout(() => {\n                                bottomFrameOptionGridRef.current?.focus();\n                            }, 200);\n\n                            return false;\n                        }\n                    }}\n                >\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\n                    {currentPendulumFrame\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\n                </StyledPendulumFrameInputContainer>\n            </Popover>}\n            {(isPendulum && showCreativeOption)\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\n                    {language['input.mirror-scale.label']}\n                </Checkbox>}\n        </div>\n        {isPendulum && <>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\n                                {language['input.scale.blue.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleBlue}\n                    onChange={e => {\n                        onBlueScaleChange(e);\n                        if (isMirrorScale) onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div>\n                <Input\n                    addonBefore={<span>\n                        {language['input.scale.label'](\n                            <span key=\"red-scale\" className=\"red-scale\">\n                                {language['input.scale.red.label']}\n                            </span>\n                        )}\n                    </span>}\n                    value={pendulumScaleRed}\n                    onChange={e => {\n                        if (isMirrorScale) onBlueScaleChange(e);\n                        onRedScaleChange(e);\n                    }}\n                />\n            </div>\n            <div className=\"joined-row\">\n                {/** Explicit label does not looks too good */}\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\n                <CardTextArea ref={pendulumEffectInputRef}\n                    id=\"pendulum-effect\"\n                    allowHotkey\n                    defaultValue={useCard.getState().card.pendulumEffect}\n                    onChange={changePendulumEffect}\n                    onTakePicker={onTakePicker}\n                    rows={5}\n                />\n            </div>\n        </>}\n    </StyledPendulumInputContainer>;\n});","import { Checkbox, Tooltip } from 'antd';\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\nimport { CardTextInput, CardTextInputRef } from '../input-text';\nimport { useCard, useLanguage } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\nimport { CondenseType, IconTypeMap } from 'src/model';\nimport { CondenseThresholdButtonList } from '../const';\nimport styled from 'styled-components';\nimport { checkMonster } from 'src/util';\n\nconst StyledPostPendulumInputContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr max-content;\n    grid-template-areas:\n        \"type-input input-helper\"\n        \"condense-input help-button\";\n    gap: var(--spacing-sm);\n    align-items: center;\n    .formatting-help-button {\n        grid-area: help-button;\n        &:focus {\n            box-shadow: 0 0 0 2px var(--focus);\n        }\n    }\n    .input-kanji-helper {\n        grid-area: input-helper;\n    }\n    .type-ability-input {\n        grid-area: type-input;\n    }\n    .condense-input {\n        grid-area: condense-input;\n\t\t.standalone-addon.ant-input-group-addon {\n\t\t\twidth: unset;\n\t\t}\n\t\t.ant-radio-button-wrapper {\n\t\t\tflex: 1 1 90px;\n\t\t}\n\t}\n    &.variant-tcg {\n        .type-ability-input {\n            grid-column: span 2;\n        }\n    }\n`;\n\nexport type PostPendulumInputGroupRef = {\n    setValue: (value: { typeAbility?: string[] }) => void,\n}\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\n    onTakePicker,\n}, ref) => {\n    const language = useLanguage();\n    const {\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant,\n        setCard,\n        getUpdater,\n    } = useCard(useShallow(({\n        card: {\n            frame,\n            cardIcon,\n            format,\n            furiganaHelper,\n            effectStyle,\n        },\n        setCard,\n        getUpdater,\n    }) => ({\n        frame,\n        cardIcon,\n        format,\n        furiganaHelper,\n        condenseTolerant: effectStyle?.condenseTolerant,\n        setCard,\n        getUpdater,\n    })));\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\n    const changeTypeAbility = useMemo(() => {\n        return getUpdater(\n            'typeAbility',\n            value => {\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\n                    .map(entry => `${entry}`.trim())\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\n            },\n            'debounce',\n        );\n    }, [getUpdater]);\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\n        return { ...currentCard, furiganaHelper: e.target.checked };\n    }), [setCard]);\n    const onCondenseTolerantChange = (value: CondenseType) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                effectStyle: {\n                    ...currentCard.effectStyle,\n                    condenseTolerant: value,\n                }\n            };\n        });\n    };\n\n    useImperativeHandle(ref, () => ({\n        setValue: ({ typeAbility }) => {\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\n        }\n    }));\n\n    const typeLabel = cardIcon === 'auto'\n        ? checkMonster({ frame })\n            ? 'input.type.monster.label'\n            : 'input.type.st.label'\n        : IconTypeMap[cardIcon].value === 'st'\n            ? 'input.type.st.label'\n            : 'input.type.monster.label';\n    const isOCG = format === 'ocg';\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\n        <CardTextInput ref={typeAbilityInputRef}\n            addonBefore={language[typeLabel]}\n            id=\"type-ability\"\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\n            onChange={changeTypeAbility}\n            onTakePicker={onTakePicker}\n        />\n        {isOCG && <Tooltip\n            overlay={language['input.furigana-helper.tooltip']}\n            overlayClassName=\"long-tooltip-overlay\"\n        >\n            <Checkbox\n                className=\"input-kanji-helper\"\n                onChange={toggleFuriganaHelper}\n                checked={furiganaHelper}\n            >\n                {language['input.furigana-helper.label']}\n            </Checkbox>\n        </Tooltip>}\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\n            optionList={CondenseThresholdButtonList}\n        >\n            <span>\n                {language['input.condense.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\n                />\n            </span>\n        </RadioTrain>\n        <FormattingHelpDrawer />\n    </StyledPostPendulumInputContainer>;\n});","import { Checkbox, Input, Popover } from 'antd';\nimport { CompactPicker } from 'react-color';\nimport { useCard, useLanguage } from 'src/service';\nimport styled from 'styled-components';\nimport { useShallow } from 'zustand/react/shallow';\nimport { DefaultColorList } from 'src/model';\nimport { useEffect, useState } from 'react';\nimport { HexColorRegex, hexToRGBA } from 'src/util';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { RadioTrain } from 'src/component';\n\n/** Spacing in this component mimic react-color's */\nconst StyledInlineColorPickerContainer = styled.div`\n    color: var(--color);\n    text-shadow: var(--ts);\n    font-weight: 500;\n    padding: 5px;\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    gap: 3px;\n    .color-list {\n        display: flex;\n        flex-wrap: nowrap;\n        gap: 3px;\n    }\n    .color-block {\n        height: 17px;\n        width: 17px;\n        cursor: pointer;\n        position: relative;\n        outline: none;\n        border: var(--bw) solid var(--sub-level-4);\n        &.static-block {\n            cursor: default;\n            height: 9px;\n            width: 9px;\n            margin: 4px 0;\n            border: none;\n        }\n    }\n    .active-dot {\n        position: absolute;\n        inset: var(--spacing-xs);\n        background: rgb(0, 0, 0);\n        border-radius: 50%;\n        opacity: 1;\n    }\n    .color-input {\n        display: grid;\n        grid-template-columns: max-content 1fr;\n        gap: 3px;\n        border-left: var(--bw-lg) solid var(--sub-level-4);\n        padding-left: 3px;\n        input {\n            width: 58px;\n            font-size: var(--fs-sm);\n            line-height: 1;\n            border: none;\n            padding: 0 5px;\n        }\n    }\n`;\nconst InlineColorList = [\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\n    { hex: '#000000', rgb: [0, 0, 0] },\n    { hex: '#FF0000', rgb: [255, 0, 0] },\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\n    { hex: '#00FF00', rgb: [0, 255, 0] },\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\n    { hex: '#0000FF', rgb: [0, 0, 255] },\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\n];\ntype InlineColorPicker = {\n    value?: string,\n    onChange?: (hexValue: string) => void,\n}\nconst InlineColorPicker = ({\n    value = '',\n    onChange,\n}: InlineColorPicker) => {\n    const [currentText, setCurrentText] = useState(value);\n    const [internalValue, setInternalValue] = useState(() => {\n        return {\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        };\n    });\n\n    useEffect(() => {\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\n\n        if (HexColorRegex.test(normalizedText)) {\n            setCurrentText(normalizedText);\n            setInternalValue({\n                hex: normalizedText,\n                rgb: hexToRGBA(normalizedText, false),\n            });\n            onChange?.(normalizedText);\n        }\n        /** No need to depend on callback */\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentText]);\n\n    useEffect(() => {\n        setCurrentText(value);\n        setInternalValue({\n            hex: HexColorRegex.test(value) ? value : '#000000',\n            rgb: hexToRGBA(value, false),\n        });\n    }, [value]);\n\n    return <StyledInlineColorPickerContainer>\n        <div className=\"color-list\">\n            {InlineColorList.map(({ hex, rgb }) => {\n                /** Contrast formula from google \\ :v / */\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\n                    ? '#000000'\n                    : '#FFFFFF';\n\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\n                    {internalValue.hex.toUpperCase() === hex && <div\n                        className=\"active-dot\"\n                        style={{\n                            backgroundColor: dotColor,\n                        }}\n                    />}\n                </div>;\n            })}\n        </div>\n        <div className=\"color-input\">\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\n            <Input\n                size=\"small\"\n                value={currentText}\n                onChange={e => {\n                    setCurrentText(e.target.value);\n                }}\n            />\n        </div>\n    </StyledInlineColorPickerContainer>;\n};\n\nconst StyledTextStyleContainer = styled.div`\n    display: inline-grid;\n    grid-template-columns: 1fr max-content;\n    column-gap: var(--spacing-xxs);\n    padding: var(--spacing-px);\n    margin-right: var(--spacing-sm);\n    border: var(--bw) solid var(--sub-level-1);\n    border-radius: var(--br);\n    background-color: var(--main-level-4);\n    cursor: pointer;\n    &:hover {\n        border-color: var(--main-active);\n    }\n    .text-style-grid {\n        display: grid;\n        grid-template-columns: 25px 25px 25px;\n        grid-template-rows: 13px 13px; // Alignment\n        gap: var(--spacing-xxs);\n        font-size: var(--fs-xs);\n        text-align: center;\n        line-height: 1.5;\n    }\n    .text-style-preview-section {\n        background-color: #eaeaea;\n        border-radius: var(--br-sm);\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\n    }\n    .text-style-label {\n        padding: var(--spacing-xxs);\n        line-height: 1.7;\n    }\n`;\nconst StyledTextStylePicker = styled.div`\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: var(--spacing-px);\n    &.custom-style-picker {\n        background-color: var(--sub-level-4); // Mimic border color\n    }\n    .style-section {\n        z-index: 1;\n        position: relative;\n        background-color: var(--main-level-3);\n    }\n    .style-picker-section {\n        overflow: hidden;\n        h2.size-picker {\n            padding: var(--spacing-xs);\n        }\n        .inline-radio-train {\n            display: inline-flex;\n            padding-bottom: 0;\n            margin-left: var(--spacing-sm);\n        }\n        .shadow-checkbox .ant-checkbox {\n            transform: translateY(1px);\n        }\n        > .ant-checkbox-wrapper {\n            padding: var(--spacing-xs);\n        }\n    }\n    .custom-style-expand {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        column-gap: var(--spacing-xs);\n        .ant-checkbox-wrapper > span {\n            padding-right: 0;\n        }\n    }\n    .radio-train {\n        padding: var(--spacing-xs);\n        padding-top: 0;\n        .standalone-addon {\n            flex: 1 1 auto;\n            text-align: left;\n        }\n        .radio-train-input-group {\n            flex: 0 0 auto;\n        }\n        .ant-radio-button-wrapper {\n            height: 26px;\n            line-height: 24px;\n        }\n    }\n`;\nconst TextStyleInfoMap = {\n    effectTextStyle: {\n        keyName: 'effectTextStyle' as const,\n        extraKeyname: 'effectStyle' as const,\n        labelKey: 'input.text-style.section.effect.label',\n    },\n    pendulumTextStyle: {\n        keyName: 'pendulumTextStyle' as const,\n        extraKeyname: 'pendulumStyle' as const,\n        labelKey: 'input.text-style.section.pendulum.label',\n    },\n    statTextStyle: {\n        keyName: 'statTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.stat.label',\n    },\n    typeTextStyle: {\n        keyName: 'typeTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.type.label',\n    },\n    otherTextStyle: {\n        keyName: 'otherTextStyle' as const,\n        extraKeyname: undefined,\n        labelKey: 'input.text-style.section.other.label',\n    },\n};\nexport const TextStylePicker = () => {\n    const language = useLanguage();\n    const {\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    } = useCard(useShallow(({\n        card: {\n            effectStyle,\n            effectTextStyle,\n            otherTextStyle,\n            pendulumStyle,\n            pendulumTextStyle,\n            statTextStyle,\n            typeTextStyle,\n        },\n        setCard,\n    }) => ({\n        effectStyle,\n        effectTextStyle,\n        otherTextStyle,\n        pendulumStyle,\n        pendulumTextStyle,\n        setCard,\n        statTextStyle,\n        typeTextStyle,\n    })));\n\n    const styleList = [\n        {\n            info: TextStyleInfoMap.effectTextStyle,\n            value: effectTextStyle,\n            extraValue: effectStyle,\n        },\n        {\n            info: TextStyleInfoMap.pendulumTextStyle,\n            value: pendulumTextStyle,\n            extraValue: pendulumStyle,\n        },\n        {\n            info: TextStyleInfoMap.statTextStyle,\n            value: statTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.typeTextStyle,\n            value: typeTextStyle,\n        },\n        {\n            info: TextStyleInfoMap.otherTextStyle,\n            value: otherTextStyle,\n        },\n    ];\n    return <Popover\n        trigger={['click']}\n        placement=\"bottomLeft\"\n        // visible={true}\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\n        content={<div className=\"overlay-event-absorber\">\n            <StyledTextStylePicker className=\"custom-style-picker\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName, labelKey, extraKeyname } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName} className=\"style-section\">\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\n                            <span>\n                                {language[labelKey]}\n                            </span>\n                            <Checkbox\n                                checked={custom}\n                                onChange={e => {\n                                    setCard(currentCard => {\n                                        const applyStyle = e.target.checked;\n\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [applyStyle, ...value.slice(1)],\n                                        };\n                                    });\n                                }}\n                            >{language['input.text-style.custom.label']}</Checkbox>\n                        </h3>\n                        {custom && <div className=\"style-picker-section\">\n                            {typeof upSize === 'number' && <>\n                                <h2 className=\"size-picker\">\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\n                                    <RadioTrain\n                                        className=\"inline-radio-train\"\n                                        value={upSize}\n                                        optionList={[\n                                            { label: <CloseCircleOutlined />, value: 0 },\n                                            { label: '+1', value: 1 },\n                                            { label: '+2', value: 2 },\n                                            { label: '+3', value: 3 },\n                                        ]}\n                                        onChange={value => {\n                                            setCard(currentCard => {\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\n                                                if (!newStyle || !extraKeyname) return currentCard;\n\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\n                                                return {\n                                                    ...currentCard,\n                                                    [extraKeyname]: newStyle,\n                                                };\n                                            });\n                                        }}\n                                    />\n                                </h2>\n                            </>}\n                            <h2>\n                                <Checkbox\n                                    className=\"shadow-checkbox\"\n                                    checked={hasShadow}\n                                    onChange={e => {\n                                        setCard(currentCard => {\n                                            const applyShadow = e.target.checked;\n\n                                            return {\n                                                ...currentCard,\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\n                                            };\n                                        });\n                                    }}\n                                >\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\n                                </Checkbox>\n                            </h2>\n                            {hasShadow && <InlineColorPicker\n                                value={shadow}\n                                onChange={shadowValue => setCard(currentCard => {\n                                    return {\n                                        ...currentCard,\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\n                                    };\n                                })}\n                            />}\n                            <h2>{language['input.text-style.color.label']}</h2>\n                            <CompactPicker\n                                colors={DefaultColorList}\n                                color={fillStyle ?? ''}\n                                onChangeComplete={color => {\n                                    setCard(currentCard => {\n                                        return {\n                                            ...currentCard,\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\n                                        };\n                                    });\n                                }}\n                            />\n                        </div>}\n                    </div>;\n                })}\n            </StyledTextStylePicker>\n        </div>}\n    >\n        <StyledTextStyleContainer className=\"text-style-preview\">\n            <div className=\"text-style-grid\">\n                {styleList.map(({ info, value, extraValue }) => {\n                    const { keyName } = info;\n                    const [custom, fillStyle, hasShadow, shadow] = value;\n                    const { upSize } = extraValue ?? {};\n\n                    return <div key={keyName}\n                        className=\"text-style-preview-section\"\n                        style={{\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\n                        }}\n                    >\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\n                    </div>;\n                })}\n            </div>\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\n        </StyledTextStyleContainer>\n    </Popover>;\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport {\n    Card,\n    CardOpacity,\n    NameStyle,\n    NameStyleType,\n    FrameInfoMap,\n} from '../../model';\nimport {\n    Affiliation,\n    AppHeader,\n    RadioTrain,\n    StandaloneLabel,\n    StyledPopMarkdown,\n} from '../../component';\nimport {\n    checkMonster,\n} from '../../util';\nimport {\n    getFoilButtonList,\n    getAttributeList,\n    FinishButtonList,\n    FormatButtonList,\n} from './const';\nimport { CharPicker } from './char-picker';\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\nimport { CheckboxTrain, FrameTrain } from './input-train';\nimport { Explanation } from 'src/component/explanation';\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\nimport {\n    CardIconInputGroup,\n    EffectInputGroup,\n    EffectInputGroupRef,\n    FooterInputGroup,\n    FooterInputGroupRef,\n    ImageInputGroup,\n    ImageInputGroupRef,\n    NameSetInputGroup,\n    NameSetInputGroupRef,\n    PendulumInputGroup,\n    PendulumInputGroupRef,\n    PostPendulumInputGroup,\n    PostPendulumInputGroupRef,\n} from './input-group';\nimport {\n    TextStylePicker,\n} from './text-style-picker';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    StyledFormatRadioTrain,\n    StyledNameSetIdInputContainer,\n} from './input-panel.styled';\nimport './input-panel.scss';\n\nexport type CardInputPanelRef = {\n    forceCardData: (card: Card) => void,\n    isLoading: () => boolean,\n};\nexport type CardInputPanel = {\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\n    artworkCanvas,\n    backgroundCanvas,\n    onCropChange,\n    onTainted,\n    onSourceLoaded,\n}: CardInputPanel, forwardedRef) => {\n    const language = useLanguage();\n    const {\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    } = useCard(useShallow(({\n        card: {\n            format,\n            frame, foil, finish, opacity,\n            nameStyleType, nameStyle,\n            isPendulum,\n            isLink,\n            attribute,\n        },\n        getUpdater,\n        setCard,\n    }) => ({\n        format,\n        frame, foil, finish, opacity,\n        nameStyleType, nameStyle,\n        isPendulum,\n        isLink,\n        attribute,\n        getUpdater,\n        setCard,\n    })));\n    const { setting } = useSetting();\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\n\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\n\n    const isMonster = checkMonster({ frame });\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\n    const foilButtonList = useMemo(() => getFoilButtonList({\n        normal: language['input.foil.normal.label'],\n        gold: language['input.foil.gold.label'],\n        platinum: language['input.foil.platinum.label'],\n    }), [language]);\n\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\n\n    const [pickerTarget, setPickerTarget] = useState<{\n        id: string,\n        setValue: (nextValue: string) => void,\n    }>({\n        id: '',\n        setValue: () => {},\n    });\n\n    const changeFormat = (formatValue: string | number) => {\n        setCard(currentCard => {\n            const nextFormat = `${formatValue}`;\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\n\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            effectInputGroupRef.current?.setValue(effect);\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ creator, password });\n\n            return formatSwappedCard;\n        });\n    };\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\n        setCard(currentCard => {\n            return {\n                ...currentCard,\n                nameStyleType: type,\n                nameStyle: value,\n            };\n        });\n    }, [setCard]);\n\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\n\n    useEffect(() => {\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\n    }, [nameStyle]);\n\n    useEffect(() => {\n        layoutPickerRef.current?.setValue(opacity);\n    }, [opacity]);\n\n    useImperativeHandle(forwardedRef, () => ({\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\n            || (layoutPickerRef.current?.isLoading() ?? false),\n        forceCardData: card => {\n            setStylePickerResetCount(cnt => cnt + 1);\n            const {\n                name,\n                art, artCrop, artData, artSource,\n                background, backgroundCrop, backgroundData, backgroundSource,\n                opacity,\n                setId,\n                pendulumEffect,\n                typeAbility,\n                effect,\n                atk, def,\n                creator, password,\n            } = card;\n\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\n            layoutPickerRef.current?.setValue({\n                ...opacity,\n                background, backgroundCrop, backgroundData, backgroundSource,\n            });\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\n            effectInputGroupRef.current?.setValue(effect);\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\n        }\n    }));\n\n    return <div\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\n    >\n        <AppHeader />\n        <br />\n        <Affiliation />\n\n        <div className=\"card-overlay-input\">\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\n                <span>{language['input.format.label']}</span>\n            </StyledFormatRadioTrain>\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\n                <span>{language['input.foil.label']}</span>\n            </RadioTrain>\n            {showExtraDecorativeOption && <CheckboxTrain\n                className=\"finish-checkbox\"\n                value={finish}\n                onChange={onFinishChange}\n                optionList={FinishButtonList}\n            >\n                <span>{language['input.finish.label']}</span>\n            </CheckboxTrain>}\n        </div>\n\n        {showCreativeOption && <div className=\"card-layout-input\">\n            <label className=\"standalone-addon ant-input-group-addon\">\n                {language['input.layout.label']} <Explanation\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\n                />\n            </label>\n            <LayoutPicker ref={layoutPickerRef}\n                defaultValue={opacity}\n                receivingCanvas={backgroundCanvas}\n                onChange={changeOpacity}\n                onTainted={onTainted}\n                onCropChange={onCropChange}\n                onSourceLoaded={onSourceLoaded}\n            />\n        </div>}\n\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\n\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\n                onTakePicker={setPickerTarget}\n            />\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\n                defaultType={nameStyleType}\n                defaultValue={nameStyle}\n                showExtraDecorativeOption={showExtraDecorativeOption}\n                onChange={changeNameStyle}\n            />\n            <CardIconInputGroup\n                isLink={isLink}\n                isMonster={isMonster}\n                showCreativeOption={showCreativeOption}\n            />\n        </StyledNameSetIdInputContainer>\n        <div className=\"main-info\">\n            <div className=\"main-info-first\">\n                <RadioTrain\n                    className=\"fill-input-train attribute-input\"\n                    value={attribute}\n                    onChange={changeAttribute}\n                    optionList={attributeList}\n                >\n                    <span>{language['input.attribute.label']}</span>\n                </RadioTrain>\n\n                {(isPendulum || showCreativeOption)\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\n                        showCreativeOption={showCreativeOption}\n                        showExtraDecorativeOption={showExtraDecorativeOption}\n                        onTakePicker={setPickerTarget}\n                    />}\n\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\n\n                <div>\n                    <div className=\"card-effect-letter-helper\">\n                        <StandaloneLabel className=\"standalone-label\">\n                            {language['input.effect.label']}\n                        </StandaloneLabel>\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\n                        <CharPicker\n                            targetId={pickerTarget.id}\n                            onPick={pickerTarget.setValue}\n                        />\n                    </div>\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\n                </div>\n\n                <FooterInputGroup ref={footerInputGroupRef}\n                    isMonster={isMonster}\n                    showCreativeOption={showCreativeOption}\n                    onTakePicker={setPickerTarget}\n                />\n            </div>\n            <div className=\"main-info-second\">\n                <ImageInputGroup ref={imageInputGroupRef}\n                    receivingCanvas={artworkCanvas}\n                    showExtraDecorativeOption={showExtraDecorativeOption}\n                    onSourceLoaded={onSourceLoaded}\n                    onTainted={onTainted}\n                    onCropChange={onCropChange}\n                />\n            </div>\n        </div>\n    </div>;\n});","import {\n    CanvasConst,\n    CardArtCanvasCoordinate,\n    DEFAULT_BASE_FILL_COLOR,\n    FrameInfoMap,\n    getArtCanvasCoordinate,\n    InternalCard,\n    LinkIndentList,\n    LinkRotateList,\n    NO_ICON,\n} from 'src/model';\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { Popconfirm, Tooltip } from 'antd';\nimport { LanguageDataDictionary } from 'src/service';\nimport { useEffect, useRef, useState } from 'react';\nimport ReactCrop from 'react-image-crop';\n\nconst THUMB_ART_SIZE = 56;\nexport const THUMB_SIZE = 68;\nconst {\n    height: cardHeight,\n    width: cardWidth,\n    cardBorder,\n} = CanvasConst;\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\nconst StyledCardThumb = styled.div`\n    display: grid;\n    grid-template-columns: max-content 1fr;\n    border: var(--bw) solid var(--main-level-1);\n    border-top-color: transparent;\n    background-color: #333333;\n    cursor: pointer;\n    position: relative;\n    z-index: 1;\n    height: ${THUMB_SIZE}px;\n    font-size: var(--fs-thumb);\n    &.alternative-color {\n        background-color: #282828;\n    }\n    &.active {\n        background-color: #484848;\n        border-color: var(--main-active);\n        box-shadow: var(--bs-2);\n        z-index: 2;\n    }\n    &:hover {\n        border-color: var(--sub-active);\n    }\n    .right-slot {\n        display: grid;\n        grid-template-columns: 1fr;\n        row-gap: var(--spacing-xxs);\n        line-height: 1.25;\n        overflow: hidden;\n        padding: var(--spacing-xs);\n        border-left: var(--bw) solid var(--main-level-3);\n        .first-row {\n            &:empty:before {\n                content: \"\\\\00a0\";\n            }\n        }\n        .second-row {\n            display: flex;\n            column-gap: var(--spacing-xs);\n            align-items: center;\n            .padding {\n                flex: 1;\n            }\n            .card-icon {\n                width: 1em;\n            }\n            .attribute-icon {\n                width: 1em;\n            }\n            .star-content {\n                flex: 0 0 30px;\n                &.tuner {\n                    color: var(--main-online);\n                }\n            }\n        }\n        .third-row {\n            display: flex;\n            .set-id {\n                flex: 1;\n                text-align: right;\n            }\n        }\n    }\n    .left-slot {\n        --link-arrow-icon-size: 16px;\n        --link-arrow-border-size: 6px;\n        --link-arrow-container-size: 8px;\n        --link-arrow-half-size: 13px;\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\n        line-height: 0;\n        position: relative;\n        width: ${THUMB_SIZE}px;\n        overflow: hidden;\n        .card-art-container {\n            cursor: pointer;\n            display: inline-block;\n            max-height: ${THUMB_ART_SIZE}px;\n            overflow: hidden;\n            box-shadow: var(--bs-1);\n            position: relative;\n            z-index: 1;\n        }\n        .card-art {\n            display: inline-block;\n            position: absolute;\n            top: 0;\n            left: 0;\n        }\n        .card-frame {\n            width: 100%;\n            height: 50%;\n            position: absolute;\n            left: 0;\n            &.top-frame {\n                top: 0;\n            }\n            &.bottom-frame {\n                top: 50%;\n            }\n        }\n        .thumb-link-marker-icon {\n            display: inline-block;\n            width: 0;\n            height: 0;\n            top: 19px;\n            left: 20px;\n            border-style: solid;\n            position: absolute;\n            z-index: 3;\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\n            border-color: transparent transparent #dadada transparent;\n            &:after {\n                content: '';\n                display: inline-block;\n                position: absolute;\n                height: 0;\n                width: 0;\n                top: 0;\n                left: calc(-1 * var(--link-arrow-border-size));\n                border-style: solid;\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\n                border-color: transparent transparent #484848 transparent;\n                transform: translateY(1px);\n                z-index: 2;\n            }\n            &.marker-checked:after {\n                border-color: transparent transparent var(--main-link-marker) transparent;\n            }\n        }\n        .pendulum-scale {\n            position: absolute;\n            bottom: 0;\n            text-align: center;\n            width: 18px;\n            line-height: 1;\n            z-index: 3;\n            font-size: var(--fs-sm);\n            background-color: #eaeaea;\n            box-shadow: var(--bs-1);\n            padding: var(--spacing-xxs) 0;\n            &.red-scale {\n                right: 0;\n                color: var(--main-red-scale);\n                border-radius: var(--br-lg) 0 0 0;\n            }\n            &.blue-scale {\n                left: 0;\n                color: var(--main-blue-scale);\n                border-radius: 0 var(--br-lg) 0 0;\n            }\n        }\n    }\n    .action-slot {\n        display: none;\n        padding: var(--spacing-xs);\n        position: absolute;\n        top: 0;\n        right: 0;\n        background: var(--main-level-3);\n        height: 100%;\n        box-shadow: 0 0 3px 0 #222222;\n        cursor: default;\n        &.force-visible {\n            display: block;\n        }\n        .action-container {\n            display: inline-grid;\n            grid-template-columns: max-content;\n            gap: var(--spacing-xs);\n        }\n        .action-button {\n            cursor: pointer;\n            &.action-duplicate:hover {\n                color: var(--main-active);\n            }\n            &.action-delete:hover {\n                color: var(--main-danger);\n            }\n            &.action-download:hover {\n                color: var(--main-online);\n            }\n        }\n    }\n    &:hover {\n        .action-slot {\n            display: block;\n        }\n    }\n`;\nexport type CardThumb = {\n    index: number,\n    card: InternalCard,\n    active: boolean,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n    style?: React.CSSProperties,\n}\nexport const CardThumb = ({\n    index,\n    card,\n    active,\n    language,\n    onDuplicate,\n    onSelect,\n    onDelete,\n    // onDownload,\n    style,\n}: CardThumb) => {\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\n    const {\n        art,\n        artCrop,\n        artData,\n        artFit,\n        artSource,\n        atk,\n        attribute,\n        background,\n        backgroundCrop,\n        backgroundData,\n        backgroundFit,\n        backgroundSource,\n        backgroundType,\n        cardIcon,\n        def,\n        format,\n        frame,\n        hasBackground,\n        isLink,\n        isPendulum,\n        linkMap,\n        name,\n        opacity,\n        pendulumFrame,\n        pendulumScaleBlue,\n        pendulumScaleRed,\n        setId,\n        star,\n        subFamily,\n        typeAbility,\n    } = card;\n    const normalizedCardName = normalizeCardName(name);\n    const normalizedBottomFrame = pendulumFrame === 'auto'\n        ? isPendulum\n            ? 'spell'\n            : frame\n        : pendulumFrame;\n    const normalizedCardArt = artSource === 'offline'\n        ? !art\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\n            : artData\n        : art;\n    const normalizedBackgroundArt = backgroundSource === 'offline'\n        ? !background\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\n            : backgroundData\n        : background;\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\n    const normalizedCardIcon = normalizedCardIconType === 'st'\n        ? subFamily\n        : normalizedCardIconType;\n    const isMonster = checkMonster(card);\n    const isSpeedSkill = checkSpeedSkill(card);\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\n        ? !!(atk || def || (isLink && linkMap.length))\n        : isMonster;\n    const joinedTypeAbility = typeAbility.join(' / ');\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\n    const {\n        artFrameHeight,\n        artFrameWidth,\n    } = canvasCoordinate;\n\n    return <StyledCardThumb\n        className={mergeClass(\n            'truncate',\n            active ? 'active' : '',\n            index % 2 === 0 ? 'alternative-color' : '',\n        )}\n        onClick={() => onSelect(card)}\n        style={style}\n    >\n        <div\n            className=\"left-slot\"\n        >\n            <div className=\"card-frame top-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\n                }}\n            />\n            <div className=\"card-frame bottom-frame\"\n                style={{\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\n                }}\n            />\n            <a\n                className=\"card-art-container\"\n                href={normalizedCardArt}\n                target=\"_blank\"\n                rel=\"noreferrer\"\n                onClick={e => e.preventDefault()}\n                style={{\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\n                }}\n            >\n                {hasBackground && <DelayedImage\n                    className=\"background-art\"\n                    artLink={normalizedBackgroundArt}\n                    name={normalizedCardName + ' - background'}\n                    fit={backgroundFit}\n                    crop={backgroundCrop}\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\n                        ...opacity,\n                        boundless: backgroundType === 'fit' ? false : true,\n                    })}\n                />}\n                <DelayedImage\n                    className=\"foreground-art\"\n                    artLink={normalizedCardArt}\n                    name={normalizedCardName}\n                    fit={artFit}\n                    crop={artCrop}\n                    canvasCoordinate={canvasCoordinate}\n                />\n            </a>\n            {isLink && [...Array(9)].map((_, index) => {\n                if (index === 4) return null;\n                return <div key={`link-${index}`}\n                    className={mergeClass(\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\n                />;\n            })}\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\n        </div>\n        <div className=\"right-slot truncate\">\n            <div className=\"first-row truncate\">\n                {normalizedCardName}\n            </div>\n            <div className=\"second-row truncate\">\n                {isSpeedSkill || attribute === 'NONE'\n                    ? null\n                    : <img className=\"attribute-icon\"\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\n                        alt=\"Icon\"\n                    />}\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\n                    className=\"card-icon\"\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\n                    alt=\"Icon\"\n                />}\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\n                >\n                    {typeof star === 'number'\n                        ? star\n                        : star !== ''\n                            ? `\"${star}\"`\n                            : ''}\n                </span>}\n            </div>\n            <div className=\"third-row truncate\">\n                {statInEffect && <div>\n                    {atk}\n                </div>}\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\n                {statInEffect && <div>\n                    {isLink ? `Link ${linkMap.length}` : def}\n                </div>}\n                {setId && <div className=\"set-id\">{setId}</div>}\n            </div>\n        </div>\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\n            <div className=\"action-container\">\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\n                </Tooltip>\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\n                </Tooltip> */}\n                <Popconfirm\n                    placement=\"left\"\n                    title={language['manager.button.delete.label']}\n                    onVisibleChange={status => setActionVisible(status)}\n                    onConfirm={() => onDelete(card.id)}\n                    okText={language['manager.button.delete.confirm.label']}\n                    cancelText={language['manager.button.delete.cancel.label']}\n                >\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\n                        <CloseOutlined className=\"action-button action-delete\" />\n                    </Tooltip>\n                </Popconfirm>\n            </div>\n        </div>\n    </StyledCardThumb>;\n};\n\nconst calculateThumbArtStyle = (\n    imageWidth: number,\n    imageHeight: number,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    baseCrop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n) => {\n    const {\n        artWidth,\n        artY,\n        ratio,\n        artFrameWidth,\n        artFrameY,\n    } = canvasCoordinate;\n    const {\n        width,\n        height,\n        x,\n        y,\n    } = (fit\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\n        : baseCrop) ?? {};\n\n    const thumbArtXGap = artWidth === artFrameWidth\n        ? 0\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\n    const thumbArtYGap = artFrameY - artY;\n\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\n\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\n\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\n\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\n\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\n\n    return {\n        top: croppedTop,\n        left: croppedLeft,\n        width: thumbImageWidth,\n        height: fit ? thumbImageHeight : undefined,\n        transform: `translateX(${\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\n        }px) translateY(${\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\n        }px)`,\n    };\n};\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\ntype DelayedImage = {\n    artLink: string,\n    name: string,\n    crop?: Partial<ReactCrop.Crop>,\n    fit?: boolean,\n    canvasCoordinate: CardArtCanvasCoordinate,\n    className?: string,\n    style?: React.CSSProperties,\n};\nconst DelayedImage = ({\n    artLink,\n    name,\n    crop: baseCrop,\n    className,\n    fit,\n    canvasCoordinate,\n    style,\n}: DelayedImage) => {\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\n    const imageRef = useRef<HTMLImageElement>(null);\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\n        imageRef.current?.naturalWidth ?? 1,\n        imageRef.current?.naturalHeight ?? 1,\n        canvasCoordinate,\n        baseCrop,\n        fit,\n    ));\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setInternalLink(artLink);\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [artLink]);\n\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant) {\n                setCalculatedStyle(calculateThumbArtStyle(\n                    imageRef.current?.naturalWidth ?? 1,\n                    imageRef.current?.naturalHeight ?? 1,\n                    canvasCoordinate,\n                    baseCrop,\n                    fit,\n                ));\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [baseCrop, canvasCoordinate, fit]);\n\n    return <img ref={imageRef}\n        className={mergeClass('card-art', className)}\n        src={internalLink}\n        alt={name}\n        style={{\n            ...calculatedStyle,\n            ...style,\n        }}\n        onLoad={() => {\n            setCalculatedStyle(calculateThumbArtStyle(\n                imageRef.current?.naturalWidth ?? 1,\n                imageRef.current?.naturalHeight ?? 1,\n                canvasCoordinate,\n                baseCrop,\n                fit,\n            ));\n        }}\n    />;\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\nimport { useShallow } from 'zustand/react/shallow';\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\nimport { useEffect, useState } from 'react';\nimport { getEmptyCard, InternalCard } from 'src/model';\nimport { v4 as uuid } from 'uuid';\nimport styled from 'styled-components';\nimport { Button } from 'antd';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\n\nconst StyledManagerCardList = styled.div`\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    .list-container {\n        flex: 1;\n        overflow: auto;\n    }\n    .no-card {\n        padding: var(--spacing);\n        text-align: center;\n        .reset-filter {\n            cursor: pointer;\n            color: var(--main-active);\n            &:hover {\n                color: var(--sub-active);\n            }\n        }\n    }\n    .add-card {\n        flex: 0;\n        width: 100%;\n        border-radius: 0;\n        background: var(--main-primary);\n        border-color: var(--main-active);\n        &:hover {\n            background: var(--sub-primary);\n        }\n    }\n`;\ntype CardThumbRowData = {\n    list: InternalCard[],\n    activeId: string,\n    language: LanguageDataDictionary,\n    onDuplicate: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onSelect: (card: InternalCard) => void,\n    onDelete: (id: string) => void,\n}\nconst CardThumbRow = ({\n    data,\n    index,\n    style,\n}: ListChildComponentProps<CardThumbRowData>) => {\n    const {\n        activeId,\n        language,\n        list,\n        onDelete,\n        onDownload,\n        onDuplicate,\n        onSelect,\n    } = data;\n\n    return <CardThumb\n        index={index}\n        card={list[index]}\n        active={list[index].id === activeId}\n        language={language}\n        onDuplicate={onDuplicate}\n        onSelect={onSelect}\n        onDownload={onDownload}\n        onDelete={onDelete}\n        style={style}\n    />;\n};\n\n/**\n * Be careful, all callbacks for card thumb here must be memoized.\n */\nexport type ManagerCardList = {\n    language: LanguageDataDictionary,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const ManagerCardList = ({\n    language,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: ManagerCardList) => {\n    const {\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    } = useCardList(useShallow(({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    }) => ({\n        activeId,\n        cardDisplayList,\n        deleteCard,\n        duplicateCard,\n        resetFilter,\n    })));\n    const [reselectCnt, setReselectCnt] = useState(0);\n\n    const deleteAndReselect = (id: string) => {\n        deleteCard(id);\n        setReselectCnt(cnt => cnt + 1);\n    };\n    /** Throttle re-select after delete */\n    useEffect(() => {\n        let relevant = true;\n        setTimeout(() => {\n            if (relevant && reselectCnt > 0) {\n                const { activeId, cardList, setCardList } = useCardList.getState();\n                const nextCard = cardList.find(card => card.id === activeId);\n                if (nextCard) {\n                    onSelect(nextCard);\n                } else {\n                    /** Empty list, create placeholder card */\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\n                    setCardList([emptyCard], emptyCard.name);\n                }\n            }\n        }, 500);\n\n        return () => {\n            relevant = false;\n        };\n    }, [onSelect, reselectCnt]);\n\n    return <StyledManagerCardList\n        style={{\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n        }}\n    >\n        <div className=\"list-container\">\n            <AutoSizer>\n                {({ height, width }) => (\n                    <List<CardThumbRowData>\n                        className=\"List\"\n                        height={height}\n                        itemCount={cardDisplayList.length}\n                        itemSize={THUMB_SIZE}\n                        itemData={{\n                            list: cardDisplayList,\n                            language,\n                            activeId,\n                            onDuplicate: duplicateCard,\n                            onSelect: onSelect,\n                            onDownload: onDownload,\n                            onDelete: deleteAndReselect,\n                        }}\n                        overscanCount={5}\n                        width={width}\n                    >\n                        {CardThumbRow}\n                    </List>\n                )}\n            </AutoSizer>\n        </div>\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\n            <div>{language['manager.button.search.no-card.message']}</div>\n            <div className=\"reset-filter\" onClick={resetFilter}>\n                {language['manager.button.search.button.reset.label']}\n            </div>\n        </div>}\n        <Button\n            className=\"add-card\"\n            onClick={onRequestImport}\n        >\n            {language['manager.button.add.label']}\n        </Button>\n    </StyledManagerCardList>;\n};","import { Button, Collapse, Modal } from 'antd';\nimport { useState } from 'react';\nimport { CheckOutlined } from '@ant-design/icons';\nimport { LanguageDataDictionary } from 'src/service';\nimport styled from 'styled-components';\nimport { StyledCode } from 'src/component/atom';\nimport {\n    ArtFinishMap,\n    AttributeList,\n    CondenseTolerantMap,\n    FinishMap,\n    frameList,\n    getBackgroundTypeList,\n    getFoilList,\n    IconList,\n    IconTypeList,\n    PatternList,\n    PresetNameStyleMap,\n    StickerList,\n} from 'src/model';\nimport copy from 'copy-to-clipboard';\n\nconst { Panel } = Collapse;\nconst StyledToggleButton = styled.div`\n    font-weight: normal;\n    letter-spacing: -0.75px;\n    font-size: var(--fs-lg);\n`;\nconst StyledMono = styled(StyledCode)`\n    display: inline-block;\n    font-size: var(--fs-sm);\n    border-color: var(--sub-level-1);\n    line-height: 1;\n    cursor: pointer;\n    position: relative;\n    .copiable-overlay {\n        align-items: center;\n        background-color: var(--color-contrast);\n        font-size: var(--fs);\n        font-weight: bold;\n        border-radius: var(--br);\n        color: var(--color);\n        display: flex;\n        height: 100%;\n        justify-content: center;\n        left: 0;\n        position: absolute;\n        top: 0;\n        width: 100%;\n        z-index: 999;\n    }\n`;\nconst StyledManagerSample = styled(Modal)`\n    .ant-modal-close-x {\n        display: none;\n    }\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\n        padding: 0;\n        padding-left: 24px;\n        .ant-collapse-arrow {\n            top: 5px;\n            left: 0;\n        }\n    }\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\n        padding: var(--spacing-sm) 0 0 0;\n    }\n    .download-button {\n        text-align: center;\n        margin: var(--spacing-sm) 0;\n        .ant-btn {\n            background: var(--main-primary);\n            border-color: var(--main-active);\n            &:hover {\n                background: var(--sub-primary);\n            }\n        }\n    }\n    .option-container {\n        width: 100%;\n        table-layout: fixed;\n        background-color: #494949;\n        th,\n        td {\n            border: var(--bw) solid var(--sub-level-4);\n            padding: var(--spacing-xs) var(--spacing-sm);\n            &:nth-child(1) {\n                width: 170px;\n            }\n            &:nth-child(2) {\n                ${StyledMono} {\n                    margin-right: var(--spacing-xs);\n                }\n            }\n        }\n    }\n`;\ntype CopiableCode = {\n    data: string,\n    children?: React.ReactNode,\n}\nconst CopiableCode = ({\n    data,\n    children,\n}: CopiableCode) => {\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\n    const callFlashNotification = (copyingContent: string) => {\n        copy(copyingContent);\n        setFlashOverlay(true);\n        setTimeout(() => {\n            setFlashOverlay(false);\n        }, 1000);\n    };\n\n    return <StyledMono\n        onClick={e => {\n            e.stopPropagation();\n            callFlashNotification(data);\n        }}\n    >\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\n        {children}\n    </StyledMono>;\n};\nexport type ManagerSample = {\n    language: LanguageDataDictionary,\n};\nexport const ManagerSample = ({\n    language,\n}: ManagerSample) => {\n    const [visible, setVisible] = useState(false);\n\n    return <>\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\n            {language['manager.header.button.template.label']}\n        </StyledToggleButton>\n        <StyledManagerSample\n            visible={visible}\n            onCancel={() => setVisible(false)}\n            okButtonProps={{\n                style: {\n                    display: 'none',\n                },\n            }}\n            cancelText={language['manager.template.button.cancel.label']}\n        >\n            <div className=\"sample-modal-container\">\n                <div>\n                    {language['manager.template.description.line-1']}\n                    <br />\n                    {language['manager.template.description.line-2']}\n                </div>\n                <div\n                    className=\"download-button\"\n                >\n                    <a\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        download\n                    >\n                        <Button>{language['manager.template.download.label']}</Button>\n                    </a>\n                </div>\n                <Collapse ghost>\n                    <Panel\n                        key=\"sample-option\"\n                        header={<div>\n                            {language['manager.template.description.line-3']}\n                        </div>}\n                    >\n                        <table className=\"option-container\">\n                            <tr>\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\n                            </tr>\n                            {[\n                                {\n                                    field: 'Format',\n                                    value: <div>\n                                        {[\n                                            'tcg',\n                                            'ocg',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Frame',\n                                    altField: 'Bottom Frame',\n                                    value: <div>\n                                        {frameList\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Attribute',\n                                    value: <div>\n                                        {AttributeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Spell/Trap Icon',\n                                    value: <div>\n                                        {IconList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Sticker',\n                                    value: <div>\n                                        {StickerList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Foil',\n                                    value: <div>\n                                        {getFoilList()\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Finish',\n                                    value: <div>\n                                        {Object.values(FinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                        <div>{language['manager.template.description.joinable']}</div>\n                                    </div>\n                                },\n                                {\n                                    field: 'Art Finish',\n                                    value: <div>\n                                        {Object.values(ArtFinishMap)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Type',\n                                    value: <div>\n                                        {[\n                                            'number',\n                                            'text',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Star Alignment',\n                                    value: <div>\n                                        {[\n                                            'left',\n                                            'center',\n                                            'right',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Card Icon Type',\n                                    value: <div>\n                                        {IconTypeList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Background Type',\n                                    value: <div>\n                                        {getBackgroundTypeList()\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Condense Rate',\n                                    value: <div>\n                                        {Object.keys(CondenseTolerantMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style Type',\n                                    value: <div>\n                                        {[\n                                            'predefined',\n                                            'custom',\n                                        ].map(value => {\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\n                                        })}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Font',\n                                    value: <div>\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\n                                    </div>,\n                                },\n                                {\n                                    field: 'Name Style - Preset',\n                                    value: <div>\n                                        {Object.keys(PresetNameStyleMap)\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\n                                    </div>\n                                },\n                                {\n                                    field: 'Name Style - Pattern',\n                                    value: <div>\n                                        {PatternList\n                                            .filter(({ isOption }) => isOption)\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\n                                    </div>\n                                },\n                            ].map(({\n                                field,\n                                altField,\n                                value,\n                            }) => {\n                                return <tr key={field}>\n                                    <td>\n                                        <StyledMono>{field}</StyledMono>\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\n                                    </td>\n                                    <td>{value}</td>\n                                </tr>;\n                            })}\n                        </table>\n                    </Panel>\n                </Collapse>\n                \n            </div>\n        </StyledManagerSample>\n    </>;\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\nimport styled from 'styled-components';\nimport { ManagerCardList } from './card-list';\nimport { useShallow } from 'zustand/react/shallow';\nimport {\n    DownloadOutlined,\n    UploadOutlined,\n    CloseOutlined,\n    UnorderedListOutlined,\n    LoadingOutlined,\n    // FilterOutlined,\n} from '@ant-design/icons';\nimport { cardListToCsv } from 'src/service';\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\nimport { InternalCard } from 'src/model';\nimport { ManagerSample } from './manager-sample';\nimport debounce from 'lodash.debounce';\nimport XLSX from 'xlsx';\n\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\nconst StyledCardManagerPanel = styled.div`\n    position: absolute;\n    right: 0;\n    top: 125px;\n`;\nconst StyledCardManagerDrawer = styled(Drawer)`\n    .ant-drawer-header {\n        padding: 0;\n    }\n    .ant-drawer-content {\n        box-shadow: 0 0 3px 2px #202020;\n    }\n    .ant-drawer-body {\n        padding: 0;\n        height: 100%;\n    }\n    .ant-drawer-close {\n        display: none;\n    }\n    .ant-drawer-content {\n        background-color: #484848;\n    }\n\n    .manager-label-container {\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\n    }\n    .manager-button-container {\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n        .manager-button {\n            cursor: pointer;\n            input {\n                display: none;\n            }\n            &:hover {\n                color: var(--main-active);\n                .anticon {\n                    color: var(--main-active);\n                }\n            }\n            &.close-button:hover {\n                .anticon {\n                    color: var(--main-danger);\n                }\n            }\n        }\n    }\n    .card-manager-header {\n        display: grid;\n        grid-template-columns: 1fr max-content;\n        .card-manager-filter {\n            grid-column: span 2;\n            padding: var(--spacing-xs);\n            .card-manager-search {\n                width: 100%;\n            }\n        }\n    }\n    .manager-button-container {\n        display: inline-flex;\n        gap: var(--spacing-sm);\n    }\n`;\nexport type CardManagerPanelRef = {};\nexport type CardManagerPanel = {\n    language: LanguageDataDictionary,\n    onVisibleChange: (status: boolean) => void,\n    onSelect: (card: InternalCard) => void,\n    onDownload: (card: InternalCard) => void,\n    onRequestImport: () => void,\n};\nexport const CardManagerPanel = forwardRef(({\n    language,\n    onVisibleChange,\n    onSelect,\n    onDownload,\n    onRequestImport,\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\n    const listUploadId = 'list-upload-id';\n    const listUploadRef = useRef<HTMLInputElement>(null);\n    const {\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    } = useCardList(useShallow(({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    }) => ({\n        cardList,\n        changeEditStatus,\n        pendingActiveCard,\n        setActiveId,\n        setCardList,\n        setFilterFunction,\n        setListName,\n        setPendingActiveCard,\n        sortList,\n        toggleVisible,\n        visible,\n    })));\n    const exportFormat = useSetting(state => state.setting.exportFormat);\n    const [inputKey, setInputKey] = useState(0);\n    const [readingFile, setReadingFile] = useState(false);\n    const [savingFile, setSavingFile] = useState(false);\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\n        setFilterFunction({ type: 'text', value: e.target.value });\n    }, 250);\n\n    const activeCard = useCallback((card: InternalCard) => {\n        onSelect(card);\n        setActiveId(card.id);\n    }, [onSelect, setActiveId]);\n\n    useEffect(() => {\n        if (pendingActiveCard) {\n            onSelect(pendingActiveCard);\n            setActiveId(pendingActiveCard.id);\n            setPendingActiveCard();\n        }\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\n\n    useEffect(() => {\n        localStorage.setItem('manager-panel-visible', visible.toString());\n        onVisibleChange(visible);\n    }, [onVisibleChange, visible]);\n\n    useEffect(() => {\n        const unsub = useCardList.subscribe(\n            state => state.filterResetSignal,\n            nextSignal => {\n                if (nextSignal) {\n                    setInputKey(cnt => cnt + 1);\n                }\n            }\n        );\n\n        return () => {\n            unsub();\n        };\n    }, []);\n\n    /** Currently no need for direct control */\n    useImperativeHandle(ref, () => ({}), []);\n\n    return <StyledCardManagerPanel>\n        <StyledCardManagerDrawer\n            title={<div className=\"card-manager-header truncate\">\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\n                    {cardList.length}\n                </CardManagerMonitor>\n                <div className=\"manager-button-container\">\n                    <div\n                        className=\"manager-button\"\n                    >\n                        <ManagerSample language={language} />\n                    </div>\n                    <Dropdown\n                        overlay={<Menu>\n                            {[\n                                {\n                                    value: SortFunctionMap.level.key,\n                                    label: language['manager.button.sort.level.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.name.key,\n                                    label: language['manager.button.sort.name.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.atk.key,\n                                    label: language['manager.button.sort.atk.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.def.key,\n                                    label: language['manager.button.sort.def.label'],\n                                },\n                                {\n                                    value: SortFunctionMap.set.key,\n                                    label: language['manager.button.sort.set-id.label'],\n                                },\n                            ].map(({ value, label }) => {\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\n                                    {label}\n                                </Menu.Item>;\n                            })}\n                        </Menu>}\n                    >\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <UnorderedListOutlined />\n                        </div>\n                    </Dropdown>\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                        >\n                            <FilterOutlined />\n                        </div>\n                    </Tooltip> */}\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={async () => {\n                                let wouldDownload = true;\n                                setSavingFile(true);\n                                if (chanceToRemindBackup.check()) {\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\n                                }\n\n                                if (wouldDownload) {\n                                    try {\n                                        const {\n                                            error,\n                                            value: csvdata,\n                                        } = cardListToCsv(useCardList.getState().cardList);\n\n                                        if (error) {\n                                            let errorMessage = '';\n                                            let errorDescription = '';\n                                            switch (error) {\n                                                case 'offline-data': {\n                                                    errorMessage = language['error.export.offline-data.message'];\n                                                    errorDescription = language['error.export.offline-data.description'];\n                                                    break;\n                                                }\n                                            }\n\n                                            if (errorMessage || errorDescription) {\n                                                notification.error({\n                                                    message: errorMessage,\n                                                    description: errorDescription,\n                                                });\n                                            }\n                                        }\n                                        switch (exportFormat) {\n                                            case 'xlsx': {\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\n                                                break;\n                                            }\n                                            default: {\n                                                downloadBlob(\n                                                    useCardList.getState().listName,\n                                                    new Blob([csvdata], { type: 'text/csv' }),\n                                                    'text/csv',\n                                                );\n                                            }\n                                        }\n                                        changeEditStatus('download');\n                                    } catch (e) {}\n                                }\n                                setSavingFile(false);\n                            }}\n                        >\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\n                        <div\n                            className=\"manager-button\"\n                            onClick={() => {\n                                const target = document.getElementById(listUploadId);\n                                if (target && !readingFile) {\n                                    target.click();\n                                }\n                            }}\n                        >\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\n                                type=\"file\"\n                                id={listUploadId}\n                                accept={[\n                                    '.csv',\n                                    'application/vnd.ms-excel',\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                                ].join(',')}\n                                className=\"import-upload-input\"\n                                onChange={async (e) => {\n                                    const fileList = listUploadRef.current?.files;\n                                    const { isListDirty } = useCardList.getState();\n                                    const announceError = () => {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                        notification.error({\n                                            message: language['error.csv-import.message'],\n                                            description: language['error.csv-import.description'],\n                                        });\n                                    };\n                                    let willImport = true;\n\n                                    if (isListDirty) {\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\n                                    }\n                                    if (willImport && fileList && fileList[0]) {\n                                        setReadingFile(true);\n                                        try {\n                                            const file = await fileList[0].arrayBuffer();\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\n\n                                            /** Assume data from only the very first sheet */\n                                            /** 65001 codepage allow display unicode characters such as japanese */\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\n                                                workbook.Sheets[workbook.SheetNames[0]],\n                                                { header: 1, raw: false },\n                                            );\n                                            const nextCardList = csvToCardList(csvBook);\n\n                                            if (nextCardList.length > 0) {\n                                                setCardList(nextCardList, nextCardList[0].id);\n                                                setListName(fileName);\n                                                setInputKey(cnt => cnt + 1);\n                                                onSelect(nextCardList[0]);\n                                                setReadingFile(false);\n                                            } else {\n                                                announceError();\n                                            }\n                                        } catch (e) {\n                                            console.error(e);\n                                            announceError();\n                                        }\n                                    } else {\n                                        setInputKey(cnt => cnt + 1);\n                                        setReadingFile(false);\n                                    }\n                                }}\n                            />\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\n                        </div>\n                    </Tooltip>\n                    <div\n                        className=\"manager-button close-button\"\n                        onClick={() => toggleVisible(false)}\n                    >\n                        <CloseOutlined />\n                    </div>\n                </div>\n                <div className=\"card-manager-filter\">\n                    <Input key={`search-${inputKey}`}\n                        className=\"card-manager-search\"\n                        placeholder={language['manager.button.search.text.placeholder']}\n                        onChange={debounceSearch}\n                        allowClear\n                    />\n                </div>\n            </div>}\n            visible={visible}\n            maskClosable={false}\n            mask={false}\n            destroyOnClose={false}\n            forceRender={true}\n            closeIcon={() => null}\n            onClose={() => toggleVisible(false)}\n            width={280}\n        >\n            <ManagerCardList\n                language={language}\n                onSelect={activeCard}\n                onDownload={onDownload}\n                onRequestImport={onRequestImport}\n            />\n        </StyledCardManagerDrawer>\n    </StyledCardManagerPanel>;\n});\n\nconst StyledCardManagerMonitor = styled.div`\n    .header-warning {\n        color: var(--main-danger);\n    }\n`;\ntype CardManagerMonitor = {\n    language: LanguageDataDictionary,\n} & React.HTMLAttributes<HTMLDivElement>;\nconst CardManagerMonitor = ({\n    language,\n    children,\n    ...rest\n}: CardManagerMonitor) => {\n    const {\n        isListDirty,\n        cardList,\n    } = useCardList(useShallow(({\n        isListDirty,\n        cardList,\n    }) => ({\n        isListDirty,\n        cardList,\n    })));\n\n    useEffect(() => {\n        let confirmReload = (ev: Event) => {\n            ev.preventDefault();\n            return language['prompt.warning.on-leave.label'];\n        };\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\n        if (isListDirty && cardList.length > 1) {\n            window.addEventListener('beforeunload', confirmReload);\n        }\n\n        return () => {\n            window.removeEventListener('beforeunload', confirmReload);\n        };\n    }, [cardList.length, isListDirty, language]);\n\n    return <StyledCardManagerMonitor {...rest}>\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\n    </StyledCardManagerMonitor>;\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\n    const runSeed = () => {\n        let count = 1;\n        let current = seedIncrement;\n        while (current < Math.random()) {\n            current += seedIncrement;\n            count += 1;\n        }\n        return count;\n    };\n    let distributionMap: Record<string, number> = {};\n    for (let i = 0; i < 100000; i++) {\n        const result = runSeed();\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\n        else distributionMap[result] = 1;\n    }\n    return distributionMap;\n};\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\nexport const DEFAULT_SEED_INCREMENT = 0.015;\n\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\n    let internalChance = seedIncrement;\n\n    return {\n        check: () => {\n            const result = Math.random();\n\n            if (internalChance < result) {\n                internalChance += seedIncrement;\n                return false;\n            } else {\n                internalChance = seedIncrement;\n                return true;\n            }\n        }\n    };\n};","import styled from 'styled-components';\nimport { StyledActionIconButton } from './page';\n\nexport const StyledDataButtonPanelContainer = styled.div`\n    display: flex;\n    column-gap: var(--spacing);\n    border-radius: var(--br-lg);\n    font-size: var(--fs-4xl);\n    line-height: 1.5;\n    margin: auto;\n    max-width: var(--card-width);\n    min-height: 59px;\n    outline: none !important;   // Avoid default state styling\n    padding: var(--spacing);\n    padding-right: 0;\n    text-align: center;\n    text-shadow: 0 1px 2px black;\n    .anticon {\n        cursor: pointer;\n    }\n    button {\n        color: white;\n        border-radius: var(--br-lg);\n        outline: none !important;   // Avoid default state styling\n        cursor: pointer;\n    }\n    .save-button {\n        flex: 1;\n        font-size: var(--fs-xl);\n        border: none;\n        font-weight: 500;\n        box-shadow: var(--bs-button);\n        height: 39px; // Alignment\n        line-height: 1;\n        &:focus, &:active {\n            color: white;\n        }\n    }\n    #save-button-waiting {\n        cursor: wait;\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        top: 0;\n        left: 0;\n        z-index: 1;\n    }\n    #save-button-ready {\n        cursor: pointer;\n        &:hover {\n            background-color: var(--sub-info);\n            box-shadow: none;\n        }\n    }\n    .save-button-container {\n        display: flex;\n        flex: 1;\n        font-size: var(--fs);\n        line-height: 1.35;\n        position: relative;\n    }\n    .imexport {\n        flex: 0 0 200px;\n        display: grid;\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\n        .primary-button {\n            align-content: center;\n            font-size: var(--fs);\n            background-color: var(--main-tertiary);\n            border: var(--bw) solid var(--sub-tertiary);\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\n            &:hover {\n                background-color: var(--sub-tertiary);\n                box-shadow: none;\n            }\n        }\n        ${StyledActionIconButton} {\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\n            border-left: var(--bw) solid var(--sub-level-3);\n        }\n    }\n`;\n\nexport const StyledCardCanvasGroupContainer = styled.div`\n    width: var(--card-width);\n    height: var(--card-height);\n    margin-bottom: var(--spacing);\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\n        translateZ(0);\n    position: absolute;\n    top: 0;\n    left: 0;\n    canvas {\n        position: absolute;\n        left: 0;\n        z-index: 1;\n        pointer-events: none;\n    }\n    &:hover {\n        .reset-button,\n        .lightbox-button {\n            display: block;\n        }\n        #export-canvas.js-export-available {\n            display: inline-block !important;   // Override js-controlled inline style\n            cursor: default;\n        }\n        #export-canvas-guard {\n            display: flex;\n            cursor: wait;\n            transition: all 2s;\n        }\n    }\n    #export-canvas {\n        display: none;\n        z-index: 100;\n        pointer-events: all;\n    }\n    #export-canvas-guard {\n        position: absolute;\n        left: 0;\n        display: none;\n        align-items: center;\n        justify-content: center;\n        z-index: 101;\n        // background-color: #ffffff08;\n        width: var(--card-width);\n        height: var(--card-height);\n        .anticon {\n            font-size: var(--fs-4xl);\n        }\n        .canvas-guard-alert {\n            position: absolute;\n            top: 0;\n            right: 0;\n            color: white;\n            padding: var(--spacing-xs) var(--spacing);\n            border-radius: 0 0 0 var(--br-lg);\n            background-color: var(--main-active);\n            box-shadow:\n                0 3px 6px rgba(0, 0, 0, 0.16),\n                0 3px 6px rgba(0, 0, 0, 0.23);\n        }\n        &.guard-on {\n            display: flex !important;   // Override js-controlled inline style\n        }\n    }\n    .crop-canvas {\n        position: relative;\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\n        width: 416px;\n        height: 416px;\n        z-index: 0;\n        top: 0;\n        left: 0;\n        visibility: hidden;\n    }\n`;\n\nexport const StyledAppLoading = styled.div`\n\tposition: fixed;\n\ttop: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: 100%;\n\tbackground-image: linear-gradient(45deg, #333, #333);\n\tz-index: 4000;\n\tcolor: white;\n\ttext-shadow:\n\t\t0 1px #333,\n\t\t0 2px #111;\n\tfont-size: var(--fs-3xl);\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: center;\n`;\n\nexport const StyledByMe = styled.div`\n\tposition: fixed;\n\tright: var(--spacing);\n\tbottom: 0;\n\tfont-size: var(--fs-xs);\n\topacity: 0.5;\n\tpadding: var(--spacing-px) var(--spacing-xs);\n\tcolor: var(--color-dim);\n    img {\n        height: 10px;\n        margin-left: 1px;\n    }\n`;\n\nexport const ErrorAlert = styled.span`\n    color: var(--main-danger);\n`;\n\nexport const OverlayButton = styled.div`\n    --overlay-size: 51px;\n    position: absolute;\n    z-index: 101;\n    background: var(--main-primary);\n    border-color: var(--main-active);\n    color: var(--color-heavy);\n    padding: var(--spacing);\n    line-height: 1;\n    font-size: var(--fs-3xl);\n    text-align: center;\n    width: var(--overlay-size);\n    height: var(--overlay-size);\n    border-radius: var(--br-lg);\n    cursor: pointer;\n    box-shadow: var(--bs-1);\n    display: none;\n    &:hover {\n        background: var(--sub-primary);\n    }\n`;\n\nexport const LightboxButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: var(--spacing-xs);\n`;\n\nexport const ResetButton = styled(OverlayButton)`\n    top: var(--spacing-xs);\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport 'antd/dist/antd.css';\nimport './app.scss';\nimport './style/index.scss';\nimport './responsive.scss';\nimport './reduce-color-motion.scss';\nimport {\n    InternalCard,\n    CanvasConst,\n    Card,\n    getDefaultCard,\n} from './model';\nimport {\n    forceRefocus,\n    isMobileDevice,\n} from './util';\nimport {\n    BatchConverter,\n    CardInputPanel,\n    CardInputPanelRef,\n    CardManagerPanel,\n    DownloadButton,\n    DownloadButtonRef,\n    ExportPanel,\n    ExportPanelRef,\n    ImportPanel,\n    ImportPanelRef,\n} from './page';\nimport WebFont from 'webfontloader';\nimport {\n    changeCardFormat,\n    getLanguage,\n    retrieveSavedCard,\n    useCard,\n    useCardList,\n    useI18N,\n    useOCGFont,\n    useSetting,\n} from './service';\nimport { Modal, notification, Tooltip } from 'antd';\nimport { TaintedCanvasWarning } from './component';\nimport { clearCanvas } from './draw';\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\nimport {\n    ErrorAlert,\n    LightboxButton,\n    ResetButton,\n    StyledAppLoading,\n    StyledByMe,\n    StyledCardCanvasGroupContainer,\n    StyledDataButtonPanelContainer,\n} from './app.styled';\nimport { configure, HotKeys } from 'react-hotkeys';\nimport { useShallow } from 'zustand/react/shallow';\nimport * as Sentry from '@sentry/react';\n\n/** React hotkey setup */\nconfigure({\n    ignoreTags: [],\n});\nconst AppGlobalHotkeyMap = {\n    EXPORT: ['ctrl+d', 'command+d'],\n    IMPORT: ['ctrl+e', 'command+e'],\n    MERGE: ['ctrl+g', 'command+g'],\n    VIEW: ['ctrl+b', 'command+b'],\n    DOWNLOAD: ['ctrl+s', 'command+s'],\n};\n\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\nfunction App() {\n    const {\n        allowHotkey,\n        softMode,\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\n        softMode: reduceMotionColor,\n        allowHotkey,\n    })));\n    const {\n        isInitiating: isLanguageInitiating,\n        isLoading: isLanguageLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate: initiateI18N,\n        loadDefaultLanguage,\n    } = useI18N(useShallow(({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    }) => ({\n        isInitiating,\n        isLoading,\n        language,\n        isMetadataReady,\n        languageInfo,\n        initiate,\n        loadDefaultLanguage,\n    })));\n    const [isInitializing, setInitializing] = useState(true);\n    const [error, setError] = useState('');\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\n    const [canvasKey, setCanvasKey] = useState(0);\n    const [lightboxVisible, setLightboxVisible] = useState(false);\n    const [managerVisible, setManagerVisible] = useState(false);\n\n    const cardInputRef = useRef<CardInputPanelRef>(null);\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\n    const [canvasMap] = useState({\n        artworkCanvasRef,\n        backgroundCanvasRef,\n        exportCanvasRef,\n        frameCanvasRef,\n        cardIconCanvasRef,\n        pendulumScaleCanvasRef,\n        pendulumEffectCanvasRef,\n        typeCanvasRef,\n        effectCanvasRef,\n        nameCanvasRef,\n        statCanvasRef,\n        setIdCanvasRef,\n        passwordCanvasRef,\n        creatorCanvasRef,\n        stickerCanvasRef,\n        finishCanvasRef,\n        lightboxCanvasRef,\n    });\n\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\n    const exportPanelRef = useRef<ExportPanelRef>(null);\n    const importPanelRef = useRef<ImportPanelRef>(null);\n\n    const [imageChangeCount, setImageChangeCount] = useState(0);\n\n    useEffect(() => {\n        initiateI18N();\n    }, [initiateI18N]);\n    useEffect(() => {\n        if (isMetadataReady) loadDefaultLanguage();\n    }, [isMetadataReady, loadDefaultLanguage]);\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\n    useEffect(() => {\n        const applyList = [\n            'font-family',\n            'letter-spacing',\n            '--width-label',\n        ];\n\n        applyList.forEach(styleName => {\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\n        });\n    }, [languageInfo]);\n\n    useEffect(() => {\n        const ctx = exportCanvasRef.current?.getContext('2d');\n        const setCard = useCard.getState().setCard;\n        if (ctx) {\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.imageSmoothingQuality = 'high';\n            clearCanvas(ctx);\n        }\n\n        if (isLanguageInitiating === false) WebFont.load({\n            custom: {\n                families: [\n                    'Matrix-Bold',\n                    'MatrixBoldSmallCaps',\n                    'MatrixBook',\n                    'MatrixRegularSmallCaps',\n                    'RoGSanSrfStd-Bd',\n                    'StoneSerif-Italic',\n                    'YuGiOhITCStoneSerifBSc',\n                    'matrix',\n                    'palatino-linotype-bold',\n                    'stone-serif-bold',\n                    'stone-serif-regular',\n                ],\n                urls: ['asset/font.css'],\n            },\n            active: () => {\n                const retrievedCard = retrieveSavedCard();\n\n                setCard(retrievedCard);\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\n                setInitializing(false);\n            },\n            fontinactive(familyName, fvd) {\n                console.error('TCG fontinactive', familyName, fvd);\n                notification.error({\n                    message: getLanguage()['error.load.font.tcg'](familyName),\n                });\n            },\n            inactive: () => {\n                setError(getLanguage()['error.load.font.all-tcg']);\n                setInitializing(false);\n            },\n        });\n    }, [isLanguageInitiating]);\n\n    const {\n        styleContent: ocgStyleFile,\n    } = useOCGFont({\n        isLanguageInitiating,\n        onBeforeLoad: () => {\n            setInitializing(true);\n            const ctx = exportCanvasRef.current?.getContext('2d');\n            if (ctx) {\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.imageSmoothingQuality = 'high';\n                clearCanvas(ctx);\n            }\n        },\n        onActive: () => {\n            setInitializing(false);\n        },\n        onInactive: () => {\n            setError(getLanguage()['error.load.font.all-ocg']);\n            setInitializing(false);\n        },\n        onFontInactive: (familyName, fvd) => {\n            console.error('OCG fontinactive', familyName, fvd);\n            notification.error({\n                message: getLanguage()['error.load.font.ocg'](familyName),\n            });\n        }\n    });\n\n    const [isTainted, setTainted] = useState(false);\n\n    useEffect(() => {\n        const documentClassList = document.body.classList;\n\n        if (softMode) documentClassList.add('reduced-color-motion');\n        else documentClassList.remove('reduced-color-motion');\n    }, [softMode]);\n\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\n    }, [allowHotkey]);\n\n    const sentryInitialized = useRef(false);\n    const reportTarget = document.getElementById('sentry-bug-report');\n    useEffect(() => {\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\n            sentryInitialized.current = true;\n\n            Sentry.init({\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\n                integrations: [\n                    Sentry.browserTracingIntegration(),\n                    Sentry.replayIntegration(),\n                    Sentry.feedbackIntegration({\n                        colorScheme: 'system',\n                        autoInject: false,\n                    }).attachTo(reportTarget, {\n                        formTitle: language['contributor.bug-report.tooltip'],\n                        nameLabel: language['contributor.bug-report.name.label'],\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\n                        isEmailRequired: false,\n                        showEmail: false,\n                        messageLabel: language['contributor.bug-report.message.label'],\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\n                        successMessageText: language['contributor.bug-report.success.label'],\n                    }),\n                ],\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\n                // beforeSend(event) {\n                //     // Check if it is an exception, and if so, show the report dialog\n                //     if (event.exception && event.event_id) {\n                //         Sentry.showReportDialog({\n                //             eventId: event.event_id,\n                //         });\n                //     }\n                //     return event;\n                // },\n                // Tracing\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\n                tracePropagationTargets: ['lauqerm.github.io'],\n                // Session Replay\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\n            });\n        }\n    }, [language, reportTarget]);\n\n    const treatNewCard = useCallback((\n        decodedCard: Card,\n        option?: {\n            forcePurityCheck?: boolean,\n            writeOnCurrentCard?: boolean,\n            addToList?: boolean,\n        },\n    ) => {\n        const {\n            addToList,\n            forcePurityCheck,\n            writeOnCurrentCard,\n        } = option ?? {};\n\n        const { setCard, card } = useCard.getState();\n        const normalizedCard = writeOnCurrentCard\n            ? { ...decodedCard, id: card.id }\n            : decodedCard;\n\n        if (addToList) {\n            useCardList.getState().addCard(normalizedCard);\n        }\n        setCard(normalizedCard, forcePurityCheck);\n        setImageChangeCount(cnt => cnt + 1);\n        cardInputRef.current?.forceCardData(normalizedCard);\n        /** Allow navigate input panel right away */\n        forceRefocus();\n    }, []);\n\n    const importData = useCallback(async (\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('replace');\n    }, [allowHotkey]);\n\n    const mergeData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        importPanelRef.current?.requestImport('merge');\n    }, [allowHotkey]);\n\n    const exportData = useCallback((\n        event?: { preventDefault: () => void },\n        fromHotkey = false,\n        data?: Card,\n    ) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\n            window.alert(language['error.export.image-loading.message']);\n            return;\n        }\n\n        try {\n            const cardData = data ?? useCard.getState().card;\n\n            exportPanelRef.current?.setCardData(cardData);\n        } catch (e) {\n            console.error(e);\n            notification.error({\n                message: language['error.export.message'],\n                description: language['error.export.description'],\n            });\n        }\n    }, [allowHotkey, language, sourceType]);\n\n    const exportCardInList = useCallback((card: InternalCard) => {\n        const { id, ...exportableCard } = card;\n\n        exportData(undefined, false, exportableCard);\n    }, [exportData]);\n\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\n        if (fromHotkey && !allowHotkey) return;\n\n        event?.preventDefault();\n        downloadButtonRef.current?.download();\n    }, [allowHotkey]);\n\n    const hotkeyHandlerMap = useMemo(() => {\n        return {\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\n            VIEW: () => displayLightbox(true, true),\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\n        };\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\n\n    const alertDownloadError = useCallback(() => {\n        setTainted(true);\n        alert(language['prompt.download.tainted.message']);\n    }, [language]);\n\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\n        if (crossorigin === 'anonymous') {\n            setTainted(false);\n            setCanvasKey(cnt => cnt + 1);\n        }\n        setImageChangeCount(cnt => cnt + 1);\n    }, []);\n\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\n        setImageChangeCount(cnt => cnt + 1);\n        setSourceType(sourceType);\n    }, []);\n\n    const markTaintedImage = useCallback(() => {\n        setImageChangeCount(cnt => cnt + 1);\n        setTainted(true);\n    }, []);\n\n    const toggleManagerMode = useCallback((value: boolean) => {\n        setManagerVisible(value);\n    }, []);\n\n    const isLoading = isLanguageLoading || isInitializing;\n    return (\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\n            <div id=\"app\"\n                /** Prevent accidentally replace the page when dragging image into card art input. */\n                onDrop={() => { }}\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\n                style={{\n                    backgroundImage: `url(\"${\n                        process.env.PUBLIC_URL\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\n                    ...({\n                        '--card-height': `${CanvasConst.height}px`,\n                        '--card-width': `${CanvasConst.width}px`,\n                    }),\n                }}\n            >\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\n                <div\n                    className={'app-container'}\n                    style={{\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\n                    }}\n                >\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\n                        {error.length > 0\n                            ? <ErrorAlert>\n                                {error}\n                            </ErrorAlert>\n                            : languageInfo.initialMessage ?? ''}\n                    </StyledAppLoading>}\n                    {/* <div className=\"card-filter-panel\"></div> */}\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\n                            <div className=\"imexport\">\n                                <ExportPanel ref={exportPanelRef}\n                                    tainted={isTainted}\n                                    artworkCanvas={artworkCanvasRef.current}\n                                    onRequireExportData={exportData}\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\n                                    onClose={forceRefocus}\n                                />\n                                <div />\n                                <ImportPanel ref={importPanelRef}\n                                    onImport={treatNewCard}\n                                    onClose={forceRefocus}\n                                    allowHotkey={allowHotkey}\n                                    language={language}\n                                />\n                            </div>\n                            <BatchConverter language={language} />\n                            <DownloadButton ref={downloadButtonRef}\n                                canvasMap={canvasMap}\n                                imageChangeCount={imageChangeCount}\n                                isTainted={isTainted}\n                                isInitializing={isInitializing}\n                                onDownloadError={alertDownloadError}\n                            />\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\n                                <span>\n                                    {language['alert.download.tainted-first-line']}<br />\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\n                            </div>}\n                        </StyledDataButtonPanelContainer>\n                        <div className=\"card-canvas-container\">\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\n                                <Tooltip title={language['button.reset.tooltip']}>\n                                    <ResetButton\n                                        className=\"reset-button\"\n                                        onClick={() => {\n                                            const consent = window.confirm(language['prompt.reset.message']);\n\n                                            if (consent) {\n                                                const { setCard, card } = useCard.getState();\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\n                                                const contextualDefaultCardData = card.format === 'tcg'\n                                                    ? defaultCard\n                                                    : changeCardFormat(defaultCard, 'ocg');\n\n                                                setCard(contextualDefaultCardData, true);\n                                                setImageChangeCount(cnt => cnt + 1);\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\n                                            }\n                                        }}\n                                    >\n                                        <ClearOutlined />\n                                    </ResetButton>\n                                </Tooltip>\n                                <Tooltip title={<div className=\"center\">\n                                    {language['button.full-size.label']}\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\n                                </div>}>\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\n                                        <ZoomInOutlined />\n                                    </LightboxButton>\n                                </Tooltip>\n                                <canvas\n                                    key={canvasKey + 0.1}\n                                    id=\"export-canvas\"\n                                    ref={exportCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\n                                </div>\n                                <canvas id=\"frameCanvas\"\n                                    key={canvasKey}\n                                    ref={frameCanvasRef}\n                                    width={CanvasWidth}\n                                    height={CanvasHeight}\n                                />\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\n                            </StyledCardCanvasGroupContainer>\n                        </div>\n                    </div>\n                    {isLoading === false && <CardInputPanel\n                        ref={cardInputRef}\n                        artworkCanvas={artworkCanvasRef.current}\n                        backgroundCanvas={backgroundCanvasRef.current}\n                        onSourceLoaded={rerenderAllImage}\n                        onCropChange={rerenderCardImage}\n                        onTainted={markTaintedImage}\n                    />}\n                </div>\n                <CardManagerPanel\n                    language={language}\n                    onVisibleChange={toggleManagerMode}\n                    onDownload={exportCardInList}\n                    onSelect={treatNewCard}\n                    onRequestImport={() => {\n                        importPanelRef.current?.requestImport('new');\n                    }}\n                />\n                {/** Pixel perfect for card image */}\n                <Modal\n                    width={`${CanvasConst.width + 15 * 2}px`}\n                    wrapClassName=\"card-lightbox-overlay\"\n                    visible={lightboxVisible}\n                    forceRender={true}\n                    onCancel={() => setLightboxVisible(false)}\n                    footer={null}\n                >\n                    <canvas key={canvasKey + 0.1}\n                        id=\"lightbox-canvas\"\n                        ref={lightboxCanvasRef}\n                        width={CanvasWidth}\n                        height={CanvasHeight}\n                    />\n                </Modal>\n                <StyledByMe className=\"by-me\">\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\n                </StyledByMe>\n            </div>\n        </HotKeys>\n    );\n}\n\nexport default App;\n","import { useEffect, useRef, useState } from 'react';\nimport WebFont from 'webfontloader';\nimport { useCard } from './use-card';\nimport { useShallow } from 'zustand/react/shallow';\n\nexport type UseOCGFont = {\n    isLanguageInitiating: boolean,\n    onBeforeLoad: () => void,\n    onActive: () => void,\n    onInactive: () => void,\n    onFontInactive: (familyName: string, fvd: string) => void,\n}\nexport const useOCGFont = ({\n    isLanguageInitiating,\n    onActive,\n    onBeforeLoad,\n    onFontInactive,\n    onInactive,\n}: UseOCGFont) => {\n    const {\n        font,\n        format,\n    } = useCard(useShallow(state => ({\n        format: state.card.format,\n        font: state.card.nameStyle.font,\n    })));\n    const [styleContent, setStyleContent] = useState('');\n\n    const ocgReady = useRef(false);\n    const loadAttempt = useRef(0);\n    useEffect(() => {\n        if (\n            (format === 'ocg' || font === 'OCG')\n            && ocgReady.current === false\n            && loadAttempt.current <= 3\n            && isLanguageInitiating === false\n        ) {\n            loadAttempt.current += 1;\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\n            onBeforeLoad();\n\n            WebFont.load({\n                custom: {\n                    families: [\n                        'DFHSGothic-W3-WIN-RKSJ-H',\n                        'DFKakuTaiHiStd-W4',\n                        'FOT-Rodin Pro M',\n                        'Yu-Gi-Oh! DF Leisho 3',\n                    ],\n                    urls: ['asset/ocg-font.css'],\n                },\n                active: () => {\n                    ocgReady.current = true;\n                    onActive();\n                },\n                inactive: () => {\n                    ocgReady.current = true;\n                    onInactive();\n                },\n                fontinactive: onFontInactive,\n            });\n        }\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\n\n    return {\n        styleContent,\n    };\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}