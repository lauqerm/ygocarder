{"version":3,"sources":["model/canvas.ts","model/foil-finish-dye.tsx","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/flag.tsx","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/preset.ts","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/dye.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/color.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-batch-download.ts","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","service/use-carder-db/index.ts","service/use-color-picker/index.ts","service/use-global.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/mask.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","service/use-ocg-font.ts","service/use-preset-manager.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom/color.tsx","component/atom/copiable.tsx","component/atom/index.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/preset-option/image.tsx","component/preset-option/name-style.tsx","component/card-layout-preview.tsx","component/preset-manager/image-preset-form.tsx","component/preset-manager/index.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/inline-color-picker/index.tsx","component/inline-sketch-picker/index.tsx","component/lightbox/index.tsx","component/link-marker/index.tsx","component/setting-panel/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/attribute-input-group.tsx","page/input-panel/star-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/frame-setting-panel/frame-preset-panel.tsx","page/input-panel/frame-setting-panel/frame-behavior-setting-panel.tsx","page/input-panel/frame-setting-panel/index.tsx","page/common/index.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/batch-download-button.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","iconWidth","iconHeight","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","effectBox","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artFrameX","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","type3CommonInstruction","blendMode","type8CommonInstruction","FinishMap","type1","partInstructionMap","pendulumSubstituteMap","type2","type3","type4","type5","type6","type7","type8","type9","type10","type11","type12","type13","ArtFinishMap","art","small","medium","large","OtherFinishTypeMap","key","labelKey","background","attribute","icon","sticker","FoilMap","color","isOption","gold","platinum","getFoilList","DyeIndexMap","topLeftFrame","topRightFrame","bottomLeftFrame","bottomRightFrame","effectBackground","pendulumEffectBackground","foil","NO_ATTRIBUTE","AttributeList","nameKey","isCreative","ExtraAttributeList","RegionMap","category","fileKey","DefaultFormatAttribute","tcg","en","ocg","jp","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","fullLabelKey","isMixable","showIcon","imagePresetPath","imagePresetSource","className","alt","src","concat","process","IconTypeList","Object","values","IconTypeAttributeMap","IconTypeAttributeList","IconTypeStMap","IconTypeStList","TotalIconTypeMap","MAX_STAR_LENGTH","AUTO_FONT","getDefaultNameStyle","font","fillStyle","headTextFillStyle","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","hasShadow","lineColor","lineWidth","lineOffsetY","lineOffsetX","hasOutline","gradientAngle","gradientColor","hasGradient","embossPitch","embossYaw","embossThickness","hasEmboss","preset","pattern","createPresetNameStyle","presetValue","PresetNameStyleMap","commonB","image","commonW","skillDefault","skillArial","rare","secretGradient","secret","platinum2","ultra","ultra2","animeRed","animeSilver","animeGold","promo","embossGold","embossPlatinum","rainbowSecretRare","PresetNameStyleList","PatternMap","none","patternImage","overrideFill","PatternList","PendulumSizeMap","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","FlagInfoList","index","FlagIndexMap","FLAG_LENGTH","length","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","vietnameseFont","vietnameseFontRatio","letterOffsetMap","baseline","yRatio","DefaultTCGEffectFontData","fontStyle","fontList","variant","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","edge","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","DefaultFrameInfo","FramePositionMap","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","TotalIconTypePresetMap","TotalAttributeIconPresetList","map","region","regionName","hasExtraAttribute","includes","filter","_ref","flatMap","_ref2","toLowerCase","_ref3","_ref4","TotalAttributeIconPresetMap","list","TotalImagePresetMap","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","STYLING_TAG_SOURCE","IMG_TAG_NAME","RENDER_TAG_SOURCE","RenderTagRegex","ITALIC_CLOSE_TAG","BOLD_CLOSE_TAG","PRE_OPEN_TAG","PRE_CLOSE_TAG","WHOLE_WORD_SOURCE","WholeWordRegex","VietnameseDiacriticLetterRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","FULL_LINE_PLACEHOLDER","FLAVOR_LINE_PLACEHOLDER","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","leftFrame","rightFrame","pendulumRightFrame","finish","otherFinish","artFinish","nameStyleType","nameStyle","subFamily","cardIcon","star","starAlignment","starList","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","linkRating","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","minLine","justifyRatio","pendulumStyle","effect","setId","atk","def","password","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","flag","dyeList","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","getSlindingTypeList","language","cardWidth","cardHeight","createCanvas","arguments","undefined","canvas","document","createElement","ctx","getContext","distanceTransform","array","exponent","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","dyeCanvas","baseCanvas","HexColorRegex","test","overlayContext","overlayCanvas","drawImage","globalCompositeOperation","fillRect","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","checkLightFooter","checkDiplayLinkRating","displayMode","showLinkRating","resolveFrameStyle","frameData","_ref5","resolvedFrame","resolvedTopLeft","resolvedBottomLeft","resolveNameStyle","_ref6","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","isSpeedSkill","contextualFont","lightHeader","contextualColor","_nameStyle$preset","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","finishList","kanjiHelper","defaultFlagList","currentFlagList","defaultDyeList","currentDyeList","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","normalizeCardName","replaceAll","normalizeCardEffect","downloadBlob","link","href","window","download","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","_objectWithoutProperties","_excluded","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","hexToRgba","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","componentToHex","c","toString","getContrastColor","rgbColor","_rgbColor$","_rgbColor$2","_rgbColor$3","MAX_CONDENSER_THRESHOLD","condense","worker","minThreshold","effectiveMedian","condenser","median","lastEffective","iterateCount","magnitude","maxThreshold","searchDown","reverseSearch","getMedian","setMedian","newMedian","setLastEffective","getLastEffective","applyLastEffective","getIterateCount","createCondenser","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","swapTextData","currentTextData","nextFontData","fontLevel","nextCurrentFont","combinedFontData","currentFont","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","cnt","setCnt","useState","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","random","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","forceRefocus","_document$querySelect","selector","querySelector","focus","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","_taggedTemplateLiteral","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","targetRegion","termMap","newSetId","_termMap$entry","useBatchDownload","create","batchName","batch","batchQueue","batchDataMap","isBatchDownloading","isReady","startBatchDownload","stopBatchDownload","clearQueue","addToBatch","cardId","cardName","cardBlob","nextQueue","nextBatchDataMap","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","guide.format.section-7.content","guide.format.section-8.content","colorTab","scaleType","useI18N","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","startsWith","csvToCardList","headerIndexMap","_reader","_reader2","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader0","_reader1","_reader10","_reader11","_reader12","_reader13","_reader14","_reader15","_reader$split$filter","_reader16","_reader17","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_reader37","_reader38","_reader39","_reader40","_reader41","_reader42","_reader43","_reader44","_emptyCard$isLink","_filter","_reader45","_reader47","_reader48","_reader49","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","finishAttribute","finishSticker","finishIcon","finishBackground","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","effectMinLine","pendulumEffectMinLine","effectJustifyRatio","pendulumEffectJustifyRatio","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader46","baseFlag","Number","baseDyeList","String","getDefaultDyeList","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","selectedMap","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","artCropRight","backgroundCropRight","restRCard","_excluded2","equals","setActiveId","selectCard","_ref8","nextMap","setSelectMap","_ref9","prev","curr","setCardList","_cardList$","deleteCard","_ref0","_ref1","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","exportScheme","globalScale","mirrorPendulumScale","reduceMotionColor","resolution","showCreativeOption","showExtraAttribute","showExtraDecorativeOption","slidingType","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","getCardDataUrl","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","addToCurrentBatch","fetchedDataUrl","classList","_document$querySelect2","click","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","path","insertUrlParam","onSave","_document$querySelect3","queuingSize","isPipelineRunning","useCarderDb","db","setDb","dbReady","setDbReady","openDB","upgrade","_oldVersion","newVersion","objectStoreNames","contains","createObjectStore","keyPath","setupYgoCarderDb","useColorPicker","onChange","currentText","setCurrentText","internalValue","setInternalValue","rgb","normalizedText","inputText","setColor","useGlobalMemory","memory","activeDropzone","layoutPresetList","nameStylePresetList","imagePresetList","imagePresetMap","updateGlobalMemory","newGlobalMemory","content","useGlobal","targetMemory","useShallow","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","imageCacheMap","drawAsset","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawFrom","normalizeDxy","dw","dh","naturalWidth","naturalHeight","baseDW","baseDH","actualDW","actualDH","drawFromWithSize","sx","sy","sw","sh","internalImage","_imageCacheMap$source3","_imageCacheMap$source4","actualSX","actualSY","actualSW","actualSH","drawAssetWithSize","drawWithStyle","clonedCtx","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","vietnameseFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyFuriganaFont","bold","stopApplyFuriganaFont","applyLargerText","fontRatio","stopApplyLargerText","applyNumberFont","stopApplyNumberFont","applyOrdinalFont","stopApplyOrdinalFont","applySymbolFont","nextRatio","stopApplySymbolFont","applyVietnameseFont","stopApplyVietnameseFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","defaultGap","currentRightGap","offsetable","leftMostGap","renderTagMatchResult","match","matchResult","exec","lastIndex","attributeKey","attributeValue","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","_letterOffsetMap$curr","_letterOffsetMap$frag","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","preformatMode","_textData$fontData$va","_textData$fontData","italicFontData","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","defaultFontData","currentFontData","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","_defaultFontData$vari","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","offsetX","_offsetX","_offsetY","normalizedWidth","normalizedSource","isInternalSource","presetHeight","presetWidth","presetOffsetX","presetOffsetY","_TotalImagePresetMap$","lineHeightOffsetRatio","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","_letterOffsetMap$frag2","_letterOffsetMap$frag3","fontSizeRatio","offsetBaseline","offsetEdge","normalizeCardText","multiline","dictionaryType","nonNullableText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","baseMinLine","baseJustifyRatio","sizeLevel","normalizedContent","lineList","fullLineListOption","effectFlavorCondition","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","effectText","potentialFlavorConditionText","tryCnt","lineReplacement","lineContent","fullLineReplacement","fullLineContent","paragraphResult","splitEffect","effectiveLineCount","scaledFontData","maxFontListLineLength","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","tolerantValue","lineDrawInfoList","precalculatedLine","finalTokenList","finalSpaceWidth","finalTextData","_fullLineListOption$s","shift","flavorFontData","dynamicFlavorFontData","flavorTextCurrentFont","flavorTextData","lineDrawInfo","MaskPromise","right","applyAlphaMask","urlOrCanvas","maskData","layerData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","isXyz","pendulumFrameTypeMap","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resolvedLayoutStyle","resolvedEffectBackground","resolvedPendulumEffectBackground","resultAPI","drawFrame","willReplaceFrame","topFrameCtx","topFrameCanvas","dyedTopFrameCanvas","dyedTopFrameCtx","topRightCanvas","dyedTopRightCanvas","bottomFrameCtx","bottomFrameCanvas","dyedBottomFrameCanvas","dyedBottomFrameCtx","bottomRightCanvas","dyedBottomRightCanvas","backgroundWidth","backgroundHeight","resetTransform","drawCardArt","externalCtx","imageWidth","imageHeight","drawBackground","_otherFinish$","hasArtBorder","backgroundFinish","loopBackgroundFinish","drawAttribute","_otherFinish$2","attributeCanvas","attributeCtx","attributeFinish","loopAttributeFinish","attributeFinishCanvas","attributeFinishCtx","drawStar","_otherFinish$3","normalizedCardIcon","starFinish","loopStarFinish","onStarDraw","normalizedStarList","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starCtx","all","_","cardIconName","starFinishCanvas","starFinishCtx","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconCtx","drawStatBorder","drawNameBackground","nameBackgroundCtx","nameBackgroundCanvas","dyedLeftNameCanvas","dyedLeftNameCtx","nameRightCanvas","dyedRightNameCanvas","drawEffectBackground","withPendulum","effectBackgroundCtx","effectBackgroundCanvas","effectBoxX","dyedEffectBackgroundCanvas","_PendulumSizeMapExcep","pendulumEffectBackgroundCtx","pendulumEffectBackgroundCanvas","dyedPendulumEffectBackgroundCanvas","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","willDye","validDyeColor","usedFoil","pendulumBorderCanvas","pendulumBorderCtx","dyedCardBorderFoilCanvas","pendulumBorderFoilCtx","pendulumBorderFoilCanvas","dyedPendulumBorderFoilCanvas","drawEffectBorder","drawCardBorder","cardBorderFoilCtx","cardBorderFoilCanvas","drawArtBorderFoil","artBorderFoilCtx","artBorderFoilCanvas","dyedArtBorderFoilCanvas","drawEffectBorderFoil","effectBorderFoilCtx","effectBorderFoilCanvas","dyedEffectBorderFoilCanvas","drawNameFinish","drawAttributeFinish","drawArtFinish","artCtx","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","digitList","digit","accLeft","firstDigit","secondDigit","firstDigitWidth","secondDigitWidth","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","nextWidth","condenseRatio","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","otherText","overlay","bottomFrame","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightRightFooter","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","foilDyeColor","normalizedSubFamily","normalizedTypeAbility","showDefAndLinkFlag","linkRatingDisplayMode","isLinkST","showDefAndLink","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","iconFinish","stickerFinish","_frameCanvasRef$curre","normalizedOpacity","keepEffectBox","fillBaseColor","w","customFill","artOnCardCanvas","artOnCardCtx","combinedArtCanvas","combinedArtCtx","normalizedLinkRating","rating","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_statCanvasRef$curren","hasLink","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","actualEdge","actualBaseline","actualBaselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","normalizedStickerFinish","loopStickerFinish","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","normalizedIconFinish","loopIconFinish","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","iconCanvas","iconCtx","iconFinishCanvas","iconFinishCtx","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","positionType","isActive","baseLink","activeLink","baseDrawLinkArrowMap","withBorder","dyeColor","willDyed","drawFunction","linkMapFoilCtx","linkMapFoilCanvas","dyedLinkMapFoilCanvas","baseDrawLinkMapFoil","drawHistory","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","feedbackReminder","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","usePresetManager","setVisible","newStatus","StyledBatchConverterModal","Modal","BatchConverter","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","getDerivedStateFromError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","$freeSize","$size","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","ColorBlock","$static","$empty","StyledCode","CopiableOverlayStyle","StyledMono","_templateObject3","Copiable","CheckOutlined","container","Container","showFlashOverlay","setFlashOverlay","copyingContent","copy","CopiableCode","StyledMarkdown","StyledPopMarkdown","InternalPopover","CardActionButton","SolidLabel","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","ResolutionLabelContainer","_templateObject7","$warning","ResolutionLabel","warning","backgroundMarch","keyframes","_templateObject8","DropZone","_templateObject9","$visible","_templateObject0","ManagerDrawer","Drawer","_templateObject1","SingleSliderContainer","_templateObject10","rotate","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","rel","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","a","b","majorA","minorA","patchA","majorB","minorB","patchB","onMouseOver","FAD_BUTTON_ID","StyledQuoteContainer","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","setFeedbackReminder","currentReminder","duration","onClose","footer","Tabs","TabPane","tab","answer","StyledImagePresetContainer","ImagePresetOption","imagePreset","onDelete","onEdit","normalizedOffsetX","normalizedOffsetY","Popconfirm","onConfirm","EditOutlined","StyledPatternOption","OPTION_WIDTH","PresetOptionContainer","NameStylePresetOption","frameInfo","presetContent","onOverwrite","onActive","canvasRef","backgroundImage","SaveOutlined","CardLayoutContainer","$width","$height","$hoverable","$layoutHoverable","CardLayoutPreview","baseLayoutState","resolvedLayoutState","activeLayout","onLayoutSelect","vertical","_FrameInfoMap$frame","backgroundColor","boxShadow","LayoutPresetOptionContainer","LayoutPresetOption","ImagePresetFormContainer","Form","Item","ImagePresetForm","onSubmit","form","useForm","editKey","setEditKey","turnOffForm","resetFields","edit","setFieldsValue","Button","onFinish","onFinishFailed","autoComplete","rules","required","Input","Row","gutter","Col","InputNumber","step","htmlType","PresetImportReviewModalContainer","PresetImportReviewModal","importData","setNameStylePresetList","setLayoutPresetList","layoutPresetMap","nameStylePresetMap","nextLayoutPresetList","nextNameStylePresetList","decisionMap","setDecisionMap","verdict","maskClosable","layoutVerdictList","nameStyleVerdictList","layoutReplaceMap","layoutFullList","layoutNewList","layoutPresetTx","transaction","put","done","nameStyleReplaceMap","nameStyleFullList","nameStyleNewList","nameStylePresetTx","_nameStylePresetMap$k","commonProps","currentContent","_layoutPresetMap$key","_currentContent$effec","_currentContent$pendu","_content$effectStyle","_content$pendulumStyl","PresetManagerContainer","PresetManager","setImagePresetList","setImportData","inputKey","setInputKey","presetImportDirectInputRef","imagePresetFormRef","directUploadId","_presetImportDirectIn","getFileAndImport","tx","layoutState","currentKey","_imagePresetFormRef$c","Affiliation","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","setPresetManagerVisible","presetManagerVisible","Radio","Group","onMouseOut","DatabaseFilled","AuditOutlined","TaintedCanvasPanel","TaintedCanvasWarning","Panel","Collapse","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","SpecialPathContainer","ImagePathPreview","imagePath","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","ghost","header","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","StyledLoadingFullViewContainer","Loading","Spin","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setActiveDropzone","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","applyOfflineSource","maxFileSize","readAsDataURL","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","placeholder","maxLength","allowClear","alert","_fileInputRef$current","setValue","onDragOver","onDrop","currentTarget","dataTransfer","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledInlineColorPickerContainer","InlineColorList","InlineColorPicker","dotColor","SaturationBoardContainer","SaturationBoard","CustomPicker","Saturation","HorizontalSketchColorList","HorizontalSketchPickerContainer","HorizontalSketchPicker","noColor","nextColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","_objectDestructuringEmpty","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledLinkMarkChooser","LinkMarkerPicker","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","StyledDownloadDropdownLabel","Menu","StyledDownloadDropdownOption","ResolutionPicker","domEvent","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdownContainer","StyledDropdownLabel","StyledDropdown","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","requestImport","cleanup","startImport","imageSurvey","isYgoprodeckImage","surveyedDecodedCard","writeOnCurrentCard","addToList","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","getFoilButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","colorInfo","setCurrentOffset","ChromePicker","styles","default","picker","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPresetContainer","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextLinkRating","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","destroyTooltipOnHide","BorderOuterOutlined","_language$tooltipKey","_opacity$type","_opacity$type2","activable","AttributeRegionTrain","AttributeInputGroup","changeAttribute","changeRegion","attributeList","getAttributeList","_RegionMap$region","extraAttributeList","getExtraAttributeList","DoubleRightOutlined","DoubleLeftOutlined","IconDropdownOverlay","StyledIconDropdown","IconDropdownContainer","StarTypeSelector","activeCardIcon","showMixableOnly","showRemove","filterFunction","StarListSelectPanel","StarListControlPanel","StarListContainer","StarPicker","changeStarList","transformer","nextStarList","slotList","use12","setSlot","slot","activeInformation","setActiveInformation","activeList","changeStatus","currentStarList","limit","padUnit","nextList","padRight","slotValue","starInfo","willChecked","TypeWithIconContainer","StyledCheckboxStarTrain","PopoverButtonInCardIconInput","CustomStarContainer","CardIconAlignmentPicker","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","CardIconInputGroup","starPickerRef","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconType","iconDropdownText","IconDropdownLabel","IconDropdown","_starPickerRef$curren","DropdownChildren","_starPickerRef$curren2","iconEntry","_starPickerRef$curren3","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","StyledLinkRatingInputContainer","FooterInputGroup","autoLinkRating","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","linkRatingInputRef","showAtkInput","showLinkInput","showDefInput","showPadding","copyrightList","changeATK","changeDEF","changeLinkRating","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","_linkRatingInputRef$c","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","LinkPickerContainer","$hover","StyledImageRadioTrain","FinishLabel","OtherFinishPicker","finishValueList","changeFinish","selectedType","setSelectedType","valueMap","activeWidget","some","getOtherFinishList","nextValueMap","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeOtherFinish","changeImageCrop","minWidth","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","navigator","clipboard","writeText","_setIdInputRef$curren2","randomSetID","FramePresetPanelContainer","FramePresetPanel","FrameBehaviorSettingPanelContainer","FrameBehaviorSettingPanel","updateFlag","nextFlagList","_FlagInfoList$index","FrameLayoutContainer","FrameLayoutSettingPanel","_FramePositionMap$act","onFrameChange","recentCustomPendulumFrame","setActiveLayout","frameLayoutMainId","foilButtonList","changeFoil","changeBottomLeftFrame","changeBottomRightFrame","changeTopLeftFrame","changeTopRightFrame","changeEffectBackground","nextEffectStyle","changePendulumEffectBackground","nextPendulumEffectStyle","changeDyeList","changeLayout","layoutValue","activeFrame","_recentCustomPendulum","changeDye","nextDyeList","FlagPresentationList","valueDisplay","_value","sampleDisplay","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","flagList","willBecomePendulum","_bottomFrameOptionGri","ApartmentOutlined","willMirror","PostPendulumFirstLineContainer","AdvancedParagraphButton","AdvancedParagraphPanel","PostPendulumInputGroup","_IconTypeMap$cardIcon","typeAbilitySeparator","typeAbilityInputRef","setEffectMinLine","setPendulumEffectMinLine","setEffectJustifyRatio","setPendulumEffectJustifyRatio","changeTypeAbility","toggleFuriganaHelper","newEffectStyle","newPendulumEffectStyle","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","frameTrainRef","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","onFinishChange","changeOpacity","changeNameStyle","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","ClearOutlined","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","_frameTrainRef$curren","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$topLeft","_FrameInfoMap$topLeft2","_FrameInfoMap$topRigh","_FrameInfoMap$topRigh2","_FrameInfoMap$bottomL","_FrameInfoMap$bottomL2","_FrameInfoMap$bottomR","_FrameInfoMap$bottomR2","selected","onDuplicate","actionVisible","setActionVisible","normalizedCardName","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","exportableCard","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","ExportingListContainer","BatchDownloadButton","nextSelectedId","lastSelectedId","exportAllCard","LoadingOutlined","CheckCircleOutlined","HourglassOutlined","StyledMenuItem","StyledManagerCardList","CardThumbRow","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","CaretDownFilled","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","StyledToggleButton","StyledManagerSample","ManagerSample","FileTextOutlined","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","_ref22","_ref23","_ref24","_FramePositionMap$key","_FramePositionMap$key2","_ref25","_ref26","chanceToRemindBackup","seedIncrement","internalChance","check","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","stringifedFlag","stringifedDyeList","stringifedSubFamilyList","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","isMobile","isMobileDevice","userAgent","vendor","opera","substr","windowSlidable","maxTouchPoints","setInitializing","managerVisible","setManagerVisible","slidingWindowRef","containerWindowRef","moveableRef","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","stopDrag","timeoutHandle","checkDragHeartbeat","clearTimeout","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_iteratorError","_iteratorAbruptCompletion","_didIteratorError","_step","_iterator","_asyncIterator","store","next","cursor","err","return","imagePresetTx","_iteratorError2","_iteratorAbruptCompletion2","_didIteratorError2","_step2","_iterator2","_iteratorError3","_iteratorAbruptCompletion3","_didIteratorError3","_step3","_iterator3","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onScroll","currentScrollY","scrollTop","clientWidth","viewportHeight","getBoundingClientRect","slidingWindowHeight","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","onContextMenu","Moveable","draggable","throttleDrag","edgeDraggable","startDragRotate","throttleDragRotate","throttleScale","snappable","pinchable","snapContainer","bounds","bottom","onDrag","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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ACVF,UAAW,KAEfhH,IAAK,CACDiH,aAAc,SACdC,SAAU,OACVF,UAAW,MC3JNc,GAAqB,CAC9B,CACIC,UAAW,2BACXC,SAAU,8FAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,S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ACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAGA,KACFjP,KAAK,OAELkP,GAAqB,CACvBH,SAAU,CACNI,SAAU,CAAEtkB,KAAM,IAAK1D,MAAO,MAC9BioB,EAAG,CAAEvkB,KAAM,IAAK1D,MAAO,EAAM,MAEjC6nB,aAAc,CACV,oBAEA,gBAEA,YACA,4EAEA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,8BACA,mBAEA,oBAEA,gBAEA,0BACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCACA,gCAEA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CACA,4CACA,6CAEA,6DACA,8DACA,+DACA,8DACA,+DACA,8DACA,+DACA,8DACA,6DACA,gBACA,iEACA,qCACA,IACA,sBAEA,KACFjP,KAAK,OAELqP,GAAkB,CACpBN,SAAU,CACN,KAAQ,CAAElkB,KAAM,KAAM1D,MAAO,GAC7B,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,QAAW,CAAE0D,KAAM,KAAM1D,MAAO,GAChC,GAAM,CAAE0D,KAAM,KAAM1D,MAAO,GAC3B,WAAc,CAAE0D,KAAM,KAAM1D,MAAO,CAAC,EAAG,EAAG,IAC1C,WAAc,CAAE0D,KAAM,IAAK1D,MAAO,OAEtC6nB,aAAc,CACV,2BACA,oBACA,qBACA,2BACA,gBACA,4EACA,yDACA,YACA,KACFhP,KAAK,MACPiP,eAAgB,CACZ,2BACA,2BACA,oBACA,qBACA,oBACA,yBACA,yBACA,yBACA,oBACA,gCAEA,oBACA,sDACA,oDACA,qDACA,oDACA,mDACA,sDAC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AK,CACD7rC,KAAM,UACN8qC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBmB,iBAAiB,GAEzB,GAgEIE,IAEJC,oBAAqBpB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBvmB,EAAI,CACA2oB,cAAc,KAGtBjB,eACAW,oBAIKW,GAAcA,IACN1C,GAAQpyB,IAAA,IAAC,SAAEqJ,GAAUrJ,EAAA,OAAKqJ,IAIlC0rB,GAAcA,IAAM3C,GAAQ4C,WAAW3rB,S,cCvIpD,MAAM4rB,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBACA,SAEA,YACA,iBACA,iBACA,cACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,uBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,4BACA,0BACA,+BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,qCACA,mCACA,wCACA,0BACA,2BACA,2BACA,6BACA,2BACA,4BACA,sBACA,yBACA,aACA,cACA,qBACA,WACA,YACA,OACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,I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","file":"static/js/main.c7af0f22.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 56,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n    iconWidth: 43,\r\n    iconHeight: 44,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    effectBox: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artFrameX: 100,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artFrameX: 56,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        /** Unlike span background, frame background replace the entire frame even under the border. So frame background start from 0,0 while span background start from 28,28. */\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ART_FINISH_TYPE = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type10: {\r\n        value: 'type10',\r\n        label: '10',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type11: {\r\n        value: 'type11',\r\n        label: '11',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type12: {\r\n        value: 'type12',\r\n        label: '12',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'source-over', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type13: {\r\n        value: 'type13',\r\n        label: '13',\r\n        partInstructionMap: {\r\n            'total-overlay': [],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            art: [\r\n                { blendMode: 'darken', opacity: 1 },\r\n                { blendMode: 'multiply', opacity: 1 },\r\n                { blendMode: 'overlay', opacity: 1 },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport const OtherFinishTypeMap = {\r\n    art: {\r\n        key: 'art' as const,\r\n        labelKey: 'input.art-finish.label',\r\n    },\r\n    background: {\r\n        key: 'background' as const,\r\n        labelKey: 'input.background.label',\r\n    },\r\n    attribute: {\r\n        key: 'attribute' as const,\r\n        labelKey: 'input.attribute.label',\r\n    },\r\n    icon: {\r\n        key: 'icon' as const,\r\n        labelKey: 'input.icon-type.icon.label',\r\n    },\r\n    sticker: {\r\n        key: 'sticker' as const,\r\n        labelKey: 'input.sticker.label',\r\n    },\r\n};\r\nexport type OtherFinish = [attribute: string, icon: string, sticker: string, background: string];\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilMap = {\r\n    normal: {\r\n        name: 'normal' as const,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    gold: {\r\n        name: 'gold' as const,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    platinum: {\r\n        name: 'platinum' as const,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        label: dictionary?.normal,\r\n        ...FoilMap.normal,\r\n    },\r\n    {\r\n        label: dictionary?.gold,\r\n        ...FoilMap.gold,\r\n    },\r\n    {\r\n        label: dictionary?.platinum,\r\n        ...FoilMap.platinum,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];\r\n\r\nexport type FrameDyeList = [\r\n    topLeft: string,\r\n    topRight: string,\r\n    bottomLeft: string,\r\n    bottomRight: string,\r\n    effect: string,\r\n    pendulumEffect: string,\r\n    foil: string,\r\n];\r\nexport const getDefaultDyeList = () => ['', '', '', '', '', '', ''] as FrameDyeList;\r\nexport const DYE_LIST_LENGTH = getDefaultDyeList().length;\r\n\r\nexport const DyeIndexMap = {\r\n    topLeftFrame: 0,\r\n    topRightFrame: 1,\r\n    bottomLeftFrame: 2,\r\n    bottomRightFrame: 3,\r\n    effectBackground: 4,\r\n    pendulumEffectBackground: 5,\r\n    foil: 6,\r\n};","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const ExtraAttributeList = [\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-1',\r\n        nameKey: 'input.attribute.boss-1',\r\n        label: 'Boss 1',\r\n        color: '#9b325d',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-2',\r\n        nameKey: 'input.attribute.boss-2',\r\n        label: 'Boss 2',\r\n        color: '#942a56',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-3',\r\n        nameKey: 'input.attribute.boss-3',\r\n        label: 'Boss 3',\r\n        color: '#86214b',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'BOSS-START',\r\n        nameKey: 'input.attribute.boss-start',\r\n        label: 'Boss Start',\r\n        color: '#a13864',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\nexport const RegionMap: Record<string, { key: string, category: 'tcg' | 'ocg', fileKey: string }> = {\r\n    'jp': { key: 'jp', category: 'ocg', fileKey: 'ocg' },\r\n    'ch': { key: 'ch', category: 'ocg', fileKey: 'ch' },\r\n    'en': { key: 'en', category: 'tcg', fileKey: 'tcg' },\r\n    'fr': { key: 'fr', category: 'tcg', fileKey: 'fr' },\r\n    'de': { key: 'de', category: 'tcg', fileKey: 'de' },\r\n    'it': { key: 'it', category: 'tcg', fileKey: 'it' },\r\n    'sp': { key: 'sp', category: 'tcg', fileKey: 'sp' },\r\n};\r\nexport const DefaultFormatAttribute: Record<string, string> = {\r\n    tcg: RegionMap.en.key,\r\n    ocg: RegionMap.jp.key,\r\n};\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Normal',\r\n        value: 'NORMAL',\r\n        nameKey: 'input.icon.normal',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport type IconTypeInfo = {\r\n    value: string,\r\n    labelKey: string | ((language: WithLanguage) => React.ReactNode),\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n    isMixable: boolean,\r\n    showIcon: boolean,\r\n    imagePresetPath: string,\r\n    imagePresetSource: string,\r\n}\r\nexport const IconTypeMap: Record<string, IconTypeInfo> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-',\r\n        imagePresetSource: '',\r\n    },\r\n    'custom': {\r\n        value: 'custom',\r\n        labelKey: 'input.icon-type.custom.label',\r\n        fullLabelKey: 'input.icon-type.custom.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-',\r\n        imagePresetSource: '',\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-icon-list.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: false,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-st',\r\n        imagePresetSource: 'subfamily/subfamily-icon-list.png',\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-level',\r\n        imagePresetSource: 'subfamily/subfamily-level.png',\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-negative-level',\r\n        imagePresetSource: 'subfamily/subfamily-negative-level.png',\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-rank',\r\n        imagePresetSource: 'subfamily/subfamily-rank.png',\r\n    },\r\n    'level-rank': {\r\n        value: 'level-rank',\r\n        labelKey: 'input.icon-type.level-rank.label',\r\n        fullLabelKey: 'input.icon-type.level-rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level-rank.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: false,\r\n        imagePresetPath: 'icon-level-rank',\r\n        imagePresetSource: 'subfamily/subfamily-level-rank.png',\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const IconTypeAttributeMap: Record<string, IconTypeInfo> = {\r\n    'dark': {\r\n        value: 'dark',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.dark',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"dark-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-dark.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-dark',\r\n        imagePresetSource: 'subfamily/subfamily-dark.png',\r\n    },\r\n    'earth': {\r\n        value: 'earth',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.earth',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"earth-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-earth.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-earth',\r\n        imagePresetSource: 'subfamily/subfamily-earth.png',\r\n    },\r\n    'fire': {\r\n        value: 'fire',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.fire',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"fire-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-fire.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-fire',\r\n        imagePresetSource: 'subfamily/subfamily-fire.png',\r\n    },\r\n    'light': {\r\n        value: 'light',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.light',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"light-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-light.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-light',\r\n        imagePresetSource: 'subfamily/subfamily-light.png',\r\n    },\r\n    'water': {\r\n        value: 'water',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.water',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"water-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-water.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-water',\r\n        imagePresetSource: 'subfamily/subfamily-water.png',\r\n    },\r\n    'wind': {\r\n        value: 'wind',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.wind',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"wind-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-wind.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-wind',\r\n        imagePresetSource: 'subfamily/subfamily-wind.png',\r\n    },\r\n    'divine': {\r\n        value: 'divine',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.divine',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"divine-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-divine.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-divine',\r\n        imagePresetSource: 'subfamily/subfamily-divine.png',\r\n    },\r\n    'spell': {\r\n        value: 'spell',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.spell',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"spell-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-spell.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-spell',\r\n        imagePresetSource: 'subfamily/subfamily-spell.png',\r\n    },\r\n    'trap': {\r\n        value: 'trap',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.attribute.trap',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"trap-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-trap.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-trap',\r\n        imagePresetSource: 'subfamily/subfamily-trap.png',\r\n    },\r\n};\r\nexport const IconTypeAttributeList = Object.values(IconTypeAttributeMap);\r\n\r\nexport const IconTypeStMap: Record<string, IconTypeInfo> = {\r\n    'continuous-l': {\r\n        value: 'continuous-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.continuous',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"continuous-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-continuous',\r\n        imagePresetSource: 'subfamily/subfamily-continuous-l.png',\r\n    },\r\n    'counter-l': {\r\n        value: 'counter-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.counter',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"counter-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-counter-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-counter',\r\n        imagePresetSource: 'subfamily/subfamily-counter-l.png',\r\n    },\r\n    'equip-l': {\r\n        value: 'equip-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.equip',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"equip-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-equip-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-equip',\r\n        imagePresetSource: 'subfamily/subfamily-equip-l.png',\r\n    },\r\n    'field-l': {\r\n        value: 'field-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.field',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"field-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-field-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-field',\r\n        imagePresetSource: 'subfamily/subfamily-field-l.png',\r\n    },\r\n    'quick-play-l': {\r\n        value: 'quick-play-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.quick-play',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"quick-play-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-quick-play-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-quick-play',\r\n        imagePresetSource: 'subfamily/subfamily-quick-play-l.png',\r\n    },\r\n    'ritual-l': {\r\n        value: 'ritual-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.ritual',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"ritual-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-ritual-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-ritual',\r\n        imagePresetSource: 'subfamily/subfamily-ritual-l.png',\r\n    },\r\n    'normal-l': {\r\n        value: 'normal-l',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon.normal',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"normal-large-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-normal-l.png`}\r\n        />,\r\n        isOption: true,\r\n        isMixable: true,\r\n        showIcon: true,\r\n        imagePresetPath: 'icon-normal',\r\n        imagePresetSource: 'subfamily/subfamily-normal-l.png',\r\n    },\r\n};\r\nexport const IconTypeStList = Object.values(IconTypeStMap);\r\n\r\nexport const TotalIconTypeMap = {\r\n    ...IconTypeMap,\r\n    ...IconTypeAttributeMap,\r\n    ...IconTypeStMap,\r\n};\r\nexport const MAX_STAR_LENGTH = 13;\r\nexport const NORMAL_STAR_LENGTH = 12;","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const AUTO_FONT = 'Auto';\r\nexport const getDefaultNameStyle = () => ({\r\n    font: AUTO_FONT,\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nexport const createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    font: AUTO_FONT,\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum'\r\n| 'rainbowSecretRare';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    rainbowSecretRare: {\r\n        key: 'rainbowSecretRare',\r\n        label: 'Rainbow Secret Rare',\r\n        image: 'asset/image/other/name-rainbow-secret-rare.png',\r\n        value: createPresetNameStyle({\r\n            hasOutline: true,\r\n            headTextFillStyle: '#000000',\r\n            lineColor: '#333333',\r\n            lineOffsetX: 0,\r\n            lineOffsetY: 0,\r\n            lineWidth: 6,\r\n            pattern: 'type2',\r\n            preset: 'rainbowSecretRare',\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 792,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 808,\r\n        artlessFrameY: 553,\r\n        fontSize: 56.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CardFlag = [\r\n    ShowDefAndLink: number,\r\n    LinkRating: number,\r\n];\r\n/**\r\n * Remember, 0 is ALWAYS the default state.\r\n */\r\nexport const getDefaultCardFlag = (): CardFlag => [0, 0];\r\n\r\nexport const LINK_RATING_ALWAYS_AUTO = 0;\r\nexport const LINK_RATING_ALWAYS_SHOW = 1;\r\nexport const LINK_RATING_ALWAYS_HIDE = 2;\r\n\r\nexport const FlagInfoList = [\r\n    {\r\n        index: 0,\r\n        labelKey: 'input.flag.mix-def-link',\r\n        type: 'checkbox' as const,\r\n    },\r\n    {\r\n        index: 1,\r\n        labelKey: 'input.flag.link-rating-behavior',\r\n        type: 'link-rating-behavior' as const,\r\n    },\r\n];\r\nexport const FlagIndexMap = {\r\n    showDefAndLink: 0,\r\n    linkRating: 1,\r\n};\r\nexport const FLAG_LENGTH = FlagInfoList.length;","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 951.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94, trueHeightCap: 80 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 122.6 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94, trueHeightCap: 155.8 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5, trueHeightCap: 79.8 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 126.1 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5, trueHeightCap: 155.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    letterOffsetMap?: Record<string, { ratio: number, baseline: number, edge?: number, yRatio?: number }>,\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    variant: string,\r\n    vietnameseFont?: string,\r\n    vietnameseFontRatio?: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextGapRatio: 0,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    vietnameseFont: 'Times New Roman',\r\n    vietnameseFontRatio: 1.1,\r\n    letterOffsetMap: {\r\n        '★': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '☆': { ratio: 0.9, baseline: -0.05, yRatio: 1 },\r\n        '¡': { ratio: 1.2, baseline: -0.0, yRatio: 1.05 },\r\n    },\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook, Times New Roman',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n    variant: 'default-tcg',\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\", \"SVN-Times New Roman Italic\"',\r\n    vietnameseFont: '\"SVN-Times New Roman Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    vietnameseFontRatio: 1.08,\r\n    fontList: [],\r\n    variant: 'default-tcg-normal',\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact' as MetricMethod,\r\n    fontList: [],\r\n    variant: 'default-ocg',\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-stat',\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-type',\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge',\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-stat',\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-type-stat',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-pendulumLarge-type',\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps, Times New Roman',\r\n            font: 'MatrixRegularSmallCaps, Times New Roman',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.55,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix, Times New Roman',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'MatrixRegularSmallCaps',\r\n            vietnameseFontRatio: 1,\r\n            variant: 'default-name',\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterOffsetMap: {\r\n                '★': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '☆': { ratio: 0.55, baseline: -0.05, yRatio: 1 },\r\n                '¡': { ratio: 1, baseline: -0.098, edge: 0.02, yRatio: 0.58 },\r\n            },\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            fontStyle: 'tcg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.825,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: 'Arial',\r\n            vietnameseFontRatio: 1,\r\n            weight: 'bold',\r\n            variant: 'arial-name',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            fontStyle: 'ocg',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextBold: true,\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            vietnameseFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            vietnameseFontRatio: 1,\r\n            variant: 'ocg-name',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-password',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    variant: 'ocg-creator',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-password',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    variant: 'ocg-password',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    variant: 'tcg-type-ability',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    variant: 'ocg-type-ability',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-small',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        variant: 'tcg-large',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-small',\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        variant: 'tcg-large',\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-small',\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-medium',\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        variant: 'ocg-large',\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    'Ø': '∅',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n    '∅': 'Ø',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 49%',\r\n            'rgba(239,239,239,1) 51%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);\r\nexport const DefaultFrameInfo = FrameInfoMap['effect'];\r\n\r\nexport const FramePositionMap: Record<string, { labelKey: string }> = {\r\n    bottomLeftFrame: { labelKey: 'input.advanced-frame.name.bottom-left' },\r\n    bottomRightFrame: { labelKey: 'input.advanced-frame.name.bottom-right' },\r\n    effectBackground: { labelKey: 'input.advanced-frame.name.effect-background' },\r\n    pendulumEffectBackground: { labelKey: 'input.advanced-frame.name.pendulum-effect-background' },\r\n    frame: { labelKey: 'input.advanced-frame.name.primary' },\r\n    topLeftFrame: { labelKey: 'input.advanced-frame.name.top-left' },\r\n    topRightFrame: { labelKey: 'input.advanced-frame.name.top-right' },\r\n    foil: { labelKey: 'input.foil.label' },\r\n};","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { IconTypeMap, IconTypeAttributeMap, IconTypeStMap, RegionMap, AttributeList, ExtraAttributeList } from './icon';\r\n\r\nexport type ImagePreset = {\r\n    src: string,\r\n    name: string,\r\n    width: number | undefined,\r\n    height: number | undefined,\r\n    offsetX: number | undefined,\r\n    offsetY: number | undefined,\r\n};\r\n\r\nexport const TotalIconTypePresetMap = Object\r\n    .values({\r\n        ...IconTypeMap,\r\n        ...IconTypeAttributeMap,\r\n        ...IconTypeStMap,\r\n    })\r\n    .reduce((acc, cur) => {\r\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\r\n        return acc;\r\n    }, {} as Record<string, string>);\r\n\r\nexport const TotalAttributeIconPresetList = Object.values(RegionMap).map((region) => {\r\n    const regionName = region.fileKey;\r\n    const hasExtraAttribute = ['ocg', 'tcg'].includes(regionName);\r\n    return [\r\n        ...[...AttributeList]\r\n            .filter(({ isOption }) => isOption === true)\r\n            .flatMap(({ name }) => {\r\n                return {\r\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\r\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\r\n            }),\r\n        ...[...(hasExtraAttribute ? ExtraAttributeList : [])]\r\n            .filter(({ isOption }) => isOption === true)\r\n            .flatMap(({ name }) => {\r\n                return {\r\n                    imagePresetPath: `icon-${regionName}-${name.toLowerCase()}`,\r\n                    imagePresetSource: `attribute/attr-${regionName}-${name.toLowerCase()}.png` };\r\n            }),\r\n    ];\r\n});\r\nexport const TotalAttributeIconPresetMap = TotalAttributeIconPresetList\r\n    .flatMap(list => list)\r\n    .reduce((acc, cur) => {\r\n        acc[cur.imagePresetPath] = cur.imagePresetSource;\r\n        return acc;\r\n    }, {} as Record<string, string>);\r\n\r\nexport const TotalImagePresetMap = {\r\n    ...TotalAttributeIconPresetMap,\r\n    ...TotalIconTypePresetMap\r\n};\r\n","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-ＺÀ-Ö]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const StylingTagList = ['i', 'b', 'pre'];\r\nexport const STYLING_TAG_SOURCE = `<(\\\\/?(${StylingTagList.join('|')}))( [^<]*|)>`;\r\nexport const StylingTagRegex = new RegExp(STYLING_TAG_SOURCE);\r\n\r\nexport const IMG_TAG_NAME = 'img';\r\n\r\nexport const RenderTagList = [IMG_TAG_NAME];\r\nexport const RENDER_TAG_SOURCE = `<(${RenderTagList.join('|')}).*?\\\\/>`;\r\nexport const RenderTagRegex = new RegExp(RENDER_TAG_SOURCE);\r\n\r\n/** Use italic font like in Normal Monster */\r\nexport const ITALIC_OPEN_TAG = '<i>';\r\nexport const ITALIC_CLOSE_TAG = '</i>';\r\n\r\nexport const BOLD_OPEN_TAG = '<b>';\r\nexport const BOLD_CLOSE_TAG = '</b>';\r\n\r\n/** Ignore dynamic space and force draw character as is (still affected by text condensation) */\r\nexport const PRE_OPEN_TAG = '<pre>';\r\nexport const PRE_CLOSE_TAG = '</pre>';\r\n\r\n/** \r\n * Beside usual alphabet letter and number, we try to support accented letters and Japanese's version of alphabet too.\r\n * * Latin-1 Supplement block, without arithmetic symbol such as × and ÷\r\n * * Latin Extended-A\r\n * * Latin Extended-B\r\n * * Latin Extended Additional\r\n * \r\n * Multiple letter that is not used in normal word but have appear in YGO card is also included such as ∞.\r\n */\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９À-ÖÙ-öù-ÿĀ-žƀ-ɏḀ-ỿ!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const VIETNAMESE_DIACRITIC_LETTER = '[ÀÁÂÃÈÉÊÌÍÒÓÔÕÙÚĂĐĨŨƠàáâãèéêìíòóôõùúăđĩũơƯĂẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼỀỀỂưăạảấầẩẫậắằẳẵặẹẻẽềềểỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪễếệỉịọỏốồổỗộớờởỡợụủứừỬỮỰỲỴÝỶỸửữựỳỵỷỹ]';\r\nexport const VietnameseDiacriticLetterRegex = new RegExp(VIETNAMESE_DIACRITIC_LETTER);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⧚';\r\nexport const NB_WORD_CLOSE = '⧛';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const FULL_LINE_PLACEHOLDER = '⸦⸧';\r\nexport const FLAVOR_LINE_PLACEHOLDER = '⸦⸦⸧⸧';\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\n/** Additional symbol including\r\n * * Greek Extended \r\n * * Greek and Coptic\r\n */\r\nexport const TCG_SYMBOL_JOINLIST = '~¡Ø#★☆@∞Ͱ-Ͽἀ-῾';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil, getDefaultDyeList, OtherFinish } from './foil-finish-dye';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\nimport { getDefaultCardFlag } from './flag';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export / template\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    frame: 'fusion',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'] as OtherFinish,\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    starList: [] as string[],\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    linkRating: '',\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    flag: getDefaultCardFlag(),\r\n    dyeList: getDefaultDyeList(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 3,\r\n    format: 'tcg',\r\n    region: 'en',\r\n    /** Why we split frame and left frame here? Because there is more nuance to the card other than individual frames, for example name bevel, border bevel, effect bevel etc..., so \"frame\" here is a kind of \"main frame\" that dictates all those nuance, why the actual card background is constructed from those 4 corner frames. */\r\n    frame: 'effect',\r\n    leftFrame: 'auto',\r\n    rightFrame: 'auto',\r\n    pendulumRightFrame: 'auto',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    otherFinish: ['normal', 'normal', 'normal', 'normal'],\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starList: [] as string[],\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    linkRating: '',\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n        background: 'auto',\r\n        minLine: 0,\r\n        justifyRatio: 100,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    dyeList: getDefaultDyeList(),\r\n    flag: getDefaultCardFlag(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        subType: 'effectBox' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: 'input.opacity.effect-box.tooltip',\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport type SlindingType = ReturnType<typeof getSlindingTypeList>[0]['value'];\r\nexport const getSlindingTypeList = (language: LanguageDataDictionary) => [\r\n    {\r\n        value: 'auto' as const,\r\n        label: language['setting.option.sliding-type.auto.label'],\r\n    },\r\n    {\r\n        value: 'manual' as const,\r\n        label: language['setting.option.sliding-type.manual.label'],\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './flag';\r\nexport * from './foil-finish-dye';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","import { CanvasConst } from 'src/model';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\n\r\nexport const createCanvas = (width = cardWidth, height = cardHeight) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        ctx,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import { CanvasConst } from 'src/model';\r\nimport { createCanvas } from './create';\r\nimport { HexColorRegex } from '..';\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n} = CanvasConst;\r\nexport const dyeCanvas = (baseCanvas: HTMLCanvasElement, color: string, width = cardWidth, height = cardHeight) => {\r\n    if (!HexColorRegex.test(color)) return {\r\n        canvas: baseCanvas,\r\n        ctx: baseCanvas.getContext('2d'),\r\n    };\r\n\r\n    const { ctx: overlayContext, canvas: overlayCanvas } = createCanvas(width, height);\r\n\r\n    /** Draw the target image with grayscale */\r\n    overlayContext.filter = 'grayscale(1)';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.filter = 'none';\r\n\r\n    /** Overlay the color lens on top the grayscale layer to dye it */\r\n    overlayContext.fillStyle = color;\r\n    overlayContext.globalCompositeOperation = 'overlay';\r\n    overlayContext.fillRect(0, 0, cardWidth, cardHeight);\r\n\r\n    /** Draw the target image again but with destination-in mode to remove excess area */\r\n    overlayContext.globalCompositeOperation = 'destination-in';\r\n    overlayContext.drawImage(baseCanvas, 0, 0);\r\n    overlayContext.globalCompositeOperation = 'source-over';\r\n\r\n    return {\r\n        canvas: overlayCanvas,\r\n        ctx: overlayCanvas.getContext('2d'),\r\n    };\r\n};","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import {\r\n    AUTO_FONT,\r\n    Card,\r\n    Foil,\r\n    frameList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PresetNameStyleMap,\r\n} from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFooter = (frame: string) => {\r\n    return ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link'].includes(frame) || checkLightFooter(frame);\r\n};\r\n\r\nexport const checkDiplayLinkRating = (displayMode: number, isLink: boolean) => {\r\n    let showLinkRating = false;\r\n    switch (displayMode) {\r\n        case LINK_RATING_ALWAYS_SHOW: showLinkRating = true; break;\r\n        case LINK_RATING_ALWAYS_HIDE: showLinkRating = false; break;\r\n        case LINK_RATING_ALWAYS_AUTO: showLinkRating = isLink; break;\r\n    }\r\n\r\n    return showLinkRating;\r\n};\r\n\r\nexport const resolveFrameStyle = (frameData: Record<string, string | undefined>, isPendulum: boolean) => {\r\n    const {\r\n        frame,\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    } = frameData;\r\n    const resolvedFrame = frame ?? 'effect';\r\n    const resolvedTopLeft = topLeftFrame === 'auto' ? resolvedFrame : topLeftFrame;\r\n    const resolvedTopRight = (topRightFrame === 'auto' ? resolvedTopLeft : topRightFrame) ?? resolvedFrame;\r\n    const resolvedBottomLeft = (bottomLeftFrame === 'auto'\r\n        ? (isPendulum ? 'spell' : resolvedTopLeft)\r\n        : bottomLeftFrame) ?? resolvedFrame;\r\n    const resolvedBottomRight = (bottomRightFrame === 'auto'\r\n        ? resolvedBottomLeft\r\n        : bottomRightFrame) ?? resolvedFrame;\r\n    const resolvedEffectBackground = (effectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : effectBackground) ?? resolvedFrame;\r\n    const resolvedPendulumEffectBackground = (pendulumEffectBackground === 'auto'\r\n        ? resolvedBottomLeft\r\n        : pendulumEffectBackground) ?? resolvedFrame;\r\n\r\n    return {\r\n        topLeftFrame: resolvedTopLeft,\r\n        topRightFrame: resolvedTopRight,\r\n        bottomLeftFrame: resolvedBottomLeft,\r\n        bottomRightFrame: resolvedBottomRight,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    };\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    let contextualFont = nameStyleType === 'auto' ? AUTO_FONT : nameStyle.font;\r\n    if (contextualFont === AUTO_FONT && format === 'ocg') contextualFont = 'OCG';\r\n    if (contextualFont === AUTO_FONT && format === 'tcg') contextualFont = 'Default';\r\n    if (contextualFont === AUTO_FONT && isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return {\r\n            ...nameStyle,\r\n            font: contextualFont,\r\n        };\r\n    }\r\n\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n            font: resultNameStyle.font === AUTO_FONT ? contextualFont : resultNameStyle.font,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { ART_FINISH_TYPE, RegionMap, Card, CardFlag, FrameDyeList, getDefaultCardFlag, getDefaultCardOpacity, getDefaultCrop, getDefaultDyeList, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    region: 'rg',\r\n    frame: 'fr',\r\n    rightFrame: 'rf',\r\n    leftFrame: 'lf',\r\n    pendulumRightFrame: 'rpf',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        artBorder: 'opab',\r\n        effectBox: 'opeb',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n    },\r\n    finish: 'fn',\r\n    otherFinish: 'of',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n        background: 'ebg',\r\n        minLine: 'eml',\r\n        justifyRatio: 'ejr',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n        background: 'pbg',\r\n        minLine: 'pml',\r\n        justifyRatio: 'pjr',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    starList: 'stl',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    linkRating: 'lr',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    dyeList: 'dl',\r\n    flag: 'fl',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detect the actual version from incoming cards. */\r\n    delete (baseCard as Record<string, unknown>).version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (card.region == null) migratedCard.region = RegionMap[migratedCard.format === 'tcg' ? 'en' : 'jp'].key;\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.rightFrame == null) migratedCard.rightFrame = 'auto';\r\n    if (migratedCard.leftFrame == null) migratedCard.leftFrame = 'auto';\r\n    if (migratedCard.pendulumRightFrame == null) migratedCard.pendulumRightFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n    if (!Array.isArray(migratedCard.starList)) migratedCard.starList = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if (migratedCard.finish) {\r\n        const finishList = migratedCard.finish;\r\n\r\n        if (finishList.includes(ART_FINISH_TYPE)) {\r\n            migratedCard.finish = finishList.filter(entry => entry !== ART_FINISH_TYPE);\r\n            migratedCard.otherFinish = [\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n                migratedCard.artFinish,\r\n            ];\r\n        }\r\n    }\r\n    if (Array.isArray(migratedCard.otherFinish)\r\n        && ((migratedCard.otherFinish as unknown[]).length === 3 || migratedCard.otherFinish[3] == null)\r\n    ) {\r\n        migratedCard.otherFinish[3] = getEmptyCard().otherFinish[3];\r\n    }\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n    if (migratedCard.linkRating == null) migratedCard.linkRating = '';\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    const defaultFlagList = getDefaultCardFlag();\r\n    if (!Array.isArray(migratedCard.flag)) migratedCard.flag = defaultFlagList;\r\n    else if (migratedCard.flag.length < defaultFlagList.length) {\r\n        const currentFlagList = [...migratedCard.flag];\r\n        migratedCard.flag = defaultFlagList.map((entry, index) => {\r\n            if (typeof currentFlagList[index] === 'number') return currentFlagList[index];\r\n            return entry;\r\n        }) as CardFlag;\r\n    }\r\n\r\n    const defaultDyeList = getDefaultDyeList();\r\n    if (!Array.isArray(migratedCard.dyeList)) migratedCard.dyeList = defaultDyeList;\r\n    else if (migratedCard.dyeList.length < defaultDyeList.length) {\r\n        const currentDyeList = [...migratedCard.dyeList];\r\n        migratedCard.dyeList = defaultDyeList.map((entry, index) => {\r\n            if (typeof currentDyeList[index] === 'string') return currentDyeList[index];\r\n            return entry;\r\n        }) as FrameDyeList;\r\n    }\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n    if (migratedCard.version === 2) {\r\n        migratedCard.version = 3;\r\n        const font = migratedCard.nameStyle.font;\r\n        /**\r\n         * For older cards, we dynamically switch font every time user switch the format, which lead to ambiguous situation where user want to keep the font for whatever reason. From ver 3 onward we introduce \"Auto\" font for the switch behavior, and keep the current font otherwise.\r\n         */\r\n        if (font === 'Default' || font === 'OCG') migratedCard.nameStyle.font = 'Auto';\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n    const href = window.URL.createObjectURL(blob);\r\n\r\n    link.download = name;\r\n    link.href = href;\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n    window.URL.revokeObjectURL(href);\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const setCharAt = (str: string, index: number, chr: string) => {\r\n    if (index > str.length - 1) return str;\r\n    return str.substring(0, index) + chr + str.substring(index + 1);\r\n};\r\n\r\nexport const filterFromTrail = (list: (string | undefined | null)[]) => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length - 1; cnt >= 0; cnt--) {\r\n        if (nextList[cnt] == null || nextList[cnt] === '') {\r\n            nextList.pop();\r\n        } else {\r\n            break;\r\n        }\r\n    }\r\n\r\n    return nextList;\r\n};\r\n\r\nexport const padRight = <Value extends (string | undefined | null)[]>(list: Value, limit: number, padUnit = '') => {\r\n    const nextList = [...list];\r\n    for (let cnt = list.length; cnt < limit; cnt++) {\r\n        nextList.push(padUnit);\r\n    }\r\n\r\n    return nextList;\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","export const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRgba = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\nfunction componentToHex(c?: number) {\r\n    if (typeof c !== 'number') return '00';\r\n    const hex = Math.max(0, Math.min(c, 255)).toString(16);\r\n    return hex.length === 1 ? '0' + hex : hex;\r\n}\r\nexport const rgbToHex = (rgb: number[]) => {\r\n  return '#' + componentToHex(rgb[0]) + componentToHex(rgb[1]) + componentToHex(rgb[2]);\r\n};\r\n\r\n/** Contrast formula from google \\ :v / */\r\nexport const getContrastColor = (rgbColor: number[]) => {\r\n    return ((rgbColor[0] ?? 0) * 299 + (rgbColor[1] ?? 0) * 587 + (rgbColor[2] ?? 0) * 114) / 1000 >= 128\r\n        ? '#000000'\r\n        : '#FFFFFF';\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};\r\n\r\nexport const swapTextData = (\r\n    currentTextData: {\r\n        fontData: FontData;\r\n        fontLevel: number;\r\n        currentFont: FontGetter;\r\n    },\r\n    nextFontData: FontData,\r\n) => {\r\n    const {\r\n        fontData,\r\n        fontLevel,\r\n    } = currentTextData;\r\n    const nextCurrentFont = createFontGetter();\r\n    /** We use the font list of old font, avoiding merge font because it seems unnecessary, also avoiding redo dynamic font injection */\r\n    const combinedFontData: FontData = {\r\n        ...nextFontData,\r\n        fontList: [...fontData.fontList],\r\n    };\r\n    nextCurrentFont\r\n        .setSize(combinedFontData.fontList[fontLevel].fontSize)\r\n        .setFamily(combinedFontData.font)\r\n        .getFont();\r\n\r\n    return {\r\n        fontData: combinedFontData,\r\n        fontLevel,\r\n        currentFont: nextCurrentFont,\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};\r\n\r\nexport const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport const isTouchDevice = () => {\r\n    return (('ontouchstart' in window) || (navigator.maxTouchPoints > 0));\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './color';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { RegionMap, DefaultFormatAttribute, InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        region,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const targetRegion = RegionMap[region].category === targetFormat\r\n        ? region\r\n        : RegionMap[DefaultFormatAttribute[targetFormat]].key;\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        region: targetRegion,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import { create } from 'zustand';\r\n\r\nexport type BatchDownloadStore = {\r\n    batchName: string,\r\n    batchQueue: string[],\r\n    batchDataMap: Record<string, { name: string, blob: Blob }>,\r\n    isBatchDownloading: boolean,\r\n    isReady: boolean,\r\n    startBatchDownload: (batchName: string, batchQueue: string[]) => void,\r\n    stopBatchDownload: () => void,\r\n    clearQueue: () => void,\r\n    addToBatch: (cardId: string, cardName: string, cardBlob: Blob) => void,\r\n};\r\nexport const useBatchDownload = create<BatchDownloadStore>((set, get) => {\r\n    return {\r\n        batchName: '',\r\n        batch: undefined,\r\n        batchQueue: [],\r\n        batchDataMap: {},\r\n        isBatchDownloading: false,\r\n        isReady: false,\r\n        startBatchDownload: (batchName, batchQueue) => {\r\n            set({\r\n                batchName,\r\n                batchQueue,\r\n                isBatchDownloading: true,\r\n            });\r\n        },\r\n        stopBatchDownload: () => {\r\n            set({\r\n                batchName: '',\r\n                batchQueue: [],\r\n                batchDataMap: {},\r\n                isBatchDownloading: false,\r\n                isReady: false,\r\n            });\r\n        },\r\n        clearQueue: () => {\r\n            set({\r\n                batchQueue: [],\r\n            });\r\n        },\r\n        addToBatch: (cardId, cardName, cardBlob) => {\r\n            set(({ batchQueue, batchDataMap }) => {\r\n                const nextQueue = batchQueue.filter(id => id !== cardId);\r\n                const nextBatchDataMap = { ...batchDataMap };\r\n                nextBatchDataMap[cardId] = { name: cardName, blob: cardBlob };\r\n\r\n                return {\r\n                    batchQueue: nextQueue,\r\n                    batchDataMap: nextBatchDataMap,\r\n                    isReady: nextQueue.length === 0 ? true : false,\r\n                };\r\n            });\r\n        },\r\n    };\r\n});","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\nexport type WithLanguage = {\r\n    language: LanguageDataDictionary\r\n};\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-7.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-7.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-8.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-8.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-9.content': (\r\n            openTag: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-9.content'),\r\n                { openTag },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardFlag,\r\n    CardOpacity,\r\n    CondenseType,\r\n    DYE_LIST_LENGTH,\r\n    FLAG_LENGTH,\r\n    Foil,\r\n    FoilMap,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardFlag,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultDyeList,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    MAX_STAR_LENGTH,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    'Region',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Link Rating',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Effect Box',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Effect Style - Background',\r\n    'Effect Style - Min Line',\r\n    'Effect Style - Justify Ratio',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Pendulum Effect Style - Background',\r\n    'Pendulum Effect Style - Min Line',\r\n    'Pendulum Effect Style - Justify Ratio',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'Other Finish - Attribute',\r\n    'Other Finish - Background',\r\n    'Other Finish - Icon',\r\n    'Other Finish - Sticker',\r\n    'Left Frame',\r\n    'Right Frame',\r\n    'Bottom Right Frame',\r\n    'Dye List',\r\n    'Star List',\r\n    'Flag',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            flag,\r\n            foil,\r\n            format,\r\n            region,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            leftFrame,\r\n            linkMap,\r\n            linkRating,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherFinish,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            rightFrame,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            starList,\r\n            typeAbility,\r\n            typeTextStyle,\r\n            dyeList,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n        const stringifedFlag = flag.join('|');\r\n        const stringifedDyeList = dyeList.join('|');\r\n        const stringifedSubFamilyList = starList.join('|');\r\n\r\n        write('Format', format);\r\n        write('Region', region);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Link Rating', linkRating);\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Effect Box', opacity.effectBox);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Effect Style - Background', effectStyle.background);\r\n        write('Effect Style - Min Line', effectStyle.minLine);\r\n        write('Effect Style - Justify Ratio', effectStyle.justifyRatio);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Pendulum Effect Style - Background', pendulumStyle.background);\r\n        write('Pendulum Effect Style - Min Line', pendulumStyle.minLine);\r\n        write('Pendulum Effect Style - Justify Ratio', pendulumStyle.justifyRatio);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('Other Finish - Attribute', otherFinish[0]);\r\n        write('Other Finish - Icon', otherFinish[1]);\r\n        write('Other Finish - Sticker', otherFinish[2]);\r\n        write('Other Finish - Background', otherFinish[3]);\r\n        write('Left Frame', leftFrame);\r\n        write('Right Frame', rightFrame);\r\n        write('Bottom Right Frame', pendulumRightFrame);\r\n        write('Dye List', stringifedDyeList);\r\n        write('Star List', stringifedSubFamilyList);\r\n        write('Flag', stringifedFlag);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n                const rightFrame = (reader('Right Frame') ?? emptyCard.rightFrame).toLowerCase();\r\n                const leftFrame = (reader('Left Frame') ?? emptyCard.leftFrame).toLowerCase();\r\n                const pendulumRightFrame = (reader('Bottom Right Frame') ?? emptyCard.pendulumRightFrame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const finishAttribute = reader('Other Finish - Attribute') ?? '';\r\n                const finishSticker = reader('Other Finish - Sticker') ?? '';\r\n                const finishIcon = reader('Other Finish - Icon') ?? '';\r\n                const finishBackground = reader('Other Finish - Background') ?? '';\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const region = (reader('Region') ?? emptyCard.region).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '')\r\n                        .map(entry => typeof entry === 'string' ? entry : '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n                const effectBackground = (reader('Effect Style - Background') ?? emptyCard.effectStyle.background).toLowerCase();\r\n                const pendulumEffectBackground = (reader('Pendulum Effect Style - Background') ?? emptyCard.pendulumStyle.background).toLowerCase();\r\n                const effectMinLine = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.minLine);\r\n                const pendulumEffectMinLine = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.minLine);\r\n                const effectJustifyRatio = normalizeInt(reader('Effect Style - Min Line'), emptyCard.effectStyle.justifyRatio);\r\n                const pendulumEffectJustifyRatio = normalizeInt(reader('Pendulum Effect Style - Min Line'), emptyCard.pendulumStyle.justifyRatio);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    effectBox: normalizeBoolean(reader('Opacity - Effect Box'), emptyOpacity.effectBox),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n                const linkRating = reader('Link Rating') ?? '';\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n                const baseFlag = (reader('Flag') ?? '').split('|').map(Number).slice(0, FLAG_LENGTH) as CardFlag;\r\n                const flag = getDefaultCardFlag().map((entry, index) => {\r\n                    if (typeof baseFlag[index] === 'number') return baseFlag[index];\r\n                    return entry;\r\n                }) as CardFlag;\r\n\r\n                const baseDyeList = (reader('Dye List') ?? '').split('|').map(String).slice(0, DYE_LIST_LENGTH) as FrameDyeList;\r\n                const dyeList = getDefaultDyeList().map((entry, index) => {\r\n                    if (typeof baseDyeList[index] === 'string') return baseDyeList[index];\r\n                    return entry;\r\n                }) as FrameDyeList;\r\n\r\n                const starList = (reader('Star List') ?? '').split('|').map(String).slice(0, MAX_STAR_LENGTH);\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    dyeList,\r\n                    effect,\r\n                    effectStyle: {\r\n                        condenseTolerant,\r\n                        upSize: effectUpSize,\r\n                        fontStyle: effectFontStyle,\r\n                        background: effectBackground,\r\n                        minLine: effectMinLine,\r\n                        justifyRatio: effectJustifyRatio,\r\n                    },\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    flag,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    leftFrame,\r\n                    linkMap,\r\n                    linkRating,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherFinish: [finishAttribute, finishIcon, finishSticker, finishBackground] as OtherFinish,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumSize,\r\n                    pendulumStyle: {\r\n                        upSize: pendulumEffectUpSize,\r\n                        fontStyle: pendulumEffectFontStyle, \r\n                        background: pendulumEffectBackground,\r\n                        minLine: pendulumEffectMinLine,\r\n                        justifyRatio: pendulumEffectJustifyRatio,\r\n                    },\r\n                    pendulumTextStyle,\r\n                    region,\r\n                    rightFrame,\r\n                    setId,\r\n                    star,\r\n                    starList,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    try {\r\n        const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n        if (frameResult !== 0) return frameResult;\r\n\r\n        /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n        const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n        return bottomFrameResult;\r\n    } catch (e) {\r\n        return 0;\r\n    }\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    selectedMap: Record<string, string>,\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    selectCard: (id: string, type: 'add' | 'remove') => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setSelectMap: (id: InternalCard[], type?: 'add' | 'replace') => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        selectedMap: {},\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect, isPendulum }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + (isPendulum ? normalizeCardEffect(pendulumEffect).toLowerCase() : '')).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        selectCard: (id, type) => {\r\n            set(({ selectedMap }) => {\r\n                const nextMap = { ...selectedMap };\r\n                if (type === 'add') nextMap[id] = id;\r\n                else delete nextMap[id];\r\n\r\n                return { selectedMap: nextMap };\r\n            });\r\n        },\r\n        setSelectMap: (cardList, type) => set(({ selectedMap }) => ({\r\n            selectedMap: cardList.reduce((prev, curr) => {\r\n                prev[curr.id] = curr.id;\r\n                return prev;\r\n            }, type === 'replace' ? {} : { ...selectedMap } as Record<string, string>),\r\n        })),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat, SlindingType } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    allowHotkey: boolean,\r\n    exportFormat: ExportFormat,\r\n    exportScheme: string,\r\n    globalScale: number,\r\n    mirrorPendulumScale: boolean,\r\n    reduceMotionColor: boolean,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraAttribute: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    slidingType: SlindingType,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        exportScheme,\r\n        globalScale,\r\n        mirrorPendulumScale,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraAttribute,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            exportScheme: typeof exportScheme === 'string' ? exportScheme : 'with-name',\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            slidingType: typeof slidingType === 'string' ? slidingType as SlindingType : 'auto',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraAttribute: typeof showExtraAttribute === 'boolean' ? showExtraAttribute : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\nimport { useBatchDownload } from './use-batch-download';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const {\r\n        addToBatch,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n    } = useBatchDownload();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const exportScheme = useSetting(state => state.setting.exportScheme);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const normalizedName = normalizeCardName(name);\r\n    const pendingSave = useRef(false);\r\n\r\n    const getCardDataUrl = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            if (size) {\r\n                clonedCanvas.width = size[0];\r\n                clonedCanvas.height = size[1];\r\n            }\r\n            /** Resize here */\r\n            clonedCanvasContext.drawImage(\r\n                drawCanvas,\r\n                0, 0, drawCanvas.width, drawCanvas.height,\r\n                0, 0, clonedCanvas.width, clonedCanvas.height,\r\n            );\r\n\r\n            return clonedCanvas.toDataURL('image/png');\r\n        }\r\n    }, [exportCanvasRef, isTainted, resolution]);\r\n    const addToCurrentBatch = useCallback(async (\r\n        cardName: string,\r\n        cardId: string,\r\n        size: [number, number] = resolution,\r\n    ) => {\r\n        try {\r\n            const cardData = getCardDataUrl(size);\r\n            if (typeof cardData !== 'string') throw new Error('Failed to add card to batch');\r\n            const fetchedDataUrl = await fetch(cardData);\r\n            const blob = await fetchedDataUrl.blob();\r\n            if (isBatchDownloading) addToBatch(cardId, cardName, blob);\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [addToBatch, getCardDataUrl, isBatchDownloading, onDownloadComplete, onDownloadError, resolution]);\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        try {\r\n            const normalizedName = normalizeCardName(name);\r\n            const cardData = getCardDataUrl(size);\r\n            if (typeof cardData !== 'string') throw new Error('Failed to trigger automatic download');\r\n            var link = document.createElement('a');\r\n            link.download = normalizedName\r\n                ? `${normalizedName}.png`\r\n                : 'card.png';\r\n            link.href = cardData;\r\n            link.click();\r\n        } catch (e) {\r\n            onDownloadError();\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [resolution, onDownloadComplete, name, getCardDataUrl, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [normalizedName]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                            if (isBatchDownloading && !batchDataMap[normalizedCard.id]) {\r\n                                setTimeout(() => {\r\n                                    addToCurrentBatch(\r\n                                        exportScheme === 'with-name'\r\n                                            ? `${normalizedName}.png`\r\n                                            : `${normalizedCard.setId} - ${normalizedName}.png`,\r\n                                        normalizedCard.id,\r\n                                    );\r\n                                }, 200);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { openDB, DBSchema, IDBPDatabase } from 'idb';\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport interface YgoCarderDb extends DBSchema {\r\n    messageStore: {\r\n        key: string,\r\n        value: string,\r\n    },\r\n    presetLayoutStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n    presetNameStyleStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n    presetImageStore: {\r\n        key: string,\r\n        value: {\r\n            key: string,\r\n            content: string,\r\n        },\r\n    },\r\n};\r\n\r\nexport async function setupYgoCarderDb() {\r\n    try {\r\n        const db = await openDB<YgoCarderDb>(\r\n            'YgoCarderDb',\r\n            4,\r\n            {\r\n                upgrade(db, _oldVersion, newVersion) {\r\n                    if (!db.objectStoreNames.contains('messageStore')) {\r\n                        db.createObjectStore('messageStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetLayoutStore')) {\r\n                        db.createObjectStore('presetLayoutStore', { keyPath: 'key' });\r\n                    }\r\n                    if (!db.objectStoreNames.contains('presetNameStyleStore')) {\r\n                        db.createObjectStore('presetNameStyleStore', { keyPath: 'key' });\r\n                    }\r\n                    if (newVersion === 4) {\r\n                        if (!db.objectStoreNames.contains('presetImageStore')) {\r\n                            db.createObjectStore('presetImageStore', { keyPath: 'key' });\r\n                        }\r\n                    }\r\n                    console.info('YgoCarderDb ready');\r\n                },\r\n            }\r\n        );\r\n\r\n        return db;\r\n    } catch (e) {\r\n        console.error('setupYgoCarderDb', e);\r\n        return null;\r\n    }\r\n};\r\n\r\nexport const useCarderDb = () => {\r\n    const [db, setDb] = useState<IDBPDatabase<YgoCarderDb> | null>(null);\r\n    const [dbReady, setDbReady] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const db = await setupYgoCarderDb();\r\n            setDb(db);\r\n            setDbReady(true);\r\n        })();\r\n\r\n        setTimeout(() => {\r\n            /** Ensure non-blocking */\r\n            setDbReady(true);\r\n        }, 5000);\r\n    }, []);\r\n\r\n    return {\r\n        db,\r\n        dbReady,\r\n    };\r\n};","import { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRgba } from 'src/util';\r\n\r\nexport type UseColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n};\r\nexport const useColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: UseColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRgba(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRgba(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return {\r\n        inputText: currentText,\r\n        color: internalValue,\r\n        setColor: setCurrentText,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { Foil, FrameDyeList, ImagePreset, NameStyle } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type FramePreset = {\r\n    foil: Foil,\r\n    frame: string,\r\n    pendulumFrame: string,\r\n    leftFrame: string,\r\n    rightFrame: string,\r\n    pendulumRightFrame: string,\r\n    effectStyle: {\r\n        background: string,\r\n    },\r\n    pendulumStyle: {\r\n        background: string,\r\n    },\r\n    dyeList: FrameDyeList,\r\n};\r\nexport type GlobalMemory = {\r\n    activeDropzone: number,\r\n    layoutPresetList: {\r\n        key: string,\r\n        content: FramePreset,\r\n    }[],\r\n    nameStylePresetList: {\r\n        key: string,\r\n        content: Partial<NameStyle>,\r\n    }[],\r\n    imagePresetList: {\r\n        key: string,\r\n        content: ImagePreset,\r\n    }[],\r\n    imagePresetMap: Record<string, ImagePreset>,\r\n};\r\nexport type GlobalStore = {\r\n    memory: GlobalMemory,\r\n    updateGlobalMemory: (transformerOrPayload: Partial<GlobalMemory>\r\n        | ((currentMemory: GlobalMemory) => GlobalMemory)) => void,\r\n};\r\nexport const useGlobalMemory = create<GlobalStore>((set) => {\r\n    return {\r\n        memory: {\r\n            activeDropzone: 0,\r\n            layoutPresetList: [],\r\n            nameStylePresetList: [],\r\n            imagePresetList: [],\r\n            imagePresetMap: {},\r\n        },\r\n        updateGlobalMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newGlobalMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n                if (currentStore.memory.imagePresetList !== newGlobalMemory.imagePresetList) {\r\n                    newGlobalMemory.imagePresetMap = newGlobalMemory.imagePresetList.reduce((acc, cur) => {\r\n                        /** If user use duplicated name, that is on them :v */\r\n                        acc[cur.content.name] = cur.content;\r\n                        return acc;\r\n                    }, {});\r\n                }\r\n\r\n                return {\r\n                    memory: newGlobalMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useGlobal = <Key extends keyof GlobalMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateGlobalMemory,\r\n    } = useGlobalMemory(useShallow(({\r\n        memory,\r\n        updateGlobalMemory,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateGlobalMemory,\r\n    })));\r\n\r\n    const updateTargetMemory = useCallback(\r\n        (value: GlobalMemory[Key] | ((currentSetting: GlobalMemory[Key]) => GlobalMemory[Key])) => {\r\n            updateGlobalMemory(cur => {\r\n                return { ...cur, [key]: typeof value === 'function' ? value(cur[key]) : value };\r\n            });\r\n        },\r\n        [key, updateGlobalMemory],\r\n    );\r\n\r\n    return [targetMemory, updateTargetMemory] as const;\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nconst normalizeDxy = (\r\n    image: HTMLImageElement,\r\n    dw?: number | ((image: HTMLImageElement) => number),\r\n    dh?: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    const { naturalWidth, naturalHeight } = image;\r\n    const baseDW = typeof dw === 'number' ? dw : dw?.(image);\r\n    const baseDH = typeof dh === 'number' ? dh : dh?.(image);\r\n    let actualDW = naturalWidth;\r\n    let actualDH = naturalHeight;\r\n\r\n    if (typeof baseDH !== 'number' && typeof baseDW === 'number') {\r\n        actualDW = baseDW;\r\n        actualDH = actualDW * naturalHeight / naturalWidth;\r\n    } else if (typeof baseDH === 'number' && typeof baseDW !== 'number') {\r\n        actualDH = baseDH;\r\n        actualDW = actualDH * naturalWidth / naturalHeight;\r\n    } else if (typeof baseDH === 'number' && typeof baseDW === 'number') {\r\n        actualDW = baseDW;\r\n        actualDH = baseDH;\r\n    }\r\n\r\n    return { actualDH, actualDW };\r\n};\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw?: number | ((image: HTMLImageElement) => number),\r\n    dh?: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n    option?: {\r\n        cache?: boolean,\r\n        internalImage?: boolean,\r\n    },\r\n) => {\r\n    const {\r\n        cache = true,\r\n        internalImage = true,\r\n    } = option ?? {};\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n            const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = internalImage\r\n            ? process.env.PUBLIC_URL + source\r\n            : source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n                const { actualDH, actualDW } = normalizeDxy(image, dw, dh);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (cache && !imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: Omit<FontData, 'fontList'>,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n        vietnameseFont = font,\r\n        vietnameseFontRatio = 1,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let vietnameseFontMemory = fontController.getFontInfo();\r\n    const applyVietnameseFont = () => {\r\n        vietnameseFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(vietnameseFont).setSize(fontSize * vietnameseFontRatio).getFont();\r\n    };\r\n    const stopApplyVietnameseFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(vietnameseFontMemory.family)\r\n            .setSize(vietnameseFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = (ratio = symbolFontRatio) => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        const nextRatio = fontSize * ratio;\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(nextRatio).getFont();\r\n        return {\r\n            fontSize: nextRatio,\r\n        };\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    BOLD_CLOSE_TAG,\r\n    BOLD_OPEN_TAG,\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FragmentSplitRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    IMG_TAG_NAME,\r\n    ITALIC_CLOSE_TAG,\r\n    ITALIC_OPEN_TAG,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NormalFontData,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    PRE_CLOSE_TAG,\r\n    PRE_OPEN_TAG,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    RenderTagRegex,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    STYLING_TAG_SOURCE,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData, swapTextData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\nimport { useGlobalMemory } from 'src/service';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    lineHeight = 0,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    lineHeight?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n        letterOffsetMap = {},\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyVietnameseFont, stopApplyVietnameseFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const renderTagMatchResult = token.match(RenderTagRegex);\r\n    if (renderTagMatchResult) {\r\n        const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\r\n        const tagName = renderTagMatchResult[1];\r\n        if (tagName === IMG_TAG_NAME) {\r\n            currentRightGap = 0;\r\n            let matchResult: RegExpExecArray | null;\r\n            let width: number | undefined;\r\n            let src: string | undefined;\r\n            while ((matchResult = regex.exec(token)) !== null) {\r\n                // This is necessary to avoid infinite loops with zero-width matches\r\n                if (matchResult.index === regex.lastIndex) {\r\n                    regex.lastIndex++;\r\n                }\r\n                const attributeKey = matchResult[1];\r\n                const attributeValue = matchResult[2];\r\n\r\n                if (attributeKey === 'width') width = parseInt(attributeValue);\r\n                if (attributeKey === 'src') src = attributeValue;\r\n            }\r\n            const preset = src ? imagePresetMap[src] : undefined;\r\n            const normalizedWidth = (typeof width === 'number'\r\n                ? width\r\n                : preset\r\n                    ? preset.width\r\n                    : undefined) ?? (lineHeight * 0.9);\r\n            totalWidth += normalizedWidth / xRatio;\r\n        }\r\n        return {\r\n            totalWidth,\r\n            spaceCount,\r\n            spaceAtEnd,\r\n            leftMostLetter,\r\n            rightGap: currentRightGap,\r\n            leftGap: leftMostGap,\r\n            offsetable,\r\n        };\r\n    }\r\n\r\n    const isControlWord = new RegExp(STYLING_TAG_SOURCE, 'g').test(token);\r\n    const fragmentList = isControlWord\r\n        ? []\r\n        : token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Vietnamese letter use different font, for the sake of simplicity, we use a widely supported Times New Roman font instead of a more specific one. */\r\n                else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applyVietnameseFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyVietnameseFont();\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont(letterOffsetMap[fragment]?.ratio);\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    lineHeight,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n    justifyRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    lineHeight: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n    justifyRatio: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n    let currentTextData = textData;\r\n    let preformatMode = false;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        if (token === ITALIC_OPEN_TAG) {\r\n            const hasItalicFontData = !!(NormalFontData[textData.fontData?.variant ?? '']);\r\n            const italicFontData = hasItalicFontData\r\n                ? NormalFontData[textData.fontData.variant]\r\n                : textData.fontData;\r\n\r\n            currentTextData = swapTextData(textData, italicFontData);\r\n            ctx.font = currentTextData.currentFont\r\n                .setStyle('italic')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === ITALIC_CLOSE_TAG) {\r\n            currentTextData = textData;\r\n            ctx.font = currentTextData.currentFont\r\n                .setStyle('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === BOLD_OPEN_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('bold')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === BOLD_CLOSE_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === PRE_OPEN_TAG) {\r\n            preformatMode = true;\r\n            continue;\r\n        } else if (token === PRE_CLOSE_TAG) {\r\n            preformatMode = false;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({\r\n            ctx,\r\n            token,\r\n            nextToken,\r\n            xRatio,\r\n            previousTokenGap: currentGap / xRatio,\r\n            textData: currentTextData,\r\n            format,\r\n            globalScale,\r\n            lineHeight,\r\n        });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        const actualSpaceCount = preformatMode\r\n            ? 0\r\n            : spaceCount;\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += actualSpaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale * (justifyRatio / 100) ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    lineHeight,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    lineHeight: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({\r\n                ctx,\r\n                token,\r\n                nextToken,\r\n                xRatio,\r\n                previousTokenGap: currentGap,\r\n                format,\r\n                letterSpacing,\r\n                textData,\r\n                globalScale,\r\n                lineHeight,\r\n            });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({\r\n                    ctx,\r\n                    token,\r\n                    nextToken,\r\n                    xRatio,\r\n                    previousTokenGap: 0,\r\n                    format,\r\n                    textData,\r\n                    globalScale,\r\n                    lineHeight,\r\n                });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BOLD_CLOSE_TAG,\r\n    BOLD_OPEN_TAG,\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    IMG_TAG_NAME,\r\n    ITALIC_CLOSE_TAG,\r\n    ITALIC_OPEN_TAG,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NormalFontData,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    PRE_CLOSE_TAG,\r\n    PRE_OPEN_TAG,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    RenderTagRegex,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    TotalImagePresetMap,\r\n    VietnameseDiacriticLetterRegex,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData, swapTextData } from 'src/util';\r\nimport { drawFromWithSize } from './image';\r\nimport { useGlobalMemory } from 'src/service';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⧚{相|あい}{手|て}⧛\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = async ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    lineHeight = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    drawImage = true,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    lineHeight?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    drawImage?: boolean,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const imagePresetMap = useGlobalMemory.getState().memory.imagePresetMap;\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        fontLevel,\r\n    } = textData;\r\n    const defaultFontData = textData.fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    let currentTextData = textData;\r\n    let currentFont = currentTextData.currentFont;\r\n    let currentFontData = currentTextData.fontData;\r\n    let fontSizeData = currentFontData.fontList[fontLevel];\r\n    let textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n    let preformatMode = false;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        /** All the info here is not affected by injected dynamic fonts */\r\n        const {\r\n            bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n            bulletWidth,\r\n            capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n            fontSize,\r\n            headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n            iconSymbolWidth = bulletWidth,\r\n            largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n            letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n            ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n            squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n            wordLetterSpacing,\r\n            allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n        } = fontSizeData;\r\n        const letterSpacingRatio = 1 + letterSpacing / 2;\r\n        const baseline = trueBaseline / yRatio;\r\n        const {\r\n            headTextFillStyle,\r\n            headTextBold = DefaultFontData.headTextBold,\r\n            headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n            headTextOverflow = DefaultFontData.headTextOverflow,\r\n            headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n            metricMethod,\r\n            fontStyle,\r\n            letterDeviationMap = {},\r\n            letterOffsetMap = {},\r\n        } = currentFontData;\r\n        const {\r\n            stopApplyFuriganaFont, applyFuriganaFont,\r\n            stopApplyLargerText, applyLargerText,\r\n            stopApplyNumberFont, applyNumberFont,\r\n            stopApplyOrdinalFont, applyOrdinalFont,\r\n            applyScale, reverseScale,\r\n            applySymbolFont, stopApplySymbolFont,\r\n            applyVietnameseFont, stopApplyVietnameseFont,\r\n            applyAsymmetricScale, resetScale,\r\n        } = textWorker;\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        if (token === ITALIC_OPEN_TAG) {\r\n            const hasItalicFontData = !!(NormalFontData[defaultFontData?.variant ?? '']);\r\n            const italicFontData = hasItalicFontData\r\n                ? NormalFontData[defaultFontData.variant]\r\n                : defaultFontData;\r\n\r\n            currentTextData = swapTextData(textData, italicFontData);\r\n            currentFont = currentTextData.currentFont;\r\n            currentFontData = currentTextData.fontData;\r\n            fontSizeData = currentFontData.fontList[fontLevel];\r\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n            ctx.font = currentFont\r\n                .setStyle('italic')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === ITALIC_CLOSE_TAG) {\r\n            currentTextData = textData;\r\n            currentFont = currentTextData.currentFont;\r\n            currentFontData = currentTextData.fontData;\r\n            fontSizeData = currentFontData.fontList[fontLevel];\r\n            textWorker = getTextWorker(ctx, currentFontData, fontSizeData, currentFont, globalScale);\r\n            ctx.font = currentFont\r\n                .setStyle('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === BOLD_OPEN_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('bold')\r\n                .getFont();\r\n            continue;\r\n        } else if (token === BOLD_CLOSE_TAG) {\r\n            ctx.font = currentTextData.currentFont\r\n                .setWeight('')\r\n                .getFont();\r\n            continue;\r\n        }\r\n        if (token === PRE_OPEN_TAG) {\r\n            preformatMode = true;\r\n            continue;\r\n        } else if (token === PRE_CLOSE_TAG) {\r\n            preformatMode = false;\r\n            continue;\r\n        }\r\n        \r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n            lineHeight,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        let fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n\r\n        const renderTagMatchResult = token.match(RenderTagRegex);\r\n        if (renderTagMatchResult) {\r\n            const regex = /(?<=<.+?)(?<!>) ([\\w-]+)(?:=[\"|'|”|“](.+?)[\"|'|”|“]|\\b)(?!<)(?=.*?>)/gm;\r\n            const tagName = renderTagMatchResult[1];\r\n            if (tagName === IMG_TAG_NAME) {\r\n                fragmentList = [];\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n                let matchResult: RegExpExecArray | null;\r\n                let src = '';\r\n                let width: number | undefined;\r\n                let height: number | undefined;\r\n                let offsetX: number | undefined;\r\n                let offsetY: number | undefined;\r\n                while ((matchResult = regex.exec(token)) !== null) {\r\n                    // This is necessary to avoid infinite loops with zero-width matches\r\n                    if (matchResult.index === regex.lastIndex) {\r\n                        regex.lastIndex++;\r\n                    }\r\n                    const attributeKey = matchResult[1];\r\n                    const attributeValue = matchResult[2];\r\n                    switch (attributeKey) {\r\n                        case 'src': {\r\n                            src = attributeValue;\r\n                            break;\r\n                        }\r\n                        case 'width': {\r\n                            width = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'height': {\r\n                            height = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'offsetX': {\r\n                            offsetX = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                        case 'offsetY': {\r\n                            offsetY = parseInt(attributeValue);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                resetScale();\r\n                if (src && drawImage) {\r\n                    let normalizedWidth = typeof width === 'number'\r\n                        ? width\r\n                        : typeof height === 'number'\r\n                            ? undefined\r\n                            : lineHeight * 0.9;\r\n                    let normalizedSource = src;\r\n                    let isInternalSource = false;\r\n                    const preset = src ? imagePresetMap[src] : undefined;\r\n                    if (preset) {\r\n                        const {\r\n                            height: presetHeight, width: presetWidth,\r\n                            offsetX: presetOffsetX, offsetY: presetOffsetY,\r\n                            src,\r\n                        } = preset;\r\n                        normalizedSource = src;\r\n                        width = typeof width === 'number' ? width : presetWidth;\r\n                        height = typeof height === 'number' ? height : presetHeight;\r\n                        offsetY = typeof offsetY === 'number' ? offsetY : presetOffsetY;\r\n                        offsetX = typeof offsetX === 'number' ? offsetX : presetOffsetX;\r\n                    } else if (!src.startsWith('https')) {\r\n                        isInternalSource = true;\r\n                        normalizedSource = '/asset/image/' + (TotalImagePresetMap[src] ?? `${src}.png`);\r\n                    }\r\n                    const lineHeightOffsetRatio = 0.75; // If it is 1, the image will touch the bottom of the line above\r\n                    await drawFromWithSize(\r\n                        ctx,\r\n                        normalizedSource,\r\n                        fragmentEdge + (offsetX ?? 0),\r\n                        trueBaseline + (offsetY ?? 0) - lineHeight * lineHeightOffsetRatio,\r\n                        normalizedWidth, height,\r\n                        undefined, undefined,\r\n                        undefined, undefined,\r\n                        { cache: isInternalSource, internalImage: isInternalSource }\r\n                    );\r\n                }\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n            }\r\n        }\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) { }\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (VietnameseDiacriticLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applyVietnameseFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyVietnameseFont();\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        const { fontSize } = applySymbolFont(letterOffsetMap[currentLetter]?.ratio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            baseline: drawLetterofWordParameter.baseline + fontSize * (letterOffsetMap[fragment]?.baseline ?? 0),\r\n                        });\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const {\r\n                    yRatio = 1,\r\n                    ratio: fontSizeRatio,\r\n                    baseline: offsetBaseline = 0,\r\n                    edge: offsetEdge = 0,\r\n                } = letterOffsetMap[fragment] ?? {};\r\n\r\n                const letter = fragment;\r\n                const { fontSize } = applySymbolFont(fontSizeRatio);\r\n                ctx.scale(1, yRatio);\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    baseline: (drawLetterParameter.baseline + fontSize * offsetBaseline) / yRatio,\r\n                    letter,\r\n                    edge: fragmentEdge + fontSize * offsetEdge,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n\r\n                ctx.scale(1, 1 / yRatio);\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        const actualSpaceCount = preformatMode\r\n            ? 0\r\n            : spaceCount;\r\n        tokenEdge += totalTokenWidth * xRatio + actualSpaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    FLAVOR_CONDITION_SOURCE,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n    FULL_LINE_PLACEHOLDER,\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    OCG_RUBY_SOURCE,\r\n    RENDER_TAG_SOURCE,\r\n    STYLING_TAG_SOURCE,\r\n    UNCOMPRESSED_SOURCE,\r\n    WHOLE_WORD_SOURCE,\r\n    contextualDoubleQuoteRegex,\r\n    ocgKeywordDataMap,\r\n    ocgNumberCircleMap,\r\n    ocgToTCGLetterMap,\r\n    tcgToOCGLetterMap,\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    line: string,\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineList: string[] = [];\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let effectText = effect;\r\n    let effectFlavorCondition = '';\r\n    /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n     * \r\n     * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n     * \r\n     * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in text are actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n     * */\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    /** Infinite loop guarding just in case, we are dealing with while loop anyways */\r\n    let tryCnt = 0;\r\n    while (effectText.length > 0 && tryCnt <= 100) {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        const lineReplacement = result?.[1];\r\n        const lineContent = result?.[2];\r\n        const fullLineReplacement = result?.[3];\r\n        const fullLineContent = result?.[4];\r\n\r\n        if (lineContent && lineReplacement) {\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ line: lineContent, alignment: 'left' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ line: fullLineContent, alignment: 'justify' });\r\n            lineList.push(FULL_LINE_PLACEHOLDER);\r\n        } else {\r\n            const paragraphResult = /(.*)(\\n|$)/.exec(effectText);\r\n            const lineReplacement = paragraphResult?.[0];\r\n            const lineContent = paragraphResult?.[1];\r\n            if (typeof lineReplacement === 'string' && typeof lineContent === 'string') {\r\n                /** Restore all remaining nb line symbol back to their normal letters. Then split those paragraph into lines. */\r\n                lineList.push(...lineContent\r\n                    .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n                    .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]')\r\n                    .split('\\n')\r\n                );\r\n                effectText = effectText.replace(lineReplacement, '');\r\n            }\r\n        }\r\n        tryCnt++;\r\n    }\r\n    if (effectFlavorCondition) {\r\n        lineList.push(FLAVOR_LINE_PLACEHOLDER);\r\n    }\r\n\r\n    return {\r\n        lineList,\r\n        fullLineListOption: [...fullLineListOption],\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(RENDER_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(STYLING_TAG_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord: string[] = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n    FULL_LINE_PLACEHOLDER,\r\n    FLAVOR_LINE_PLACEHOLDER,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = async ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n        minLine?: number,\r\n        justifyRatio?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n        minLine: baseMinLine,\r\n        justifyRatio: baseJustifyRatio,\r\n    } = option ?? {};\r\n    const minLine = typeof baseMinLine === 'number' ? baseMinLine : 0;\r\n    const justifyRatio = typeof baseJustifyRatio === 'number' ? baseJustifyRatio : 1;\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        lineList,\r\n        fullLineListOption,\r\n        effectFlavorCondition,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    const maxFontListLineLength = fontList[fontList.length - 1].lineCount;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length || lineList.length > maxFontListLineLength\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 600,\r\n                '2': 600,\r\n                '3': 600,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (lineList.length > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current line count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList: lineList,\r\n                        additionalLineCount: 0,\r\n                        format, textData,\r\n                        width,\r\n                        lineHeight,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = Math.max(lineList.length, Math.max(minLine, lineListWithRatio.length));\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${lineList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            ((effectiveMedian < tolerantValue) && (sizeLevel < fontList.length))\r\n            || minLine > lineCount\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else if (useDynamicSize && effectiveMedian < tolerantValue) {\r\n            effectiveLineCount += 1; // Increase dynamic size if the font is too condensed\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            const lineDrawInfoList = lineListWithRatio\r\n                .map(({\r\n                    line: precalculatedLine,\r\n                    effectiveMedian,\r\n                    isLast,\r\n                }) => {\r\n                    let xRatio = 1;\r\n                    let finalTokenList: string[] = [];\r\n                    let finalSpaceWidth = 0;\r\n                    let finalTextData = textData;\r\n                    if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                        const { line = '', alignment } = fullLineListOption.shift() ?? {};\r\n                        const isLast = alignment === 'justify' ? false : true;\r\n                        xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [line],\r\n                                    format, textData,\r\n                                    width,\r\n                                    lineHeight,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio: 100,\r\n                            lineHeight,\r\n                        });\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = spaceWidth;\r\n                    } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                        const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                        const dynamicFlavorFontData = useDynamicSize\r\n                            ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: Math.max(minLine, lineListWithRatio.length) })\r\n                            : flavorFontData;\r\n                        const { fontSize } = useDynamicSize\r\n                            ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                            : flavorFontData.fontList[appliedSizeLevel];\r\n                        const flavorTextCurrentFont = createFontGetter();\r\n                        ctx.font = flavorTextCurrentFont\r\n                            .setSize(fontSize)\r\n                            .setFamily(flavorFontData.font)\r\n                            .getFont();\r\n                        const flavorTextData = {\r\n                            fontData: dynamicFlavorFontData,\r\n                            fontLevel: dynamicSizeLevel,\r\n                            currentFont: flavorTextCurrentFont,\r\n                        };\r\n                        xRatio = 1/1000 * condense(\r\n                            median => {\r\n                                const { currentLineCount } = createLineList({\r\n                                    ctx,\r\n                                    median,\r\n                                    paragraphList: [effectFlavorCondition],\r\n                                    format, textData: flavorTextData,\r\n                                    width,\r\n                                    lineHeight,\r\n                                    globalScale,\r\n                                });\r\n\r\n                                if (currentLineCount > 1) return false;\r\n                                return true;\r\n                            },\r\n                        );\r\n                        const tokenList = tokenizeText(effectFlavorCondition);\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = 0;\r\n                        finalTextData = flavorTextData;\r\n                    } else {\r\n                        /** Normal line: Draw with the calculated median */\r\n                        xRatio = effectiveMedian / 1000;\r\n                        const line = precalculatedLine;\r\n                        const { tokenList, spaceWidth } = analyzeLine({\r\n                            ctx,\r\n                            line,\r\n                            xRatio,\r\n                            format,\r\n                            isLast,\r\n                            textData,\r\n                            width,\r\n                            globalScale,\r\n                            justifyRatio,\r\n                            lineHeight,\r\n                        });\r\n                        finalTokenList = tokenList;\r\n                        finalSpaceWidth = spaceWidth;\r\n                    }\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n                    return {\r\n                        xRatio,\r\n                        line: precalculatedLine,\r\n                        tokenList: finalTokenList,\r\n                        spaceWidth: finalSpaceWidth,\r\n                        textData: finalTextData,\r\n                    };\r\n                });\r\n\r\n            for (let lineDrawInfo of lineDrawInfoList) {\r\n                const {\r\n                    xRatio,\r\n                    tokenList,\r\n                    line: precalculatedLine,\r\n                    spaceWidth,\r\n                    textData,\r\n                } = lineDrawInfo;\r\n                let result: ReturnType<typeof drawLine>;\r\n                if (precalculatedLine === FULL_LINE_PLACEHOLDER) {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        spaceWidth,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                } else if (precalculatedLine === FLAVOR_LINE_PLACEHOLDER) {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    const { currentFont, fontData } = textData;\r\n                    ctx.font = currentFont\r\n                        .setSize(fontSize)\r\n                        .setFamily(fontData.font)\r\n                        .getFont();\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                } else {\r\n                    ctx.scale(xRatio, yRatio);\r\n                    result = drawLine({\r\n                        ctx,\r\n                        tokenList,\r\n                        xRatio, yRatio,\r\n                        trueEdge, trueBaseline,\r\n                        spaceWidth,\r\n                        lineHeight,\r\n                        textData,\r\n                        format,\r\n                        globalScale,\r\n                    });\r\n                }\r\n                await result;\r\n\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                trueBaseline += lineHeight;\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starList,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n    loopStarFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starList: string[],\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopStarFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    /** We filter out all undefined star only at the trail of the star list */\r\n    const normalizedStarList = Array.isArray(starList)\r\n        ? starList\r\n        : [];\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = cardIcon === 'custom'\r\n        ? normalizedStarList.length\r\n        : typeof star === 'string'\r\n            ? star === '' ? 0 : 1\r\n            : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        ctx: starCtx,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async (_, index) => {\r\n            offset += (starWidth + startSpacing);\r\n            /** We must factor alignment here, because presentation does not factor alignment */\r\n            const cardIconIndex = normalizedStarCount - 1 - index;\r\n            const cardIconName = cardIcon === 'custom' ? normalizedStarList[cardIconIndex] : cardIcon;\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starCtx, `subfamily/subfamily-${cardIconName}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (!ctx) return;\r\n    if (loopStarFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            ctx: starFinishCtx,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishCtx?.drawImage(starCanvas, 0, 0);\r\n        await loopStarFinish(\r\n            starFinishCtx,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishCtx,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        if (starCtx) {\r\n            starCtx.globalCompositeOperation = 'source-in';\r\n            starCtx.drawImage(starFinishCanvas, 0, 0);\r\n        }\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    rating: string,\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || typeof rating !== 'string') return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const baseline = isNaN(Number(rating))\r\n        ? 1106\r\n        : 1105;\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${24 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${rating}`, 622.75 * globalScale, baseline * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import { CanvasConst } from 'src/model';\r\nimport { drawAsset } from '../image';\r\nimport { createCanvas } from 'src/util';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n    topToPendulumStructure,\r\n} = CanvasConst;\r\nexport const getMaskPromise = () => {\r\n    const topRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-top-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const bottomRightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-bottom-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    /**\r\n     * Be careful: Bottom right + Top right mask does NOT cover the entire right area when bottom left frame is also presented, so if both of them are the same frame, we might need to use right mask.\r\n     * \r\n     * Reason: Because bottom left frame also contains bottom right frame with transparency, if we draw another bottom right frame (that also has transparency) on top of it, it will not overlap the bottom frame, but merged with it, create a mix of both instead of total replacement, which is our desired effect. */\r\n    const rightMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-right.png');\r\n            return ctx.getImageData(0, 0, width, height).data;\r\n        }\r\n        return null;\r\n    })();\r\n    const nameMask = (async () => {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = topToPendulumStructure;\r\n        const ctx = canvas.getContext('2d');\r\n        if (ctx) {\r\n            await drawAsset(ctx, 'mask/mask-name.png');\r\n            return ctx.getImageData(0, 0, width, topToPendulumStructure).data;\r\n        }\r\n        return null;\r\n    })();\r\n\r\n    return {\r\n        topRight: topRightMask,\r\n        bottomRight: bottomRightMask,\r\n        right: rightMask,\r\n        name: nameMask,\r\n    };\r\n};\r\nexport const MaskPromise = getMaskPromise();\r\n\r\n/**\r\n * Draw the image onto an empty canvas, then apply an alpha mask over it.\r\n * \r\n * Each pixel in the image will be drawn with the alpha data from the corresponding pixel of the mask.\r\n * */\r\nexport const applyAlphaMask = async (\r\n    urlOrCanvas: string | CanvasImageSource,\r\n    maskData: Uint8ClampedArray<ArrayBufferLike> | null,\r\n    width: number,\r\n    height: number,\r\n) => {\r\n    const { ctx, canvas } = createCanvas(width, height);\r\n    if (!ctx) return canvas;\r\n    if (typeof urlOrCanvas === 'string') await drawAsset(ctx, urlOrCanvas, 0, 0);\r\n    else ctx.drawImage(urlOrCanvas, 0, 0, width, height);\r\n    if (!maskData) return canvas;\r\n    const layerData = ctx.getImageData(0, 0, width, height).data;\r\n    for (let cnt = 0; cnt < layerData.length; cnt += 4) {\r\n        layerData[cnt + 3] = maskData[cnt + 3];\r\n    }\r\n\r\n    ctx.putImageData(new ImageData(layerData, width, height), 0, 0);\r\n\r\n    return canvas;\r\n};","import {\r\n    ArrowPositionMap,\r\n    ArtFinishMap,\r\n    RegionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    FrameDyeList,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    OtherFinish,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, dyeCanvas, getCardIconFromFrame, HexColorRegex, resolveFrameStyle } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\nimport { applyAlphaMask, MaskPromise } from './mask';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    dyeColor: string,\r\n) => {\r\n    if (!ctx) return;\r\n    const willDyed = HexColorRegex.test(dyeColor);\r\n    if (foil === 'normal' && !willDyed) return;\r\n    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n    const usedFoil = willDyed ? 'platinum' : foil;\r\n    const drawFunction = async (ctx: CanvasRenderingContext2D) => {\r\n        if (withBorder) {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${usedFoil}.png`, 0, 175);\r\n        } else {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${usedFoil}.png`, ...coordinate);\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (willDyed) {\r\n        const { ctx: linkMapFoilCtx, canvas: linkMapFoilCanvas } = createCanvas();\r\n        if (linkMapFoilCtx) await drawFunction(linkMapFoilCtx);\r\n        const { canvas: dyedLinkMapFoilCanvas } = dyeCanvas(linkMapFoilCanvas, dyeColor);\r\n        ctx.drawImage(dyedLinkMapFoilCanvas, 0, 0);\r\n    } else {\r\n        await drawFunction(ctx);\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    region,\r\n    hasBackground,\r\n    frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n    dyeList,\r\n    effectBackground, pendulumEffectBackground,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    starList,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    otherFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    region: string,\r\n    frame: string, leftFrame: string, pendulumFrame: string, rightFrame: string, pendulumRightFrame: string,\r\n    dyeList: FrameDyeList,\r\n    effectBackground: string, pendulumEffectBackground: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    starList: string[],\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    otherFinish: OtherFinish,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFrameX,\r\n        artFrameY,\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz', 'xyz', 'xyz', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resolvedLayoutStyle = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n        effectBackground: resolvedEffectBackground,\r\n        pendulumEffectBackground: resolvedPendulumEffectBackground,\r\n    } = resolvedLayoutStyle;\r\n\r\n    const resultAPI = {\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            const willReplaceFrame = hasBackground && backgroundCanvas && backgroundType === 'frame';\r\n\r\n            /** Combine layer frame here */\r\n            const { ctx: topFrameCtx, canvas: topFrameCanvas } = createCanvas();\r\n            await drawAsset(topFrameCtx, `frame/frame-${topLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedTopFrameCanvas, ctx: dyedTopFrameCtx } = dyeCanvas(topFrameCanvas, dyeList[0]);\r\n            /** No need to dye if background is gonna replace the frame */\r\n            if (\r\n                !willReplaceFrame\r\n                && (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '')\r\n                && dyedTopFrameCtx\r\n            ) {\r\n                const topRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${topRightFrame}.png`,\r\n                    await MaskPromise.topRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedTopRightCanvas } = dyeCanvas(topRightCanvas, dyeList[1]);\r\n                dyedTopFrameCtx.drawImage(dyedTopRightCanvas, 0, 0);\r\n            }\r\n\r\n            const { ctx: bottomFrameCtx, canvas: bottomFrameCanvas } = createCanvas();\r\n            await drawAsset(bottomFrameCtx, `frame-pendulum/frame-pendulum-${bottomLeftFrame}.png`, 0, 0);\r\n            const { canvas: dyedBottomFrameCanvas, ctx: dyedBottomFrameCtx } = dyeCanvas(bottomFrameCanvas, dyeList[2]);\r\n            if (\r\n                !willReplaceFrame\r\n                && (bottomLeftFrame !== bottomRightFrame || dyeList[2] !== '' || dyeList[3] !== '')\r\n                && dyedBottomFrameCtx\r\n            ) {\r\n                /** What is this?\r\n                 * \r\n                 * Because the \"bottom left\" frame is not actually bottom, but both bottom left and bottom right with transparency. If we draw it first, then draw our \"bottom right\" frame on top of it, it will mixed with the bottom left frame (because both contains transparency), instead of replacing it, create an unintended side effect. Therefore we cut the part that may cause mixing color from the bottom left frame, before drawing the bottom right part.\r\n                 */\r\n                dyedBottomFrameCtx.clearRect(714, 0, 99, cardHeight);\r\n                const bottomRightCanvas = await applyAlphaMask(\r\n                    `frame/frame-${bottomRightFrame}.png`,\r\n                    await MaskPromise.bottomRight,\r\n                    cardWidth,\r\n                    cardHeight,\r\n                );\r\n                const { canvas: dyedBottomRightCanvas } = dyeCanvas(bottomRightCanvas, dyeList[3]);\r\n                dyedBottomFrameCtx.drawImage(dyedBottomRightCanvas, 0, 0);\r\n            }\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            /** Leave empty space for card art */\r\n            if (isPendulum) {\r\n                dyedTopFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n                dyedBottomFrameCtx?.clearRect(artFrameX, artFrameY, artFrameWidth, artFrameHeight);\r\n            }\r\n            /** Background replace frame */\r\n            if (willReplaceFrame && dyedTopFrameCtx && dyedBottomFrameCtx) {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                dyedTopFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedTopFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n                dyedBottomFrameCtx.globalCompositeOperation = 'source-atop';\r\n                dyedBottomFrameCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0, backgroundWidth, backgroundHeight,\r\n                    0, 0, cardWidth, cardHeight,\r\n                );\r\n            }\r\n            /** Start assembling the canvas */\r\n            ctx.drawImage(dyedTopFrameCanvas, 0, 0);\r\n            ctx.drawImage(dyedBottomFrameCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: (\r\n            externalCtx = ctx,\r\n        ) => {\r\n            if (!artworkCanvas || !externalCtx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            externalCtx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: async (\r\n            externalCtx = ctx,\r\n            hasArtBorder = false,\r\n        ) => {\r\n            if (!backgroundCanvas || !externalCtx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n                artFrameX,\r\n                artFrameY,\r\n                ratio,\r\n                artRatio,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                opacity,\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            if (backgroundType !== 'frame') {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n            } else {\r\n                externalCtx.drawImage(\r\n                    backgroundCanvas,\r\n                    0, 0,\r\n                    backgroundWidth, backgroundHeight,\r\n                    0, 0,\r\n                    globalScale * cardWidth, globalScale * cardHeight,\r\n                );\r\n            }\r\n            const backgroundFinish = otherFinish[3] ?? 'normal';\r\n            if (backgroundFinish !== 'normal' && hasArtBorder) {\r\n                const loopBackgroundFinish = getFinishIterator([backgroundFinish], ArtFinishMap);\r\n                await loopBackgroundFinish(\r\n                    externalCtx,\r\n                    'art',\r\n                    async type => drawAssetWithSize(\r\n                        externalCtx,\r\n                        `finish/art-finish-${type}.png`,\r\n                        globalScale * artFrameX, globalScale * artFrameY,\r\n                        globalScale * artFrameWidth, globalScale * artFrameWidth / artRatio,\r\n                    ),\r\n                );\r\n            }\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                ctx: attributeCtx,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeCtx,\r\n                `attribute/attr-${RegionMap[region].fileKey}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            const attributeFinish = otherFinish[0] ?? 'normal';\r\n            if (attributeFinish !== 'normal') {\r\n                const loopAttributeFinish = getFinishIterator([attributeFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    ctx: attributeFinishCtx,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishCtx?.drawImage(attributeCanvas, 0, 0);\r\n                await loopAttributeFinish(\r\n                    attributeFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                if (attributeCtx) {\r\n                    attributeCtx.globalCompositeOperation = 'source-in';\r\n                    attributeCtx.drawImage(attributeFinishCanvas, 0, 0);\r\n                }\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const starFinish = otherFinish[1] ?? 'normal';\r\n            const loopStarFinish = starFinish !== 'normal' ? getFinishIterator([starFinish], ArtFinishMap) : undefined;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starList,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopStarFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            const {\r\n                canvas: pendulumIconCanvas,\r\n                ctx: pendulumIconCtx,\r\n            } = createCanvas(pendulumIconFrameWidth, pendulumIconFrameHeight);\r\n            if (!ctx || !pendulumIconCtx) return;\r\n            await drawAsset(pendulumIconCtx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconCtx.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconCtx.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            const { ctx: nameBackgroundCtx, canvas: nameBackgroundCanvas } = createCanvas(cardWidth, topToPendulumStructure);\r\n            await drawAsset(nameBackgroundCtx, `background/background-name-${topLeftFrame}.png`, 0, 0);\r\n            const {\r\n                canvas: dyedLeftNameCanvas,\r\n                ctx: dyedLeftNameCtx\r\n            } = dyeCanvas(nameBackgroundCanvas, dyeList[0]);\r\n            if (topLeftFrame !== topRightFrame || dyeList[0] !== '' || dyeList[1] !== '') {\r\n                const nameRightCanvas = await applyAlphaMask(\r\n                    `background/background-name-${topRightFrame}.png`,\r\n                    await MaskPromise.name,\r\n                    cardWidth,\r\n                    topToPendulumStructure,\r\n                );\r\n                const dyedRightNameCanvas = dyeCanvas(nameRightCanvas, dyeList[1]).canvas;\r\n                dyedLeftNameCtx?.drawImage(dyedRightNameCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = opacityName / 100;\r\n            ctx.drawImage(dyedLeftNameCanvas, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n\r\n            const { ctx: effectBackgroundCtx, canvas: effectBackgroundCanvas } = createCanvas();\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    effectBackgroundCtx,\r\n                    `background/background-text-${resolvedEffectBackground}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            const dyedEffectBackgroundCanvas = dyeCanvas(effectBackgroundCanvas, dyeList[4]).canvas;\r\n            ctx.globalAlpha = opacityText / 100;\r\n            ctx.drawImage(dyedEffectBackgroundCanvas, 0, 0);\r\n\r\n            if (withPendulum) {\r\n                const { ctx: pendulumEffectBackgroundCtx, canvas: pendulumEffectBackgroundCanvas } = createCanvas();\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][resolvedPendulumEffectBackground] ?? {};\r\n                await drawAssetWithSize(\r\n                    pendulumEffectBackgroundCtx,\r\n                    `background/background-${exceptionFrameType}-${resolvedPendulumEffectBackground}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n                const dyedPendulumEffectBackgroundCanvas = dyeCanvas(pendulumEffectBackgroundCanvas, dyeList[5]).canvas;\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                ctx.drawImage(dyedPendulumEffectBackgroundCanvas, 0, 0);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil, willDye = false) => {\r\n            if (!ctx) return;\r\n            const validDyeColor = HexColorRegex.test(dyeList[6]);\r\n            const usedFoil = validDyeColor && willDye && foilType === 'normal' ? 'platinum' : foilType;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const { canvas: pendulumBorderCanvas, ctx: pendulumBorderCtx } = createCanvas();\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderCtx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${usedFoil}`\r\n                + '-artless'\r\n                + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (willDye && validDyeColor) {\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(pendulumBorderCanvas, dyeList[6]);\r\n                pendulumBorderCtx?.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            }\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderCtx?.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                if (validDyeColor) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foilType === 'normal' ? 'platinum' : foilType;\r\n                    const { ctx: pendulumBorderFoilCtx, canvas: pendulumBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(\r\n                        pendulumBorderFoilCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${usedFoil}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                    const { canvas: dyedPendulumBorderFoilCanvas } = dyeCanvas(pendulumBorderFoilCanvas, dyeList[6]);\r\n                    pendulumBorderCtx?.drawImage(dyedPendulumBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(\r\n                        pendulumBorderCtx,\r\n                        `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                        30, topToPendulumStructureFrame,\r\n                    );\r\n                }\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomLeftFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: cardBorderFoilCtx, canvas: cardBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(cardBorderFoilCtx, `frame/card-border-${usedFoil}.png`, 0, 0);\r\n                const { canvas: dyedCardBorderFoilCanvas } = dyeCanvas(cardBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedCardBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) {\r\n                if (HexColorRegex.test(dyeList[6])) {\r\n                    /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                    const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                    const { ctx: artBorderFoilCtx, canvas: artBorderFoilCanvas } = createCanvas();\r\n                    await drawAsset(artBorderFoilCtx, `frame/art-border-${usedFoil}.png`, artBoxX, artBoxY);\r\n                    const { canvas: dyedArtBorderFoilCanvas } = dyeCanvas(artBorderFoilCanvas, dyeList[6]);\r\n                    ctx.drawImage(dyedArtBorderFoilCanvas, 0, 0);\r\n                } else {\r\n                    await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n                }\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (HexColorRegex.test(dyeList[6])) {\r\n                /** Because we do not have \"normal\" foil, we use platinum as a base to dye. */\r\n                const usedFoil = foil === 'normal' ? 'platinum' : foil;\r\n                const { ctx: effectBorderFoilCtx, canvas: effectBorderFoilCanvas } = createCanvas();\r\n                await drawAsset(effectBorderFoilCtx, `frame/effect-border-${usedFoil}.png`, effectBoxX, effectBoxY);\r\n                const { canvas: dyedEffectBorderFoilCanvas } = dyeCanvas(effectBorderFoilCanvas, dyeList[6]);\r\n                ctx.drawImage(dyedEffectBorderFoilCanvas, 0, 0);\r\n            } else {\r\n                await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!applyArtFinish || !artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopArtFinish(\r\n                artCtx,\r\n                'art',\r\n                async (finishType, pendulumSuffix) => {\r\n                    return await drawAssetWithSize(\r\n                        artCtx,\r\n                        `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                        artFinishX, artFinishY,\r\n                        artFrameWidth, artFrameWidth / artRatio,\r\n                    );\r\n                },\r\n                pendulumSize,\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async (\r\n            artCtx = ctx,\r\n        ) => {\r\n            if (!artCtx) return;\r\n            artCtx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                artCtx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        artCtx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            artCtx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n\r\n    if (!(ctx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                lineHeight,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => { };\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = await drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        lineHeight,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        if (patternContext) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            patternContext.scale(globalScale, globalScale);\r\n            await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n            patternContext.globalCompositeOperation = patternBlendMode;\r\n            patternContext.resetTransform();\r\n            await drawAssetWithSize(\r\n                patternContext, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(patternCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            ctx.scale(xRatio, yRatio);\r\n        }\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        if (embossedImageData) ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + (hasEmboss ? embossThickness : 0),\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        await drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            lineHeight,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            drawImage: false,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        if (shadowContext) {\r\n            const resetShadow = setTextStyle({\r\n                ctx: shadowContext,\r\n                x: shadowOffsetX,\r\n                y: shadowOffsetY,\r\n                shadowColor: shadowColor,\r\n                blur: shadowBlur,\r\n                globalScale,\r\n                useDefault: false,\r\n            });\r\n            ctx.scale(1 / xRatio, 1 / yRatio);\r\n            shadowContext.drawImage(canvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            ctx.drawImage(shadowCanvas, 0, 0);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n            resetShadow();\r\n        }\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    await drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        lineHeight,\r\n        format,\r\n        globalScale,\r\n        drawImage: false,\r\n        textDrawer: () => { },\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData, createCanvas } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType, CanvasConst } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = async ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                lineHeight,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nconst {\r\n    finishTypeCardWidth,\r\n    width: CanvasWidth,\r\n    iconHeight,\r\n    iconWidth,\r\n} = CanvasConst;\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n    loopIconFinish,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n    loopIconFinish?: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = await drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -5 : -1;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        const {\r\n            canvas: iconCanvas,\r\n            ctx: iconCtx,\r\n        } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n        await drawAssetWithSize(\r\n            iconCtx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            () => edge + (iconWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            () => baseline - iconWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            () => iconWidth * globalScale,\r\n            () => iconHeight * globalScale,\r\n        );\r\n        if (loopIconFinish) {\r\n            const {\r\n                canvas: iconFinishCanvas,\r\n                ctx: iconFinishCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, (baseline + iconWidth) * globalScale);\r\n            if (iconFinishCtx && iconCtx) {\r\n                iconFinishCtx.drawImage(iconCanvas, 0, 0);\r\n                await loopIconFinish(\r\n                    iconFinishCtx,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            iconFinishCtx,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (CanvasWidth - finishTypeCardWidth) / 2, iconHeight,\r\n                        );\r\n                    },\r\n                );\r\n                iconCtx.globalCompositeOperation = 'source-in';\r\n                iconCtx.drawImage(iconFinishCanvas, 0, 0);\r\n                ctx.drawImage(iconCanvas, 0, 0);\r\n            }\r\n        } else {\r\n            ctx.drawImage(iconCanvas, 0, 0);\r\n        }\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitList = `${value}`.split('');\r\n\r\n        if (digitList.length === 1) {\r\n            const digit = digitList[0];\r\n            const digitWidth = ctx.measureText(digit).width;\r\n            const accLeft = edge - digitWidth / 2;\r\n\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 2 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n        } else if (digitList.length === 2) {\r\n            /** Observable behavior: The number \"1\" in 2-digits pendulum scale (10, 11, 12, 13) stay in the exact same place no matter which is the second digit, so we try to emulate this pattern here. */\r\n            const firstDigit = digitList[0];\r\n            const secondDigit = digitList[1];\r\n            const firstDigitWidth = ctx.measureText(firstDigit).width * 0.825;\r\n            const secondDigitWidth = ctx.measureText(secondDigit).width;\r\n            const accLeft = edge - firstDigitWidth - (firstDigit === '1'\r\n                ? 0\r\n                : firstDigitWidth * 0.1\r\n            );\r\n\r\n            ctx.fillText(\r\n                firstDigit,\r\n                accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            ctx.fillText(\r\n                secondDigit,\r\n                accLeft + firstDigitWidth - (firstDigit === '1'\r\n                    ? (secondDigit === '1'\r\n                        ? ctx.measureText('1').width * 0.1\r\n                        : secondDigitWidth * 0.1)\r\n                    : secondDigitWidth * -0.1),\r\n                baseline + fontSize,\r\n            );\r\n        } else {\r\n            let totalWidth = 0;\r\n\r\n            digitList.forEach(digit => {\r\n                totalWidth += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n            let accLeft = edge - totalWidth / 2;\r\n\r\n            digitList.forEach(digit => {\r\n                ctx.fillText(\r\n                    digit,\r\n                    accLeft,\r\n                    baseline + fontSize,\r\n                );\r\n                accLeft += ctx.measureText(digit).width * (digit === '1' ? 0.7 : 1);\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const {\r\n        stroke = false,\r\n        textStyle,\r\n        globalScale,\r\n    } = option ?? {};\r\n    const actualEdge = edge * globalScale;\r\n    const actualBaseline = baseline * globalScale;\r\n    const actualBaselineOffset = baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = actualEdge;\r\n    ctx.fillText('1', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, actualBaseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, actualBaseline - superTextOffset + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, actualBaseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, actualBaseline + actualBaselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, actualBaseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const numberOffset = -1;\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${36.18 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.scale(1, 1.29);\r\n        ctx.font = ` ${34 * globalScale}px MatrixBoldSmallCaps`;\r\n        ctx.fillText(value, edge + statWidth, numberOffset + baseline / 1.29);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${36.18 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${36.18 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, numberOffset + baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `${34 * globalScale}px MatrixBoldSmallCaps`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.scale(1, 1.29);\r\n                    ctx.fillText('?', nextEdge / condenseRatio, numberOffset + baseline / 1.29);\r\n                    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n} from 'src/model';\r\nimport {\r\n    checkDiplayLinkRating,\r\n    checkLightFooter,\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveFrameStyle,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n    stickerSize,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format, region,\r\n        hasBackground, backgroundType,\r\n        frame,\r\n        foil, finish, artFinish, otherFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumRightFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        leftFrame, rightFrame,\r\n        dyeList,\r\n        atk, def, linkMap, linkRating,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment, starList,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n        flag,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        effect: {\r\n            name: 'effect',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        pendulumEffect: {\r\n            name: 'pendulumEffect',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        otherText: {\r\n            name: 'otherText',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 9,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const effectBackground = effectStyle.background;\r\n    const pendulumEffectBackground = pendulumStyle.background;\r\n    const effectMinLine = effectStyle.minLine;\r\n    const pendulumEffectMinLine = pendulumStyle.minLine;\r\n    const effectJustifyRatio = effectStyle.justifyRatio;\r\n    const pendulumEffectJustifyRatio = pendulumStyle.justifyRatio;\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless, effectBox } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = checkLightFooter(bottomFrame);\r\n    const {\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle(\r\n        {\r\n            frame,\r\n            topLeftFrame: leftFrame,\r\n            topRightFrame: rightFrame,\r\n            bottomLeftFrame: pendulumFrame,\r\n            bottomRightFrame: pendulumRightFrame,\r\n            effectBackground: effectBackground,\r\n            pendulumEffectBackground: pendulumEffectBackground,\r\n        },\r\n        isPendulum,\r\n    );\r\n    const lightRightFooter = checkLightFooter(bottomRightFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n    const foilDyeColor = dyeList[6];\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const [\r\n        showDefAndLinkFlag,\r\n        linkRatingDisplayMode,\r\n    ] = flag;\r\n\r\n    /** One special case where we do not show link rating */\r\n    const isLinkST = !isPendulum && !isMonster && isLink && !(atk || def);\r\n    const showLinkRating = checkDiplayLinkRating(linkRatingDisplayMode, isLink) && !isLinkST;\r\n    const showDefAndLink = showLinkRating && showDefAndLinkFlag;\r\n    const statInEffect = !!(atk || def)\r\n        || showLinkRating\r\n        || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n    const [, iconFinish, stickerFinish] = otherFinish;\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                effectBox: keepEffectBox,\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (\r\n                ctx: CanvasRenderingContext2D,\r\n                x: number, y: number,\r\n                w: number, h: number,\r\n                customFill?: string,\r\n            ) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                region,\r\n                frame, leftFrame, pendulumFrame, rightFrame, pendulumRightFrame,\r\n                dyeList,\r\n                effectBackground, pendulumEffectBackground,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star, starList,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                otherFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Fill color background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(ctx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            /** artOnCard canvas ensure the art is drawn correct size and position on the actual card, overlay for art is applied here */\r\n            const {\r\n                canvas: artOnCardCanvas,\r\n                ctx: artOnCardCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (artworkCanvas && artOnCardCtx) drawCardArt(artOnCardCtx);\r\n            await drawArtFinish(artOnCardCtx);\r\n            await drawArtOverlayFinish(artOnCardCtx);\r\n\r\n            /** Combine background and artwork together, overlay for background is applied here */\r\n            const {\r\n                canvas: combinedArtCanvas,\r\n                ctx: combinedArtCtx,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            if (combinedArtCtx) await fillBaseColor(combinedArtCtx, 0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n            if (backgroundCanvas && combinedArtCtx) await drawBackground(combinedArtCtx, hasArtBorder);\r\n            if (!boundless && combinedArtCtx) combinedArtCtx.drawImage(artOnCardCanvas, 0, 0);\r\n\r\n            /** @summary Draw the overall layout */\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            ctx.drawImage(combinedArtCanvas, 0, 0);\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                }\r\n                if (!boundless && (keepEffectBox || !hasBackground)) {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                ctx.drawImage(\r\n                    combinedArtCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n                \r\n                /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil, true);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will be placed on top of the art border. The extended card image is still below name (text only), level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (isLink && !isPendulum) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil, true);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n\r\n                const {\r\n                    artX,\r\n                    artY,\r\n                    artWidth,\r\n                    ratio,\r\n                } = getArtCanvasCoordinate(isPendulum, opacity, 'full', pendulumSize);\r\n                ctx.drawImage(\r\n                    artOnCardCanvas,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                    globalScale * artX, globalScale * artY,\r\n                    globalScale * artWidth, globalScale * artWidth / ratio,\r\n                );\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil, true);\r\n                    await drawBorderPendulumFinish();\r\n                } else if (keepEffectBox) {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            \r\n            if (showLinkRating && statInEffect) {\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                const normalizedLinkRating = typeof linkRating === 'string' && linkRating.length > 0\r\n                    ? linkRating\r\n                    : `${(Array.isArray(linkMap) ? linkMap.length : 0)}`;\r\n                if (keepEffectBox) await drawLinkRatingText(frameCanvasRef.current, normalizedLinkRating, resolvedStatTextStyle, globalScale);\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        attribute,\r\n        backgroundCanvasRef,\r\n        backgroundType,\r\n        cardIcon,\r\n        dyeList,\r\n        effectBackground,\r\n        finish,\r\n        foil,\r\n        format,\r\n        region,\r\n        frame,\r\n        frameCanvasRef,\r\n        hasBackground,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        leftFrame,\r\n        levelStyle,\r\n        lightFooter,\r\n        linkMap,\r\n        linkRating,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        otherFinish,\r\n        pendulumEffectBackground,\r\n        pendulumFrame,\r\n        pendulumRightFrame,\r\n        pendulumSize,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        rightFrame,\r\n        showLinkRating,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        statInEffect,\r\n        withBlueScale,\r\n        withRedScale,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n\r\n            if (!clearCanvas(ctx) || !nameCanvasRef.current) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        // const hasAtk = !!atk;\r\n        const hasDef = showLinkRating\r\n            ? !!def && showDefAndLink\r\n            : !!def;\r\n        const hasLink = showLinkRating;\r\n        if (atk) {\r\n            const offset = (hasDef ? 168.75 : 0) + (hasLink ? 168.75 : 0);\r\n            if (effectBox) drawStatText(ctx, 'ATK', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, atk.trim(), 677.574 - offset, 1106.5, globalScale);\r\n        }\r\n        if (def && (!showLinkRating || showDefAndLink)) {\r\n            const offset = hasLink ? 168.75 : 0;\r\n            if (effectBox) drawStatText(ctx, 'DEF', 600.85 - offset, 1106, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865 - offset, 1106.5, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        effectBox,\r\n        atk,\r\n        def,\r\n        showLinkRating,\r\n        isMonster,\r\n        showDefAndLink,\r\n        resolvedStatTextStyle,\r\n        statCanvasRef,\r\n        statInEffect,\r\n    ]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink,\r\n                isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightRightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION (1st Edition Text) NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.otherText.rerun += 1;\r\n        drawingPipeline.current.otherText.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const isNumberPassword = /^[0-9]*$/.test(password);\r\n            const mayOffset = isNumberPassword && isPendulum && isLink;\r\n            const willOffset = mayOffset;\r\n            const { rightEdge } = await drawPasswordText({\r\n                ctx,\r\n                globalScale,\r\n                value: password,\r\n                lightFooter,\r\n                alignment: 'left',\r\n                edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n                format,\r\n                hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                fontLevel: !isNumberPassword ? 1 : 0\r\n            });\r\n            if (isFirstEdition) {\r\n                const willDraw = isPendulum\r\n                    ? isNumberPassword ? true : false\r\n                    : true;\r\n                const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? isLink ? 151 : 89\r\n                    : Math.max(rightEdge / globalScale + 14.813, 162.2) - (format === 'ocg' ? 7 : 0);\r\n                const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? 871\r\n                    : 1150.93;\r\n                const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                    ? 0\r\n                    : isSpeedSkill ? -2 : -1;\r\n\r\n                if (willDraw) draw1stEdition(\r\n                    ctx,\r\n                    left,\r\n                    bottom,\r\n                    bottomOffset,\r\n                    {\r\n                        stroke: false,\r\n                        globalScale,\r\n                        textStyle: {\r\n                            color: lightFooter ? '#ffffff' : '#000000',\r\n                            ...resolvedOtherEffectTextStyle,\r\n                        }\r\n                    },\r\n                );\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = await drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter: lightRightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        lightRightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                ctx: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            const normalizedStickerFinish = stickerFinish ?? 'normal';\r\n            if (normalizedStickerFinish !== 'normal') {\r\n                const loopStickerFinish = getFinishIterator([normalizedStickerFinish], ArtFinishMap);\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    ctx: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n                if (stickerFinishContext && stickerContext) {\r\n                    stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                    stickerFinishContext.scale(globalScale, globalScale);\r\n                    await loopStickerFinish(\r\n                        stickerFinishContext,\r\n                        'art',\r\n                        async (finishType) => {\r\n                            return await drawAsset(\r\n                                stickerFinishContext,\r\n                                `finish/finish-typeart-${finishType}.png`,\r\n                                stickerX - finishTypeCardWidth + stickerSize, stickerY - finishTypeCardHeight + stickerSize,\r\n                            );\r\n                        },\r\n                    );\r\n                    stickerContext.globalCompositeOperation = 'source-in';\r\n                    stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                    ctx.drawImage(stickerCanvas, 0, 0);\r\n                }\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, stickerFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.effect.rerun += 1;\r\n        drawingPipeline.current.effect.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = await drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                },\r\n            });\r\n            const normalizedIconFinish = iconFinish ?? 'normal';\r\n            const loopIconFinish = normalizedIconFinish !== 'normal' ? getFinishIterator([normalizedIconFinish], ArtFinishMap) : undefined;\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n                loopIconFinish,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        effectMinLine,\r\n        effectJustifyRatio,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        iconFinish,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.pendulumEffect.rerun += 1;\r\n        drawingPipeline.current.pendulumEffect.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            if (isPendulum) {\r\n                const { upSize, fontStyle } = pendulumStyle ?? {};\r\n                const customPendulumStyle = pendulumTextStyle[0];\r\n                const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n                const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n                const fontDataKey = `${format}-${pendulumSize}`;\r\n                const coordinateList = PendulumEffectCoordinateMap\r\n                    [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                    [pendulumSize];\r\n                /** Account for half scaleless frame */\r\n                const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                    ? coordinateList\r\n                    : coordinateList.map(({\r\n                        trueEdge, trueWidth, ...rest\r\n                    }) => ({\r\n                        ...rest,\r\n                        trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                        trueWidth: trueWidth\r\n                            - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                            - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    }));\r\n\r\n                await drawEffect({\r\n                    ctx,\r\n                    content: pendulumEffect,\r\n                    isNormal: false,\r\n                    useItalic: useItalic,\r\n                    fontData: (useItalic\r\n                        ? PendulumNormalFontData\r\n                        : PendulumEffectFontData)[fontDataKey],\r\n                    fontDataKey,\r\n                    textStyle: resolvedPendulumEffectTextStyle,\r\n                    sizeList: modifiedCoordinateList,\r\n                    condenseTolerant,\r\n                    format,\r\n                    furiganaHelper,\r\n                    option: {\r\n                        forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                        defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                        globalScale,\r\n                        minLine: pendulumEffectMinLine,\r\n                        justifyRatio: pendulumEffectJustifyRatio,\r\n                    }\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        pendulumEffectMinLine,\r\n        pendulumEffectJustifyRatio,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink) {\r\n                const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n                const {\r\n                    artBorder: keepArtBorder,\r\n                    body: opacityBody,\r\n                    boundless,\r\n                } = normalizedOpacity;\r\n                const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless || !hasArtBorder);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal', foilDyeColor);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        foilDyeColor,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        opacity,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (_exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        // const {\r\n        //     isRelevant,\r\n        //     pendulumSize,\r\n        //     isPendulum = false,\r\n        //     opacity,\r\n        // } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = async ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    lineHeight,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = async ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        const lineHeight = textData.fontData.fontList[textData.fontLevel].lineHeight;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                    lineHeight,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = await drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        lineHeight: textData.fontData.fontList[textData.fontLevel].lineHeight,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: string,\r\n    feedbackReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n        feedbackReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            feedbackReminder: typeof feedbackReminder === 'boolean' ? feedbackReminder : false,\r\n            faqReminder: typeof faqReminder !== 'string' ? '' : faqReminder,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            /** @todo Once these fonts are loaded, some letters previously appear ugly will inherit the font and looks much better, for example OCG-style ordinal number ① ② But right now it may not worth the trade off of including large fonts by default. */\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\n\r\nexport type PresetManagerStore = {\r\n    visible: boolean,\r\n    setVisible: (status?: boolean) => void,\r\n};\r\nexport const usePresetManager = create<\r\n    PresetManagerStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        visible: false,\r\n        setVisible: newStatus => {\r\n            set(({ visible }) => {\r\n                return { visible: newStatus == null ? !visible : newStatus };\r\n            });\r\n        }\r\n    };\r\n}));","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span<{ $freeSize: boolean, $size: 'sm' | 'md' }>`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    ${({ $freeSize, $size }) => $freeSize\r\n        ? 'padding: 0 var(--spacing-xxs);'\r\n        : $size === 'sm' ? 'width: 18px;' : 'width: 24px;'\r\n    };\r\n    ${({ $size }) => $size === 'sm'\r\n        ? `\r\n            height: 18px;\r\n            font-size: var(--fs-sm);\r\n        `\r\n        : `\r\n            height: 24px;\r\n            font-size: var(--fs);\r\n        `}\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    size?: 'sm' | 'md',\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    size = 'md',\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            $size={size}\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n            $freeSize={!Icon}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    align-items: center;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import styled from 'styled-components';\r\n\r\nexport const ColorBlock = styled.div<{ $static?: boolean, $empty?: boolean }>`\r\n    height: 17px;\r\n    width: 17px;\r\n    cursor: pointer;\r\n    position: relative;\r\n    outline: none;\r\n    box-shadow: 0 0 1px 1px var(--main-level-3);\r\n    border-radius: var(--br);\r\n    ${({ $static }) => $static\r\n        ? `\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        `\r\n        : ''}\r\n    ${({ $empty }) => $empty\r\n        ? `\r\n            background-color: var(--sub-level-4);\r\n            background-image: var(--gradient-diagonal-stripe);\r\n        `\r\n        : ''}\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n`;","import copy from 'copy-to-clipboard';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport styled, { css } from 'styled-components';\r\nimport React, { useState } from 'react';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const CopiableOverlayStyle = css`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nexport const StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    ${CopiableOverlayStyle}\r\n`;\r\n\r\nexport type Copiable = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n    disabled?: boolean,\r\n    overlay?: React.ReactNode,\r\n    container: React.ComponentType<{\r\n        children?: React.ReactNode,\r\n        disabled?: boolean,\r\n        onClick?: (e: { stopPropagation: () => void }) => void,\r\n    }>,\r\n}\r\nexport const Copiable = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    overlay = <CheckOutlined />,\r\n    container: Container,\r\n}: Copiable) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string | number) => {\r\n        copy(typeof copyingContent === 'number' ? `${copyingContent}` : copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <Container\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\">{overlay}</div> : null}\r\n        {children}\r\n    </Container>;\r\n};\r\n\r\nexport type CopiableCode = {\r\n    data: string | number,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    return <Copiable data={data} container={StyledMono}>{children}</Copiable>;\r\n};","import { Drawer, Popover } from 'antd';\r\nimport styled, { css, keyframes } from 'styled-components';\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const SolidLabel = styled.div`\r\n    display: inline-flex;\r\n    column-gap: var(--spacing-xs);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    border-radius: var(--br);\r\n    box-shadow: var(--bs-input);\r\n`;\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 57px 36px 6px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        border-right: none;\r\n        border-radius: var(--br) 0 0 var(--br);\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nconst ResolutionLabelContainer = styled.div<{ $warning: boolean }>`\r\n    display: grid;\r\n    grid-template-columns: 3em max-content 3em;\r\n    gap: var(--spacing-xs);\r\n    .left-part {\r\n        text-align: right;\r\n    }\r\n    .right-part {\r\n        text-align: left;\r\n    }\r\n    ${({ $warning }) => $warning\r\n        ? `\r\n            color: var(--main-warning);\r\n        `\r\n        : ''}\r\n`;\r\nexport type ResolutionLabel = {\r\n    warning?: boolean,\r\n    width: number,\r\n    height: number,\r\n}\r\nexport const ResolutionLabel = ({ width, height, warning = false }: ResolutionLabel) => {\r\n    return <ResolutionLabelContainer $warning={warning}>\r\n        <span className=\"left-part\">{width}</span>\r\n        <span>×</span>\r\n        <span className=\"right-part\">{height}</span>\r\n    </ResolutionLabelContainer>;\r\n};\r\n\r\nconst backgroundMarch = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\nexport const DropZone = styled.div<{ $visible: boolean }>`\r\n\tdisplay: ${({ $visible }) => $visible ? 'flex' : 'none'};\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-color: #8888cc44;\r\n\tz-index: 1;\r\n\tfont-size: var(--fs-3xl);\r\n\talign-items: center;\r\n    justify-content: center;\r\n\ttext-shadow: 0 0 3px #222;\r\n    border: 5px dashed #cccccc;\r\n    background: linear-gradient(-45deg, #ee7752aa, #e73c7e88, #23a6d588, #23d5ab88);\r\n\tbackground-size: 400% 400%;\r\n    padding: 5px;\r\n    label {\r\n        color: var(--color-heavy);\r\n        line-height: 1.25;\r\n    }\r\n    ${css`animation: ${backgroundMarch} 6s linear infinite;`}\r\n`;\r\n\r\n\r\nexport const ManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: var(--spacing);\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n`;\r\n\r\nexport const SingleSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    .ant-input-number {\r\n        width: 55px;\r\n    }\r\n    .ant-slider {\r\n        margin: var(--spacing-xxs);\r\n    }\r\n`;\r\n\r\nexport * from './color';\r\nexport * from './copiable';","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, getSlindingTypeList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    min-width: 15rem;\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        slidingType,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    <ResolutionLabel width={width} height={height} warning={true} />\r\n                                </Popover>\r\n                                : <ResolutionLabel width={width} height={height} />,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.sliding-type.label']}</div>\r\n                    <RadioTrain\r\n                        value={slidingType}\r\n                        optionList={getSlindingTypeList(language)}\r\n                        onChange={value => {\r\n                            updateSetting({ slidingType: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #2a2a2a inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    &.js-highlight {\r\n        background: var(--main-info);\r\n        text-shadow: none;\r\n        box-shadow: 0 0 2px 0 #333333;\r\n    }\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    white-space: pre-line;\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n        margin-bottom: var(--spacing-lg);\r\n    }\r\n    .image {\r\n        max-width: 100%;\r\n        padding: 0 var(--spacing) var(--spacing-lg) var(--spacing);\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    text-align: center;\r\n    .content {\r\n        text-align: left;\r\n    }\r\n    a {\r\n        display: inline-block;\r\n    }\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 300px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            <div className=\"content\">\r\n                                {content}\r\n                            </div>\r\n                            {image && <a target=\"_blank\" rel=\"noreferrer\" href={image} title=\"Click to open in new tab\">\r\n                                <img src={image} alt={`version-${version}-illust`} />\r\n                            </a>}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, notification, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const FAD_BUTTON_ID = 'faq-button';\r\n\r\ntype Feedback = {\r\n    author?: string,\r\n    question: string,\r\n    answer?: string,\r\n    image?: string,\r\n};\r\n\r\nconst StyledQuoteContainer = styled(QuoteContainer)`\r\n    text-align: center;\r\n    blockquote,\r\n    .answer {\r\n        text-align: left;\r\n    }\r\n    img {\r\n        max-height: 400px;\r\n    }\r\n`;\r\ntype Quote = {\r\n    image?: string,\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    image,\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <StyledQuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n        {image && <img className=\"image\" src={image} alt=\"answer preview\" />}\r\n    </StyledQuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [faqReminder, setMemoizedReminder] = useNotification('faqReminder');\r\n    const [feedbackReminder, setFeedbackReminder] = useNotification('feedbackReminder');\r\n\r\n    useEffect(() => {\r\n        const currentReminder = '08/10/2025';\r\n        if (faqReminder !== currentReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(currentReminder);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    useEffect(() => {\r\n        if (feedbackReminder !== true) {\r\n            setFeedbackReminder(true);\r\n            setAnimating(true);\r\n            notification.info({\r\n                message: 'Feedback Reminder',\r\n                description: 'If you have any feedback or suggestion, please check the FAQ button first to see if your feedback has been addressed.',\r\n                duration: 10,\r\n                onClose: () => {\r\n                    setAnimating(false);\r\n                }\r\n            });\r\n        }\r\n    }, [feedbackReminder, setFeedbackReminder]);\r\n\r\n    const feedbackList: Feedback[] = [\r\n        {\r\n            author: 'Anonymous User at Oct 11, 2025',\r\n            question: 'Elvennotes ~Homecoming Paralleism~\\nElvennotes ~Reunion Tercet~\\nElvennotes ~Maddening Rhapsodia~\\nElvennotes ~Oracle Alicetea~\\n\\nHello,\\nI noticed that these cards that will be released soon do not display the character \"~\" correctly. I hope you can do something about it. \\n\\nThanks \\nLiger',\r\n            answer: 'I have updated the font, hopefully it looks better now.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Oct 08, 2025',\r\n            question: 'Missed you so much bro its been a month',\r\n            answer: 'Me too, me too.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Sep 28, 2025',\r\n            question: 'For some reason, the border changes depending on the card type even though it\\'s set to Default',\r\n            answer: 'It seems like the card border is not loaded yet, so it exposes the underlying frame. I have replicate your card but does not see the same issue, does the problem still persist?',\r\n        },\r\n        {\r\n            author: 'mguesiten at Sep 28, 2025',\r\n            question: 'for the accented letter for example \"é\" or \"à\"',\r\n            answer: 'This is a known issue, unfortunately I haven\\'t found any better font with correct accents display, sorry for the inconvenience.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Sep 26, 2025',\r\n            question: 'hi m8. luv your work. i was thinking about two things. maybe 1 option for anime cards like in Vrains. another option to adjust the colour and saturation of the card frame. thks again for your work',\r\n            answer: 'Hi there, currently I do not have time needed for new templates, but for the color option, have you checking out the Advanced Layout option? If will allow you to change current frame\\'s color at will, which seem suitable for your use-case.'\r\n        },\r\n        {\r\n            author: 'OCG Proxy Secret Rare at Sep 18, 2025',\r\n            question: 'Is there a way to implement a Predefined or a pattern similar to the OCG Rainbow Secret Rare proxy text, please?',\r\n            answer: 'Hi there, I have added a new predefined preset for this case, you may try it now.',\r\n        },\r\n        {\r\n            author: 'Elttaest the Master of Duels at Sep 18, 2025',\r\n            question: 'Hi. Love your work, just wondering - with Elttaes, the Master of Duels and Dragon of Illumination, Sanctuary\\'s Shield, shouldn\\'t we have enough data to make Rush Duel cards in English as well? The font seems the same in both English and Japanese. And the card name seems the same used in TCG, although I can\\'t really make out what the Japanese font is. Sorry again for this. Just curious. Thanks for your time',\r\n            answer: 'Hi there, you are right that both cards can be used as a template for Rush Duel cards, but the main problem before the template itself is that currently I don\\'t have enough resources for such project right now, so I can\\'t promise anything at this moment. I will keep this in mind and see if I can do it in the future.',\r\n        },\r\n        {\r\n            author: 'Outline at Sep 17, 2025',\r\n            question: 'When placing an outline a location 0/0, the line is not aligned equally throughout the letter',\r\n            answer: 'Hi there, this is a known issue for Chrome on Windows, which currently I\\'m unable to fix. You can see the same card display perfectly fine on Chrome on MacOS.',\r\n            image: 'https://i.postimg.cc/MZsjtS2k/Screenshot-2025-09-17-at-08-09-48.png',\r\n        },\r\n        {\r\n            author: 'Image disappeards at Sep 15, 2025',\r\n            question: 'Adding the width function removes the image, regardless of the width chosen (it works without it)',\r\n            answer: 'Hi there, your syntax is incorrect, you must put the width attribute between double quotes (\"), like this: <img src=\"https://ms.yugipedia.com//5/59/Type-Cyberse-MADU.png\" width=\"40\" />.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Sep 10, 2025',\r\n            question: 'Ko hiện các dòng chữ hiệu ứng của lá bài',\r\n            answer: 'Đã fix nha bạn.',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Thank you for your quick response and for your astonishing work with the Carder. Yes, I am using an iPad and a phone, and, with both devices, when I click on the Download button, it just shows \"Saving...\" for a second, then no Download starts. I am now on a computer and it works great with left click and \"Save as\", though it would be nice to be able to use it on mobile.',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Sorry for second report in a row! I noticed you asked me specific questions. 1 The App does NOT freeze when trying to download on iPad and Android phone. Just no download starts. 2 The problem was immediately experienced because I discovered the Carder just yesterday.',\r\n            answer: 'Now it\\'s a bit strange; usually, if the export process encounters an error, an explicit message will be displayed. In this case, if the download process is already running but no files are downloaded, it could be that your mobile browser is blocking the automatic download due to some advance security settings. All mobile devices I have tested so far do not exhibit the same issue. I will try to investigate this further, but chances are I won\\'t be able to resolve it if I cannot reproduce the issue. Sorry for the inconvenience.',\r\n        },\r\n        {\r\n            author: 'Armando Giordano at Sep 06, 2025',\r\n            question: 'Hello! I am loving your work. I hope my issue is not because of ignorance, but it seems like it\\'s not possible to download cards as images.',\r\n            answer: 'Hi there, based on the report it seems that you are using an iPad. I don\\'t have an iPad to test right now, but could you please provide me some more information?\\n1. When you click the Download button, does anything happen? Does the app freeze or it just not doing anything?\\n2. Is the problem just appear recently, or it never worked in the first place?',\r\n            image: 'https://i.postimg.cc/Y2fjyvV2/image.png',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 16, 2025',\r\n            question: 'Art Filter #9 seems not to be working with Pendulum frames',\r\n            answer: 'Hi there, I have checked this case and do not see any significant error (see image below), do you have any image to demonstrate the error?',\r\n            image: 'https://images2.imgbox.com/5b/1f/vp8d5wIa_o.png',\r\n        },\r\n        {\r\n            author: '& symbol at Aug 14, 2025',\r\n            question: 'This symbole & isnt correct on display.\\nSee photo Magie & Piège',\r\n            answer: 'Hi there, I have checked the letter on a real card and do not see any significant error, do you have any image for how the letter should be displayed?',\r\n            image: 'https://i.imgur.com/xZ9Pp9X.png',\r\n        },\r\n        {\r\n            author: 'Die Frauen at Aug 9, 2025',\r\n            question: 'As for a suggestion related to the pevious query, this may be a bit too crazy, but since it\\'s lodged together with the advanced/custom layout feature, do you think perhaps the foil could be split into 5 pieces the same as it? (all 4 corners and the text frame). If it may take too much effort or is not feasible I\\'ll understand that.',\r\n            answer: 'I don\\'t think this would be possible, as card foils are divided into multiple pieces for different places, so I couldn\\'t split them the same way as card frames at all.',\r\n        },\r\n        {\r\n            author: 'Anonymous User at Aug 8, 2025',\r\n            question: 'There should be an effect text formatting option to justify text while making it respect the rest of the text\\'s compression ratio, like actual cards do.',\r\n            answer: 'I cannot support a new syntax right now, but if your use-case is just wanting the last line of effect / pendulum effect to be justfiy-aligned, you can use the newly implemented Justify Ratio in Paragraph Style button.',\r\n        },\r\n        {\r\n            author: 'the ¡ symbol is to long (for spanish card names) at Aug 5, 2025',\r\n            question: 'hi, i was trying to create a card using the ¡ symbol in the name, but its too long, not like the ! in the screenshot. for exaple: if u try to write the name \\'Caza del Cielo Movilizar - ¡Atacar!\\' you can see the symbol ¡ is too long compared to the pics of the same card in spanish. i hope you can fix that and ty for the web:3',\r\n            answer: 'I have updated the ratio, hopefully it looks better now.',\r\n        },\r\n        {\r\n            author: 'Rush Duel at Jun 22, 2025',\r\n            question: 'This card maker is amazing! Have you ever consider doing a rush duel section as well?',\r\n            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n        },\r\n        {\r\n            author: 'Maya at May 23, 2025',\r\n            question: 'I\\'d like to make a request, is it possible to put a SPEED DUEL watermark in EVERY card types in the description area like the Speed Skill type when it is set to speed duel? thank you so much. Appreciate your lovely cardmaker',\r\n            answer: 'I will try, but this is pretty hard to do to be honest, don\\'t keep your hope up.',\r\n        },\r\n    ];\r\n\r\n    return <>\r\n        <FaqButtonLabel id={FAD_BUTTON_ID} $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved or stale (4 weeks of inactive) feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {feedbackList.map(({ author, question, answer, image }, index) => {\r\n                        return <Quote key={index} author={author} question={question} image={image}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                        {\r\n                            question: 'Will you make another version for Rush Duel cards?',\r\n                            answer: 'I do want to create a similar editor for Rush Duel cards, but it will require a significant amount of effort that I currently lack. Additionally, since there is no official adaptation of Rush cards for TCG, doing this now risks a considerable incompatibility issue in the future.',\r\n                        }\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { ImagePreset } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { Copiable, StyledMono } from '../atom';\r\nimport { Popconfirm } from 'antd';\r\nimport { CloseOutlined, EditOutlined } from '@ant-design/icons';\r\nimport { WithLanguage } from 'src/service';\r\n\r\nconst MAX_PRESET_IMAGE_WIDTH = 140;\r\nconst MAX_PRESET_IMAGE_HEIGHT = 60;\r\nconst StyledImagePresetContainer = styled.div`\r\n    --max-image-height: ${MAX_PRESET_IMAGE_HEIGHT}px;\r\n    display: grid;\r\n    grid-template-rows: ${MAX_PRESET_IMAGE_HEIGHT}px 22px 1fr;\r\n    text-align: center;\r\n    .image-preview {\r\n        align-content: space-around;\r\n        height: var(--max-image-height);\r\n        img {\r\n            max-width: ${MAX_PRESET_IMAGE_WIDTH}px;\r\n            max-height: var(--max-image-height);\r\n        }\r\n    }\r\n    .image-info {\r\n        display: flex;\r\n        gap: var(--spacing-xxs);\r\n        align-items: center;\r\n        .image-name {\r\n            flex: 1 1 auto;\r\n        }\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-edit:hover {\r\n                color: var(--sub-info);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImagePresetOption = {\r\n    imagePreset: ImagePreset,\r\n    onEdit?: () => void,\r\n    onDelete?: () => void,\r\n} & WithLanguage;\r\nexport const ImagePresetOption = ({\r\n    language,\r\n    imagePreset,\r\n    onDelete,\r\n    onEdit,\r\n}: ImagePresetOption) => {\r\n    const {\r\n        src,\r\n        name,\r\n        width,\r\n        height,\r\n        offsetX,\r\n        offsetY,\r\n    } = imagePreset;\r\n    const normalizedOffsetX = typeof offsetX === 'number'\r\n        ? offsetX > 0 ? `+${offsetX}` : offsetX\r\n        : '0';\r\n    const normalizedOffsetY = typeof offsetY === 'number'\r\n        ? offsetY > 0 ? `+${offsetY}` : offsetY\r\n        : '0';\r\n\r\n    return <StyledImagePresetContainer>\r\n        <div className=\"image-preview\">\r\n            <img src={src} alt={name} />\r\n        </div>\r\n        <div>\r\n            {width ?? 'auto'} × {height ?? 'auto'}\r\n            {typeof offsetX === 'number' || typeof offsetY === 'number'\r\n                ? ` (${normalizedOffsetX}, ${normalizedOffsetY})`\r\n                : null}\r\n        </div>\r\n        <div className=\"image-info\">\r\n            <div className=\"image-name\">\r\n                <Copiable data={name} container={StyledMono}>{name}</Copiable>\r\n            </div>\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onDelete()}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onEdit && <EditOutlined onClick={() => onEdit()} />}\r\n        </div>\r\n    </StyledImagePresetContainer>;\r\n};","import { useEffect, useRef } from 'react';\r\nimport { drawName } from 'src/draw';\r\nimport { FrameInfo, NameStyle } from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport { mergeClass, resolveNameStyle } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Popconfirm } from 'antd';\r\n\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        cursor: pointer;\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nconst OPTION_WIDTH = 140;\r\nconst OPTION_HEIGHT = 30;\r\nconst PresetOptionContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    .canvas-container {\r\n        width: ${OPTION_WIDTH}px;\r\n        height: ${OPTION_HEIGHT}px;\r\n        box-shadow: var(--bs-1);\r\n    }\r\n    .preset-option-action {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-xxs);\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type NameStylePresetOption = React.PropsWithChildren<{\r\n    frameInfo?: FrameInfo,\r\n    presetContent: Partial<NameStyle>,\r\n    active?: boolean,\r\n    onOverwrite?: () => void,\r\n    onActive?: () => void,\r\n    onDelete?: () => void,\r\n} & WithLanguage>;\r\nexport const NameStylePresetOption = ({\r\n    frameInfo,\r\n    presetContent,\r\n    active = false,\r\n    language,\r\n    onOverwrite,\r\n    onActive,\r\n    onDelete,\r\n}: NameStylePresetOption) => {\r\n    const {\r\n        format, foil,\r\n    } = useCard(useShallow(({\r\n        card: { format, foil },\r\n    }) => ({\r\n        format, foil,\r\n    })));\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n    const {\r\n        name,\r\n        labelBackgroundColor,\r\n        labelBackgroundImage,\r\n    } = frameInfo ?? {};\r\n    const normalizedFrame = name ?? 'effect';\r\n\r\n    useEffect(() => {\r\n        const canvas = canvasRef.current;\r\n        const ctx = canvas?.getContext('2d');\r\n        if (canvas && ctx) {\r\n            ctx.clearRect(0, 0, OPTION_WIDTH, OPTION_HEIGHT);\r\n            const { font } = presetContent;\r\n            const value = font === 'OCG' ? '{カード名|かーどめい}' : 'Card Name';\r\n            const top = font === 'OCG' ? 65 : 60;\r\n            const left = font === 'OCG' ? 65 : 12;\r\n            drawName(\r\n                canvas,\r\n                ctx,\r\n                value,\r\n                left,\r\n                top,\r\n                OPTION_WIDTH / 0.4,\r\n                resolveNameStyle({\r\n                    foil,\r\n                    format,\r\n                    frame: normalizedFrame,\r\n                    nameStyle: presetContent,\r\n                    nameStyleType: 'custom',\r\n                }),\r\n                {\r\n                    frame: normalizedFrame,\r\n                    format,\r\n                    furiganaHelper: false,\r\n                    globalScale: 0.4,\r\n                    isSpeedSkill: true,\r\n                }\r\n            );\r\n        }\r\n    }, [foil, format, normalizedFrame, presetContent]);\r\n\r\n    return <PresetOptionContainer\r\n        className={mergeClass('preset-option', active ? 'menu-active' : '')}\r\n    >\r\n        <StyledPatternOption\r\n            className={mergeClass('canvas-container', !!onActive ? '' : 'menu-off')}\r\n            onClick={onActive}\r\n            style={{\r\n                background: labelBackgroundColor,\r\n                backgroundImage: labelBackgroundImage,\r\n            }}\r\n        >\r\n            <canvas ref={canvasRef} width={OPTION_WIDTH} height={OPTION_HEIGHT} />\r\n        </StyledPatternOption>\r\n        <div className=\"preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onDelete()}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </PresetOptionContainer>;\r\n};","import { Popconfirm } from 'antd';\r\nimport { DyeIndexMap, Foil, FoilMap, FrameInfoMap } from 'src/model';\r\nimport { WithLanguage } from 'src/service';\r\nimport { HexColorRegex, mergeClass } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\n\r\nconst CardLayoutContainer = styled.div<{ $width: number, $height: number, $layoutHoverable: boolean, $hoverable: boolean }>`\r\n    /** Ensure even width */\r\n    --layout-width: ${props => Math.round(props.$width / 2) * 2}px;\r\n    --layout-height: ${props => props.$height}px;\r\n    display: inline-block;\r\n    width: var(--layout-width);\r\n    height: var(--layout-height);\r\n    box-shadow: 0 0 2px 0 #202020;\r\n    position: relative;\r\n    background: var(--main-level-2);\r\n    ${props => props.$hoverable ? 'cursor: pointer;' : ''}\r\n    &.is-vertical {\r\n        margin-bottom: var(--spacing-3xl);\r\n        .float-layout.foil {\r\n            width: 100%;\r\n            left: 0;\r\n            bottom: -22.5%;\r\n            font-size: var(--fs-sm);\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    &.is-horizontal {\r\n        margin-right: var(--spacing-lg);\r\n        .float-layout.foil {\r\n            width: 50%;\r\n            height: 80%;\r\n            top: 10%;\r\n            right: -60%;\r\n            font-size: 0;\r\n            background-color: var(--main-level-1);\r\n        }\r\n    }\r\n    button {\r\n        border: none;\r\n    }\r\n    .overlay-patch {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n    }\r\n    .dye-patch {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: 10%;\r\n        left: 50%;\r\n        min-width: 6px;\r\n        min-height: 6px;\r\n        width: ${props => props.$width / 6}px;\r\n        height: ${props => props.$width / 6}px;\r\n        border-radius: var(--br-lg);\r\n        transform: translateX(-50%);\r\n    }\r\n    .card-layout {\r\n        position: absolute;\r\n        ${props => props.$layoutHoverable ? 'cursor: pointer;' : ''}\r\n        padding: 0;\r\n        &.unmodified .overlay-patch {\r\n            background: var(--gradient-diagonal-stripe);\r\n        }\r\n    }\r\n    .partial-layout {\r\n        background-clip: padding-box;\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    .float-layout {\r\n        ${props => props.$layoutHoverable\r\n        ? `\r\n                border: var(--bw) solid var(--main-level-1);\r\n                &.active {\r\n                    border: var(--bw) dashed var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n                &:hover {\r\n                    border: var(--bw) solid var(--main-level-2);\r\n                    box-shadow: 0 0 1px 0 var(--main-level-1);\r\n                }\r\n            `\r\n        : ''}\r\n    }\r\n    /** For Zarc's gradient */\r\n    .partial-layout {\r\n        background-size: 200%;\r\n    }\r\n    .top-left {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 0;\r\n    }\r\n    .top-right {\r\n        width: 50%; height: 50%;\r\n        top: 0; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    .bottom-left {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 0;\r\n    }\r\n    .bottom-right {\r\n        width: 50%; height: 50%;\r\n        top: 50%; left: 50%;\r\n        background-position-x: 100%;\r\n    }\r\n    /** Background width is slightly reduced to help active bottom frames easier */\r\n    .effect-background {\r\n        width: 80%;\r\n        height: 20%;\r\n        bottom: 5%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n    .pendulum-effect-background {\r\n        width: 80%;\r\n        height: 13%;\r\n        bottom: 28%;\r\n        left: 10%;\r\n        background-size: 125%;\r\n        background-position-x: 50%;\r\n    }\r\n`;\r\nexport type CardLayoutPreview = {\r\n    tabIndex?: number,\r\n    width: number,\r\n    height: number,\r\n    baseLayoutState?: Record<string, string | undefined>,\r\n    resolvedLayoutState: Record<string, string | undefined>,\r\n    isPendulum: boolean,\r\n    activeLayout?: string,\r\n    dyeList: string[],\r\n    foil: Foil,\r\n    onClick?: () => void,\r\n    onLayoutSelect?: (key: string) => void,\r\n    vertical?: boolean,\r\n} & WithLanguage;\r\nexport const CardLayoutPreview = ({\r\n    tabIndex = 0,\r\n    width,\r\n    height,\r\n    baseLayoutState,\r\n    resolvedLayoutState,\r\n    isPendulum,\r\n    activeLayout,\r\n    dyeList,\r\n    foil,\r\n    onClick,\r\n    onLayoutSelect,\r\n    language,\r\n    vertical = false,\r\n}: CardLayoutPreview) => {\r\n    return <CardLayoutContainer\r\n        $width={width}\r\n        $height={height}\r\n        $layoutHoverable={!!onLayoutSelect}\r\n        $hoverable={!!onClick}\r\n        onClick={onClick}\r\n        className={mergeClass('card-layout-container', vertical ? 'is-vertical' : 'is-horizontal')}\r\n    >\r\n        {[\r\n            { key: 'topLeftFrame', className: 'card-layout partial-layout top-left' },\r\n            { key: 'topRightFrame', className: 'card-layout partial-layout top-right' },\r\n            { key: 'bottomLeftFrame', className: 'card-layout partial-layout bottom-left' },\r\n            { key: 'bottomRightFrame', className: 'card-layout partial-layout bottom-right' },\r\n            { key: 'effectBackground', className: 'card-layout float-layout effect-background' },\r\n            { key: 'pendulumEffectBackground', className: 'card-layout float-layout pendulum-effect-background' },\r\n        ].map(({ className, key }) => {\r\n            const frame = resolvedLayoutState[key];\r\n            const dyeIndex = DyeIndexMap[key];\r\n            const dyeColor = dyeIndex == null ? undefined : dyeList[DyeIndexMap[key]];\r\n\r\n            if (!frame) return null;\r\n            if (!isPendulum && key === 'pendulumEffectBackground') return null;\r\n            const {\r\n                labelBackgroundColor,\r\n                labelBackgroundImage,\r\n            } = FrameInfoMap[frame] ?? {};\r\n            return <button key={key}\r\n                {...tabIndex < 0 ? {} : { tabIndex }}\r\n                className={mergeClass(\r\n                    className,\r\n                    key === activeLayout ? 'active' : '',\r\n                    baseLayoutState?.[key] === 'auto' ? 'unmodified' : '',\r\n                )}\r\n                onClick={() => onLayoutSelect?.(key)}\r\n                style={labelBackgroundImage\r\n                    ? { backgroundImage: labelBackgroundImage }\r\n                    : { backgroundColor: labelBackgroundColor }\r\n                }\r\n            >\r\n                <div\r\n                    className=\"overlay-patch\"\r\n                    style={dyeColor\r\n                        ? {\r\n                            boxShadow: `0 0 0 ${Math.round(width / 16)}px ${dyeColor} inset`,\r\n                        }\r\n                        : {}}\r\n                />\r\n            </button>;\r\n        })}\r\n        <button\r\n            {...tabIndex < 0 ? {} : { tabIndex }}\r\n            className={mergeClass(\r\n                'card-layout float-layout foil',\r\n                'foil' === activeLayout ? 'active' : '',\r\n            )}\r\n            onClick={() => onLayoutSelect?.('foil')}\r\n            style={{\r\n                boxShadow: `0 0 0 2px ${HexColorRegex.test(dyeList[DyeIndexMap.foil])\r\n                    ? dyeList[DyeIndexMap.foil]\r\n                    : FoilMap[foil].color} inset`\r\n            }}\r\n        >\r\n            {language['input.foil.label']}\r\n        </button>\r\n    </CardLayoutContainer>;\r\n};\r\n\r\nconst LayoutPresetOptionContainer = styled.div`\r\n    text-align: center;\r\n    .layout-preset-option-action {\r\n        line-height: 1.25;\r\n        text-align: center;\r\n        .anticon {\r\n            cursor: pointer;\r\n            &.anticon-close:hover {\r\n                color: var(--sub-danger);\r\n            }\r\n            &.anticon-save:hover {\r\n                color: var(--sub-info);\r\n            }\r\n            + .anticon {\r\n                margin-left: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n`;\r\nexport type LayoutPresetOption = {\r\n    onActive?: () => void,\r\n    onOverwrite?: () => Promise<void>,\r\n    onDelete?: () => Promise<void>,\r\n} & CardLayoutPreview;\r\nexport const LayoutPresetOption = ({\r\n    onActive,\r\n    onDelete,\r\n    onOverwrite,\r\n    language,\r\n    ...rest\r\n}: LayoutPresetOption) => {\r\n    return <LayoutPresetOptionContainer className=\"frame-preset-option\">\r\n        <div className=\"preview-container\" onClick={onActive}>\r\n            <CardLayoutPreview {...rest} language={language} />\r\n        </div>\r\n        <div className=\"layout-preset-option-action\">\r\n            {onDelete && <Popconfirm\r\n                title={language['generic.delete.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={onDelete}\r\n            >\r\n                <CloseOutlined />\r\n            </Popconfirm>}\r\n            {onOverwrite && <Popconfirm\r\n                title={language['generic.overwrite.label']}\r\n                okText={language['generic.yes.label']}\r\n                cancelText={language['generic.no.label']}\r\n                onConfirm={() => onOverwrite()}\r\n            >\r\n                <SaveOutlined />\r\n            </Popconfirm>}\r\n        </div>\r\n    </LayoutPresetOptionContainer>;\r\n};","import { Button, Col, Form, Input, InputNumber, Modal, notification, Row } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useState } from 'react';\r\nimport { ImagePreset } from 'src/model';\r\nimport { WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst ImagePresetFormContainer = styled(Form.Item)`\r\n    &.ant-form-item {\r\n        margin-bottom: calc(-3/2 * var(--spacing));\r\n        margin-top: var(--spacing);\r\n        margin-left: calc(-3/2 * var(--spacing));\r\n        margin-right: calc(-3/2 * var(--spacing));\r\n        padding: var(--spacing);\r\n        border-top: var(--bw) solid var(--sub-level-1);\r\n        .ant-form-item-control-input-content {\r\n            display: flex;\r\n            justify-content: end;\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImagePresetFormRef = {\r\n    edit: (key: string, data: ImagePreset) => void,\r\n};\r\nexport type ImagePresetForm = {\r\n    onSubmit: (data: ImagePreset) => void,\r\n    onEdit: (key: string, data: ImagePreset) => void,\r\n} & WithLanguage;\r\nexport const ImagePresetForm = forwardRef<ImagePresetFormRef, ImagePresetForm>(({\r\n    onSubmit,\r\n    onEdit,\r\n    language,\r\n}, ref) => {\r\n    const [form] = Form.useForm();\r\n    const [editKey, setEditKey] = useState('');\r\n    const [visible, setVisible] = useState(false);\r\n    const turnOffForm = () => {\r\n        setVisible(false);\r\n        setEditKey('');\r\n        form.resetFields();\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        edit: (key, data) => {\r\n            form.setFieldsValue(data);\r\n            setEditKey(key);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    return <>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n                setVisible(true);\r\n            }}\r\n        >\r\n            {language['preset.form.image.add.label']}\r\n        </Button>\r\n        <Modal\r\n            visible={visible}\r\n            width={400}\r\n            className=\"global-overlay\"\r\n            footer={() => null}\r\n            onCancel={() => turnOffForm()}\r\n        >\r\n            <Form\r\n                form={form}\r\n                name=\"image-preset\"\r\n                layout=\"vertical\"\r\n                size=\"middle\"\r\n                onFinish={value => {\r\n                    if (typeof editKey === 'string' && editKey !== '') {\r\n                        onEdit(editKey, value);\r\n                    } else {\r\n                        onSubmit(value);\r\n                    }\r\n                    turnOffForm();\r\n                }}\r\n                onFinishFailed={() => {\r\n                    notification.error({\r\n                        message: language['error.preset-import.message'],\r\n                        description: language['error.preset-import.description'],\r\n                    });\r\n                }}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label={language['preset.form.image.src.label']}\r\n                    name=\"src\"\r\n                    rules={[{ required: true, message: language['form.required'] }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label={language['preset.form.image.name.label']}\r\n                    name=\"name\"\r\n                    rules={[{ required: true, message: language['form.required'] }]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n                <div>{language['form.default']}</div>\r\n\r\n                <Row gutter={10}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.width.label']}\r\n                            name=\"width\"\r\n                        >\r\n                            <InputNumber step={1} min={0} max={800} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.height.label']}\r\n                            name=\"height\"\r\n                        >\r\n                            <InputNumber step={1} min={0} max={800} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row gutter={10}>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.offset-x.label']}\r\n                            name=\"offsetX\"\r\n                        >\r\n                            <InputNumber step={1} min={-200} max={200} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <Form.Item\r\n                            label={language['preset.form.image.offset-y.label']}\r\n                            name=\"offsetY\"\r\n                        >\r\n                            <InputNumber step={1} min={-200} max={200} />\r\n                        </Form.Item>\r\n                    </Col>\r\n                </Row>\r\n                <ImagePresetFormContainer>\r\n                    <Button onClick={() => turnOffForm()}>\r\n                        {language['form.dismiss']}\r\n                    </Button>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        {language['form.submit']}\r\n                    </Button>\r\n                </ImagePresetFormContainer>\r\n            </Form>\r\n        </Modal>\r\n    </>;\r\n});","import { GlobalMemory, useCard, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ManagerDrawer } from '../atom';\r\nimport { ImagePresetOption, NameStylePresetOption } from '../preset-option';\r\nimport { CanvasConst, FrameInfo, FrameInfoMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { LayoutPresetOption } from '../card-layout-preview';\r\nimport { downloadBlob, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { Button, Modal, notification } from 'antd';\r\nimport { useMemo, useRef, useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { ImagePresetForm, ImagePresetFormRef } from './image-preset-form';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst PresetImportReviewModalContainer = styled(Modal)`\r\n    .import-review-title {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .import-action-table {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs);\r\n            &:nth-child(1) {\r\n                width: 150px;\r\n            }\r\n            &:nth-child(2) {\r\n                width: 150px;\r\n            }\r\n        }\r\n        .action-panel {\r\n            display: grid;\r\n            grid-template-columns: 1fr 1fr 1fr;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .import-action-row {\r\n            &.keep-old {\r\n                td:nth-child(1) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-new {\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n            &.keep-both {\r\n                td:nth-child(1),\r\n                td:nth-child(2) {\r\n                    background-color: var(--main-level-4);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype MergeEntry<Value> = Value & { verdict: 'keep-old' | 'keep-new' | 'keep-both' };\r\ntype NameStylePreset = GlobalMemory['nameStylePresetList'][0];\r\ntype LayoutPreset = GlobalMemory['layoutPresetList'][0];\r\ntype PresetImportReviewModal = {\r\n    frameInfo: FrameInfo,\r\n    isPendulum: boolean,\r\n    importData: Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList'>,\r\n    onCancel: () => void,\r\n} & WithLanguage;\r\nconst PresetImportReviewModal = ({\r\n    language,\r\n    isPendulum,\r\n    frameInfo,\r\n    importData,\r\n    onCancel,\r\n}: PresetImportReviewModal) => {\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const {\r\n        layoutPresetMap,\r\n        nameStylePresetMap,\r\n    } = useMemo(() => {\r\n        const nameStylePresetMap = nameStylePresetList.reduce<Record<string, NameStylePreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n        const layoutPresetMap = layoutPresetList.reduce<Record<string, LayoutPreset>>((acc, cur) => {\r\n            acc[cur.key] = cur;\r\n            return acc;\r\n        }, {});\r\n\r\n        return {\r\n            nameStylePresetMap,\r\n            layoutPresetMap,\r\n        };\r\n    }, [layoutPresetList, nameStylePresetList]);\r\n    const {\r\n        layoutPresetList: nextLayoutPresetList = [],\r\n        nameStylePresetList: nextNameStylePresetList = [],\r\n    } = importData;\r\n    const [decisionMap, setDecisionMap] = useState(() => {\r\n        const layoutPresetMap = nextLayoutPresetList.reduce<Record<string, MergeEntry<LayoutPreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n        const nameStylePresetMap = nextNameStylePresetList.reduce<Record<string, MergeEntry<NameStylePreset>>>((acc, cur) => {\r\n            acc[cur.key] = { ...cur, verdict: 'keep-new' };\r\n            return acc;\r\n        }, {});\r\n\r\n        return { layoutPresetMap, nameStylePresetMap };\r\n    });\r\n\r\n    return <PresetImportReviewModalContainer\r\n        visible={true}\r\n        width={700}\r\n        maskClosable={false}\r\n        okText={language['preset.button.import.label']}\r\n        cancelText={language['preset.button.discard.label']}\r\n        onCancel={onCancel}\r\n        onOk={async () => {\r\n            const layoutVerdictList = Object.values(decisionMap.layoutPresetMap);\r\n            const nameStyleVerdictList = Object.values(decisionMap.nameStylePresetMap);\r\n\r\n            const layoutReplaceMap: Record<string, LayoutPreset> = {};\r\n            const layoutFullList: LayoutPreset[] = [];\r\n            const layoutNewList: LayoutPreset[] = [];\r\n            layoutVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    layoutFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (layoutPresetMap[key] == null && verdict === 'keep-new') {\r\n                        layoutNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        layoutNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        layoutReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const layoutPresetTx = db.transaction('presetLayoutStore', 'readwrite');\r\n                for (const { key, content } of layoutFullList) {\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await layoutPresetTx.done;\r\n            }\r\n            setLayoutPresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (layoutReplaceMap[entry.key]) return layoutReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...layoutNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n\r\n            const nameStyleReplaceMap: Record<string, NameStylePreset> = {};\r\n            const nameStyleFullList: NameStylePreset[] = [];\r\n            const nameStyleNewList: NameStylePreset[] = [];\r\n            nameStyleVerdictList\r\n                .filter(({ verdict }) => verdict !== 'keep-old')\r\n                .forEach(entry => {\r\n                    const { key, content, verdict } = entry;\r\n                    nameStyleFullList.push({ key, content });\r\n                    /** If choose to keep new and there is no existing entry => push new entry */\r\n                    if (nameStylePresetMap[key] == null && verdict === 'keep-new') {\r\n                        nameStyleNewList.push({ key, content });\r\n                    }\r\n                    /** If choose to keep both => push new entry regardless of the existing one */\r\n                    else if (verdict === 'keep-both') {\r\n                        const newKey = uuid();\r\n                        nameStyleNewList.push({ key: newKey, content });\r\n                    }\r\n                    /** => Otherwise, replace the existing entry */\r\n                    else {\r\n                        nameStyleReplaceMap[key] = { key, content };\r\n                    }\r\n                });\r\n            if (db) {\r\n                const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                for (const { key, content } of nameStyleFullList) {\r\n                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(content) });\r\n                }\r\n                await nameStylePresetTx.done;\r\n            }\r\n            setNameStylePresetList(cur => {\r\n                const newList = [\r\n                    ...cur.map(entry => {\r\n                        if (nameStyleReplaceMap[entry.key]) return nameStyleReplaceMap[entry.key];\r\n                        return entry;\r\n                    }),\r\n                    ...nameStyleNewList,\r\n                ];\r\n\r\n                return newList;\r\n            });\r\n            onCancel();\r\n        }}\r\n    >\r\n        <div className=\"import-review-title\">\r\n            <h2>{language['preset.review-title.label']}</h2>\r\n            {language['preset.review-description']}\r\n        </div>\r\n        <table className=\"import-action-table\">\r\n            <tbody>\r\n                <tr className=\"import-action-row import-header-row\">\r\n                    <th className=\"header-row\">{language['preset.review-table.current.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.new.label']}</th>\r\n                    <th className=\"header-row\">{language['preset.review-table.action.label']}</th>\r\n                </tr>\r\n                {nextNameStylePresetList.map(({ key, content }) => {\r\n                    const commonProps = { language, frameInfo };\r\n                    const currentContent = nameStylePresetMap[key]?.content;\r\n                    const verdict = decisionMap.nameStylePresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <NameStylePresetOption {...commonProps} presetContent={currentContent}>\r\n                                {currentContent.preset}\r\n                            </NameStylePresetOption>}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <NameStylePresetOption {...commonProps} presetContent={content}>\r\n                                {content.preset}\r\n                            </NameStylePresetOption>\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<NameStylePreset>> = { ...cur.nameStylePresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, nameStylePresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n                {nextLayoutPresetList.map(({ key, content }) => {\r\n                    const commonProps = {\r\n                        width: Math.round(40 * width / height),\r\n                        height: 40,\r\n                        isPendulum,\r\n                        tabIndex: -1,\r\n                        language: language,\r\n                    };\r\n                    const currentContent = layoutPresetMap[key]?.content;\r\n                    const verdict = decisionMap.layoutPresetMap[key].verdict;\r\n\r\n                    return <tr key={key} className={mergeClass('import-action-row', verdict)}>\r\n                        <td className=\"current-version\">\r\n                            {currentContent && <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: currentContent.frame,\r\n                                    topLeftFrame: currentContent.leftFrame,\r\n                                    topRightFrame: currentContent.rightFrame,\r\n                                    bottomLeftFrame: currentContent.pendulumFrame,\r\n                                    bottomRightFrame: currentContent.pendulumRightFrame,\r\n                                    effectBackground: currentContent.effectStyle?.background,\r\n                                    pendulumEffectBackground: currentContent.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={currentContent.dyeList}\r\n                                foil={currentContent.foil}\r\n                                {...commonProps}\r\n                            />}\r\n                        </td>\r\n                        <td className=\"new-version\">\r\n                            <LayoutPresetOption\r\n                                resolvedLayoutState={resolveFrameStyle({\r\n                                    frame: content.frame,\r\n                                    topLeftFrame: content.leftFrame,\r\n                                    topRightFrame: content.rightFrame,\r\n                                    bottomLeftFrame: content.pendulumFrame,\r\n                                    bottomRightFrame: content.pendulumRightFrame,\r\n                                    effectBackground: content.effectStyle?.background,\r\n                                    pendulumEffectBackground: content.pendulumStyle?.background,\r\n                                }, isPendulum)}\r\n                                dyeList={content.dyeList}\r\n                                foil={content.foil}\r\n                                {...commonProps}\r\n                            />\r\n                        </td>\r\n                        <td className=\"action-list\">\r\n                            <div className=\"action-panel\">\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-old' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-old' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-old.label'\r\n                                        : 'preset.review-table.action.discard.label'\r\n                                    ]}\r\n                                </Button>\r\n                                <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-new' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-new' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language[currentContent\r\n                                        ? 'preset.review-table.action.keep-new.label'\r\n                                        : 'preset.review-table.action.import.label'\r\n                                    ]}\r\n                                </Button>\r\n                                {currentContent && <Button\r\n                                    size=\"small\"\r\n                                    type={verdict === 'keep-both' ? 'primary' : 'default'}\r\n                                    onClick={() => setDecisionMap(cur => {\r\n                                        const nextMap: Record<string, MergeEntry<LayoutPreset>> = { ...cur.layoutPresetMap };\r\n                                        nextMap[key] = { ...nextMap[key], verdict: 'keep-both' };\r\n\r\n                                        return { ...cur, layoutPresetMap: nextMap };\r\n                                    })}\r\n                                >\r\n                                    {language['preset.review-table.action.keep-both.label']}\r\n                                </Button>}\r\n                            </div>\r\n                        </td>\r\n                    </tr>;\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    </PresetImportReviewModalContainer>;\r\n};\r\n\r\nconst PresetManagerContainer = styled(ManagerDrawer)`\r\n    .ant-drawer-body {\r\n        padding: var(--spacing);\r\n    }\r\n    .preset-list {\r\n        margin-top: var(--spacing);\r\n        padding-top: var(--spacing);\r\n        border-top: var(--bw) solid var(--main-level-1);\r\n    }\r\n    .image-preset-list {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .overlay-title {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        line-height: 1;\r\n    }\r\n    .name-style-preset-list {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .layout-preset-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n        gap: var(--spacing-sm);\r\n    }\r\n    .action-list {\r\n        margin-top: var(--spacing);\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        .import-upload-input {\r\n            display: none;\r\n        }\r\n    }\r\n    label {\r\n        display: block;\r\n        grid-column: -1 / 1;\r\n    }\r\n`;\r\n\r\nexport type PresetManager = {} & WithLanguage;\r\nexport const PresetManager = ({\r\n    language,\r\n}: PresetManager) => {\r\n    const {\r\n        setVisible,\r\n        visible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n        },\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n    })));\r\n    const { db } = useCarderDb();\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const [imagePresetList, setImagePresetList] = useGlobal('imagePresetList');\r\n    const [importData, setImportData] = useState<{ visible: boolean } & Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>>({\r\n        visible: false,\r\n        layoutPresetList: [],\r\n        nameStylePresetList: [],\r\n        imagePresetList: [],\r\n    });\r\n    const frameInfo = FrameInfoMap[frame as keyof typeof FrameInfoMap];\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const presetImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const imagePresetFormRef = useRef<ImagePresetFormRef>(null);\r\n    const directUploadId = 'preset-import-direct-upload';\r\n\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    try {\r\n                        const {\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                            imagePresetList,\r\n                        } = JSON.parse(result) as Pick<GlobalMemory, 'layoutPresetList' | 'nameStylePresetList' | 'imagePresetList'>;\r\n\r\n                        setImportData({\r\n                            visible: true,\r\n                            layoutPresetList,\r\n                            nameStylePresetList,\r\n                            imagePresetList,\r\n                        });\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        notification.error({\r\n                            description: language['error.preset-import.description'],\r\n                            message: language['error.preset-import.message'],\r\n                        });\r\n                    }\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n        setInputKey(cur => cur + 1);\r\n    };\r\n\r\n    return <PresetManagerContainer\r\n        footer={null}\r\n        width={345}\r\n        visible={visible}\r\n        title={<div className=\"overlay-title\">\r\n            <span>{language['preset.manager.label']}</span>\r\n            <CloseOutlined\r\n                onClick={() => {\r\n                    setVisible(false);\r\n                }}\r\n            />\r\n        </div>}\r\n        onClose={() => {\r\n            setVisible(false);\r\n        }}\r\n    >\r\n        <div>\r\n            {language['preset.warning.label']}\r\n        </div>\r\n        <div className=\"action-list\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const data = JSON.stringify({\r\n                        layoutPresetList: layoutPresetList,\r\n                        nameStylePresetList: nameStylePresetList,\r\n                    });\r\n                    const blob = new Blob([data], { type: 'application/json' });\r\n                    downloadBlob(\r\n                        'preset.json',\r\n                        blob,\r\n                        'application/json',\r\n                    );\r\n                }}\r\n            >\r\n                {language['generic.export.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n                <input key={`direct-file-input-${inputKey}`} ref={presetImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = presetImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                    }}\r\n                />\r\n            </Button>\r\n        </div>\r\n        <div className=\"preset-list name-style-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.name-style.label']}\r\n            </label>\r\n            {nameStylePresetList.map(({ key, content }) => {\r\n                return <NameStylePresetOption key={key}\r\n                    language={language}\r\n                    frameInfo={frameInfo}\r\n                    presetContent={content}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                            await db.delete('presetNameStyleStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                    }}\r\n                >\r\n                    {content.preset}\r\n                </NameStylePresetOption>;\r\n            })}\r\n        </div>\r\n        <div className=\"preset-list layout-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.advanced-frame.label']}\r\n            </label>\r\n            {layoutPresetList.map(({ content, key }) => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                const layoutState = {\r\n                    frame,\r\n                    topLeftFrame: leftFrame,\r\n                    topRightFrame: rightFrame,\r\n                    bottomLeftFrame: pendulumFrame,\r\n                    bottomRightFrame: pendulumRightFrame,\r\n                    effectBackground: effectStyle?.background,\r\n                    pendulumEffectBackground: pendulumStyle?.background,\r\n                };\r\n\r\n                return <LayoutPresetOption key={key}\r\n                    width={Math.round(40 * width / height)}\r\n                    height={40}\r\n                    isPendulum={isPendulum}\r\n                    resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                    tabIndex={-1}\r\n                    dyeList={dyeList}\r\n                    foil={foil}\r\n                    language={language}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.delete('presetLayoutStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n        <div className=\"preset-list image-preset-list\">\r\n            <label>\r\n                {language['preset.instruction.image.label']}\r\n                &nbsp;\r\n                <ImagePresetForm\r\n                    ref={imagePresetFormRef}\r\n                    language={language}\r\n                    onSubmit={async value => {\r\n                        const key = uuid();\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => {\r\n                            return [\r\n                                ...cur,\r\n                                {\r\n                                    key,\r\n                                    content: { ...value },\r\n                                }\r\n                            ];\r\n                        });\r\n                    }}\r\n                    onEdit={async (key, value) => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.put('presetImageStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => {\r\n                            return cur.map(entry => {\r\n                                if (entry.key === key) return {\r\n                                    key,\r\n                                    content: { ...value },\r\n                                };\r\n                                return entry;\r\n                            });\r\n                        });\r\n                    }}\r\n                />\r\n                <br />\r\n                {language['preset.instruction.image.head-up.label']}\r\n            </label>\r\n            {imagePresetList.map(({ key, content }) => {\r\n                return <ImagePresetOption key={key}\r\n                    language={language}\r\n                    imagePreset={content}\r\n                    onDelete={async () => {\r\n                        if (db) {\r\n                            const tx = db.transaction('presetImageStore', 'readwrite');\r\n                            await db.delete('presetImageStore', key);\r\n                            await tx.done;\r\n                        }\r\n                        setImagePresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                    }}\r\n                    onEdit={() => {\r\n                        imagePresetFormRef.current?.edit(key, content);\r\n                    }}\r\n                />;\r\n            })}\r\n        </div>\r\n        {importData.visible && <PresetImportReviewModal\r\n            onCancel={() => setImportData(cur => ({ ...cur, visible: false }))}\r\n            importData={importData}\r\n            frameInfo={frameInfo}\r\n            isPendulum={isPendulum}\r\n            language={language}\r\n        />}\r\n    </PresetManagerContainer>;\r\n};","import { GithubFilled, DatabaseFilled, AuditOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage, usePresetManager } from 'src/service';\r\nimport { Radio, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { FAD_BUTTON_ID, QuestionAndFeedback } from './faq';\r\nimport { PresetManager } from '../preset-manager';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const {\r\n        setVisible: setPresetManagerVisible,\r\n        visible: presetManagerVisible,\r\n    } = usePresetManager(useShallow(({\r\n        setVisible,\r\n        visible,\r\n    }) => ({\r\n        setVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <Tooltip title=\"Check the FAQ Button => Feedbacks to see if your issue is already answered.\">\r\n                    <span\r\n                        className=\"bug-report\"\r\n                        onMouseOver={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.add('js-highlight');\r\n                        }}\r\n                        onMouseOut={() => {\r\n                            document.getElementById(FAD_BUTTON_ID)?.classList.remove('js-highlight');\r\n                        }}\r\n                    >\r\n                        <div id=\"sentry-bug-report\">\r\n                            {language['contributor.bug-report.tooltip']}\r\n                        </div>\r\n                    </span>\r\n                </Tooltip>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"preset-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('preset-manager-button-label', presetManagerVisible ? 'preset-manager-active' : '')}\r\n                onClick={() => setPresetManagerVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <AuditOutlined />\r\n                    <label>{language['preset.manager.label']}</label>\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n            <PresetManager language={language} />\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Collapse, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { CopiableCode, StyledCode } from '../atom';\r\nimport { IconTypeAttributeMap, IconTypeMap, IconTypeStMap, TotalAttributeIconPresetList } from 'src/model';\r\nimport React from 'react';\r\nimport './formatting-guide.scss';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nconst SpecialPathContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fit, minmax(210px, 1fr));\r\n    .special-path-item {\r\n        display: grid;\r\n        grid-template-columns: 20px 180px;\r\n        gap: var(--spacing-xs);\r\n        align-items: center;\r\n        img {\r\n            max-width: 20px;\r\n            max-height: 20px;\r\n        }\r\n    }\r\n    + .path-container {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\ntype ImagePathPreview = { path: string, imagePath: string };\r\nconst ImagePathPreview = ({ path, imagePath }: ImagePathPreview) => {\r\n    return <div className=\"special-path-item\">\r\n        <div className=\"image\">\r\n            <img src={`${process.env.PUBLIC_URL}/asset/image/${imagePath}`} alt={path} />\r\n        </div>\r\n        <div className=\"path\">\r\n            <CopiableCode data={path}>{path}</CopiableCode>\r\n        </div>\r\n    </div>;\r\n};\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']}&nbsp;&nbsp;<Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['generic.close.label']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+Shift+1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+Shift+1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-7.label']}</h2>\r\n                {language['guide.format.section-7.content'](\r\n                    <StyledCode key=\"open-tag\">{'<i>'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'</i>'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+I'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+I'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'italic text raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'italic text preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-7-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-8.label']}</h2>\r\n                {language['guide.format.section-8.content'](\r\n                    <StyledCode key=\"open-tag\">{'<b>'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'</b>'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl+B'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘+B'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'bold text raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'bold text preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-8-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-9.label']}</h2>\r\n                {language['guide.format.section-9.content'](\r\n                    <StyledCode key=\"open-tag\">{'<img />'}</StyledCode>,\r\n                )}\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['guide.format.section-9.special-path.content']}\r\n                        </div>}\r\n                    >\r\n                        {[\r\n                            <SpecialPathContainer key=\"subfamily-st\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeMap)\r\n                                        .filter(({ isOption }) => isOption === true)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            <SpecialPathContainer key=\"subfamily-icon\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeStMap)\r\n                                        .filter(({ isOption }) => isOption === true)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            <SpecialPathContainer key=\"subfamily-attribute\">\r\n                                {[\r\n                                    ...(Object.values(IconTypeAttributeMap)\r\n                                        .flatMap(({ imagePresetSource, imagePresetPath }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })),\r\n                                ]}\r\n                            </SpecialPathContainer>,\r\n                            ...TotalAttributeIconPresetList\r\n                                .map((list, index) => {\r\n                                    return <SpecialPathContainer key={`region-${index}`} className=\"path-container\">\r\n                                        {list.map(({ imagePresetPath, imagePresetSource }) => {\r\n                                            return <ImagePathPreview key={imagePresetPath} path={imagePresetPath} imagePath={imagePresetSource} />;\r\n                                        })}\r\n                                    </SpecialPathContainer>;\r\n                                }),\r\n                        ]}\r\n                    </Panel>\r\n                </Collapse>\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'image raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'image preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-9-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import React from 'react';\r\nimport { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n    &:focus {\r\n        background-color: var(--main-level-3);\r\n    }\r\n    &:focus-visible {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    id,\r\n    tabIndex,\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n    onClick,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & {\r\n    id?: string,\r\n    tabIndex?: number,\r\n    className?: string,\r\n    onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void,\r\n}) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        id={id}\r\n        tabIndex={tabIndex}\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n        onClick={onClick}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useGlobal, useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport { DropZone } from '../atom';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nexport const CROPPER_WIDTH = 375;\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\nexport const isCropEqual = (cropL: Partial<ReactCrop.Crop>, cropR: Partial<ReactCrop.Crop>) => {\r\n    const { aspect: aspectL, height: heightL, unit: unitL, width: widthL, x: xL, y: yL } = cropL;\r\n    const { aspect: aspectR, height: heightR, unit: unitR, width: widthR, x: xR, y: yR } = cropR;\r\n    if (typeof widthL === 'number' && typeof widthR === 'number' && Math.abs(widthL - widthR) > 0.01) return false;\r\n    if (typeof heightL === 'number' && typeof heightR === 'number' && Math.abs(heightL - heightR) > 0.01) return false;\r\n    if (typeof xL === 'number' && typeof xR === 'number' && Math.abs(xL - xR) > 0.01) return false;\r\n    if (typeof yL === 'number' && typeof yR === 'number' && Math.abs(yL - yR) > 0.01) return false;\r\n    if (typeof aspectL === 'number' && typeof aspectR === 'number' && Math.abs(aspectL - aspectR) > 0.01) return false;\r\n    if (unitL !== unitR) return false;\r\n    return true;\r\n};\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / CROPPER_WIDTH;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [activeDropzone, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (fileList: FileList) => {\r\n        const targetFile = fileList[0];\r\n        if (!targetFile) return;\r\n        const maxFileSize = 4;\r\n\r\n        if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setCrossOrigin('anonymous');\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('offline');\r\n                    setInputMode('offline');\r\n                    onSourceChange('offline', reader.result);\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            reader.readAsDataURL(targetFile);\r\n        } else {\r\n            onMaxSizeExceeded(maxFileSize);\r\n        }\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0 || isLoading) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={mergeClass('card-image-cropper', className)}>\r\n            <div className=\"card-image-source-input\">\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    // setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Tooltip\r\n                                title={<div className=\"image-info\">\r\n                                    {language['image-cropper.online-tip']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                    {language['image-cropper.source.online.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                            <Tooltip\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={e => {\r\n                                if (e.target.files && e.target.files.length > 0) {\r\n                                    applyOfflineSource(e.target.files);\r\n                                } else alert(language['image-cropper.not-found-warning']);\r\n                            }}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {children}\r\n            </div>\r\n            {beforeCropper}\r\n            <div\r\n                className={mergeClass('card-cropper')}\r\n                onKeyDown={() => {\r\n                    /** Nudge selection also count as user interaction */\r\n                    setInteracted(true);\r\n                }}\r\n            >\r\n                <DropZone\r\n                    $visible={activeDropzone > 0}\r\n                    className=\"drop-zone\"\r\n                    onDragOver={e => e.preventDefault()}\r\n                    onDrop={e => {\r\n                        e.preventDefault();\r\n                        setActiveDropzone(0);\r\n                        if (e.currentTarget.classList.contains('drop-zone')) {\r\n                            // const itemList = e.dataTransfer.items;\r\n                            // for (let cnt = 0; cnt < itemList.length; cnt++) {\r\n                            //     itemList[cnt].getAsString((value) => {/** Redundant to support paste image link here */ });\r\n                            // }\r\n                            const fileList = e.dataTransfer.files;\r\n                            applyOfflineSource(fileList);\r\n                        }\r\n                    }}\r\n                >\r\n                    <label>{language['image-cropper.drop.tooltip']}</label>\r\n                </DropZone>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {((!hasImage || (error && crossorigin === undefined)) && !isLoading) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        if (!receivingCanvas) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            pendingCrop.current = {\r\n                                source: '',\r\n                                crop: null,\r\n                            };\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop || isLoading) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop || isLoading) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});","\r\nimport { Input } from 'antd';\r\nimport { useColorPicker } from 'src/service';\r\nimport { getContrastColor } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        gap: 3px; // Alignment\r\n        padding-left: 3px; // Alignment\r\n        input {\r\n            width: 58px; // Alignment\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\n\r\nexport type InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nexport const InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <ColorBlock $static style={{ backgroundColor: color.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};","import { Input } from 'antd';\r\nimport { CustomPicker, InjectedColorProps } from 'react-color';\r\nimport { Saturation } from 'react-color/lib/components/common';\r\nimport { UseColorPicker, useColorPicker } from 'src/service';\r\nimport { getContrastColor, rgbToHex } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { ColorBlock } from '../atom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport { IconButton } from '../icon-button';\r\n\r\nconst SaturationBoardContainer = styled.div`\r\n    position: relative;\r\n    border-radius: var(--br);\r\n    > div,\r\n    .saturation-white,\r\n    .saturation-black {\r\n        border-radius: var(--br);\r\n    }\r\n`;\r\n\r\ntype UnlinkedSaturationBoard = InjectedColorProps;\r\nconst UnlinkedSaturationBoard = ({\r\n    onChange,\r\n    ...props\r\n}: UnlinkedSaturationBoard) => {\r\n    return <SaturationBoardContainer>\r\n        <Saturation\r\n            {...props}\r\n            onChange={color => {\r\n                onChange?.(color);\r\n            }}\r\n        />\r\n    </SaturationBoardContainer>;\r\n};\r\nconst SaturationBoard = CustomPicker(UnlinkedSaturationBoard);\r\n\r\nconst HorizontalSketchColorList = [\r\n    { hex: '#B80000', rgb: [184, 0, 0] },\r\n    { hex: '#EB9694', rgb: [235, 150, 148] },\r\n    { hex: '#DB3E00', rgb: [219, 62, 0] },\r\n    { hex: '#FAD0C3', rgb: [250, 208, 195] },\r\n    { hex: '#FCCB00', rgb: [252, 203, 0] },\r\n    { hex: '#FEF3BD', rgb: [254, 243, 189] },\r\n    { hex: '#008B02', rgb: [0, 139, 2] },\r\n    { hex: '#C1E1C5', rgb: [193, 225, 197] },\r\n    { hex: '#006B76', rgb: [0, 107, 118] },\r\n    { hex: '#BEDADC', rgb: [190, 218, 220] },\r\n    { hex: '#1273DE', rgb: [18, 115, 222] },\r\n    { hex: '#C4DEF6', rgb: [196, 222, 246] },\r\n    { hex: '#004DCF', rgb: [0, 77, 207] },\r\n    { hex: '#BED3F3', rgb: [190, 211, 243] },\r\n    { hex: '#5300EB', rgb: [83, 0, 235] },\r\n    { hex: '#D4C4FB', rgb: [212, 196, 251] },\r\n];\r\n\r\nconst HorizontalSketchPickerContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 3.5rem 5rem 4rem max-content 1fr;\r\n    gap: var(--spacing-sm);\r\n    .color-input {\r\n        .color-state {\r\n            display: flex;\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n        ${ColorBlock} {\r\n            display: inline-block;\r\n            flex: 1;\r\n            border: var(--bw) solid var(--sub-level-2);\r\n            height: 18px;\r\n        }\r\n    }\r\n    .color-list {\r\n        display: grid;\r\n        grid-template-columns: repeat(${HorizontalSketchColorList.length / 4}, max-content);\r\n        border-radius: var(--br);\r\n        overflow: hidden;\r\n        ${ColorBlock} {\r\n            height: 16px;\r\n            width: 16px;\r\n            box-shadow: none;\r\n            border-radius: 0;\r\n        }\r\n    }\r\n    .rgb-input {\r\n        display: grid;\r\n        grid-template-columns: 1rem 1fr;\r\n        column-gap: var(--spacing-xs);\r\n        font-size: var(--fs-sm);\r\n        input {\r\n            line-height: 1;\r\n            font-size: var(--fs-sm);\r\n        }\r\n        + .rgb-input {\r\n            margin-top: var(--spacing-xxs);\r\n        }\r\n    }\r\n`;\r\nexport type HorizontalSketchPicker = {\r\n    children?: React.ReactNode,\r\n} & UseColorPicker;\r\nexport const HorizontalSketchPicker = ({\r\n    children,\r\n    onChange,\r\n    value,\r\n}: HorizontalSketchPicker) => {\r\n    const { color, inputText, setColor } = useColorPicker({ value, onChange });\r\n    const noColor = inputText === '';\r\n\r\n    return <HorizontalSketchPickerContainer className=\"horizontal-sketch-picker\">\r\n        <div className=\"input-label\">\r\n            {children}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-state\">\r\n                <ColorBlock\r\n                    $empty={noColor}\r\n                    style={noColor ? {} : { backgroundColor: color.hex }}\r\n                />\r\n                <IconButton\r\n                    size=\"sm\"\r\n                    Icon={CloseOutlined}\r\n                    onClick={() => {\r\n                        onChange?.('');\r\n                    }}\r\n                />\r\n            </div>\r\n            <Input\r\n                size=\"small\"\r\n                value={inputText}\r\n                onChange={e => {\r\n                    setColor(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n        <div className=\"rgb-input-list\">\r\n            {['R', 'G', 'B'].map((entry, index) => {\r\n                return <div key={entry} className=\"rgb-input\">\r\n                    <span>{entry}</span>\r\n                    <Input size=\"small\" value={noColor ? '' : color.rgb[index]} onChange={e => {\r\n                        const nextColor = [...color.rgb];\r\n                        nextColor[index] = parseInt(e.target.value);\r\n\r\n                        setColor(rgbToHex(nextColor));\r\n                    }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-list\">\r\n            {HorizontalSketchColorList.map(({ hex, rgb }) => {\r\n                const dotColor = getContrastColor(rgb);\r\n\r\n                return <ColorBlock key={hex}\r\n                    className=\"color-block\"\r\n                    title={hex}\r\n                    style={{ backgroundColor: hex }}\r\n                    onClick={() => onChange?.(hex)}\r\n                >\r\n                    {color.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </ColorBlock>;\r\n            })}\r\n        </div>\r\n        <SaturationBoard color={color.hex} onChange={({ hex }) => setColor(hex)} />\r\n    </HorizontalSketchPickerContainer>;\r\n};","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst LINK_MARKER_HALF_SIZE = 13;\r\nexport const LINK_MARKER_PICKER_WIDTH = 3 * 2 * LINK_MARKER_HALF_SIZE + 5 * 2; // 5 = --spacing-xs\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: ${LINK_MARKER_HALF_SIZE}px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 1;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkerPicker = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkerPicker = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkerPicker) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-picker', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ResolutionLabel, StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        <ResolutionLabel width={width} height={height} warning={true} />\r\n                    </Popover>\r\n                    : <ResolutionLabel width={width} height={height} />}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdownLabel = styled.div`\r\n    color: var(--color);\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    padding: 0 var(--spacing);\r\n    padding-bottom: var(--spacing-xs);\r\n    line-height: 1;\r\n    cursor: default;\r\n    &:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './card-layout-preview';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './image-cropper';\r\nexport * from './inline-color-picker';\r\nexport * from './inline-sketch-picker';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './link-marker';\r\nexport * from './loading';\r\nexport * from './preset-manager';\r\nexport * from './preset-option';\r\nexport * from './setting';\r\nexport * from './setting-panel';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl+S / ⌘+S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { Copiable, CopiableOverlayStyle, InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    ${CopiableOverlayStyle}\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    return <Copiable\r\n        disabled={disabled}\r\n        data={data}\r\n        container={StyledCardDataCopyButton}\r\n        overlay={withText\r\n            ? <>Copied&nbsp;<CheckOutlined /></>\r\n            : <CheckOutlined />}\r\n    >{children}</Copiable>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay export-modal\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={false}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        placement=\"bottom\"\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['image-cropper.offline-warning']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={window.location.href}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><LinkOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.share-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl+D / ⌘+D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['generic.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown\r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['generic.import.label']}\r\n            className=\"global-overlay import-modal\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl+E / ⌘+E</div>\r\n                    <div>Ctrl+G / ⌘+G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['generic.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n    OtherFinishTypeMap,\r\n    ExtraAttributeList,\r\n    RegionMap,\r\n    AUTO_FONT,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getOtherFinishList = (dictionary: Record<string, string>) => Object.values(OtherFinishTypeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => [\r\n    { label: dictionary['input.name-style.type.auto.label'], value: AUTO_FONT },\r\n    ...Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n        label: dictionary[labelKey],\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (region: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${RegionMap[region]?.fileKey}-${name.toLowerCase()}.png`}\r\n                />\r\n            </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getExtraAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => ExtraAttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                'Ø',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import styled from 'styled-components';\r\nimport { StyledDropdown } from 'src/component';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPresetContainer = styled(StyledDropdown.Container)`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm);\r\n    max-width: 507px; // Alignment\r\n    .preset-warning {\r\n        flex: 0 0 100%;\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .panel-action {\r\n        flex: 0 0 100%;\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider, SingleSliderContainer } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <SingleSliderContainer className=\"single-slider\">\r\n                <span>{language['input.name-style.slider.x-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n                <span>{language['input.name-style.slider.y-offset.label']}:</span>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </SingleSliderContainer>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    width: 245px; // Exact same width with text color picker, for alignment\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        font-size: var(--fs-sm);\r\n        text-align: left;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate?: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span\r\n                key=\"color-navigate\"\r\n                className={!!onColorTabNavigate ? 'navigate-button' : ''}\r\n                onClick={onColorTabNavigate}\r\n            >\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color?: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Button, Checkbox, Empty, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton, StyledPatternOption, NameStylePresetOption } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPresetContainer,\r\n} from './style-picker.styled';\r\nimport { useCarderDb, useGlobal, useLanguage, usePresetManager, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport { v4 as uuid } from 'uuid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [nameStylePresetList, setNameStylePresetList] = useGlobal('nameStylePresetList');\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const { db } = useCarderDb();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && font !== 'Auto'}\r\n                            className=\"picker-dropdown font-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <div className=\"save-preset-button-group\">\r\n                        <Button\r\n                            size=\"small\"\r\n                            className=\"picker-dropdown preset-picker-dropdown\"\r\n                            type=\"primary\"\r\n                            onClick={async () => {\r\n                                const key = uuid();\r\n                                if (db) {\r\n                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                    await tx.done;\r\n                                }\r\n                                setNameStylePresetList(cur => {\r\n                                    return [\r\n                                        ...cur,\r\n                                        {\r\n                                            key,\r\n                                            content: { ...value },\r\n                                        }\r\n                                    ];\r\n                                });\r\n                            }}\r\n                        >\r\n                            {language['input.name-style.preset.label']}\r\n                        </Button>\r\n                        <Popover key=\"preset-picker\"\r\n                            trigger={['click']}\r\n                            overlayClassName=\"global-input-overlay global-style-picker-overlay low-index\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <StyledPresetContainer onClick={e => e.stopPropagation()}>\r\n                                    {nameStylePresetList.length > 0 && <div className=\"preset-warning\">\r\n                                        {language['preset.warning.label']}\r\n                                        &nbsp;\r\n                                        <span className=\"open-preset-manager\"\r\n                                            onClick={() => setVisible(true)}\r\n                                        >{language['preset.manager.check.label']}</span>\r\n                                    </div>}\r\n                                    {nameStylePresetList.length === 0 && <Empty\r\n                                        description={language['generic.empty.label']}\r\n                                    />}\r\n                                    {nameStylePresetList.map(({ key, content }) => {\r\n                                        return <NameStylePresetOption key={key}\r\n                                            language={language}\r\n                                            frameInfo={frameInfo}\r\n                                            presetContent={content}\r\n                                            onActive={() => {\r\n                                                setValue({ ...content });\r\n                                                requestUpdateCustomStyle();\r\n                                            }}\r\n                                            onOverwrite={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.put('presetNameStyleStore', { key, content: JSON.stringify(value) });\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => {\r\n                                                    return cur.map(entry => {\r\n                                                        if (entry.key === key) return {\r\n                                                            key,\r\n                                                            content: { ...value },\r\n                                                        };\r\n                                                        return entry;\r\n                                                    });\r\n                                                });\r\n                                            }}\r\n                                            onDelete={async () => {\r\n                                                if (db) {\r\n                                                    const tx = db.transaction('presetNameStyleStore', 'readwrite');\r\n                                                    await db.delete('presetNameStyleStore', key);\r\n                                                    await tx.done;\r\n                                                }\r\n                                                setNameStylePresetList(cur => cur.filter(entry => entry.key !== key));\r\n                                            }}\r\n                                        >\r\n                                            {content.preset}\r\n                                        </NameStylePresetOption>;\r\n                                    })}\r\n                                </StyledPresetContainer>\r\n                            </div>}\r\n                            placement=\"bottomRight\"\r\n                        >\r\n                            <div className=\"custom-preset-button\">\r\n                                <CaretDownOutlined />\r\n                            </div>\r\n                        </Popover>\r\n                    </div>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrainRef = {\r\n    changeFrame: (frameValue: number | string) => void,\r\n};\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string, linkRating: string) => void,\r\n};\r\nexport const FrameTrain = forwardRef<FrameTrainRef, FrameTrain>(({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}, ref) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n                linkRating,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : (atk === '' ? '0' : atk);\r\n            const nextDef = willRemoveStat ? '' : (def === '' ? '0' : def);\r\n            const nextLinkRating = willRemoveStat ? '' : linkRating;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            onStatChange(nextAtk, nextDef, nextLinkRating);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n                linkRating: nextLinkRating,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeFrame,\r\n    }));\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n});","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip key={value} title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: var(--cropper-width);\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain, SolidLabel } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .art-frame {\r\n        span {\r\n            padding: 0;\r\n        }\r\n    }\r\n    div.ant-slider {\r\n        .ant-slider-handle {\r\n            height: 19px;\r\n            top: 8px;\r\n            border-radius: 0;\r\n            width: 10px;\r\n        }\r\n        .ant-slider-step,\r\n        .ant-slider-track,\r\n        .ant-slider-rail {\r\n            height: 10px;\r\n        }\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        .ant-slider {\r\n            padding-top: 8px;\r\n        }\r\n    }\r\n    .background-label {\r\n        cursor: pointer;\r\n        &:hover {\r\n            .background-preview {\r\n                box-shadow: 0 0 2px 0 #2a2a2a;\r\n            }\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        text-align: center;\r\n        user-select: none;\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .layout-picker-panel {\r\n            margin-top: var(--spacing);\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <Checkbox\r\n                    className=\"art-frame\"\r\n                    onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                    checked={opacity.boundless}\r\n                >\r\n                    &nbsp;{language['input.opacity.boundless.label']}\r\n                </Checkbox>\r\n            </SolidLabel>\r\n        </Tooltip>\r\n        <Popover\r\n            visible={backgroundInputVisible}\r\n            destroyTooltipOnHide={false}\r\n            trigger={['click']}\r\n            onVisibleChange={setBackgroundInputVisible}\r\n            overlayClassName={[\r\n                'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                backgroundInputVisible ? 'picker-visible' : '',\r\n                backgroundInputHidden ? 'picker-hidden' : '',\r\n            ].join(' ')}\r\n            content={<div className=\"overlay-event-absorber\">\r\n                <StyledBaseFillPickerContainer\r\n                    className={[\r\n                        'custom-style-picker',\r\n                        noBackground ? 'overlay-no-background-image' : ''\r\n                    ].join(' ')}\r\n                >\r\n                    <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                        <Checkbox\r\n                            checked={hasBackground}\r\n                            onChange={e => {\r\n                                changeHasBackground(e);\r\n                            }}\r\n                        >{language['input.background.toggle-label']}</Checkbox>\r\n                        <br />\r\n                        <i>{language['input.background.description']}</i>\r\n                    </h3>\r\n                    <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                        <BackgroundInputGroup\r\n                            ref={backgroundInputRef}\r\n                            receivingCanvas={receivingCanvas}\r\n                            onSourceLoaded={onSourceLoaded}\r\n                            onTainted={onTainted}\r\n                            onCropChange={onCropChange}\r\n                            backgroundColor={opacity.baseFill}\r\n                        >\r\n                            <div className=\"layout-picker-panel\">\r\n                                <div className=\"layout-picker-subpanel color-section\">\r\n                                    <h2>{language['input.background-color.label']}</h2>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={opacity.baseFill}\r\n                                        onChangeComplete={color => {\r\n                                            setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                    <h2>{language['input.background-type.label']}</h2>\r\n                                    <RadioTrain\r\n                                        className=\"background-type-picker\"\r\n                                        onChange={changeBackgroundType}\r\n                                        optionList={getBackgroundTypeList({\r\n                                            fit: language['input.background-type.fit.label'],\r\n                                            full: language['input.background-type.full.label'],\r\n                                            frame: language['input.background-type.frame.label'],\r\n                                        })}\r\n                                        value={backgroundType}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </BackgroundInputGroup>\r\n                    </div>\r\n                </StyledBaseFillPickerContainer>\r\n            </div>}\r\n            placement=\"bottom\"\r\n        >\r\n            <SolidLabel className=\"background-label\">\r\n                <div\r\n                    className=\"background-preview\"\r\n                    style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                >\r\n                    {hasBackground\r\n                        ? background || backgroundData\r\n                            ? <img\r\n                                className=\"background-image-preview\"\r\n                                src={backgroundSource === 'online'\r\n                                    ? background\r\n                                    : backgroundData}\r\n                                alt=\"Background\"\r\n                            />\r\n                            : null\r\n                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                </div>\r\n                {language['input.background.label']}\r\n            </SolidLabel>\r\n        </Popover>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <SolidLabel className=\"slider-label\">\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </SolidLabel>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { IconButton, RadioTrain } from 'src/component';\r\nimport { useCard, useSetting, WithLanguage } from 'src/service';\r\nimport { DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { useMemo } from 'react';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getAttributeList, getExtraAttributeList } from '../const';\r\nimport { RegionMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst AttributeRegionTrain = styled.div`\r\n    align-self: flex-end;\r\n    position: relative;\r\n    min-height: 6px; // Alignment\r\n    .attribute-region-picker {\r\n        position: absolute;\r\n        right: 0;\r\n        top: calc(var(--spacing-xxs) * -1);\r\n        z-index: 1;\r\n    }\r\n    &.container-block .attribute-region-picker {\r\n        position: relative;\r\n        right: 0;\r\n        top: 0;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        font-size: var(--fs-sm);\r\n        height: unset;\r\n        line-height: 1.25;\r\n    }\r\n`;\r\n\r\nexport type AttributeInputGroup = {\r\n} & WithLanguage;\r\nexport const AttributeInputGroup = ({\r\n    language,\r\n}: AttributeInputGroup) => {\r\n    const {\r\n        format,\r\n        region,\r\n        attribute,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            region,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        format,\r\n        region,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n    })));\r\n    const { setting, updateSetting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, showExtraAttribute } = setting;\r\n\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeRegion = useMemo(() => getUpdater('region'), [getUpdater]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(region, language, showCreativeOption), [region, language, showCreativeOption]);\r\n    const extraAttributeList = useMemo(() => getExtraAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    return <>\r\n        <RadioTrain\r\n            className=\"fill-input-train span-input-train attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={attributeList}\r\n            suffix={!showExtraAttribute && showExtraDecorativeOption\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: true })}\r\n                    Icon={DoubleRightOutlined}\r\n                    tooltipProps={{ overlay: language['button.more.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            <span>{language['input.attribute.label']}</span>\r\n        </RadioTrain>\r\n        {showExtraDecorativeOption && <AttributeRegionTrain\r\n            className={mergeClass('attribute-region-container', showExtraAttribute ? 'container-block' : 'container-float')}\r\n        >\r\n            <RadioTrain\r\n                className=\"attribute-region-picker\"\r\n                optionList={Object\r\n                    .values(RegionMap)\r\n                    .map(({ key }) => ({\r\n                        value: key,\r\n                        label: key.toUpperCase(),\r\n                    }))\r\n                }\r\n                value={region}\r\n                onChange={changeRegion}\r\n            />\r\n        </AttributeRegionTrain>}\r\n        {(showExtraDecorativeOption && showExtraAttribute) && <RadioTrain\r\n            className=\"fill-input-train extra-attribute-input\"\r\n            value={attribute}\r\n            onChange={changeAttribute}\r\n            optionList={extraAttributeList}\r\n            suffix={showExtraDecorativeOption && showExtraAttribute\r\n                ? <IconButton\r\n                    onClick={() => updateSetting({ showExtraAttribute: false })}\r\n                    Icon={DoubleLeftOutlined}\r\n                    tooltipProps={{ overlay: language['button.less.label'] }}\r\n                />\r\n                : null}\r\n        >\r\n            &nbsp;\r\n        </RadioTrain>}\r\n    </>;\r\n};","import { Button, Checkbox, Modal } from 'antd';\r\nimport { forwardRef, useImperativeHandle, useMemo, useState } from 'react';\r\nimport {\r\n    IconTypeAttributeList,\r\n    IconTypeInfo,\r\n    IconTypeList,\r\n    IconTypeStList,\r\n    MAX_STAR_LENGTH,\r\n    NORMAL_STAR_LENGTH,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { useCard, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CloseCircleOutlined, DoubleLeftOutlined, DoubleRightOutlined } from '@ant-design/icons';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { mergeClass, padRight } from 'src/util';\r\n\r\nconst IconDropdownOverlay = styled.div`\r\n    position: absolute;\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: var(--br-lg);\r\n    cursor: not-allowed;\r\n`;\r\nexport const StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    .anticon-close-circle {\r\n        font-size: var(--fs-lg);\r\n    }\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nexport const IconDropdownContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    background-color: var(--sub-level-1);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    overflow: hidden;\r\n    position: relative;\r\n    .container-group {\r\n        box-shadow: none;\r\n        border: none;\r\n        border-radius: 0;\r\n    }\r\n    &.selector-disabled {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n    }\r\n`;\r\nexport type StarTypeSelector = {\r\n    disabled?: boolean,\r\n    className?: string,\r\n    activeCardIcon: string,\r\n    onChange: (value: string) => void,\r\n    onRemove?: () => void,\r\n    showMixableOnly?: boolean,\r\n    showRemove?: boolean,\r\n} & WithLanguage;\r\nexport const StarTypeSelector = ({\r\n    disabled = false,\r\n    className,\r\n    language,\r\n    activeCardIcon,\r\n    showMixableOnly = false,\r\n    showRemove = false,\r\n    onChange,\r\n    onRemove,\r\n}: StarTypeSelector) => {\r\n    const filterFunction = showMixableOnly ? (entry: IconTypeInfo) => entry.isMixable : () => true;\r\n\r\n    return <IconDropdownContainer\r\n        className={mergeClass('icon-dropdown-container overlay-event-absorber', disabled ? 'selector-disabled' : '', className)}\r\n    >\r\n        {disabled && <IconDropdownOverlay className=\"container-disable-overlay\" />}\r\n        <StyledIconDropdown className=\"container-group container-star\">\r\n            {showRemove && <StyledDropdown.Option\r\n                onClick={() => onRemove?.()}\r\n            >\r\n                <CloseCircleOutlined />&nbsp;{language['input.icon-type.remove.label']}\r\n            </StyledDropdown.Option>}\r\n            {IconTypeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-attribute\">\r\n            {IconTypeAttributeList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n        <StyledIconDropdown className=\"container-group container-icon\">\r\n            {IconTypeStList.filter(filterFunction).map(({ fullLabelKey, value, icon }) => {\r\n                return <StyledDropdown.Option key={value}\r\n                    className={value === activeCardIcon ? 'menu-active' : ''}\r\n                    onClick={() => onChange(value)}\r\n                >\r\n                    {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                </StyledDropdown.Option>;\r\n            })}\r\n        </StyledIconDropdown>\r\n    </IconDropdownContainer>;\r\n};\r\n\r\nconst StarListSelectPanel = styled.div`\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListControlPanel = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-bottom: var(--spacing);\r\n`;\r\nconst StarListContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: repeat(13, 2rem);\r\n    gap: var(--spacing-xs);\r\n    align-items: center;\r\n    text-align: center;\r\n    margin-bottom: var(--spacing-sm);\r\n    line-height: 0;\r\n    .star-value {\r\n        display: inline-flex;\r\n        height: 2rem;\r\n        width: 2rem;;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: var(--main-level-1);\r\n        border-radius: var(--br-lg);\r\n        margin-top: var(--spacing-xs);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .anticon-close-circle {\r\n            font-size: var(--fs-lg)\r\n        }\r\n    }\r\n    .icon-image {\r\n        max-width: 1.5rem; // Alignment\r\n        max-height: 1.5rem;; // Alignment\r\n    }\r\n    .entry-active {\r\n        .star-value {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .entry-disable {\r\n        filter: opacity(0.65) grayscale(0.85);\r\n        * {\r\n            cursor: not-allowed;\r\n        }\r\n    }\r\n    :not(.entry-disable) .star-value:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n`;\r\n\r\nexport type StarPickerRef = {\r\n    changeStatus: (status: 'open' | 'close' | 'toggle') => void,\r\n};\r\nexport type StarPicker = {\r\n\r\n} & WithLanguage;\r\nexport const StarPicker = forwardRef<StarPickerRef, StarPicker>(({\r\n    language,\r\n}, ref) => {\r\n    const {\r\n        starList,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            starList,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        starList,\r\n        setCard,\r\n    })));\r\n    const [visible, setVisible] = useState(false);\r\n    const changeStarList = useMemo(() => (transformer: string[] | ((prev: string[]) => string[])) => {\r\n        setCard(card => {\r\n            const nextStarList = Array.isArray(transformer) ? transformer : transformer(card.starList);\r\n\r\n            return {\r\n                ...card,\r\n                starList: nextStarList,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n    const [{\r\n        slotList,\r\n        use12,\r\n    }, setSlot] = useState(() => {\r\n        const slotList: { slot: string, index: number, disabled: boolean }[] = [];\r\n        const use12 = starList.length <= NORMAL_STAR_LENGTH ? true : false;\r\n        for (let cnt = 0; cnt < MAX_STAR_LENGTH; cnt++) {\r\n            slotList.push({ slot: `slot-${cnt}`, index: cnt, disabled: false });\r\n        }\r\n        if (use12) slotList[MAX_STAR_LENGTH - 1].disabled = true;\r\n\r\n        return {\r\n            slotList,\r\n            use12,\r\n        };\r\n    });\r\n    const [activeInformation, setActiveInformation] = useState({\r\n        activeList: [] as number[],\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        changeStatus: status => {\r\n            if (status === 'open') {\r\n                setVisible(true);\r\n            } else if (status === 'close') {\r\n                setVisible(false);\r\n            } else if (status === 'toggle') {\r\n                setVisible(cur => !cur);\r\n            }\r\n            setActiveInformation({ activeList: [] });\r\n        }\r\n    }));\r\n\r\n    const {\r\n        activeList\r\n    } = activeInformation;\r\n    return <Modal\r\n        className=\"global-overlay global-no-close\"\r\n        visible={visible}\r\n        width={506}\r\n        onCancel={() => setVisible(false)}\r\n        cancelText={language['manager.template.button.cancel.label']}\r\n        okButtonProps={{\r\n            style: { display: 'none' },\r\n        }}\r\n    >\r\n        <StarListSelectPanel className=\"star-list-control-panel\">\r\n            <Checkbox\r\n                checked={use12}\r\n                onChange={e => {\r\n                    if (e.target.checked) {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: true, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: true };\r\n                        });\r\n                        changeStarList(currentStarList => currentStarList.slice(0, NORMAL_STAR_LENGTH));\r\n                        setActiveInformation(({ activeList }) => ({ activeList: activeList.filter(entry => entry !== MAX_STAR_LENGTH - 1) }));\r\n                    } else {\r\n                        setSlot(({ slotList }) => {\r\n                            const nextSlotList: typeof slotList = [\r\n                                ...slotList.slice(0, NORMAL_STAR_LENGTH),\r\n                                { disabled: false, index: MAX_STAR_LENGTH - 1, slot: `slot-${MAX_STAR_LENGTH - 1}` }\r\n                            ];\r\n\r\n                            return { slotList: nextSlotList, use12: false };\r\n                        });\r\n                        changeStarList(currentStarList => padRight(currentStarList, MAX_STAR_LENGTH));\r\n                    }\r\n                }}\r\n            >{language['input.icon-type.slot.use-12.label']}</Checkbox>\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation(cur => {\r\n                    const nextActiveList = slotList\r\n                        .filter(entry => !cur.activeList.includes(entry.index) && !entry.disabled)\r\n                        .map(entry => entry.index);\r\n\r\n                    return { activeList: nextActiveList };\r\n                });\r\n            }}>\r\n                {language['input.icon-type.slot.revert.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: slotList.filter(entry => !entry.disabled).map(entry => entry.index) });\r\n            }}>\r\n                {language['input.icon-type.slot.select-all.label']}\r\n            </Button>\r\n            &nbsp;\r\n            <Button size=\"small\" onClick={() => {\r\n                setActiveInformation({ activeList: [] });\r\n            }}>\r\n                {language['input.icon-type.slot.deselect-all.label']}\r\n            </Button>\r\n        </StarListSelectPanel>\r\n        <StarListContainer className=\"star-list-container\">\r\n            {slotList.map(({ slot, index, disabled }) => {\r\n                const slotValue = starList[index];\r\n                const starInfo = TotalIconTypeMap[slotValue ?? ''];\r\n                const active = activeList.includes(index);\r\n\r\n                return <div key={slot}\r\n                    className={mergeClass(\r\n                        'star-list-entry',\r\n                        active ? 'entry-active' : '',\r\n                        disabled ? 'entry-disable' : '',\r\n                    )}\r\n                >\r\n                    <div className=\"checkbox-container\">\r\n                        <Checkbox\r\n                            disabled={disabled}\r\n                            checked={active}\r\n                            onChange={e => {\r\n                                if (disabled) return;\r\n                                const willChecked = e.target.checked;\r\n                                if (willChecked) {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = [...cur.activeList, index];\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                } else {\r\n                                    setActiveInformation(cur => {\r\n                                        const nextActiveList = cur.activeList.filter(entry => entry !== index);\r\n\r\n                                        return { activeList: nextActiveList };\r\n                                    });\r\n                                }\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div\r\n                        className=\"star-value\"\r\n                        onClick={() => {\r\n                            if (disabled) return;\r\n                            setActiveInformation({ activeList: [index] });\r\n                        }}\r\n                    >\r\n                        {!starInfo ? <CloseCircleOutlined /> : starInfo.icon}\r\n                    </div>\r\n                </div>;\r\n            })}\r\n        </StarListContainer>\r\n        <StarListControlPanel>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return [...currentStarList.slice(1, currentStarList.length), ''];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                <DoubleLeftOutlined />&nbsp;{language['input.icon-type.slot.shift-left.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => {\r\n                    changeStarList(currentStarList => {\r\n                        return ['', ...currentStarList.slice(0, currentStarList.length - 1)];\r\n                    });\r\n                    setActiveInformation({ activeList: [] });\r\n                }}\r\n            >\r\n                {language['input.icon-type.slot.shift-right.label']}&nbsp;<DoubleRightOutlined />\r\n            </Button>\r\n        </StarListControlPanel>\r\n        <StarTypeSelector\r\n            disabled={activeList.length === 0}\r\n            language={language}\r\n            activeCardIcon={activeList.length > 1 ? '' : starList[activeList[0]]}\r\n            showMixableOnly={true}\r\n            showRemove={true}\r\n            onRemove={() => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return '';\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n            onChange={value => {\r\n                changeStarList(currentStarList => {\r\n                    return slotList.filter(entry => !entry.disabled).map((_, index) => {\r\n                        if (activeList.includes(index)) return value;\r\n                        return currentStarList[index];\r\n                    });\r\n                });\r\n            }}\r\n        />\r\n    </Modal>;\r\n});","import { Button, Input, Popover } from 'antd';\r\nimport { PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage, useSetting, WithLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeAttributeList, IconTypeList, IconTypeStList, TotalIconTypeMap } from 'src/model';\r\nimport { StarPicker, StarPickerRef, StarTypeSelector, StyledIconDropdown } from '../star-picker';\r\n\r\nconst TypeWithIconContainer = styled.div`\r\n    .icon-image {\r\n        width: 26px;\r\n        height: 26px;\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\nconst PopoverButtonInCardIconInput = styled(PopoverButton)`\r\n    margin-left: var(--spacing-sm);\r\n`;\r\nconst CustomStarContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    .custom-star-preview {\r\n        display: inline-flex;\r\n        line-height: 0;\r\n        align-items: center;\r\n        background-color: var(--main-level-1);\r\n        padding: var(--spacing-xs);\r\n        border-radius: var(--br);\r\n        .star-preview-entry {\r\n            margin-right: var(--spacing-xs);\r\n            .icon-image {\r\n                max-width: 22px; // Alignment\r\n                max-height: 22px; // Alignment\r\n            }\r\n            .anticon-close-circle {\r\n                font-size: var(--fs-xl);\r\n            }\r\n            &:last-child {\r\n                margin-right: 0;\r\n            }\r\n        }\r\n    }\r\n    .custom-star-content {\r\n        display: inline-flex;\r\n        flex-wrap: wrap;\r\n        align-items: center;\r\n        gap: var(--spacing-sm);\r\n        margin-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\ntype CardIconAlignmentPicker = {\r\n    value: string,\r\n    onChange: (value: string) => void,\r\n} & WithLanguage;\r\nconst CardIconAlignmentPicker = ({\r\n    language,\r\n    value,\r\n    onChange,\r\n}: CardIconAlignmentPicker) => {\r\n    return <RadioTrain\r\n        value={value}\r\n        onChange={onChange}\r\n        optionList={[\r\n            {\r\n                value: 'auto',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                label: <CloseCircleOutlined />,\r\n            },\r\n            {\r\n                value: 'left',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                label: <AlignLeftOutlined />,\r\n            },\r\n            {\r\n                value: 'center',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                label: <AlignCenterOutlined />,\r\n            },\r\n            {\r\n                value: 'right',\r\n                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                label: <AlignRightOutlined />,\r\n            },\r\n        ]}\r\n    />;\r\n};\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starList,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starList,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n    const starPickerRef = useRef<StarPickerRef>(null);\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? TotalIconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : TotalIconTypeMap[cardIcon];\r\n    const {\r\n        labelKey,\r\n        icon,\r\n        showIcon,\r\n        value: iconType,\r\n    } = iconTypeData ?? TotalIconTypeMap['level'];\r\n    const iconDropdownText = typeof labelKey === 'string'\r\n        ? language[labelKey]\r\n        : labelKey({ language });\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <TypeWithIconContainer>{showIcon ? icon : null} {iconDropdownText} <CaretDownOutlined /></TypeWithIconContainer>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay\"\r\n        content={<StarTypeSelector\r\n            language={language}\r\n            activeCardIcon={cardIcon}\r\n            onChange={value => {\r\n                changeCardIcon(value);\r\n                if (value === 'custom') starPickerRef.current?.changeStatus('open');\r\n            }}\r\n        />}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return <>\r\n        <StarPicker ref={starPickerRef} language={language} />\r\n        {cardIcon === 'auto' && autoIconType === 'none'\r\n            ? showCreativeOption\r\n                ? <>\r\n                    <RadioTrain\r\n                        className=\"fill-input-train\"\r\n                        value={cardIcon}\r\n                        onChange={changeCardIcon}\r\n                        optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                            return {\r\n                                label: icon ?? <CloseCircleOutlined />,\r\n                                value,\r\n                                tooltipProps: {\r\n                                    title: language[fullLabelKey],\r\n                                },\r\n                            };\r\n                        })}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </RadioTrain>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-attribute\">\r\n                                {IconTypeAttributeList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.label']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <Popover\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledIconDropdown className=\"container-group container-icon\">\r\n                                {IconTypeStList.map(({ fullLabelKey, value, icon }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={value === cardIcon ? 'menu-active' : ''}\r\n                                        onClick={() => changeCardIcon(value)}\r\n                                    >\r\n                                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledIconDropdown>\r\n                        </div>}\r\n                    >\r\n                        <PopoverButtonInCardIconInput\r\n                            $softMode={reduceColorMotion}\r\n                            className={showCreativeOption ? '' : 'disabled'}\r\n                        >\r\n                            {language['input.attribute.spell']}&nbsp;/&nbsp;{language['input.attribute.trap']}\r\n                        </PopoverButtonInCardIconInput>\r\n                    </Popover>\r\n                    <PopoverButtonInCardIconInput\r\n                        $softMode={reduceColorMotion}\r\n                        className={showCreativeOption ? '' : 'disabled'}\r\n                        onClick={() => {\r\n                            changeCardIcon('custom');\r\n                            starPickerRef.current?.changeStatus('open');\r\n                        }}\r\n                    >\r\n                        {language['input.icon-type.custom.label']}\r\n                    </PopoverButtonInCardIconInput>\r\n                </>\r\n                : null\r\n            : iconType === 'st'\r\n                ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                    {DropdownChildren}\r\n                </RadioTrain>\r\n                : iconType === 'custom'\r\n                    ? <CustomStarContainer className=\"custom-star-picker\">\r\n                        <label className=\"standalone-addon ant-input-group-addon\">{DropdownChildren}</label>\r\n                        <div className=\"custom-star-content\">\r\n                            {starList.length > 0\r\n                                ? <div className=\"custom-star-preview\">\r\n                                    {starList.map((entry, index) => {\r\n                                        const iconEntry = TotalIconTypeMap[entry];\r\n\r\n                                        return <span key={`${entry}-${index}`} className=\"star-preview-entry\">\r\n                                            {iconEntry ? iconEntry.icon : <CloseCircleOutlined />}\r\n                                        </span>;\r\n                                    })}\r\n                                </div>\r\n                                : null}\r\n                            <Button\r\n                                size=\"small\" \r\n                                onClick={() => {\r\n                                    changeCardIcon('custom');\r\n                                    starPickerRef.current?.changeStatus('open');\r\n                                }}\r\n                            >{language['generic.edit.label']}</Button>\r\n                        </div>\r\n                    </CustomStarContainer>\r\n                    : <StyledCheckboxStarTrain\r\n                        className=\"checkbox-star-train\"\r\n                        value={star}\r\n                        onChange={changeStar}\r\n                        optionList={StarButtonList}\r\n                        strict={true}\r\n                        suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                            <Input\r\n                                className=\"custom-star-input\"\r\n                                value={typeof star === 'number' ? '' : star}\r\n                                allowClear\r\n                                onChange={changeStar}\r\n                                placeholder={language['input.icon-type.custom.placeholder']}\r\n                            />\r\n                            <CardIconAlignmentPicker\r\n                                language={language}\r\n                                value={starAlignment}\r\n                                onChange={changeStarAlignment}\r\n                            />\r\n                        </div>}\r\n                    >\r\n                        {DropdownChildren}\r\n                    </StyledCheckboxStarTrain>}\r\n    </>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5', 'i']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n        case 'i': wrappedText = `<i>${selectedText}</i>`; cursorOffset = 7; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    position: relative;\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 480px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .radio-train.foil-radio {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        gap: var(--spacing-px); // Alignment\r\n        .ant-radio-button-wrapper {\r\n            font-size: var(--fs);\r\n        }\r\n        .standalone-addon {\r\n            border: none;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .radio-train-input-group {\r\n            gap: 0;\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .inline-input {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .checkbox-disabled {\r\n        .ant-checkbox {\r\n            display: none;\r\n        }\r\n        visibility: hidden; // Avoid collapsing\r\n    }\r\n    .frame-part-name {\r\n        position: absolute;\r\n        padding: 0 var(--spacing);\r\n        top: calc(-1 * var(--spacing-sm));\r\n        right: calc(-1 * var(--spacing-sm));\r\n        border-radius: 0 0 0 var(--br-lg);\r\n        background-color: var(--main-level-4);\r\n        border-left: var(--bw) solid var(--sub-level-4);\r\n        border-bottom: var(--bw) solid var(--sub-level-4);\r\n        &:empty {\r\n            display: none;\r\n        }\r\n    }\r\n    .horizontal-sketch-picker {\r\n        margin-top: var(--spacing);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { checkDiplayLinkRating, randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Checkbox, Dropdown, Menu, Tooltip } from 'antd';\r\nimport { copyrightMap, FlagIndexMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\nconst StyledLinkRatingInputContainer = styled(StyledInputLabelWithButton)`\r\n    .auto-link-rating-input {\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n    .auto-link-rating {\r\n        display: inline-block;\r\n        width: 1.5rem;\r\n        height: 1.5rem;\r\n        line-height: 1;\r\n        text-align: center;\r\n        padding: var(--spacing-xs);\r\n        background: var(--main-level-4);\r\n        border-radius: var(--br-lg);\r\n        font-family: 'RoGSanSrfStd-Bd';\r\n        box-shadow: var(--bs-button);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string, linkRating?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isLink,\r\n        linkRating,\r\n        autoLinkRating,\r\n        showDefAndLink,\r\n        linkRatingDisplayMode,\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format, flag, isLink, linkRating, linkMap },\r\n        getUpdater,\r\n    }) => ({\r\n        linkRating,\r\n        autoLinkRating: linkMap.length,\r\n        isLink,\r\n        sticker,\r\n        format,\r\n        showDefAndLink: flag[FlagIndexMap['showDefAndLink']] === 1,\r\n        linkRatingDisplayMode: flag[FlagIndexMap['linkRating']],\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n    const linkRatingInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const showAtkInput = true;\r\n    const showLinkInput = checkDiplayLinkRating(linkRatingDisplayMode, isLink);\r\n    const showDefInput = showLinkInput\r\n        ? showDefAndLink\r\n        : true;\r\n    const showPadding = [showAtkInput, showDefInput, showLinkInput].filter(entry => entry === true).length % 2 === 1;\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeLinkRating = useMemo(() => getUpdater('linkRating', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def, linkRating }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n            if (typeof linkRating === 'string') linkRatingInputRef.current?.setValue(linkRating);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            {showAtkInput && <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showDefInput && <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />}\r\n            {showPadding && <div />}\r\n            {showLinkInput && <CardTextInput ref={linkRatingInputRef}\r\n                id=\"link\"\r\n                addonBefore={<StyledLinkRatingInputContainer className=\"input-label-with-button\">\r\n                    <div className=\"input-label\">{language['input.link.label']}</div>\r\n                    <Tooltip title={language['input.link.auto.tooltip']}>\r\n                        <div className=\"auto-link-rating-input\">\r\n                            {(typeof linkRating === 'string' && linkRating.length > 0)\r\n                                ? <Checkbox\r\n                                    onChange={e => {\r\n                                        if (e.target.checked) {\r\n                                            changeLinkRating('');\r\n                                            linkRatingInputRef.current.setValue('');\r\n                                        }\r\n                                    }}\r\n                                />\r\n                                : <div className=\"auto-link-rating\">\r\n                                    {isLink ? autoLinkRating : '-'}\r\n                                </div>}\r\n                        </div>\r\n                    </Tooltip>\r\n                </StyledLinkRatingInputContainer>}\r\n                defaultValue={`${useCard.getState().card.linkRating}`}\r\n                onChange={changeLinkRating}\r\n                onTakePicker={onTakePicker}\r\n                placeholder={language['input.link.custom.placeholder']}\r\n            />}\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                        <IconButton\r\n                            onClick={() => {}}\r\n                            Icon={UnorderedListOutlined}\r\n                        />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport {\r\n    ImageCropper,\r\n    ImageCropperRef,\r\n    LINK_MARKER_PICKER_WIDTH,\r\n    LinkMarkerPicker,\r\n    RadioTrain,\r\n    StyledDropdown,\r\n    StyledDropdownLabel,\r\n} from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList, getOtherFinishList } from '../const';\r\nimport { getArtCanvasCoordinate, OtherFinish, OtherFinishTypeMap } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { notification, Popover } from 'antd';\r\nimport { mergeClass } from 'src/util';\r\n\r\nconst LinkPickerContainer = styled.div<{ $hover: boolean }>`\r\n    position: relative;\r\n    ${({ $hover }) => $hover\r\n        ? `\r\n            .link-marker-picker {\r\n                position: absolute;\r\n                top: 0;\r\n                left: 0;\r\n            }\r\n        `\r\n        : ''}\r\n`;\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    text-align: left;\r\n    .ant-input-group-addon {\r\n        flex: 0 0 auto;\r\n        text-align: left;\r\n    }\r\n    .radio-train-input-group {\r\n        flex: 1;\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        padding: 0 var(--spacing-xs);\r\n    }\r\n`;\r\nconst FinishLabel = styled(StyledDropdown.Option)`\r\n    display: grid;\r\n    grid-template-columns: 30px 1fr;\r\n    column-gap: var(--spacing-xs);\r\n    .tag {\r\n        background: var(--sub-level-2);\r\n        color: var(--color-contrast);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    &.default {\r\n        .tag {\r\n            background: var(--sub-level-4);\r\n        }\r\n    }\r\n`;\r\n\r\ntype OtherFinishPicker = {\r\n    finishValueList: [art: string, ...OtherFinish],\r\n    changeFinish: (valueMap: Record<keyof typeof OtherFinishTypeMap, string>) => void,\r\n    language: LanguageDataDictionary,\r\n    showCreativeOption: boolean,\r\n};\r\nconst OtherFinishPicker = ({\r\n    finishValueList,\r\n    changeFinish,\r\n    language,\r\n    showCreativeOption,\r\n}: OtherFinishPicker) => {\r\n    const [selectedType, setSelectedType] = useState<keyof typeof OtherFinishTypeMap>(OtherFinishTypeMap['art'].key);\r\n    /** Be careful, we use added order here, so latest finish target is highest index. */\r\n    const valueMap = {\r\n        [OtherFinishTypeMap['attribute'].key]: finishValueList[1],\r\n        [OtherFinishTypeMap['background'].key]: finishValueList[4],\r\n        [OtherFinishTypeMap['icon'].key]: finishValueList[2],\r\n        [OtherFinishTypeMap['sticker'].key]: finishValueList[3],\r\n        [OtherFinishTypeMap['art'].key]: finishValueList[0],\r\n    };\r\n    const activeWidget = Object.values(valueMap).some(entry => entry !== 'normal');\r\n    const finishList = useMemo(() => getOtherFinishList(language), [language]);\r\n\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]} <CaretDownOutlined />\r\n        </>\r\n        : <>\r\n            <label>{language['input.finish.label']}:</label>&nbsp;\r\n            {language[OtherFinishTypeMap[selectedType].labelKey]}\r\n        </>;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledDropdown.Container>\r\n                <StyledDropdownLabel>{language['input.other-finish.label']}</StyledDropdownLabel>\r\n                {finishList.map(({ label, value }) => {\r\n                    return <FinishLabel key={value}\r\n                        className={mergeClass(\r\n                            valueMap[value] === 'normal' ? 'default' : '',\r\n                            selectedType === value ? 'menu-active' : '',\r\n                        )}\r\n                        onClick={() => {\r\n                            setSelectedType(value);\r\n                        }}\r\n                    >\r\n                        <div className=\"value\">\r\n                            <div className=\"tag\">{valueMap[value] === 'normal' || valueMap[value] === '' ? 'Auto' : valueMap[value]}</div>\r\n                        </div>\r\n                        <div className=\"label\">{label}</div>\r\n                    </FinishLabel>;\r\n                })}\r\n            </StyledDropdown.Container>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`field-title card-icon-dropdown ${activeWidget ? 'active' : ''} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n\r\n    return <StyledImageRadioTrain\r\n        className=\"art-finish-checkbox fill-input-train\"\r\n        value={valueMap[selectedType]}\r\n        onChange={value => {\r\n            const nextValueMap = { ...valueMap };\r\n            nextValueMap[selectedType] = `${value}`;\r\n\r\n            changeFinish(nextValueMap);\r\n        }}\r\n        optionList={ArtFinishButtonList}\r\n    >\r\n        {IconDropdown}\r\n    </StyledImageRadioTrain>;\r\n};\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    showCreativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    showCreativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish, otherFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish, otherFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeOtherFinish = useMemo(() => getUpdater('otherFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <OtherFinishPicker\r\n                finishValueList={[artFinish, ...otherFinish]}\r\n                changeFinish={finishMap => {\r\n                    changeArtFinish(finishMap[OtherFinishTypeMap['art'].key]);\r\n                    changeOtherFinish([\r\n                        finishMap[OtherFinishTypeMap['attribute'].key],\r\n                        finishMap[OtherFinishTypeMap['icon'].key],\r\n                        finishMap[OtherFinishTypeMap['sticker'].key],\r\n                        finishMap[OtherFinishTypeMap['background'].key],\r\n                    ]);\r\n                }}\r\n                language={language}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n            : null\r\n        }\r\n    >\r\n        <LinkPickerContainer\r\n            className=\"link-picker-container\"\r\n            style={{ minWidth: LINK_MARKER_PICKER_WIDTH }}\r\n            $hover={showExtraDecorativeOption}\r\n        >\r\n            <LinkMarkerPicker key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </LinkPickerContainer>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { GlobalMemory, useCarderDb, useGlobal, usePresetManager, WithLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst } from 'src/model';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { LayoutPresetOption } from 'src/component';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\nconst FramePresetPanelContainer = styled.div`\r\n    margin-top: var(--spacing-sm);\r\n    display: grid;\r\n    grid-template-columns: repeat(auto-fill, minmax(55px, 1fr));\r\n    row-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    color: var(--color);\r\n    .preset-panel-top {\r\n        grid-column: -1 / 1;\r\n    }\r\n    .preset-warning {\r\n        font-size: var(--fs-sm);\r\n    }\r\n    .preview-container {\r\n        line-height: 0;\r\n        padding: var(--spacing-xxs) 0;\r\n        border-radius: var(--br);\r\n        cursor: pointer;\r\n        border: var(--bw) solid transparent;\r\n        .card-layout-container {\r\n            pointer-events: none;\r\n        }\r\n        &:hover {\r\n            border-color: var(--main-active);\r\n        }\r\n    }\r\n    .open-preset-manager {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FramePresetPanel = WithLanguage & {\r\n    isPendulum: boolean,\r\n    onOverwrite?: (key: string) => Promise<void>,\r\n    onActive: (content: GlobalMemory['layoutPresetList'][0]['content']) => void,\r\n};\r\nexport const FramePresetPanel = ({\r\n    isPendulum,\r\n    onOverwrite,\r\n    onActive,\r\n    language,\r\n}: FramePresetPanel) => {\r\n    const { db } = useCarderDb();\r\n    const [layoutPresetList, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const setVisible = usePresetManager(state => state.setVisible);\r\n\r\n    if (layoutPresetList.length === 0) return <></>;\r\n    return <FramePresetPanelContainer className=\"frame-preset-panel\">\r\n        {layoutPresetList.length > 0 && <div className=\"preset-panel-top\">\r\n            <div className=\"preset-warning\">\r\n                {language['preset.warning.label']}\r\n                &nbsp;\r\n                <span className=\"open-preset-manager\" onClick={() => setVisible(true)}>{language['preset.manager.check.label']}</span>\r\n            </div>\r\n        </div>}\r\n        {layoutPresetList.map(({ content, key }) => {\r\n            const {\r\n                dyeList,\r\n                foil,\r\n                frame,\r\n                pendulumFrame,\r\n                leftFrame,\r\n                pendulumRightFrame,\r\n                rightFrame,\r\n                effectStyle,\r\n                pendulumStyle,\r\n            } = content;\r\n            const layoutState = {\r\n                frame,\r\n                topLeftFrame: leftFrame,\r\n                topRightFrame: rightFrame,\r\n                bottomLeftFrame: pendulumFrame,\r\n                bottomRightFrame: pendulumRightFrame,\r\n                effectBackground: effectStyle?.background,\r\n                pendulumEffectBackground: pendulumStyle?.background,\r\n            };\r\n\r\n            return <LayoutPresetOption\r\n                width={Math.round(40 * width / height)}\r\n                height={40}\r\n                isPendulum={isPendulum}\r\n                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                tabIndex={-1}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                onActive={() => onActive(content)}\r\n                onDelete={async () => {\r\n                    if (db) {\r\n                        const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                        await db.delete('presetLayoutStore', key);\r\n                        await tx.done;\r\n                    }\r\n                    setLayoutPresetList(cur => cur.filter(({ key: currentKey }) => key !== currentKey));\r\n                }}\r\n                onOverwrite={onOverwrite ? (() => onOverwrite?.(key)) : undefined}\r\n            />;\r\n        })}\r\n    </FramePresetPanelContainer>;\r\n};","import { Checkbox } from 'antd';\r\nimport { RadioTrain } from 'src/component';\r\nimport {\r\n    CardFlag,\r\n    FlagInfoList,\r\n    LINK_RATING_ALWAYS_AUTO,\r\n    LINK_RATING_ALWAYS_HIDE,\r\n    LINK_RATING_ALWAYS_SHOW,\r\n} from 'src/model';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst FrameBehaviorSettingPanelContainer = styled.div`\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border-top: var(--bw) solid var(--sub-level-3);\r\n    > * + * {\r\n        margin-top: var(--spacing-sm);\r\n    }\r\n    .link-rating-behavior-panel {\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n            margin-right: var(--spacing-sm);\r\n        }\r\n        label {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n            font-size: var(--fs);\r\n            color: var(--color);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type FrameBehaviorSettingPanel = {};\r\nexport const FrameBehaviorSettingPanel = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        flag,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n\r\n    const updateFlag = (value: number, index: number) => setCard(currentCard => {\r\n        const nextFlagList: CardFlag = [...currentCard.flag];\r\n        nextFlagList[index] = value;\r\n\r\n        return {\r\n            ...currentCard,\r\n            flag: nextFlagList,\r\n        };\r\n    });\r\n\r\n    return <FrameBehaviorSettingPanelContainer>\r\n        {flag.map((entry, index) => {\r\n            const { labelKey, type } = FlagInfoList[index] ?? {};\r\n\r\n            if (type === 'checkbox') {\r\n                return <div key={labelKey}>\r\n                    <Checkbox\r\n                        checked={entry !== 0}\r\n                        onChange={e => {\r\n                            const value = e.target.checked ? 1 : 0;\r\n\r\n                            updateFlag(value, index);\r\n                        }}\r\n                    >{language[labelKey]}</Checkbox>\r\n                </div>;\r\n            }\r\n            if (type === 'link-rating-behavior') {\r\n                return <RadioTrain key={labelKey}\r\n                    className=\"link-rating-behavior-panel\"\r\n                    onChange={(value) => updateFlag(Number(value), index)}\r\n                    optionList={[\r\n                        { label: language['input.flag.link-rating-behavior.auto'], value: LINK_RATING_ALWAYS_AUTO },\r\n                        { label: language['input.flag.link-rating-behavior.show'], value: LINK_RATING_ALWAYS_SHOW },\r\n                        { label: language['input.flag.link-rating-behavior.hide'], value: LINK_RATING_ALWAYS_HIDE },\r\n                    ]}\r\n                    value={entry}\r\n                    suffix={<label>\r\n                        {language[labelKey]}\r\n                    </label>}\r\n                />;\r\n            }\r\n            return null;\r\n        })}\r\n    </FrameBehaviorSettingPanelContainer>;\r\n};","import { getNavigationProps, mergeClass, resolveFrameStyle } from 'src/util';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FramePreset, useCard, useCarderDb, useGlobal, useLanguage } from 'src/service';\r\nimport { getFoilButtonList, getFrameButtonList } from '../const';\r\nimport { Button, Checkbox } from 'antd';\r\nimport { CardLayoutPreview, FrameInfoBlock, HorizontalSketchPicker, RadioTrain } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { CanvasConst, DefaultFrameInfo, DyeIndexMap, FrameDyeList, FrameInfoMap, FramePositionMap, getDefaultDyeList } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { FramePresetPanel } from './frame-preset-panel';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\nconst FrameLayoutContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    ${StyledPendulumFrameContainer} {\r\n        border: none;\r\n        box-shadow: none;\r\n        padding: 0;\r\n    }\r\n    .visual-preview-container {\r\n        color: var(--color-heavy);\r\n        width: 110px; // Alignment\r\n        text-align: center;\r\n        label {\r\n            display: block;\r\n            padding-bottom: var(--spacing-xxs);\r\n        }\r\n        .frame-info-block {\r\n\t\t\theight: 30px; // Alignment\r\n\t\t\tline-height: 28px; // Alignment with border 1px\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background-color: var(--main-level-1);\r\n            margin-bottom: var(--spacing-xs);\r\n            cursor: pointer;\r\n            .frame-info-block-label {\r\n                padding: 0 var(--spacing-xs);\r\n            }\r\n            &.active {\r\n                border: var(--bw) dashed var(--main-level-2);\r\n            }\r\n            &:hover {\r\n                border: var(--bw) solid var(--main-level-2);\r\n            }\r\n        }\r\n    }\r\n    .frame-action {\r\n        .ant-btn {\r\n            width: 100%;\r\n            & + .ant-btn {\r\n                margin-top: var(--spacing-xs);\r\n            }\r\n        }\r\n    }\r\n    .frame-preset-panel {\r\n        grid-column: -1 / 1;\r\n        padding-top: var(--spacing-sm);\r\n        border-top: var(--bw) solid var(--sub-level-3);\r\n    }\r\n`;\r\n\r\ntype FramelayoutSettingPanelRef = {\r\n    focus: () => void,\r\n};\r\nexport type FramelayoutSettingPanel = {\r\n    isPendulum: boolean,\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onFrameChange: (frame: string) => void,\r\n    onCancel: () => void,\r\n};\r\nexport const FrameLayoutSettingPanel = forwardRef<FramelayoutSettingPanelRef, FramelayoutSettingPanel>(({\r\n    frameList,\r\n    onFrameChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const { db } = useCarderDb();\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            foil,\r\n            frame,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            dyeList,\r\n            effectStyle,\r\n            pendulumStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        foil,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [, setLayoutPresetList] = useGlobal('layoutPresetList');\r\n    const recentCustomPendulumFrame = useRef({\r\n        topLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        topRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomLeftFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        bottomRightFrame: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        effectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n        pendulumEffectBackground: pendulumFrame === 'auto' ? 'spell' : pendulumFrame,\r\n    });\r\n    const [focus, setFocus] = useState(0);\r\n    const [activeLayout, setActiveLayout] = useState('frame');\r\n    const frameLayoutMainId = 'frame-layout-main';\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    useEffect(() => {\r\n        /** Avoid confusion */\r\n        if (activeLayout === 'pendulumEffectBackground' && !isPendulum) setActiveLayout('frame');\r\n    }, [activeLayout, isPendulum]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => document.getElementById(frameLayoutMainId)?.focus(),\r\n    }));\r\n\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const changeBottomLeftFrame = useMemo(() => getUpdater('pendulumFrame'), [getUpdater]);\r\n    const changeBottomRightFrame = useMemo(() => getUpdater('pendulumRightFrame'), [getUpdater]);\r\n    const changeTopLeftFrame = useMemo(() => getUpdater('leftFrame'), [getUpdater]);\r\n    const changeTopRightFrame = useMemo(() => getUpdater('rightFrame'), [getUpdater]);\r\n    const changeEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextEffectStyle = { ...currentCard.effectStyle };\r\n        nextEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            effectStyle: nextEffectStyle,\r\n        };\r\n    });\r\n    const changePendulumEffectBackground = (background: string) => setCard(currentCard => {\r\n        const nextPendulumEffectStyle = { ...currentCard.pendulumStyle };\r\n        nextPendulumEffectStyle.background = background;\r\n\r\n        return {\r\n            ...currentCard,\r\n            pendulumStyle: nextPendulumEffectStyle,\r\n        };\r\n    });\r\n    const changeDyeList = useMemo(() => getUpdater('dyeList'), [getUpdater]);\r\n    const changeDye = (color: string, name: string) => setCard(currentCard => {\r\n        const position = DyeIndexMap[name];\r\n\r\n        if (typeof position !== 'number') return currentCard;\r\n        const nextDyeList = [...currentCard.dyeList] as FrameDyeList;\r\n        nextDyeList[position] = color;\r\n\r\n        return {\r\n            ...currentCard,\r\n            dyeList: nextDyeList,\r\n        };\r\n    });\r\n    const changeLayout = (layoutValue: string) => {\r\n        if (activeLayout === 'bottomLeftFrame') changeBottomLeftFrame(layoutValue);\r\n        if (activeLayout === 'bottomRightFrame') changeBottomRightFrame(layoutValue);\r\n        if (activeLayout === 'topLeftFrame') changeTopLeftFrame(layoutValue);\r\n        if (activeLayout === 'topRightFrame') changeTopRightFrame(layoutValue);\r\n        if (activeLayout === 'effectBackground') changeEffectBackground(layoutValue);\r\n        if (activeLayout === 'pendulumEffectBackground') changePendulumEffectBackground(layoutValue);\r\n    };\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const activeFrame = layoutState[activeLayout];\r\n    const resolvedLayoutStyle = resolveFrameStyle(layoutState, isPendulum);\r\n    const dyeColor = DyeIndexMap[activeLayout];\r\n    return <FrameLayoutContainer>\r\n        <div className=\"visual-preview-container\">\r\n            <label>{language['input.advanced-frame.main.label']}</label>\r\n            <FrameInfoBlock\r\n                id={frameLayoutMainId}\r\n                tabIndex={0}\r\n                className={activeLayout === 'frame' ? 'active' : ''}\r\n                {...FrameInfoMap[frame] ?? DefaultFrameInfo}\r\n                onClick={() => setActiveLayout('frame')}\r\n            />\r\n            <label>{language['input.advanced-frame.detailed.label']}</label>\r\n            <CardLayoutPreview\r\n                width={Math.round(width / 20) * 2}\r\n                height={Math.round(height / 20) * 2}\r\n                isPendulum={isPendulum}\r\n                baseLayoutState={layoutState}\r\n                resolvedLayoutState={resolvedLayoutStyle}\r\n                activeLayout={activeLayout}\r\n                onLayoutSelect={key => setActiveLayout(key)}\r\n                dyeList={dyeList}\r\n                foil={foil}\r\n                language={language}\r\n                vertical={true}\r\n            />\r\n            <div className=\"frame-action\">\r\n                <Button\r\n                    size=\"small\"\r\n                    onClick={() => {\r\n                        changeBottomLeftFrame('auto');\r\n                        changeBottomRightFrame('auto');\r\n                        changeTopLeftFrame('auto');\r\n                        changeTopRightFrame('auto');\r\n                        changeEffectBackground('auto');\r\n                        changePendulumEffectBackground('auto');\r\n                        changeFoil('normal');\r\n                        changeDyeList(getDefaultDyeList());\r\n                    }}\r\n                >\r\n                    {language['generic.reset.label']}\r\n                </Button>\r\n                <Button\r\n                    size=\"small\"\r\n                    type=\"primary\"\r\n                    onClick={async () => {\r\n                        const key = uuid();\r\n                        const value: FramePreset = {\r\n                            foil,\r\n                            frame,\r\n                            leftFrame,\r\n                            pendulumFrame,\r\n                            pendulumRightFrame,\r\n                            rightFrame,\r\n                            effectStyle: { background: effectBackground },\r\n                            pendulumStyle: { background: pendulumEffectBackground },\r\n                            dyeList: [...dyeList],\r\n                        };\r\n                        if (db) {\r\n                            const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                            await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                            await tx.done;\r\n                        }\r\n                        setLayoutPresetList(cur => [\r\n                            ...cur,\r\n                            {\r\n                                key,\r\n                                content: value,\r\n                            },\r\n                        ]);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.save.label']}\r\n                </Button>\r\n            </div>\r\n        </div>\r\n        <div>\r\n            <StyledPendulumFrameContainer\r\n                className=\"pendulum-frame-picker\"\r\n                {...getNavigationProps({\r\n                    stopPropagation: true,\r\n                    optionLength: frameList.length,\r\n                    setFocus,\r\n                    onTrigger: () => {\r\n                        if (focus >= 0) changeLayout(frameList[focus].value);\r\n                    },\r\n                    onCancel,\r\n                })}\r\n            >\r\n                <div className=\"frame-part-name\">\r\n                    {language[FramePositionMap[activeLayout]?.labelKey]}\r\n                </div>\r\n                {/** Avoid collapsing in case of frame */}\r\n                {activeLayout !== 'foil' && <Checkbox\r\n                    className={mergeClass('inline-input', activeLayout === 'frame' ? 'checkbox-disabled' : '')}\r\n                    checked={activeFrame === 'auto'}\r\n                    disabled={activeLayout === 'frame'}\r\n                    onChange={e => {\r\n                        changeLayout(e.target.checked ? 'auto' : (recentCustomPendulumFrame.current[activeLayout] ?? 'auto'));\r\n                    }}\r\n                >{language['input.frame.auto']}</Checkbox>}\r\n                {activeLayout === 'foil'\r\n                    ? <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                        <span>{language['input.foil.label']}</span>\r\n                    </RadioTrain>\r\n                    : <RadioTrain\r\n                        className=\"frame-radio\"\r\n                        value={activeFrame}\r\n                        onChange={value => {\r\n                            if (activeLayout === 'frame') onFrameChange(value);\r\n                            else changeLayout(value);\r\n                        }}\r\n                        optionList={frameList}\r\n                    />}\r\n                {typeof dyeColor === 'number' && <HorizontalSketchPicker\r\n                    value={dyeList[dyeColor]}\r\n                    onChange={color => {\r\n                        if (color !== dyeList[dyeColor]) changeDye(color, activeLayout);\r\n                    }}\r\n                >\r\n                    {language['input.advanced-frame.dye']}\r\n                </HorizontalSketchPicker>}\r\n            </StyledPendulumFrameContainer>\r\n        </div>\r\n        <FramePresetPanel\r\n            language={language}\r\n            isPendulum={isPendulum}\r\n            onOverwrite={async key => {\r\n                const value: FramePreset = {\r\n                    foil,\r\n                    frame,\r\n                    leftFrame,\r\n                    pendulumFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle: { background: effectBackground },\r\n                    pendulumStyle: { background: pendulumEffectBackground },\r\n                    dyeList: [...dyeList],\r\n                };\r\n                if (db) {\r\n                    const tx = db.transaction('presetLayoutStore', 'readwrite');\r\n                    await db.put('presetLayoutStore', { key, content: JSON.stringify(value) });\r\n                    await tx.done;\r\n                }\r\n                setLayoutPresetList(cur => cur.map(entry => {\r\n                    if (entry.key === key) {\r\n                        return {\r\n                            key,\r\n                            content: value,\r\n                        };\r\n                    } else {\r\n                        return entry;\r\n                    }\r\n                }));\r\n            }}\r\n            onActive={content => {\r\n                const {\r\n                    dyeList,\r\n                    foil,\r\n                    frame,\r\n                    pendulumFrame,\r\n                    leftFrame,\r\n                    pendulumRightFrame,\r\n                    rightFrame,\r\n                    effectStyle,\r\n                    pendulumStyle,\r\n                } = content;\r\n                onFrameChange(frame);\r\n                changeBottomLeftFrame(pendulumFrame);\r\n                changeBottomRightFrame(pendulumRightFrame);\r\n                changeTopLeftFrame(leftFrame);\r\n                changeTopRightFrame(rightFrame);\r\n                changeEffectBackground(effectStyle.background);\r\n                changePendulumEffectBackground(pendulumStyle.background);\r\n                changeFoil(foil);\r\n                changeDyeList(dyeList);\r\n            }}\r\n        />\r\n    </FrameLayoutContainer>;\r\n});\r\n\r\nexport * from './frame-behavior-setting-panel';\r\nexport * from '../../../component/card-layout-preview';","import { CopiableCode } from 'src/component';\r\nimport { LINK_RATING_ALWAYS_AUTO, LINK_RATING_ALWAYS_SHOW, LINK_RATING_ALWAYS_HIDE, FlagInfoList } from 'src/model';\r\nimport { LanguageDataDictionary } from 'src/service';\r\n\r\nexport const FlagPresentationList = [\r\n    {\r\n        ...FlagInfoList[0],\r\n        valueDisplay: (language: LanguageDataDictionary, _value: number) => language['input.flag.mix-def-link'],\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.mix-def-link']}:\r\n            <ul>\r\n                <li><CopiableCode data={0}>0</CopiableCode>: {language['manager.template.description.true']}</li>\r\n                <li><CopiableCode data={1}>1</CopiableCode>: {language['manager.template.description.false']}</li>\r\n            </ul>\r\n        </>,\r\n    },\r\n    {\r\n        ...FlagInfoList[1],\r\n        valueDisplay: (language: LanguageDataDictionary, value: number) => <>\r\n            {language['input.flag.link-rating-behavior']}: {language[value === 1\r\n                ? 'input.flag.link-rating-behavior.show'\r\n                : 'input.flag.link-rating-behavior.hide']}\r\n        </>,\r\n        sampleDisplay: (language: LanguageDataDictionary) => <>\r\n            {language['input.flag.link-rating-behavior']}:\r\n            <ul>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_AUTO}>\r\n                        {LINK_RATING_ALWAYS_AUTO}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.auto']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_SHOW}>\r\n                        {LINK_RATING_ALWAYS_SHOW}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.show']}\r\n                </li>\r\n                <li>\r\n                    <CopiableCode data={LINK_RATING_ALWAYS_HIDE}>\r\n                        {LINK_RATING_ALWAYS_HIDE}\r\n                    </CopiableCode>: {language['input.flag.link-rating-behavior.hide']}\r\n                </li>\r\n            </ul>\r\n        </>,\r\n    },\r\n];","import { Checkbox, Input, Popover } from 'antd';\r\nimport { InternalPopover, PopoverButton, StyledDropdown, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CanvasConst, DEFAULT_PENDULUM_SIZE, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined, ApartmentOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { resolveFrameStyle } from 'src/util';\r\nimport { CardLayoutPreview, FrameBehaviorSettingPanel, FramelayoutSettingPanel, FrameLayoutSettingPanel } from '../frame-setting-panel';\r\nimport { FlagPresentationList } from '../../common';\r\n\r\nconst {\r\n    width,\r\n    height,\r\n} = CanvasConst;\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n    .card-layout-preview-container {\r\n        line-height: 0;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        overflow: hidden;\r\n    }\r\n    .anticon {\r\n        align-content: center;\r\n        padding: 0 var(--spacing-xs);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-left: none;\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n}\r\n    & Pick<CardTextInput, 'onTakePicker'>\r\n    & Pick<FramelayoutSettingPanel, 'onFrameChange'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n    onFrameChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        effectBackground, pendulumEffectBackground,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            frame,\r\n            foil,\r\n            leftFrame, rightFrame,\r\n            pendulumFrame, pendulumRightFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n            effectStyle,\r\n            pendulumStyle,\r\n            dyeList,\r\n            flag,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        frame,\r\n        foil,\r\n        leftFrame, rightFrame,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n        dyeList,\r\n        flag,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const layoutState = {\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground,\r\n        pendulumEffectBackground,\r\n    };\r\n    const advanceLayoutPreviewHeight = 30; // Alignment with frame input\r\n    const flagList = flag\r\n        .map((entry, index) => {\r\n            const target = FlagPresentationList[index];\r\n\r\n            if (entry !== 0 && target) return <li key={target.labelKey}>\r\n                {target.valueDisplay(language, entry)}\r\n            </li>;\r\n            return null;\r\n        })\r\n        .filter(entry => entry != null);\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <FrameLayoutSettingPanel ref={bottomFrameOptionGridRef}\r\n                            isPendulum={isPendulum}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onFrameChange={onFrameChange}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                        />\r\n                        <FrameBehaviorSettingPanel />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">\r\n                            {language['input.advanced-frame.label']}\r\n                        </span>\r\n                        <div className=\"card-layout-preview-container\">\r\n                            <CardLayoutPreview\r\n                                width={Math.round(advanceLayoutPreviewHeight * width / height)}\r\n                                height={advanceLayoutPreviewHeight}\r\n                                isPendulum={isPendulum}\r\n                                resolvedLayoutState={resolveFrameStyle(layoutState, isPendulum)}\r\n                                tabIndex={-1}\r\n                                dyeList={dyeList}\r\n                                foil={foil}\r\n                                language={language}\r\n                            />\r\n                        </div>\r\n                        {flagList.length > 0\r\n                            ? <InternalPopover\r\n                                content={<StyledPopMarkdown>\r\n                                    {language['input.flag.effective.label']}\r\n                                    <ul>{flagList}</ul>\r\n                                </StyledPopMarkdown>}\r\n                            >\r\n                                <ApartmentOutlined />\r\n                            </InternalPopover>\r\n                            : null}\r\n                        <CaretDownOutlined />\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption) && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\" className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, SingleSliderContainer, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst PostPendulumFirstLineContainer = styled.div`\r\n    &.first-line,\r\n    &.second-line {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: var(--spacing-sm);\r\n        align-items: center;\r\n        justify-content: right;\r\n    }\r\n    .type-ability-input {\r\n        flex: 1 1 auto;\r\n        width: unset;\r\n        max-width: 40rem;\r\n    }\r\n    .condense-input {\r\n        flex: 1 1 auto;\r\n    }\r\n    .formatting-help-button,\r\n    .input-kanji-helper {\r\n        flex: 0 0 auto;\r\n    }\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .condense-input {\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n`;\r\nconst AdvancedParagraphButton = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-4);\r\n    .button-label {\r\n        line-height: 2;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n    }\r\n`;\r\nconst AdvancedParagraphPanel = styled.div`\r\n    .line-input,\r\n    .justify-ratio-input {\r\n        padding: var(--spacing-xs);\r\n    }\r\n    .single-slider {\r\n        .ant-input-number {\r\n            width: 75px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: {\r\n        typeAbility?: string[],\r\n        effectMinLine?: number,\r\n        pendulumEffectMinLine?: number,\r\n        effectJustifyRatio?: number,\r\n        pendulumEffectJustifyRatio?: number,\r\n    }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const showExtraDecorativeOption = useSetting(state => state.setting.showExtraDecorativeOption);\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const [effectMinLine, setEffectMinLine] = useState(() => useCard.getState().card.effectStyle.minLine);\r\n    const [pendulumEffectMinLine, setPendulumEffectMinLine] = useState(() => useCard.getState().card.pendulumStyle.minLine);\r\n    const [effectJustifyRatio, setEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.effectStyle.justifyRatio;\r\n    });\r\n    const [pendulumEffectJustifyRatio, setPendulumEffectJustifyRatio] = useState(() => {\r\n        return useCard.getState().card.pendulumStyle.justifyRatio;\r\n    });\r\n\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        /** Changing min line / justify ratio force render effect, so we should do so sparingly */\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) setCard(currentCard => {\r\n                const newEffectStyle = {\r\n                    ...currentCard.effectStyle,\r\n                    minLine: effectMinLine,\r\n                    justifyRatio: effectJustifyRatio,\r\n                };\r\n                const newPendulumEffectStyle = {\r\n                    ...currentCard.pendulumStyle,\r\n                    minLine: pendulumEffectMinLine,\r\n                    justifyRatio: pendulumEffectJustifyRatio,\r\n                };\r\n\r\n                return {\r\n                    ...currentCard,\r\n                    effectStyle: newEffectStyle,\r\n                    pendulumStyle: newPendulumEffectStyle,\r\n                };\r\n            });\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [effectJustifyRatio, effectMinLine, pendulumEffectJustifyRatio, pendulumEffectMinLine, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({\r\n            typeAbility,\r\n            effectMinLine, pendulumEffectMinLine,\r\n            effectJustifyRatio, pendulumEffectJustifyRatio,\r\n        }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n            if (typeof effectMinLine === 'number') setEffectMinLine(effectMinLine);\r\n            if (typeof pendulumEffectMinLine === 'number') setPendulumEffectMinLine(pendulumEffectMinLine);\r\n            if (typeof effectJustifyRatio === 'number') setEffectJustifyRatio(effectJustifyRatio);\r\n            if (typeof pendulumEffectJustifyRatio === 'number') setPendulumEffectJustifyRatio(pendulumEffectJustifyRatio);\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon]?.value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input first-line variant-${format}`}>\r\n            <CardTextInput ref={typeAbilityInputRef}\r\n                addonBefore={language[typeLabel]}\r\n                id=\"type-ability\"\r\n                defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n                onChange={changeTypeAbility}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            {isOCG && <Tooltip\r\n                overlay={language['input.furigana-helper.tooltip']}\r\n                overlayClassName=\"long-tooltip-overlay\"\r\n            >\r\n                <Checkbox\r\n                    className=\"input-kanji-helper\"\r\n                    onChange={toggleFuriganaHelper}\r\n                    checked={furiganaHelper}\r\n                >\r\n                    {language['input.furigana-helper.label']}\r\n                </Checkbox>\r\n            </Tooltip>}\r\n            <FormattingHelpDrawer />\r\n        </PostPendulumFirstLineContainer>\r\n        <PostPendulumFirstLineContainer className={`post-pendulum-input second-line variant-${format}`}>\r\n            <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n                onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n                optionList={CondenseThresholdButtonList}\r\n            >\r\n                <span>\r\n                    {language['input.condense.label']} <Explanation\r\n                        content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <Popover\r\n                overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <AdvancedParagraphPanel className=\"custom-style-picker\">\r\n                        <h2>\r\n                            {language['input.text-style.min-line.label']}\r\n                        </h2>\r\n                        <div className=\"line-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-line\"\r\n                                    size=\"small\"\r\n                                    value={effectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-line\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectMinLine}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectMinLine(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={50}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                        <h2>\r\n                            {language['input.text-style.justify-ratio.label']}\r\n                        </h2>\r\n                        <div className=\"justify-ratio-input\">\r\n                            <SingleSliderContainer className=\"single-slider\">\r\n                                <span>{language['input.text-style.min-line.effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={effectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.effect.placeholder']}\r\n                                    onChange={value => setEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                                <span>{language['input.text-style.min-line.pendulum-effect.placeholder']}:</span>\r\n                                <InputNumber\r\n                                    id=\"pendulum-effect-justify-ratio\"\r\n                                    size=\"small\"\r\n                                    value={pendulumEffectJustifyRatio}\r\n                                    placeholder={language['input.text-style.min-line.pendulum-effect.placeholder']}\r\n                                    onChange={value => setPendulumEffectJustifyRatio(typeof value === 'number' ? value : 0)}\r\n                                    min={0}\r\n                                    max={5000}\r\n                                    step={100}\r\n                                />\r\n                            </SingleSliderContainer>\r\n                        </div>\r\n                    </AdvancedParagraphPanel>\r\n                </div>}\r\n            >\r\n                <AdvancedParagraphButton>\r\n                    <div className=\"button-label\">\r\n                        {language['input.text-style.paragraph-style.label']}\r\n                    </div>\r\n                </AdvancedParagraphButton>\r\n            </Popover>}\r\n        </PostPendulumFirstLineContainer>\r\n    </>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { InlineColorPicker, RadioTrain } from 'src/component';\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? 'var(--sub-level-2)' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? 'var(--color-contrast)' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    IconButton,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { ClearOutlined } from '@ant-design/icons';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, FrameTrainRef } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    AttributeInputGroup,\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledInputLabelWithButton,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isLink,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isLink,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const frameTrainRef = useRef<FrameTrainRef>(null);\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n                effectStyle, pendulumStyle,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({\r\n                typeAbility,\r\n                effectMinLine: effectStyle.minLine,\r\n                pendulumEffectMinLine: pendulumStyle.minLine,\r\n                effectJustifyRatio: effectStyle.justifyRatio,\r\n                pendulumEffectJustifyRatio: pendulumStyle.justifyRatio,\r\n            });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <StyledInputLabelWithButton className=\"finish-checkbox-label\">\r\n                    <div className=\"input-label\">{language['input.finish.label']}</div>\r\n                    <IconButton\r\n                        onClick={() => onFinishChange([])}\r\n                        Icon={ClearOutlined}\r\n                        tooltipProps={{\r\n                            title: language['input.other-finish.reset.tooltip'],\r\n                        }}\r\n                    />\r\n                </StyledInputLabelWithButton>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain ref={frameTrainRef}\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def, linkRating) => footerInputGroupRef.current?.setValue({ atk, def, linkRating })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <AttributeInputGroup language={language} />\r\n\r\n                <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    softMode={reduceMotionColor}\r\n                    onTakePicker={setPickerTarget}\r\n                    onFrameChange={frame => frameTrainRef.current?.changeFrame(frame)}\r\n                />\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showCreativeOption={showCreativeOption}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, compressCardData, getCardIconFromFrame, mergeClass, normalizeCardName, resolveFrameStyle } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Checkbox, Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .select-box {\r\n            display: inline-block;\r\n            margin-right: var(--spacing-xs);\r\n        }\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 50%;\r\n            height: 50%;\r\n            position: absolute;\r\n            background-size: 200% 200%;\r\n            &.top-left-frame {\r\n                top: 0;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.top-right-frame {\r\n                top: 0;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n            &.bottom-left-frame {\r\n                top: 50%;\r\n                left: 0;\r\n                background-position: 0% 0%;\r\n            }\r\n            &.bottom-right-frame {\r\n                top: 50%;\r\n                left: 50%;\r\n                background-position: 100% 0%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #2a2a2a;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    selected,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard, type: 'add' | 'remove') => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    selected,\r\n    language,\r\n    onDuplicate,\r\n    onActive,\r\n    onDelete,\r\n    onSelect,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        leftFrame, rightFrame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame, pendulumRightFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n        effectStyle,\r\n        pendulumStyle,\r\n    } = card;\r\n    const {\r\n        topLeftFrame,\r\n        topRightFrame,\r\n        bottomLeftFrame,\r\n        bottomRightFrame,\r\n    } = resolveFrameStyle({\r\n        frame,\r\n        topLeftFrame: leftFrame,\r\n        topRightFrame: rightFrame,\r\n        bottomLeftFrame: pendulumFrame,\r\n        bottomRightFrame: pendulumRightFrame,\r\n        effectBackground: effectStyle.background,\r\n        pendulumEffectBackground: pendulumStyle.background,\r\n    }, isPendulum);\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onActive(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame top-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[topRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[topRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-left-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomLeftFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomLeftFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-right-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[bottomRightFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[bottomRightFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                <div className=\"select-box\" onClick={e => e.stopPropagation()}>\r\n                    <Checkbox\r\n                        checked={selected}\r\n                        onChange={e => {\r\n                            onSelect(card, e.target.checked ? 'add' : 'remove');\r\n                        }}\r\n                    />\r\n                </div>\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${(normalizedCardIcon === 'custom'\r\n                        ? 'icon-list'\r\n                        : normalizedCardIcon).toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(normalizedCardIcon !== NO_ICON\r\n                    && normalizedCardIconType !== 'st'\r\n                    && normalizedCardIconType !== 'none'\r\n                    && normalizedCardIconType !== 'custom'\r\n                ) && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined\r\n                        className=\"action-button action-download\"\r\n                        onClick={() => {\r\n                            const { id, ...exportableCard } = card;\r\n                            copy(JSON.stringify(compressCardData(exportableCard)));\r\n                        }}\r\n                    />\r\n                </Tooltip>\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${- thumbArtXGap * THUMB_TO_CARD_RATIO\r\n            }px) translateY(${- thumbArtYGap * THUMB_TO_CARD_RATIO\r\n            }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { Button, Modal } from 'antd';\r\nimport JSZip from 'jszip';\r\nimport { useEffect, useRef } from 'react';\r\nimport { InternalCard } from 'src/model';\r\nimport { useBatchDownload, useCardList, WithLanguage } from 'src/service';\r\nimport { downloadBlob } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { CheckCircleOutlined, LoadingOutlined, HourglassOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst ExportingListContainer = styled.div`\r\n    .exporting-item {\r\n        display: grid;\r\n        grid-template-columns: 1.5rem 1fr;\r\n    }\r\n    .anticon-hourglass {\r\n        color: var(--main-info);\r\n    }\r\n    .anticon-loading {\r\n        color: var(--main-active);\r\n    }\r\n    .anticon-check-circle {\r\n        color: var(--main-online);\r\n    }\r\n`;\r\n\r\nexport type BatchDownloadButton = {\r\n    onActive: (card: InternalCard) => void,\r\n} & WithLanguage;\r\nexport const BatchDownloadButton = ({\r\n    language,\r\n    onActive,\r\n}: BatchDownloadButton) => {\r\n    const {\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    } = useCardList(useShallow(({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    }) => ({\r\n        selectedMap,\r\n        listName,\r\n        activeId,\r\n        cardDisplayList,\r\n    })));\r\n    const {\r\n        batchQueue,\r\n        batchDataMap,\r\n        isBatchDownloading,\r\n        isReady,\r\n        clearQueue,\r\n        stopBatchDownload,\r\n        startBatchDownload,\r\n    } = useBatchDownload();\r\n    /**\r\n     * The batch download process is as follow:\r\n     * * Start the process, block the screen with a popup and mark the process as started.\r\n     * * During the process, the top card of the exporting list is picked, and force select.\r\n     * * After it fully render (we check it at the useCardExport hook), it trigger the recording process, while also remove the recorded card from exporting list.\r\n     * * When the exporting list changed, jump back to step 2. If the exporting list is now empty, we zip it and trigger the download.\r\n     * * Clean up and end the process.\r\n     */\r\n    const nextSelectedId = batchQueue[0];\r\n    const lastSelectedId = useRef('');\r\n    useEffect(() => {\r\n        if (nextSelectedId && isBatchDownloading && nextSelectedId !== lastSelectedId.current) {\r\n            lastSelectedId.current = nextSelectedId;\r\n            const targetCard = cardDisplayList.find(card => card.id === nextSelectedId);\r\n\r\n            if (targetCard) {\r\n                onActive(targetCard);\r\n            }\r\n        }\r\n    }, [cardDisplayList, isBatchDownloading, nextSelectedId, onActive]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (isReady) {\r\n            (async () => {\r\n                const { batchName, batchDataMap } = useBatchDownload.getState();\r\n                const zipObject = new JSZip();\r\n                const batchDataList = Object.values(batchDataMap);\r\n\r\n                if (batchDataList.length > 0) {\r\n                    Object.values(batchDataMap).forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    if (relevant) {\r\n                        downloadBlob(\r\n                            `${batchName}.zip`,\r\n                            zipBlob,\r\n                            'application/zip',\r\n                        );\r\n                        stopBatchDownload();\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [isReady, stopBatchDownload]);\r\n\r\n    const exportAllCard = Object.keys(selectedMap).length === 0;\r\n    return <>\r\n        <Modal\r\n            visible={isBatchDownloading}\r\n            onCancel={() => stopBatchDownload()}\r\n            onOk={() => clearQueue()}\r\n            cancelText={language['manager.batch.batch-download.cancel-all.label']}\r\n            okText={language['manager.batch.batch-download.premature-stop.label']}\r\n            okButtonProps={{\r\n                type: 'default',\r\n            }}\r\n        >\r\n            <ExportingListContainer className=\"exporting-list\">\r\n                {Object\r\n                    .values(cardDisplayList)\r\n                    .map(({ id, name }) => {\r\n                        if (!exportAllCard && !selectedMap[id]) return null;\r\n                        return <div key={id} className=\"exporting-item\">\r\n                            <div className=\"export-status\">\r\n                                {activeId === id\r\n                                    ? <LoadingOutlined />\r\n                                    : batchDataMap[id]\r\n                                        ? <CheckCircleOutlined />\r\n                                        : <HourglassOutlined />}\r\n                            </div>\r\n                            <div className=\"export-name\">{name}</div>\r\n                        </div>;\r\n                    })}\r\n            </ExportingListContainer>\r\n        </Modal>\r\n        <Button\r\n            className=\"batch-download-button\"\r\n            onClick={() => startBatchDownload(\r\n                listName,\r\n                exportAllCard\r\n                    ? cardDisplayList.map(card => card.id)\r\n                    : Object.keys(selectedMap),\r\n            )}\r\n        >\r\n            {exportAllCard\r\n                ? language['manager.batch.batch-download.label']\r\n                : language['manager.batch.batch-download.partial-download.label']}\r\n        </Button>\r\n    </>;\r\n};","import { LanguageDataDictionary, useCardList, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useCallback, useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button, Dropdown, Menu } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\nimport { BatchDownloadButton } from './batch-download-button';\r\nimport { CaretDownFilled } from '@ant-design/icons';\r\n\r\nconst StyledMenuItem = styled(Menu.Item)`\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .batch-download-button {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .select-panel {\r\n        display: grid;\r\n        grid-template-columns: max-content max-content 1fr;\r\n        padding: var(--spacing-xs);\r\n        gap: var(--spacing-xs);\r\n        text-align: right;\r\n        .ant-checkbox-wrapper span {\r\n            padding-right: 0;\r\n        }\r\n        .scheme-button {\r\n            display: inline-block;\r\n        }\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    selectedMap: Record<string, string>,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onActive: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n} & Pick<CardThumb, 'onSelect'>;\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        selectedMap,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDuplicate,\r\n        onActive,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        selected={!!selectedMap[list[index].id]}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onActive={onActive}\r\n        onDelete={onDelete}\r\n        onSelect={onSelect}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onActive: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onActive,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        selectedMap,\r\n        selectCard,\r\n        deleteCard,\r\n        duplicateCard,\r\n        setSelectMap,\r\n        resetFilter,\r\n    })));\r\n    const {\r\n        exportScheme,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { exportScheme },\r\n        updateSetting,\r\n    }) => ({\r\n        exportScheme,\r\n        updateSetting,\r\n    })));\r\n\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const onSelect: CardThumbRowData['onSelect'] = useCallback((card, type) => {\r\n        selectCard(card.id, type);\r\n    }, [selectCard]);\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onActive(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onActive, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        {cardDisplayList.length > 0 && <div className=\"select-panel\">\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap([], 'replace')}\r\n            >\r\n                {language['manager.batch.batch-download.clear.label']}\r\n            </Button>\r\n            <Button\r\n                size=\"small\"\r\n                onClick={() => setSelectMap(cardDisplayList, 'add')}\r\n            >\r\n                {language['manager.batch.batch-download.all.label']}\r\n            </Button>\r\n            <div>\r\n                <Dropdown\r\n                    overlay={<Menu>\r\n                        {[\r\n                            {\r\n                                value: 'with-name',\r\n                                label: language['manager.batch.batch-download.export-option.with-name.label'],\r\n                            },\r\n                            {\r\n                                value: 'with-id',\r\n                                label: language['manager.batch.batch-download.export-option.with-id.label'],\r\n                            },\r\n                        ].map(({ value, label }) => {\r\n                            return <StyledMenuItem\r\n                                key={value}\r\n                                onClick={() => updateSetting({ exportScheme: value })}\r\n                                className={value === exportScheme ? 'menu-active' : ''}\r\n                            >\r\n                                {label}\r\n                            </StyledMenuItem>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div\r\n                        className=\"scheme-button\"\r\n                    >\r\n                        {language['manager.batch.batch-download.export-scheme.label']} <CaretDownFilled />\r\n                    </div>\r\n                </Dropdown>\r\n            </div>\r\n        </div>}\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            selectedMap,\r\n                            onDuplicate: duplicateCard,\r\n                            onActive,\r\n                            onDelete: deleteAndReselect,\r\n                            onSelect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        {cardDisplayList.length !== 0 && <BatchDownloadButton\r\n            language={language}\r\n            onActive={onActive}\r\n        />}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    RegionMap,\r\n    CondenseTolerantMap,\r\n    DyeIndexMap,\r\n    ExtraAttributeList,\r\n    FinishMap,\r\n    frameList,\r\n    FramePositionMap,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n    TotalIconTypeMap,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport { CopiableCode, StyledMono } from 'src/component';\r\nimport { FlagPresentationList } from '../common';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                    <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                                </tr>\r\n                                {[\r\n                                    {\r\n                                        field: 'Format',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'tcg',\r\n                                                'ocg',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Frame',\r\n                                        altField: 'Bottom Frame',\r\n                                        value: <div>\r\n                                            {frameList\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Attribute',\r\n                                        value: <div>\r\n                                            {[...AttributeList, ...ExtraAttributeList]\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Spell/Trap Icon',\r\n                                        value: <div>\r\n                                            {IconList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Sticker',\r\n                                        value: <div>\r\n                                            {StickerList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Foil',\r\n                                        value: <div>\r\n                                            {getFoilList()\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Finish',\r\n                                        value: <div>\r\n                                            {Object.values(FinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                            <div>{language['manager.template.description.joinable']}</div>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Art Finish',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'number',\r\n                                                'text',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star Alignment',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'left',\r\n                                                'center',\r\n                                                'right',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Card Icon Type',\r\n                                        value: <div>\r\n                                            {IconTypeList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Background Type',\r\n                                        value: <div>\r\n                                            {getBackgroundTypeList()\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Condense Rate',\r\n                                        value: <div>\r\n                                            {Object.keys(CondenseTolerantMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style Type',\r\n                                        value: <div>\r\n                                            {[\r\n                                                'predefined',\r\n                                                'custom',\r\n                                            ].map(value => {\r\n                                                return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                            })}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Font',\r\n                                        value: <div>\r\n                                            <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                        </div>,\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Preset',\r\n                                        value: <div>\r\n                                            {Object.keys(PresetNameStyleMap)\r\n                                                .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Name Style - Pattern',\r\n                                        value: <div>\r\n                                            {PatternList\r\n                                                .filter(({ isOption }) => isOption)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Pendulum Size',\r\n                                        value: <div>\r\n                                            {PendulumSizeList\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Attribute',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Background',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Icon',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Other Finish - Sticker',\r\n                                        value: <div>\r\n                                            {Object.values(ArtFinishMap)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Region',\r\n                                        value: <div>\r\n                                            {Object.values(RegionMap)\r\n                                                .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Star List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.star-list']}</div>\r\n                                            {Object\r\n                                                .values(TotalIconTypeMap)\r\n                                                .filter(({ isMixable }) => isMixable)\r\n                                                .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Dye List',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.dye-list']}</div>\r\n                                            <ul>\r\n                                                {Object\r\n                                                    .entries(DyeIndexMap)\r\n                                                    .sort((l, r) => l[1] - r[1])\r\n                                                    .map(([key]) => <li key={key}>{language[FramePositionMap[key]?.labelKey ?? '']}</li>)}\r\n                                            </ul>\r\n                                        </div>\r\n                                    },\r\n                                    {\r\n                                        field: 'Flag',\r\n                                        value: <div>\r\n                                            <div>{language['manager.template.description.flag']}</div>\r\n                                            {FlagPresentationList\r\n                                                .map(({ sampleDisplay, index }) => <div key={index}>{sampleDisplay(language)}</div>)}\r\n                                        </div>\r\n                                    },\r\n                                ].map(({\r\n                                    field,\r\n                                    altField,\r\n                                    value,\r\n                                }) => {\r\n                                    return <tr key={field}>\r\n                                        <td>\r\n                                            <StyledMono>{field}</StyledMono>\r\n                                            {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                        </td>\r\n                                        <td>{value}</td>\r\n                                    </tr>;\r\n                                })}\r\n                            </tbody>\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\nimport { ManagerDrawer } from 'src/component';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(ManagerDrawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            className=\"card-manager-panel\"\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as Japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onActive={activeCard}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: 0 var(--spacing);\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n    ImagePreset,\r\n    NameStyle,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n    isTouchDevice,\r\n    mergeClass,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    FramePreset,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCarderDb,\r\n    useCardList,\r\n    useGlobal,\r\n    useGlobalMemory,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { CROPPER_WIDTH, Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\nimport Moveable from 'react-moveable';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+y', 'command+y'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } = useSetting(useShallow(({ setting: {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n        slidingType,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const isMobile = isMobileDevice();\r\n    const windowSlidable = !isMobile && !isTouchDevice();\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [, setActiveDropzone] = useGlobal('activeDropzone');\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const { db, dbReady } = useCarderDb();\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n    const slidingWindowRef = useRef<HTMLDivElement>(null);\r\n    const containerWindowRef = useRef<HTMLDivElement>(null);\r\n    const moveableRef = useRef<Moveable>(null);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        /** Each time a drag over event is fired, we keep the heartbeat, and stop it if there is no heartbeat after a while. */\r\n        const stopDrag = () => {\r\n            setActiveDropzone(0);\r\n        };\r\n        let timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        const checkDragHeartbeat: Document['ondragover'] = () => {\r\n            setActiveDropzone(1);\r\n            window.clearTimeout(timeoutHandle);\r\n            timeoutHandle = window.setTimeout(stopDrag, 200);\r\n        };\r\n\r\n        document.addEventListener('dragover', checkDragHeartbeat);\r\n\r\n        return () => {\r\n            document.removeEventListener('dragover', checkDragHeartbeat);\r\n        };\r\n    }, [setActiveDropzone]);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n    /** Fix weird issue when frame layer does not render correctly when manager's visibility is changed. Happens on Opera GX */\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, [managerVisible]);\r\n    useEffect(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        if (slidingType === 'auto' && slidingWindowRef.current) {\r\n            slidingWindowRef.current.style.transform = '';\r\n        }\r\n    }, [slidingType]);\r\n    useEffect(() => {\r\n        (async () => {\r\n            try {\r\n                if (db && isLanguageLoading === false && language) {\r\n                    const layoutPresetTx = db.transaction('presetLayoutStore', 'readonly');\r\n                    const layoutPresetList: {\r\n                        key: string,\r\n                        content: FramePreset,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of layoutPresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        layoutPresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as FramePreset,\r\n                        });\r\n                    }\r\n                    await layoutPresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ layoutPresetList });\r\n\r\n                    const imagePresetTx = db.transaction('presetImageStore', 'readonly');\r\n                    const imagePresetList: {\r\n                        key: string,\r\n                        content: ImagePreset,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of imagePresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        imagePresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as ImagePreset,\r\n                        });\r\n                    }\r\n                    await imagePresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ imagePresetList });\r\n\r\n                    const nameStylePresetTx = db.transaction('presetNameStyleStore', 'readonly');\r\n                    const nameStylePresetList: {\r\n                        key: string,\r\n                        content: Partial<NameStyle>,\r\n                    }[] = [];\r\n\r\n                    for await (const cursor of nameStylePresetTx.store) {\r\n                        const { content, key } = cursor.value;\r\n                        nameStylePresetList.push({\r\n                            key,\r\n                            content: JSON.parse(content) as Partial<NameStyle>,\r\n                        });\r\n                    }\r\n                    await nameStylePresetTx.done;\r\n                    useGlobalMemory.getState().updateGlobalMemory({ nameStylePresetList });\r\n                }\r\n            } catch (e) {\r\n                console.error('Error reading database', e);\r\n                notification.error({\r\n                    message: language['error.database-initialize.message'],\r\n                    description: language['error.database-initialize.description'],\r\n                });\r\n            }\r\n        })();\r\n    }, [db, isLanguageLoading, language]);\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'SVN-Times New Roman Italic',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing || !dbReady;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                onScroll={e => {\r\n                    const currentScrollY = e.currentTarget.scrollTop;\r\n                    if (slidingWindowRef.current && containerWindowRef.current && slidingType === 'auto') {\r\n                        const viewportWidth = document.body.clientWidth;\r\n                        // const viewportHeight = window.innerHeight;\r\n                        const padding = viewportWidth < 1600 ? 0 : 10;\r\n                        const viewportHeight = e.currentTarget.getBoundingClientRect().height;\r\n                        const slidingWindowHeight = slidingWindowRef.current.getBoundingClientRect().height;\r\n                        /** If the sliding window fit entirely inside viewport, just keep their position updated */\r\n                        if (viewportHeight > slidingWindowHeight + padding) {\r\n                            const threshold = Math.max(\r\n                                0,\r\n                                containerWindowRef.current.getBoundingClientRect().height - slidingWindowHeight\r\n                            );\r\n                            slidingWindowRef.current.style.transform = `translateY(${Math.max(\r\n                                0,\r\n                                Math.min(threshold, currentScrollY) - padding,\r\n                            )}px)`;\r\n                        } else {\r\n                            /** It's not worth to deal with this case right now, as the UX here is very complex */\r\n                            slidingWindowRef.current.style.transform = '';\r\n                        }\r\n                    }\r\n                }}\r\n                className={`language-${languageInfo.codeName} manager_${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL\r\n                        }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobile ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                        '--cropper-width': `${CROPPER_WIDTH}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div ref={containerWindowRef} className={mergeClass(\r\n                        'card-preview-panel',\r\n                        isTainted ? 'export-tainted' : 'export-normal',\r\n                        `sliding-type_${slidingType}`,\r\n                    )}>\r\n                        <div ref={slidingWindowRef} className=\"preview-sliding-window\">\r\n                            <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                                <div className=\"imexport\">\r\n                                    <ExportPanel ref={exportPanelRef}\r\n                                        tainted={isTainted}\r\n                                        artworkCanvas={artworkCanvasRef.current}\r\n                                        onRequireExportData={exportData}\r\n                                        onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                        onClose={forceRefocus}\r\n                                    />\r\n                                    <div />\r\n                                    <ImportPanel ref={importPanelRef}\r\n                                        onImport={treatNewCard}\r\n                                        onClose={forceRefocus}\r\n                                        allowHotkey={allowHotkey}\r\n                                        language={language}\r\n                                    />\r\n                                </div>\r\n                                <BatchConverter language={language} />\r\n                                <DownloadButton ref={downloadButtonRef}\r\n                                    canvasMap={canvasMap}\r\n                                    imageChangeCount={imageChangeCount}\r\n                                    isTainted={isTainted}\r\n                                    isInitializing={isInitializing}\r\n                                    globalScale={globalScale}\r\n                                    onDownloadError={alertDownloadError}\r\n                                />\r\n                                {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                    <div className=\"alert-label\">\r\n                                        {language['alert.download.tainted-first-line']}<br />\r\n                                        {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                    </div>\r\n                                    <Dropdown\r\n                                        className=\"save-button-dropdown\"\r\n                                        placement=\"bottomRight\"\r\n                                        overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                    >\r\n                                        <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                            <GatewayOutlined className=\"resolution-icon\" />\r\n                                            <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                        </ResolutionButton>\r\n                                    </Dropdown>\r\n                                </div>}\r\n                            </StyledDataButtonPanelContainer>\r\n                            <CardPreviewContainer className=\"card-preview-container\">\r\n                                <Tooltip title={language['generic.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl+Y / ⌘+Y</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                                 * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                                 */}\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                    id=\"preview-canvas\"\r\n                                    ref={previewCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                    <canvas\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                        id=\"export-canvas\"\r\n                                        ref={exportCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                    <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                        {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                    </div>\r\n                                    <canvas id=\"frameCanvas\"\r\n                                        key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                        ref={frameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"nameCanvas\"\r\n                                        ref={nameCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={148 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"cardIconCanvas\"\r\n                                        ref={cardIconCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={222 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumScaleCanvas\"\r\n                                        ref={pendulumScaleCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"pendulumEffectCanvas\"\r\n                                        ref={pendulumEffectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={920 * globalScale}\r\n                                    />\r\n                                    <canvas id=\"typeCanvas\"\r\n                                        ref={typeCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"effectCanvas\"\r\n                                        ref={effectCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"statCanvas\"\r\n                                        ref={statCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"setIdCanvas\"\r\n                                        ref={setIdCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"passwordCanvas\"\r\n                                        ref={passwordCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"creatorCanvas\"\r\n                                        ref={creatorCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"stickerCanvas\"\r\n                                        ref={stickerCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas id=\"finishCanvas\"\r\n                                        ref={finishCanvasRef}\r\n                                        width={CanvasWidth * globalScale}\r\n                                        height={CanvasHeight * globalScale}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={artworkCanvasRef}\r\n                                    />\r\n                                    <canvas className=\"crop-canvas\"\r\n                                        ref={backgroundCanvasRef}\r\n                                    />\r\n                                </CardCanvasGroupContainer>\r\n                            </CardPreviewContainer>\r\n                        </div>\r\n                        {windowSlidable && <Moveable\r\n                            ref={moveableRef}\r\n                            target={slidingWindowRef}\r\n                            className=\"sliding-movable-window\"\r\n                            draggable={true}\r\n                            throttleDrag={1}\r\n                            edgeDraggable={false}\r\n                            startDragRotate={0}\r\n                            throttleDragRotate={0}\r\n                            throttleScale={0}\r\n                            snappable={true}\r\n                            pinchable={true}\r\n                            snapContainer={'.card-preview-panel'}\r\n                            bounds={{\r\n                                left: 0,\r\n                                top: 0,\r\n                                right: 0,\r\n                                bottom: 0,\r\n                                position: 'css',\r\n                            }}\r\n                            onDrag={e => {\r\n                                if (slidingType === 'manual') e.target.style.transform = e.transform;\r\n                            }}\r\n                        />}\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}