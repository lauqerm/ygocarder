{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","util/condenser.ts","util/font.tsx","util/gradient.ts","util/navigation.ts","3rd/index.ts","util/codec.ts","util/index.tsx","component/loading/index.tsx","component/icon-button/index.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card.ts","service/use-setting.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/explanation/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/setting/index.tsx","component/app-header/index.tsx","component/index.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/radio-train.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/canvas-panel/download-button.tsx","service/use-card-export.ts","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["CanvasConst","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","NO_ATTRIBUTE","AttributeList","nameKey","color","label","NO_ICON","IconList","CloseCircleOutlined","value","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","Object","values","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","DefaultFontSizeData","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","DefaultEffectFontData","alphabetFont","furiganaFont","headTextHeightRatio","ordinalFont","symbolFont","symbolFontRatio","headTextGapRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","labelKey","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","headTextOverflow","headTextBold","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","labelBackgroundColorList","labelBackgroundImage","join","frameList","arrowPositionList","top","left","width","height","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","frame","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artCrop","x","y","unit","aspect","hasBackground","background","backgroundCrop","linkMap","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isDuelTerminalCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkLink","checkMonster","checkSpeedSkill","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","resolveNameStyle","isSpeedSkill","lightHeader","contextualFont","contextualColor","resultNameStyle","contextualOutline","strokeStyle","foilStyle","frameStyle","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","Math","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","replaceAll","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","stringifyPalette","palette","offset","parsePalette","stringifiedPalette","split","index","id","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","console","info","onBlur","onKeyDown","e","preventDefault","JSONUncrush","n","substring","length","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","serialize","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","newKey","JSON","stringify","decompressCardData","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","parse","decodeURIComponent","rebuildCardData","baseCard","migrateCardData","migratedCard","clone","kanjiHelper","undefined","randomCharacter","charSet","result","charactersLength","charAt","floor","random","insertUrlParam","window","history","pushState","searchParams","URLSearchParams","location","search","set","newurl","protocol","host","pathname","toString","path","normalizedCardName","forceRefocus","selector","document","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","parseInt","slice","isNaN","isMobileDevice","a","check","navigator","userAgent","vendor","opera","test","substr","mergeClass","args","Boolean","StyledLoadingFullViewContainer","styled","div","Loading","FullView","className","StyledIconButtonContainer","span","IconButton","Icon","onClick","iconProps","tooltipProps","containerProps","customOnClick","restContainerProps","changeCardFormat","targetFormat","termMap","newSetId","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","applyTemplateNode","template","nodeMap","splitRegex","splittedString","Fragment","specializedDictionary","familyName","siteLink","author1","author2","artist1","artist2","artist3","artist4","settingIcon","openTag","closeTag","hotkey","hotkeyAlternative","separator","scaleType","dictionary","useI18N","create","get","defaultLanguageName","url","URL","href","initialParam","defaultLanguageFromURL","delete","replaceState","state","cachedLanguage","localStorage","getItem","error","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguageMetadata","fetch","process","headers","response","json","languageMetadataMap","Error","isMetadataReady","eng","loadLanguage","languageName","languageData","processedLanguage","changeLanguage","nextMeta","languageInfo","language","setItem","isLoading","isInitiating","initiate","loadDefaultLanguage","useLanguage","getLanguage","getState","decodeCardWithCompatibility","cardData","decodedCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","getUpdater","valueTransform","variant","returnFunction","current","target","variantConfig","useSetting","cachedStore","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","setting","updateSetting","transformerOrPayload","currentStore","newSetting","CanvasHeight","CanvasWidth","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","ready","normalizedX","normalizedY","drawImage","imageCached","cache","Image","src","addEventListener","once","drawAsset","drawFromWithSize","dw","dh","normalizedW","normalizedH","drawAssetWithSize","drawWithColor","canvas","sw","sh","dx","dy","cloneCanvasStyle","getContext","clonedCanvas","createElement","clonedCtx","willReadFrequently","rgbaColor","imageRasterData","getImageData","data","resetStyle","imageDataWithShadow","imageRasterDataWithShadow","combinedLayerData","combinedLayerRasterData","pixelCnt","destinationAlpha","putImageData","getLetterWidth","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","scale","tokenizeText","keepControlCharacter","regex","token","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","cnt","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","baseXRatio","scaledWidth","tokenList","addedLineCount","wordList","currentLineWidth","currentGap","unCompressedFlag","tokenWidth","line","trim","push","isLast","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","spaceWidth","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","getEffectFontAndCoordinate","isNormal","statInEffect","typeInEffect","coordinateKey","fontDataKey","sizeList","drawEffect","content","textStyle","effectSizeLevel","normalizedContent","tolerancePerSentence","materialReplacement","material","effectText","fullLineList","wholeLineRegex","exec","effectFlavorCondition","flavorConditionRegex","potentialFlavorConditionText","splitEffect","trueWidthStart","trueBaselineStart","lineListWithRatio","fullLineListWithRatio","totalContentWidth","lineSpaceCount","expectedSpaceWidth","analyzeLine","drawStarContent","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","coordinate","starWidth","drawSticker","toLowerCase","drawPredefinedMark","isLink","bordered","drawLinkRatingText","topToPendulumStructure","pendulumStructureHeight","leftToPendulumStructure","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","drawCardArt","drawBackground","boundary","backgroundWidth","backgroundHeight","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","getNameGradient","angleAsDegree","colorStopList","contentWidth","maxAscent","maxDescent","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","gradient","createLinearGradient","addColorStop","drawName","cloneNode","cloneCtx","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","internalEffectiveMedian","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","drawTypeAbility","isMonster","willDrawTypeAbility","typeAbilityWithIcon","willDrawIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawScale","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","drawCanvasRef","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","checkNormal","requireShadow","lightFooter","useMemo","levelColor","levelStyle","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","resolvedEffectTextStyle","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","resolvedPendulumEffectTextStyle","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","resolvedTypeTextStyle","customStatText","statTextFillStyle","statHasShadow","statTextShadow","resolvedStatTextStyle","prepareStyle","normalizedSubFamily","toUpperCase","normalizedTypeAbility","isInitializing","imageChangeCount","readyToDraw","drawingPipeline","useRef","rerun","instructor","overlay","useEffect","hasArtBorder","fillBaseColor","w","h","fillRect","artHeight","withShadow","spacing","xOffset","drawSetId","endOfPassword","baselineOffset","isNumberPassword","internalTextData","internalTrueWidth","drawPasswordText","draw1stEdition","drawCreatorText","typeCtx","effectIndexSize","drawHistory","onExport","useCallback","exportProps","canvasRef","exportCtx","generateLayer","canvasLayer","delayQueue","setTimeout","toBlob","blob","createObjectURL","layer","onload","revokeObjectURL","onerror","sort","l","normalizeCrop","crop","cropWidth","cropHeight","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","isRatioAcceptable","abs","ImageCropper","React","forwardRef","forwardedRef","title","backgroundColor","defaultExternalSource","receivingCanvas","children","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","fileInputRef","useState","crossorigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setLoading","setError","externalSource","setExternalSource","imgRef","completed","setCrop","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","fitCropData","newValue","useImperativeHandle","hasImage","forceExternalSource","cropInfo","isDownloadable","DownloadOutlined","previewUrl","anchor","download","click","generateDownload","Group","onChange","Button","checked","ExclamationCircleOutlined","placeholder","maxLength","allowClear","ref","accept","files","reader","FileReader","readAsDataURL","alert","setValue","imageStyle","backgroundImage","onImageLoaded","onImageError","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","LinkMarkChooser","defaultValue","choosenArrow","setChoosenArrow","rotateMap","literalChoosenArrow","normalizedIndex","newMap","Explanation","overlayClassName","rest","restIconProps","StyledCode","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","alt","FormattingHelpDrawer","modalOpen","setDrawerOpen","footer","visible","onClose","SettingFilled","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","css","SettingButton","trigger","placement","Affiliation","rel","GithubFilled","StyledAppSettingContainer","AppHeader","TaintedCanvasWarning","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","IconTypeMap","fullLabelKey","icon","IconTypeList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","getElementById","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","setCurrentOffset","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","intialPalette","currentControlId","setPalette","changePalette","nextColorList","newPalette","setPickerOnMount","relevant","targetColor","find","disabled","Number","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","nextId","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","colors","PredefinedOptionGrid","containerRef","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","setCnt","useRefresh","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","applyCustomStyle","onVisibleChange","CaretDownOutlined","fontValue","InputTrainStyle","TrainGridStyle","StyledRadioTrainContainer","RadioTrain","activeValue","optionList","suffix","internalRef","isChecked","StyledFrameTrain","FrameTrain","onSTFrameChange","useShallow","changeFrame","frameValue","currentCard","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackground","changeBackgroundCrop","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","noBackground","activable","destroyTooltipOnHide","fit","full","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","Set","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","TextArea","Input","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","normalizedValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ev","ctrlKey","metaKey","currentTarget","has","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","rows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","onDuelTerminalCardChange","onSpeedCardChange","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","addonBefore","SyncOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changePicture","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","clipboard","writeText","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","currentPendulumFrame","willBecomePendulum","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","startsWith","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","TextStylePicker","styleList","custom","shadow","applyStyle","applyShadow","shadowValue","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","forceCardData","formatValue","nextFormat","formatSwappedCard","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","StyledDownloadButton","DownloadButton","isTainted","onDownloadError","exportRef","currentPipeline","pipelineRunning","isDownloading","setDownloading","onDownloadComplete","onSave","pendingSave","drawCanvas","cloneCanvas","drawCanvasContext","cloneCanvasContext","normalizedName","link","toDataURL","classList","remove","confirmReload","setAttribute","isRelevant","add","removeEventListener","queuingSize","useCardExport","domEvent","MenuOutlined","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","LightboxButton","ResetButton","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","cardInputRef","downloadButtonRef","setImageChangeCount","styleName","setProperty","WebFont","load","families","urls","retrievedCard","localCardVersion","localCardData","cardURLData","retrieveSavedCard","fontinactive","fvd","inactive","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","styleContent","setStyleContent","ocgReady","loadAttempt","useOCGFont","setTainted","documentClassList","displayLightbox","status","fromHotkey","importData","event","prompt","mergeData","exportData","exportableCard","downloadFromHotkey","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","keyMap","handlers","onDrop","confirm","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","wrapClassName","forceRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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D,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SAC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","file":"static/js/main.2191c8d8.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary: {\r\n    fit: string,\r\n    full: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary.full,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    drawCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artType = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    return CardArtCanvasCoordinateMap[artType];\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'TRAP',\r\n        color: '#c32a8c',\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n    },\r\n];\r\n\r\nexport const StickerList = [\r\n    'no-sticker',\r\n    'gold',\r\n    'silver',\r\n    'beta',\r\n    'holo5',\r\n    'holo4',\r\n    'holo3',\r\n    'holo2',\r\n    'holo1',\r\n    'limited',\r\n    'unlimited',\r\n];","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to ready. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const getFoilList = (dictionary: FoilDictionary) => [\r\n    {\r\n        name: 'normal' as const,\r\n        label: dictionary.normal,\r\n        color: '#747b95',\r\n    },\r\n    {\r\n        name: 'gold' as const,\r\n        label: dictionary.gold,\r\n        color: '#cfa65f',\r\n    },\r\n    {\r\n        name: 'platinum' as const,\r\n        label: dictionary.platinum,\r\n        color: '#b1b1b1',\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    ordinalFontOffsetY?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 0.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"stone-serif-regular\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList = [\r\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7 },\r\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 800,\r\n        '2': 850,\r\n        '3': 900,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator */\r\n    '©高橋和希 スタジオ・ダイス／集英社': '©1996 KAZUKI TAKAHASHI',\r\n    '©スタジオ・ダイス／集英社・テレビ東京・KONAMI': '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const arrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?\\\\([\\\\w\\\\W]+\\\\)${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ICON } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    } as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18111996',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isDuelTerminalCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n});\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: 'no-sticker',\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isDuelTerminalCard: false,\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n];\r\n\r\nexport * from './icon';\r\nexport * from './canvas';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'link' && checkMonster(card);\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil].value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function' ? nextSize(sizeAsNumber) : nextSize;\r\n            size = typeof calculatedSize === 'number' ? `${calculatedSize}px` : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number' ? calculatedSize : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultTextStyle, getEmptyCard } from '../model';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n    serialize = true,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey], false);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    if (serialize) return JSON.stringify(condensedCard);\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                fullCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\n\r\nexport const rebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    baseCard?: Card,\r\n) => {\r\n    const normalizedCard = typeof card === 'string'\r\n        ? JSON.parse(card)\r\n        : card;\r\n    const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n    return migrateCardData(fullCard, baseCard);\r\n};\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let fullCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        fullCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        fullCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(fullCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): Card => {\r\n    const migratedCard = {\r\n        ...baseCard,\r\n        ...clone(card)\r\n    };\r\n\r\n    if (migratedCard.effectStyle == null) {\r\n        migratedCard.effectStyle = {\r\n            ...getEmptyCard().effectStyle\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if (migratedCard.hasBackground == null && (migratedCard.background || migratedCard.opacity.baseFill)) migratedCard.hasBackground = true;\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol + '//' + window.location.host + window.location.pathname + '?' + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const normalizedCardName = (name: string) => {\r\n    return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './navigation';\r\nexport * from './codec';","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    onClick: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <Icon {...iconProps} />\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};","import { Card, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: Card, targetFormat: string): Card => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = window.localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            window.localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Card, getDefaultCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport { rebuildCardData, migrateCardData, legacyRebuildCardData } from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\n\r\nexport const decodeCardWithCompatibility = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): Card => {\r\n    let decodedCard = getEmptyCard();\r\n    if (!cardData) return decodedCard;\r\n    try {\r\n        decodedCard = rebuildCardData(cardData, baseCard);\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return decodedCard;\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = () => {\r\n    try {\r\n        const localCardVersion = window.localStorage.getItem('card-version');\r\n        const localCardData = window.localStorage.getItem('card-data');\r\n\r\n        const cardURLData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (cardURLData) {\r\n            return decodeCardWithCompatibility(cardURLData);\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return migrateCardData(JSON.parse(localCardData)) as Card;\r\n        }\r\n        return getDefaultCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport type CardStore = {\r\n    card: Card,\r\n    setCard: (cardTransform: Card | ((currentCard: Card) => Card)) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultCard(),\r\n        setCard: cardTransform => {\r\n            if (typeof cardTransform === 'function') set(cur => ({ card: cardTransform(cur.card) }));\r\n            else set({ card: cardTransform });\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(window.localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                window.localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { hexToRGBA } from 'src/util';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** @todo Do manual caching really needed? Need proper benchmark for this. */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            resolve(true);\r\n        } else {\r\n            if (imageCacheMap[source]?.error) {\r\n                resolve(true);\r\n                return;\r\n            }\r\n            const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n            const image = imageCached\r\n                ? imageCacheMap[source].image\r\n                : new Image();\r\n\r\n            if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n            image.addEventListener(\r\n                'load',\r\n                () => {\r\n                    const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                    const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                    ctx.drawImage(image, normalizedX, normalizedY);\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                    resolve(true);\r\n                },\r\n                { once: true },\r\n            );\r\n            image.addEventListener(\r\n                'error',\r\n                () => {\r\n                    imageCacheMap[source].error = true;\r\n                    resolve(false);\r\n                },\r\n                { once: true },\r\n            );\r\n\r\n            if (!imageCached) imageCacheMap[source] = {\r\n                image: image,\r\n                ready: false,\r\n                error: false,\r\n                cache: true,\r\n            };\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            resolve(true);\r\n        } else {\r\n            if (imageCacheMap[source]?.error) {\r\n                resolve(true);\r\n                return;\r\n            }\r\n            const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n            const image = imageCached\r\n                ? imageCacheMap[source].image\r\n                : new Image();\r\n\r\n            if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n            image.addEventListener(\r\n                'load',\r\n                () => {\r\n                    const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                    const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                    const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                    const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n        \r\n                    ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                    resolve(true);\r\n                },\r\n                { once: true },\r\n            );\r\n            image.addEventListener(\r\n                'error',\r\n                () => {\r\n                    imageCacheMap[source].error = true;\r\n                    resolve(false);\r\n                },\r\n                { once: true },\r\n            );\r\n\r\n            if (!imageCached) imageCacheMap[source] = {\r\n                image: image,\r\n                ready: false,\r\n                error: false,\r\n                cache: true,\r\n            };\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithColor = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    color: string,\r\n    sw: number, sh: number,\r\n    dx: number, dy: number,\r\n    cloneCanvasStyle?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n\r\n    const rgbaColor = hexToRGBA(color);\r\n    const imageRasterData = clonedCtx.getImageData(0, 0, sw, sh).data;\r\n\r\n    /** In some rare case, this image need shadow (for example \"LINK\" text).\r\n     * So we apply shadow into the clone node, then DRAW THE IMAGE AGAIN. This time image data will be a combined data from both the original image and the newly applied shadow.\r\n     */\r\n    const resetStyle = setTextStyle({ ctx: clonedCtx, ...cloneCanvasStyle });\r\n    await drawAsset(clonedCtx, source, 0, 0);\r\n    const imageDataWithShadow = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const imageRasterDataWithShadow = imageDataWithShadow.data;\r\n    resetStyle();\r\n\r\n    /** Because the new image data will replace the old one (no blending mode), it will erase the pixel of the current canvas underneath. To solve this we will draw the current canvas into the clone canvas first, before putting new image into it. */\r\n    clonedCtx.clearRect(0, 0, sw, sh);\r\n    clonedCtx.drawImage(canvas, dx, dy, sw, sh, 0, 0, sw, sh);\r\n\r\n    const combinedLayerData = clonedCtx.getImageData(0, 0, sw, sh);\r\n    const combinedLayerRasterData = combinedLayerData.data;\r\n\r\n    for (let pixelCnt = 0; pixelCnt < combinedLayerRasterData.length; pixelCnt += 4) {\r\n        /** If raster data at this pixel have the same coordinate with raster data from the original image, draw it with manipulated color. */\r\n        if (imageRasterData[pixelCnt + 3] > 0) {\r\n            /** Change ratio based on the original color value, compare to pitch black #000000 */\r\n            combinedLayerRasterData[pixelCnt + 0] = rgbaColor[0] * (1 - imageRasterData[pixelCnt + 0] / 255);\r\n            combinedLayerRasterData[pixelCnt + 1] = rgbaColor[1] * (1 - imageRasterData[pixelCnt + 1] / 255);\r\n            combinedLayerRasterData[pixelCnt + 2] = rgbaColor[2] * (1 - imageRasterData[pixelCnt + 2] / 255);\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** If raster data at this pixel have the same coordinate with raster data from the image with shadow, draw the shadow. */\r\n        else if (imageRasterDataWithShadow[pixelCnt + 3] > 0) {\r\n            const destinationAlpha = imageRasterDataWithShadow[pixelCnt + 3] / 255;\r\n\r\n            combinedLayerRasterData[pixelCnt + 0] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 0]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 0];\r\n            combinedLayerRasterData[pixelCnt + 1] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 1]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 1];\r\n            combinedLayerRasterData[pixelCnt + 2] = (1 - destinationAlpha) * combinedLayerRasterData[pixelCnt + 2]\r\n                + destinationAlpha * imageRasterDataWithShadow[pixelCnt + 2];\r\n            combinedLayerRasterData[pixelCnt + 3] = 255;\r\n        }\r\n        /** Otherwise all other pixel belong to the background canvas, and is untouched. */\r\n    }\r\n\r\n    ctx.putImageData(combinedLayerData, dx, dy);\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (NB_WORD_OPEN and NB_WORD_CLOSE) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully enforced with line control characters (NB_LINE_OPEN and NB_LINE_CLOSE), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2),\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText;\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicaable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    let effectSizeLevel = 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n        ? CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n        : {\r\n            '1': 800,\r\n            '2': 800,\r\n            '3': 800,\r\n        };\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length) {\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? 'italic' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                ctx.font = currentFont.setStyle('').getFont();\r\n                let tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                tokenList = tokenList[0] === '\\n'\r\n                    ? tokenList.slice(1)\r\n                    : tokenList;\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst } from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === 'no-sticker') return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */\r\nexport const drawPredefinedMark = async ({\r\n    ctx,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n}) => {\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [250, 1087, 180, 20]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [250, 1090, 176.4, 18]\r\n            : isLink\r\n                ? [151, 855, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawAssetWithSize(ctx, `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`, ...coordinate);\r\n    }\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    cloneCanvasStyle: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    const color = cloneCanvasStyle.color ?? '#000000';\r\n    await drawWithColor(\r\n        canvas,\r\n        'link/link-text.png',\r\n        color,\r\n        120, 30,\r\n        600, 1080,\r\n        cloneCanvasStyle,\r\n    );\r\n    // await drawAsset(ctx, 'link/link-text.png', 600, 1080);\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n};","import {\r\n    arrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithColor } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit'\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = arrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (color: string) => {\r\n            await drawWithColor(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                color,\r\n                813, 20,\r\n                0, 1070,\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied. In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enought to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { fillTextLeftWithSpacing, fillTextRightWithSpacing } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baselineOffset = 0,\r\n    option = { stroke: false },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, 1150.93 + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, 1150.93);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, 1143.53 + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, 1143.53);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, 1150.93 + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, 1150.93);\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: { isPendulum: boolean, isLink: boolean, withShadow: boolean, format: string, lightFooter: boolean }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter } = option;\r\n    let spacing = 0.175;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.fillStyle = (lightFooter && !isPendulum) ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = withShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = withShadow && !isPendulum ? 3 : 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n};\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        drawCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : '/');\r\n    const statInEffect = pendulumFrame !== 'auto' || isPendulum\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    const drawingPipeline = useRef<Record<string, { name: string, order: number, rerun: number, instructor: () => Promise<any> }>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = frameCanvasRef.current?.getContext('2d');\r\n        const artworkCanvas = artworkCanvasRef.current;\r\n        const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            if (!frameCanvasRef.current || !clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                ctx.fillRect(x, y, w, h);\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawFrame,\r\n                drawCardArt,\r\n                drawBackground,\r\n                drawPendulumScaleIcon,\r\n                drawLinkArrowMap,\r\n                drawStar,\r\n                drawAttribute,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                ctx,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n            }\r\n        );\r\n    }, [readyToDraw, format, isLink, isPendulum, lightFooter, setIdCanvasRef, setId, isSpeedSkill, bottomFrame, requireShadow]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n        });\r\n        if (isFirstEdition && !isDuelTerminalCard) {\r\n            ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0),\r\n                isSpeedSkill ? -2 : -1,\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n    ]);\r\n\r\n    /** DRAW CREATOR TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawCreatorText({\r\n            ctx: creatorCanvasRef.current?.getContext('2d'),\r\n            format,\r\n            value: creator,\r\n            alignment: 'right',\r\n            baselineOffset: isSpeedSkill ? -2 : 0,\r\n            hasShadow: requireShadow,\r\n            lightFooter,\r\n        });\r\n    }, [readyToDraw, isPendulum, lightFooter, creator, creatorCanvasRef, format, requireShadow, isSpeedSkill]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize === 0 ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        condenseTolerant,\r\n        effect,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n            });\r\n        }\r\n    }, [readyToDraw, condenseTolerant, format, isPendulum, pendulumEffectCanvasRef, pendulumEffect, furiganaHelper, resolvedPendulumEffectTextStyle]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const canvasRef = drawCanvasRef.current;\r\n        const exportCtx = canvasRef?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not a making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (canvasRef && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                }));\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(canvasRef, 0, 0);\r\n        }\r\n    }, [\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        drawCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedStatTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return result.tokenEdge;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas } from '../canvas-util';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    ctx.fillStyle = lightFooter ? '#ffffff' : '#000000';\r\n    ctx.shadowColor = hasShadow\r\n        ? lightFooter ? '#000000' : '#ffffff'\r\n        : '#000000';\r\n    ctx.shadowOffsetY = 0;\r\n    ctx.shadowOffsetX = 0;\r\n    ctx.shadowBlur = hasShadow ? 3 : 0;\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return result;\r\n};","import { Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\nimport { useLanguage } from 'src/service';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n\r\n    return {\r\n        ...crop,\r\n        x: x < 0 ? 0 : x,\r\n        y: y < 0 ? 0 : y,\r\n        height: isRatioAcceptable\r\n            ? height\r\n            : width * image.naturalWidth /** Restore original size */\r\n                / ratio /** Get height with corresponding aspect ratio */\r\n                / image.naturalHeight /** Convert back to percent */,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    hasImage: () => boolean,\r\n    forceExternalSource: (artLink: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (source: string) => void,\r\n    onSourceLoaded?: () => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    onTainted: () => void,\r\n}\r\nexport const ImageCropper = React.forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        // setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n    const [inputMode, setInputMode] = useState<'internal' | 'external'>('external');\r\n    const [internalSource, setInternalSource] = useState('');\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            setLoading(true);\r\n            const reader = new FileReader();\r\n            reader.addEventListener('load', () => {\r\n                if (typeof reader.result === 'string') {\r\n                    setInternalSource(reader.result);\r\n                    setSourceType('internal');\r\n                    setInputMode('internal');\r\n                    setLoading(false);\r\n                }\r\n            });\r\n            reader.readAsDataURL(e.target.files[0]);\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded();\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setLoading(true);\r\n        setSourceType('external');\r\n        setInputMode('external');\r\n        onSourceChange(source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /** Automatically center current crop section. @todo For the best UX, it should actually be proportional based on the x and y before the snap. */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        receivingCanvas.width = (drawWidth ?? 0);\r\n        receivingCanvas.height = (drawHeight ?? 0);\r\n\r\n        ctx.drawImage(\r\n            image,\r\n            drawCoordinateX,\r\n            drawCoordinateY,\r\n            drawWidth,\r\n            drawHeight,\r\n            0,\r\n            0,\r\n            drawWidth,\r\n            drawHeight,\r\n        );\r\n        if (sourceType === 'internal' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal]);\r\n\r\n    useEffect(() => {\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'internal')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'external'),\r\n        forceExternalSource: (source, cropInfo) => {\r\n            const currentSource = sourceType === 'internal' ? internalSource : externalSource;\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType('external');\r\n                setInputMode('external');\r\n                onSourceChange(source);\r\n                setExternalSource(source);\r\n            }\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const isDownloadable = receivingCanvas && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{ overlay: isDownloadable\r\n                                    ? language['image-cropper.download']\r\n                                    : language['image-cropper.no-download'] }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'internal')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'external')\r\n                                ) setSourceType(value);\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'external'} checked={inputMode === 'external'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip title={<div className=\"image-warning\">\r\n                                {language['image-cropper.offline-warning']}\r\n                            </div>}>\r\n                                <Radio.Button value={'internal'} checked={inputMode === 'internal'}>\r\n                                    {language['image-cropper.source.offline.tooltip']} <ExclamationCircleOutlined />\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'external' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {error\r\n                            ? <div className=\"online-image-tip image-warning\">\r\n                                {language['image-cropper.not-found-warning']}\r\n                            </div>\r\n                            : <div className=\"online-image-tip\">\r\n                                {language['image-cropper.online-tip']}\r\n                            </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'internal' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\">\r\n                {isLoading && <Loading.FullView />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'internal' ? internalSource : externalSource}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        setError('Image error');\r\n                        setLoading(false);\r\n                        if (sourceType === 'external' && (externalSource ?? '') === '' && receivingCanvas) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType);\r\n                            onSourceLoaded();\r\n                        } else {\r\n                            onTainted();\r\n                        }\r\n                        // setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport './link-marker.scss';\r\n\r\nexport type LinkMarkChooser = {\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const rotateMap = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <div className=\"link-marker-chooser\">\r\n        <div className=\"title\">\r\n            {language['link-picker.label']}\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip key=\"5\" overlay={language['link-picker.reset.tooltip']}>\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div className={`link-marker-icon link-marker-icon-${index + 1}`} style={{ transform: `rotate(${rotateMap[index]}deg)` }} />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </div>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport './explanation.scss';\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport './formatting-guide.scss';\r\nimport { useLanguage } from 'src/service';\r\n\r\nconst StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n`;\r\nconst StyledSettingButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .setting-button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon-setting {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon-setting {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"setting-button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { GithubFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledAppSettingContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                {/** Temporary disable until Japanese is translated */}\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<div className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </div>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppSettingContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppSettingContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    const language = useLanguage();\r\n\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<div className=\"disclaimer\">\r\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n        </div>}\r\n    />;\r\n};","import styled from 'styled-components';\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport { ImageCropper } from './image-cropper';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './setting';\r\nexport * from './app-header';","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>) => AttributeList.map(({ name, nameKey }) => ({\r\n    label: name === NO_ATTRIBUTE\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n            />\r\n            </Tooltip>,\r\n    value: name,\r\n}));\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img alt={dictionary[nameKey]} src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`} />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\nexport const IconTypeMap: Record<string, { value: string, labelKey: string, fullLabelKey: string, icon: React.ReactNode }> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);\r\n\r\nexport const StickerButtonList = StickerList.map(name => ({\r\n    label: name === 'no-sticker'\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={name} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${name.toLowerCase()}.png`} />,\r\n    value: name,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n    .char-picker-guideline {\r\n\r\n    }\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(40px, 1fr));\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\nimport { useLanguage } from 'src/service';\r\n\r\ntype WrappedColorPicker = {\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: ({ color, offset, id }) => {\r\n            const { min, max, round } = Math;\r\n\r\n            setInternalColor(color);\r\n            setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n            setInternalId(id);\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0) pickerRef.current?.setColor(palette.colorList[nextId]);\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber, Slider } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <Slider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: string | number,\r\n    optionList: { label: React.ReactNode, value: string | number, tooltipProps?: React.ComponentProps<typeof Tooltip>, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: string | number) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nexport const RadioTrain = forwardRef<RadioTrainRef, RadioTrain>(({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}, ref) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip overlay={null} {...tooltipProps}>\r\n                    <label key={value}\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n});","import { useCard, useSetting } from 'src/service';\r\nimport { RadioTrain } from './radio-train';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: { background?: string, backgroundCrop?: Partial<ReactCrop.Crop> }) => void,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            backgroundCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop }) => {\r\n            if (typeof background === 'string' && backgroundCrop) {\r\n                imageCropperRef.current?.forceExternalSource(background, backgroundCrop);\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={changeBackground}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Slider, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { BackgroundType, getBackgroundTypeList, CardOpacity, DEFAULT_BASE_FILL_COLOR, OpacityList, getDefaultCardOpacity, DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { ImageCropper } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            hasBackground,\r\n            backgroundType,\r\n            background,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState({ ...getDefaultCardOpacity(), ...defaultValue });\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ background, backgroundCrop, ...newValue }) => {\r\n            if (typeof background === 'string' && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => ({ ...cur, ...newValue }));\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            {hasBackground\r\n                                ? background\r\n                                    ? <img className=\"background-image-preview\" src={background} alt=\"Background\" />\r\n                                    : null\r\n                                : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <Slider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain } from '../input-train';\r\nimport { StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { IconTypeList, IconTypeMap, StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        margin-left: var(--spacing-sm);\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: grid;\r\n        grid-template-columns: max-content max-content;\r\n        column-gap: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        setCard,\r\n    })));\r\n\r\n    const onFirstEditionChange = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, isFirstEdition: nextValue };\r\n    }), [setCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return {\r\n            ...currentCard,\r\n            isDuelTerminalCard: nextValue,\r\n            isSpeedCard: nextValue ? false : currentCard.isSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n    const onSpeedCardChange = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return {\r\n            ...currentCard,\r\n            isSpeedCard: e.target.checked,\r\n            isDuelTerminalCard: nextValue ? false : currentCard.isDuelTerminalCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay=\"Will turn off Duel Terminal mark.\">\r\n            <Checkbox\r\n                className=\"input-speed\"\r\n                onChange={onSpeedCardChange}\r\n                checked={isSpeedCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.speed-duel.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay=\"Will turn off Speed Duel mark.\">\r\n            <Checkbox\r\n                className=\"input-terminal\"\r\n                onChange={onDuelTerminalCardChange}\r\n                checked={isDuelTerminalCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.duel-terminal.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n    </StyledCheckboxGroup>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { RadioTrain, TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .creator-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={language['input.creator-text.label']}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser } from 'src/component';\r\nimport { RadioTrain } from '../input-train';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: { art?: string, artCrop?: Partial<ReactCrop.Crop> }) => void,\r\n};\r\nexport type ImageInputGroup = {\r\n    isLink: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    isLink,\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            art, artCrop,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        art, artCrop,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changePicture = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'internal' | 'external') => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(curr => ({\r\n            ...curr,\r\n            artCrop: cropInfo,\r\n        }));\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ art, artCrop }) => {\r\n            if (typeof art === 'string' && artCrop) {\r\n                imageCropperRef.current?.forceExternalSource(art, artCrop);\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultExternalSource={art}\r\n        defaultCropInfo={artCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={changePicture}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        {isLink\r\n            ? <LinkMarkChooser defaultValue={linkMap} onChange={changeLinkMap} />\r\n            : <div />}\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizedCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title=\"Copy\">\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizedCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { RadioTrain } from '../input-train';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 100px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            {frame !== 'link'\r\n                ? <Checkbox\r\n                    className=\"pendulum-checkbox\"\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n                : <div className=\"pendulum-checkbox-placeholder\" />}\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }} />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { RadioTrain } from '../input-train';\r\nimport { Explanation, FormattingHelpDrawer } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType } from 'src/model';\r\nimport { CondenseThresholdButtonList, IconTypeMap } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={language['input.condense.tooltip']}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-preview-section {\r\n        width: 8px;\r\n        height: 28px; // Alignment\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-bottom: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            statTextStyle,\r\n            typeTextStyle,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        statTextStyle,\r\n        typeTextStyle,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n    })));\r\n\r\n    const styleList = [\r\n        { info: TextStyleInfoMap.effectTextStyle, value: effectTextStyle },\r\n        { info: TextStyleInfoMap.pendulumTextStyle, value: pendulumTextStyle },\r\n        { info: TextStyleInfoMap.statTextStyle, value: statTextStyle },\r\n        { info: TextStyleInfoMap.typeTextStyle, value: typeTextStyle },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value }) => {\r\n                    const { keyName, labelKey } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {language['input.text-style.shadow.label']}\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            {styleList.map(({ info, value }) => {\r\n                const { keyName } = info;\r\n                const [custom, fillStyle, hasShadow, shadow] = value;\r\n\r\n                return <div key={keyName}\r\n                    className=\"text-style-preview-section\"\r\n                    style={{\r\n                        backgroundColor: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                        boxShadow: (custom && hasShadow) ? `0 0 0 2px ${shadow} inset` : ''\r\n                    }}\r\n                />;\r\n            })}\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    StandaloneLabel,\r\n} from '../../component';\r\nimport {\r\n    checkLink,\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain, RadioTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n}\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = React.forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isLink = checkLink({ frame });\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language), [format, language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop,\r\n                background, backgroundCrop,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop });\r\n            layoutPickerRef.current?.setValue({ ...opacity, background, backgroundCrop });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={language['input.layout.tooltip']}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || frame !== 'link' || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    isLink={isLink}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-resolution {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        padding: 4px 15px;\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n        },\r\n    );\r\n    const {\r\n        drawCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        drawCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: 'Your card is tainted, you must save manually',\r\n                description: 'Right click the card → Choose \"Save image as...\"',\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\" onClick={() => download()}>\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    {isDownloading\r\n                        ? language['button.download.ongoing.label']\r\n                        : language['button.download.label']}\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                    <StyledDownloadDropdownLabel disabled>{language['button.download.resolution.label']}</StyledDownloadDropdownLabel>\r\n                    {[\r\n                        { width: 549, height: 800 },\r\n                        { width: 813, height: 1185 },\r\n                    ].map(({ width, height }) => {\r\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\r\n                            onClick={() => {\r\n                                updateSetting({\r\n                                    resolution: [width, height],\r\n                                });\r\n                                forceRefocus();\r\n                            }}\r\n                        >\r\n                            {width} × {height}\r\n                        </StyledDownloadDropdownOption>;\r\n                    })}\r\n                </Menu>}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizedCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    drawCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    drawCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = drawCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const cloneCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const cloneCanvasContext = cloneCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && cloneCanvas && cloneCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    cloneCanvas.width = size[0];\r\n                    cloneCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                cloneCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, cloneCanvas.width, cloneCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizedCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = cloneCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [drawCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizedCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return 'Leave right now may make you lose unsaved progress, proceed?';\r\n        };\r\n        if (isInitializing === false) {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = drawCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({ isPendulum, opacity, isRelevant: () => relevant });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            const condensedCard = compressCardData(currentCard);\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n    };\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: var(--bw) solid var(--sub-secondary);\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 210px;\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: var(--spacing);\r\n        button {\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            box-shadow: var(--bs-button);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    CanvasConst,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    compressCardData,\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport { CardInputPanel, CardInputPanelRef, DownloadButton, DownloadButtonRef } from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    decodeCardWithCompatibility,\r\n    useCard,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'internal' | 'external'>('external');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const drawCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        drawCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = drawCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = drawCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const importData = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        const cardData = window.prompt(language['prompt.import.message']);\r\n        const setCard = useCard.getState().setCard;\r\n\r\n        if (cardData) {\r\n            const decodedCard = decodeCardWithCompatibility(cardData);\r\n\r\n            setCard(decodedCard);\r\n            setImageChangeCount(cnt => cnt + 1);\r\n            cardInputRef.current?.forceCardData(decodedCard);\r\n            /** Allow navigate input panel right away */\r\n            forceRefocus();\r\n        }\r\n    }, [allowHotkey, language]);\r\n\r\n    const mergeData = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        const cardData = window.prompt(language['prompt.import.message']);\r\n        const setCard = useCard.getState().setCard;\r\n\r\n        if (cardData) {\r\n            const decodedCard = decodeCardWithCompatibility(cardData, useCard.getState().card);\r\n\r\n            setCard(decodedCard);\r\n            setImageChangeCount(cnt => cnt + 1);\r\n            cardInputRef.current?.forceCardData(decodedCard);\r\n            /** Allow navigate input panel right away */\r\n            forceRefocus();\r\n        }\r\n    }, [allowHotkey, language]);\r\n\r\n    const exportData = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'internal') window.alert(language['prompt.export.offline-warning.message']);\r\n        const exportableCard = useCard.getState().card;\r\n\r\n        window.prompt(\r\n            language['prompt.export.message'],\r\n            `${compressCardData(exportableCard)}`,\r\n        );\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback(() => {\r\n        setCanvasKey(cnt => cnt + 1);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(false);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n                                    <button onClick={exportData}>\r\n                                        {language['button.export.label']}\r\n                                    </button>\r\n                                </Tooltip>\r\n                                <Tooltip overlay={allowHotkey ? <div className=\"center\">\r\n                                        <div>Ctrl-E / ⌘-E</div>\r\n                                        <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                                    </div> : null}>\r\n                                    <button onClick={importData}>\r\n                                        {language['button.import.label']}\r\n                                    </button>\r\n                                </Tooltip>\r\n                            </div>\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton className=\"reset-button\" onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = getDefaultCard();\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}>\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas id=\"export-canvas\" key={canvasKey + 0.1} ref={drawCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\" key={canvasKey} ref={frameCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width=\"843px\"\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}