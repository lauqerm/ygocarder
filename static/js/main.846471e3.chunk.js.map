{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/imgur.ts","util/navigation.ts","util/random.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","page/canvas-panel/batch-converter.tsx","page/canvas-panel/download-button.tsx","component/error-boundary/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/setting/index.tsx","component/app-header/index.tsx","component/atom.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/index.tsx","util/hook.ts","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","CanvasConst","width","height","topToPendulumStructure","topToArtFrame","pendulumStructureHeight","leftToPendulumStructure","cardBorder","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","extendedCard","extendedPendulum","truePendulum","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","_objectSpread","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","PendulumEffectCoordinate","TypeAbilityCoordinateMap","tcg","small","medium","large","edgeAlignment","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","ArtFinishMap","art","FoilNameMap","getFoilList","DefaultFontSizeData","bulletSymbolOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontDeviation","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","EffectFontData","bulletSymbolWidth","fontSize","lineHeight","lineCount","TCGVanillaTypeStatFontList","wordLetterSpacing","PendulumEffectFontData","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","NameFontDataMap","Default","fontData","letterDeviationMap","i","yOffset","yRatio","ì","í","î","ï","ĩ","ī","ĭ","į","ǐ","ȉ","ȋ","ɨ","ɩ","ᵹ","ᵼ","ᶖ","ḭ","ḯ","ỉ","ị","I","Ì","Í","Î","Ï","Ĩ","Ī","Ĭ","Į","İ","Ɩ","Ɨ","Ǐ","Ȉ","Ȋ","Ḭ","Ḯ","Ỉ","Ị","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionList","top","left","LinkRotateList","LinkIndentList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","frame","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","tooltipKey","DefaultColorList","checkXyz","card","checkSpeedSkill","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","e","n","substring","length","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","arguments","undefined","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","Array","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","clone","kanjiHelper","checkYgoCarderCard","object","console","error","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","result","isPartialNumberEqual","numberLeft","numberRight","Math","abs","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","blob","document","createElement","download","href","window","URL","createObjectURL","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","zarc","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","_ref","rarity","rest","level","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","frameType","monster_desc","pend_desc","race","scale","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","min","max","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","reset","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","style","size","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","this","setStyle","nextStyle","setSize","nextSize","calculatedSize","setFamily","nextFamily","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","index","uploadToImgur","async","myHeaders","Headers","append","formdata","FormData","imgLink","fetch","method","headers","redirect","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","randomCharacter","charSet","charactersLength","charAt","floor","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","slice","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","children","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","scaleType","useI18N","create","set","get","defaultLanguageName","url","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","languageName","_languageMap$eng","response","languageData","json","Error","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","data","normalizeBoolean","fallback","normalizedValue","normalizeInt","isFinite","normalizeFloat","normalizeColor","csvToCardList","csv","headerIndexMap","row","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader34","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","cnt","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","status","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","current","_e$target","target","variantConfig","useSetting","resolution","allowHotkey","reduceMotionColor","showCreativeOption","showExtraDecorativeOption","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","useCallback","drawCanvas","cloneCanvas","cloneNode","drawCanvasContext","getContext","cloneCanvasContext","drawImage","click","classList","useEffect","relevant","setTimeout","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB4","_document$getElementB5","_document$getElementB6","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","add","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","drawMarker","ctx","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","option","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","Promise","resolve","finishType","finishInformation","instructionList","globalCompositeOperation","globalAlpha","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","imageCacheMap","drawFrom","source","sx","sy","_imageCacheMap$source","_imageCacheMap$source2","ready","normalizedX","normalizedY","imageCached","cache","Image","once","drawAsset","drawAssetWithSize","dw","dh","_imageCacheMap$source3","_imageCacheMap$source4","normalizedW","normalizedH","drawFromWithSize","drawWithStyle","canvas","dx","dy","sw","sh","clonedCanvas","clonedCtx","willReadFrequently","fillRect","resetMainCanvasStyle","getLetterWidth","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundWidth","actualBoundingBoxLeft","actualBoundingBoxRight","kerningScaleRatio","spacingRatio","offsetRatio","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","deviation","letterMetric","textDrawer","deviationYOffset","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","tokenizeText","keepControlCharacter","regex","getTextWorker","fontSizeData","fontController","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","PI","fill","strokeStyle","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","round","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","effectSizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","_flavorConditionRegex","wholeLineRegex","materialReplacement","material","_wholeLineRegex$exec","_wholeLineRegex$exec2","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","_CondenseTolerantMap$","_sizeList$effectSizeL","_tolerancePerSentence","tolerancePerSentence","trueWidthStart","trueBaselineStart","lineListWithRatio","resetStyle","flavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","pendulumSize","isSpeedSkill","isXyz","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","hasFoil","frameBorderType","nameBorderType","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","drawFrame","drawCardArt","drawBackground","boundary","backgroundWidth","backgroundHeight","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","drawStar","normalizedCardIcon","onStarDraw","normalizedStarCount","leftEdge","resetShadow","all","starWidth","coordinate","drawStarContent","drawPendulumScaleIcon","drawLinkArrowMap","isActive","baseLink","activeLink","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","withBorder","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","cloneCtx","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","hasDefaultOutline","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","actualBoundingBoxAscent","actualBoundingBoxDescent","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","cx","cy","AD","sqrt","FDA","asin","AF","sin","AL","FL","cos","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","lineJoin","defaultTextStyle","sizeMap","drawTypeAbilityText","drawTypeAbility","isMonster","willDrawTypeAbility","typeAbilityWithIcon","willDrawIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawScale","digitScaleRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","imageChangeCount","readyToDraw","_frameCanvasRef$curre","_resolvedStatTextStyl","fillBaseColor","w","h","hasArtBorder","artHeight","drawLinkRatingText","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","endOfPassword","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","isNumberPassword","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","drawSticker","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","normalizedUpSize","effectIndexSize","coordinateKey","fontDataKey","getEffectFontAndCoordinate","_pendulumEffectCanvas","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","exportCtx","generateLayer","canvasLayer","delayQueue","toBlob","layer","onload","revokeObjectURL","onerror","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","catch","StyledBatchConverterModal","Modal","BatchConverter","setVisible","useState","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","_templateObject2","StyledDownloadButton","Button","_templateObject3","DownloadButton","forwardRef","ref","useShallow","isDownloading","setDownloading","useImperativeHandle","Dropdown","placement","domEvent","MenuOutlined","ErrorBoundary","Component","constructor","super","hasError","componentDidCatch","Sentry","componentStack","render","Explanation","overlayClassName","iconProps","restIconProps","ExclamationCircleOutlined","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","div","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","$softMode","css","_templateObject4","SettingButton","Popover","trigger","Checkbox","checked","SettingFilled","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","BugOutlined","DatabaseFilled","TaintedCanvasWarning","StyledCode","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","footer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","InputTrainStyle","StyledRadioTrainContainer","UnrefRadioTrain","activeValue","optionList","suffix","internalRef","_internalRef$current","isChecked","RadioTrain","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setLoading","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","FullscreenOutlined","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","TextArea","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","loading","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","imgurResponse","imgurResponseData","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","rows","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","FinishButtonList","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","Number","AnglePicker","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPickerButton","$active","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","setType","setCnt","useRefresh","customStyleSignal","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","shadowPickeRef","outlinePickeRef","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","applyCustomStyle","onVisibleChange","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","changeFrame","frameValue","nextFrame","isST","newTypeAbility","StyledCheckboxTrainContainer","CheckboxTrain","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","isDarkSynchro","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","ctrlKey","metaKey","currentTarget","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","SyncOutlined","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","bottomFrameOptionGridRef","pendulumEffectInputRef","isMirrorScale","setMirrorScale","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","changePendulumEffect","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","cardHeight","cardWidth","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","onDownload","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","CopyOutlined","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","_listUploadRef$curren","announceError","willImport","Papa","complete","LoadingOutlined","maskClosable","mask","forceRender","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","StyledCardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","_templateObject5","OverlayButton","_templateObject6","LightboxButton","_templateObject7","ResetButton","_templateObject8","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","softMode","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","canvasKey","setCanvasKey","lightboxVisible","setLightboxVisible","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","ZoomInOutlined","onContextMenu","_importPanelRef$curre3","wrapClassName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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C,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,gCAGLG,EAAoBL,EAAmBM,QAAO,SAACC,EAAKC,GAE7D,OADAD,EAAIC,EAAIP,WAAaO,EACdD,IACR,ICpiCH,MAAME,EAA8C,CAAC,CAAEnC,UAAW,UAAWrE,QAAS,IAChFyG,EAA8C,CAChD,CAAEpC,UAAW,UAAWrE,QAAS,KACjC,CAAEqE,UAAW,WAAYrE,QAAS,MAUzB0G,EAA+C,CACxDpC,MAAO,CACHhH,MAAO,QACPC,MAAO,IACP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EAAI,CACAsC,cAAc,KAGtBhB,eACAS,qBAIKY,GAAcA,IACN7C,IAAQpO,IAAA,IAAC,SAAEyQ,GAAUzQ,EAAA,OAAKyQ,KAIlCS,GAAcA,IAAM9C,GAAQ+C,WAAWV,S,cChJpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,oCACA,qCACA,qCACA,uCACA,iCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,GAAkBA,EAAMC,cAAczV,WAAW,IAAK,IAAIA,WAAW,IAAK,IAChG0V,GAAc,IAAIC,IAAIL,GAAa3hB,IAAI4hB,KAEvCK,GAAsBP,GAAqBjrB,QAAO,CAACC,EAAKmrB,EAAOzK,KACjE,MAAM8K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBxrB,EAAImrB,GAAqBzK,GAE7D1gB,IACR,IAEG0rB,GAAoBC,GACV,MAARA,GACS,KAATA,EADqB,GAEnB,IAAN3wB,OAAW2wB,EAAKnb,QAAQ,KAAM,MAAK,KAiNjCob,GAAmBA,CAAC50B,EAAY60B,KAClC,GAAqB,mBAAV70B,EAAqB,OAAOA,EACvC,GAAqB,kBAAVA,EAAoB,CAC3B,MAAM80B,EAAkB90B,EAAMo0B,cAC9B,MAA2B,SAApBU,GAEmB,UAApBA,GAEID,EAEd,OAAOA,GAELE,GAAeA,CAAC/0B,EAAY60B,IACT,kBAAV70B,EAA2Bg1B,SAASh1B,GAASA,EAAQ60B,EAC3C,kBAAV70B,GAA2Bg1B,SAASvI,SAASzsB,IAAUysB,SAASzsB,GACpE60B,EAELI,GAAiBA,CAACj1B,EAAY60B,IACX,kBAAV70B,EAA2Bg1B,SAASh1B,GAASA,EAAQ60B,EAC3C,kBAAV70B,GAA2Bg1B,SAAS5M,WAAWpoB,IAAUooB,WAAWpoB,GACxE60B,EAELK,GAAiBA,CAACl1B,EAAY60B,IACX,kBAAV70B,EACHA,EAAM+e,WAAW,KAAa/e,EAC5B,IAANgE,OAAWhE,GAER60B,EAEEM,GAAiBC,IAC1B,IACI,MAAMT,EAAOS,EAAIT,KACXU,EAAqCV,EAAK,GAjDtC5rB,QAAO,CAACC,EAAKmrB,EAAOzK,KAC9B,MAAM8K,EAAuBN,GAAmBC,GAGhD,OAFIE,GAAYI,IAAID,KAAuBxrB,EAAImrB,GAAqBzK,GAE7D1gB,IACR,IA8CC,OAAO2rB,EACFriB,KAAI,CAACgjB,EAAK5L,KAAW,IAAD9G,EAAA2S,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAEjB,GAAc,IAAVnO,EAAa,OAAO,KAExB,GAAqB,KAAjB4L,EAAIzkB,KAAK,IAAY,OAAO,KAChC,MAAMinB,EAAY7f,KACZ8f,EAnDIC,EAAC1C,EAAeD,IAC9BlB,IAAqB,IAAD8D,EAAAC,EACxB,MAAMC,EAAmC,QAAxBF,EAAG5C,EAAelB,UAAM,IAAA8D,KAAK,EACxCj4B,GAAyB,QAAjBk4B,EAAC5C,EAAI6C,UAAY,IAAAD,IAAI,IAAIE,OAEvC,MAAiB,KAAVp4B,OACDka,EACAla,GA4CiBg4B,CAAkB1C,EAAKD,GAEhC/gB,GAAqD,QAA7CsO,EAAgB,QAAhB2S,EAACwC,EAAO,gBAAQ,IAAAxC,IAAIwC,EAAO,0BAAkB,IAAAnV,IAAIkV,EAAUxjB,OAAO8f,cAE1EiE,EAAgD,QAAzC7C,EAAiB,QAAjBC,EAAGsC,EAAO,eAAO,IAAAtC,IAAIsC,EAAO,qBAAa,IAAAvC,IAAI,GACpDxgB,EAAOyX,SAAS4L,IAAY,IAA8B,MAAxBN,EAAO,aACzCtL,SAAS4L,GACTA,EAEAC,IAA6C,QAAnC5C,EAAe,QAAfC,EAACoC,EAAO,eAAO,IAAApC,IAAIoC,EAAO,iBAAS,IAAArC,IAAI,UAAUtB,cAC3D7f,GAAO/K,EAAY8uB,IAAWA,GAAU,SAExCC,GAAkC,QAAtB3C,EAAGmC,EAAO,oBAAY,IAAAnC,OAAA,EAAnBA,EAAqB4C,cACpC3jB,GAAY0jB,GACK,SAAjBA,GACI11B,EACA01B,GACM,UAAVjkB,EACI,QACU,SAAVA,EACI,OACAwjB,EAAUjjB,UAElBJ,GAAiC,QAAxBohB,EAAIkC,EAAO,qBAAa,IAAAlC,IAAKkC,EAAO,cAAa,OAAA/zB,OAAU+zB,EAAO,eAAkB,GAC7FlhB,GAAmB,QAAhBif,EAAGiC,EAAO,cAAM,IAAAjC,IAAI,GACvB/gB,GAAoC,QAA5BghB,EAAIgC,EAAO,yBAAiB,IAAAhC,IAAI+B,EAAU/iB,SAClDuC,GAA6B,QAAtB0e,EAAG+B,EAAO,oBAAY,IAAA/B,IAAI,GACjClf,GAAmB,QAAhBmf,EAAG8B,EAAO,cAAM,IAAA9B,IAAI,GACvBtf,GAAyB,QAAnBuf,EAAG6B,EAAO,iBAAS,IAAA7B,IAAI,GAC7B1hB,GAA0E,QAApE2hB,EAAwB,QAAxBC,EAAG2B,EAAO,sBAAc,IAAA3B,OAAA,EAArBA,EAAuBjd,MAAM,OAAOoP,QAAOhW,GAAmB,KAAVA,WAAa,IAAA4jB,IAAI,GAC9EniB,IAA0B,QAAjBqiB,EAAC0B,EAAO,iBAAS,IAAA1B,IAAIyB,EAAU9jB,QAAQogB,cAChD7c,GAAiBqd,GAAiBmD,EAAO,uBAAwBD,EAAUvgB,gBAC3EtW,GAAqB,QAAjBq1B,EAAGyB,EAAO,eAAO,IAAAzB,IAAI,GACzBvf,GAA6B,QAArBwf,EAAGwB,EAAO,mBAAW,IAAAxB,IAAI,GACjC3f,GAA4C,QAAvC4f,EAAmB,QAAnBC,EAAGsB,EAAO,iBAAS,IAAAtB,IAAIsB,EAAO,iBAAS,IAAAvB,IAAI,GAChDvhB,IAAyC,QAAzByhB,EAACqB,EAAO,yBAAiB,IAAArB,IAAIoB,EAAU7iB,eAAemf,cACtEpd,IAA4B,QAAlB2f,EAACoB,EAAO,kBAAU,IAAApB,IAAImB,EAAU9gB,SAASod,cACnDtf,IAAwE,QAA5D8hB,EAA0B,QAA1BC,EAACkB,EAAO,0BAAkB,IAAAlB,IAAIkB,EAAO,+BAAuB,IAAAnB,IAAIkB,EAAUhjB,WAAW0jB,cAEjGhoB,GAA2B,QAApBsmB,EAAGiB,EAAO,kBAAU,IAAAjB,OAAA,EAAjBA,EAAmB1C,cAC7Bnd,GAAiB2d,GACnBmD,EAAO,oBACPvnB,GAAsB,gBAAZA,GAA4BsnB,EAAU7gB,gBAE9CG,GAAqBwd,GACvBmD,EAAO,yBACPvnB,GAAsB,kBAAZA,GAA8BsnB,EAAU1gB,oBAEhDD,GAAmByd,GACrBmD,EAAO,sBACPvnB,GAAsB,oBAAZA,GAAgCsnB,EAAU3gB,kBAElDD,GAAc0d,GAChBmD,EAAO,iBACPvnB,GAAsB,eAAZA,GAA2BsnB,EAAU5gB,aAE7CG,GAAeud,GAAiBmD,EAAO,kBAAmBD,EAAUzgB,cAEpE5U,GAAamyB,GAAiBmD,EAAO,eAAgBD,EAAUr1B,YAC/DyT,IAAuC,QAAvB6gB,EAACgB,EAAO,uBAAe,IAAAhB,IAAIe,EAAU5hB,eAAeke,cACpEje,GAA0C,QAA5B6gB,EAAGe,EAAO,0BAAkB,IAAAf,IAAI,GAC9C5gB,GAA+C,QAA/B6gB,EAAGc,EAAO,6BAAqB,IAAAd,IAAIa,EAAU1hB,iBAC7DC,GAAiD,QAAhC6gB,EAAGa,EAAO,8BAAsB,IAAAb,IAAIY,EAAUzhB,kBAE/DoiB,GAAiBV,EAAO,gBACxBzhB,GAAcmiB,GACdA,GAAetf,MAAM,KACrB,CAAC4e,EAAO,UAAWA,EAAO,UAAWA,EAAO,UAAWA,EAAO,WAC3DxP,QAAehW,GAA0B,kBAAVA,IAC/BgW,QAAOhW,GAAmB,KAAVA,IAEnBiE,IAA2C,QAAxB2gB,EAACY,EAAO,wBAAgB,IAAAZ,IAAIW,EAAUvhB,YAAYC,kBAAkB4d,cACvFsE,GAAe3D,GAAagD,EAAO,yBAA0BD,EAAUvhB,YAAYE,QACnFkiB,GAAuB5D,GAAagD,EAAO,kCAAmCD,EAAUphB,cAAcD,QAEtGmiB,GAAe/3B,IACf6B,GAAuB,CACzBvB,UAAWyzB,GAAiBmD,EAAO,wBAAyBa,GAAaz3B,WACzED,SAAuC,QAA/Bk2B,EAAEW,EAAO,8BAAsB,IAAAX,IAAIwB,GAAa13B,SACxDJ,KAAMi0B,GAAagD,EAAO,kBAAmBa,GAAa93B,MAC1DO,UAAWuzB,GAAiBmD,EAAO,uBAAwBa,GAAav3B,WACxEJ,KAAM8zB,GAAagD,EAAO,kBAAmBa,GAAa33B,MAC1DG,WAAYwzB,GAAiBmD,EAAO,yBAA0Ba,GAAax3B,YAC3EL,SAAUg0B,GAAagD,EAAO,sBAAuBa,GAAa73B,UAClEC,KAAM+zB,GAAagD,EAAO,kBAAmBa,GAAa53B,OAGxD63B,GnBnfQ,CAC1BvjB,EAAG,EACHC,EAAG,EACHlV,MAAO,IACPC,OAAQ,KACRkV,KAAM,IACNC,OAAQ,GmB8eUlM,GAAwB,QAArB8tB,EAAGU,EAAO,mBAAW,IAAAV,IAAIS,EAAUvuB,IACtC4L,GAASyf,GAAiBmD,EAAO,qBAAsBD,EAAU3iB,QACjEE,GAAgB,CAClBI,OAAQjT,EAAuBC,GAAYC,IAASb,MACpDvB,OAAQ20B,GAAe8C,EAAO,yBAA0Bc,GAAav4B,QACrED,MAAO40B,GAAe8C,EAAO,wBAAyBc,GAAax4B,OACnEiV,EAAG2f,GAAe8C,EAAO,oBAAqBc,GAAavjB,GAC3DC,EAAG0f,GAAe8C,EAAO,oBAAqBc,GAAatjB,GAC3DC,KAAM,KAGJsjB,GnB/fQ,CAC1BxjB,EAAG,EACHC,EAAG,EACHlV,MAAO,IACPC,OAAQ,KACRkV,KAAM,IACNC,OAAQ,GmB0fUC,GAAgBkf,GAAiBmD,EAAO,kBAAmBD,EAAUpiB,eACrEC,GAAsC,QAA5B2hB,EAAGS,EAAO,0BAAkB,IAAAT,IAAIQ,EAAUniB,WACpDhT,IAA2C,QAA1B40B,EAACQ,EAAO,0BAAkB,IAAAR,IAAIO,EAAUn1B,gBAAgByxB,cACzEve,GAAgB+e,GAAiBmD,EAAO,4BAA6BD,EAAUjiB,eAC/EE,GAAuB,CACzBN,OAAQjT,EAAuBC,GAAYC,GAASC,IAAgBd,MACpEvB,OAAQ20B,GAAe8C,EAAO,gCAAiCe,GAAoBx4B,QACnFD,MAAO40B,GAAe8C,EAAO,+BAAgCe,GAAoBz4B,OACjFiV,EAAG2f,GAAe8C,EAAO,2BAA4Be,GAAoBxjB,GACzEC,EAAG0f,GAAe8C,EAAO,2BAA4Be,GAAoBvjB,GACzEC,KAAM,KAGJujB,G9BlhBa,CAC/BzzB,KAAM,UACNN,UAAW,UACX4P,kBAAmB,UACnB3O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,Q8BigBSgQ,IAA0C,QAA1B8iB,EAACO,EAAO,0BAAkB,IAAAP,IAAIM,EAAUpjB,eAAe0f,cACvEzf,GAAuB,CACzB3P,UAAWkwB,GAAe6C,EAAO,2BAA4BgB,GAAe/zB,WAC5EM,KAAiC,QAA7BmyB,EAAEM,EAAO,4BAAoB,IAAAN,IAAIsB,GAAezzB,KACpDI,cAAeqvB,GAAagD,EAAO,+BAAgCgB,GAAerzB,eAClFC,cAAoD,QAAvC+xB,EAAEK,EAAO,sCAA8B,IAAAL,IAAIqB,GAAepzB,cACvEpB,YAAaqwB,GAAiBmD,EAAO,6BAA8BgB,GAAex0B,aAClFC,WAAYowB,GAAiBmD,EAAO,4BAA6BgB,GAAev0B,YAChFC,UAAWmwB,GAAiBmD,EAAO,2BAA4BgB,GAAet0B,WAC9EmQ,kBAAmBsgB,GAAe6C,EAAO,oCAAqCgB,GAAenkB,mBAC7FxP,UAAW8vB,GAAe6C,EAAO,2BAA4BgB,GAAe3zB,WAC5EG,YAAawvB,GAAagD,EAAO,8BAA+BgB,GAAexzB,aAC/EgB,YAAawuB,GAAagD,EAAO,8BAA+BgB,GAAexyB,aAC/EpB,UAAW4vB,GAAagD,EAAO,2BAA4BgB,GAAe5zB,WAC1ET,QAAuC,QAAhCizB,EAAEI,EAAO,+BAAuB,IAAAJ,IAAIoB,GAAer0B,QAC1DK,OAAsC,QAAhC6yB,EAAGG,EAAO,8BAAsB,IAAAH,IAAImB,GAAeh0B,OACzDqB,WAAY2uB,GAAagD,EAAO,4BAA6BgB,GAAe3yB,YAC5EH,YAAaivB,GAAe6C,EAAO,6BAA8BgB,GAAe9yB,aAChFE,cAAe4uB,GAAagD,EAAO,gCAAiCgB,GAAe5yB,eACnFD,cAAe6uB,GAAagD,EAAO,gCAAiCgB,GAAe7yB,gBAGjF+P,GAAS2e,GAAiBmD,EAAO,WAAYD,EAAU7hB,QACvDD,GASyB,QATlB6hB,EAAG,CACZjD,GAAiBmD,EAAO,0BAA0B,GAAS,IAAM,GACjEnD,GAAiBmD,EAAO,qBAAqB,GAAS,IAAM,GAC5DnD,GAAiBmD,EAAO,2BAA2B,GAAS,IAAM,GAClEnD,GAAiBmD,EAAO,sBAAsB,GAAS,IAAM,GAC7DnD,GAAiBmD,EAAO,uBAAuB,GAAS,IAAM,GAC9DnD,GAAiBmD,EAAO,6BAA6B,GAAS,IAAM,GACpEnD,GAAiBmD,EAAO,wBAAwB,GAAS,IAAM,GAC/DnD,GAAiBmD,EAAO,8BAA8B,GAAS,IAAM,IACvExP,QAAOhW,GAAmB,KAAVA,WAAa,IAAAslB,IAAI,GAE7BmB,G9BzhB8B,EAChD,EACA,WACA,EACA,W8BshBkBxhB,GAAgB,CAClBod,GAAiBmD,EAAO,0BAA2BiB,GAAe,IAClE9D,GAAe6C,EAAO,2BAA4BiB,GAAe,IACjEpE,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,KAEjEvhB,GAAgB,CAClBmd,GAAiBmD,EAAO,0BAA2BiB,GAAe,IAClE9D,GAAe6C,EAAO,2BAA4BiB,GAAe,IACjEpE,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,KAEjEthB,GAAkB,CACpBkd,GAAiBmD,EAAO,4BAA6BiB,GAAe,IACpE9D,GAAe6C,EAAO,6BAA8BiB,GAAe,IACnEpE,GAAiBmD,EAAO,6BAA8BiB,GAAe,IACrE9D,GAAe6C,EAAO,+BAAgCiB,GAAe,KAEnErhB,GAAoB,CACtBid,GAAiBmD,EAAO,qCAAsCiB,GAAe,IAC7E9D,GAAe6C,EAAO,sCAAuCiB,GAAe,IAC5EpE,GAAiBmD,EAAO,sCAAuCiB,GAAe,IAC9E9D,GAAe6C,EAAO,wCAAyCiB,GAAe,KAE5EphB,GAAiB,CACnBgd,GAAiBmD,EAAO,2BAA4BiB,GAAe,IACnE9D,GAAe6C,EAAO,4BAA6BiB,GAAe,IAClEpE,GAAiBmD,EAAO,4BAA6BiB,GAAe,IACpE9D,GAAe6C,EAAO,8BAA+BiB,GAAe,KAExE,IAAInhB,GAAe,GACnB,IAAK,IAADohB,GACAphB,GAAeuD,KAAKC,MAAoC,QAA/B4d,GAAClB,EAAO,+BAAuB,IAAAkB,MAAI,MAC9D,MAAOlgB,IACLqD,QAAQC,MAAM,gBAAiBtD,IAGnC,OAAAnW,wBAAA,CACImV,GAAIC,eACD8f,GAAS,IACZvuB,OACA8L,WACAZ,aACAU,UACAC,UAAW,SACXyB,OACAhC,aACAc,cACAI,kBACAF,iBACAC,iBAAkB,SAClBnT,kBACAoS,YACAyB,oBACAc,WACAR,OACAP,YAAa,CAAEC,oBAAkBC,OAAQiiB,IACzC/hB,UACAe,mBACAG,gBACArD,UACAD,QACAP,UACAM,QACAiD,kBACA7B,iBACA0B,sBACAH,kBACAI,gBACAF,oBACAlB,UACAxT,cACAyU,eACAlB,WACA/U,QACA0T,aACAD,iBACAhS,WACAkV,kBACAb,YACAZ,kBACAD,iBACAG,qBACAD,oBACAM,cAAe,CAAED,OAAQkiB,IACzBhhB,qBACAf,SACA5B,OACAC,iBACAuC,iBACAR,WACAlC,aACAwB,eACAmB,sBAIP8Q,QAAOhW,GACY,MAATA,IAEjB,MAAOwG,GAEL,OADAqD,QAAQC,MAAM,gBAAiBtD,GACxB,KCvpBTmgB,GAAaA,CAACC,EAAuCC,KACvD,MAAMC,EAAqC,kBAAbF,EAAwB1M,SAAS0M,GAAYA,EACrEG,EAAuC,kBAAdF,EAAyB3M,SAAS2M,GAAaA,EACxEG,IAAeF,GAAiBrE,SAASqE,GACzCG,IAAgBF,GAAkBtE,SAASsE,GAEjD,GAAIC,IAAiBC,EAAe,OAAQ,EAC5C,IAAKD,GAAgBC,EAAe,OAAO,EAC3C,GAAID,GAAgBC,EAAe,OAAuB,OAAfF,QAAe,IAAfA,IAAmB,IAAoB,OAAdD,QAAc,IAAdA,IAAkB,GAEtF,MAAMI,EAAgC,MAAbN,EACnB,EACa,KAAbA,GACK,EACD,EACJO,EAAkC,MAAdN,EACpB,EACc,KAAdA,GACK,EACD,EAEV,OACIM,EAAoBD,IAAqB,GAClB,kBAAbN,GACc,kBAAdC,GACI,OAARD,QAAQ,IAARA,IAAY,IAAIQ,cAAcP,GACjCM,EAAoBD,GAEzBG,GAAcA,CAACC,EAAiBzgB,IAAoBygB,EAAE54B,KAAK04B,cAAcvgB,EAAEnY,MAC3E64B,GAAeA,CAACD,EAAiBzgB,IAAoBygB,EAAEjjB,MAAM+iB,cAAcvgB,EAAExC,OAC7EmjB,GAAaA,CAACF,EAAiBzgB,IAAoB8f,GAAWW,EAAEhjB,IAAKuC,EAAEvC,KACvEmjB,GAAaA,CAACH,EAAiBzgB,IAAoB8f,GAAWW,EAAE/iB,IAAKsC,EAAEtC,KACvEmjB,GAAcA,CAACJ,EAAiBzgB,IAC9BygB,EAAE5jB,QAAUmD,EAAEnD,OAAemD,EAAEpD,QAAQkD,OAAS2gB,EAAE7jB,QAAQkD,OACvDggB,GAAWW,EAAE7kB,KAAMoE,EAAEpE,MAE1BklB,GAAeA,CAACL,EAAiBzgB,KAAqB,IAAD+gB,EAAAC,EAAAC,EAAAC,EACvD,MAAMC,EAAcjqB,GAAa8I,EAAE9E,OAAO5D,WAAaJ,GAAaupB,EAAEvlB,OAAO5D,WAE7E,GAAoB,IAAhB6pB,EAAmB,OAAOA,EAK9B,OAFoE,QAA1CJ,EAA8B,QAA9BC,EAAC9pB,GAAa8I,EAAElD,sBAAc,IAAAkkB,OAAA,EAA7BA,EAA+B1pB,kBAAU,IAAAypB,IAAI,MAAkD,QAA9CE,EAAkC,QAAlCC,EAAKhqB,GAAaupB,EAAE3jB,sBAAc,IAAAokB,OAAA,EAA7BA,EAA+B5pB,kBAAU,IAAA2pB,IAAI,MAI5HG,GAAiBjiB,IACnB,MAAM6B,EAAcxX,YAAA,GAAQ2V,IACtB,MAAEjE,EAAK,OAAE2B,GAAWmE,EAY1B,OAVc,UAAV9F,GAA+B,SAAVA,GAAoBkE,GAAgB4B,MACzDA,EAAevD,IAAM,GACrBuD,EAAetD,IAAM,GACrBsD,EAAepF,KAAO,GAEtBiB,IACAmE,EAAetD,IAAM,GACrBsD,EAAepF,KAAO,GAGnBoF,GAELqgB,GAAeA,CAACC,EAA+DC,EAAqBC,KACtG,IAAK,IAAIC,EAAM,EAAGA,EAAMH,EAAYxhB,OAAQ2hB,IAAO,CAC/C,MAAMne,EAASge,EAAYG,GAAKF,EAAOC,GAEvC,GAAe,IAAXle,EAAc,OAAOA,EAE7B,OAAO,GAEEoe,GAAkB,CAC3B75B,KAAM,CACF4D,IAAK,OACLk2B,aAAeC,GACJA,EACF1oB,IAAIkoB,IACJS,MAAK,CAACpB,EAAGzgB,IAAMqhB,GACZ,CACIb,GACAK,GACAC,GACAJ,GACAC,GACAC,IAEJH,EACAzgB,MAIhBvC,IAAK,CACDhS,IAAK,MACLk2B,aAAeC,GACJA,EACF1oB,IAAIkoB,IACJS,MAAK,CAACpB,EAAGzgB,IAAMqhB,GACZ,CACIV,GACAC,GACAC,GACAC,GACAN,GACAE,IAEJD,EACAzgB,MAIhBtC,IAAK,CACDjS,IAAK,MACLk2B,aAAeC,GACJA,EACF1oB,IAAIkoB,IACJS,MAAK,CAACpB,EAAGzgB,IAAMqhB,GACZ,CACIT,GACAD,GACAE,GACAC,GACAN,GACAE,IAEJD,EACAzgB,MAIhB8X,IAAK,CACDrsB,IAAK,MACLk2B,aAAeC,GACJA,EACF1oB,IAAIkoB,IACJS,MAAK,CAACpB,EAAGzgB,IAAMqhB,GACZ,CACIX,GACAI,GACAD,GACAL,GACAG,GACAC,IAEJH,EACAzgB,MAIhB2J,MAAO,CACHle,IAAK,QACLk2B,aAAeC,GACJA,EACF1oB,IAAIkoB,IACJS,MAAK,CAACpB,EAAGzgB,IAAMqhB,GACZ,CACIP,GACAD,GACAL,GACAE,GACAC,GACAC,IAEJH,EACAzgB,OAKd8hB,GAAcA,CAChBF,EACAG,KAEA,MAAMC,EAAaj3B,OACdC,OAAO+2B,GACP5S,QAAQhW,GAA0E,MAATA,IAE9E,OAA0B,IAAtB6oB,EAAWliB,OAAqB8hB,EAC7BI,EAAWryB,QAAO,CAACsyB,EAAcC,IAC7BA,EAAcD,IACtBL,IA+BMO,GAActK,kBAGzBuK,kCAAuBtK,IACd,CACHuK,SAAU,GACVC,gBAAiB,GACjBV,SAAU,GACVW,kBAAmB,GACnBC,kBAAmB,EACnBC,aAAa,EACbC,SAAU,YACVC,uBAAmB7hB,EACnB8hB,QAA2D,SAAlDjK,aAAaC,QAAQ,yBAC9BiK,kBAAmBrZ,IAAA,IAAC,KAAE1gB,EAAI,MAAElC,GAAO4iB,EAAA,OAAKsO,GAAIsE,IAGrC,IAHsC,SACzCwF,EAAQ,kBACRW,GACHnG,EACG,MAAM0G,EAAqBt5B,YAAA,GAAQ+4B,GACnC,GAAa,SAATz5B,EAAiB,CACjB,MAAM4yB,EAAkB90B,EAAMo0B,cAC9B8H,EAAsBh6B,GAAQ84B,GACnBA,EAASzS,QAAOmN,IAAuC,IAAtC,KAAEz0B,EAAI,OAAE0V,EAAM,eAAER,GAAgBuf,EACpD,OAAQhX,GAAkBzd,GAAMmzB,cAC1BxV,GAAoBjI,GAAQyd,cAC5BxV,GAAoBzI,GAAgBie,eAAevb,SAASic,MAK9E,MAAO,CACH6G,kBAAmBO,EACnBR,gBAAiBR,GAAYF,EAAUkB,QAG/CC,YAAaA,KACTjL,GAAIsF,IAAsC,IAArC,kBAAEoF,EAAiB,SAAEZ,GAAUxE,EAChC,MAAO,CACHmF,kBAAmB,GACnBC,kBAAmBA,EAAoB,EACvCF,gBAAiB,IAAIV,QAIjCoB,QAAS7jB,GAAQ2Y,GAAI0F,IAAmB,IAAlB,SAAEoE,GAAUpE,EAC9B,MAAM7e,EAAKC,cACLqkB,EAAOz5B,YAAA,CAAKmV,MAAOQ,GAEzB,MAAO,CACHkjB,SAAUY,EAAQtkB,GAClBijB,SAAU,IAAIA,EAAUqB,GAExBX,gBAAiB,IAAIV,EAAUqB,OAGvCC,iBAAkBC,IACA,SAAVA,GAAkBrL,EAAI,CAAE2K,aAAa,IAC3B,aAAVU,GAAsBrL,EAAI,CAAE2K,aAAa,KAEjDW,cAAeC,GAAUvL,GAAIwL,IAAA,IAAC,QAAEV,GAASU,EAAA,MAAM,CAAEV,QAAe,OAANS,QAAM,IAANA,KAAWT,MACrEW,YAAa17B,GAAQiwB,EAAI,CAAE4K,SAAU76B,IACrC27B,qBAAsBrkB,GAAQ2Y,EAAI,CAAE6K,kBAAmBxjB,IACvDskB,iBAAkB,SAACC,GAAyC,IAAzBC,EAAW9iB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAC1CiX,GAAI8L,IAAiD,IAAhD,SAAEhC,EAAQ,gBAAEU,EAAe,YAAEG,GAAamB,EACvCC,EAAkBpB,EAGtB,IAAwB,IAApBoB,GAA6BF,EAAa,CAC1C,MAAMG,EAAalC,EAASmC,MAAK5kB,GAAQA,EAAKR,KAAO+kB,EAAe/kB,KAEpEklB,GAAkBC,IACXnf,GAAgB+e,EAAgBI,GAW3C,MAAO,CACHrB,YAAaoB,EACbjC,SAViBA,EAAS1oB,KAAIiG,GAC1BA,EAAKR,KAAO+kB,EAAe/kB,GAAInV,YAAA,GAAYk6B,GACxCvkB,IASPmjB,gBAPwBA,EAAgBppB,KAAIiG,GACxCA,EAAKR,KAAO+kB,EAAe/kB,GAAInV,YAAA,GAAYk6B,GACxCvkB,SASnB6kB,YAAarlB,GAAMmZ,EAAI,CAAEuK,SAAU1jB,IACnCslB,YAAaA,CAACrC,EAAUS,KAAc,IAAD6B,EAEjCpM,EAAI,CACAyK,kBAAmB,GACnBE,aAAa,EACbJ,SAAkB,OAARA,QAAQ,IAARA,IAAuB,QAAf6B,EAAItC,EAAS,UAAE,IAAAsC,OAAA,EAAXA,EAAavlB,GACnCijB,SAAUA,EACVU,gBAAiB,IAAIV,MAG7BuC,WAAYxlB,IACRmZ,GAAIsM,IAA8C,IAADC,EAAAC,EAAAC,EAAAC,EAAA,IAA5C,SAAE5C,EAAQ,SAAES,EAAQ,gBAAEC,GAAiB8B,EACxC,MAAMK,EAAqB7C,EAASzS,QAAOhQ,GAAQA,EAAKR,KAAOA,IACzD+lB,EAA4BpC,EAAgBnT,QAAOhQ,GAAQA,EAAKR,KAAOA,IACvEgmB,EAAkBD,EAA0BE,WAAUzlB,GAAQA,EAAKR,KAAO0jB,IAKhF,MAAO,CACHA,SALiBA,IAAa1jB,EAC0D,QADxD0lB,EACoB,QADpBC,EACgB,QADhBC,EAC9BG,EAA0BC,EAAkB,UAAE,IAAAJ,OAAA,EAA9CA,EAAgD5lB,UAAE,IAAA2lB,IAAgC,QAAhCE,EAAIE,EAA0B,UAAE,IAAAF,OAAA,EAA5BA,EAA8B7lB,UAAE,IAAA0lB,IAAI,GAC1FhC,EAIFT,SAAU6C,EACVnC,gBAAiBoC,OAI7BG,cAAe1lB,IACX2Y,GAAIgN,IAAsC,IAArC,SAAElD,EAAQ,kBAAEW,GAAmBuC,EAChC,MAAMC,EAAcnD,EAASgD,WAAUI,IAAA,IAAC,KAAEn9B,GAAMm9B,EAAA,OAAKn9B,IAASsX,EAAKtX,QAC7Do9B,EAAWrmB,cACXsmB,EAAU17B,wBAAA,GACToZ,aAAMzD,IAAK,IACdtX,KAAK,GAAD+C,OAAKuU,EAAKtX,KAAI,WAClB8W,GAAIsmB,IAEFE,EAAeJ,EAAc,EAC7B,IAAInD,EAAUsD,GACd,IACKtD,EAAStO,MAAM,EAAGyR,GACrBnD,EAASmD,GACTG,KACGtD,EAAStO,MAAMyR,EAAc,EAAGnD,EAAS9hB,SAGpD,MAAO,CACHuiB,SAAU4C,EACVtC,kBAAmBuC,EACnBtD,SAAUuD,EACV7C,gBAAiBR,GAAYqD,EAAc5C,QAIvD6C,SAAUt8B,IACNgvB,GAAIuN,IAAoC,IAAnC,gBAAE/C,EAAe,SAAEV,GAAUyD,EAI9B,MAAO,CACH/C,gBAJsBZ,GAAgB54B,GAAM64B,aAAaW,GAMzDV,SALeF,GAAgB54B,GAAM64B,aAAaC,aChVzD0D,GAAaA,CACtBC,EACA7iB,KAKA,MAAM/D,EAAKC,cACX,IAAI4mB,EAAc3mB,KACdwE,GAAY,EAChB,IAAKkiB,EAAU,MAAO,CAAEliB,YAAWlE,KAAI3V,wBAAA,GAAOg8B,GAAW,IAAE7mB,QAC3D,IACI,MAAMqC,EAAqC,kBAAbukB,EACxBvjB,KAAKC,MAAMsjB,GACXA,EAGN,GAAI7iB,EAAU,CACV,MAAMxZ,EAAgCwY,GAAmBV,GAIrDwkB,EADAz6B,OAAOkW,KAAK/X,GAAU4W,OAAS,EACjBqC,GAAgBjZ,EAAUwZ,GAI1BP,GAAgBnB,EAAgB0B,QAGjD,GAAII,GAAmB9B,GACxBwkB,EAAcrjB,GAAgBnB,QAE7B,GAAIkC,GAA0BlC,GAAiB,CAChD,MAAM9X,EAAgCwY,GAAmBV,GAEzDwkB,EAAcrjB,GAAgBjZ,QAG7B,GAAImY,MAAMC,QAAQN,EAAeua,MAAO,CACzC,MAAMkK,EAAgBpkB,MAAMC,QAAQN,EAAeua,MAAQva,EAAeua,KAAK,GAAKva,GAC5EqC,UAAWqiB,EAAa,OAAEpiB,GAAW+H,GAA0Boa,GACvEpiB,EAAYqiB,EACZF,EAAcliB,OAEb,Gd3DuBP,KAChC,IAEI,MAAO,OAAQA,GACR,cAAeA,GACf,cAAeA,EACxB,MAAOpD,GAEL,OADAqD,QAAQC,MAAMtD,IACP,IcmDEgmB,CAAoB3kB,GAAiB,CAC1C,MAAQqC,UAAWqiB,EAAa,OAAEpiB,GAAW+H,GAA0BrK,GACvEqC,EAAYqiB,EACZF,EAAcliB,MAEb,CACD,MAAQD,UAAWqiB,EAAa,OAAEpiB,Gf6ILnE,KACrC,MAAM,KACFtX,EAAI,IACJ4V,EAAG,IACHC,EAAG,UACHjC,EAAS,OACT8B,EAAM,QACN0M,EAAO,UACPJ,EAAS,KACTrf,EAAI,GACJmU,EAAE,MACFjT,EAAK,OACLkf,EAAM,MACNjB,EAAK,KACLjE,EAAI,SACJ/d,EAAQ,OACR8hB,EAAM,OACNG,EAAM,KACN9gB,EAAI,QACJqhB,EAAO,QACPlP,GACAkE,GACE,IAAE6K,EAAG,KAAED,EAAME,QAAS2b,EAAe,eAAE1b,EAAgB3M,OAAQR,EAAc,QAAE+M,GAAYniB,EAC3FyhB,EAAiBhC,GAAmB5c,GACpC6e,EAAsBpB,GAAoBxM,GAC1C6N,EAAkBX,GAAgBiC,GAClCib,EDlPgD,kBAA9BtK,ECkPS7vB,IDlPiC6vB,EAAK5V,WAAW,eAA1D4V,MCmPxB,MAAMuK,EAAgBzS,SAAS1J,GACzBJ,EAAmBE,EAASb,GAAiBa,EAAOuR,oBAAiBla,EAE3E,IAAIuC,OAA+BvC,IAAnBsI,QACetI,IAAxBuI,QACoBvI,IAApBwI,QACqBxI,IAArByI,EACP,MAAM,OACFnO,EAAM,UACNC,EAAS,KACTzT,GACgB,OAAhB2hB,QAAgB,IAAhBA,IAAoB,GAClBwc,EAAan+B,EAAO2D,EAAmB3D,GAA2B,KAClE8a,EAAW7D,KAoDjB,MAAO,CACHwE,YACAC,OArDc9Z,wBAAA,GACXkZ,GAAQ,IACXtH,OAAc,OAANA,QAAM,IAANA,IAAU,GAClBvT,OACAyT,cAAe1T,EAAO,aAAe,OACrC2T,UAAWwqB,EACLA,EAAWn/B,MjBrQU,CAC/BsF,KAAM,UACNN,UAAW,UACX4P,kBAAmB,UACnB3O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,QiBqPLmS,MACAC,MACAjC,UAA8B,OAAnB4N,QAAmB,IAAnBA,IAAuB5f,EAClC8T,SACAW,QAAS2L,EACTnO,UAAyB,OAAd0N,QAAc,IAAdA,IAAkBrf,EAC7ByT,MAAOmB,EACPzD,MAAsB,OAAfoO,QAAe,IAAfA,IAAmB,SAC1B1N,KAAM,GAAAhR,OAAGk7B,KAAoBnc,GAASmc,GAAiB,GAAKA,EAAgBnc,EAC5EzM,YAAapU,EAAKiX,MAAM,KAAK7G,KAAIC,GAASA,EAAM6lB,SAChD7uB,IAAK01B,EAAe,GAAKn6B,EACzBqQ,QAAQ,EACRD,QAAS+pB,EAAen6B,EAAQ,GAChCsQ,UAAW6pB,EAAe,UAAY,SACtCxqB,UAAoB,OAATA,QAAS,IAATA,IAAa,SACxBwB,OAA4B,SAApByM,GAAsC,MAAR5D,EACtC9I,QAAS,EACa,KAAd,OAAJ8I,QAAI,IAAJA,OAAI,EAAJA,EAAM0E,SAAmB,IAAM,MACX,KAAhB,OAAJ1E,QAAI,IAAJA,OAAI,EAAJA,EAAM2E,WAAqB,IAAM,MACd,KAAf,OAAJ3E,QAAI,IAAJA,OAAI,EAAJA,EAAM4E,UAAoB,IAAM,MACX,KAAjB,OAAJ5E,QAAI,IAAJA,OAAI,EAAJA,EAAM6E,YAAsB,IAAM,MACZ,KAAlB,OAAJ7E,QAAI,IAAJA,OAAI,EAAJA,EAAM8E,aAAuB,IAAM,MACd,KAAjB,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAM+E,YAAsB,IAAM,MACX,KAAnB,OAAJ/E,QAAI,IAAJA,OAAI,EAAJA,EAAMgF,cAAwB,IAAM,MACd,KAAlB,OAAJhF,QAAI,IAAJA,OAAI,EAAJA,EAAMiF,aAAuB,IAAM,MACrCwE,QAAehW,GAA0B,kBAAVA,IACjC9P,WAAYygB,EACZ7M,kBAAmB8M,EACnB/M,iBAAkBgN,EAClBjN,eAAgBA,EAChBY,SAAUiM,EACVnL,aAAc,CACVxD,UACAkP,UACAF,UACAR,SACA9hB,SAAU,CACNsiB,QAAS2b,EACT1b,uBepOyC8b,CAAyBhlB,GACtEqC,EAAYqiB,EACZF,EAAcliB,GAEpB,MAAO3D,GACLqD,QAAQC,MAAM,cAAesiB,EAAU5lB,GACvC,IACI6lB,ElBiIyB,SACjCrmB,GAEE,IACEjW,EASJ,OAPIA,EAJO2X,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAIIiB,GAA+B3C,GAEf,kBAATA,EACZ6C,KAAKC,MAAM9C,GACXA,EAGHgD,GAAgBjZ,GkB9ID+8B,CAAsBV,GAAU,GAC9CW,KAAarU,KAAK,CACdsU,QAASzL,KAAc,mCACvB0L,YAAa1L,KAAc,yCAEjC,MAAO/a,GACLqD,QAAQC,MAAM,WAAYsiB,EAAU5lB,GACpCumB,KAAajjB,MAAM,CACfkjB,QAASzL,KAAc,gCACvB0L,YAAa1L,KAAc,uCAIvC,MAAO,CACHrX,YACAlE,KAAI3V,wBAAA,GAAOg8B,GAAW,IAAE7mB,SA+C1B0nB,GAAmB,CACrBC,SAAU,CAAEx9B,KAAM,WAAqBy9B,KAAM,KAC7CC,SAAU,CAAE19B,KAAM,WAAqBy9B,KAAM,MAoBpCE,GAAU5O,mBAAkB,CAACC,EAAKC,KACpC,CACH5Y,KAAMT,KACNgoB,QAASA,CAACC,EAAeC,KAErB,MAAMnD,EAAmBtB,GAAYxH,WAAW8I,iBAChD,GAA6B,oBAAlBkD,EACP7O,GAAIjoB,IACA,MAAMg3B,EAAWF,EAAc92B,EAAIsP,MAGnC,OAFAskB,EAAiBoD,EAA0B,OAAhBD,QAAgB,IAAhBA,MAEpB,CAAEznB,KAAM0nB,WAIlB,GAhCN,OADoB1nB,EAiCKwnB,IAhCG,KAAZxnB,EAAKR,GAiChB8kB,EAAiBkD,EAAeC,GAChC9O,EAAI,CAAE3Y,KAAMwnB,QAEX,CACD,MAAM3lB,EAAcxX,YAAA,CAAKmV,GAAIC,eAAW+nB,GACxClD,EAAiBziB,EAAgB4lB,GACjC9O,EAAI,CAAE3Y,KAAM6B,IAxCG7B,OA2CvB2nB,WAAY,SACRr7B,GAGE,IAADs7B,EAAA,IAFDC,EAAmCnmB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAIja,GAAUA,EACjDujB,EAAOtJ,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EAEP,MAAM,QAAE4lB,GAAY3O,IACdkP,EAAkBtnB,IACpB+mB,GAAQQ,IAAO,IAAAC,EAAA,OAAA39B,wBAAA,GACR09B,GAAO,IACV,CAACz7B,GAAMu7B,EAA4B,kBAANrnB,GAA+B,kBAANA,GAAkB0B,MAAMC,QAAQ3B,GAAKA,EAAK,OAADA,QAAC,IAADA,GAAS,QAARwnB,EAADxnB,EAAGynB,cAAM,IAAAD,OAAR,EAADA,EAAWvgC,aAIlH,IAAKujB,EAAS,OAAO8c,EACrB,MAAMI,EAAmC,kBAAZld,EACE,QADkB4c,EAC3CV,GAAiBlc,UAAQ,IAAA4c,SAAIjmB,EAC7BqJ,EAEN,IAAKkd,EAAe,OAAOJ,EAC3B,MAAM,KAAEV,EAAI,KAAEz9B,GAASu+B,EAEvB,MAAa,aAATv+B,EAA4Bw9B,KAASW,EAAgBV,GAC5C,aAATz9B,EAA4B09B,KAASS,EAAgBV,GAElDU,OCzMNK,GAAazP,mBAAsBC,IAC5C,MAAM,WACFyP,EAAU,YACVC,EAAW,kBACXC,EAAiB,mBACjBC,EAAkB,0BAClBC,GACA,MACA,IAAK,IAADC,EACA,MAAMC,EAAc7lB,KAAKC,MAAqC,QAAhC2lB,EAACjP,aAAaC,QAAQ,kBAAU,IAAAgP,IAAI,MAElE,OAAIC,GAAsC,kBAAhBA,IAA6BxmB,MAAMC,QAAQumB,GAAqBA,EACnF,GACT,MAAOloB,GAEL,OADAqD,QAAQC,MAAM,gDAAiDtD,GACxD,KARX,GAYJ,MAAO,CACHmoB,QAAS,CACLP,WAAYlmB,MAAMC,QAAQimB,IAAwC,kBAAlBA,EAAW,IAA4C,kBAAlBA,EAAW,GAC1FA,EACA,CAACvgC,EAAYC,MAAOD,EAAYE,QACtCsgC,YAAoC,mBAAhBA,GAA4BA,EAChDC,kBAAgD,mBAAtBA,GAAkCA,EAC5DC,mBAAkD,mBAAvBA,GAAmCA,EAC9DC,0BAAgE,mBAA9BA,GAA0CA,GAEhFI,cAAeC,IACXlQ,GAAImQ,IACA,MAAMC,EAA6C,oBAAzBF,EACpBA,EAAqBC,EAAaH,SAAQt+B,wBAAA,GACrCy+B,EAAaH,SAAYE,GAIpC,OAFArP,aAAauB,QAAQ,UAAWlY,KAAKmmB,UAAUD,IAExC,CACHJ,QAASI,WC5BhBE,GAAgB5e,IAQP,IARQ,UAC1B6e,EAAS,eACTC,EAAc,gBACdC,EAAe,UACfC,EAAS,SACTC,EAAQ,gBACRC,EAAe,mBACfC,GACYnf,EACZ,MAAMyQ,EAAWQ,MAEbtb,KAAMypB,GACNnC,KACEc,EAAaD,IAAW7O,GAASA,EAAMqP,QAAQP,cAC/C,QACFj+B,EAAO,KACPzB,EAAI,WACJwB,GACAu/B,EACEC,EAAcC,kBAAO,GAErB9iB,EAAW+iB,uBAAY,WAA0C,IAADvW,EAAA,IAAxC1D,EAAsBjO,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG0mB,EACnD,MAAMyB,EAAaT,EAAgBrB,QAE7B+B,EAAwB,OAAVD,QAAU,IAAVA,OAAU,EAAVA,EAAYE,YAC1BC,EAA8B,OAAVH,QAAU,IAAVA,OAAU,EAAVA,EAAYI,WAAW,MAC3CC,EAAgC,OAAXJ,QAAW,IAAXA,OAAW,EAAXA,EAAaG,WAAW,MACnD,GAAIJ,GAAcG,GACXF,GAAeI,IACdhB,EAEJ,IACQvZ,IACAma,EAAYhiC,MAAQ6nB,EAAK,GACzBma,EAAY/hC,OAAS4nB,EAAK,IAG9Bua,EAAmBC,UACfN,EACA,EAAG,EAAGA,EAAW/hC,MAAO+hC,EAAW9hC,OACnC,EAAG,EAAG+hC,EAAYhiC,MAAOgiC,EAAY/hC,QAGzC,MAAM+hB,EAAiB3D,GAAkBzd,GACzC,IAAI6d,EAAOI,SAASC,cAAc,KAClCL,EAAKM,SAAWiD,EAAc,GAAAre,OACrBqe,EAAc,QACjB,WACNvD,EAAKO,KAAOgjB,EAAYpe,UAAU,aAClCnF,EAAK6jB,QACP,MAAO5pB,GACL+oB,IAGsC,QAA9ClW,EAAA1M,SAAS4M,cAAc,+BAAuB,IAAAF,GAA9CA,EAAgDgX,UAAU3iB,OAAO,YACjE8hB,MACD,CAACJ,EAAiBF,EAAWxgC,EAAM0/B,EAAYoB,EAAoBD,IAuHtE,OA3GAe,qBAAU,KACN,IAAIC,GAAW,EAWf,OAVAC,YAAW,KACP,MAAM1gB,EAAiB3D,GAAkBzd,GAErC6hC,IACA5jB,SAAS8jB,MAAQ3gB,EAAc,GAAAre,OACtBqe,EAAc,sBACjB,qBAEX,KAEI,KACHygB,GAAW,KAEhB,CAAC7hC,IAEJ4hC,qBAAU,KACN,IAAII,EAAmBA,KAAO,IAADC,EACzBnR,aAAauB,QAAQ,YAAalY,KAAKmmB,UAAUS,IACjDjQ,aAAauB,QAAQ,eAA6C,QAA/B4P,EAAEj/B,SAA6Bi/B,EAAI,YAI1E,OAFA5jB,OAAO6jB,iBAAiB,eAAgBF,GAEjC,KACH3jB,OAAO8jB,oBAAoB,eAAgBH,OAInDJ,qBAAU,KACN,IAAIC,GAAW,EACXO,EAAiBC,IACjBA,EAAGlY,iBACIiI,EAAS,kCAEpB,IAAuB,IAAnBqO,EAA0B,CAC1B,IAAK,IAAD6B,EACAxR,aAAauB,QAAQ,YAAalY,KAAKmmB,UAAUS,IACjDjQ,aAAauB,QAAQ,eAA6C,QAA/BiQ,EAAEt/B,SAA6Bs/B,EAAI,WACxE,MAAOxqB,GAEL,MAAMlU,EAAM,mCACZy6B,KAAakE,MAAM3+B,GACnBy6B,KAAajjB,MAAM,CACfxX,MACA06B,QAASlM,EAAS,+BAClBmM,YAAanM,EAAS,qCAY9B,WAEoB,IAADoQ,EAAAC,EAAAC,EAAf,GADkBhC,EAAgBrB,UAE9BhhB,OAAO6jB,iBAAiB,eAAgBE,GACA,QAAxCI,EAAAvkB,SAAS0kB,eAAe,wBAAgB,IAAAH,GAAxCA,EAA0Cb,UAAU3iB,OAAO,uBACb,QAA9CyjB,EAAAxkB,SAAS0kB,eAAe,8BAAsB,IAAAF,GAA9CA,EAAgDG,aAAa,QAAS,IACxB,QAA9CF,EAAAzkB,SAAS0kB,eAAe,8BAAsB,IAAAD,GAA9CA,EAAgDE,aAAa,QAAS,kBAEtEjC,EAAUtB,QAAQwD,iBAAkB,QAG9BlC,EAAUtB,QAAQyD,gBAEpBjB,IACAlB,EAAUtB,QAAQyD,gBAAkBlC,EAAS,CACzCp/B,aACAC,UACAshC,WAAYA,IAAMlB,UAGhBlB,EAAUtB,QAAQyD,gBACpBjB,IAAU,CAAC,IAADmB,EAAAC,EAAAC,EAEV,MAAM/pB,EAAcxX,wBAAA,GAAQo/B,GAAW,IAAE9sB,QAAS,GAAIU,eAAgB,KAChEuE,EAAgBiB,KAAKmmB,UAAUxnB,GAAiBK,IACzB,kBAAlBD,GTrJhC,SAAwBtV,EAAa7E,GACxC,GAAIsf,OAAOqS,QAAQyS,UAAW,CAC1B,IAAI5S,EAAe,IAAI6S,gBAAgB/kB,OAAOgS,SAASgT,QACvD9S,EAAaN,IAAIrsB,EAAK7E,GACtB,IAAIukC,EAASjlB,OAAOgS,SAASkT,SACvB,KACAllB,OAAOgS,SAASmT,KAChBnlB,OAAOgS,SAASoT,SAChB,IACAlT,EAAamT,WACnBrlB,OAAOqS,QAAQyS,UAAU,CAAEQ,KAAML,GAAU,GAAIA,IS2IYM,CAAe,OAAQ1qB,GAEtB,QAAxC8pB,EAAA/kB,SAAS0kB,eAAe,wBAAgB,IAAAK,GAAxCA,EAA0CrB,UAAUkC,IAAI,uBACV,QAA9CZ,EAAAhlB,SAAS0kB,eAAe,8BAAsB,IAAAM,GAA9CA,EAAgDL,aAAa,QAAS,iBACxB,QAA9CM,EAAAjlB,SAAS0kB,eAAe,8BAAsB,IAAAO,GAA9CA,EAAgDN,aAAa,QAAS,iBACtEvkB,OAAO8jB,oBAAoB,eAAgBC,GAC3CzB,EAAUtB,QAAQwD,iBAAkB,EAEhC7B,EAAY3B,UACZ2B,EAAY3B,SAAU,EACtBlhB,OAnCpB,GA2CJ,MAAO,KACHE,OAAO8jB,oBAAoB,eAAgBC,GAC3CP,GAAW,MAIZ,CACHiC,OAvHY7c,IAA6B,IAAD8c,EACM,QAA9CA,EAAA9lB,SAAS4M,cAAc,+BAAuB,IAAAkZ,GAA9CA,EAAgDpC,UAAUkC,IAAI,YAC9D,MAAMG,EAAc/c,EAAO,IAAIA,QAA4BhO,EAE3D6oB,YAAW,MACmC,IAAtCnB,EAAUtB,QAAQwD,gBAClB1kB,EAAS6lB,GACNhD,EAAY3B,SAAU,IAC9B,MAgHH4E,kBAAmBA,IAAMtD,EAAUtB,QAAQwD,kB,mCCtMnCqB,GAAqC/kC,EAA7CE,OAA6B8kC,GAAgBhlC,EAAvBC,MAKjBglC,GAAa,SAAC,GAYpB,IAXHC,EAWE,EAXFA,IAWE,IAVFtiC,aAUE,MAf+B,UAAUwW,QAAQ,MAAM,qBAA0B,GAAhBsD,KAAK4O,SAAgB,IAAIiZ,SAAS,OAenG,EAVyBtkC,EAUzB,EAVyBA,MAUzB,IATFmpB,cASE,MATO,EASP,EARF+b,EAQE,EARFA,KAAMC,EAQJ,EARIA,SACNC,EAOE,EAPFA,OAQMC,EAAmBJ,EAAItgC,UAC7BsgC,EAAItgC,UAAYhC,EAChBsiC,EAAIK,YACJL,EAAIM,KAAKL,EAAOE,EAAQD,EAAW,EAAI1oB,KAAK4O,SAAWlC,EAAQnpB,EAAQolC,EAAQ,GAE/EH,EAAItgC,UAAY0gC,GAWPG,GAA0B,SACnCP,EACAQ,EACAC,EACAR,EACAC,EACAQ,GAIA,IAAKV,IAAQQ,EAAK,OAAOP,EADxB,cAG0BS,QAH1B,IAG0BA,IAAU,IAA7BC,cAHP,SAIDX,EAAIY,UAAY,OAChB,IAAMC,EAAWL,EAAI3sB,MAAM,IACvBitB,EAAUb,EAQd,OANAY,EAAS7rB,SAAQ,SAAA+rB,GACbf,EAAIgB,SAASD,EAAMD,EAASZ,GACxBS,GAAQX,EAAIiB,WAAWF,EAAMD,EAASZ,GAC1CY,GAAWd,EAAIkB,YAAYH,GAAMhmC,OAAS,EAAI0lC,GAAsB,KAGjEK,GAGEK,GAA2B,SACpCnB,EACAQ,EACA97B,EACAu7B,EACAC,EACAQ,GAIA,IAAKV,IAAQQ,EAAK,OAAOP,EADxB,cAG0BS,QAH1B,IAG0BA,IAAU,IAA7BC,cAHP,SAIDX,EAAIY,UAAY,QAChB,IAAMC,EAAWL,EAAI3sB,MAAM,IACvButB,EAAWnB,EAQf,OANAY,EAAS7rB,SAAQ,SAACqsB,EAAGjd,GACjB,IAAM2c,EAAOF,EAASA,EAASjtB,OAASwQ,EAAQ,GAChD4b,EAAIgB,SAASD,EAAMK,EAAUlB,GACzBS,GAAQX,EAAIiB,WAAWF,EAAMK,EAAUlB,GAC3CkB,GAAYpB,EAAIkB,YAAYH,GAAMhmC,OAAS,EAAI2J,GAAiB,KAE7D08B,GAIEE,GAAc,SACvBtB,GAGmC,IAFnCjlC,EAEkC,uDAF1B+kC,GACR9kC,EACkC,uDADzB6kC,GAET,QAAIG,IACAA,EAAIuB,UAAU,EAAG,EAAGxmC,EAAOC,IAEpB,IAMFwmC,GAAoB,SAC7BtyB,GAEE,IADFuyB,EACC,uDAD8C39B,EAE/C,gDAAO,WACHk8B,EACArkC,EACA+lC,GAHG,0CAAAla,EAAA,yDAKEwY,GAAQ7qB,MAAMC,QAAQlG,MAAWA,EAAO0E,QAAU,GALpD,yCAK8D+tB,QAAQC,WALtE,sBAMsB1yB,GANtB,4DAMQ2yB,EANR,QAOOC,EAAoBL,EAAUI,IAChCH,IAAUD,EAAUI,GARzB,oBASa99B,EAAuB+9B,EAAvB/9B,qBACFg+B,EAAkBpmC,GAAI,UAAGoI,EAAmBpI,UAAtB,QAAoC,IAE5CiY,OAZzB,gCAakEmuB,GAblE,gFAasBtgC,iBAbtB,MAakC,cAblC,MAaiDrE,eAbjD,MAa2D,EAb3D,EAca4iC,EAAIgC,yBAA2BvgC,EAC/Bu+B,EAAIiC,YAAc7kC,EAf/B,UAiBmBskC,EAAOG,GAjB1B,0LAoBeH,EAAOG,GApBtB,QAsBK7B,EAAIiC,YAAc,EAClBjC,EAAIgC,yBAA2B,cAvBpC,+IA0BHhC,EAAIiC,YAAc,EAClBjC,EAAIgC,yBAA2B,cA3B5B,8EAAP,2DAkCEE,GAAuB,UACvBC,GAAqB,UAEdC,GAAe,SAAC,GASJ,IARrBpC,EAQoB,EARpBA,IAQoB,IAPpBhwB,SAOoB,MAfQ,EAeR,MANpBC,SAMoB,MAdQ,EAcR,MALpBoyB,YAKoB,MAbI,EAaJ,MAJpB3kC,aAIoB,MAJZykC,GAIY,MAHpBxhC,mBAGoB,MAHNuhC,GAGM,EAOpB,OANAlC,EAAIn/B,cAAgBmP,EACpBgwB,EAAIp/B,cAAgBqP,EACpB+vB,EAAIl/B,WAAauhC,EACjBrC,EAAIr/B,YAAcA,EAClBq/B,EAAItgC,UAAYhC,EAET,WACHsiC,EAAIn/B,cAvBoB,EAwBxBm/B,EAAIp/B,cAvBoB,EAwBxBo/B,EAAIl/B,WAvBgB,EAwBpBk/B,EAAIr/B,YAAcuhC,GAClBlC,EAAItgC,UAAYyiC,KCnKxB,MAAMG,GAKD,GAEQC,GAAWje,eACpB0b,EACAwC,GAGE,IAFFC,EAAkD9tB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrD+tB,EAAkD/tB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErD,OACO,IAAIgtB,QADN3B,GAAkB,KAAXwC,EACgBZ,IAAY,IAADe,EAAAC,EAMnC,IAAqC,KAAZ,QAArBD,EAAAL,GAAcE,UAAO,IAAAG,OAAA,EAArBA,EAAuBE,OAAgB,CACvC,MAAMrjC,EAAQ8iC,GAAcE,GAAQhjC,MAC9BsjC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGjjC,GAC/CujC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGljC,GAKrD,OAHAwgC,EAAI5C,UAAU59B,EAAOsjC,EAAaC,QAElCtF,YAAW,IAAMmE,GAAQ,IAAO,GAGpC,GAAyB,QAAzBgB,EAAIN,GAAcE,UAAO,IAAAI,OAAA,EAArBA,EAAuB7rB,MAEvB,YADA0mB,YAAW,IAAMmE,GAAQ,IAAO,GAIpC,MAAMoB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7FrjC,EAAQwjC,EACRV,GAAcE,GAAQhjC,MACtB,IAAI0jC,MAELF,IAAaxjC,EAAMf,IAAME,aAAyB6jC,GACvDhjC,EAAMq+B,iBACF,QACA,KACI,MAAMiF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGjjC,GAC/CujC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGljC,GAErDwgC,EAAI5C,UAAU59B,EAAOsjC,EAAaC,GAC9BT,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQzrB,OAAQ,GAElC6qB,GAAQ,KAEZ,CAAEuB,MAAM,IAEZ3jC,EAAMq+B,iBACF,SACA,KACQyE,GAAcE,KACdF,GAAcE,GAAQzrB,OAAQ,GAElC6qB,GAAQ,KAEZ,CAAEuB,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtChjC,MAAOA,EACPqjC,OAAO,EACP9rB,OAAO,EACPksB,OAAO,KA1DwCrB,GAAWA,GAAQ,KA8DjEwB,GAAY9e,eACrB0b,EACAwC,GAGE,IAFFC,EAAkD9tB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACrD+tB,EAAkD/tB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErD,aAAa4tB,GACTvC,EACA,gBAAkBwC,EAClBC,EAAIC,IAyECW,GAA6C/e,MACtD0b,EACAwC,EACAC,EAAIC,EACJY,EAAIC,SAzEwBjf,OAC5B0b,EACAwC,EACAC,EACAC,EACAY,EACAC,IAGO,IAAI5B,QADN3B,GAAkB,KAAXwC,EACgBZ,IAAY,IAAD4B,EAAAC,EAEnC,IAAqC,KAAZ,QAArBD,EAAAlB,GAAcE,UAAO,IAAAgB,OAAA,EAArBA,EAAuBX,OAAgB,CACvC,MAAMrjC,EAAQ8iC,GAAcE,GAAQhjC,MAC9BsjC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGjjC,GAC/CujC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGljC,GAC/CkkC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAG9jC,GAC/CmkC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAG/jC,GAIrD,OAFAwgC,EAAI5C,UAAU59B,EAAOsjC,EAAaC,EAAaW,EAAaC,QAC5DlG,YAAW,IAAMmE,GAAQ,IAAO,GAGpC,GAAyB,QAAzB6B,EAAInB,GAAcE,UAAO,IAAAiB,OAAA,EAArBA,EAAuB1sB,MAEvB,YADA0mB,YAAW,IAAMmE,GAAQ,IAAO,GAIpC,MAAMoB,EAAcV,GAAcE,KAAYF,GAAcE,GAAQS,OAASX,GAAcE,GAAQK,OAC7FrjC,EAAQwjC,EACRV,GAAcE,GAAQhjC,MACtB,IAAI0jC,MAELF,IAAaxjC,EAAMf,IAAME,aAAyB6jC,GACvDhjC,EAAMq+B,iBACF,QACA,KACI,MAAMiF,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGjjC,GAC/CujC,EAA4B,kBAAPL,EAAkBA,EAAKA,EAAGljC,GAC/CkkC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAG9jC,GAC/CmkC,EAA4B,kBAAPJ,EAAkBA,EAAKA,EAAG/jC,GAErDwgC,EAAI5C,UAAU59B,EAAOsjC,EAAaC,EAAaW,EAAaC,GACxDrB,GAAcE,KACdF,GAAcE,GAAQK,OAAQ,EAC9BP,GAAcE,GAAQzrB,OAAQ,GAElC6qB,GAAQ,KAEZ,CAAEuB,MAAM,IAEZ3jC,EAAMq+B,iBACF,SACA,KACQyE,GAAcE,KACdF,GAAcE,GAAQzrB,OAAQ,GAElC6qB,GAAQ,KAEZ,CAAEuB,MAAM,IAGPH,IAAaV,GAAcE,GAAU,CACtChjC,MAAOA,EACPqjC,OAAO,EACP9rB,OAAO,EACPksB,OAAO,KAzDwCrB,GAAWA,GAAQ,IAmE7DgC,CACT5D,EACA,gBAAkBwC,EAClBC,EAAIC,EACJY,EAAIC,GAICM,GAAgBvf,MACzBwf,EACAtB,EACAuB,EAAYC,EACZC,EAAYC,EACZvhB,KAEA,MAAMqd,EAAM8D,EAAO5G,WAAW,MACxBiH,EAAevqB,SAASC,cAAc,UAC5CsqB,EAAappC,MAAQkpC,EACrBE,EAAanpC,OAASkpC,EACtB,MAAME,EAAYD,EAAajH,WAAW,KAAM,CAAEmH,oBAAoB,IAEtE,IAAKD,IAAcpE,EAAK,aASlBqD,GAAkBe,EAAW5B,EAAQ,EAAG,EAAGyB,EAAIC,IAC5C,OAALvhB,QAAK,IAALA,OAAK,EAALA,EAAOjlB,SACP0mC,EAAU1kC,UAAYijB,EAAMjlB,MAC5B0mC,EAAUE,SAAS,EAAG,EAAGL,EAAIC,GAC7BE,EAAUpC,yBAA2B,wBAEnCqB,GAAkBe,EAAW5B,EAAQ,EAAG,EAAGyB,EAAIC,GACrDE,EAAUpC,yBAA2B,cAGrC,MAAMuC,EAAuBnC,GAAY9kC,YAAC,CAAE0iC,OAAQrd,IACpDqd,EAAI5C,UAAU+G,EAAcJ,EAAIC,GAChCO,KC3KG,IAAMC,GAAiB,SAAC,GAgBxB,IAAD,IAfFxE,EAeE,EAfFA,IACAyE,EAcE,EAdFA,OAcE,IAbFC,oBAaE,SAZFxf,EAYE,EAZFA,MACAtf,EAWE,EAXFA,UACAu6B,EAUE,EAVFA,OAUE,IATFn6B,oBASE,MATa,WASb,EACF,GAAI4G,GAAwBib,KAAK4c,GAAS,MAAO,CAC7C1pC,MAAO,EACP4pC,WAAY,GAGhB,IAAMC,EAAmC,QAAdh/B,EACrB4I,GACAH,GACAw2B,EAA0B,QAAdj/B,EACZ0I,GACAH,GACA22B,EAAoC,QAAdl/B,EACtB2I,GACAH,GACA22B,EAAS/E,EAAIkB,YAAYuD,GAE3B1pC,EAGAgqC,EAHAhqC,MAIEiqC,EADFD,EAFAE,sBAEAF,EADAG,uBAGAC,EAAoB,EACH,SAAjBn/B,IACAm/B,EAAoB,EAAmB,GAAd,EAAIhF,IAEjC,IAQyB,EARnBiF,EAAgC,SAAjBp/B,GAA4C,YAAjBA,GAA+C,aAAjBA,EACpE,QACA,EACN2+B,EAAaK,EACbK,EAAW,UAAIX,EACbI,EAAoBL,GACpBI,EAAUJ,UAFD,QAEa,EAE5B,GAAkB,QAAd7+B,EAGA,MAAO,CACH7K,QACAiqC,mBACAL,WAAY5pC,EAAQ,IALD,UAAC6pC,EAAmBH,UAApB,QAA+B,GAAK1pC,GAMvDgqC,SACAM,eAIR,IAAIC,GAAmB,UAACV,EAAmBH,UAApB,QAA+B,GAAK1pC,GACnC,aAAjBiL,EACG,EACAwR,KAAKoJ,IACK,KAAR7lB,EACAyc,KAAKqJ,IAAI,IAAO9lB,EAAQqqC,GAAgBD,IAIhDI,EAAsB,EACtB13B,GAAYga,KAAK4c,IACjBE,EAA8B,aAAjB3+B,EACPg/B,EACAA,GAAqC,YAAjBh/B,EAA6B,KAAQ,KAC/Du/B,EAAsB,IAEjBz3B,GAAa+Z,KAAK4c,IACvBE,EAA8B,aAAjB3+B,EAA8Bg/B,EAAmBxtB,KAAKqJ,IAAImkB,EAA0B,IAARjqC,GACzFuqC,EAAmB,GAEdj4B,GAAawa,KAAK4c,GACvBE,EAA8B,aAAjB3+B,EAA8Bg/B,EAAmBxtB,KAAKqJ,IAAImkB,EAA0B,GAARjqC,GAEpF0S,GAAeoa,KAAK4c,GACzBE,EAAa5pC,EAERiT,GAA6B6Z,KAAK4c,GACvCE,EAAgC,EAAnBK,EAER/2B,GAAuB4Z,KAAK4c,GACjCE,EAAgC,KAAnBK,GAA4BN,E3BlBJ,G2BkBmD,GAEnF/2B,GAAcka,KAAK4c,GACxBE,EAA8B,aAAjB3+B,EAA8Bg/B,EAAmBxtB,KAAKqJ,IAAImkB,EAA0B,IAARjqC,GAEpF6S,GAAcia,KAAK4c,GACxBE,EAAantB,KAAKqJ,IAAImkB,EAA0B,IAARjqC,IAChB,YAAjBiL,EAA6B,KAAU,GAEzC+H,GAAa8Z,KAAK4c,IACvBE,EAAa5pC,EACbuqC,EAAmB,GAGnBX,EAA8B,aAAjB3+B,EAA8Bg/B,EAAmBxtB,KAAKqJ,IAAImkB,EAA0B,IAARjqC,GAE7FuqC,EAAoC,aAAjBt/B,EAA8B,EAAIs/B,EAErD,IAAME,EAzCY,EAyCQzqC,EAxCP,EA2CnB,OADImqB,GAAOpO,QAAQ6O,KAAR,yBAA+BT,GAASuf,EAAQM,EA3CzC,EACC,EA0C2E,IAAKS,GAC5F,CACHzqC,QACAiqC,mBACAL,WAA6B,aAAjB3+B,EACNjL,EAAQwqC,EACRZ,EAAgC,EAAnBW,EACnBP,SACAM,gBAaKI,GAAa,SAAC,GAkBpB,IAjBHzF,EAiBE,EAjBFA,IACAE,EAgBE,EAhBFA,SACAD,EAeE,EAfFA,KACAwE,EAcE,EAdFA,OACAtE,EAaE,EAbFA,OAaE,IAZFuF,iBAYE,MAZU,GAYV,EAXFC,EAWE,EAXFA,aACAC,EAUE,EAVFA,WAUE,SAKED,QALF,IAKEA,IAAgB,GAHhBhB,EAFF,EAEEA,WAFF,IAGEI,cAHF,MAGW/E,EAAIkB,YAAYuD,GAH3B,MAIEY,mBAJF,MAIgB,EAJhB,IASElF,EAAS,EAAI,GAAKuF,EATpB,IAOEt+B,QAASy+B,OAPX,MAO8B9gC,EAP9B,MAQEsC,cARF,MAQWtC,EARX,EAWI+gC,EAAcf,EAAOhqC,MAAQolC,EAC7B4F,EAAsBpB,EAAaA,EAAaxE,EAAS2F,EACzD/jB,EAAM,OAAG6jB,QAAH,IAAGA,IAAe,YAKvB,IAJH5F,EAIE,EAJFA,IACAyE,EAGE,EAHFA,OACAuB,EAEE,EAFFA,eACAC,EACE,EADFA,WAEAjG,EAAIgB,SAASyD,EAAQwB,EAAYD,IAG/BE,GAAkBJ,EAAcC,GAAuB,EACvDI,EAAiBJ,EAAsBV,EAC7CrF,EAAIngB,MAAM,EAAGxY,GACb0a,EAAO,CACHie,MACAyE,SACAwB,WAAYhG,EAAOE,EAAS+F,EAAiBC,EAC7CH,gBAAiB9F,EAAW2F,GAAoBx+B,IAEpD24B,EAAIngB,MAAM,EAAG,EAAIxY,ICjNd,MAAM++B,GAAe,SAAC1qC,GAAgD,IAAlC2qC,EAAoB1xB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAC3D,MAAM2xB,EAAQD,EACR,IAAIt6B,OAAO,KAADrN,OAAMkQ,GAAgB,QAAAlQ,OAAO0N,GAAY,cAAA1N,OAAa2N,GAAa,YAC7E,IAAIN,OAAO,KAADrN,OAAMkQ,GAAgB,OAAAlQ,OAAM0N,GAAY,gBAAA1N,OAAe2N,GAAa,WAEpF,OAAO3Q,EACFmY,MAAMyyB,GACNrjB,QAAO5G,GAAkB,MAATA,GAA2B,KAAVA,KAG7BkqB,GAAgBA,CACzBvG,EACA/4B,EACAu/B,EACAC,KAEA,MAAM,SACFtgC,EAAQ,iBACRtB,EAAmBT,EAAoBS,iBAAgB,kBACvDN,EAAoBH,EAAoBG,mBACxCiiC,GACE,KACFxmC,EAAI,YACJwF,EAAW,WACXC,EAAU,gBACVC,EAAe,WACfsE,EAAahK,EAAI,gBACjBiK,EAAkB,EAAC,aACnB1E,GACA0B,EAEJ,IAAIy/B,EAAmBD,EAAetjB,cAYtC,IAAIwjB,EAAmBF,EAAetjB,cAYtC,IAAIyjB,EAAoBH,EAAetjB,cAoBvC,IAAI0jB,EAAqBJ,EAAetjB,cAqBxC,IAAI2jB,EAAuBL,EAAetjB,cAS1C,MAAO,CACH4jB,gBA1EoBA,KACpBL,EAAmBD,EAAetjB,cAClC6c,EAAIhgC,KAAOymC,EAAe7iB,UAAU5Z,GAAYyZ,QAAQtd,EAAW8D,GAAiB+Y,WAwEnEgkB,oBAtEOA,KACxBhH,EAAIhgC,KAAOymC,EACN7iB,UAAU8iB,EAAiB3jB,QAC3BU,QAAQijB,EAAiB9jB,MACzBI,WAmELikB,gBAVoB,WAAoB,IAAnBC,EAASvyB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjCmyB,EAAuBL,EAAetjB,cACtC6c,EAAIhgC,KAAOymC,EAAehjB,QAAQtd,EAAW+gC,GAAWlkB,WAQvCmkB,oBANOA,KACxBnH,EAAIhgC,KAAOymC,EAAehjB,QAAQqjB,EAAqBlkB,MAAMI,WAM7DokB,gBAhEoBA,KACpBT,EAAmBF,EAAetjB,cAClC6c,EAAIhgC,KAAOymC,EAAe7iB,UAAUne,GAAYge,QAAQtd,EAAWT,GAAiBsd,WA8DnEqkB,oBA5DOA,KACxBrH,EAAIhgC,KAAOymC,EACN7iB,UAAU+iB,EAAiB5jB,QAC3BU,QAAQkjB,EAAiB/jB,MACzBI,WAyDLskB,iBArDqBA,KACrBV,EAAoBH,EAAetjB,cACnC6c,EAAIhgC,KAAOymC,EAAe7iB,UAAUpe,GAAaie,QAAQtd,EAAWtB,GAAkBme,WAmDpEukB,qBAjDOA,KACzBvH,EAAIhgC,KAAOymC,EACN7iB,UAAUgjB,EAAkB7jB,QAC5BU,QAAQmjB,EAAkBhkB,MAC1BI,WA8CLwkB,kBAlCsB,WAAmB,IAAlBC,EAAI9yB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAC3BkyB,EAAqBJ,EAAetjB,cACpC6c,EAAIhgC,KAAOymC,EAAe7iB,UAAUre,GAAc6d,UAAUqkB,EAAO,OAAS,IAAIhkB,QAAQtd,EAAW5B,GAAmBye,WAgCnG0kB,sBA9BOA,KAC1B1H,EAAIhgC,KAAOymC,EACN7iB,UAAUijB,EAAmB9jB,QAC7BK,UAAUyjB,EAAmB/8B,QAC7B2Z,QAAQojB,EAAmBjkB,MAC3BI,WA2BL2kB,qBAzCyB,WAA6B,IAA5BxH,EAAMxrB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGtN,EAAMsN,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/CqrB,EAAIngB,MAAMsgB,EAAQ94B,IAyClBugC,WAzBe,WAAkC,IAAjCC,EAAMlzB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAAGmzB,EAAMnzB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAGkzB,EACrC7H,EAAIngB,MAAMgoB,EAAQC,IAyBlBC,WA/CeA,KACf/H,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,IA+ChCC,aAvBiB,WAAqB,IAApBC,EAAUvzB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAC/BqrB,EAAIngB,MAAM,EAAIqoB,EAAY,EAAIA,MA8BzBC,GAAaA,CAACnI,EAA+BC,EAAcC,EAAkBnlC,EAAeqtC,KACrG,MAAMC,GAAgBttC,EAAQqtC,GAAc,EAC5CpI,EAAIK,YACJL,EAAIsI,IAAIrI,EAAOoI,EAAcnI,EAAWmI,EAAe,EAAGA,EAAc,EAAG,EAAI7wB,KAAK+wB,IAAI,GACxFvI,EAAIwI,OACJxI,EAAIngC,UAAY,EAChBmgC,EAAIyI,YAAc,UAClBzI,EAAIW,UAmBK+H,GAAkBprB,IAsBxB,IAtByB,SAC5BqrB,EAAQ,cAAEC,EAAa,SACvBC,EAAQ,oBAAEC,EAAmB,YAC7BC,EAAW,gBACXvkC,EAAe,WACfwkC,EAAU,MACV9jB,EAAK,YACL+jB,EAAW,eACXC,EAAc,OACd/I,GAaH7iB,EACG,MAAM6rB,EAAiC,IAApBN,EAASj1B,OACtBw1B,EAAmBN,EAAsBF,EAAgBM,EAC/D,IAAIG,EAA2B7kC,EAC3B8kC,EAAiB,EAEjBF,GAAoB,IAEpBC,EAA6C,EAAlB7kC,EAEtB4kC,GAAoB,MAEzBC,EAA2B7kC,GAAmB,EACxC,EACkB,EAAlBA,EAED4kC,GAAoB,KAEzBC,EAA2B7kC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,GAIN8kC,EAAiB,IACjBD,EAA2B7kC,GAAmB,GACrB,EAAnBA,EAAqB,EACH,EAAlBA,IAENykC,GAAgB9I,EAAS,GAAKA,EAAS,KACvCkJ,EAA2B7kC,GAG/B,MAAM+kC,EAA2BT,GAAwB3I,IAAW8I,EAC9D9I,GACMmJ,GAAkBL,EAAe,EAAIK,GACvCD,GAA4BR,EAASj1B,OAAS,GAClD41B,EAA2BL,EAAa,GAAKP,EAAgBE,GAAuBD,EAASj1B,OAC7F61B,EAA2Bb,EAE3Bc,EAAgC,IAApBf,EAAS/0B,QAA8B,EAAbo1B,EAAiBO,EAA2BX,EAClF,SACA,eACAlkC,EAA8B,WAAdglC,EAChBL,EACAG,EACAG,EAAkC,WAAdD,EACP,EAAbV,EAAiBO,EACjBE,EACAG,EAAgBX,EAChBzxB,KAAKoJ,IAAI+oB,EAAmBf,GAC5Be,EACAE,EAA4B,WAAdH,GACbH,EAA2BX,GAAiB,EAC7C,EACAkB,EAAUtyB,KAAKqJ,IACjBkoB,EACAE,EAAczxB,KAAKoJ,IAAIipB,EAAa,GAAKA,GAY7C,OATI3kB,GAAOpO,QAAQ6O,KAAK,mBAADjnB,OACAwmB,GACnBwkB,EACAhlC,EACA,IACAmkC,EAAUe,EAAeD,EACzBhB,EAAUC,EACVkB,GAEG,CACHd,aACAtkC,gBACAilC,oBACAC,gBAMAF,YAKAI,UACAC,eAA8B,WAAdL,EAAyBJ,EAAiB,IAcrDU,GAAmBA,CAACC,EAAiBC,IACvCD,GAAW,EACZC,GAAU,EACN,GACkC,EAAlC1yB,KAAKqJ,KAAe,EAAXopB,EAAcC,GAC3BA,GAAU,GAC4B,EAAlC1yB,KAAKqJ,IAAIopB,GAAmB,EAAVC,GAClB,ECvPP,IAAMC,GAAe,SAAfA,EAAgB,GAuBtB,IAtBHnK,EAsBE,EAtBFA,IACOoK,EAqBL,EArBF/tB,MAAiBguB,EAqBf,EArBeA,UACjBlK,EAoBE,EApBFA,OAoBE,IAnBFmK,wBAmBE,MAnBiB,EAmBjB,MAlBF5lC,qBAkBE,MAlBcN,EAAoBM,cAkBlC,EAjBFgK,EAiBE,EAjBFA,OACA67B,EAgBE,EAhBFA,SAiBA,IAAKvK,IAAQoK,EAAU,MAAO,CAC1BI,WAAY,EACZC,eAAgB,GAChBC,WAAY,EACZC,YAAY,EACZC,SAAU,EACVC,QAAS,GA+Cb,IAtDE,IAUEC,EAGAP,EAHAO,YACA7jC,EAEAsjC,EAFAtjC,SACA8jC,EACAR,EADAQ,UAGA/kC,EAIAiB,EAJAjB,aAfF,EAmBEiB,EAHA7B,wBAhBF,MAgBqBJ,EAAgBI,iBAhBrC,IAmBE6B,EAFA/B,wBAjBF,MAiBqBF,EAAgBE,iBAjBrC,EAkBEU,EACAqB,EADArB,UAEE4gC,EAAev/B,EAASpB,SAASklC,GAEnC7kC,EAQAsgC,EARAtgC,kBACA5B,EAOAkiC,EAPAliC,mBACA6B,EAMAqgC,EANArgC,SAxBF,EA8BEqgC,EALAn8B,uBAzBF,MAyBoBnE,EAzBpB,IA8BEsgC,EAJA/hC,wBA1BF,MA0BqBL,EAAoBK,iBA1BzC,IA8BE+hC,EAHAhiC,uBA3BF,MA2BoBJ,EAAoBI,gBA3BxC,EA4BEM,EAEA0hC,EAFA1hC,mBACAyB,EACAigC,EADAjgC,kBAEEykC,G7B+BsB,G6B/BT7kC,EA/BjB,EAuCEogC,GAAcvG,EAAK/4B,EAAUu/B,EAAcsE,GAN3ClD,EAjCF,EAiCEA,WAAYK,EAjCd,EAiCcA,aACZhB,EAlCF,EAkCEA,gBAAiBE,EAlCnB,EAkCmBA,oBACjBK,EAnCF,EAmCEA,kBAAmBE,EAnCrB,EAmCqBA,sBACnBJ,EApCF,EAoCEA,iBAAkBC,EApCpB,EAoCoBA,qBAClBH,EArCF,EAqCEA,gBAAiBC,EArCnB,EAqCmBA,oBACjBN,EAtCF,EAsCEA,gBAAiBC,EAtCnB,EAsCmBA,oBAGfvG,EAAqB,EAAI/7B,EAAgB,EAC3C+lC,EAAiB,GACjBD,EAAa,EACbE,EAAa,EACbC,GAAa,EACXjG,QAA6B9vB,IAAdy1B,EAEjBY,GAAe,OAAGX,QAAH,IAAGA,IAAoB,EAEtCY,IAAa,EACbC,GAAc,EAEZC,GAbQhB,EAAS/wB,WAAW,IAAItN,OAAOY,GAA6B,KAAM,IAarDkH,MAAM1H,IAAoB8W,QAAO,SAAAhW,GAAK,OAAa,MAATA,GAA2B,KAAVA,KAC7EsoB,GAAM,EAAGA,GAAM6V,GAAax3B,OAAQ2hB,KAAO,CAChD,IAAM8V,GAA6B,IAAR9V,GACrB+V,GAAWF,GAAa7V,IAG9B,G7BxHsB,W6BwHlB+V,GACAL,GAAkB,EAElBT,GADsBngC,EAAkB81B,EACVM,EAE1B4K,KACAF,GAAc,EACdV,EAAiBa,GAAS,SAI7B,G7BpBgB,W6BoBZA,GAA4B,CACjCL,GAAkB,EAElBT,GADsBtkC,EAAoBi6B,EACZM,EAE1B4K,KACAF,GAAc,EACdV,EAAiBa,GAAS,SAI7B,GAAI,SAAMzjB,KAAKyjB,IAAW,CAC3BL,GAAkB,EAClBhE,EAAgBxiC,GAChB,IAAM8mC,GAAgBvL,EAAIkB,YAAYoK,IAAUvwC,MAAQolC,EACxDgH,IACAqD,GAAce,GAAgB9K,EAE1B4K,KACAF,GAAc,EACdV,EAAiBa,GAAS,SAI7B,GAAI/9B,GAAqBsa,KAAKyjB,IAAW,CAC1CL,GAAkB,EAClB3D,IACA,IAAMiE,GAAgBvL,EAAIkB,YAAYoK,IAAUvwC,MAAQolC,EACxDoH,IACAiD,GAAce,GAAgB9K,EAE9BiK,GAAc,EACVW,KACAF,GAAc,EACdV,EAAiBa,GAAS,SAI7B,GAAI38B,GAAWkZ,KAAKyjB,IAAW,CAAC,IAAD,GACYA,GAASjyB,WAAW,OAAQ,IAAIxF,MAAM,SADlD,sBACzB80B,GADyB,MACf6C,GADe,eACL3C,QADK,OACM,GADN,GAE1BI,GAA2B,OAAbuC,GAGJ5C,GACZuB,EAAa,CAAEnK,MAAK3jB,MAAOssB,GAAU0B,YAAWlK,SAAQz7B,gBAAe4lC,iBAAkB,EAAG57B,SAAQ67B,aADpGC,WAIJhD,IACA,IAAMsB,GAAsBD,GACvBh1B,MAAM,IACN7G,KAAI,SAAAy3B,GAAM,OAAID,GAAe,CAAExE,MAAKyE,SAAQ7+B,YAAWI,aAAc,WAAYm6B,OAAQ,IAAKwE,cAC9FlhC,QAAO,SAACC,EAAKC,GAAN,OAAcD,EAAMC,IAAK,GACrC+jC,IAdgC,OAiBgBgB,GAAgB,CAC5DG,YACAC,oBAAqBA,GAAsB3I,EAC3CwI,YACAC,iBACAG,YAAaiC,EAAa7K,EAC1B37B,kBACAwkC,WAAY5jC,EAAmBe,EAAWg6B,EAC1C8I,eACAC,eAAgB/I,EAChBA,OAA8B,aAArBj7B,GAAmCyjC,GAAS/0B,OAAS,EAAK4D,KAAKoJ,IAAI,EAAGuf,E7B7E/D,I6B6E4F,IAV/F0J,GAjBe,GAiBxBC,QAAsBF,GAjBE,GAiBFA,cAYxBE,GAA8B,IAApBjB,GAASj1B,OACnB4D,KAAKqJ,IAAImqB,EAAYpC,GAAgB/5B,IACrCg7B,GACAgB,GAAUf,GACVc,GAAWd,GACXnF,GAAantB,KAAKqJ,IAAI+oB,GAAehB,IACrC6C,GAAgBzB,GAAiBiB,GAAiBJ,IAExDI,GAAkBL,GAClBJ,GAAc7F,GAAa8G,GAC3Bf,GAAc,EAEVW,KACAH,IAAa,EACbC,GAAcN,GACdJ,EAAiB9B,GAAS,SAI7B,GAAIz8B,GAAe2b,KAAKyjB,IAAW,CAEpC,IAAMI,GAA6BnlC,EAC7B,EAAIA,EAAoB,EACxBk6B,EACNT,EAAIt7B,cAAJ,WAAwBgnC,GAA6B,GAAKZ,EAAY3nB,cAAcN,aAApF,MASA,IAPA,IAAI8oB,GAAiBL,GACjBC,GAAgB,EAMM,KAAnBI,IAAuB,CAC1B,IAAIC,GAAgBD,GAAe,GAC/BE,GAAqBF,GAAevkB,MAAM,GAC1Coe,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAEhGiR,GAAyB6b,KAAK+jB,KAC9BhE,EAAW9iC,GACX0gC,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAChGktC,EAAanjC,IAGRgH,GAAmB+b,KAAK+jB,KAC7BhE,EAAWtjC,GACXkhC,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAChGktC,EAAa3jC,IAGRoJ,GAAYma,KAAK+jB,KACtB7E,IACAvB,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAChGisC,KAGKl6B,GAAqB+a,KAAK+jB,KAAgC,QAAdhmC,GACjDwhC,IACA5B,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAChGssC,KAIA7B,GAAoBxF,EAAIkB,YAAYyK,IAAgB5wC,MAAQilC,EAAIkB,YAAY2K,IAAoB9wC,MAEpGwwC,IAAiB/F,GACjBmG,GAAiBE,GAGrB,IAAMhB,GAAUrzB,KAAKqJ,IAAImqB,EAAYO,GAAgB18B,IAC/C+7B,GAAWC,GAGjBL,GAAce,GAFQvB,GAAiBiB,GAAiBJ,IAGxDI,GAAkBL,GAEdS,KACAF,GAAcN,GACdJ,EAAiBa,GAAS,IAE9BtL,EAAIt7B,cAAgB,WAGnB,GAAIoI,GAAqB+a,KAAKyjB,KAA2B,QAAd1lC,EAAqB,CACjEwhC,IACA,IAAMmE,GAAgBvL,EAAIkB,YAAYoK,IAAUvwC,MAAQ0lC,EACxD4G,IAEA,IAAMwD,GAAUrzB,KAAKqJ,IAAImqB,EAAYO,GAAgB18B,IAC/C+7B,GAAWC,GAGjBL,GAAce,GAFQvB,GAAiBiB,GAAiBJ,IAGxDI,GAAkBL,GAEdS,KACAF,GAAcN,GACdJ,EAAiBa,GAAS,QAG7B,CAAC,IAEIC,GADiB/G,GAAe,CAAExE,MAAKyE,OAAQ6G,GAAU5G,gBAAc9+B,YAAWI,eAAcm6B,WAA9FwE,WAC2BlE,EAC7BoK,GAAUrzB,KAAKqJ,IAAImqB,EAAYO,GAAgB18B,IAC/C+7B,GAAWC,GAGjBL,GAAce,GAFQvB,GAAiBiB,GAAiBJ,IAGxDI,GAAkBL,IAEF,QAAXl8B,GAAgC,QAAXA,GAAoB,MAAMmZ,KAAKyjB,OAClB,IAAhCv9B,GAAa8Z,KAAKyjB,MAErBZ,GAAc,EACVnV,KAAQ6V,GAAax3B,OAAS,IAAG+2B,GAAa,IAElDU,KACAF,GAAcN,GACdJ,EAAiBa,GAAS,IAE1Bp9B,GAAsB2Z,KAAKyjB,MAC3BH,GAAc,EACdF,GAAkB,IAK9B,MAAO,CACHT,aACAE,aACAC,aACAF,iBACAG,SAAUK,GACVJ,QAASM,GACTD,gBASKY,GAAc,SAAC,GAsBxB,IANG,IAfH9L,EAeE,EAfFA,IACA+L,EAcE,EAdFA,KACAhxC,EAaE,EAbFA,MACQixC,EAYN,EAZF7L,OACAzxB,EAWE,EAXFA,OACAu9B,EAUE,EAVFA,OACA1B,EASE,EATFA,SAUM2B,EAAY9F,GAAa2F,GAC3BI,EAAoB,EACpBC,EAAiB,EACjBC,EAAa,EAER9W,EAAM,EAAG4K,EAAS6L,EAAYzW,EAAM2W,EAAUt4B,OAAQ2hB,IAAO,CAClE,IAAMlZ,EAAQ6vB,EAAU3W,GAClB8U,EAAY6B,EAAU3W,EAAM,GAElC,GAAIlZ,IAAU7P,GAIT,GAAI6P,IAAU5P,GAAd,CAR6D,MAmB9D09B,GAAa,CAAEnK,MAAK3jB,QAAOguB,YAAWlK,SAAQmK,iBAAkB+B,EAAalM,EAAQoK,WAAU77B,WAN/Fg8B,EAb8D,EAa9DA,WACAF,EAd8D,EAc9DA,WACAG,EAf8D,EAe9DA,WACAE,EAhB8D,EAgB9DA,QACAD,EAjB8D,EAiB9DA,SACAH,EAlB8D,EAkB9DA,eASJ4B,EAAazB,EAAWzK,EACxBgM,GAAqB3B,EAAarK,IANrB,IAAR5K,GAAasV,EAAU,GAA2D,EAAvDrzB,KAAKoJ,I7B/QN,G6B+QmCiqB,EAAU1K,GAAe,IAE9E,IAAR5K,GAAa/nB,GAAiBqa,KAAK4iB,G7BhRH,E6BgRqDtK,EAAS,IAKnGiM,GAAkB1B,GAAcC,QAA4B/1B,IAAdy1B,EAA0B,EAAI,QApBxElK,EAAS6L,OAJT7L,EAAS,EA0BjB,IAAMmM,EAAqBF,EAAiB,GAAKrxC,EAAQoxC,GAAqBC,EAAiB,EAO/F,MAAO,CACHF,YACAK,WAReN,EACF,QAAXv9B,EACI49B,EAAqB,IAAQ,EAAIA,EACjCA,EAAqB,KAAQ,EAAIA,EACrCA,ICrYGE,GAAiB,SAAC,GAgBxB,IAfHxM,EAeE,EAfFA,IACAlf,EAcE,EAdFA,OACA2rB,EAaE,EAbFA,cAaE,IAZFC,2BAYE,MAZoB,EAYpB,EAXF3xC,EAWE,EAXFA,MACA2T,EAUE,EAVFA,OACA67B,EASE,EATFA,SAUQtjC,EAAwBsjC,EAAxBtjC,SAAU8jC,EAAcR,EAAdQ,UACVrmC,EAAkBuC,EAASpB,SAASklC,GAApCrmC,cACFioC,EAAyG,GACzGC,EAAmBH,EAAchpC,QAAO,SAACopC,EAAsBC,GAWjE,IATA,IAAMd,GAAclrB,GAAU,IAAM,IAAMA,GAAU,IAC9CisB,EAAchyC,EAAQixC,EACtBE,EAAY9F,GAAa0G,GAAM,GACjCE,EAAiB,EACjBC,EAAqB,GACrBC,EAAmB,EACnBb,EAAa,EACbc,EAAmB,EAEd5X,EAAM,EAAG4K,EAAS6L,EAAYzW,EAAM2W,EAAUt4B,OAAQ2hB,IAAO,CAClE,IAAMlZ,EAAQ6vB,EAAU3W,GAClB8U,EAAY6B,EAAU3W,EAAM,GAK9BlZ,IAAU7P,IACV2gC,GAAoB,EACpBhN,EAAS,GACF9jB,IAAU5P,KACjB0gC,GAAoB,EACpBhN,EAAS6L,GAZqD,MAmB9D7B,GAAa,CAAEnK,MAAK3jB,QAAOguB,YAAWlK,SAAQmK,iBAAkB+B,EAAY39B,SAAQhK,gBAAe6lC,aAJnGE,EAf8D,EAe9DA,eACAD,EAhB8D,EAgB9DA,WACAI,EAjB8D,EAiB9DA,SACAC,EAlB8D,EAkB9DA,QASAuC,EAAa5C,GAAc2C,EAAmB,EAAInB,EAAa,IAJ5C,IAARzW,GACRsV,EAAU,GAA2D,EAAvDrzB,KAAKoJ,I9BiDC,G8BjD6Buf,EAAQ0K,GAAgB,IACrEr9B,GAAiBqa,KAAK4iB,G9BiDA,E8BjDkD,GAC7E,GAGN,GAAIyC,EAAmBE,EAAaL,EAAa,CAC7C,IAAIhB,EAAOkB,EAAS1hC,KAAK,IAAIunB,OACzBqa,EAAmB,IAAGpB,GAAct/B,IACpC0gC,EAAmB,IAAGpB,EAAOv/B,GAAwBu/B,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACA/pB,gBAAiBlB,EACjBmrB,QAAQ,EACRqB,gBAAiBJ,IATwB,MAgBzC/C,GAAa,CAAEnK,MAAK3jB,QAAOguB,YAAWlK,SAAQmK,iBAAkB,EAAG57B,SAAQ67B,aAH3EC,EAbyC,EAazCA,WACAI,EAdyC,EAczCA,SACAC,EAfyC,EAezCA,QAMJqC,EADiB1C,IAFDK,EAAU,GAA2D,EAAvDrzB,KAAKoJ,I9B0BZ,G8B1B0Cuf,EAAQ0K,GAAgB,IAClFr9B,GAAiBqa,KAAK4iB,G9B0BA,E8B1BkD,IAG/E4B,EAAazB,EACbqC,EAAW,CAAC5wB,GACZ2wB,GAAkB,OAElBE,GAAoBE,EACpBf,EAAazB,EACbqC,EAASI,KAAKhxB,GAKtB,IAAI0vB,EAAOkB,EAAS1hC,KAAK,IAAIunB,OAW7B,OAVIqa,EAAmB,IAAGpB,GAAct/B,IACpC0gC,EAAmB,IAAGpB,EAAOv/B,GAAwBu/B,GACzDoB,EAAmB,EACnBR,EAAgBU,KAAK,CACjBtB,OACA/pB,gBAAiBlB,EACjBmrB,QAAQ,EACRqB,gBAAiBJ,IAGdL,EAAuBG,IAC/B,IArFsB,OAqFhBN,QArFgB,IAqFhBA,IAAuB,GAEhC,MAAO,CAAEC,kBAAiBC,qBCxGjBW,GAAe,SAAC,GAgCtB,IA/BHvN,EA+BE,EA/BFA,IACA75B,EA8BE,EA9BFA,SACA85B,EA6BE,EA7BFA,KAAMC,EA6BJ,EA7BIA,SACN2I,EA4BE,EA5BFA,SAAUC,EA4BR,EA5BQA,oBACVH,EA2BE,EA3BFA,SAAUC,EA2BR,EA3BQA,cACVG,EA0BE,EA1BFA,YACAvkC,EAyBE,EAzBFA,gBACAS,EAwBE,EAxBFA,oBACAE,EAuBE,EAvBFA,aACAC,EAsBE,EAtBFA,iBACA+6B,EAqBE,EArBFA,OACAv6B,EAoBE,EApBFA,UACA4nC,EAmBE,EAnBFA,WACAvE,EAkBE,EAlBFA,YACA/jC,EAiBE,EAjBFA,iBAkBQsiC,EAAqEgG,EAArEhG,kBAAmBE,EAAkD8F,EAAlD9F,sBAAuBK,EAA2ByF,EAA3BzF,WAAYH,EAAe4F,EAAf5F,WAExD6F,EAA+C,aAArBvoC,GAAmCyjC,EAAS/0B,OAAS,EAC/E4D,KAAKoJ,IAAI,EAAGuf,E/BsEU,I+BrEtB,EALJ,EAaEuI,GAAgB,CAChBG,WAAUC,sBACVH,WAAUC,cAAeA,EAAgBzI,EACzC4I,cAAavkC,gBAAiBA,EAAkB27B,EAChD6I,WAAY7iC,EAAWf,EACvB6jC,cACAC,eAAgB/I,EAChBA,OAAQsN,IAbRzE,EAPF,EAOEA,WACAtkC,EARF,EAQEA,cACAilC,EATF,EASEA,kBACAG,EAVF,EAUEA,QACAJ,EAXF,EAWEA,UACAK,EAZF,EAYEA,eAUE2D,EAAW/D,EAAoBf,EAAgBzI,EAErD,GAAwB,IAApB0I,EAASj1B,OAAc,MAAO,CAC9B+1B,oBACAG,WAIJ,IAAM6D,EAAqB1E,EACrBzxB,KAAKoJ,IAAI,EAAGgoB,EAAgBzI,EAASwJ,GACrC,EAGAiE,EAAiB3E,EACjB0E,EACCF,GAAwC,WAAd/D,EACvB+D,EACA1D,EAEN8D,EAAc5N,EAClB8H,KACIkB,GAAe2E,KACfhG,EAAWgG,EAAgB,GAC3BC,EAAc5N,EAAO2N,GAGP,WAAdlE,GACAmE,GAAe7E,EAEV0E,EAEME,EAAiBD,IACxBE,IAAgBjF,EAAgBzI,EAASyN,EAAiBjE,GAAqB,EAAIiE,GAFnFC,IAAgBjF,EAAgBzI,EAASwJ,GAAqB,GAKlEkE,GAAenpC,EAAgB,EAzDjC,qBA4DmBmkC,GA5DnB,IA4DF,2BAA+B,CAAC,IAArBpE,EAAoB,QAE3B+C,IAF2B,MAGGhD,GAAe,CAAExE,MAAKyE,SAAQ7+B,YAAWI,aAAc,WAAYm6B,OAAQ,IAAjGplC,EAHmB,EAGnBA,MAAO4pC,EAHY,EAGZA,WACTuB,GAAkBnrC,EAAQ4pC,GAAc,EAC9C+C,IAEAF,EAAkBriC,GAClB66B,EAAIgB,SAASyD,EAAQoJ,EAAc3H,EAAgBhG,EAAW/5B,EAAWlB,GACzEyiC,IACAmG,GAAgBlJ,EAAajgC,GAtE/B,8BA6EF,OALIukC,GAAe2E,IACf7F,IAEJH,EAAWzH,EAAQ,GAEZ,CACHwJ,oBACAG,YC5ED,MAAMgE,GAAWxwB,IAsBjB,IAtBkB,IACrB0iB,EAAG,UACHkM,EAAS,SACT1pC,EAAQ,aAAED,EAAY,WACtBgqC,EAAa,EACbpM,OAAQ6L,EAAU,OAAE3kC,EAAS,EAAC,SAC9BkjC,EAAQ,OACR77B,EAAM,WACNk3B,EAAU,MACV1gB,GAAQ,GAaX5H,EACG,MAAM,YACFwtB,EAAW,SACX7jC,EAAQ,UACR8jC,GACAR,EACE/D,EAAev/B,EAASpB,SAASklC,IACjC,kBACFz7B,EAAiB,aACjBnK,EAAeH,EAAgBG,aAAY,oBAC3CF,EAAsBD,EAAgBC,oBAAmB,iBACzDC,EAAmBF,EAAgBE,iBAAgB,iBACnDE,EAAmBJ,EAAgBI,iBAAgB,aACnDY,EAAY,UACZJ,EAAS,mBACTsB,EAAqB,IACrBD,GACE,mBACF5C,EAAqBD,EAAoBC,mBAAkB,kBAC3D6B,EAAiB,mBACjB5B,EAAqBF,EAAoBE,mBAAkB,SAC3D6B,EAAQ,gBACR3B,EAAkBJ,EAAoBI,gBAAe,gBACrD6F,EAAkBnE,EAAiB,iBACnCzB,EAAmBL,EAAoBK,iBAAgB,cACvDC,EAAgBN,EAAoBM,cAAa,mBACjDE,EAAqBR,EAAoBQ,mBAAkB,mBAC3DE,EAAqBV,EAAoBU,mBAAkB,kBAC3DyB,GACAigC,EACEgH,EAAajH,GAAcvG,EAAK/4B,EAAUu/B,EAAcsE,IACxD,sBACFpD,EAAqB,kBAAEF,EAAiB,oBACxCL,EAAmB,gBAAEF,EAAe,oBACpCD,EAAmB,gBAAED,EAAe,qBACpCQ,EAAoB,iBAAED,EAAgB,WACtCM,EAAU,aAAEK,EAAY,gBACxBb,EAAe,oBAAEC,EAAmB,qBACpCM,EAAoB,WAAEI,GACtByF,EAEE/M,EAAqB,EAAI/7B,EAAgB,EACzCw7B,GAAW39B,EAAe8E,EAChC,IAAIijC,GAAmB,EACnByD,GAAuE,GACvEC,GAA+B,EAC/BC,GAAYzrC,EAKhB,IAAK,IAAI0rC,EAAW,EAAG/N,EAAS6L,EAAYkC,EAAWhC,EAAUt4B,OAAQs6B,IAAY,CACjF,MAAM7xB,EAAQ6vB,EAAUgC,GAExB,GAAI7xB,IAAU7P,GAAuB,CACjC2zB,EAAS,EACTH,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC,SAEC,GAAI3rB,IAAU5P,GAAqB,CACpC0zB,EAAS6L,EACThM,EAAIngB,MAAMsgB,EAAQ,GAClB,SAEJ,MAAMgO,GhCXkB,GgCWYhO,EAC9B6K,EAAa7kC,EAAWgoC,EACxB9D,EAAY6B,EAAUgC,EAAW,GACjCE,EAAelC,EAAUgC,EAAW,GACpCG,GAAwB,CAC1BrO,MACAG,SACAz7B,gBACAgK,SACA67B,YAEE+D,GAAsB,CACxBtO,MACAE,YACAC,SACAyF,cAEEwF,GAAe/uB,EAAMxI,MAAM1H,IAAoB8W,QAAOhW,GAAkB,MAATA,GAA2B,KAAVA,KAEhF,eACFw9B,GAAc,QACdI,GACAD,SAAU2D,GACV/D,WAAYgE,GAAe,WAC3B9D,IACAP,GAAY7sC,YAAC,CACb+e,QAAOguB,YAAWC,iBAAkBA,GAAmBnK,GAAWkO,KAIhEI,GAAsB,IAAbP,GACRrD,GAAU,GAA2D,EAAvDrzB,KAAKoJ,IhCnDK,GgCmDwBiqB,GAAU1K,GAAe,IACrE3yB,GAAiBqa,KAAK4iB,IhCnDI,EgCmD8C,GAC7E,EACN,IAAIiE,GAAeT,GAAYQ,GAC3BxD,GAAkBX,GAGtB,IAAK,IAAIqE,EAAc,EAAGA,EAAcvD,GAAax3B,OAAQ+6B,IAAe,CAAC,IAADC,GAAAC,GACxE,MAAMvD,EAAWF,GAAauD,GACxBG,EAA4C,QAAhCF,GAAGxD,GAAauD,EAAc,UAAE,IAAAC,MAAIvE,EAChD0E,EAA4C,QAA7BF,GAAGzD,GAAa8C,EAAW,UAAE,IAAAW,MAAIT,EAGtD,GAAI/xB,IAAU7P,IAAyB6P,IAAU5P,SAE5C,GhCpLa,WgCoLT6+B,EACLyC,GAAiBV,KAAK,CAAEpN,KAAMyO,GAAc9rB,KAAMvY,EAAiB61B,cACnEwO,IAAgBrkC,EAAkBo2B,EAClCwK,GAAkB,EAClB+C,GAA+B,OAG9B,GhC5EY,WgC4ER1C,EACLvD,IACAI,GAAWnI,EAAK0O,GAAcnsC,EAAe8B,EAAoB6B,EAAmBuI,GAAiBC,IACrGggC,IAAgBxoC,EAAoBu6B,EACpCkH,EAAqBxH,EAAQ94B,GAE7B4jC,GAAkB,EAClB+C,GAA+B,OAG9B,GAAI,SAAMnmB,KAAKyjB,GAChBvD,IACAd,EAAgBxiC,GAChBghC,GAAUnoC,wBAAC,GACJgxC,IAAmB,IACtB7J,OAAQ6G,EACRrL,KAAMyO,GAAevO,EACrBD,SAAU39B,GAA2B,QAAXmM,EAAmB,EAAI,MAErDggC,IAAgB1O,EAAIkB,YAAYoK,GAAUvwC,MAAQ0lC,EAClD0G,IACAQ,EAAqBxH,EAAQ94B,GAE7B4jC,GAAkB,EAClB+C,GAA+B,OAG9B,GAAIzgC,GAAqBsa,KAAKyjB,GAC/BvD,IACAT,IACA7B,GAAUnoC,wBAAC,GACJgxC,IAAmB,IACtB7J,OAAQ6G,EACRrL,KAAMyO,GAAevO,EACrBD,SAAU39B,EAAeqC,KAE7B8pC,IAAgB1O,EAAIkB,YAAYoK,GAAUvwC,MAAQ0lC,EAClD8G,IACAI,EAAqBxH,EAAQ94B,GAE7BqnC,IAAgBnC,EAChBtB,GAAkB,EAClB+C,GAA+B,OAG9B,GAAIr/B,GAAWkZ,KAAKyjB,GAAW,CAChC,MAAO3C,EAAU6C,EAAU3C,EAAW,IAAMyC,EAASjyB,WAAW,OAAQ,IAAIxF,MAAM,SAC5Eo1B,EAA2B,OAAbuC,GAEZhB,WAAY5B,GAAkBuB,GAAY7sC,YAAC,CAC/C+e,MAAOssB,EAAU0B,UAAWyE,EAC5BxE,iBAAkB,GACf+D,KAIP7G,IACA,MAAMsB,EAAsBD,EACvBh1B,MAAM,IACN7G,KAAIy3B,GAAUD,GAAe,CAAExE,MAAKyE,SAAQ7+B,YAAWI,aAAc,WAAYm6B,OAAQ,IAAKwE,aAC9FlhC,QAAO,CAACC,EAAKC,IAAQD,EAAMC,GAAK,GACrC+jC,IAGA,MAAM,cACFkC,EACAE,QAASD,GACTnB,GAAgB,CAChBG,WACAC,sBACAH,WACAC,cAAeA,EAAgBzI,EAC/B4I,YAAaiC,EACbxmC,gBAAiBA,EAAkB27B,EACnC6I,WAAY7iC,EAAWf,EACvB6jC,cACAC,eAAgB/I,EAChBA,OAA8B,aAArBj7B,GAAmCyjC,EAAS/0B,OAAS,EAAK4D,KAAKoJ,IAAI,EAAGuf,EhCjJnE,IgCiJgG,IAE1G2J,EAA8B,IAApBjB,EAASj1B,OACnB4D,KAAKqJ,IAAImqB,EAAYpC,EAAgBuF,GACrCtE,EACAe,EAAWd,EACXe,EAAUf,EAEV2B,EAAgBzB,GAAiBiB,GAAiBJ,GAClDmE,EAAkBnE,EAAU,EAAIA,EAAUY,EAAgB,GAG5DP,WAAY+D,EACZpE,QAASqE,GACT/E,GAAY7sC,YAAC,CACb+e,MAAOyyB,EAAczE,UAAW0E,EAChCzE,iBAAkBM,EAAWzK,GAC1BkO,KAEDc,EAAcD,EAA0B/O,EACxCiP,EAAiBpF,GAAiBY,EAAUuE,GAE5CE,EAAmBL,GADApE,EAAW,EAAIA,EAAWwE,EAAiB,GAEpE,IAAIE,EAAkB,EAClBC,EAA2B,EAG3BF,EAAmB,GAAKF,IAAgB,GAAKF,GAC7CK,GAAmBD,EAA8C,EAA3B73B,KAAKqJ,IAAIsuB,EAAa,IAAU,EACtEI,EAA2B/3B,KAAKqJ,IAAIsuB,EAAa,GAAKG,GAGtDA,EAAkBN,EAEtB,MAAMQ,EAAuBd,IACtB5E,EAAU,GAAK2B,EAAiBgD,IAAUA,GAASa,GACpDtB,GACNA,GAA+BuB,EAG/BzB,GAAS,CACL9N,MACAtxB,SACA67B,WACA2B,UAAW9F,GAAauC,GACxBpmC,aAAc29B,GACd19B,SAAUgtC,EACVrP,SACA94B,SACAklC,WAAY,EACZ3G,aACA1gB,OAAO,IAIX,MAAMkb,EAAmBJ,EAAItgC,UACvB+vC,EAAqBzP,EAAIyI,YACzBiH,EAAqB1P,EAAIr/B,YACzBgvC,EAAuB3P,EAAIn/B,cAC3B+uC,EAAuB5P,EAAIp/B,cAC3BivC,EAAoB7P,EAAIl/B,WAC1BwO,IACA0wB,EAAItgC,UAAY4P,EAChB0wB,EAAIyI,YAAc,GAClBzI,EAAIr/B,YAAc,GAClBq/B,EAAIn/B,cAAgB,EACpBm/B,EAAIp/B,cAAgB,EACpBo/B,EAAIl/B,WAAa,GAIrBysC,GAAa,CACTvN,MACA75B,WACA85B,KAJyByO,GAAejD,EAIZvL,YAC5B2I,WAAUC,sBACVH,WAAUC,gBACVG,YAAaiC,EACbxmC,kBACAS,sBACAE,eACAC,mBACA+6B,SACAv6B,YACA4nC,aACAvE,cACA/jC,qBAGJ86B,EAAItgC,UAAY0gC,EAChBJ,EAAIyI,YAAcgH,EAClBzP,EAAIr/B,YAAc+uC,EAClB1P,EAAIn/B,cAAgB8uC,EACpB3P,EAAIp/B,cAAgBgvC,EACpB5P,EAAIl/B,WAAa+uC,EAEjBnB,IAAgBl3B,KAAKqJ,IAAI+nB,EAAgBzI,EAAQyJ,GAAiB6B,EAAgBc,EAClFtB,GAAkBL,OAGjB,GAAI1+B,GAAe2b,KAAKyjB,GAAW,CACpC,MAAMI,EAA6BnlC,EAC7B,EAAIA,EAAoB,EACxBk6B,EACNT,EAAIt7B,cAAa,GAAAhG,QAAOgtC,EAA6B,GAAKZ,EAAY3nB,cAAcN,aAAY,MAOhG,MAAMitB,EAAqB9P,EAAIkB,YAAYoK,GAAUvwC,MAAQolC,EACvD0K,EAAUrzB,KAAKqJ,IAAImqB,EAAY8E,EAAqB3B,GACpDvD,EAAWC,EAEjB6D,IADsB1E,GAAiBiB,GAAiBJ,GAIxD,IAAIc,EAAiBL,EACjByE,EAAkBrB,GACtB,KAA0B,KAAnB/C,GAAuB,CAC1B,IAAIC,EAAgBD,EAAe,GAC/BE,EAAqBF,EAAevkB,MAAM,GAC1Coe,EAAoB,EACxB,MAAMwK,EAAyB1yC,wBAAA,GACxBgxC,IAAmB,IACtB5I,UAAWx+B,EAAmB0kC,GAC9BnH,OAAQmH,EACR3L,KAAM8P,IAEV,GAAI/jC,GAAyB6b,KAAK+jB,GAC9BhE,EAAW9iC,GACX0gC,EAAoBxF,EAAIkB,YAAYyK,GAAgB5wC,MAAQilC,EAAIkB,YAAY2K,GAAoB9wC,MAChG0qC,GAAUnoC,wBAAC,GACJ0yC,GAAyB,IAC5B/P,KAAM8P,EAAkBjrC,EACxBo7B,SAAUA,GAAWp7B,KAEzBmjC,EAAanjC,QACV,GAAIgH,GAAmB+b,KAAK+jB,GAAgB,CAC/ChE,EAAWtjC,GACXkhC,EAAoBxF,EAAIkB,YAAYyK,GAAgB5wC,MAAQilC,EAAIkB,YAAY2K,GAAoB9wC,MAChG,MAAMk1C,EAAgBzK,EAAoBxF,EAAIkB,YAAY0K,GAAe7wC,MAAQuJ,EAC3EkT,KAAK04B,MAAM1K,GAAqB,EAAIlhC,IAAuB,EAC3D,EACNmhC,GAAUnoC,wBAAC,GACJ0yC,GAAyB,IAC5B/P,KAAM8P,EAAkBzrC,EAAqB2rC,EAC7C/P,SAAUA,GAAW57B,KAEzB2jC,EAAa3jC,QACNoJ,GAAYma,KAAK+jB,IACxB7E,IACAvB,EAAoBxF,EAAIkB,YAAYyK,GAAgB5wC,MAAQilC,EAAIkB,YAAY2K,GAAoB9wC,MAChG0qC,GAAWuK,GACXhJ,KACOl6B,GAAqB+a,KAAK+jB,IAAgC,QAAdhmC,GACnDwhC,IACA5B,EAAoBxF,EAAIkB,YAAYyK,GAAgB5wC,MAAQilC,EAAIkB,YAAY2K,GAAoB9wC,MAChG0qC,GAAWuK,GACX3I,MAEA7B,EAAoBxF,EAAIkB,YAAYyK,GAAgB5wC,MAAQilC,EAAIkB,YAAY2K,GAAoB9wC,MAChG0qC,GAAWuK,IAEfD,GAAmBvK,EAAoBrF,EACvCwL,EAAiBE,EAGrB6C,GAAeqB,EACf9E,GAAkBL,EAClBoD,GAA+B,EAC/BhO,EAAIt7B,cAAgB,WAGnB,GAAIoI,GAAqB+a,KAAKyjB,IAA2B,QAAd1lC,EAAqB,CACjE,MAAM6+B,EAAS6G,EACflE,IAEA,MAAMtB,EAAc9F,EAAIkB,YAAYuD,GAAQ1pC,MAAQ0lC,EAAqBN,EACnE0K,EAAUrzB,KAAKqJ,IAAImqB,EAAYlF,EAAcqI,GAC7CvD,EAAWC,EAGjB6D,IAFsB1E,GAAiBiB,GAAiBJ,GAGxDpF,GAAUnoC,wBAAC,GAAKgxC,IAAmB,IAAE7J,SAAQxE,KAAMyO,MACnDA,IAAgB5I,EAEhBuB,IAEA4D,GAAkBL,EAClBoD,GAA+B,MAG9B,CACD,MAAMvJ,EAAS6G,EACT3F,EAAenB,GAAe,CAChCxE,MACAyE,SACA7+B,YACAI,eACA0+B,kBAA+B9vB,IAAjBk6B,EACd3O,WAEE2F,EAAcH,EAAahB,WAAalE,EAAqBN,EAC7D0K,EAAUrzB,KAAKqJ,IAAImqB,EAAYlF,EAAcqI,GAC7CvD,EAAWC,EAGjB6D,IAFsB1E,GAAiBiB,GAAiBJ,GAGxDpF,GAAUnoC,wBAAC,GACJgxC,IAAmB,IACtB7J,SACAxE,KAAMyO,GACNhJ,UAAWx+B,EAAmBu9B,GAC9BkB,kBAEJ+I,IAAgB5I,GAEA,QAAXp3B,GAAgC,QAAXA,GAAoB,MAAMmZ,KAAK4c,MACpB,IAA9B12B,GAAa8Z,KAAK4c,KAErBiK,IAAgBnC,GAEfr+B,GAAsB2Z,KAAK4c,KAASwG,GAAkBL,GAC3DoD,GAA+B,GAKvC1D,GAAmBiE,GAAgBpO,EAC/Bjb,GAAO6a,GAAW,CAAEC,MAAKE,YAAUD,KAAMgO,GAAWlzC,MAAOyzC,GAAkBrO,EAAQA,WACzF8N,IAAaO,GAAkBrO,EAASuK,GAAa6B,EAAakC,GAGtE,MAAO,CACHR,aACAF,sBCjcKoC,GAAoBA,CAC7Bz0C,EACAgT,EACAgyB,KAEA,MAAM,UACF0P,GAAY,EAAI,eAChBn+B,GAAiB,EAAI,eACrBo+B,EAAiB,YACX,OAAN3P,QAAM,IAANA,IAAU,GACR4P,EAAsB,OAAJ50C,QAAI,IAAJA,IAAQ,GAGhC,IAAI60C,EAAiB,GACjBC,EAA2B,QAAX9hC,EACdnE,GACAC,GACN,IAAK,MAAMi6B,KAAU6L,EAAiB,CAAC,IAADG,EAClCF,GAAuC,QAAzBE,EAAID,EAAc/L,UAAO,IAAAgM,IAAIhM,EAK/C,MAAMiM,EAAmBH,EAuBnBI,GApByBP,EACzBM,EACGx8B,QAAQ,8BAA8B,GAADxV,OAAK4N,GAAY,MAAA5N,OAAK6N,KAC9DmkC,GAIDx8B,QAAQ,uBAAwB,YAChCA,QAAQ,KAAM,UACdA,QAAQ,6BAA8B,YACtCA,QAAQ,KAAM,UACdA,QAAQ,MAAO,UACfA,QAAQ,WAAO,UAEfA,QAAQ,kCAAwB08B,IAC7B,MAAMC,EAA4BpmC,GAAmBmmC,GAErD,OAAgC,OAAzBC,QAAyB,IAAzBA,IAA6BD,KAKvCv3B,WAAW,IAAItN,OjCtFW,gBiCsFiB,MAAM6kC,GAAKA,EAAEv3B,WAAW,KAAM7M,IAAuB6M,WAAW,KAAM5M,MAEjH4M,WAAW,IAAItN,OjCrDO,YiCqDiB,MAAM6kC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MAiBvEykC,GAdsC,QAAXpiC,IAAuC,IAAnBuD,EAC/C0+B,EACAA,EACGt3B,WAAW,IAAItN,OAAOoB,GAAoB,MAAMyjC,IAAM,IAADG,EAClD,MAAMC,EAAsD,QAAvCD,EAAGvtC,EAAkBotC,GAAGP,UAAe,IAAAU,IAAIvtC,EAAkBotC,GAAGvtC,SAErF,MAAM,GAAN3E,OAAU0N,IAAY1N,OAAGsyC,GAAetyC,OAAG2N,QASlDgN,WAAW,IAAItN,OAAOE,GAAmB,MAAM2kC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MAC1EgN,WAAW,IAAItN,OjCtEc,4GiCsEiB,MAAM6kC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MAC/EgN,WAAW,IAAItN,OAAOuB,GAA0B,MAAMsjC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MACjFgN,WAAW,IAAItN,OjCvEQ,+CiCuEiB,MAAM6kC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MACzEgN,WAAW,IAAItN,OjCvES,yBiCuEiB,MAAM6kC,GAAC,GAAAlyC,OAAO0N,IAAY1N,OAAGkyC,GAAClyC,OAAG2N,MAQ/E,IAAI4kC,EAA8B,GAC9BC,EAAe,EACnB,IAAK,MAAMzM,KAAUqM,EACbrM,IAAWr4B,IACU,IAAjB8kC,GAAoBD,EAA4B5D,KAAK5I,GACzDyM,GAAgB,GACTzM,IAAWp4B,IAClB6kC,GAAgB,EACK,IAAjBA,GAAoBD,EAA4B5D,KAAK5I,IACtDwM,EAA4B5D,KAAK5I,GAW5C,OARsBwM,EAA4B1lC,KAAK,IAClD8N,WAAW,GAAD3a,OAAI6N,IAAa7N,OAAG2N,IAAa,GAAA3N,OAAO2N,IAAa3N,OAAG6N,KAClE8M,WAAW,GAAD3a,OAAI0N,IAAY1N,OAAG4N,IAAY,GAAA5N,OAAO4N,IAAY5N,OAAG0N,KAC/DiN,WAAW,GAAD3a,OAAI8N,IAAqB9N,OAAG2N,IAAa,GAAA3N,OAAO2N,IAAa3N,OAAG8N,KAC1E6M,WAAW,GAAD3a,OAAI0N,IAAY1N,OAAG+N,IAAmB,GAAA/N,OAAO+N,IAAmB/N,OAAG0N,KAC7EiN,WAAW,GAAD3a,OAAI4N,IAAY5N,OAAG6N,IAAiB,IAC9C8M,WAAW,GAAD3a,OAAI0N,IAAY1N,OAAG2N,IAAiB,MCrGnDtR,MAAO+kC,IACPhlC,EACSq2C,GAAajhB,IA0BnB,IAADkhB,EAAA,IA1BqB,IACvBpR,EAAG,QACHqR,EAAO,SACPC,GAAW,EAAK,SAChBrqC,EAAWhB,EAAetD,IAAG,UAC7B4uC,EAAS,SACTC,EAAWnvC,EAAqB,YAAW,iBAC3C6O,EAAmB,SAAQ,OAC3BxC,EAAM,eACNuD,EAAc,OACdyuB,GAgBHxQ,EACG,MAAM,iBACFuhB,EAAgB,wBAChBC,GACM,OAANhR,QAAM,IAANA,IAAU,GACd,IAAIiR,EAAkC,OAAhBF,QAAgB,IAAhBA,IAAoB,EAC1C,IAAKzR,IAAQqR,EAAS,OAAOM,EAE7B,MAAMC,EAAoBzB,GAAkBkB,EAAQve,OAAQpkB,EAAQ,CAAEuD,oBAChE,WACF4/B,EAAU,sBACVC,EAAqB,aACrBC,GDrEmB,SAAC1gC,GAAsC,IAAD2gC,EAAA,IAArBV,EAAQ38B,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAC5Ck9B,EAAaxgC,EAEb0gC,EAAe,GACnB,MAAME,EAAiB,IAAIlmC,OAAO,KAADrN,OAAM4N,GAAY,OAAA5N,OAAM6N,GAAa,OAAA7N,OAAM6N,GAAa,UACzF,IAAI2lC,EACAC,EACJ,EAAG,CAAC,IAADC,EAAAC,EACCH,EAAqD,QAAlCE,EAAGH,EAAeK,KAAKT,UAAW,IAAAO,OAAA,EAA/BA,EAAkC,GACxDD,EAA0C,QAAlCE,EAAGJ,EAAeK,KAAKT,UAAW,IAAAQ,OAAA,EAA/BA,EAAkC,GAEzCF,GAAYD,IACZH,EAAa1E,KAAK8E,GAClBN,EAAaA,EAAW39B,QAAQg+B,EAAqB,WAEpDA,GAAuBC,GAEhC,IAAIL,EAAwB,GAC5B,MAAMS,EAAuB,IAAIxmC,OAAOc,GAAyB,KAC3D2lC,EAAgE,QAApCR,EAAGO,EAAqBD,KAAKjhC,UAAO,IAAA2gC,OAAA,EAAjCA,EAAoC,GAMzE,OALIQ,GAAgClB,GAChCQ,EAAwBU,EAA6B1f,OACrD+e,EAAaA,EAAW39B,QAAQs+B,EAA8B,KAC3DV,EAAwB,GAExB,CACHC,eACAF,aACAC,yBC0CAW,CAAYb,EAAmBN,GAE7B5E,GAA0C,QAApB0E,EAACW,EAAan+B,cAAM,IAAAw9B,IAAI,IAAMU,EAAsBl+B,OAAS,EAAI,EAAI,GAC3F64B,EAAgBoF,EAAaA,EAAWh+B,MAAM,MAAQ,IAEtD,KAAE7T,EAAI,SAAE6F,GAAaoB,EAG3B,KAAO0qC,EAAkB9rC,EAAS+N,QAAU+9B,GAAmB,GAAG,CAAC,IAADe,EAAAC,EAAAC,EAC9D,MAAMC,EAA0D,QAAXnkC,EAC/CgjC,GAA2BC,EAAkBD,EACzCjrC,GAA6B,QACQ,QADPisC,EAC9BjsC,GAAoByK,UAAiB,IAAAwhC,IAAIjsC,GAA4B,OACzE,CACE,EAAK,IACL,EAAK,IACL,EAAK,KAEP+/B,EAAe3gC,EAAS8rC,IACxB,SACFxrC,EAAQ,WACRC,EAAU,UACVC,GACAmgC,GACE,SACFhkC,EACAF,UAAWwwC,EACXvwC,aAAcwwC,GACW,QAA5BJ,EAAGnB,EAASG,UAAgB,IAAAgB,IAAInB,EAASA,EAAS59B,OAAS,GACtD7Y,EAASu2C,GAAuB,QAAX5iC,EAAoBokC,EAAiB,EAAIA,EAE9DhI,EAAczoB,KACpB2d,EAAIhgC,KAAO8qC,EACNvnB,SAAwC,IACxCH,UAA6B,IAC7BK,QAAQtd,GACRyd,UAAU5jB,GACVgjB,UACLgd,EAAIY,UAAY,OAChB,MAAM2J,EAAW,CACbtjC,WACA8jC,UAAW4G,EACX7G,eAGJ,IAAIkI,EAAkF,GAGtF,MAAMhxB,EAAkBF,IACpBhB,IACI,MAAM,gBAAE6rB,EAAe,iBAAEC,GAAqBJ,GAAe,CACzDxM,MACAlf,SACA2rB,gBACAC,sBACAh+B,SAAQ67B,WACRxvC,UAIJ,OAFAi4C,EAAoBrG,IAEhBC,EAAmBvmC,KAG3B,KAKE4sC,EAAa7Q,GAAY9kC,YAAC,CAAE0iC,OAAQuR,IAE1C,KACKvvB,GAFgE,QAAlD4wB,EAAGC,EAAqB,GAADn0C,OAAI+tC,EAAc74B,gBAAS,IAAAg/B,IAAIC,EAAqB,KAGtFlB,EAAkB9rC,EAAS+N,OAAS,GAGrC,CACHosB,EAAIuB,UAAU,EAAG,EAAGzB,GAAa,MAEjC,IAAIv9B,EAAewwC,EAAoB3sC,EAkDvC,GA1BA,IAtB8B2rC,EAAa/kC,KAAI++B,IACpC,CACHA,OACAE,QAAQ,EACRjqB,gBAAiBF,IACbhB,IACI,MAAM,iBAAE8rB,GAAqBJ,GAAe,CACxCxM,MACAlf,SACA2rB,cAAe,CAACV,GAChBr9B,SAAQ67B,WACRxvC,UAGJ,QAAI6xC,EAAmB,aAUhCoG,GACLh+B,SAAQob,IAIH,IAJI,KACP2b,EAAI,OACJE,EAAM,gBACNjqB,GACHoO,EACG,MAAM+P,EAASne,EAAkB,KAC3B,UAAEkqB,EAAS,WAAEK,GAAeT,GAAY,CAAE9L,MAAK+L,OAAM5L,SAAQzxB,SAAQu9B,SAAQ1B,WAAUxvC,UAE7FilC,EAAIngB,MAAMsgB,EA3GP,GA4GH2N,GAAS,CACL9N,MACAkM,YACA/L,SAAQ94B,OA/GT,EAgHC7E,WAAUD,eACVgqC,aACAhC,WACA77B,WAEJnM,GAAgB6D,EAChB45B,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,MAIhC8J,EAAsBl+B,OAAS,EAAG,CAClC,MAAMs/B,EAAiBjtC,EAAetD,IAChCwwC,EAAqBD,EAAertC,SAAS8rC,IAC7C,SACFxrC,EAAQ,WACRC,GACA+sC,EACEC,EAAwB/wB,KAC9B2d,EAAIhgC,KAAOozC,EACN3vB,QAAQtd,GACRyd,UAAUsvB,EAAelzC,MACzBgjB,UACL,MAAMqwB,EAAiB,CACnBpsC,SAAUisC,EACVnI,UAAW4G,EACX7G,YAAasI,GAgBXjT,EAd0Bre,IAC5BhB,IACI,MAAM,iBAAE8rB,GAAqBJ,GAAe,CACxCxM,MACAlf,SACA2rB,cAAe,CAACqF,GAChBpjC,SAAQ67B,SAAU8I,EAClBt4C,UAGJ,QAAI6xC,EAAmB,MAIU,IAEzC5M,EAAIngB,MAAMsgB,EA3JP,GA4JH,MAAM+L,EAAY9F,GAAa0L,GAO/BhE,GAAS,CACL9N,MACAkM,YACA/L,SAAQ94B,OAtKT,EAuKC7E,WAAUD,eACVgoC,SAAU8I,EACV3kC,WAEJnM,GAAgB6D,EAChB45B,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEpC,MA1GA2J,GAAmB,EA4GvBsB,IAGJ,OAAOtB,IC9QP52C,MAAO+kC,IACPhlC,GCME,uBACFG,GAAsB,wBACtBE,GAAuB,wBACvBC,IACAN,EAESw4C,GAAwBh2B,IA4C9B,IA5C+B,OAClCwmB,EAAM,cACNyP,EAAa,iBACbC,EAAgB,OAChB9kC,EAAM,cACN0B,EAAa,MACbpB,EAAK,YAAEykC,EAAW,eAClBp2C,EAAc,SACdoS,EAAQ,UACRF,EAAS,KACTG,EAAI,KACJT,EAAI,aACJykC,EAAY,QACZt2C,EAAO,OACPuT,EAAM,aAAEgjC,EAAY,MAAEC,EAAK,WAC3Bz2C,EAAU,WACV02C,EAAU,cACVC,GA2BHx2B,EACG,MAAM0iB,EAAM8D,EAAO5G,WAAW,OAE1BrhC,UAAWk4C,EAAa,WACxBj4C,EACAN,KAAMw4C,EACNr4C,KAAMs4C,EACNx4C,SAAUy4C,EACVx4C,KAAMy4C,EAAW,UACjBp4C,GACAqB,GACE,KACFf,EAAI,KACJC,EAAI,WACJJ,EAAU,WACVC,EAAU,SACVC,GACAc,EAAuBC,EAAYC,GACjCvB,EAAYm4C,EAAc,GAAWD,EAErCK,EAAa,IAGbC,EAAmB,WAATplC,EACVqlC,EAAkBV,GAASD,EAC3B3kC,EACA,SACAulC,EAAiBD,EACjBE,GAAkBz4C,GAAaF,EAE/B44C,EAAY,CAOdC,mCACIC,EACAC,GAGD,IAFCC,EAAgBlgC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACnBmgC,EAAqCngC,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EAErC,MAAMmgC,EAAiC,OAAbH,QAAa,IAAbA,IAAiBx3C,GAEvC5B,KAAMw5C,GACND,GACE,KACF14C,EAAI,KACJC,EAAI,SACJF,GACAc,EAAuBC,EAAY43C,EAAmBD,IAClD/5C,MAAOk6C,EAAYj6C,OAAQk6C,GAAgBP,EAC7CQ,EAAmB/4C,EAAW64C,EAC9BG,EAAgBJ,EAAc,KAC7B55C,GAA0BiB,GAAQ84C,EACnC,EACAE,EAAqBD,EAAgBD,EACrCG,EAAgBN,EAAc,KAC7B/5C,GAAyBqB,GAAQ64C,EAClC,EACAI,EAAqBD,EAAgBH,EACrCK,EAAeR,EAAc,IAC7BE,EAAe/5C,GAA0Bg6C,EACzC,EAON,MAAO,CACHA,mBACAC,gBACAE,gBACAD,qBACAE,qBACAC,eACAC,aAZiBp5C,EAAOg5C,EAaxBK,aAZiBp5C,EAAOi5C,EAaxBI,iBAZqBv5C,EAAgC,EAArBi5C,EAahCO,kBAZsBx5C,GAAY64C,EAAaC,GAAeL,EAAmBW,EAAeL,IAiBxGU,UAAWvxB,UACF0b,IAELA,EAAIiC,YAAc+R,EAAc,UAC1B5Q,GAAUpD,EAAI,eAADthC,OAAiBsQ,EAAK,QAAQ,EAAG,SAC9Co0B,GAAUpD,EAAI,iCAADthC,OAAmC+0C,EAAW,QAAQ,EAAG,GAC5EzT,EAAIiC,YAAc,IAGtB6T,YAAaA,KACT,IAAKvC,IAAkBvT,EAAK,OAC5B,MAAQjlC,MAAOk6C,EAAYj6C,OAAQk6C,GAAgB3B,EAE/C2B,GAAe,GACnBlV,EAAI5C,UACAmW,EACA,EAAG,EACH0B,EAAYC,EACZ74C,EAAMC,EACNF,EAAUA,GAAY64C,EAAaC,KAG3Ca,eACIC,IAEA,IAAKxC,IAAqBxT,IAAQ5vB,EAAe,OACjD,MAAQrV,MAAOk7C,EAAiBj7C,OAAQk7C,GAAqB1C,EAE7D,GAAI0C,GAAoB,EAAG,OAC3B,GAAiB,aAAbF,EAAyB,CACzB,IAAIG,EAAqB1B,EAAUC,mCAAmClB,GAE/C,SAAnBn2C,EACA84C,EAAqB1B,EAAUC,mCAC3BlB,EAAgBl2C,wBAAA,GACXF,GAAO,IAAE5B,KAAM,SACpBoZ,EACA,QAEsB,QAAnBvX,IACP84C,EAAqB1B,EAAUC,mCAC3BlB,EACAp2C,OACAwX,EACA,QAIR,MACIwgC,cAAegB,EAAyBd,cAAee,EACvDb,aAAcc,EACdb,aAAcc,EAAwBb,aAAcc,EACpDb,iBAAkBc,EAA4Bb,kBAAmBc,GACjEP,EAQJ,YAPAnW,EAAI5C,UACAoW,EACA4C,EAAyBC,EACzBJ,EAA4C,EAA1BG,EAA6BF,EAAmBI,EAClEC,EAAwBC,EACxBC,EAA4BC,GAKpC,MAAM,KACFr6C,EAAI,KACJC,EAAI,SACJF,GACAc,EACAC,EAAUG,wBAAA,GACLF,GAAO,IAAErB,WAAW,IACzBsB,GAEJ2iC,EAAI5C,UACAoW,EACA,EAAG,EACHyC,EAAiBC,EACjB75C,EAAMC,EACNF,EAAUA,GAAY65C,EAAkBC,KAGhDS,cAAeryB,gBACL8e,GAAUpD,EAAI,kBAADthC,OAAoBgQ,EAAM,KAAAhQ,OAAI6Q,EAAUuf,cAAa,QAAQ,IAAK,KAEzF8nB,SAAUtyB,UAAyF,IAAlF,MAAE3B,EAAK,cAAEhT,GAAmEugB,EACzF,MAAM2mB,EAAkC,SAAbpnC,EAAsB2D,GAAqBpE,GAASS,ODjO5D6U,WAgBxB,IAhB+B,IAClC0b,EAAG,SACHvwB,EAAQ,KACR/T,EAAI,KACJgU,EAAI,cACJC,EAAgB,OAAM,MACtBgT,EAAK,WACLm0B,GASHx5B,EAGOy5B,EAAsC,kBAATrnC,EAClB,KAATA,EAAc,EAAI,EACF,kBAATA,EAAoBA,EAAO,EACpC86B,EALc,GAKWuM,EAJR,GAI8CA,EAAsB,GAGrFrN,EAAY,QACZ,CAAC,OAAQ,kBAAkBn2B,SAAS9D,KAAWi6B,EAAY,QAC/DA,EAA8B,SAAlB/5B,EACN+5B,EACA/5B,EACFonC,EAAsB,KAAIrN,EAAY,UAEtChuC,GAAsB,WAAdguC,IACRqN,EAAsB,EACtBvM,EAAa,GAIjB,MAAMwM,EAAyB,WAAdtN,GACV5J,GAAc0K,GAAc,EACf,SAAdd,EACI,QAAUc,EACV,QAEV,IAAItmB,GAAS,GAEb,GAAI8b,GAAOtkC,GAAqB,OAAb+T,EAAmB,CAClC,MAAMtJ,EAAW,GACX8wC,EAAc7U,GAAY9kC,YAAC,CAAE0iC,OAAQrd,IAC3Cqd,EAAIY,UAA0B,SAAd8I,GAAsC,UAAdA,EAClCA,EACA,OACN1J,EAAIhgC,KAAI,QAAAtB,OAAWyH,EAAQ,sBAC3B,MAAM+d,EAAuB,WAAdwlB,EACT1J,EAAIkB,YAAYxlC,GAAMX,OAAS,EACjB,SAAd2uC,EArCW,GAuCP,GACV1J,EAAIgB,SAAStlC,EAAMs7C,EAAW9yB,EAnCjB,IAmC+C,GAAX/d,GACjD65B,EAAIY,UAAY,OAChBqW,IAGJ,aAAatV,QAAQuV,IAAI,IAAI/hC,MAAM4hC,IAC9B/pC,KAAIsX,UACDJ,GAAWizB,GACX,IAAIC,EAA+B,CAC/BJ,GAlDM,GAkDkB9yB,GA5CnB,KAgDT,aADMkf,GAAUpD,EAAI,uBAADthC,OAAyB+Q,EAAQ,WAAW2nC,SAClDN,EAAWM,QC2JlBC,CAAgB,CAClBrX,MACAvwB,SAAUonC,EACVn7C,KAAsB,kBAATgU,EAAoBA,EAAO,KACxCA,OACAC,gBACAgT,QACAm0B,WAAYxyB,SACsB,OAAvBuyB,EACDlV,QAAQC,gBACFiS,EACJ7T,EACA,QACA1b,SAAc8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,gBAAgBw6C,QAKtFE,sBAAuBhzB,gBACb8e,GAAUpD,EAAI,iCAADthC,OAAmCg1C,EAAY,QAAQ,EAAG,MAGjF6D,iBAAkBjzB,gBACRqd,QAAQuV,IAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACxClqC,KAAIsX,UACD,MAAM,KAAE3Y,EAAI,IAAED,EAAG,OAAE1Q,EAAM,MAAED,GAAU0Q,GAAkBwB,EAAQ,GACzDuqC,EAAW9mC,EAAQ6C,SAAS,GAAD7U,OAAIuO,IAC/BwqC,EAAQ,sBAAA/4C,OAAyBuO,GACjCyqC,EAAU,oBAAAh5C,OAAuBuO,GACjCmqC,EAAa,CAACzrC,EAAMD,EAAK3Q,EAAOC,GAItC,aAFMqoC,GAAkBrD,EAAI,GAADthC,OAAK+4C,EAAQ,SAAA/4C,OAAQ3C,EAAY,QAAU,GAAE,WAAWq7C,SAC7E/T,GAAkBrD,EAAI,GAADthC,OAAK+4C,EAAQ,gBAAgBL,GACpDI,SACMnU,GAAkBrD,EAAI,GAADthC,OAAKg5C,EAAU,gBAAgBN,GACnD/T,GAAkBrD,EAAI,GAADthC,OAAKg5C,EAAU,gBAAgBN,SACxD,OAInBO,eAAgBrzB,gBACNuf,GACFC,EACA,8BACA,EAAG,KACH,IAAK,GACL,CAAEpmC,WAMVk6C,mBAAoBtzB,UACX0b,IAELA,EAAIiC,YAAcgS,EAAc,UAC1B7Q,GAAUpD,EAAI,8BAADthC,OAAgCsQ,EAAK,QAAQ,EAAG,GACnEgxB,EAAIiC,YAAc,IAGtB4V,qBAAsBvzB,iBAAiC,IAA1BwzB,EAAYnjC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAChCqrB,IAELA,EAAIiC,YAAckS,EAAc,UAC1B/Q,GACFpD,EAAI,8BAADthC,OAC2B+0C,EAAW,QAzNgBsE,GAAxC3D,KA4NjB0D,IACA9X,EAAIiC,YAAciS,EAAkB,UAC9B9Q,GAAUpD,EAAI,kCAADthC,OAAoC+0C,EAAW,QAAQ,GAAI,MAElFzT,EAAIiC,YAAc,IAKtB+V,gBAAiB1zB,SACN8e,GAAUpD,EAAI,sBAADthC,OAAwB41C,EAAe,QAAQ,EAAG,GAE1E2D,eAAgB3zB,SACLxoB,EACDsnC,GAAUpD,EAAI,qBAADthC,OAAuB61C,EAAc,QAAQ,EAAG,GAC7D5S,QAAQC,UAElBsW,cAAe5zB,UACX,GAAIzoB,EAAW,CACX,IAAIs8C,EAAiB,GAEjBA,EADAvE,GAASD,EACK,oBAAAj1C,OAAuBsQ,EAAK,QACnC2B,GAAU,CAAC,OAAQ,QAAS,OAAQ,UAAU4C,SAASvE,GAC7C,+BAEA,6BAEfo0B,GAAUpD,EAAKmY,EAzPF,GAAf,OA4PZC,mBAAoB9zB,MAAOzoB,EAAoBw8C,WACrCjV,GACFpD,EACA,kCAAAthC,OAAkCg1C,GAAY,IAAAh1C,OACxC25C,IACHx8C,EAAY,GAAK,YAClB,OACF,GAAI,MAMZy8C,iBAAkBh0B,UACT+vB,GAA2B,gBAAhBZ,QAGNrQ,GAAUpD,EAAK,0BA5QI,GA4QmCoU,SAFtDhR,GAAUpD,EAAK,sCA1QI,GA0Q+CoU,IAKhFmE,eAAgBj0B,gBACN8e,GAAUpD,EAAI,oBAADthC,OAAsB21C,EAAO,IAAA31C,OAAOuQ,GAAS,GAAE,QAAQ,EAAG,IAKjFupC,kBAAmBl0B,UACXzoB,SAAiBunC,GAAUpD,EAAI,oBAADthC,OAAsBuQ,EAAI,QAvRrC,GAAf,MAyRZwpC,qBAAsBn0B,gBACZ8e,GAAUpD,EAAI,uBAADthC,OAAyBuQ,EAAI,QAzRnB,GAyRuCmlC,IAExEsE,gBAAiBp0B,iBAAmC,IAA5Bq0B,EAAUhkC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG9Y,QAC3BunC,GAAUpD,EAAI,2BAADthC,OAA6BuQ,GAAIvQ,OAAGi6C,EAAa,GAAK,WAAU,QAAQ,EAAG,MAKlGC,eAAgBt0B,WACRzoB,GAAaC,UAAkB+3C,EAC/B7T,EACA,QACA1b,SACW8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,aAAa,EAAG,MAIvEi8C,oBAAqBv0B,UACb/U,IAAchS,SACRs2C,EAAW7T,EAAK,aAAa1b,SAAc8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,kBAAkB,IAAK,OAGpHk8C,cAAex0B,UACPkwB,SAAsBV,EACtB9T,EACA,OACA1b,eAA0B8e,GACtBpD,EAAI,qBAADthC,OACkBmjC,GAAUnjC,OAAGvB,EAAU,aAAAuB,OAAgBg1C,GAAiB,GAAE,QAC/Ex3C,EAAYC,MAWxB48C,qBAAsBz0B,gBACZuvB,EACF7T,EACA,eACA1b,SACW8e,GACHpD,EACA,gBAAe,IAAAthC,OACT9B,GAAM,IAAA8B,OACN81C,EAAiB,MAAQ,SAC7B,YACCr3C,EAAU,aAAAuB,OAAgBg1C,GAAiB,IAC5C,OACFx3C,EAAYC,MAK5B68C,oBAAqB10B,UACbzoB,SACMg4C,EACF7T,EACA,cACA1b,SAAoB8e,GAAUpD,EAAI,iBAADthC,OAAmBmjC,EAAU,mBAAmB,EAAG,MAIhGoX,4BAA6B30B,UACrBzoB,SAAiBg4C,EACjB7T,EACA,uBACA6B,GAAcuB,GAAUpD,EAAI,iBAADthC,OAAmBmjC,EAAU,yBAAAnjC,OAAwBg1C,EAAY,QAAQ,EAAG,MAG/GwF,yBAA0B50B,gBAChBuvB,EACF7T,EACA,mBACA1b,SAAoB8e,GAAUpD,EAAI,iBAADthC,OAAmBmjC,EAAU,qBAAAnjC,OAAoBg1C,EAAY,QAAQ,EAAG,MAGjHyF,gBAAiB70B,gBACPuvB,EACF7T,EACA,SACA1b,SACW8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,UAAA8B,OAASvB,EAAU,aAAAuB,OAAgBg1C,GAAiB,GAAE,QAAQ,EAAG,MAIxH0F,0BAA2B90B,gBACjBuvB,EACF7T,EACA,oBACA1b,SACW8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,qBAAA8B,OAAoBvB,EAAU,aAAAuB,OAAgBg1C,GAAiB,GAAE,QAAQ,EAAG,MAKnI2F,kBAAmB/0B,gBACTuvB,EAAW7T,EAAK,WAAW1b,SAAqB8e,GAAUpD,EAAI,iBAADthC,OAAmB46C,EAAW,gBAAgB,EAAG,MAExHC,qBAAsBj1B,gBACZuvB,EAAW7T,EAAK,eAAe1b,SAAc8e,GAAUpD,EAAI,iBAADthC,OAAmB9B,EAAI,oBAAoB,EAAG,OAItH,OAAO63C,GCnYE+E,GAAWl1B,MACpB0b,EACAtlC,EACAulC,EACA19B,EACAxH,EACA4nB,EACA+d,KAQA,MAAM,aAAEiT,EAAY,OAAEjlC,EAAM,UAAEsuB,EAAS,MAAEhuB,EAAK,eAAEiD,GAAmByuB,EAC7D+Y,EAAoB,OAATzc,QAAS,IAATA,OAAS,EAATA,EAAWE,WAAW,MACvC,GAAI8C,GAAOyZ,GAAY/+C,EAAO,CAAC,IAADg/C,EAAAC,EAAAC,EAC1B,MAAM,KACF55C,EAAI,UACJN,EAAS,kBACT4P,EAAiB,WACjBxO,EAAU,UACV3B,EAAS,YACTwB,EAAW,cACXE,EAAa,cACbD,EACA1B,WAAY26C,EAAiB,UAC7B/5C,EAAS,UACTD,EAAS,YACTI,EAAW,YACXgB,EAAW,YACXhC,EAAW,cACXmB,EAAa,cACbC,EAAa,QACbjB,GACH9B,wBAAA,G/CxH0B,CAC/B0C,KAAM,UACNN,UAAW,UACX4P,kBAAmB,UACnB3O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,S+CsG8BujB,IAC7B,aAAEnhB,EAAcC,UAAWq4C,GAA8C,QAA5BJ,EAAGp4C,EAAkB,OAAPlC,QAAO,IAAPA,IAAW,WAAG,IAAAs6C,IAAI,GAC7Ex6C,EAAa26C,EAEnB7Z,EAAIY,UAAY,OACZzhC,IACA6gC,EAAIr/B,YAAcA,EAClBq/B,EAAIp/B,cAAgBA,EACpBo/B,EAAIn/B,cAAgBA,EACpBm/B,EAAIl/B,WAAaA,GAEjB+4C,IACA7Z,EAAIngC,UAAYA,EAChBmgC,EAAIyI,YAAc3oC,GAEtB,MAAMmH,EAAQ3J,wBAAA,IAC+C,QAAtDq8C,EAAC5yC,GAAgB/G,UAAqC,IAAA25C,IAAI5yC,GAAgBC,SAASC,UAAQ,IAC9FqI,sBAEEyqC,EAAa13B,GAAiB,CAChCK,cAAezb,EAASjH,KACxByiB,YAAaxb,EAASpB,SAAS,GAAGM,SAClCoc,cAAetb,EAAS6C,SAEtBygC,EAAW,CACbQ,UAAW,EACX9jC,WACA6jC,YAAaiP,GAEXC,EAAsB7J,GACxBz1C,EACAgU,EACA,CAAE0hC,WAAW,EAAOn+B,iBAAgBo+B,eAAgB,iBAIlD4J,EAA4B,QAAXvrC,EACjB,CAACsrC,GACDA,EAAoBnmC,MAAM,IAAI9H,OAAO,MAADrN,OrCvHf,mEqCuHyC,MAAM,MACpEw7C,EAAgC73B,GAAiB,CACnDK,cAAezb,EAASjH,KACxByiB,YAAaxb,EAASpB,SAAS,GAAGM,SAClCoc,cAAetb,EAAS6C,SAEtBqwC,EAAcD,EAA8Bl3B,UAC5Co3B,EAAcF,EACfz2B,SAAQ9f,GAAOA,EAAMsD,EAASvB,kBAC9B6d,SAAS,cACTK,UAAU3c,EAASxB,YACnBud,UACL,IAAIq3B,EAAY,EACZC,EAAa,EACjBL,EAAejlC,SAAQ,CAACrR,EAAKygB,KACzB4b,EAAIhgC,KAAOokB,EAAQ,IAAM,EAAI+1B,EAAcC,EAE3C,MAAMG,EAAava,EAAIkB,YAAYv9B,EAAI0V,WAAW3M,GAAoB,KACtE2tC,EAAY7iC,KAAKqJ,IAAIw5B,EAAWE,EAAWC,yBAC3CF,EAAa9iC,KAAKqJ,IAAIy5B,EAAYC,EAAWE,4BAC9C,GAEHza,EAAIhgC,KAAOm6C,EAEX,IAAI7M,EAAkB,EACtB,MAeMnN,EAf0Bre,IAC5BhB,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDxM,MACAlf,SACA2rB,cAAe,CAACuN,GAChBtrC,SAAQ67B,WACRxvC,UAGJ,QAAI6xC,EAAmB,KACvBU,EAAkBX,EAAgB,GAAGW,iBAC9B,MAG0B,IACnCjmC,EAAS,EAEf24B,EAAIngB,MAAMsgB,EAAQ94B,GAGlB,MAAM1C,EAAsC,QAA/Bi1C,EAAG3yC,EAASpB,SAAS,GAAGlB,eAAO,IAAAi1C,IAAIx1C,EAAoBO,QAC9DunC,EAAY9F,GAAa4T,GACzBU,EAAWpN,EAAkB,GAAKruC,EAhMxB07C,EACpB3a,EACA4a,EACAC,EACA5a,EACA6a,EACA5a,EACAma,EACAC,KAKA,MAAMS,EAAUH,EAAgB,IAC1BI,EAAW,GAAAt8C,OAAM8Y,KAAK2O,MAAM40B,EAAU,KACtCE,EAAMF,EAAU,GAEhBG,EAAeb,EAAYC,EAK3Ba,EAAKlb,EANS6a,EAMY,EAC1BM,EAAKlb,GAAYoa,EAAaD,GAAa,EAEjD,IAAIt/C,EATgB+/C,EASK9/C,EAASkgD,EACd,MAAhBF,GAAuC,MAAhBA,IAAuBjgD,EAAQmgD,EAAclgD,EAVpD8/C,GAiBpB,MAAMO,EAAK7jC,KAAK8jC,KAAKvgD,GAAS,EAAI,EAAIC,GAAU,EAAI,GACpD,GAAIqgD,EAAK,EAAG,CACR,MAEME,EAAM,IAF8B,IAA9B/jC,KAAKgkC,KAAMzgD,EAAQ,EAAKsgD,GAAY7jC,KAAK+wB,GACnC0S,GAEZQ,EAAKjkC,KAAKkkC,IAAIH,EAAM,IAAM/jC,KAAK+wB,IAAM8S,EACrCM,EAAKnkC,KAAKkkC,IAAIT,EAAM,IAAMzjC,KAAK+wB,IAAMkT,EACrCG,EAAKpkC,KAAKqkC,IAAIZ,EAAM,IAAMzjC,KAAK+wB,IAAMkT,EAC3C,IAAIK,EAAUH,EACVh3C,EAAUi3C,EACM,MAAhBZ,IAAuBc,EAAUF,EAAIj3C,GAAWg3C,GAChC,MAAhBX,IAAuBc,GAAWH,EAAIh3C,GAAWi3C,GACjC,MAAhBZ,IAAuBc,GAAWF,EAAIj3C,EAAUg3C,GAEpD,MAAMI,EAAOZ,EAAKW,EACZE,EAAOZ,EAAKz2C,EACZs3C,EAAOd,EAAKW,EACZI,EAAOd,EAAKz2C,EASZ+1C,EAAW1a,EAAImc,qBAAqBJ,EAAMC,EAAMC,EAAMC,GAG5D,OAFArB,EAAc7lC,SAAQsI,IAAA,IAAC,MAAE5f,EAAK,OAAEwmB,GAAQ5G,EAAA,OAAKo9B,EAAS0B,aAAat5B,WAAWoB,GAASxmB,MAEhFg9C,IAmIDC,CACE3a,EACA5/B,EACA2jB,GAAa1jB,GACb4/B,EACAqN,EACA/qC,EACA83C,EAAWC,QAEb1lC,EAINorB,EAAItgC,UAAoB,OAARg7C,QAAQ,IAARA,IAAYh7C,EAC5BouC,GAAS,CACL9N,MACAkM,YACA/L,SAAQ94B,SACR7E,SAAUy9B,EAAM19B,eAChBgoC,WACA77B,SACAk3B,WAAY1V,IAAkD,IAAjD,IAAE8P,EAAG,OAAEyE,EAAM,WAAEwB,EAAU,eAAED,GAAgB9V,EACpD8P,EAAIgB,SAASyD,EAAQwB,EAAYD,GAAkB2N,EAAehvC,EAAU,OAShFnD,GAAgBw7B,IAChBgD,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,SAE1B5E,GAAUqW,EAAS,eAAD/6C,OAAiBsQ,EAAK,QAAQ,EAAG,SACnDo0B,GAAUqW,EAAS,8BAAD/6C,OAAgCsQ,EAAK,QAAQ,EAAG,GACxEyqC,EAASzX,yBAA2B8X,QAC9BzW,GACFoW,EAAS,eAAD/6C,OAAiB8C,EAAY,QACrCy+B,EAAM19B,EAAe83C,EACrBt/C,EACAs/C,EAAYC,GAEhBta,EAAIgC,yBAA2B,YAC/BhC,EAAI5C,UAAUJ,EAAW,EAAG,GAC5BgD,EAAIngB,MAAMsgB,EAAQ94B,GAClB24B,EAAIgC,yBAA2B,cAM/B8L,GAAS,CACL9N,MACAkM,YACA/L,SAAQ94B,SACR7E,SAAUy9B,EAAM19B,eAChBgoC,WACA77B,SACAk3B,WAAYA,UAKhB1mC,IACA8gC,EAAIgC,yBAA2B,mBAC/B8L,GAAS,CACL9N,MACAkM,YACA/L,SAAQ94B,SACR7E,SAAUy9B,EAAM19B,eAChBgoC,WACA77B,SACAk3B,WAAYxV,IAAkD,IAAjD,IAAE4P,EAAG,OAAEyE,EAAM,WAAEwB,EAAU,eAAED,GAAgB5V,EACpD4P,EAAIqc,SAAW,QACfrc,EAAIiB,WACAwD,EACAwB,EAAahmC,EACb+lC,EAAiB/kC,GAAe0yC,EAAehvC,EAAU,QAKzEq7B,EAAIgC,yBAA2B,cAC/BhC,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEhC,MAAMsU,G/CrSqB,CAC/Bt8C,KAAM,UACNN,UAAW,UACX4P,kBAAmB,UACnB3O,YAAa,UACbC,cAAe,EACfC,cAAe,EACfC,WAAY,EACZ3B,WAAW,EACXW,UAAW,UACXD,UAAW,EACXoB,YAAa,EACbhB,YAAa,EACbf,YAAY,EACZkB,cAAe,EACfC,cAAe,0CACfpB,aAAa,EACbQ,OAAQ,UACRL,QAAS,Q+CoRL4gC,EAAItgC,UAAY48C,GAAiB58C,UACjCsgC,EAAIr/B,YAAc27C,GAAiB37C,YACnCq/B,EAAIp/B,cAAgB07C,GAAiB17C,cACrCo/B,EAAIn/B,cAAgBy7C,GAAiBz7C,cACrCm/B,EAAIl/B,WAAaw7C,GAAiBx7C,WAClCk/B,EAAIngC,UAAYy8C,GAAiBz8C,UACjCmgC,EAAIyI,YAAc6T,GAAiBx8C,UACnCkgC,EAAIqc,SAAW,QACfrc,EAAIgC,yBAA2B,gBCrSvC,IAAMua,GAAkC,CACpC35C,MAAO,EACPC,OAAQ,EACRC,MAAO,GAEE05C,GAAsB,SAAC,GAc7B,IAAD,IAbFxc,EAaE,EAbFA,IACAtlC,EAYE,EAZFA,MACAgU,EAWE,EAXFA,OACA1I,EAUE,EAVFA,aACA4c,EASE,EATFA,KACA3Q,EAQE,EARFA,eAQE,sBAMEvP,EAAyBgM,UAN3B,aAME,EAAmCkU,UANrC,QAM8ClgB,EAAwB,IAAxB,OAN9C,IAEEK,qBAFF,MAEkB,OAFlB,EAGEP,EAHF,EAGEA,SACAD,EAJF,EAIEA,aACWxH,EALb,EAKEuH,UAEE2E,E1CwK6D,CACnEtE,IAAKyH,GACLpH,IAAKsH,I0C1KqCoE,GACtC1I,IAAciB,EAASjB,aAAeA,GARxC,IASMhG,EAASiH,EAATjH,KACF+qC,EAAYwR,GAAQ35B,GACpB4jB,EAAev/B,EAASpB,SAASklC,GACjCgP,EAAa13B,GAAiB,CAChCK,cAAe1iB,EACfyiB,YAAY,GAAD,OAAK+jB,EAAargC,SAAlB,QAETokC,EAAW,CACbQ,YACA9jC,WACA6jC,YAAaiP,GAEbzM,EAAkB,EAEtBtN,EAAIhgC,KAAO+5C,EAAW/2B,UACtBgd,EAAIY,UAAY,OAChB,IAAM2P,EAAiBJ,GAAkBz1C,EAAOgU,EAAQ,CAAE0hC,WAAW,EAAOn+B,mBAgBtEkuB,EAf0Bre,IAC5B,SAAAhB,GAAW,IAAD,EACwC0rB,GAAe,CACzDxM,MACAlf,SACA2rB,cAAe,CAAC8D,GAChB7hC,SAAQ67B,WACRxvC,UALI6xC,EADF,EACEA,iBAAkBD,EADpB,EACoBA,gBAQ1B,QAAIC,EAAmB,KACvBU,EAAkBX,EAAgB,GAAGW,iBAC9B,MAG0B,IAEzCtN,EAAIngB,MAAMsgB,EADK,GAEf,IAAM/oB,EAAS02B,GAAS,CACpB9N,MACAkM,UAAW9F,GAAamK,GACxBpQ,SAAQ94B,OALG,EAMX7E,SAA4B,SAAlBO,EAA2BP,EAAYA,EAAW8qC,EAAkBnN,EAC9E59B,eACAgoC,WACA77B,SACAk3B,WAAY,YAAkD,IAA/C5F,EAA8C,EAA9CA,IAAKyE,EAAyC,EAAzCA,OAAQwB,EAAiC,EAAjCA,WAAYD,EAAqB,EAArBA,eACpChG,EAAIgB,SAASyD,EAAQwB,EAAYD,MAKzC,OAFAhG,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAEzB,2BACA5wB,GADP,IAEI+oB,YAIKsc,GAAe,yCAAG,4EAAAj1B,EAAA,yDAC3BwY,EAD2B,EAC3BA,IACAhvB,EAF2B,EAE3BA,YACAxB,EAH2B,EAG3BA,UACAd,EAJ2B,EAI3BA,OACAM,EAL2B,EAK3BA,MACA4T,EAN2B,EAM3BA,KACA85B,EAP2B,EAO3BA,UACAnL,EAR2B,EAQ3BA,UACAt/B,EAT2B,EAS3BA,eAYKqvB,GAAYtB,GArBU,oDAuBrB2c,EAAsB3rC,EAAY4C,OAAS,EAE3CgpC,EAAsB5rC,IADtB6rC,EAAertC,IAAc3R,GAAoB,UAAT+kB,GtCpHpB,SsCsHa,IACjCk6B,EAA4BH,EACjB,QAAXjuC,EACa,UAATkU,EAAA,uBACUg6B,EADV,4BAEQA,EAFR,KADJ,gBAIQA,EAJR,UAKA,GACDD,EAlCsB,oDAqCrBI,EAAmBzpC,GAAgBtE,KAAWkE,GAAgB,CAAElE,WAAqB,UAAT4T,EAC5E,UACA,UACAo6B,EAxCqB,aAwCDt/C,MAAOq/C,GAAqBxL,GAChD0B,EAAa7Q,GAAa,aAAEpC,OAAQgd,IAzCf,EA0CUR,GAAoB,CACrDxc,MACAtxB,SACAkU,OACAloB,MAAOoiD,EACP92C,aAAe02C,OAAwB9nC,EAAZ,UAC3B3C,mBANI87B,EA1CmB,EA0CnBA,iBAAkB5N,EA1CC,EA0CDA,OAQ1B8S,IAEItuC,EAAqB,QAAX+J,GAAoB,EAAI,EAClCotC,EAAqB,QAAXptC,GAAoB,EAAI,GAElCmuC,EAvDuB,0BAwDI9O,EAAiB,GAApC9N,EAxDe,EAwDfA,KAAMC,EAxDS,EAwDTA,SAxDS,UAyDjBmD,GACFrD,EADmB,8BAEIxwB,EAAUsf,cAFd,SAGnB,SAAAtvB,GAAK,OAAIygC,EAA4B,KAArBzgC,EAAMy9C,aAAuB9c,EAAS2b,KACtD,SAAAt8C,GAAK,OAAI0gC,EAAgC,GAArB1gC,EAAMy9C,aAAqBt4C,KAC/C,SAAAnF,GAAK,OAAIA,EAAMy9C,gBACf,SAAAz9C,GAAK,OAAIA,EAAMy9C,gBA/DI,oEAAH,sDC3FrB,MAAMC,GAAYA,CACrBld,EACAtlC,EACAulC,EACAC,KAEA,GAAIF,GAAOtlC,EAAO,CACd,MAAMyL,EAAW,KACjB65B,EAAIhgC,KAAI,GAAAtB,OAAMyH,EAAQ,0BACtB65B,EAAIY,UAAY,OAEhB,MAAMuc,EAAkB,IAClBC,EAAY,GAAA1+C,OAAGhE,GAAQmZ,MAAM,IACnC,IAAI22B,EAAa,EAEjB4S,EAAUpoC,SAAQqoC,IACd7S,GAAcxK,EAAIkB,YAAYmc,GAAOtiD,OAAmB,MAAVsiD,EAAgBF,EAAkB,MAEpF,IAAIG,EAAUrd,EAAOuK,EAAa,EAElC4S,EAAUpoC,SAAQqoC,IACdrd,EAAIgB,SAASqc,EAAiB,MAAVA,EAAgBC,EAAU,EAAIA,EAASpd,EAAW/5B,GACtEm3C,GAAWtd,EAAIkB,YAAYmc,GAAOtiD,OAAmB,MAAVsiD,EAAgBF,EAAkB,QA4C5EI,GAAeA,CACxBvd,EACAtlC,EACAulC,EACAC,KAEA,IAAKF,EAAK,OAEVA,EAAIngB,MAAM,EAAG,KACbmgB,EAAIhgC,KAAO,2BACX,MAAMw9C,EAAiBjd,GAAwBP,EAAKtlC,EAAO,KAAOulC,EAAMC,EAAW,KACnFF,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChChI,EAAIngB,MAAM,EAAG,MACbmgB,EAAIhgC,KAAO,2BACXugC,GAAwBP,EAAK,IAAK,IAAMwd,EAAiB,EAAGtd,EAAW,MACvEF,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,IAIvByV,GAAWA,CACpBzd,EACAtlC,EACAulC,EACAC,KAEA,IAAKF,GAAgB,MAATtlC,EAAe,OAE3B,MAAMgjD,EAAY,MAClB,GAAc,WAAVhjD,EACAslC,EAAIY,UAAY,QAChBZ,EAAIhgC,KAAO,mBACXggC,EAAIgB,SAAStmC,EAAOulC,EAAOyd,EAAWxd,QAE1C,GAAc,MAAVxlC,EACAslC,EAAIY,UAAY,QAChBZ,EAAIhgC,KAAO,mBACXggC,EAAIgB,SAAStmC,EAAOulC,EAAOyd,EAAWxd,OACnC,CACHF,EAAIY,UAAY,OAChB,MAAM+c,EAAgB,GAAAj/C,OAAGhE,GAAQmZ,MAAM,KAEvC,IAAI22B,EAAamT,EAAcl6C,QAAO,CAACm6C,EAAM9Q,EAAM1oB,KAC/C4b,EAAIhgC,KAAO,2BACX,IAAI69C,EAAYD,EAAO5d,EAAIkB,YAAY4L,GAAM/xC,MAO7C,OALIqpB,EAAQu5B,EAAc/pC,OAAS,IAC/BosB,EAAIhgC,KAAO,cACX69C,GAAa7d,EAAIkB,YAAY,KAAKnmC,OAG/B8iD,IACR,GAEH,GAAIrT,EAAa,EAAG,CAChB,MAAMsT,EAAgBtmC,KAAKoJ,IAAI88B,EAAYlT,EAAY,GAEvDxK,EAAIngB,MAAMi+B,EAAe,GACzBH,EAAcl6C,QAAO,CAACm6C,EAAMG,EAAG35B,EAAO45B,KAClC,MAAMC,EAAUD,EAAIA,EAAIpqC,OAAS,EAAIwQ,GACrC,IAAI85B,EAAWN,EAWf,OAVA5d,EAAIhgC,KAAO,2BACXk+C,GAAYle,EAAIkB,YAAY+c,GAASljD,MAAQ+iD,EAC7C9d,EAAIgB,SAASid,EAASC,EAAWJ,EAAe5d,GAE5C9b,EAAQu5B,EAAc/pC,OAAS,IAC/BosB,EAAIhgC,KAAO,mBACXk+C,GAAYle,EAAIkB,YAAY,KAAKnmC,MAAQ+iD,EACzC9d,EAAIgB,SAAS,IAAKkd,EAAWJ,EAAe5d,IAGzCge,IACRje,EAAOyd,GACV1d,EAAIngB,MAAM,EAAIi+B,EAAe,OCvFrC9iD,OAAQ6kC,GACR9kC,MAAO+kC,IACPhlC,EAgBSqjD,GAAsBA,CAAClxB,EAAiBmxB,EAA+B97B,KAChF,MAAM,KACFrP,GACAsnB,MACE,gBACF8B,EAAe,iBACfgiB,EAAgB,oBAChBC,EAAmB,eACnBC,EAAc,iBACdC,EAAgB,gBAChBC,EAAe,cACfC,EAAa,kBACbC,EAAiB,wBACjBC,EAAuB,uBACvBC,EAAsB,eACtBC,EAAc,cACdC,EAAa,iBACbC,EAAgB,kBAChBC,EAAiB,cACjBC,EAAa,gBACbC,EAAe,kBACfC,GACAhB,GACE,OACF1vC,EAAM,cACN0B,EAAa,eAAE/S,EAAc,MAC7B2R,EAAK,KAAEC,EAAI,OAAEC,EAAM,UAAEC,EAAS,QAAE/R,EAAO,KACvCzB,EAAI,UAAE0T,EAAS,cAAED,EAAa,gBAC9BgD,EAAe,kBAAEC,EAAiB,cAAEF,GAAa,cAAED,GAAa,eAAEI,GAAc,OAChFjB,GAAM,YACNJ,GAAW,YACXD,GAAW,WACX7T,GAAU,cAAEyT,GAAa,eAAEC,GAAc,kBAAEE,GAAiB,iBAAED,GAAgB,cAAEM,GAAa,IAC7FG,GAAG,IAAEC,GAAG,QAAEd,GAAO,UACjBnB,GAAS,SACTE,GAAQ,UAAED,GAAS,KAAEE,GAAI,cAAEC,GAAa,MACxC2B,GAAK,SACLG,GAAQ,QAAEO,GAAO,QAAEN,GAAO,aAC1BK,GAAY,eACZJ,GAAc,mBAAEG,GAAkB,YAAEF,GAAW,iBAAEC,GAAgB,eACjEI,IACAgB,EAEEosC,GAAkBziB,iBAAwC,CAC5D5tB,MAAO,CACHrT,KAAM,QACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9BryB,UAAW,CACP5T,KAAM,YACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9BlwB,QAAS,CACL/V,KAAM,UACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9B5vB,QAAS,CACLrW,KAAM,UACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9BjmC,KAAM,CACFA,KAAM,OACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9B5wB,YAAa,CACTrV,KAAM,cACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,WAE9B4d,QAAS,CACL7jD,KAAM,UACNqxB,MAAO,EACPsyB,MAAO,EACPC,WAAYA,IAAM5d,QAAQC,aAI5B6R,GAAgC,SAAlB7iC,GACdzT,GACI,QACA6R,EACJ4B,GAEAM,GAA8B,OAAXD,SAAW,IAAXA,QAAW,EAAXA,GAAaC,iBAEhCogC,GtCtKkBr+B,IACF,WAAfA,EAAKjE,OAAsBmE,GAAaF,GsCqK9BwsC,CAAYxsC,GACvB2gC,GAAQ5gC,GAASC,GACjBtC,GtC/JgBsC,IACfA,EAAKtC,OsC8JG+uC,CAAUzsC,GACnBypC,GAAYvpC,GAAaF,GACzB0gC,GAAezgC,GAAgBD,IAE/B,KAAEzX,GAAO,IAAG,UAAEO,IAAcqB,EAC5BuiD,MAAmBnkD,GAAO,IAAMO,IAChC6jD,GAAc,CAAC,MAAO,eAAgB,cAAe,QAAS,OAAQ,UAAUrsC,SAASkgC,IACzFoM,GAAcxsC,GAAiBrE,IAC/B,WACF8wC,GAAU,wBACVC,GAAuB,gCACvBC,GAA+B,sBAC/BC,GAAqB,sBACrBC,GAAqB,6BACrBC,IACAC,mBAAQ,IC/KY9iC,KAkBrB,IAlBsB,YAEzBuiC,EAAW,cACXF,EAAa,gBACbvtC,EAAe,kBACfC,EAAiB,eACjBC,EAAc,cACdJ,EAAa,cACbC,GAUHmL,EACG,MAAM+iC,EAAa,CAAE3iD,MAAOmiD,EAAc,UAAY,WAChDC,EAAaH,EAAariD,YAAA,CAExB+kC,KAAM,EACNpyB,EAAG,EACHtP,YAAak/C,EAAc,UAAY,WACpCQ,GAELA,GAECC,EAAkBC,EAAqBC,EAAiBC,GAAoBruC,EAC7E2tC,EAA2CO,EAAgBhjD,wBAAA,GAErDkjD,EAAkB,CAAEvwC,EAAG,EAAGoyB,KAAM,EAAG1hC,YAAa8/C,GAAqB,IAAI,GAAF,CAC3E/iD,MAAO6iD,IAET,IAECG,EAA0BC,EAA6BC,EAAyBC,GAA4BxuC,EAC7G2tC,EAAmDU,EAAwBpjD,wBAAA,GAErEsjD,EAA0B,CAAE3wC,EAAG,EAAGoyB,KAAM,EAAG1hC,YAAakgD,GAA6B,IAAI,GAAF,CAC3FnjD,MAAOijD,IAET,IAECG,EAAgBC,EAAmBC,EAAeC,GAAkB9uC,EACrE+tC,EAAyCY,EAAcxjD,wBAAA,GAEjD0jD,EAAgB,CAAE/wC,EAAG,EAAGoyB,KAAM,EAAG1hC,YAAasgD,GAAmB,IAAI,GAAF,CACvEvjD,MAAOqjD,IAET,IAECG,EAAgBC,EAAmBC,EAAeC,GAAkBnvC,EACrE+tC,EAAyCiB,EAAc5jD,wBAAA,GAEjD8jD,EAAgB,CAAEnxC,EAAG,EAAGoyB,KAAM,EAAG1hC,YAAa0gD,GAAmB,IAAI,GAAF,CACvE3jD,MAAOyjD,IAET,IAECG,EAAuBC,EAA0BC,EAAsBC,GAAyBnvC,EAQvG,MAAO,CACHwtC,aACAC,0BACAI,6BAVkDmB,EAAqBhkD,wBAAA,GAE/DkkD,EAAuB,CAAEvxC,EAAG,EAAGoyB,KAAM,EAAG1hC,YAAa8gD,GAA0B,IAAI,GAAF,CACrF/jD,MAAO6jD,IAET,GAMFvB,kCACAC,wBACAC,0BDqGOwB,CAAa,CAChB9B,eACAC,eACAF,iBACAvtC,kBACAC,oBACAC,kBACAJ,iBACAC,oBAEL,CACCytC,GACAC,GACAF,GACAvtC,EACAC,EACAC,GACAJ,GACAC,KAGEwvC,GAAsBnyC,GAAU0jB,cAChC0uB,GAAwB5wC,GAAYhE,KAAItR,GAAQA,EAAKo3B,SAAQvnB,KAAgB,QAAXmD,EAAmB,SAAM,iBAC3FmzC,GAAkC,SAAlBjxC,IAA4BzT,MACzCoU,IAAOC,IAAQb,IAAUD,GAAQkD,QACpC8oC,GACAoF,GAA4B,SAAbryC,GACfitC,IAAa/I,GACA,OAAblkC,IAAqBkB,IAErB,eACFyrB,GAAc,iBACd2lB,GAAgB,aAChBrO,GAAe,SAAQ,SACvB3lB,IACAzL,EACE0/B,GAAc/0B,IAA6B,IAAnBmP,GAExByX,GAAauM,mBAAQ,IAAM5e,GAAkBtyB,EAAQpL,IAAY,CAACoL,IAClE4kC,GAAgBsM,mBAAQ,IAAM5e,GAAkB,CAACryB,GAAYnL,IAAe,CAACmL,IAGnFouB,qBAAU,KACDykB,KACL3C,GAAgBrkB,QAAQhsB,MAAMswC,OAAS,EACvCD,GAAgBrkB,QAAQhsB,MAAMuwC,WAAaj7B,UAAa,IAAD29B,EAAAC,EACnD,MAAMliB,EAA4B,QAAzBiiB,EAAG1D,EAAevjB,eAAO,IAAAinB,OAAA,EAAtBA,EAAwB/kB,WAAW,MACzCqW,EAAgB8K,EAAiBrjB,QACjCwY,EAAmB8K,EAAoBtjB,QAE7C,IAAKsG,GAAYtB,KAASue,EAAevjB,QAAS,OAElD,MAAM+Z,EAAiBz3C,wBAAA,GAAQ/B,KAA4B6B,IAEvDvB,UAAWk4C,EACXv4C,KAAMw4C,EAAW,UACjBj4C,EAAS,SACTH,GACAm5C,EAQEoN,EAAgBA,CAACnyC,EAAWC,EAAWmyC,EAAWC,IAC7C,IAAI1gB,SAAQC,IACfnE,YAAW,KACPuC,EAAItgC,UAAY0Q,EAAgBxU,EAAWN,EAC3C0kC,EAAIsE,SAASt0B,EAAGC,EAAGmyC,EAAGC,GACtBzgB,GAAQ,KACT,MAGL0gB,EAAetO,EAAc,GAAWD,QAGxCoO,EAAc,EAAG,EAAGriB,GAAaD,IAEvC,MAAM,cACF8W,EAAa,eACbZ,EAAc,YACdD,EAAW,UACXD,EAAS,iBACT0B,EAAgB,sBAChBD,EAAqB,SACrBV,EAAQ,mBAERgB,EAAkB,qBAClBC,EAAoB,gBAEpBG,EAAe,eACfC,EAAc,cACdC,EAAa,mBACbE,EAAkB,yBAClBc,EAAwB,iBACxBZ,EAAgB,eAChBC,EAAc,eACdZ,EAAc,oBAEdkB,EAAmB,kBACnBL,EAAiB,qBACjBC,EAAoB,gBACpBC,EAAe,eAEfE,EAAc,cACdE,EAAa,qBACbC,EAAoB,oBACpBC,EAAmB,4BACnBC,EAA2B,gBAC3BE,EAAe,0BACfC,EAAyB,kBACzBC,EAAiB,qBACjBE,GAAoB,mCAEpB7E,IACApB,GAAsB,CACtBxP,OAAQya,EAAevjB,QACvBuY,gBAAeC,mBACf9kC,SACAM,QAAOykC,eACPrjC,gBACA/S,iBACAkS,aACAE,YAAUC,QACVT,OACAykC,gBACAt2C,QAAS23C,EACTpkC,UAAQgjC,gBAAcC,SACtBz2C,cACA02C,cACAC,mBAyBJ,GArBIN,GAAoBxT,GAAK+V,IACzBxC,GAAiBvT,IAAQjkC,GAAW+5C,UAClCD,UACA0C,UACAgB,KAGDp8C,KACIpB,UACK67C,UACAC,UACAS,UAEAG,WAEJP,UACAM,UACAQ,KAIN77C,KAAewT,KAAW5U,EAAW,CAErC,GAAIw3C,GAAiBvT,GAAOuT,EAAcv4C,OAAS,EAAG,CAClD,MAAQD,MAAOqB,EAAUpB,OAAQunD,GAAchP,GACzC,cACF6B,EAAa,cAAEE,EAAa,aAC5BE,EAAY,aACZC,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,GAAmCnB,SAGjC4O,EACF1M,EAAcC,EACdC,EAAkBC,GAGtBG,EAAe,YACf/V,EAAI5C,UACAmW,EACA6B,EAAeE,EACfl5C,EAA2B,EAAhBg5C,EAAmBmN,EAAY/M,EAC1CC,EAAcC,EACdC,EAAkBC,SAIpBgC,UACAC,GAAqB,GAwB/B,SApBMiB,UACAC,KAGF57C,IAAewT,IAAW5U,UACpBu7C,UAEAc,EAAmBkK,EAAc,gBACjClK,EAAmBkK,EAAcrzC,SACjCgqC,IACFqJ,SAAoBpJ,KAGvBn9C,UACKo9C,UACAP,KAEN0J,SAAoBlJ,IAGpBr9C,EAAW,CACX,GAAI4U,SAEMqoC,SACH,GAAI77C,GAAY,CAEnB,MAAM03C,EAAmB74C,EAA2BgB,SAAST,MACvDP,EAA2Bc,iBAAiBP,MAElD,GAAIg3C,GAAiBvT,GAAOuT,EAAcv4C,OAAS,EAAG,CAClD,MAAM,aACFy6C,EAAY,aAAEC,EAAY,iBAC1BC,EAAgB,kBAAEC,GAClBlB,GACAnB,EAAaj2C,oCAAA,GACR/B,KAA4B6B,GAAO,IAAE5B,KAAM,IAAKO,WAAW,IAChE84C,SAGEsN,EACF1M,EAAcC,EACdC,EAAkBC,GAEtBG,EAAe,YAEfuM,UACMlK,EAAmBkK,EAAc,gBACjClK,EAAmBkK,EAAcrzC,UAErCgqC,UAEJrB,UACAgB,UACAX,IACF1E,GAAiBvT,GAAK8V,UACpBiD,IAGF57C,KAAewT,UACTknC,GAAqB,SACrBP,UACAc,GAAmB,EAAO,gBAC1BA,GAAmB,EAAOnpC,SAC1BiqC,YAEArB,UACAS,UACAG,WAEJU,IAMV,GAHI0I,UAAoBlK,EAA0C,QAA5BuK,EAACjC,GAAsBviD,aAAK,IAAAwkD,IAAI,YAGjE/kD,IAAcwT,GAAQ,OACjB4mC,EAAiB7mC,UACjBgoC,GAAgB,GACtB,MAAMzF,EAAa7Q,GAAY9kC,YAAC,CAAE0iC,OAAQigB,KACtC4B,SL1Qcv9B,OAC9Bwf,EACApzB,EACAiS,KAEA,MAAMqd,EAAM8D,EAAO5G,WAAW,MAE9B,IAAK8C,IAAQ7qB,MAAMC,QAAQ1E,GAAU,aAE/BmzB,GACFC,EACA,qBACA,IAAK,KACL,IAAK,GACLnhB,GAEJ,MAAMswB,EAAa7Q,GAAY9kC,YAAC,CAAE0iC,OAAQrd,IAC1Cqd,EAAIY,UAAY,QAChBZ,EAAIngB,MAAM,IAAK,GACfmgB,EAAIhgC,KAAO,+BACXggC,EAAIgB,SAAS,GAADtiC,OAAIgS,EAAQkD,QAAU,OAAQ,MAC1CosB,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChChI,EAAIY,UAAY,OAChBqS,KKmPoCuP,CAAmBjE,EAAevjB,QAAgB,OAAPtqB,SAAO,IAAPA,MAAW,GAAIuvC,IAClFhN,UAGE0D,UACAkC,IACDloC,IAAWgjC,UAAoBiD,EAAS,CAAEj0B,MAAOm9B,GAAYnwC,mBAC7D5T,SAAiBk8C,UAChBD,SL1WgB1zB,WAkB3B,IAlBkC,OACrCwf,EAAM,KACNlnC,EAAI,WACJO,EAAU,OACVwT,EAAM,mBACNmB,EAAkB,YAClBF,EAAW,SACX6wC,EAAQ,UACRlR,GAUHnhB,EAGG,GAFkB,OAAN0T,QAAM,IAANA,OAAM,EAANA,EAAQ5G,WAAW,MAE/B,CAEA,GAAIprB,EAAoB,CACpB,MAAMslC,EAA+Cj6C,EAC/C,CAAC,IAAK,KAAM,IAAK,IACjBwT,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBkzB,GACFC,EAAO,2BAADplC,OACqB9B,GAAI8B,OAAG+jD,EAAW,YAAc,GAAE,WAC1DrL,GACM,OAAT7F,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAWrD,wBAAA,GAAQi0C,GAAS,IAAElP,KAAM,EAAGryB,EAAG,EAAGC,EAAG,IAAMshC,GAGzE,GAAI3/B,EAAa,CACb,MAAMwlC,EAA+Cj6C,EAC/C,CAAC,IAAK,KAAM,MAAO,IACnBwT,EACI,CAAC,IAAK,IAAK,MAAO,IAClB,CAAC,GAAI,IAAK,IAAK,UAEnBkzB,GACFC,EAAO,wBAADplC,OACkB9B,GAAI8B,OAAG+jD,EAAW,YAAc,GAAE,WACvDrL,GACM,OAAT7F,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAWrD,wBAAA,GAAQi0C,GAAS,IAAElP,KAAM,EAAGryB,EAAG,EAAGC,EAAG,IAAMshC,MK2T3DmR,CAAmB,CACrB5e,OAAQya,EAAevjB,QACvBp+B,KAAOgjD,KAAgBziD,GAAc,QAAU,QAC/CslD,UAAWzO,EAAc,IAAMj4C,KAAeoB,GAC9C2U,sBAAoBF,eACpBjB,UAAQxT,cACRo0C,UAAW4O,WAET9G,QAEX,CACC2I,GACA3D,EACAC,EACAC,EACAvvC,EACAN,EACA0B,EACA/S,EACAkS,GACAkkC,GACAxkC,EACAS,GACAC,GACAF,GACAqC,GACAnB,GACAxT,GACAyU,GACA+hC,GACAC,GACAgM,GACAlvC,GACAuvC,GACAE,GACArM,GACAD,GACAz2C,EACAs2C,GACAmO,GACA/B,GACAiC,KAIJxkB,qBAAU,KAAO,IAADolB,EACZ,IAAKX,GAAa,OAClB,MAAMhiB,EAAoC,QAAjC2iB,EAAG9D,EAAuB7jB,eAAO,IAAA2nB,OAAA,EAA9BA,EAAgCzlB,WAAW,MAElDoE,GAAYtB,IACb7iC,KACA+/C,GAAUld,EAAsB,OAAjBjvB,SAAiB,IAAjBA,MAAqB,EAAG,KAAM,KAC7CmsC,GAAUld,EAAqB,OAAhBlvB,SAAgB,IAAhBA,MAAoB,EAAG,IAAO,QAElD,CAACkxC,GAAa7kD,GAAY4T,GAAmBD,GAAkB+tC,IAGlEthB,qBAAU,KACDykB,KACL3C,GAAgBrkB,QAAQr/B,KAAK2jD,OAAS,EACtCD,GAAgBrkB,QAAQr/B,KAAK4jD,WAAaj7B,UAAa,IAADs+B,EAAAC,EAClD,MAAM7iB,EAA2B,QAAxB4iB,EAAGlE,EAAc1jB,eAAO,IAAA4nB,OAAA,EAArBA,EAAuB1lB,WAAW,MACxCF,EAAiC,QAAxB6lB,EAAGnE,EAAc1jB,eAAO,IAAA6nB,OAAA,EAArBA,EAAuB7lB,YAEpCsE,GAAYtB,IAAShD,SAEpBwc,GACFxZ,EACArkC,EACW,QAAX+S,EAAmB,GAAK,GAAI,IAC5Ba,KAAchS,EACI,QAAXmR,EAAmB,IAAM,IACd,QAAXA,EAAmB,IAAM,ItC/ehB4O,KAYzB,IAADwlC,EAAAC,EAAA,IAZ2B,OAC7Br0C,EAAM,MACNM,EAAK,UACLK,EAAS,cACTD,EAAa,KACbH,GAOHqO,EAEG,GAAsB,WAAlBlO,EACA,OAAOC,EAGX,MAAMskC,EAAezgC,GAAgB,CAAElE,UACjC6wC,EAAcxsC,GAAiBrE,GAErC,IAAIg0C,EAAiB,UACN,QAAXt0C,IAAkBs0C,EAAiB,OACnCrP,GAA2B,QAAXjlC,IAAkBs0C,EAAiB,SAGvD,IAAIC,EAAkB,CAClBvjD,UAAWmgD,EAAc,UAAY,UACrCvwC,kBAAmBuwC,EAAc,UAAY,WAEjD,GAAsB,eAAlBzwC,EAAgC,CAAC,IAAD8zC,EAAAC,EAChC,MAAMC,EAAe9lD,YAAA,GAAQ+B,EAAmC,QAAjB6jD,EAAC7zC,EAAU5P,cAAM,IAAAyjD,IAAI,WAAWxoD,OAK/E,OAJK2E,EAAyC,QAAvB8jD,EAACC,EAAgB3jD,cAAM,IAAA0jD,IAAI,WAAWzoD,MAAMsF,OAC/DojD,EAAgBpjD,KAAOgjD,GAG3B1lD,wBAAA,GACO2lD,GACAG,GAIX,IAAIC,EAAoB1P,EAClB,CACEz0C,YAAY,EACZW,UAAW,EACX4oC,YAAa,QAEf,GAEN,MAAM6a,EAAqB,WAATr0C,GAAmD,QAAlC6zC,EAA2B,QAA3BC,EAAG1jD,EAAmB4P,UAAK,IAAA8zC,OAAA,EAAxBA,EAA0BroD,aAAK,IAAAooD,IAAS,GACxES,EAAuB,SAAVv0C,EAAmB3P,EAAmB8B,UAAUzG,MAAQ,GAG3E,OAAA4C,gDAAA,CACI0C,KAAMgjD,GACHC,GACAI,GACAC,GACAC,IsCqbKC,CAAiB,CAAE90C,SAAQM,QAAOK,YAAWD,gBAAeH,SAC5D,CAAE0kC,gBAAcjlC,SAAQsuB,YAAWhuB,QAAOiD,wBAGnD,CACC+vC,GACAzyC,GACAN,EACAP,EACAM,EACAiD,GACA0hC,GACAh4C,EACA+iD,EACArvC,EACAD,IAIJmuB,qBAAU,KAAO,IAADkmB,EACZ,IAAKzB,GAAa,OAClB,MAAMhiB,EAA2B,QAAxByjB,EAAG1E,EAAc/jB,eAAO,IAAAyoB,OAAA,EAArBA,EAAuBvmB,WAAW,MAE9C,IAAKoE,GAAYtB,KAAS6hB,GAAc,OAExC,MAAM5O,EAAa7Q,GAAY9kC,YAAC,CAAE0iC,OAAQigB,KAC1C1C,GAAavd,EAAK,MAAO,MAAQ,UACjCyd,GAASzd,EAAKzuB,GAAK,QAAS,UACvBZ,KACD4sC,GAAavd,EAAK,MAAO,OAAQ,UACjCyd,GAASzd,EAAKxuB,GAAK,QAAS,WAEhCyhC,MACD,CAAC+O,GAAazwC,GAAKC,GAAKb,GAAQ+rC,GAAWuD,GAAuBlB,EAAe8C,KAGpFtkB,qBAAU,KAAO,IAADmmB,EACZ,IAAK1B,GAAa,OAClB,MAAMhiB,EAA4B,QAAzB0jB,EAAG5E,EAAe9jB,eAAO,IAAA0oB,OAAA,EAAtBA,EAAwBxmB,WAAW,MAE1CoE,GAAYtB,ID9aA2jB,EACrB3jB,EACAtlC,EACAgmC,KASA,IAAKV,EAAK,OAEV,MAAM,WAAE7iC,EAAU,OAAEwT,EAAM,WAAEizC,EAAU,OAAEl1C,EAAM,YAAEkxC,EAAW,UAAErO,GAAc7Q,EAC3E,IAAImjB,EAAU,KACVl/C,EAAU,EACVm/C,EAAU,EACd9jB,EAAIhgC,KAAI,GAAAtB,OAAMklD,EAAa,OAAS,GAAE,6BACvB,QAAXl1C,IACAm1C,EAAU,KACVl/C,GAAW,EACXm/C,GAAW,GAEf,MAAMC,EAAiB3hB,GAAY9kC,wBAAC,CAChC0iC,MACAtiC,MAAQkiD,IAAgBziD,EAAc,UAAY,UAClDwD,YAAaijD,EACPhE,EAAc,UAAY,UAC1B,UACN3vC,EAAG,EACHD,EAAG,EACHqyB,KAAMuhB,IAAezmD,EAAa,EAAI,GACnCo0C,IACU,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAc,CAAEqP,EAAG,EAAGC,EAAG,EAAGoyB,KAAM,GAAM,KAGvDllC,EACAojC,GAAwBP,EAAKtlC,EAAOmpD,EAAS,MAAQC,EAAS,QAAUn/C,GACjEgM,EACPwwB,GAAyBnB,EAAKtlC,EAAOmpD,EAAS,OAASC,EAAS,OAASn/C,GAEzEw8B,GAAyBnB,EAAKtlC,EAAOmpD,EAAS,OAASC,EAAS,MAASn/C,GAE7Eo/C,KCoYIJ,CACI3jB,EACA1uB,GACA,CACIX,UAAQxT,cACRymD,WAAYjE,KAAkBxiD,GAC9BuR,SACAkxC,eACArO,UAAW4O,OAGpB,CACC6B,GACAtzC,EACAiC,GACAxT,GACAyiD,GACAd,EACAxtC,GACAqiC,GACAF,GACAkM,GACAQ,KAIJ5iB,qBAAU,KAAO,IAADymB,EACZ,IAAKhC,GAAa,OAClB,MAAMhiB,EAA+B,QAA5BgkB,EAAGrF,EAAkB3jB,eAAO,IAAAgpB,OAAA,EAAzBA,EAA2B9mB,WAAW,MAClD,IAAKoE,GAAYtB,GAAM,OAEvB,MAAMikB,EExlBkB3mC,KAkBzB,IAAD4mC,EAAAC,EAAA,IAlB2B,IAC7BnkB,EAAG,MACHtlC,EAAK,OACLgU,EAAM,UACNg7B,EAAS,eACT0a,EAAiB,EAAC,YAClBxE,EAAW,UACXzgD,EAAS,UACToyC,GAUHj0B,EACG,IAAKgkB,GAAYtB,GAAM,OAAO,EAE9B,MAAM+jB,EAAiB3hB,GAAY9kC,wBAAC,CAChC0iC,MACAtiC,MAAOkiD,EAAc,UAAY,UACjCj/C,YAAaxB,EACPygD,EAAc,UAAY,UAC1B,UACN5vC,EAAG,EACHC,EAAG,EACHoyB,KAAMljC,EAAY,EAAI,GACnBoyC,IACU,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAc,CAAEqP,EAAG,EAAGC,EAAG,EAAGoyB,KAAM,GAAM,MAGrD,SAAE7/B,EAAQ,aAAED,EAAcD,UAAWvH,GAAuC,QAAhCmpD,EAAGhhD,EAAsBwL,UAAO,IAAAw1C,IAAIhhD,EAA2B,IAC3GmhD,EAAmB,WAAWx8B,KAAKntB,GACnCuM,EAAWkD,GAAiBuE,IAC5B,KAAE1O,GAASiH,EACXspC,EAAiBJ,GAAkBz1C,EAAOgU,EAAQ,CAAE0hC,WAAW,EAAOn+B,gBAAgB,IAG5F,IAAIs4B,EAAW,CACXQ,UAAYsZ,EAAuB,EAAJ,EAC/Bp9C,WACA6jC,YAAazoB,MAEbirB,EAAkB,EAClBgX,EAA0B,IAC1B9d,EAAev/B,EAASpB,SAAS,GACrC,IAAK,IAAIklC,EAAY,EAAGA,EAAY9jC,EAASpB,SAAS+N,OAAQm3B,IAAa,CACvEvE,EAAev/B,EAASpB,SAASklC,GACjC,MAAMgP,EAAa13B,GAAiB,CAChCK,cAAe1iB,EACfyiB,YAAY,GAAD/jB,OAAK8nC,EAAargC,SAAQ,MACrCoc,cAAepjB,EAAY,OAAS,KAExC,IAAIolD,EAAmB,CACnBxZ,YACA9jC,WACA6jC,YAAaiP,GAEbyK,EAAoB,EAqBxB,GApBAxkB,EAAIhgC,KAAO+5C,EAAW/2B,UACtBgd,EAAIY,UAAY,OAChB0jB,EAA0BxiC,IACtBhB,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDxM,MACAlf,SACA2rB,cAAe,CAAC8D,GAChB7hC,SAAQ67B,SAAUga,EAClBxpD,UAGJ,QAAI6xC,EAAmB,KACvB4X,EAAoB7X,EAAgB,GAAGW,iBAChC,MAIfA,EAAkBkX,EAClBja,EAAWga,EACPD,GAA2B,IAAM,MAIzC,MAAMnkB,EAASmkB,EAA0B,IAEzCtkB,EAAIngB,MAAMsgB,EADK,GAEf,MAAM/oB,EAAS02B,GAAS,CACpB9N,MACAkM,UAAW9F,GAAamK,GACxBpQ,SAAQ94B,OALG,EAMX7E,SAAwB,SAAdknC,EAAuBlnC,EAAYA,EAAW8qC,EAAkBnN,EAC1E59B,aAAcA,GAAoC,QAAxB4hD,EAAI3d,EAAa7hC,eAAO,IAAAw/C,IAAI//C,EAAoBO,SAAWy/C,EACrF7Z,WACA77B,SACAk3B,WAAY1V,IAAkD,IAAjD,IAAE8P,EAAG,OAAEyE,EAAM,WAAEwB,EAAU,eAAED,GAAgB9V,EACpD8P,EAAIgB,SAASyD,EAAQwB,EAAYD,MAMzC,OAHAhG,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC+b,IAEO3sC,EAAO62B,WFgfYwW,CAAiB,CACnCzkB,MACAtlC,MAAO+W,GACPmuC,eACAlW,UAAW,OACXh7B,SACAvP,UAA2B,SAAhBs0C,IAA0BkM,GACrCpO,UAAW4O,KAEf,GAAIxuC,GAAgB,ED5kBE,SAC1BquB,GAUE,IATFC,EAAItrB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,GACPurB,EAAQvrB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,QACXyvC,EAAczvC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjB+rB,EAGC/rB,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,CACAgsB,QAAQ,GAGZ,IAAKX,EAAK,OAEV,MAAM,OAAEW,GAAS,EAAK,UAAE4Q,GAAoB,OAAN7Q,QAAM,IAANA,IAAU,GAC1CuS,EAAa7Q,GAAY9kC,wBAAC,CAC5B0iC,OACGuR,IACU,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAc,CAAEqP,EAAG,EAAGC,EAAG,EAAGoyB,KAAM,GAAM,KAErDqiB,EAAkB,IACxB1kB,EAAIhgC,KAAO,qCAEX,IAAI2L,EAAOs0B,EACXD,EAAIgB,SAAS,IAAKr1B,EAAMu0B,EAAWkkB,GAC/BzjB,GAAQX,EAAIiB,WAAW,IAAKt1B,EAAMu0B,GACtCv0B,GAAQq0B,EAAIkB,YAAY,KAAKnmC,MAAQ,EAErCilC,EAAIhgC,KAAO,sCACXggC,EAAIgB,SAAS,KAAMr1B,EAAMu0B,EAAWwkB,EAAkBN,GAClDzjB,GAAQX,EAAIiB,WAAW,KAAMt1B,EAAMu0B,EAAWwkB,GAClD/4C,GAAQq0B,EAAIkB,YAAY,MAAMnmC,MAE9BilC,EAAIhgC,KAAO,sCACXggC,EAAIgB,SAAS,WAAYr1B,EAAMu0B,EAAWkkB,GACtCzjB,GAAQX,EAAIiB,WAAW,WAAYt1B,EAAMu0B,GAC7C+S,ICmjBQ0R,CACI3kB,EAXSjuB,KAAiB5U,GACxBwT,GAAS,IAAM,GACf6G,KAAKqJ,IAAIojC,EAAgB,OAAQ,QAAqB,QAAXv1C,EAAmB,GAAK,GAC1DqD,KAAiB5U,GAC1B,IACA,QACe4U,KAAiB5U,GAChC,EACAw2C,IAAgB,GAAK,EAOvB,CACIpC,UAASj0C,YAAA,CACLI,MAAOkiD,GAAc,UAAY,WAC9BO,SAKpB,CACC6B,GACArwC,GACAF,GACAktC,EACAiB,GACAlxC,EACAixC,GACAhvC,GACAgjC,GACAx2C,GACA4U,GACA0hC,GACA0M,KAIJ5iB,qBAAU,KAAO,IAADqnB,EACZ,IAAK5C,GAAa,OAElB,MAAMhiB,EAA8B,QAA3B4kB,EAAGpG,EAAiBxjB,eAAO,IAAA4pB,OAAA,EAAxBA,EAA0B1nB,WAAW,MAEjDmiB,GAAgBrkB,QAAQhpB,QAAQstC,OAAS,EACzCD,GAAgBrkB,QAAQhpB,QAAQutC,WAAaj7B,UAAa,IAADugC,EACrD,IAAKvjB,GAAYtB,GAAM,OAEvB,MAAM+U,EAAiBz3C,wBAAA,GAAQ/B,KAA4B6B,IAEvD5B,KAAMw4C,EAAW,UACjBj4C,GACAg5C,EACE+P,EGxpBaxnC,KAkBxB,IAADynC,EAAAZ,EAAA,IAlB0B,IAC5BnkB,EAAG,MACHtlC,EAAK,OACLgU,EAAM,UACNg7B,EAAS,eACT0a,EAAiB,EAAC,YAClBxE,EAAW,UACXzgD,EAAS,UACToyC,GAUHj0B,EACG,IAAKgkB,GAAYtB,GAAM,OAEvB,MAAM+jB,EAAiB3hB,GAAY9kC,wBAAC,CAChC0iC,MACAtiC,MAAOkiD,EAAc,UAAY,UACjCj/C,YAAaxB,EACPygD,EAAc,UAAY,UAC1B,UACN3vC,EAAG,EACHD,EAAG,EACHqyB,KAAMljC,EAAY,EAAI,GACnBoyC,IACU,OAATA,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAc,CAAEqP,EAAG,EAAGC,EAAG,EAAGoyB,KAAM,GAAM,MAGrD,SAAE7/B,EAAQ,aAAED,EAAcD,UAAWvH,GAAsC,QAA/BgqD,EAAG9hD,EAAqByL,UAAO,IAAAq2C,IAAI9hD,EAA0B,IACzGgE,EAAWiD,GAAgBwE,IAC3B,KAAE1O,GAASiH,EACXspC,EAAiBJ,GAAkBz1C,EAAOgU,EAAQ,CAAE0hC,WAAW,EAAOn+B,gBAAgB,IAG5F,IAAIs4B,EAAW,CACXQ,UAAW,EACX9jC,WACA6jC,YAAazoB,MAEbirB,EAAkB,EAClBgX,EAA0B,IAC1B9d,EAAev/B,EAASpB,SAAS,GACrC,IAAK,IAAIklC,EAAY,EAAGA,EAAY9jC,EAASpB,SAAS+N,OAAQm3B,IAAa,CACvEvE,EAAev/B,EAASpB,SAASklC,GACjC,MAAMgP,EAAa13B,GAAiB,CAChCK,cAAe1iB,EACfyiB,YAAY,GAAD/jB,OAAK8nC,EAAargC,SAAQ,MACrCoc,cAAepjB,EAAY,OAAS,KAExC,IAAIolD,EAAmB,CACnBxZ,YACA9jC,WACA6jC,YAAaiP,GAEbyK,EAAoB,EAqBxB,GApBAxkB,EAAIhgC,KAAO+5C,EAAW/2B,UACtBgd,EAAIY,UAAY,OAChB0jB,EAA0BxiC,IACtBhB,IACI,MAAM,iBAAE8rB,EAAgB,gBAAED,GAAoBH,GAAe,CACzDxM,MACAlf,SACA2rB,cAAe,CAAC8D,GAChB7hC,SAAQ67B,SAAUga,EAClBxpD,UAGJ,QAAI6xC,EAAmB,KACvB4X,EAAoB7X,EAAgB,GAAGW,iBAChC,MAIfA,EAAkBkX,EAClBja,EAAWga,EACPD,GAA2B,IAAM,MAIzC,MAAMnkB,EAASmkB,EAA0B,IAEzCtkB,EAAIngB,MAAMsgB,EADK,GAEf,MAAM/oB,EAAS02B,GAAS,CACpB9N,MACAkM,UAAW9F,GAAamK,GACxBpQ,SAAQ94B,OALG,EAMX7E,SAAwB,SAAdknC,EAAuBlnC,EAAYA,EAAW8qC,EAAkBnN,EAC1E59B,aAAcA,GAAoC,QAAxB4hD,EAAI3d,EAAa7hC,eAAO,IAAAw/C,IAAI//C,EAAoBO,SAAWy/C,EACrF7Z,WACA77B,SACAk3B,WAAY1V,IAAkD,IAAjD,IAAE8P,EAAG,OAAEyE,EAAM,WAAEwB,EAAU,eAAED,GAAgB9V,EACpD8P,EAAIgB,SAASyD,EAAQwB,EAAYD,MAMzC,OAHAhG,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChC+b,IAEAzmD,YAAA,CAEI05C,SAAwB,SAAdtN,EAAuBlnC,EAAYA,EAAW8qC,EAAkBnN,GACvE/oB,IH8iB0B4tC,CAAgB,CACrChlB,IAA6B,QAA1B6kB,EAAErG,EAAiBxjB,eAAO,IAAA6pB,OAAA,EAAxBA,EAA0B3nB,WAAW,MAC1CxuB,SACAhU,MAAOsX,GACP03B,UAAW,QACX0a,eAAgBzQ,IAAgB,EAAI,EACpCx0C,UAAWwgD,GACXC,eACArO,UAAW4O,KAET8E,EAA8B,QAAXv2C,EAAmB,IAAM,IAC5Cw2C,EAA2B,QAAXx2C,EAAmB,GAAK,GAEK,IAADy2C,EAA9CtzC,IAAoB2sC,EAAiBxjB,cLrhBf1W,WAoB/B,IApBsC,OACzCwf,EAAM,KACNlnC,EAAI,WACJO,EAAU,OACVwT,EAAM,aACNoB,EAAY,YACZqzC,EAAW,SACX3C,EAAQ,UACRlR,GAYHrgB,EACG,MAAMkmB,GAAgDrlC,GAAgB5U,EAChE,CAAC,IAAK,KAAM,IAAMioD,EAAa,IAC/Bz0C,EACI,CAAC,IAAK,IAAK,IAAK,IAChB,CAAC,GAAI,IAAK,IAAK,UAEnBkzB,GACFC,EAAO,6BAADplC,OACuB9B,GAAI8B,OAAG+jD,EAAW,YAAc,GAAE,WAC5DrL,GACM,OAAT7F,QAAS,IAATA,OAAS,EAATA,EAAW5wC,aAAWrD,wBAAA,GAAQi0C,GAAS,IAAElP,KAAM,EAAGryB,EAAG,EAAGC,EAAG,IAAMshC,IKufnD8T,CAAuB,CACzBvhB,OAAQ0a,EAAiBxjB,QACzBgF,MACApjC,KAAOgjD,KAAgBziD,GAAc,QAAU,QAC/CslD,UAAWzO,EAAc,IAAMj4C,KAAeoB,GAC9CwT,UAAQxT,cACRioD,aAAwC,QAA3BD,EAAiB,OAAhBL,QAAgB,IAAhBA,OAAgB,EAAhBA,EAAkB9N,gBAAQ,IAAAmO,IAAIF,GAAoBA,EAC1DC,EACA,EACNnzC,gBACAw/B,UAAW4O,QAIxB,CACC6B,GACAhwC,GACAwsC,EACAC,EACA/vC,EACAqD,GACAF,GACAlB,GACAxT,GACAw2C,GACAiM,GACAxiD,EACAuiD,GACAQ,KAIJ5iB,qBAAU,KACDykB,KAEL3C,GAAgBrkB,QAAQtpB,QAAQ4tC,OAAS,EACzCD,GAAgBrkB,QAAQtpB,QAAQ6tC,WAAaj7B,UAAa,IAADghC,EACrD,YL9nBehhC,WAMpB,IAN2B,IAC9B0b,EAAG,QACHtuB,GAIHwe,EACG,GAAKoR,GAAYtB,GAEjB,OAAItuB,IAAYzT,EAAmB0jC,QAAQC,UACpCwB,GAAUpD,EAAI,mBAADthC,OAAqBgT,EAAQod,cAAa,QAAQ,SAAU,WKonB3Dy2B,CAAY,CACrBvlB,IAA6B,QAA1BslB,EAAEtG,EAAiBhkB,eAAO,IAAAsqB,OAAA,EAAxBA,EAA0BpoB,WAAW,MAC1CxrB,iBAGT,CAACswC,GAAatwC,GAASstC,IAG1BzhB,qBAAU,KAAO,IAADioB,EAAAC,EACZ,IAAKzD,GAAa,OAElB,MAAMhiB,EAA6B,QAA1BwlB,EAAG/G,EAAgBzjB,eAAO,IAAAwqB,OAAA,EAAvBA,EAAyBtoB,WAAW,MAC1CwoB,EAA+B,QAAxBD,EAAGvG,EAAclkB,eAAO,IAAAyqB,OAAA,EAArBA,EAAuBvoB,WAAW,MAElDmiB,GAAgBrkB,QAAQhqB,YAAYsuC,OAAS,EAC7CD,GAAgBrkB,QAAQhqB,YAAYuuC,WAAaj7B,UAC7C,IAAKgd,GAAYtB,KAASsB,GAAYokB,GAAU,OAEhD,MAAM,iBAAEx0C,EAAgB,OAAEC,GAAsB,OAAXF,SAAW,IAAXA,MAAe,GAC9C00C,EAAmBvzC,EAAgB,GAAKjB,EAAS,EACjDy0C,EAAkBzU,GAAU7zC,wBAAC,CAC/B0iC,MACAqR,QAAShgC,GACTigC,YACApgC,mBACAxC,SACAuD,mBNztB0BqL,KAUnC,IAVoC,OACvC5O,EAAM,SACN4iC,EAAQ,aACRuQ,EAAY,aACZC,GAMHxkC,EACG,MAAMuoC,EAAgB,CAACn3C,EAAQozC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC9E5+B,QAAOhW,GAAmB,KAAVA,IAAc1B,KAAK,KAClCu6C,EAAc,CAACp3C,EAAQozC,EAAe,OAAS,GAAID,EAAe,OAAS,IAC5E5+B,QAAOhW,GAAmB,KAAVA,IAAc1B,KAAK,KAExC,IAAItE,EAAWhB,EAAe6/C,GAM9B,OALIjE,GAAgBC,GAAgBxQ,GAAuB,QAAX5iC,IAC5CzH,EAAWnB,EACXmB,EAASpB,SAAWS,GAGjB,CACHw/C,cACA7+C,WACAuqC,SAAUnvC,EAAqBwjD,KMisBpBE,CAA2B,CAC1Br3C,SACAmzC,gBACAC,gBACAxQ,eACF,IACFC,UAAWwO,GACXrf,OAAQ,CACJgR,wB9C1nBsB,E8C2nBtBD,iB9C3nBsB,E8C2nByBkU,YAGjDlJ,GAAgB,CAClBzc,IAAK0lB,EACLh3C,SACAM,QACAiD,kBACAyqC,aACAnL,UAAW2O,GACXt9B,KAAOk/B,GAED8D,G9CvoBoB,E8CuoB4B,SAAW,QAD3D,QAENp2C,UAAWmyC,GACX3wC,YAAa4wC,QAGtB,CACCI,GACAF,GACAD,GACA5wC,GACAI,GACAe,EACAqsC,EACA/vC,EACAM,EACAiD,GACAyqC,GACApL,GACA4O,GACAH,GACA4B,GACAC,GACA1C,IAIJ3hB,qBAAU,KAAO,IAADyoB,EACZ,IAAKhE,GAAa,OAClB,MAAMhiB,EAAqC,QAAlCgmB,EAAGpH,EAAwB5jB,eAAO,IAAAgrB,OAAA,EAA/BA,EAAiC9oB,WAAW,MAExD,GAAKoE,GAAYtB,IACb7iC,GAAY,CACZ,MAAM,OAAEgU,GAAwB,OAAbC,SAAa,IAAbA,MAAiB,GAC9Bu0C,EAAmBtzC,EAAkB,GAAKlB,EAAS,EACzDggC,GAAW,CACPnR,MACAqR,QAASxgC,GACTygC,UAAU,EACVrqC,SAAUT,GAAuBkI,GACjC6iC,UAAWyO,GACXxO,SAAU/uC,EACVyO,oBACAxC,SACAuD,kBACAyuB,OAAQ,CACJgR,wB9CnrB+B,E8CorB/BD,iB9CprB+B,E8CorByBkU,QAIrE,CACC3D,GACA9wC,GACAxC,EACAvR,GACAyhD,EACA/tC,GACAO,GACAiB,EACAJ,GACA+tC,KAIJziB,qBAAU,KAAO,IAAD0oB,EACZ,IAAKjE,GAAa,OAClB,MAAMhiB,EAA6B,QAA1BimB,EAAG9G,EAAgBnkB,eAAO,IAAAirB,OAAA,EAAvBA,EAAyB/oB,WAAW,MAEhDmiB,GAAgBrkB,QAAQwkB,QAAQF,OAAS,EACzCD,GAAgBrkB,QAAQwkB,QAAQD,WAAaj7B,UACpCgd,GAAYtB,UACX6T,GACF7T,EACA,iBACAsZ,GAAelW,GAAUpD,EAAI,iBAADthC,OAAmB46C,EAAW,sBAAsB,EAAG,QAG5F,CAAC0I,GAAa7C,EAAiBtL,GAAYl4C,IAE9C,MAAMuqD,GAActpB,iBAA+B,IAC7CL,GAAWM,uBAAYvY,UAKzB,MAAM,WAEFnnB,GAAa,EAAK,QAClBC,GACA+oD,EACEC,EAAe/pB,EAAgBrB,QAC/BqrB,EAAwB,OAAZD,QAAY,IAAZA,OAAY,EAAZA,EAAclpB,WAAW,MAErCopB,EAAgB,SAClBC,EACAF,GAEE,IADFG,EAAkB7xC,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAAG,EAErB,OAAO,IAAIgtB,SAAiBC,IACxBnE,YAAW,KACP,GAAK8oB,EAAYvrB,SAAYqrB,EAEzB,IACIE,EAAYvrB,QAAQyrB,QAAO9sC,IACvB,GAAKA,EACA,CACD,MAAMoS,EAAM9R,IAAIC,gBAAgBP,GAChC,GAAKoS,EACA,CACD,MAAM26B,EAAQ,IAAIxjB,MAClBwjB,EAAMjoD,IAAMstB,EACZ26B,EAAMC,OAAS,KACXN,EAAUjpB,UAAUspB,EAAO,EAAG,GAC9BzsC,IAAI2sC,gBAAgB76B,GACpB6V,GAAQ,IAEZ8kB,EAAMG,QAAU,KACZ5sC,IAAI2sC,gBAAgB76B,GACpB6V,GAAQ,SAXNA,GAAQ,QAHXA,GAAQ,MAmBzB,MAAOnuB,GACLqD,QAAQC,MAAMtD,GACdmuB,GAAQ,QAzBwBA,GAAQ,KA4BpC,GAAb4kB,OAIX,GAAIJ,GAAgBC,EAAW,CAAC,IAADS,EAAAC,EAC3BV,EAAU9kB,UAAU,EAAG,EAAGzmC,EAAYC,MAAOD,EAAYE,cACnD2mC,QAAQuV,IAAIr4C,OACbC,OAAOugD,GAAgBrkB,SACvBrF,MAAK,CAACpB,EAAGzgB,IAAMygB,EAAEvH,MAAQlZ,EAAEkZ,QAC3BhgB,KAAIsQ,IAAkC,IAAjC,WAAEiiC,EAAU,MAAED,EAAK,KAAE3jD,GAAM2hB,EAC7B,OACe,IAAVgiC,GAAe4G,GAAYlrB,QAAQr/B,KAAU2jD,IAC1C4G,GAAYlrB,QAAQr/B,IAExBuqD,GAAYlrB,QAAQr/B,GAAQ2jD,EAErBC,KAEJ5d,QAAQC,cACfolB,OAAMvzC,IACNqD,QAAQC,MAAMtD,GAEd,MAAMlU,EAAM,4BACZy6B,KAAakE,MAAM3+B,GACnBy6B,KAAajjB,MAAM,CACfxX,MACA06B,QAASlM,GAAS,4BAClBmM,YAAanM,GAAS,qCAIlC,MAAMwlB,EAAgB8K,EAAiBrjB,QACvC,GAAIuY,GAAiB8S,EAAW,CAC5B,MAAM,KAAEhqD,EAAI,KAAEC,EAAI,SAAEF,GAAac,EAAuBC,EAAYC,IAC5DrC,MAAOk6C,EAAYj6C,OAAQk6C,GAAgB3B,EAE/C2B,EAAc,GACdmR,EAAUjpB,UACNmW,EACA,EAAG,EACH0B,EAAYC,EACZ74C,EAAMC,EACNF,EAAUA,GAAY64C,EAAaC,UAKzCoR,EAAc/H,EAAgB8H,EAAW,SACzCC,EAAc5H,EAAe2H,EAAW,SACxCC,EAAcrH,EAAmBoH,EAAW,SAC5CC,EAAczH,EAAwBwH,EAAW,SACjDC,EAAc1H,EAAyByH,EAAW,SAClDC,EAAcpH,EAAemH,EAAW,SACxCC,EAAc7H,EAAiB4H,EAAW,SAC1CC,EAAcvH,EAAesH,EAAW,SACxCC,EAAcxH,EAAgBuH,EAAW,SACzCC,EAAc3H,EAAmB0H,EAAW,SAC5CC,EAAc9H,EAAkB6H,EAAW,SAC3CC,EAActH,EAAkBqH,EAAW,SAC3CC,EAAcnH,EAAiBkH,EAAW,GAEvB,QAAzBS,EAAA1H,EAAkBpkB,eAAO,IAAA8rB,GAAkB,QAAlBC,EAAzBD,EAA2B5pB,WAAW,aAAK,IAAA6pB,GAA3CA,EAA6C3pB,UAAUgpB,EAAc,EAAG,MAE7E,CACCr4B,GACAswB,EACAY,EACAT,EACAniB,EACAoiB,EACAU,EACAC,EACAV,EACAC,EACAC,EACAC,EACAC,EACAP,EACAQ,EACAC,EACAE,IAGJ,MAAO,CACHG,mBACA9iB,c,k1EIz8BR,MAAM0qB,GAA4B5+B,aAAO6+B,KAAP7+B,CAAaE,MAgFlC4+B,GAAiB7pC,IAEP,IAFQ,SAC3ByQ,GACazQ,EACb,MACOoZ,EAAS0wB,GAAcC,oBAAS,IAChCC,EAAWC,GAAcF,oBAAS,IAClCG,EAAWC,GAAcJ,oBAAS,IAClCK,EAAUC,GAAeN,mBAAyC,IACnEO,EAAoBF,EAAS9zC,OALjB,GAOlB,OAAOi0C,eAAAC,WAAA,CAAA99B,SAAA,CACH69B,eAACZ,GAAyB,CACtBvwB,QAASA,EACTgH,MAAO3P,EAAS,0BAChBg6B,cAAe,CACXC,SAAUJ,GAAqBN,GAEnCW,OAAQl6B,EAAS,sBACjBm6B,WAAYn6B,EAAS,0BACrBxI,SAAUA,IAAM6hC,GAAW,GAC3Be,KAAM7jC,UACF,IACIijC,GAAW,GAEX,MAAMa,QAA0BzmB,QAAQuV,IAAIwQ,EAAS16C,KAAIkjB,IAAqB,IAApB,KAAEm4B,EAAI,KAAE1sD,GAAMu0B,EACpE,OAAO,IAAIyR,SAAsC,CAACC,EAAS0mB,KACvD,MAAM71B,EAAS,IAAI81B,WACnB91B,EAAOk0B,OAASv2B,IAAiB,IAAhB,OAAE8K,GAAQ9K,EACvB,IAAK8K,EAED,YADAotB,EAAO,sBAIX,MAAM,OAAElxC,GAAW8jB,EACnB,GAAsB,kBAAX9jB,EAEP,YADAkxC,EAAO,sBAIX,IAAIE,EAAe1yC,KAAKC,MAAMqB,GAE1BR,GAAmB4xC,KACnBA,EAAe/zC,GAAiB+zC,IAGpC,MAAMC,EAAkBzxC,GAA0BwxC,GAClD,IAAIE,EAA4C,KAahD,GAVIA,EAFAlB,EAEgBiB,EACV5rC,GAAyBuc,GAAWovB,GAAcv1C,MAAMmE,OACxDoxC,EAGUC,EACVD,EACA/zC,GAAiB2kB,GAAWovB,GAAcv1C,OAG/Cy1C,EAED,YADAJ,EAAO,gCAGX,MAAM3uC,EAAO,IAAIgvC,KACb,CAAC,GAADjqD,OAAIoX,KAAKmmB,UAAUysB,KACnB,CAAE9rD,KAAM,qBAEZglC,EAAQ,CAAEjoB,OAAMhe,UAEpB82B,EAAOm2B,WAAWP,UAIpBQ,EAAY,IAAIC,KACtBV,EAAkBpzC,SAAQkc,IAAqB,IAApB,KAAEvX,EAAI,KAAEhe,GAAMu1B,EACrC23B,EAAUR,KAAK1sD,EAAMge,MAEzB,MAAMovC,QAAgBF,EAAUG,cAAc,CAC1CpsD,KAAM,SAEV8c,GACI,qBACAqvC,EACA,mBAEJxB,GAAW,GACXH,GAAW,GACb,MAAO3zC,GACLqD,QAAQC,MAAMtD,GACdumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,yBAClBmM,YAAanM,EAAS,+BAE1Bw5B,GAAW,KAEjBv9B,SAAA,CAEF69B,eAAA,OAAKtpD,UAAU,aAAYyrB,SAAA,CACvBjsB,cAAA,SAAAisB,SAAO,yCACPjsB,cAAA,OAAAisB,SACIjsB,cAAA,UACIQ,UAAWwpB,GAAW,gBAAiBy/B,EAAY,UAAY,IAC/DyB,QAASA,IAAMxB,GAAW9jD,IAAQA,IAAKqmB,SAEvCjsB,cAACmrD,KAAkB,QAG3BnrD,cAAA,SAAAisB,SAAO,qBAEX69B,eAAA,OAAKtpD,UAAU,aAAYyrB,SAAA,CACvBjsB,cAAA,SACInB,KAAK,OACLusD,OAAO,mBACPC,UAAQ,EACRC,SAAU51C,IACN,MAAM61C,EAAgB71C,EAAEynB,OAAOquB,MAE/B,GAAID,EAAe,CACf,MAAME,EAA+C,GAErD,IAAK,IAAIj0B,EAAM,EAAGA,GAAO+zB,EAAc11C,OAAQ2hB,IAAO,CAClD,MAAMk0B,EAAaH,EAAcI,KAAKn0B,GAClCk0B,GAAYD,EAAanc,KAAK,CAAEgb,KAAMoB,EAAY9tD,KAAM8tD,EAAW9tD,OAG3EgsD,EAAY6B,OAIxB3B,eAAA,OAAKtpD,UAAU,WAAUyrB,SAAA,CACpB+D,EAAS,sCACTu5B,GAAavpD,cAAA,OAAKQ,UAAU,cAAayrB,SACrC+D,EAAS,wCAEb65B,GAAqB7pD,cAAA,OAAKQ,UAAU,UAASyrB,SACzC+D,EAAS,kCApIZ,SAuINhwB,cAAA,OAAKQ,UAAU,YAAWyrB,SACrB09B,EAAS16C,KAAIskB,IAAe,IAAd,KAAE31B,GAAM21B,EACnB,OAAOu2B,eAAA,OAAgBtpD,UAAU,aAAYyrB,SAAA,CACzCjsB,cAAA,OAAAisB,SAAMruB,IACNoC,cAAA,OAAKQ,UAAU,cAAayrB,SACxBjsB,cAAC4rD,KAAa,CACV3B,SAAUV,EACV2B,QAASA,IAAMtB,GAAYiC,GAChBA,EAAQ3mC,QAAOhW,GAASA,EAAMtR,OAASA,YAN7CA,cAejCoC,cAAC8rD,KAAO,CAACrK,QAASzxB,EAAS,0BAA0B/D,SACjDjsB,cAACqqB,GAAsB,CACnB7pB,UAAU,kBACV0qD,QAASA,IAAM7B,GAAW,GAAMp9B,SAEhCjsB,cAAC+rD,KAAe,Y,qmDCvPhC,MAAMC,GAA8B1hC,aAAO2hC,KAAKC,KAAZ5hC,CAAiBE,MAW/C2hC,GAA+B7hC,aAAO2hC,KAAKC,KAAZ5hC,CAAiB8hC,MAQhDC,GAAuB/hC,aAAOgiC,KAAPhiC,CAAciiC,MA4C9BC,GAAiBC,sBAA8C,CAAAltC,EAMzEmtC,KAAS,IANiE,UACzEtuB,EAAS,eACTC,EAAc,iBACd2lB,EAAgB,UAChB3D,EAAS,gBACT5hB,GACHlf,EACG,MAAMyQ,EAAWQ,MACX,YACF+M,EAAW,WACXD,EAAU,cACVQ,GACAT,GAAWsvB,uBAAWx6B,IAAA,IACtB0L,SAAS,YAAEN,EAAW,WAAED,GAAY,cACpCQ,GACH3L,EAAA,MAAM,CACHoL,cACAD,aACAQ,sBAEE,SAAEU,GAAa4hB,IACjB,EACAC,EACA,CACI2D,mBACA3lB,iBACArO,cAGF,gBACFsO,GACA+hB,EACE9hB,EAAYM,iBAAO,CACrB6B,gBAAiBkD,QAAQC,UACzBpD,iBAAiB,KAEdmsB,EAAeC,GAAkBvD,oBAAS,GAC3C5qB,EAAqBI,uBAAY,KACnC+tB,GAAe,KAChB,KACG,OAAEnrB,EAAM,kBAAEG,GAAsB1D,GAAc,CAChDC,YACAC,iBACAC,kBACAC,YACAC,WACAC,kBACAC,uBAGE3iB,EAAY8I,IACV+nC,IACAxuB,EACAnC,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,sCAI1B68B,GAAe,GACfnrB,EAAO7c,MAQX,OALAioC,8BAAoBJ,GAAK,MACrB3wC,WACA8lB,wBAGAzD,EAAkB,KACf0rB,eAAA,OAAKtpD,UAAU,wBAAuByrB,SAAA,CACzCjsB,cAAA,OAAK0U,GAAG,wBACRo1C,eAACuC,GAAoB,CAAC7rD,UAAU,cAAckU,GAAG,oBAAmBuX,SAAA,CAChEjsB,cAAC8rD,KAAO,CAACrK,QAASlkB,EAAcv9B,cAAA+pD,WAAA,CAAA99B,SAAE,sBAAkB,KAAKA,SACrDjsB,cAAA,OAAKQ,UAAU,eAAcyrB,SACzBjsB,cAAA,OAAKQ,UAAU,gBAAgB0qD,QAASA,IAAMnvC,IAAWkQ,SACpD2gC,EACK58B,EAAS,iCACTA,EAAS,+BAI3BhwB,cAAC+sD,KAAQ,CACL9C,SAAU2C,EACVpsD,UAAU,uBACVwsD,UAAU,cACVvL,QAASqI,eAACmC,KAAI,CAACf,QAASx1C,GAAKA,EAAEu3C,SAAS5lC,kBAAkB4E,SAAA,CACtDjsB,cAACgsD,GAA2B,CAAC/B,UAAQ,EAACiB,QAASx1C,GAAKA,EAAEu3C,SAAS5lC,kBAAkB4E,SAC5E+D,EAAS,sCAEb,CACG,CAAEhzB,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,KACtB,CAAED,MAAO,IAAKC,OAAQ,OACxBgS,KAAIojB,IAAwB,IAAvB,MAAEr1B,EAAK,OAAEC,GAAQo1B,EACpB,OAAOy3B,eAACqC,GAA4B,CAChC3rD,UAAW88B,EAAW,KAAOtgC,GAASsgC,EAAW,KAAOrgC,EAAS,oBAAsB,GACvFiuD,QAASA,KACLptB,EAAc,CACVR,WAAY,CAACtgC,EAAOC,KAExBqrB,MACF2D,SAAA,CAEDjvB,EAAM,SAAIC,IAAM,GAAA0D,OATwB3D,EAAK,KAAA2D,OAAI1D,UAYtDgvB,SAERjsB,cAAA,OAAKQ,UAAU,gBAAgB0qD,QAASx1C,GAAKA,EAAE2R,kBAAkB4E,SAC7DjsB,cAACktD,KAAY,iB,kCC3K1B,MAAMC,WAAsBphC,IAAMqhC,UACrCC,YAAY9oC,GACR+oC,MAAM/oC,GACNgB,KAAKiJ,MAAQ,CAAE++B,UAAU,GAG7B,gCAAgCv0C,GAG5B,OAFAD,QAAQC,MAAM,WAAYA,GAEnB,CAAEu0C,UAAU,GAGvBC,kBAAkBx0C,EAAc4O,GAM5B6lC,KAAwBz0C,EAAO,CAAEsY,KAAM1J,EAAK8lC,iBAGhDC,SACI,OAAIpoC,KAAKiJ,MAAM++B,SAEJhoC,KAAKhB,MAAMiN,SAGfjM,KAAKhB,MAAM0H,U,sDC5Bb2hC,I,OAAc,SAAC,GAIR,IAHhBC,EAGe,EAHfA,iBACAC,EAEe,EAFfA,UACGruC,EACY,yDACyBquC,QADzB,IACyBA,IAAa,GAA7CttD,EADO,EACPA,UAAcutD,EADP,6BAGf,OAAO,cAAC,KAAD,yBAASF,iBAAkB,CAAC,sBAAD,OAAwBA,QAAxB,IAAwBA,IAAoB,IAAIrgD,KAAK,MAAUiS,GAA1F,aACH,cAACuuC,GAAA,EAAD,aAA2BxtD,UAAW,CAAC,mBAAD,OAAqBA,QAArB,IAAqBA,IAAa,IAAIgN,KAAK,MAAUugD,S,ugCCV5F,MAAME,GAA4B3jC,KAAO4jC,KAAI1jC,MAyBvC2jC,GAAa5uC,IAOP,IAPQ,KACvB6uC,EAAI,SACJniC,EAAQ,QACRi/B,EAAO,UACP4C,EAAS,aACTO,EAAY,eACZC,GACS/uC,EACT,MAAA4S,EAA8F,OAAdm8B,QAAc,IAAdA,IAAkB,IAA5F,UAAE9tD,EAAW0qD,QAASqD,EAAa,UAAEzmC,GAAkCqK,EAApBq8B,EAAkBxzC,YAAAmX,EAAA,qCAE3E,OAAOnyB,cAAC8rD,KAAOvsD,wBAAA,CAACogC,MAAO,MAAU0uB,GAAY,IAAApiC,SACzCjsB,cAACiuD,GAAyB1uD,wBAAA,CACtBmoB,SAAU,GACN8mC,GAAkB,IACtBtD,QAASx1C,IACE,OAAPw1C,QAAO,IAAPA,OACa,OAAbqD,QAAa,IAAbA,KAAgB74C,IAEpBoS,UAAWpS,IACE,OAAToS,QAAS,IAATA,KAAYpS,GACE,UAAVA,EAAElU,MACK,OAAP0pD,QAAO,IAAPA,SAGR1qD,UAAW,CAAC,cAAwB,OAATA,QAAS,IAATA,IAAa,IAAIgN,KAAK,KAAKye,SAEtD69B,eAAAC,WAAA,CAAA99B,SAAA,CACIjsB,cAACouD,EAAI7uD,YAAA,GAAKuuD,IAAc7hC,YAM3BwiC,GAA8BnkC,KAAOokC,IAAGtC,M,8tBC1DrD,MAAMuC,GAASC,aAASpkC,MAKlBqkC,GAAqBvkC,KAAOokC,IAAGtC,MAU/B0C,GAA+BxkC,aAAOmkC,GAAPnkC,CAAmCiiC,MAG1DhtC,IAAA,IAAC,UAAEwvC,GAAWxvC,EAAA,OAAKwvC,EAAY,GAAKC,aAAGC,KAAcN,OAItDO,GAAgBA,KACzB,MAAMl/B,EAAWQ,MACX,QACFqN,EAAO,cACPC,GACAT,IAAWlL,IAAA,IAAC,QAAE0L,EAAO,cAAEC,GAAe3L,EAAA,MAAM,CAAE0L,UAASC,qBACrD,YACFP,EAAW,kBACXC,EAAiB,mBACjBC,EAAkB,0BAClBC,GACAG,EAEJ,OAAO79B,cAAC8uD,GAA4B,CAACtuD,UAAU,iBAAiBuuD,UAAWvxB,EAAkBvR,SACzFjsB,cAACmvD,KAAO,CACJC,QAAS,CAAC,SACVvB,iBAAiB,yBACjBva,QAASwW,eAAC+E,GAAkB,CAAA5iC,SAAA,CACxBjsB,cAAA,OAAAisB,SACIjsB,cAACqvD,KAAQ,CACLC,QAAS9xB,EACT8tB,SAAU51C,GAAKooB,EAAc,CAAEN,kBAAmB9nB,EAAEynB,OAAOmyB,UAAWrjC,SACxE+D,EAAS,sCAEfhwB,cAAA,OAAAisB,SACIjsB,cAACqvD,KAAQ,CACLC,QAAS5xB,EACT4tB,SAAU51C,GAAKooB,EAAc,CAAEJ,0BAA2BhoB,EAAEynB,OAAOmyB,UAAWrjC,SAChF+D,EAAS,6CAEfhwB,cAAA,OAAAisB,SACIjsB,cAACqvD,KAAQ,CACLC,QAAS7xB,EACT6tB,SAAU51C,GAAKooB,EAAc,CAAEL,mBAAoB/nB,EAAEynB,OAAOmyB,UAAWrjC,SACzE+D,EAAS,qCAEfhwB,cAAA,OAAAisB,SACIjsB,cAAC8rD,KAAO,CAACnsB,MAAO3P,EAAS,iCAAkCg9B,UAAU,OAAM/gC,SACvEjsB,cAACqvD,KAAQ,CACLC,QAAS/xB,EACT+tB,SAAU51C,GAAKooB,EAAc,CAAEP,YAAa7nB,EAAEynB,OAAOmyB,UAAWrjC,SAClE+D,EAAS,qCAGnBhwB,cAAA,OAAAisB,SACIjsB,cAAA,SAAAisB,SAAQ+D,EAAS,wBAEH/D,SAEtB69B,eAAA,OAAKtpD,UAAU,eAAcyrB,SAAA,CACzBjsB,cAACuvD,KAAa,IACdvvD,cAAA,SAAAisB,SAAQ+D,EAAS,kC,+eCpE1B,MAAMw/B,GAAcA,KAAO,IAAD3vB,EAC7B,OAAOiqB,eAAA,OAAKtpD,UAAU,cAAayrB,SAAA,CAC/B69B,eAAA,QAAMtpD,UAAU,UAASyrB,SAAA,CAAC,IAA+B,QAA9B4T,EAACj/B,SAA6Bi/B,EAAI,aAC7D7/B,cAAA,OAAKQ,UAAU,mBAAkByrB,SAC7BjsB,cAAA,KAAGgc,KAAK,uCAAuCmhB,OAAO,SAASsyB,IAAI,aAAYxjC,SAC3EjsB,cAAC0vD,KAAY,YAMvBC,GAAiCrlC,KAAOokC,IAAGlkC,MAmBpColC,GAAYA,KACrB,MAAM,SACF5/B,EAAQ,aACRD,EAAY,oBACZD,EAAmB,eACnBF,GACAjC,IAAQpO,IAAA,IAAC,aACTwQ,EAAY,SACZC,EAAQ,oBACRF,EAAmB,eACnBF,GACHrQ,EAAA,MAAM,CACHwQ,eACAC,WACAF,sBACAF,sBAEE,SACF+H,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACAT,GAAYy0B,uBAAWx6B,IAAA,IAAC,SACxBwF,EAAQ,YACRa,EAAW,cACXW,EAAa,QACbR,GACHxG,EAAA,MAAM,CACHwF,WACAa,cACAW,gBACAR,eAGJ,OAAOmxB,eAAA,OAAKtpD,UAAU,aAAYyrB,SAAA,CAC9BjsB,cAAA,OAAKS,IAAI,WAAWC,IAAG,GAAAC,OAAKC,aAAsB,gBAAgB5D,MAAO,KACzE8sD,eAAA,OAAKtpD,UAAU,kBAAiByrB,SAAA,CAC5B69B,eAAA,OAAKtpD,UAAU,kBAAiByrB,SAAA,CAC5BjsB,cAAA,MAAAisB,SAAI,kBACJjsB,cAAC6vD,KAAMC,MAAK,CAACnzD,MAAOozB,EAAahB,SAAUlK,KAAK,QAAQrkB,UAAU,kBAAiByrB,SAC9EnrB,OAAOC,OAAO+uB,GACV5K,QAAOmN,IAAA,IAAC,OAAEnD,GAAQmD,EAAA,OAAKnD,KACvBjgB,KAAIkkB,IAAyB,IAAxB,SAAEpE,EAAQ,KAAEnxB,GAAMu1B,EACpB,OAAOnzB,cAAC6vD,KAAMvD,OAAM,CAChB3vD,MAAOoyB,EACPu8B,SAAU51C,GAAKka,EAAela,EAAEynB,OAAOxgC,OAAOsvB,SAE7CruB,GAJqBmxB,QAQtC/uB,cAAA,QAAMQ,UAAU,aAAYyrB,SACxB69B,eAAA,OAAKp1C,GAAG,oBAAmBuX,SAAA,CACtB+D,EAAS,kCAAkC,IAAChwB,cAAC+vD,KAAW,YAIrEjG,eAAA,OAAKtpD,UAAU,mBAAkByrB,SAAA,CAC7B69B,eAAA,QAAMtpD,UAAU,cAAayrB,SAAA,CACxB+D,EAAS,yBAAyB,KAAEhwB,cAAA,KACjCgc,KAAK,uCACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAEhBjsB,cAAA,KAAAisB,SAAG,cACH,OAAMjsB,cAAC4tD,GAAW,CAClBta,QAASwW,eAAA,OAAKtpD,UAAU,aAAYyrB,SAAA,CAChCjsB,cAAA,MAAAisB,SAAK+D,EAAS,kCACd85B,eAAA,MAAA79B,SAAA,CACIjsB,cAAA,MAAAisB,SAAK+D,EAAS,iCAAiChwB,cAAA,KAAoBgc,KAAK,sCAAqCiQ,SAAC,+BAAxD,iBACtDjsB,cAAA,MAAAisB,SAAK+D,EAAS,mCACdhwB,cAAA,MAAAisB,SAAK+D,EAAS,mCACdhwB,cAAA,MAAAisB,SAAK+D,EAAS,mCACdhwB,cAAA,MAAAisB,SAAK+D,EAAS,iCACVhwB,cAAA,KACIgc,KAAK,oCACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAAC,UAHd,oBAIPjsB,cAAA,KACIgc,KAAK,sCACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAAC,YAHd,uBAKXjsB,cAAA,MAAAisB,SAAK+D,EAAS,8CAK9BhwB,cAAA,QAAMQ,UAAU,mBAAkByrB,SAC7B+D,EAAS,8BACNhwB,cAAA,KACIgc,KAAK,6FACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAACjsB,cAAA,KAAAisB,SAAG,YAHjB,YAIPjsB,cAAA,KACIgc,KAAK,mGACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAACjsB,cAAA,KAAAisB,SAAG,cAHjB,YAIPjsB,cAAA,KACIgc,KAAK,6CACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAACjsB,cAAA,KAAAisB,SAAG,qBAHjB,YAIPjsB,cAAA,KACIgc,KAAK,uCACLmhB,OAAO,SACPsyB,IAAI,aAAYxjC,SAACjsB,cAAA,KAAAisB,SAAG,eAHjB,qBAQvBjsB,cAAC2vD,GAA8B,CAACnvD,UAAU,cAAayrB,SACnDjsB,cAACkvD,GAAa,MAElBlvD,cAAC2vD,GAA8B,CAACnvD,UAAU,eAAcyrB,SACpDjsB,cAACyuD,GAA2B,CACxBjuD,UAAWwpB,GAAW,uBAAwB2O,EAAU,iBAAmB,IAC3EuyB,QAASA,IAAM/xB,IAAgBlN,SAE/B69B,eAAA,OAAKtpD,UAAU,eAAcyrB,SAAA,CACzBjsB,cAACgwD,KAAc,IACfhwD,cAAA,SAAAisB,SAAQ+D,EAAS,wBACfwI,GAAeb,EAAS9hB,OAAS,GAAM7V,cAAA,OAAKQ,UAAU,iBAAgByrB,SAAC,iBAOhFgkC,GAAuBA,KAChC,MAAMjgC,EAAWQ,KAEjB,OAAOxwB,cAAC4tD,GAAW,CACfC,iBAAiB,qBACjBva,QAASwW,eAAA,OAAKtpD,UAAU,aAAYyrB,SAAA,CAChCjsB,cAAA,MAAAisB,SAAK+D,EAAS,+CACdhwB,cAAA,KAAAisB,SAAI+D,EAAS,6CACbhwB,cAAA,MAAAisB,SAAK+D,EAAS,gDACdhwB,cAAA,KAAAisB,SAAI+D,EAAS,8CACbhwB,cAAA,MAAAisB,SAAK+D,EAAS,+CACdhwB,cAAA,KAAAisB,SAAI+D,EAAS,mD,yVClLlB,MAAMkgC,GAAa5lC,KAAO4jC,KAAI1jC,M,69BCMrC,MAAM2lC,GAAkB7lC,KAAOokC,IAAGlkC,MAG5B4lC,GAAqB9lC,KAAOokC,IAAGtC,MAY/BiE,GAAkC/lC,KAAOokC,IAAGnC,MAuBrC+D,GAAmB/wC,IAKP,IALQ,QAC7BgxC,EAAO,eACPjC,EAAc,IACd7tD,GAEe8e,EADZE,EAAIzE,YAAAuE,EAAA,oCAEP,MAAM,UAAE/e,GAA4B,OAAd8tD,QAAc,IAAdA,IAAkB,GAExC,OAAOxE,eAACuG,GAA+B,CAAC7vD,UAAS,sBAAAG,OAAwBH,GAAYyrB,SAAA,CACjFjsB,cAAA,MAAAT,YAAA,CAAKkB,IAAKA,GAASgf,IACnBzf,cAAA,OAAKQ,UAAU,UAASyrB,SAAEskC,QAIrBC,GAAuBA,KAChC,MAAOC,EAAWC,GAAiBpH,oBAAS,GACtCt5B,EAAWQ,KAEjB,OAAOs5B,eAAAC,WAAA,CAAA99B,SAAA,CACHjsB,cAAC2wD,KAAM,CACHC,OAAQ,KACRj4B,QAAS83B,EACTzzD,MAAO,MACP2iC,MAAOmqB,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CAAE+D,EAAS,sBAAsB,IAAChwB,cAACssD,KAAM,CAC1EznC,KAAK,QACLhmB,KAAK,UACLqsD,QAASA,KACLwF,GAAc,IAChBzkC,SACJ+D,EAAS,2BACXxvB,UAAU,4BACVqwD,QAASA,KACLH,GAAc,IAChBzkC,SAEF69B,eAACqG,GAAe,CAAAlkC,SAAA,CACZ69B,eAAA,KAAA79B,SAAA,CACK+D,EAAS,6BAA6BhwB,cAACuvD,KAAa,GAAK,SAAW,OAEzEvvD,cAAA,MAAAisB,SAAK+D,EAAS,kCACbA,EAAS,kCACNhwB,cAACkwD,GAAU,CAAAjkC,SAAiB,KAAZ,YAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAkB,KAAb,aAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAe,UAAV,UAChBjsB,cAACkwD,GAAU,CAAAjkC,SAA0B,YAArB,sBAEpB69B,eAACsG,GAAkB,CAAC5vD,UAAU,eAAcyrB,SAAA,CACxCjsB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,qBAC7BC,IAAK,yBACLC,IAAG,GAAAC,OAAKC,aAAsB,wCAC9B2vD,QAASvgC,EAAS,gCAEtBhwB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,yBAC7BC,IAAK,6BACLC,IAAG,GAAAC,OAAKC,aAAsB,4CAC9B2vD,QAASvgC,EAAS,oCAG1BhwB,cAAA,MAAAisB,SAAK+D,EAAS,kCACbA,EAAS,kCACNhwB,cAACkwD,GAAU,CAAAjkC,SAAiB,KAAZ,YAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAkB,KAAb,aAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAe,UAAV,UAChBjsB,cAACkwD,GAAU,CAAAjkC,SAA0B,YAArB,sBAEpB69B,eAACsG,GAAkB,CAAC5vD,UAAU,eAAcyrB,SAAA,CACxCjsB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,qBAC7BC,IAAK,yBACLC,IAAG,GAAAC,OAAKC,aAAsB,wCAC9B2vD,QAASvgC,EAAS,gCAEtBhwB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,yBAC7BC,IAAK,6BACLC,IAAG,GAAAC,OAAKC,aAAsB,4CAC9B2vD,QAASvgC,EAAS,oCAG1BhwB,cAAA,MAAAisB,SAAK+D,EAAS,kCACbA,EAAS,kCACNhwB,cAACkwD,GAAU,CAAAjkC,SAAkB,KAAb,aAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAe,UAAV,UAChBjsB,cAACkwD,GAAU,CAAAjkC,SAA0B,YAArB,sBAEpB69B,eAACsG,GAAkB,CAAC5vD,UAAU,eAAcyrB,SAAA,CACxCjsB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,qBAC7BC,IAAK,yBACLC,IAAG,GAAAC,OAAKC,aAAsB,wCAC9B2vD,QAASvgC,EAAS,gCAEtBhwB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,yBAC7BC,IAAK,6BACLC,IAAG,GAAAC,OAAKC,aAAsB,4CAC9B2vD,QAASvgC,EAAS,oCAG1BhwB,cAAA,MAAAisB,SAAK+D,EAAS,kCACbA,EAAS,kCACNhwB,cAACkwD,GAAU,CAAAjkC,SAAkB,MAAb,aAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAe,UAAV,UAChBjsB,cAACkwD,GAAU,CAAAjkC,SAA0B,YAArB,sBAEpB69B,eAACsG,GAAkB,CAAC5vD,UAAU,eAAcyrB,SAAA,CACxCjsB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,qBAC7BC,IAAK,yBACLC,IAAG,GAAAC,OAAKC,aAAsB,wCAC9B2vD,QAASvgC,EAAS,gCAEtBhwB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,yBAC7BC,IAAK,6BACLC,IAAG,GAAAC,OAAKC,aAAsB,4CAC9B2vD,QAASvgC,EAAS,oCAG1BhwB,cAAA,MAAAisB,SAAK+D,EAAS,kCACbA,EAAS,kCACNhwB,cAACkwD,GAAU,CAAAjkC,SAAiB,MAAZ,YAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAkB,MAAb,aAChBjsB,cAACkwD,GAAU,CAAAjkC,SAAe,UAAV,UAChBjsB,cAACkwD,GAAU,CAAAjkC,SAA0B,YAArB,sBAEpB69B,eAACsG,GAAkB,CAAC5vD,UAAU,eAAcyrB,SAAA,CACxCjsB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,qBAC7BC,IAAK,yBACLC,IAAG,GAAAC,OAAKC,aAAsB,wCAC9B2vD,QAASvgC,EAAS,gCAEtBhwB,cAACswD,GAAgB,CACbhC,eAAgB,CAAE9tD,UAAW,yBAC7BC,IAAK,6BACLC,IAAG,GAAAC,OAAKC,aAAsB,4CAC9B2vD,QAASvgC,EAAS,yCAKlC85B,eAACwC,KAAM,CACH9rD,UAAU,yBACV3B,KAAK,UACLqsD,QAASA,KACLwF,GAAc,IAChBzkC,SAAA,CAED+D,EAAS,sBAAsB,IAAChwB,cAAC8wD,KAAU,W,wVCjMxD,MAAMC,GAAuBzmC,KAAOokC,IAAGlkC,MAEjCjL,IAAA,IAAC,YAAEyxC,GAAazxC,EAAA,OAAKyxC,EAAc,0CAA4C,iCAO/EC,GAAoB3mC,KAAOokC,IAAGtC,MAIvB8E,GAAiB/+B,IAKqE,IALpE,QAC3BzyB,EAAO,qBACP0N,EAAoB,yBACpBE,EAAwB,UACxB9M,GACyF2xB,EACzF,MAAMnC,EAAWQ,KAEjB,OAAOs5B,eAACiH,GAAoB,CACxBvwD,UAAS,oBAAAG,OAA+B,OAATH,QAAS,IAATA,IAAa,IAC5CwwD,eAAgB5jD,IAAwBE,GAA0B2e,SAAA,CAEjE3e,EACKtN,cAACixD,GAAiB,CAAAhlC,SACf3e,EAAyB2B,KAAItP,GAASK,cAAA,OAEnC4kB,MAAO,CAAEusC,gBAAiBxxD,EAAO1C,OAAO,GAAD0D,OAAK,IAAM2M,EAAyBuI,OAAM,OAD5ElW,OAIXyN,EACIpN,cAACixD,GAAiB,CAACrsC,MAAO,CAAEusC,gBAAiB/jD,KAC7C,KACVpN,cAAA,SAAOQ,UAAU,yBAAwByrB,SAAE+D,EAAStwB,S,wrBCrCrD,MAAM0xD,GAAkBpC,aAAGxkC,M,qFCUlC,MAAM6mC,GAA4B/mC,KAAOokC,IAAGlkC,KACtC4mC,IAmBAE,GAAkBA,CAAA/xC,EAQFmtC,KAA4C,IARQ,SACtEpB,EACA3uD,MAAO40D,EAAW,WAClBC,EAAU,SACVvlC,EAAQ,OACRwlC,EAAM,UACNjxD,EAAS,OACToI,GAAS,GACO2W,EAChB,MAAOmJ,EAAOpB,GAAYgiC,oBAAU,GAC9BoI,EAAc7yB,iBAAuB,MACrCzX,EAAeoqC,EAAW37C,OAMhC,OAJAi3C,8BAAoBJ,GAAK,MACrBhkC,MAAOA,KAAA,IAAAipC,EAAA,OAAyB,QAAzBA,EAAMD,EAAYz0B,eAAO,IAAA00B,OAAA,EAAnBA,EAAqBjpC,aAG/BohC,eAACuH,GAAyB,CAC7B7wD,UAAW,CAAC,sDAAuDA,GAAWgN,KAAK,KAAKye,SAAA,CAEvFA,GAAYjsB,cAAA,SAAOQ,UAAU,yCAAwCyrB,SAAEA,IACxEjsB,cAAA,MAAAT,wBAAA,CAAKmtD,IAAKgF,EACNlxD,UAAU,2BACN0mB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAM4V,EAASq0B,EAAW9oC,GACtByU,GACAmuB,EAASnuB,EAAOxgC,WAG1B,IAAAsvB,SAEDulC,EAAWviD,KAAI,CAAAkjB,EAAwC9L,KAAW,IAAlD,MAAE1pB,EAAK,MAAE4nB,EAAK,MAAE3nB,EAAK,aAAEyxD,GAAcl8B,EAClD,MAAM,UAAE3xB,GAAmB,OAAL+jB,QAAK,IAALA,IAAS,GACzBqtC,EAAYhpD,EACZjM,IAAU40D,EACV,GAAA5wD,OAAGhE,KAAK,GAAAgE,OAAU4wD,GAExB,OAAOvxD,cAAC8rD,KAAOvsD,wBAAA,CAAakiD,QAAS,MAAU4M,GAAY,IAAApiC,SACvD69B,eAAA,QAAAvqD,wBAAA,GACQglB,GAAK,IACT/jB,UAAW,CACP,2BACAoxD,EAAY,mCAAqC,GACxC,OAATpxD,QAAS,IAATA,IAAa,GACbkoB,IAAUrC,EAAQ,sBAAwB,IAC5C7Y,KAAK,KACP09C,QAASA,IAAMI,EAAS3uD,GAAOsvB,SAAA,CAE/BjsB,cAAA,QAAMQ,UAAS,oBAAAG,OAAsBixD,EAAY,2BAA6B,IAAK3lC,SAC/EjsB,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOyrB,SAAErvB,UAdZD,SAmB5B80D,MAGII,GAAapF,qBAAW6E,I,+XC3FrC,IAAMQ,GAAiCxnC,KAAOokC,IAAV,MAavBqD,GAAU,WACnB,OAAO,cAAC,KAAD,KAEXA,GAAQC,SAAW,WACf,OAAO,cAACF,GAAD,CAAgCtxD,UAAU,mBAA1C,SACH,cAAC,KAAD,CAAMqkB,KAAK,a,cCenB,MAAMotC,GAAgBA,CAACC,EAA+BzwD,EAAgCjD,KAClF,IAAKiD,EAAO,OAAOywD,EACnB,MAAQl1D,MAAOm1D,EAAWl1D,OAAQm1D,EAAU,EAAEngD,EAAI,EAAC,EAAEC,EAAI,EAAC,KAAEC,GAAS+/C,EAGrE,GAAa,OAAT//C,EAAe,CACf,MAAMkgD,EAAwB,GACxBC,EAAwB,IAAM,KAC5Bt1D,MAAOk6C,EAAYj6C,OAAQk6C,GAAgB11C,EAG7C8wD,EADsBpb,EAAcD,GAAemb,EACjBC,EAAwB,EAC1DE,EAAQ/4C,KAAKoJ,KAAM,OAAD5Q,QAAC,IAADA,IAAK,GAAKsgD,EAAYrb,GACxCub,EAAQh5C,KAAKoJ,KAAM,OAAD3Q,QAAC,IAADA,IAAK,GAAKqgD,EAAYpb,GACxCub,EAAWj5C,KAAKoJ,KAAc,OAATsvC,QAAS,IAATA,IAAa,GAAKI,EAAYrb,GAEzD,MAAO,CACH/kC,KAAM,IACNF,EAAGugD,EAAQtb,EAAa,IACxBhlC,EAAGugD,EAAQtb,EAAc,IACzBn6C,MAAO01D,EAAWxb,EAAa,IAC/Bj6C,OAAQy1D,GAAiB,OAALl0D,QAAK,IAALA,IAAS,GAAK24C,EAAc,IAChD/kC,OAAQ5T,GAIhB,GAAIyT,EAAI,EAAG,OAAA1S,wBAAA,GAAY2yD,GAAI,IAAEjgD,EAAG,IAChC,GAAIC,EAAI,EAAG,OAAA3S,wBAAA,GAAY2yD,GAAI,IAAEhgD,EAAG,IAChC,MAAM,cAAEygD,EAAa,aAAEzT,GAAiBz9C,EAClCzE,EAAiB,OAATm1D,QAAS,IAATA,IAAa,EACrBl1D,EAAmB,OAAVm1D,QAAU,IAAVA,IAAc,EAEvBQ,EAAkF,KAA/DD,EAAgBzT,EAAeyT,EAAgBzT,GAElE2T,EADoBp5C,KAAKC,IAAIzc,EAAS01D,EAAgBn0D,EAAQxB,EAAQkiD,IAAiB0T,EAEvF31D,EACAD,EAAQyE,EAAMy9C,aACV1gD,EACAiD,EAAMkxD,cAGVG,EAAgBD,EAAa,IAC7BE,EAAmBD,EAAgB,EACnC,IACAD,EACAG,EAAkBF,EAAgB,EAClC91D,EAAQ81D,EACR91D,EACA+nC,EAAc+tB,EAAgB,GAC7B,IAAME,GAAmB,EACzB/gD,EAAI,EAAI,EAAIA,EACb+yB,EAAc8tB,EAAgB,GAE7B5gD,EAAI,EADL,EACaA,EAEnB,OAAA3S,wBAAA,GACO2yD,GAAI,IACPjgD,EAAG8yB,EACH7yB,EAAG8yB,EACH/nC,OAAQ81D,EACR/1D,MAAOg2D,EACP5gD,OAAQ5T,KA8BHy0D,GAAexG,sBAA0C,CAAAltC,EAmBrD2zC,KAAkB,IAnBoC,MACnEvzB,EAAK,gBACLwxB,EAAe,UACf3wD,EAAS,SACT2yD,EAAQ,kBACRC,EAAiB,sBACjBC,EAAwB,GAAE,sBAC1BC,EAAwB,GAAE,gBAC1BC,EAAe,SACftnC,EAAQ,cACRunC,EAAa,gBACbC,EAAe,MACfj1D,EAAK,eACLk1D,EAAiBA,SAAS,eAC1BC,EAAiBA,SAAS,aAC1BC,EAAeA,SAAS,UACxBC,EAAYA,SAAS,kBACrBC,EAAoBA,SAAS,iBAC7BC,EAAmBA,UACRx0C,EACX,MAAMy0C,EAAgD,YAAtBZ,EAC1B,UACA,SACApjC,EAAWQ,KACXyjC,EAAep1B,iBAAc,OAE/Bq1B,GAEA5K,mBAAsD,cACnD6K,EAAcC,GAAmB9K,mBAAS,IAC1C+K,EAAYC,GAAiBhL,mBAA+B0K,IAC5DO,EAAWC,GAAgBlL,mBAA+B0K,IAC1DS,EAAgBC,GAAqBpL,mBAAS+J,IAC9CnjC,EAAWykC,GAAcrL,oBAAS,IAClCtwC,EAAO47C,GAAYtL,mBAAc,OACjCuL,EAAYC,GAAiBxL,oBAAS,IACtCyL,EAAgBC,GAAqB1L,mBAASgK,GAC/C2B,EAASp2B,iBAAgC,OACxCqzB,EAAMgD,GAAW5L,mBAAS,CAC7BrsB,QAASw2B,EACT0B,UAAW,QAGRC,EAAYC,GAAe/L,mBAAkC,MAAzBmK,EAAgBthD,OAEvD8qB,QAASq4B,EACTH,UAAWI,GACXrD,EA0BEsD,EAAc32B,iBAAO,CACvB4F,OAAQ,GACRytB,KAAM,OAEJuD,EAAS32B,uBAAa42B,IAMxB,GALAf,GAAW,GACXC,EAAS,MACTlB,IACAuB,EAAOh4B,QAAUy4B,EAEbA,EAAIh1D,MAAQ80D,EAAYv4B,QAAQwH,QAAU+wB,EAAYv4B,QAAQi1B,KAAM,CACpE,MAAMyD,EAAaC,EAAU34B,QAC7ByC,YAAW,KACP,GAAIi2B,IAAeC,EAAU34B,UAAYu4B,EAAYv4B,QAAQi1B,KAAM,OACnE,MAAM2D,EAAiB5D,GAAcuD,EAAYv4B,QAAQi1B,KAAMwD,EAAKl3D,GACpE02D,EAAQ,CACJC,UAAWU,EACX54B,QAAS44B,IAEbR,GAAY,GACZG,EAAYv4B,QAAU,CAClBwH,OAAQ,GACRytB,KAAM,QAEX,UAEHxyB,YAAW,KACPw1B,GAAQtvD,IACJ,MAAMiwD,EAAiB5D,GAAcrsD,EAAIq3B,QAASy4B,EAAKl3D,GAEvD,MAAO,CACH22D,UAAWU,EACX54B,QAAS44B,MAGjBR,GAAY,KACb,OAER,CAAC3B,EAAgBl1D,IAYpBghC,qBAAU,KAAO,IAADs2B,EAAAC,EAAAC,EAAAC,EACZ,MAAMx0D,EAAQwzD,EAAOh4B,QACrB,IAAKs4B,IAAkBhC,IAAoB9xD,EAAO,OAElD,MAAQ2Q,OAAQ5T,GAAU+2D,EAG1BhC,EAAgB3uC,MAAMsxC,UAAY,WAClC,MAAMj0B,EAAMsxB,EAAgBp0B,WAAW,MACvC,IAAK8C,GAAwB,kBAAVzjC,GAAsBA,GAAS,EAAG,OAErD,MAAM,cAAEm0D,EAAa,aAAEzT,GAAiBz9C,EAClC00D,EAAQjX,EAAez9C,EAAMzE,MAC7Bo5D,EAAQzD,EAAgBlxD,EAAMxE,OAC9Bo5D,EAA6B,QAArBP,EAAGP,EAAcpjD,YAAI,IAAA2jD,IAAI,KACjCQ,EAAar6C,OAAOs6C,iBAE1Bt0B,EAAIgI,aAAaqsB,EAAY,EAAG,EAAGA,EAAY,EAAG,GAElD,IAeIE,EAfAC,EAAoBh9C,KAAK2O,OAA0B,QAApB2tC,EAACR,EAAcv4D,aAAK,IAAA+4D,IAAI,IAAmB,OAAbM,EAAoBF,EAAQjX,EAAe,MACxGwX,EAAYj9C,KAAKoJ,IAAIq8B,EAAcuX,GACnCE,EAAqBl9C,KAAK2O,MAAMquC,EAAoBj4D,GACpDo4D,EAAan9C,KAAKoJ,IAAI8vC,EAAegE,GACrCE,EAAkBp9C,KAAKoJ,IACvBq8B,EACAzlC,KAAK2O,OAAsB,QAAhB4tC,EAACT,EAActjD,SAAC,IAAA+jD,IAAI,IAAmB,OAAbK,EAAoBF,EAAQjX,EAAe,OAEhF4X,EAAkBr9C,KAAKoJ,IACvB8vC,EACAl5C,KAAK2O,OAAsB,QAAhB6tC,EAACV,EAAcrjD,SAAC,IAAA+jD,IAAI,IAAmB,OAAbI,EAAoBD,EAAQzD,EAAgB,OAGrF,GADA1wB,EAAI80B,sBAAwB,SACxBL,GAAa,GAAKE,GAAc,GAApC,CAIA,GAEKC,EAAkBH,EAAaxX,GAC5B4X,EAAkBF,EAAcjE,GAEjCkE,EAAkB,GAClBC,EAAkB,GAElBr9C,KAAKC,KAAK+8C,EAAoBC,GAAaA,GAAa,KACxDj9C,KAAKC,KAAKi9C,EAAqBC,GAAcA,GAAc,IAChE,CAOwB,WALAp4D,EAAQm0D,EAAgBzT,EAAe,QAAU,WAMnEwX,EAAYxX,EACZ0X,EAAaF,EAAYl4D,EACzBq4D,EAAkB,EAClBC,GAAmBnE,EAAgBiE,GAAc,EACjDJ,EAAc,CACVrkD,KAAM,IACNC,OAAQ5T,EACRvB,OAAQ25D,EAAajE,EAAgB,IACrC31D,MAAO05D,EAAYxX,EAAe,IAClCjtC,EAAG,EACHC,EAAG4kD,EAAkBnE,EAAgB,OAGzC+D,EAAY/D,EAAgBn0D,EAC5Bo4D,EAAajE,EACbkE,GAAmB3X,EAAewX,GAAa,EAC/CI,EAAkB,EAClBN,EAAc,CACVrkD,KAAM,IACNC,OAAQ5T,EACRvB,OAAQ25D,EAAajE,EAAgB,IACrC31D,MAAO05D,EAAYxX,EAAe,IAClCjtC,EAAG4kD,EAAkB3X,EAAe,IACpChtC,EAAG,IAOf,GAAIihD,EAAU,CAEY,WADA30D,EAAQm0D,EAAgBzT,EAAe,QAAU,WAEnEwX,EAAYxX,EACZ0X,EAAaF,EAAYl4D,IAEzBk4D,EAAY/D,EAAgBn0D,EAC5Bo4D,EAAajE,GAEjBY,EAAgBv2D,MAAQ05D,EACxBnD,EAAgBt2D,OAAS25D,EACzB30B,EAAI5C,UACA59B,EACA,EACA,EACAy9C,EACAyT,EACA,EACA,EACA+D,EACAE,OAED,CAAC,IAADI,EAAAC,EACH1D,EAAgBv2D,MAAkB,QAAbg6D,EAAIN,SAAS,IAAAM,IAAI,EACtCzD,EAAgBt2D,OAAoB,QAAdg6D,EAAIL,SAAU,IAAAK,IAAI,EACxCh1B,EAAI5C,UACA59B,EACAo1D,EACAC,EACAJ,EACAE,EACA,EACA,EACAF,EACAE,GAGW,YAAfvC,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAI5+C,QAAU,GACxDrX,IAAU+2D,EAAcnjD,QAC7BwhD,EAAa2B,EAAelB,EAAYQ,GAExC2B,GACAtB,GAAQtvD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEq3B,QAASu5B,SAGxC,CAACjB,EAAehC,EAAiBY,EAAchB,IAElD3zB,qBAAU,KACNs1B,GAAc,GACdI,GAAQtvD,IACJ,GAAsB,MAAlBqvD,EAAOh4B,SAAmBr3B,EAAIq3B,QAAS,CACvC,MAAMi6B,EAAWjF,GAAcrsD,EAAIq3B,QAASg4B,EAAOh4B,QAASz+B,GAC5D,MAAO,CACHy+B,QAASi6B,EACT/B,UAAW+B,GAGnB,OAAOtxD,OAEZ,CAACpH,IAEJ,MAAMo3D,EAAY/2B,iBAAO,GACzBiuB,8BAAoBoG,GAAc,MAC9BhjC,UAAWA,IAAMA,EACjBinC,SAAUA,IAAiC,kBAAnB1C,GAA+BA,EAAe5+C,OAAS,GAAoB,YAAfw+C,GAClD,kBAAnBU,GAA+BA,EAAel/C,OAAS,GAAoB,WAAfw+C,EAC3E+C,YAAaA,CAACv4D,EAA4B4lC,EAAQ4yB,KAC9C,MAAMC,EAA+B,YAAfjD,EAA2BI,EAAiBM,EAClED,GAAc,GACVwC,IAAkB7yB,IAClBkwB,GAAW,GACXL,EAAcz1D,GACd21D,EAAa31D,GACb80D,EAAe90D,EAAM4lC,GACR,YAAT5lC,EACA61D,EAAkBjwB,GACfuwB,EAAkBvwB,IAE7B4wB,EAA8B,MAAlBgC,EAASllD,MACrByjD,EAAU34B,SAAW,EACrBu4B,EAAYv4B,QAAU,CAClBwH,SACAytB,KAAMmF,GAEVjD,GAAgBxuD,GAAOA,EAAM,SAIrC,MAAMuxD,EAA2B,YAAf9C,IAA2C,OAAdI,QAAc,IAAdA,IAAkB,IAAI5+C,OAAS,GACvD,WAAfw+C,IAA0C,OAAdU,QAAc,IAAdA,IAAkB,IAAIl/C,OAAS,EAC7D0hD,GAAiBhE,GAAmB4D,IAAajnC,IAA0B,OAAbqlC,QAAa,IAAbA,OAAa,EAAbA,EAAev4D,SAAsB,OAAbu4D,QAAa,IAAbA,OAAa,EAAbA,EAAet4D,QAC3G,OACI6sD,eAAA,OAAKtpD,UAAS,sBAAAG,OAAwBH,GAAYyrB,SAAA,CAC9C69B,eAAA,OAAKtpD,UAAU,0BAAyByrB,SAAA,CACnCA,EACD69B,eAAA,OAAKtpD,UAAU,oCAAmCyrB,SAAA,CAC9C69B,eAAA,OAAKtpD,UAAU,gCAA+ByrB,SAAA,CAC1C69B,eAAA,QAAMtpD,UAAU,cAAayrB,SAAA,CACxB0T,EAAM,IAAC3/B,cAACmuD,GAAU,CACfC,KAAMoJ,KACNlJ,eAAgB,CAAE9tD,UAAW+2D,GAAiB,GAAK,YACnDlJ,aAAc,CACV5M,QAAS8V,GACHvnC,EAAS,0BACTA,EAAS,8BAEnBk7B,QAASA,IAAOqM,IAAkBhE,GA7alE,SAA0BxtB,EAAkCmsB,GACnDA,GAASnsB,GACdA,EAAO2iB,QACF9sC,IACG,GAAa,OAATA,EAAe,CACf,MAAM67C,EAAax7C,OAAOC,IAAIC,gBAAgBP,GAExC87C,EAAS77C,SAASC,cAAc,KACtC47C,EAAO37C,SAAW,mBAClB27C,EAAO17C,KAAOE,IAAIC,gBAAgBP,GAClC87C,EAAOp4B,QAEPrjB,OAAOC,IAAI2sC,gBAAgB4O,MAGnC,YACA,GA6Z8EE,CAAiBpE,EAAiBgC,QAGhGzL,eAAC+F,KAAMC,MAAK,CACRtvD,UAAU,+BACV8qD,SAAU51C,IACN,MAAM/Y,EAAQ+Y,EAAEynB,OAAOxgC,MACvB63D,EAAa73D,KAEO,OAAd83D,QAAc,IAAdA,IAAkB,IAAI5+C,OAAS,GAAe,YAAVlZ,IACnB,OAAdo4D,QAAc,IAAdA,IAAkB,IAAIl/C,OAAS,GAAe,WAAVlZ,KAEzC23D,EAAc33D,GACA,YAAVA,EACAg3D,EAAe,UAAWc,GAE1Bd,EAAe,SAAUoB,KAIrCp4D,MAAO43D,EAAUtoC,SAAA,CAEjBjsB,cAAC6vD,KAAMvD,OAAM,CAAC3vD,MAAO,SAAU2yD,QAAuB,WAAdiF,EAAuBtoC,SAC1D+D,EAAS,yCAEdhwB,cAAC8rD,KAAO,CAACnsB,MAAO3/B,cAAA,OAAKQ,UAAU,gBAAeyrB,SACzC+D,EAAS,mCACP/D,SACHjsB,cAAC6vD,KAAMvD,OAAM,CAAC3vD,MAAO,UAAW2yD,QAAuB,YAAdiF,EAAwBtoC,SAC5D+D,EAAS,kDAK1B85B,eAAA,OAAKtpD,UAAW,CAAC,mBAAkC,WAAd+zD,EAAyB,GAAK,kBAAkB/mD,KAAK,KAAKye,SAAA,CAC3FjsB,cAAC43D,KAAK,CACFC,YAAa7nC,EAAS,6BACtBrzB,MAAOo4D,EACPzJ,SA9OG51C,IACvB,MAAM+uB,EAAS/uB,EAAEynB,OAAOxgC,MAExBg4D,GAAW,GACXL,EAAc,UACdE,EAAa,UACbb,EAAe,SAAUlvB,GACzBuwB,EAAkBvwB,IAwOEqzB,UAAW,IACXC,YAAU,GALH,OAOV/3D,cAAA,OAAKQ,UAAU,mBAAkByrB,SAC7B+D,EAAS,iCAGlB85B,eAAA,OAAKtpD,UAAW,CAAC,mBAAkC,YAAd+zD,EAA0B,GAAK,kBAAkB/mD,KAAK,KAAKye,SAAA,CAC5FjsB,cAAC43D,KAAK,CAAClL,IAAKuH,EACRp1D,KAAK,OACLusD,OAAO,UACPE,SA1TI51C,IACxB,GAAIA,EAAEynB,OAAOquB,OAAS91C,EAAEynB,OAAOquB,MAAM31C,OAAS,EAAG,CAC7C,MAAM61C,EAAah2C,EAAEynB,OAAOquB,MAAM,GAC5BwM,EAAc,EAEpB,GAAItM,EAAW7mC,KAAqB,KAAdmzC,EAAqB,KAAM,CAC7CrD,GAAW,GACX,MAAMjgC,EAAS,IAAI81B,WACnB91B,EAAOoL,iBAAiB,QAAQ,KACC,kBAAlBpL,EAAOrb,SACdq7C,EAAkBhgC,EAAOrb,QACzBi7C,EAAc,WACdE,EAAa,WACbb,EAAe,UAAWj/B,EAAOrb,QACjCs7C,GAAW,OAGnBjgC,EAAOujC,cAAcvM,QAErBoI,EAAkBkE,QAEnBE,MAAMloC,EAAS,qCAsSFk7B,QAASA,KAAA,IAAAiN,EAAA,OAA0B,QAA1BA,EAAMlE,EAAah3B,eAAO,IAAAk7B,OAAA,EAApBA,EAAsBC,SAAS,OAElDp4D,cAAA,SACCgwB,EAAS,0CAIrBwjC,EACD1J,eAAA,OAAKtpD,UAAU,eAAesnB,UAAWA,KAErCgtC,GAAc,IAChB7oC,SAAA,CACGiE,GAAalwB,cAAC+xD,GAAQC,SAAQ,IAC7BmF,IAAan+C,GAAU8wC,eAAA,OAAKtpD,UAAU,oBAAmByrB,SAAA,CACvDjsB,cAAA,OACIQ,UAAWwpB,GAAW,gCAAiCmpC,EAAW,gBAAkB,IACpFjI,QAASA,KACL4J,GAAc,GACdf,GAAkBZ,IACpBlnC,SAEFjsB,cAACq4D,KAAkB,OAErBlF,GAAYnzD,cAAA,OAAKQ,UAAU,uCAAuC0qD,QAASA,KACzE4J,GAAc,GACdI,GAAQtvD,IAAQ,IAAD0yD,EACX,MAAM,MAAEt7D,EAAK,EAAEiV,GAAmB,QAAhBqmD,EAAG1yD,EAAIuvD,iBAAS,IAAAmD,IAAI,GAEtC,GAAqB,kBAAVt7D,GAAmC,kBAANiV,EAAgB,OAAOrM,EAC/D,MAAM2yD,EAAuBh5D,wBAAA,GACtBqG,EAAIuvD,WAAS,IAChBljD,GAAI,IAAMjV,GAAS,IAGvB,MAAO,CACHigC,QAASs7B,EACTpD,UAAWoD,OAGrBtsC,SACEjsB,cAACw4D,KAA2B,OAE9BrF,GAAYnzD,cAAA,OAAKQ,UAAU,uCAAuC0qD,QAASA,KACzE4J,GAAc,GACdI,GAAQtvD,IAAQ,IAAD6yD,EACX,MAAM,OAAEx7D,EAAM,EAAEiV,GAAmB,QAAhBumD,EAAG7yD,EAAIuvD,iBAAS,IAAAsD,IAAI,GAEvC,GAAsB,kBAAXx7D,GAAoC,kBAANiV,EAAgB,OAAOtM,EAChE,MAAM2yD,EAAuBh5D,wBAAA,GACtBqG,EAAIuvD,WAAS,IAChBjjD,GAAI,IAAMjV,GAAU,IAGxB,MAAO,CACHggC,QAASs7B,EACTpD,UAAWoD,OAGrBtsC,SACEjsB,cAACw4D,KAA2B,WAGjCrB,GAAYn+C,IAAUhZ,cAAC04D,KAAK,CAACv8B,YAAanM,EAAS,mCAAoCvuB,MAAO,OACjGzB,cAAC24D,KAAS,CACNj4D,IAAoB,YAAf2zD,EAA2BI,EAAiBM,EACjD9K,SAAUkJ,EACV3yD,UAAW2yD,EAAW,eAAiB,GACvCyF,WAAYzH,EACN,CACEA,mBAEF,CACE0H,gBAAgB,QAADl4D,OAAUC,aAAsB,gDAEvDk4D,cAAerD,EACfsD,aAAcA,KAOV,GANAvD,EAAYv4B,QAAU,CAClBwH,OAAQ,GACRytB,KAAM,MAEV0C,EAAS,eACTD,GAAW,GACNpB,EACA,GACe,WAAfc,GAAsD,MAAZ,OAAdU,QAAc,IAAdA,IAAkB,KAC5B,YAAfV,GAAuD,MAAZ,OAAdI,QAAc,IAAdA,IAAkB,IACrD,CACE,MAAM,MAAEz3D,EAAK,OAAEC,GAAWs2D,EACpBtxB,EAAMsxB,EAAgBp0B,WAAW,MAEpC,OAAH8C,QAAG,IAAHA,KAAKuB,UAAU,EAAG,EAAGxmC,EAAOC,GACxBs4D,GAAe3B,EAAa2B,EAAelB,EAAYQ,GAC3DnB,SAEAG,SAZkBA,KAgB1B3B,KAAMoD,EACN0D,YAAaA,KACTlE,GAAc,IAElBxJ,SAAUA,CAAC2N,EAAeC,KACtB,MAAMz3D,EAAQwzD,EAAOh4B,QACjBu4B,EAAYv4B,QAAQi1B,OACnBkD,EASDF,GAAQtvD,GACJrG,wBAAA,GACOqG,GAAG,IACNq3B,QAASg1B,GAAciH,EAAiBz3D,EAAOjD,QAXvD62D,GAAY,GACZH,GAAQtvD,GACJrG,wBAAA,GACOqG,GAAG,IACNq3B,QAASg1B,GAAcgH,EAAex3D,EAAOjD,UAY7D26D,WAAYA,CAACnZ,EAAGoZ,KACP5D,EAAYv4B,QAAQi1B,MAAMgD,GAAQtvD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEuvD,UAAWiE,OAExEC,cAAc,EACdnF,YAAaA,GAAY,GAAAvzD,OA/DV0zD,EAAU,KAAA1zD,OAAIy0D,EAAU,KAAAz0D,OAAIwzD,a,69FCliB/D,MAAMmF,GAAwBhvC,KAAOokC,IAAGlkC,MA0F3B+uC,GAAkBh6C,IAKP,IALQ,OAC5B2P,EAAM,aACNsqC,EAAe,GAAE,SACjBlO,EAAWA,SAAQ,eACnBmO,GACcl6C,EACd,MAAOm6C,EAAcC,GAAmBrQ,mBAASkQ,GAC3CxpC,EAAWQ,KAEXopC,EAAsB7hD,KAAKmmB,UAAUw7B,GAM3C,OALAl6B,qBAAU,KACN8rB,EAASoO,KAEV,CAACE,IAEG9P,eAACwP,GAAqB,CAAC94D,UAAWwpB,GAAW,sBAAuBkF,EAAS,iBAAmB,oBAAoBjD,SAAA,CACvHjsB,cAAA,OAAKQ,UAAU,QAAOyrB,SAClBjsB,cAACqvD,KAAQ,CACLC,QAASpgC,EACTo8B,SAAU51C,GAAK+jD,EAAe/jD,EAAEynB,OAAOmyB,SAASrjC,SAClD+D,EAAS,yBAEfhwB,cAAA,OAAKQ,UAAU,YAAWyrB,SACrB,IAAI7U,MAAM,IAAInI,KAAI,CAAC+wC,EAAG35B,KACnB,MAAMwzC,EAAe,GAAAl5D,OAAM0lB,EAAQ,GAEnC,MAAwB,MAApBwzC,EAAgC75D,cAAC8rD,KAAO,CAExCrK,QAASvyB,EAASc,EAAS,6BAA+B,KAAK/D,SAE/DjsB,cAAA,OAAKQ,UAAU,oBAAoB0qD,QAASA,KACpCh8B,GAAQyqC,EAAgB,KAC9B1tC,SACEjsB,cAACC,IAAmB,OANpB,KAUDD,cAAA,OACHQ,UAAS,6BAAAG,OAA+B0lB,EAAQ,EAAC,KAAA1lB,OAAI+4D,EAAalkD,SAASqkD,GAAmB,iBAAmB,IACjH3O,QAASA,KACDh8B,GAAQyqC,GAAgB/zD,IACxB,IAAIk0D,EAAS,IAAIl0D,GAKjB,OAHIk0D,EAAOtkD,SAASqkD,GAAkBC,EAASA,EAAO50C,QAAOhW,GAASA,IAAU2qD,IAC3EC,EAAOxqB,KAAKuqB,GAEVC,MAEb7tC,SAEFjsB,cAAA,OACIQ,UAAS,qCAAAG,OAAuC0lB,EAAQ,GACxDzB,MAAO,CAAEsxC,UAAU,UAADv1D,OAAYkN,GAAewY,GAAM,6BAf1CwzC,Y,kxCCnI1B,MAAME,GAAiBx1C,GACnBvkB,cAACmtD,GAAa,CAAC37B,SAAUxxB,cAAA+pD,WAAA,IAAM99B,SAClCjsB,cAACg6D,KAAMz6D,YAAA,GAAKglB,MAIP01C,GAAkB3vC,KAAOokC,IAAGlkC,MAiB5B0vC,GAAuB5vC,KAAOokC,IAAGtC,MAuBjC+N,GAAiB,CAC1BC,UATmC9vC,KAAOokC,IAAGnC,MAU7C8N,OAAQH,I,86CCzCZ,MAAMI,GAAwBhwC,KAAOokC,IAAGlkC,KAClCH,IAgCAkwC,GAA2BjwC,aAAOD,GAAPC,CAA8B8hC,MAuBzDoO,GAAqBj7C,IAGA,IAHC,KACxB+R,EAAI,SACJrF,GACiB1M,EACjB,MAAOk7C,EAAkBC,GAAmBpR,oBAAS,GASrD,OAAOQ,eAACyQ,GAAwB,CAC5BrP,QAASx1C,IATkBilD,MAUvBjlD,EAAE2R,kBAVqBszC,EAWDrpC,EAV1BspC,KAAKD,GACLD,GAAgB,GAChBh7B,YAAW,KACPg7B,GAAgB,KACjB,MAODzuC,SAAA,CAEDwuC,EAAmBz6D,cAAA,OAAKQ,UAAU,mBAAkByrB,SAACjsB,cAAC66D,KAAa,MAAY,KAC/E5uC,MAKI6uC,GAAyB9qC,GAAqC,CACvE,CACIpzB,MAAOozB,EAAS,qCAChBrzB,MAAO,YACPo+D,UAAW7hD,IAEf,CACItc,MAAOozB,EAAS,iCAChBrzB,MAAO,QACPo+D,UAAWj8C,KAiBNk8C,GAAcvO,sBAAW,CAAAt6B,EAMtBu6B,KAA6C,IANtB,cACnClX,EAAa,oBACbylB,EAAmB,kBACnBC,EAAiB,YACjB39B,EAAW,QACXszB,GACU1+B,EACV,MAAOwG,EAAS0wB,GAAcC,oBAAS,IAChC6R,EAAMC,GAAW9R,mBAAqB,cACtC+R,EAAkBC,GAAuBhS,mBAAiF,CAC7HiS,MAAO,CAAE39D,KAAM,GAAI0zB,KAAM,GAAIlY,WAAW,GACxCoiD,UAAW,CAAE59D,KAAM,GAAI0zB,KAAM,GAAIlY,WAAW,KAE1C4W,EAAWQ,KACXirC,EAAU,mBACVC,EAAa58B,uBAAY,KAC3B,MAAM3B,EAASthB,SAAS0kB,eAAek7B,GACnCt+B,IACAA,EAAOzU,QACPyU,EAAOw+B,YAEZ,IAUH7O,8BAAoBJ,GAAK,MACrBkP,YAAa,SAAC1mD,GAAkC,IAAtB2mD,IAASjlD,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,KAAAA,UAAA,GAC3BilD,GAAWxS,GAAW,GAC1BiS,EAAoBR,GAAsB9qC,GACrC/gB,KAAIojB,IAA2B,IAA1B,MAAE11B,EAAK,UAAEo+D,GAAW1oC,EACtB,IACI,MAAM,UACFjZ,EAAS,OACTC,GACA0hD,EAAU7lD,EAAMsgC,GAEpB,MAAO,CACH74C,QACAyc,YACAxb,KAAMyd,GAAkBnG,EAAKtX,MAC7B0zB,KAAK,GAAD3wB,OAAKoX,KAAKmmB,UAAU7kB,KAE9B,MAAO3D,GAOL,OANAqD,QAAQC,MAAMtD,GACdumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,wBAClBmM,YAAanM,EAAS,8BAGnB,CACHrzB,QACAyc,WAAW,EACXxb,KAAM,UACN0zB,KAAM,QAIjB5rB,QAA+E,CAACm6C,EAAI1sB,KAAwC,IAAtC,KAAE7B,EAAI,UAAElY,EAAS,MAAEzc,EAAK,KAAEiB,GAAMu1B,EAGnH,OAFA0sB,EAAKljD,GAAS,CAAEiB,OAAM0zB,OAAMlY,aAErBymC,IACVtgD,YAAA,GAAO87D,UAKpB77B,qBAAU,KACNE,YAAW,KACH/G,GAAoB,cAATwiC,GAAsBO,MACtC,OACJ,CAACP,EAAMO,EAAY/iC,IAEtB,MAAM,KACFrH,EAAI,UACJlY,EAAS,KACTxb,GACAy9D,EAAiBF,GACrB,OAAOrR,eAAAC,WAAA,CAAA99B,SAAA,CACHjsB,cAACmpD,KAAK,CACFxwB,QAASA,EACTgH,MAAO3P,EAAS,6BAChBxvB,UAAU,iBACVgnB,SAAUA,KACN6hC,GAAW,GACXwH,KAEJ1G,WAAYn6B,EAAS,0BACrBg6B,cAAe,CACXplC,MAAO,CAAEk3C,QAAS,SAEtBC,gBAAgB,EAAM9vC,SAEtB69B,eAACwQ,GAAqB,CAAAruC,SAAA,CAClBjsB,cAAC6xD,GAAU,CACPL,WAAYsJ,GAAsB9qC,GAClCs7B,SAAU6P,GAAQC,EAAQD,GAC1Bx+D,MAAOw+D,IAEA,UAATA,GAAoB/hD,GAAc0wC,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CAC9DjsB,cAAA,KAAAisB,SAAI+D,EAAS,oCACbhwB,cAAA,SACCgwB,EAAS,yCAEd85B,eAAA,OAAKtpD,UAAU,0BAAyByrB,SAAA,CACpCjsB,cAACqqB,GAAsB,CACnB6gC,QAASA,KACL,MAAMtvC,EAAO,IAAIgvC,KAAK,CAACt5B,GAAO,CAAEzyB,KAAM,qBACtC8c,GACIN,GAAkBzd,GAClBge,EACA,qBAENqQ,SAED+D,EAAS,+CAEH,cAATmrC,IAAyB/hD,GAAcpZ,cAAC43D,KAAMoE,SAAQ,CACpDtnD,GAAI+mD,EACJj7D,UAAU,mBACVqkB,KAAK,QACLloB,MAAO0+D,EAAiBG,UAAUlqC,OAE3B,cAAT6pC,IAAyB/hD,GAAcpZ,cAACw6D,GAAkB,CACxDlpC,KAAM+pC,EAAiBG,UAAUlqC,KAAKrF,SAErC+D,EAAS,4CAEF,UAATmrC,GACU,cAATA,GAAwB/hD,IAAepZ,cAAA,OAAKQ,UAAU,eAAcyrB,SACnE+D,EAAS,2CAEdhwB,cAACqqB,GAAsB,CAAC6gC,QAASgQ,EAAkBjvC,SAC9C+D,EAAS,mDAK1BhwB,cAAC8rD,KAAO,CAACrK,QAASlkB,EAAcv9B,cAAA+pD,WAAA,CAAA99B,SAAE,sBAAkB,KAAKA,SACrDjsB,cAAA,UAAQQ,UAAU,+BAA+B0qD,QAASA,KACtD+P,IACA5R,GAAW,IACbp9B,SACG+D,EAAS,2BAGlBhwB,cAAC+sD,KAAQ,CACLtL,QAASzhD,cAACisD,KAAI,CAACf,QAASx1C,GAAKA,EAAEu3C,SAAS5lC,kBAAkB4E,SACrD6uC,GAAsB9qC,GAAU/gB,KAAI,CAAAskB,EAAuBlN,KAAW,IAAjC,UAAE00C,EAAS,MAAEn+D,GAAO22B,EACtD,OAAOvzB,cAACisD,KAAKC,KAAI,CACbhB,QAASA,KACL,IACI,MAAMh2C,EAAOsnB,GAAQ9L,WAAWxb,MAC1B,OACFmE,GACA0hD,EAAU7lD,EAAMsgC,GA1IzBymB,EAACr+D,EAAcs+D,KAClC,MAAMtgD,EAAO,IAAIgvC,KAAK,CAACsR,GAAU,CAAEr9D,KAAM,qBACzC8c,GACIN,GAAkBzd,GAClBge,EACA,qBAuIoBqgD,CACI5gD,GAAkBnG,EAAKtX,MAAM,GAAD+C,OACzBoX,KAAKmmB,UAAU7kB,KAExB,MAAO3D,GACLqD,QAAQC,MAAMtD,GACdumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,wBAClBmM,YAAanM,EAAS,gCAGhC/D,SAEDrvB,GAAK,GAAA+D,OArBgB0lB,SAwB1B4F,SAERjsB,cAACqqB,GAAsB,CAAC7pB,UAAU,iCAAgCyrB,SAC9DjsB,cAACw3D,KAAgB,c,4kCCjSjC,MAAM2E,GAAwB7xC,KAAOokC,IAAGlkC,KAc9BH,IA0BG+xC,GAAc3P,sBAAwC,CAAAltC,EAKhEmtC,KAAS,IALwD,YAChEnvB,EAAW,SACXvN,EAAQ,SACRqsC,EAAQ,QACRxL,GACHtxC,EACG,MAAM+8C,EAAiB,uBACjBC,EAAW,gBACXd,EAAU,kBACVe,EAAgC39B,iBAAyB,MACzD49B,EAA0B59B,iBAAyB,OAClD69B,EAAUC,GAAerT,mBAAS,IAClC6R,EAAMC,GAAW9R,mBAAsC,YACvD3wB,EAAS0wB,GAAcC,oBAAS,IAChCsT,EAASjI,GAAcrL,oBAAS,GACjCoS,EAAa58B,uBAAY,KAC3B,MAAM3B,EAASthB,SAAS0kB,eAAek7B,GACnCt+B,IACAA,EAAOzU,QACPyU,EAAOw+B,YAEZ,IAEHn8B,qBAAU,KACNE,YAAW,KACH/G,GAAS+iC,MACd,OACJ,CAACA,EAAY/iC,IAEhBm0B,8BAAoBJ,GAAK,MACrBmQ,cAAe1B,IACXC,EAAQD,GACR9R,GAAW,QAInB,MAAMyT,EAAUA,KACZH,GAAY/2D,GAAOA,EAAM,IACzByjD,GAAW,GACXsL,GAAW,GACX9D,KAEEkM,EAAcx2C,eAChB+U,GAEE,IADF0hC,EAAWpmD,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAEX,IACI,GAAI0kB,EAAU,CACV,MACIpmB,KAAMqmB,EAAW,UACjBniB,GACAiiB,GACAC,EACS,YAAT6/B,OAAqBtkD,EAAY2lB,GAAQ9L,WAAWxb,MAgBxD,GAbIkE,GACA6iB,KAAarU,KAAK,CACdsU,QAASlM,EAAS,kCAClBmM,YAAanM,EAAS,wCAU1BgtC,GAAyC,WAA1BzhC,EAAYxpB,WAA0ByJ,GAAkB+f,EAAYr1B,KAAM,CACzF,MAAM+2D,EAAyB19D,YAAA,GAAQg8B,GACvC,IACI,MAAM2hC,QAAsB52C,GAAciV,EAAYr1B,KACtD,GAA6B,MAAzBg3D,EAAc9jC,OAEd,MADA6jC,EAAoB/2D,IAAM,kCACpB,IAAIupB,MAAM,0BAA4BytC,EAAc9jC,QAE9D,MAAM+jC,QAAsDD,EAAc1tC,OAE1EytC,EAAoB/2D,IAAMi3D,EAAkB7rC,KAAK7V,KACnD,MAAO/F,GAELqD,QAAQC,MAAM,gBAAiBtD,GAC/BumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,+BAClBmM,YAAanM,EAAS,qCAG9BqsC,EAASY,EAAqB,CAC1BtgC,kBAAkB,EAClBygC,mBAA6B,QAATjC,EACpBkC,UAAoB,QAATlC,SAGfkB,EAAS9gC,EAAa,CAClBoB,kBAAkB,EAClBygC,mBAA6B,QAATjC,EACpBkC,UAAoB,QAATlC,KAIzB,MAAOzlD,GACLqD,QAAQC,MAAM,gBAAiBtD,GAC/BumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,8BAClBmM,YAAanM,EAAS,sCAI5BstC,EAAoB3T,IACtB,GAAIA,EACA,IAAK,IAAInyB,EAAM,EAAGA,GAAOmyB,EAAS9zC,OAAQ2hB,IAAO,CAC7C,MAAMk0B,EAAa/B,EAASgC,KAAKn0B,GACjC,IAAKk0B,EAAY,SAEjB,MAAMh3B,EAAS,IAAI81B,WACnB91B,EAAOk0B,OAASz2B,IAAiB,IAAhB,OAAEgL,GAAQhL,EACvB,IAAKgL,EAAQ,OAEb,MAAM,OAAE9jB,GAAW8jB,EACG,kBAAX9jB,GACX0jD,EAAY1jD,IAEhBqb,EAAOm2B,WAAWa,GAClB,QAIN6R,EAAeh3C,UACjB,IACI,MAAM4W,EAASthB,SAAS0kB,eAAek7B,GACvC,GAAIt+B,EAAQ,CAAC,IAADqgC,EACR,MAAM,MAAE7gE,GAAUwgC,EACZ1L,EAA8B,QAAf+rC,EAAG7gE,EAAMo4B,cAAM,IAAAyoC,IAAI,GACxC,IAAIC,EAAiB,GACrB,IACIA,EAAiBhoD,GAAYwC,mBAAmBwZ,IAClD,MAAO/b,IACT,IAAI4lB,EAAgD,KAGpD,GAAI7J,EAAgB/V,WAAW,MAAQ+V,EAAgBisC,SAAS,KAC5DpiC,EAAW7J,OAGV,GAAIgsC,EAAe/hD,WAAW,MAAQ+hD,EAAeC,SAAS,KAC/DpiC,EAAWvjB,KAAKC,MAAMylD,OAErB,CAAC,IAADE,EACD,MAAMC,EAAgBnsC,EAAgB/V,WAAW,iCAE3C+V,EACF,uDAAA9wB,OACyD8wB,EAAe,6BAC5EkjC,GAAW,GACX,MAAMrlC,QAAiBxI,MAAM82C,GAC7B,IAAKtuC,EAASuuC,GACV,MAAM,IAAIpuC,MAAM,oBAAD9uB,OAAqB2uB,EAAS8J,SAGjD,MAAM0kC,QAAiDxuC,EAASE,OAEhE8L,EAAqG,QAA7FqiC,EAAGG,EAAaxsC,KAAKwI,MAAKzH,IAAA,IAAC,KAAEz0B,GAAMy0B,EAAA,OAAKz0B,EAAKmzB,gBAAkBU,EAAgBV,wBAAc,IAAA4sC,IAC9FG,EAAaxsC,KAAKsG,MAAK,CAACpB,EAAGzgB,KAAO,IAADgoD,EAAAC,EAChC,MAAMC,EAAmB,QAAdF,EAAGvnC,EAAE0nC,iBAAS,IAAAH,OAAA,EAAXA,EAAc,GACtBI,EAAmB,QAAdH,EAAGjoD,EAAEmoD,iBAAS,IAAAF,OAAA,EAAXA,EAAc,GAE5B,IAAKC,IAAUE,EAAO,OAAO,EAI7B,OADuBF,EAAMG,UAAY,IAAMD,EAAMC,UAAY,GAC7C,EAAUD,EAAMC,UAAYH,EAAMG,UAE/CD,EAAME,MAAQJ,EAAMI,SAC5B,SAGLtB,EAAYzhC,GAAU,IAElC,MAAO5lB,GACLqD,QAAQC,MAAM,gBAAiBtD,GAC/BumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,8BAClBmM,YAAanM,EAAS,oCAE7B,QACG8sC,MAIR,OAAOhT,eAAAC,WAAA,CAAA99B,SAAA,CACHjsB,cAACmpD,KAAK,CACFxwB,QAASA,EACTgH,MAAgB,UAATw7B,EACDnrC,EAAS,6BACTA,EAAS,uBACfxvB,UAAU,iBACVgnB,SAAUs1C,EACV5S,OAAQl6B,EAAS,0BACjBsuC,eAAgB1B,EAChB2B,kBAAmB,CACf35C,MAAO,CAAEk3C,QAAS,SAEtBC,gBAAgB,EAChB3R,KAAMmT,EAAatxC,SAEnB69B,eAACqS,GAAqB,CAAAlwC,SAAA,CACR,UAATkvC,EACKrR,eAAA,OAAKtpD,UAAU,eAAcyrB,SAAA,CAC1B+D,EAAS,oCACVhwB,cAAA,SACCgwB,EAAS,oCACVhwB,cAAA,SACAA,cAAA,QAAMQ,UAAU,QAAOyrB,SAAE+D,EAAS,+CAEpC,KACNhwB,cAAA,OAAKQ,UAAU,yBAAwByrB,SACnCjsB,cAAC43D,KAAMoE,SAAQ,CACXtnD,GAAI+mD,EACJj7D,UAAU,mBACVqkB,KAAK,QACLgzC,YAAa7nC,EAAS,yBACtBi6B,SAAU2S,EACV4B,aAAcjB,EACdkB,KAAM,GAAE,SAAA99D,OAPkB+7D,MAUxB,UAATvB,EACKrR,eAAA,OAAKtpD,UAAU,0BAAyByrB,SAAA,CACtCjsB,cAAA,QAAAisB,SAAO+D,EAAS,qCAChB85B,eAACz/B,GAAsB,CACnB7pB,UAAU,gBACV0qD,QAASA,KACL,MAAM/tB,EAASthB,SAAS0kB,eAAeg8B,GACnCp/B,GACAA,EAAOmC,SAEbrT,SAAA,CAEFjsB,cAAA,SAAsC0sD,IAAK+P,EACvC59D,KAAK,OACL6V,GAAI6nD,EACJnR,OAAO,mBACP5qD,UAAU,sBACV8qD,SAAUA,KAAO,IAADoT,EACZ,MAAM/U,EAA0C,QAAlC+U,EAAGjC,EAAwBx/B,eAAO,IAAAyhC,OAAA,EAA/BA,EAAiClT,MAElD8R,EAAiB3T,GACjBmT,MACF,cAAAn8D,OAVoB+7D,IAYzB1sC,EAAS,+BAGhB,UAGdhwB,cAAC8rD,KAAO,CACJrK,QAASlkB,EACHusB,eAAA,OAAKtpD,UAAU,SAAQyrB,SAAA,CACrBjsB,cAAA,OAAAisB,SAAK,sBACL69B,eAAA,OAAA79B,SAAA,CAAK,oBAAa+D,EAAS,qCAE7B,KAAK/D,SAEXjsB,cAAA,UACIQ,UAAU,+BACV0qD,QAASA,KACLkQ,EAAQ,WACR/R,GAAW,IACbp9B,SAED+D,EAAS,2BAGlBhwB,cAAC8rD,KAAO,CAACrK,QAASzxB,EAAS,yBAAyB/D,SAChD69B,eAACz/B,GAAsB,CACnB7pB,UAAU,iCACV0qD,QAASA,KACL,MAAM/tB,EAASthB,SAAS0kB,eAAe+7B,GACnCn/B,GACAA,EAAOmC,SAEbrT,SAAA,CAEFjsB,cAAA,SAA6C0sD,IAAK8P,EAC9C39D,KAAK,OACL6V,GAAI4nD,EACJlR,OAAO,mBACP5qD,UAAU,sBACV8qD,SAAUA,KAAO,IAADqT,EACZ,MAAMhV,EAAgD,QAAxCgV,EAAGnC,EAA8Bv/B,eAAO,IAAA0hC,OAAA,EAArCA,EAAuCnT,MAExD8R,EAAiB3T,GACjBmT,MACF,qBAAAn8D,OAV2B+7D,IAYjC18D,cAAC4+D,KAAc,eCxUlBC,ID8U8Bv0C,aAAO2hC,KAAP3hC,CAAY8hC,MC9UvB,CAC5B,CACIxvD,MAAO,MACPD,MAAO,MACP4nB,MAAO,CACH/jB,UAAW,aACXokB,MAAO,CAAEk6C,WAAY,UAG7B,CACIliE,MAAO,MACPD,MAAO,MACP4nB,MAAO,CACH/jB,UAAW,aACXokB,MAAO,CAAEk6C,WAAY,YAkBpBC,GAAmBj+D,OAAOC,OAAOgF,GAAWkJ,KAAIkjB,IAAA,IAAC,MAAEx1B,EAAK,MAAEC,GAAOu1B,EAAA,MAAM,CAChFv1B,QACAD,YAQSqiE,GAAsB,CAC/B,CAAEriE,MAAO,SAAUC,MAAOoD,cAACC,IAAmB,QAC3Ca,OAAOC,OAAOkF,GAAcgJ,KAAIkkB,IAAA,IAAC,MAAEx2B,EAAK,MAAEC,GAAOu2B,EAAA,MAAM,CACtDv2B,QACAD,aAIKsiE,GAAqBA,IAAMxxD,GAAUwB,KAAIskB,IAAA,IAAC,KAAE31B,EAAI,QAAE8B,EAAO,qBAAE0N,EAAoB,yBAAEE,EAAwB,QAAEH,GAASomB,EAAA,MAAM,CACnI32B,MAAOoD,cAACkxD,GAAc,CAClB9jD,qBAAsBA,EACtBE,yBAA0BA,EAC1B5N,QAASA,IAEb/C,MAAOiB,EACPuP,cA8BS+xD,GAAiB,IAAI9nD,MAAM,KAAKnI,KAAI,CAAC+wC,EAAG35B,KAAK,CAAQzpB,MAAOypB,EAAO1pB,MAAO0pB,MAE1E84C,GAAoBh/D,EAAY8O,KAAImrB,IAAA,IAAC,MAAEz9B,GAAOy9B,EAAA,MAAM,CAC7Dx9B,MAAOD,IAAUuD,EACXF,cAACC,IAAmB,IACpBD,cAAA,OAAKS,IAAK9D,EAAO+D,IAAG,GAAAC,OAAKC,aAAsB,iCAAAD,OAAgChE,EAAMo0B,cAAa,UACxGp0B,YAGSyiE,GAA8Bt+D,OACtCgM,QpEmL2F,CAC5FnE,WAAY,CACR/L,MAAO,IACPqyB,MAAO,GAEXrmB,OAAQ,CACJhM,MAAO,IACPqyB,MAAO,GAEXpmB,MAAO,CACHjM,MAAO,IACPqyB,MAAO,GAEXnmB,UAAW,CACPlM,MAAO,IACPqyB,MAAO,GAEXlmB,QAAS,CACLnM,MAAO,IACPqyB,MAAO,KoErMVhgB,KAAI4rB,IAA8B,IAA5Br5B,GAAK,MAAE5E,EAAK,MAAEqyB,IAAQ4L,EACzB,MAAO,CACHj+B,QACAD,MAAO6E,EACPytB,YAGP2I,MAAK,CAACpB,EAAGzgB,IAAMygB,EAAEvH,MAAQlZ,EAAEkZ,Q,6sDChFhC,MAAMowC,GAA4B/0C,KAAOokC,IAAGlkC,MA8D/B80C,GAAa//C,IAGP,IAHQ,SACvBggD,EAAW,GAAE,OACbC,EAASA,UACAjgD,EACT,MAAMyQ,EAAWQ,KAEXivC,EAAkB/4B,IACpB,MAAMg5B,EAAc7jD,SAAS0kB,eAAeg/B,GAC5C,GAAIG,EAAa,CACb,MAAM,MAAE/iE,GA5Gb,SAAwBwgC,EAA6BwiC,GAExD,GAAK9jD,SAAiB+jD,UAKlB,OAJAziC,EAAOzU,QACM7M,SAAiB+jD,UAAUC,cACpCliE,KAAOgiE,EAEJ,CACHhjE,MAAOwgC,EAAOxgC,MACdmjE,SAAU,GAIb,GAAI3iC,EAAO4iC,gBAA4C,IAA1B5iC,EAAO4iC,eAAsB,CAC3D,MAAMC,EAAW7iC,EAAO4iC,eAClBE,EAAS9iC,EAAO+iC,aAQtB,OAPA/iC,EAAOxgC,MAAQwgC,EAAOxgC,MAAMiZ,UAAU,EAAGoqD,GACnCL,EACAxiC,EAAOxgC,MAAMiZ,UAAUqqD,EAAQ9iC,EAAOxgC,MAAMkZ,QAClDsnB,EAAO4iC,eAAiBC,EAAWL,EAAQ9pD,OAC3CsnB,EAAO+iC,aAAeF,EAAWL,EAAQ9pD,OACzCsnB,EAAOzU,QAEA,CACH/rB,MAAOwgC,EAAOxgC,MACdmjE,SAAUE,EAAWL,EAAQ9pD,QAKjC,OAFAsnB,EAAOxgC,OAASgjE,EAET,CACHhjE,MAAOwgC,EAAOxgC,MACdmjE,SAAU,GA4EQK,CAAeT,EAAah5B,GAE9C84B,EAAO7iE,EAAO+pC,KAmBtB,OAAOojB,eAACuV,GAAyB,CAAC33C,UAAW,EAAGlnB,UAAU,wBAAuByrB,SAAA,CAC5EjsB,cAAA,OAAK0U,GAAI,cAAelU,UAAU,cAAayrB,SAI3C,CACG,SACA,SACA,SACA,OACA,SACA,SACA,SACA,UACFhd,KAAIC,GACKlP,cAAA,UACH0nB,UAAW,EACXlnB,UAAU,UACV0qD,QAASA,IAAMuU,EAAevwD,GAAO+c,SACvC/c,GAJkBA,OAO5BlP,cAAA,OAAKQ,UAAU,wBAAuByrB,SAClCjsB,cAAC4tD,GAAW,CACRta,QAASwW,eAAAC,WAAA,CAAA99B,SAAA,CACJ+D,EAAS,kCACV85B,eAAA,MAAA79B,SAAA,CACIjsB,cAAA,MAAAisB,SAAK+D,EAAS,2CACdhwB,cAAA,MAAAisB,SAAK+D,EAAS,yD,yDC9ItC,MAAMowC,GAAqB3T,sBAAW,CAAAltC,EAMfmtC,KAA8C,IAN9B,SACnCzC,EAAQ,MACRtqD,EAAK,SACL0gE,EAAQ,eACRC,EAAc,SACdC,GACiBhhD,EACjB,MAAMyQ,EAAWQ,MACVgwC,EAAeC,GAAoBnX,mBAAS3pD,IAC5C+gE,EAAgBC,GAAqBrX,mBAAS,IAC9CqM,EAAYiL,GAAiBtX,oBAAU,GACxCuX,EAAoBhiC,iBAAOxC,KAASskC,EAAmB,MAAM1jC,QAwBnE,OAtBA6vB,8BAAoBJ,GAAK,MACrBoU,SAAUC,IACN,GAAIA,EAAW,CACX,MAAM,MAAEphE,EAAK,OAAEwmB,EAAM,GAAEzR,GAAOqsD,GACxB,IAAEl+C,EAAG,IAAEC,EAAG,MAAEqvB,GAAU14B,KAE5BgnD,EAAiB9gE,GACjBghE,EAAkB79C,EAAI,EAAGD,EAAI,IAAKsvB,EAA2B,IAArBptB,WAAWoB,OACnDy6C,EAAclsD,KAGtBssD,iBAAkBA,CAACtsD,EAAIyR,KACnB,MAAM,IAAEtD,EAAG,IAAEC,EAAG,MAAEqvB,GAAU14B,KAExB/E,IAAOihD,GAAYgL,EAAkB79C,EAAI,EAAGD,EAAI,IAAKsvB,EAA2B,IAArBptB,WAAWoB,YAIlFqZ,qBAAU,KACFm2B,EAAa,IAAiB,OAAd2K,QAAc,IAAdA,KAAiB3K,EAAW,GAADh1D,OAAK+/D,EAAiB,SACtE,CAAC/K,EAAY+K,EAAgBJ,IAEzBxW,eAAA,OAAKtpD,UAAU,2BAA0ByrB,SAAA,CAC5C69B,eAAA,OAAKtpD,UAAU,0BAAyByrB,SAAA,CACpC69B,eAAA,OAAA79B,SAAA,CACK+D,EAAS,8CAA8C,KAAEhwB,cAACihE,KAAW,CAClEtkE,MAAO+jE,EACP77C,KAAK,QACL/B,IAAK,IAAKD,IAAK,EACfyoC,SAAU3uD,GAASkkE,EAAmC,kBAAVlkE,EAAqBysB,SAASzsB,GAAc,OAALA,QAAK,IAALA,IAAS,QAGpGqD,cAACssD,KAAM,CAAC9rD,UAAU,oBAAoBqkB,KAAK,QAAQolC,SAAUA,EAAUiB,QAASA,IAAc,OAARqV,QAAQ,IAARA,OAAQ,EAARA,EAAW5K,GAAY1pC,SACxG+D,EAAS,qDAGlBhwB,cAACkhE,KAAY,CACTC,OAAQ,CACJC,QAAS,CACLC,OAAQ,CACJ1hE,MAAO,UACP2S,WAAY,sBACZgvD,UAAW,QAEf7jE,KAAM,CACF8jE,QAAS,mCAIrBC,cAAc,EACd7hE,MAAO6gE,EACPlV,SAAU3rD,GAAS8gE,EAAiB9gE,EAAMkpB,KAC1C44C,iBAAkB9hE,IACd8gE,EAAiB9gE,EAAMkpB,KACf,OAARw3C,QAAQ,IAARA,KAAW1gE,EAAMkpB,cAO3B64C,GAAkBC,IACb,CACHC,UAAWD,EACXE,IAAK57C,GAAiB07C,KAQjBG,GAAqB3vC,IAIP,IAAD4vC,EAAAC,EAAA,IAHtB97C,QAAS+7C,EAAkBh8C,GAAiBF,MAC5Cm8C,MAAOC,EAAgB,IAAG,iBAC1BC,GACiBjwC,EACjB,MAAMnC,EAAWQ,KACX6xC,EAAYxjC,iBAA8B,OACzCqjC,EAAOI,GAAYhZ,mBAAS6Y,IAC5Bj8C,EAASq8C,GAAcjZ,oBAAS,KAAO,IAADkZ,EAAAC,EACzC,MAAMC,EAAgB18C,GAAai8C,GAEnC,MAAO,CACHJ,IAAKI,EACLL,UAAWc,EACXC,iBAAsC,QAAtBH,EAAkB,QAAlBC,EAAEC,EAAc,UAAE,IAAAD,OAAA,EAAhBA,EAAkB/tD,UAAE,IAAA8tD,KAAK,MAI7CI,EAAgB9jC,uBAAY,CAACpqB,EAAYyR,IAAmBo8C,GAAW38D,IACzE,MAAMi9D,EAAgBj9D,EAAIg8D,UAAU3yD,KAAIC,GAASA,EAAMwF,KAAOA,EAAEnV,wBAAA,GAAQ2P,GAAK,IAAEiX,WAAWjX,IAE1F,OAAA3P,wBAAA,GAAYqG,GAAQ87D,GAAemB,QACnC,IAEJrjC,qBAAU,KACN8iC,EAASH,KACV,CAACA,IAEJ3iC,qBAAU,KAAO,IAADsjC,EAAAC,EACZ,MAAMC,EAAah9C,GAAai8C,GAEhCM,EAAW,CACPV,IAAKI,EACLL,UAAWoB,EACXL,iBAAmC,QAAnBG,EAAe,QAAfC,EAAEC,EAAW,UAAE,IAAAD,OAAA,EAAbA,EAAeruD,UAAE,IAAAouD,KAAK,MAE7C,CAACb,IAEJ,MAAMgB,EAAmBpkC,kBAAO,GAsChC,OArCAW,qBAAU,KACiD,IAAD0jC,EAAlDh9C,EAAQ07C,UAAU,IAAMqB,EAAiBhmC,UACzCgmC,EAAiBhmC,SAAU,EACV,QAAjBimC,EAAAb,EAAUplC,eAAO,IAAAimC,GAAjBA,EAAmBpC,SAAS56C,EAAQ07C,UAAU,OAEnD,CAAC17C,EAAQ07C,YAEZpiC,qBAAU,KACN,IAAIC,GAAW,EAUf,OATAC,YAAW,KACP,MAAM,UAAEkiC,EAAS,iBAAEe,GAAqBz8C,EACxC,GAAIuZ,GAAYkjC,GAAoB,EAAG,CAAC,IAADQ,EACnC,MAAMC,EAAcxB,EAAU9nC,MAAK5qB,GAASA,EAAMwF,KAAOiuD,IAErDS,IAA8B,QAAjBD,EAAAd,EAAUplC,eAAO,IAAAkmC,GAAjBA,EAAmBnC,iBAAiB2B,EAAkBS,EAAYj9C,YAExF,KAEI,KACHsZ,GAAW,KAEhB,CAACvZ,IAGJsZ,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA2iC,EAAiBl8C,EAAQ07C,UAAWM,KAEzC,KAEI,KACHziC,GAAW,KAEhB,CAACvZ,EAASg8C,EAAOE,IAEbtY,eAAA,OAAKtpD,UAAU,6CAA4CyrB,SAAA,CAC9D69B,eAAA,OAAKtpD,UAAU,yBAAwByrB,SAAA,CACnCjsB,cAAA,MAAAisB,SACK+D,EAAS,iDAEd85B,eAACwC,KAAM,CACHznC,KAAK,QACLrkB,UAAU,iBACVypD,UAAoC,QAA1B8X,EAAkB,QAAlBC,EAAC97C,EAAQ07C,iBAAS,IAAAI,OAAA,EAAjBA,EAAmBnsD,cAAM,IAAAksD,IAAI,KAhGjC,GAiGP7W,QAASA,KACLqX,GAAW38D,IACP,MAAMi9D,EAAgB,IACfj9D,EAAIg8D,UACP,CAAEz7C,OAAQ,MAAOxmB,MAAO,UAAW+U,GAAI9O,EAAIg8D,UAAU/rD,OAAS,IAChE+hB,MAAK,CAACpB,EAAGzgB,IAAMstD,OAAO7sC,EAAErQ,QAAUk9C,OAAOttD,EAAEoQ,UAE7C,OAAA5mB,wBAAA,GACOqG,GACA87D,GAAemB,QAG5B52C,SAAA,CACJ+D,EAAS,6CAA6C,KAAG9J,EAAQ07C,UAAU/rD,OAAO,IA9GzE,GA8G0F,OACrGi0C,eAAA,OAAKtpD,UAAU,yBAAwByrB,SAAA,CACnCjsB,cAAA,MAAAisB,SAAK+D,EAAS,wDACdhwB,cAACsjE,eAAW,CAACpB,MAAOA,EAAOr9C,KAAM,IAAKy9C,SAAUA,UAGxDtiE,cAAA,OAAKQ,UAAU,8BAA6ByrB,SACxCjsB,cAACujE,kBAAchkE,wBAAA,GAAK,CAChBvC,MAAO,IACPwmE,cAAe,GACfC,SAxHO,GAyHPC,SAAU,EACVC,gBAAiB,MACjBz9C,QAASA,EAAQ07C,UACjBgC,gBAAiBhC,GAAaW,GAAW38D,GAAGrG,wBAAA,GAAUqG,GAAQ87D,GAAeE,MAC7EiC,kBAAmBC,IAAc,IAADC,EAC5BxB,GAAW38D,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE+8D,iBAAkBmB,EAAUpvD,OACxC,QAAjBqvD,EAAA1B,EAAUplC,eAAO,IAAA8mC,GAAjBA,EAAmBjD,SAASgD,MAEnC,IAAA73C,SAEGjsB,cAACogE,GAAkB,CAAC1T,IAAK2V,EACrBpY,SAAU/jC,EAAQ07C,UAAU/rD,QAAU,EACtCyqD,eAAgBsC,EAChBrC,SAAU7rD,IACN6tD,GAAW38D,IAAQ,IAADo+D,EACd,MAAMnB,EAAgBj9D,EAAIg8D,UAAU18C,QAAOhW,GAASA,EAAMwF,KAAOA,IAC3DuvD,EAA8B,QAAxBD,EAAgB,OAAbnB,QAAa,IAAbA,OAAa,EAAbA,EAAgB,GAAGnuD,UAAE,IAAAsvD,KAAK,EACK,IAADE,EAAzCD,EAAS,GAAK/9C,EAAQ07C,UAAUqC,KACf,QAAjBC,EAAA7B,EAAUplC,eAAO,IAAAinC,GAAjBA,EAAmBpD,SAAS56C,EAAQ07C,UAAUqC,KAGlD,OAAA1kE,wBAAA,GACOmiE,GAAemB,IAAc,IAChCF,iBAAkBsB,mB,8zEC5O3C,IAAME,GAAqB75C,KAAOokC,IAAV,MAEzB,qBAAG0V,QAAwB,8CAAgD,iDAO3E,YAA6B,IAA1BrV,EAAyB,EAAzBA,UAAWqV,EAAc,EAAdA,QACZ,OAAOrV,EAAS,0FAGNqV,EAAU,+CAAiD,GAHrD,kBAKV,MAODC,GAAyB/5C,aAAO6vC,GAAeC,UAAtB9vC,CAAH,MAWtBg6C,GAAsBh6C,KAAOokC,IAAV,MA+BnB6V,GAA4Bj6C,aAAO6vC,GAAeC,UAAtB9vC,CAAH,MAUzBk6C,GAAyBl6C,KAAOokC,IAAV,M,UC5C5B,MAAM+V,GAAkBhY,sBAAgD,CAAAltC,EAM5EmtC,KAAS,IANoE,UAC5ElsD,EAAS,aACTg5D,EAAY,SACZkL,EAAQ,SACRC,EAAQ,SACRrZ,GACH/rC,EACG,MAAMyQ,EAAWQ,MAEbve,EAAG2yD,EACH1yD,EAAG2yD,EACHllE,MAAOmlE,EACP9nE,MAAO+nE,GACPL,GACG/nE,EAAOy7D,GAAY9O,oBAAS,KAC/B,MAAM0b,EAASxL,EAAaoL,GACtBK,EAASzL,EAAaqL,GACtBK,EAAa1L,EAAasL,GAC1BK,EAAa3L,EAAauL,GAEhC,MAAO,CACH9yD,EAAS,OAAN+yD,QAAM,IAANA,IAAU,EACb9yD,EAAS,OAAN+yD,QAAM,IAANA,IAAU,EACbjoE,MAAiB,OAAVmoE,QAAU,IAAVA,IAAc,EACrBxlE,MAAOulE,OAGT,EACFjzD,EAAC,EACDC,EAAC,MACDvS,EAAK,MACL3C,GACAL,EACEyoE,EAAaT,EAASI,GA8B5B,OA5BAvlC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA6rB,EAAS3uD,KAEd,KAEI,KACH8iC,GAAW,KAIhB,CAAC9iC,IAEJmwD,8BAAoBJ,GAAK,MACrB0L,SAAUiN,IACN,MAAMC,EAAUxkE,OAAOkW,KAAKquD,GAE5B,IAAK,MAAM7jE,KAAO8jE,EACd,GAAID,EAAU7jE,KAA+B7E,EAAM6E,GAE/C,YADA42D,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAQy/D,UAOvCvb,eAAA,OAAKtpD,UAAWA,EAAUyrB,SAAA,CAC7BjsB,cAAA,MAAAisB,SAAK+D,EAAS,4CACd85B,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CAC1BjsB,cAACulE,KAAW,CAACC,KAAK,KACdrE,OAAQ,CACJsE,MAAO,CACHtU,gBAAiB,qBACjBn0D,MAAO,IACPC,OAAQ,IACRyoE,QAAS,SACT5F,SAAU,YAEd6F,MAAO,CACHxU,gBAAiB,oBACjByU,OAAQ,KAGhBC,KAAM,EAAGC,MAAO,EAChBC,KAAM,EAAGC,MAAO,EAChB/zD,EAAI,OAADA,QAAC,IAADA,IAAK,EACRC,EAAI,OAADA,QAAC,IAADA,IAAK,EACRo5C,SAAUn5B,IAAA,IAAC,EAAElgB,EAAC,EAAEC,GAAGigB,EAAA,OAAKimC,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEqM,IAAGC,WAC1D43C,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CACzB+D,EAAS,0CAA0C,KAAEhwB,cAACihE,KAAW,CAC9Dp8C,KAAK,QACLloB,MAAOsV,EACPq5C,SAAU3uD,GAASy7D,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEqM,EAAoB,kBAAVtV,EAAqBA,EAAQysB,SAAc,OAALzsB,QAAK,IAALA,IAAS,cAG/GmtD,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CACzB+D,EAAS,0CAA0C,KAAEhwB,cAACihE,KAAW,CAC9Dp8C,KAAK,QACLloB,MAAOuV,EACPo5C,SAAU3uD,GAASy7D,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEsM,EAAoB,kBAAVvV,EAAqBA,EAAQysB,SAAc,OAALzsB,QAAK,IAALA,IAAS,cAG/GmtD,eAAA,OAAKtpD,UAAU,gBAAeyrB,SAAA,CACzBm5C,EAAW,KAAEplE,cAAC+5D,GAAa,CACxBp9D,MAAOK,EACP6lB,IAAK,EACLC,IAAK,GACLwoC,SAAU3uD,IACe,kBAAVA,GACPy7D,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE5I,MAAOL,eAMtDqD,cAAA,MAAAisB,SAAK+D,EAAS,yCACdhwB,cAACimE,KAAa,CACVC,OAAQlxD,GACRrV,MAAOA,EACP8hE,iBAAkB9hE,GAASy4D,GAASxyD,GAAGrG,wBAAA,GAAUqG,GAAG,IAAEjG,MAAOA,EAAMkpB,gBCjIlEs9C,GAAuB1Z,sBAA0D,CAAAltC,EAK3FmtC,KAAS,IALmF,OAC3Fx9B,EAAM,MACNvyB,EAAK,QACLuuD,EAAO,SACP1jC,GACHjI,EACG,MAAM6mD,EAAevnC,iBAAuB,OACrCnW,EAAOpB,GAAYgiC,mBAAS,GAMnC,OAJAwD,8BAAoBJ,GAAK,MACrBhkC,MAAOA,KAAA,IAAA29C,EAAA,OAA0B,QAA1BA,EAAMD,EAAanpC,eAAO,IAAAopC,OAAA,EAApBA,EAAsB39C,aAGhC1oB,cAACukE,GAAyBhlE,wBAAA,CAACmtD,IAAK0Z,GAC/Bl/C,GAAmB,CACnBG,iBAAiB,EACjBD,aAAc9jB,EAAoBuS,OAClCyR,WACAC,UAAWA,KACHmB,GAAS,GAAGwiC,EAAQ5nD,EAAoBolB,KAEhDlB,SAAUA,KACE,OAARA,QAAQ,IAARA,WAEN,IAAAyE,SAED3oB,EAAoB2L,KAAI,CAACC,EAAOmX,KAC7B,MAAM,IAAE7kB,EAAG,MAAEC,EAAK,MAAE7E,GAAUsS,EAE9B,OAAOlP,cAACwkE,GAAsB,CAC1BhkE,UAAWwpB,GACP,cACArtB,EAAM+E,SAAWF,GAAO0tB,EAAS,cAAgB,GACjDxG,IAAUrC,EAAQ,sBAAwB,IAE9C6kC,QAASx1C,IACLA,EAAE2R,kBACF6jC,EAAQh8C,IACV+c,SAIFjsB,cAAA,OACIQ,UAAU,iBACVE,IAAG,GAAAC,OAAKC,aAAsB,KAAAD,OAAIc,GAClChB,IAAK7D,KAhBuB4E,Y,WCZnC8kE,GAAkB7Z,sBAAW,WAMtBC,GAA2C,IAL3D6Z,EAK0D,EAL1DA,UACAC,EAI0D,EAJ1DA,YACAhN,EAG0D,EAH1DA,aACA97B,EAE0D,EAF1DA,0BACU+oC,EACgD,EAD1Dnb,SAEMt7B,EAAWQ,KACXk2C,EAAgB7nC,iBAAgC,MAFI,EAGhCyqB,oBAAU,GAHsB,oBAGnD5gC,EAHmD,KAG5CpB,EAH4C,OAIQgiC,oBAAS,GAJjB,oBAInDqd,EAJmD,KAIxBC,EAJwB,OAKlCtd,mBAASkd,GALyB,oBAKnD3nE,EALmD,KAK7CgoE,EAL6C,OAMhCvd,mBAASkQ,GANuB,oBAMnD78D,EANmD,KAM5Cy7D,EAN4C,OCzCpC,WAA6B,IAAD,EAC5B9O,mBAAS,GADmB,oBAC3C9xB,EAD2C,KACtCsvC,EADsC,KAMlD,MAAO,CAJShoC,uBAAY,WACxBgoC,GAAO,SAAAlhE,GAAG,OAAIA,EAAM,OACrB,IAEc4xB,GD0CkCuvC,GAPO,oBAOnDC,EAPmD,KAOhCC,EAPgC,KAQpD3b,EAAWzsB,iBAAOxC,KAASoqC,EAAqB,MAAMxpC,QACtDiqC,EAA2BpoC,uBAAY,SAAC5Y,EAAS7jB,GACnD+1D,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAevD,gBAAeC,cAAe2jB,GAAiBC,QAC1E8gD,MACD,CAACA,IACEG,EAAoB9pC,IAAW,SAAA7O,GAAK,OAAIA,EAAMqP,QAAQL,qBAEtD11B,EAAWu6C,mBAAQ,kBNFS3lD,EMEmBszB,ENFoBlvB,OAAOC,OAAOiI,IAAiBiG,KAAIojB,IAAA,IAAC,MAAE11B,EAAK,SAAE0D,GAAUgyB,EAAA,MAAM,CACtIz1B,MAAOF,EAAW2D,GAClB1D,YAFkCD,QME8B,CAACszB,IAEjEwP,qBAAU,WACwB,IAA1BynC,IACAJ,EAAQ,UACRvb,EAAS,SAAU3uD,MAGxB,CAACsqE,IAEJ,IAAMG,EAAiBvoC,iBAA2B,MAC5CwoC,EAAkBxoC,iBAA2B,MAEnDiuB,8BAAoBJ,GAAK,iBAAO,CAC5B0L,SAAU,SAAAiN,GAAc,IAAD,IACnBjN,GAAS,SAAAkP,GAAY,kCAAUA,GAAiBjC,MAD7B,IAIftjE,EAEAsjE,EAFAtjE,UAAWD,EAEXujE,EAFWvjE,UAAWI,EAEtBmjE,EAFsBnjE,YAAagB,EAEnCmiE,EAFmCniE,YACnCH,EACAsiE,EADAtiE,WAAYH,EACZyiE,EADYziE,YAAaE,EACzBuiE,EADyBviE,cAAeD,EACxCwiE,EADwCxiE,cAE5C,UAAAukE,EAAenqC,eAAf,SAAwBm7B,SAAS,CAC7BnmD,EAAGnP,EAAeoP,EAAGrP,EACrB7F,MAAO+F,EAAYpD,MAAOiD,IAE9B,UAAAykE,EAAgBpqC,eAAhB,SAAyBm7B,SAAS,CAC9BnmD,EAAG/P,EAAagQ,EAAGhP,EACnBlG,MAAO8E,EAAWnC,MAAOoC,SA1CqB,IA+CtDJ,EAOAhF,EAPAgF,UACA4P,EAMA5U,EANA4U,kBACApQ,EAKAxE,EALAwE,WACAC,EAIAzE,EAJAyE,UACAF,EAGAvE,EAHAuE,YAAaoB,EAGb3F,EAHa2F,cAAeD,EAG5B1F,EAH4B0F,cAC5BhB,EAEA1E,EAFA0E,QACAY,EACAtF,EADAsF,KArDsD,SAuDHskE,QAvDG,IAuDHA,IAAa,GAC9DgB,EAAe,CACjBj1D,WAzDsD,EAuDlDlF,qBAGJyrD,gBA1DsD,EAuD5BtrD,sBAKxBi6D,EAAyB,WAAT3oE,EAChB4oE,EAA6B,eAAT5oE,EACpB6oE,GAAyB,oCACzBC,GAAiB,WACnBd,EAAQ,QACK,SAAThoE,GAAiBysD,EAAS,OAAQ3uD,IAEpCirE,GAAuB,WAAO,IAAD,EACzB3mE,EAActE,EAAM+E,OAAN,UACdJ,EAAmB3E,EAAM+E,eADX,aACd,EAAkC/E,MAClC,GACNkqE,EAAQ,cACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAQ3E,MAC9BqqD,EAAS,aAAD,YAAC,eAAmB3uD,GAAUsE,KAEpC4mE,GAAmB,WACrBhB,EAAQ,UACK,WAAThoE,GAAmBysD,EAAS,SAAU3uD,IAE9C,OAAO,qBAAK6D,UAAU,2CAAf,SACH,uBAAMA,UAAU,oCAAhB,UACI,sBAAMA,UAAU,wBAAhB,SAAyCwvB,EAAS,4BAClD,uBAAMxvB,UAAU,6BAAhB,UACI,8CACIkU,GAAIgzD,GACJlnE,UAAU,6EACN0mB,GAAmB,CACnBI,WACAF,aAAc,EACdK,WAAY,SAAA/R,GACR,GAAc,IAAVgT,IAA0B,cAAVhT,EAAElU,KAAiC,UAAVkU,EAAElU,KAA6B,OAAVkU,EAAElU,KAShE,OARAkU,EAAEqS,iBACFT,EAAS,GACTs/C,GAA6B,GAE7BlnC,YAAW,WAAO,IAAD,EACC,IAAVhX,IAAa,UAAAg+C,EAAczpC,eAAd,SAAuBvU,WACzC,MAEI,GAGfnB,UAhBmB,WAiBD,IAAVmB,GAAai/C,KACH,IAAVj/C,GAAak/C,KACH,IAAVl/C,GAAam/C,SAtB7B,cA0BI,wBACIrnE,UAAWwpB,GACP,oBACS,SAATnrB,GAAmB,4BACT,IAAV6pB,GAAe,qBAEnBwiC,QAAS,kBAAMyc,MANnB,UAQI,uBAAMnnE,UAAS,oBAAwB,SAAT3B,EAAkB,oBAAsB,IAAtE,UACI,uBAAO6oB,UAAW,EAAG7oB,KAAK,QAAQ2B,UAAU,kBAAkB7D,MAAM,SACpE,sBAAM6D,UAAU,uBAEpB,sBAAMA,UAAU,kBAAhB,SACKwvB,EAAS,yCAGlB,sBAAMxvB,UAAU,4BAChB,uBACIA,UAAWwpB,GACP,oBACAy9C,GAAqB,4BACX,IAAV/+C,GAAe,qBAEnBwiC,QAAS,kBAAM0c,MANnB,SAQI,cAAC,KAAD,CACIjvC,QAASguC,EACTmB,gBAAiBlB,EACjBxX,QAAS,CAAC,QAAS,SACnBpC,UAAU,aACVa,iBAAiB,4BACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,cAAC2lE,GAAD,CAAsBzZ,IAAKga,EACvBx3C,OAAQu4C,EACR9qE,MAAOA,EACP6qB,SAAU,WAAO,IAAD,EACZo/C,GAA6B,GAC7B,UAAA/qD,SAAS0kB,eAAemnC,WAAxB,SAAiDh/C,SAErDwiC,QAAS,YAAc,IAAD,EAAV1pD,EAAU,EAAVA,IACFP,EAAcO,EAAG,UACjBF,EAAmBE,UADF,aACjB,EAAyB7E,MACzB,GACNkqE,EAAQ,cACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAQ3E,MAC9BqqD,EAAS,aAAD,YAAC,eAAmB3uD,GAAUsE,SApBtD,SAyBI,uBAAMT,UAAU,0BAAhB,UACI,uBAAMA,UAAS,oBAAeinE,EAAoB,oBAAsB,IAAxE,UACI,uBAAO//C,UAAW,EAAG7oB,KAAK,QAAQ2B,UAAU,kBAAkB7D,MAAM,eACpE,sBAAM6D,UAAU,uBAEpB,sBAAMA,UAAU,kBAAhB,SACKwvB,EAAS,mDAK1B,sBAAMxvB,UAAU,4BAChB,uBACIA,UAAWwpB,GACP,oBACAw9C,GAAiB,4BACP,IAAV9+C,GAAe,qBAEnBwiC,QAAS,kBAAM2c,MANnB,SAQI,iCACI,uBAAMrnE,UAAS,oBAAegnE,EAAgB,oBAAsB,IAApE,UACI,uBAAO9/C,UAAW,EAAG7oB,KAAK,QAAQ2B,UAAU,kBAAkB7D,MAAM,WACpE,sBAAM6D,UAAU,uBAEpB,sBAAMA,UAAU,yCAAhB,SACKwvB,EAAS,iDAK1B,sBAAKxvB,UAAU,eAAf,UACI,cAAC,KAAD,CACI4uD,QAAS,CAAC,SACVvB,iBAAiB,mDACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,sBAAKA,UAAW,sBAAhB,UACI,sBAAKA,UAAU,oBAAf,UACI,6BACKwvB,EAAS,uCAEd,cAAC,KAAD,CACIk2C,OAAQlxD,GACRrV,MAAOgC,EACP8/D,iBAAkB,SAAA9hE,GACdknE,EAAQ,UACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAejE,UAAWhC,EAAMkpB,SAC5Cm+C,UAIZ,uBACA,sBAAKxmE,UAAU,oBAAf,UACI,6BACKwvB,EAAS,uCAEd,cAAC,KAAD,CACIk2C,OAAQlxD,GACRrV,MAAO4R,EACPkwD,iBAAkB,SAAA9hE,GACdknE,EAAQ,UACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAe2L,kBAAmB5R,EAAMkpB,SACpDm+C,eAMpBha,UAAU,SApCd,SAsCI,eAACmX,GAAD,CAAoBpV,UAAWoY,EAAmB3mE,UAAU,wCAA5D,UACKwvB,EAAS,gCADd,IAC+C,cAAC+3C,GAAA,EAAD,QAvCtC,gBA0CZrqC,GAA6B,cAAC,KAAD,CAC1B0xB,QAAS,CAAC,SACVvB,iBAAiB,mDACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,sBAAKA,UAAW,sBAAhB,UACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,KAAD,CAAU7D,MAAO,aAAc2yD,QAASluD,EAAWkqD,SAAU,WACzDub,EAAQ,UACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAexE,WAAYwE,EAAIxE,eAC3C4lE,KAHJ,SAKKh3C,EAAS,4CAGjB5uB,GAAa,cAACqjE,GAAD,CAAiB/X,IAAK0a,EAChC5mE,UAAU,sBACVkkE,SAAU,CACN/kE,MAAO,cACP3C,MAAO,aACPiV,EAAG,gBACHC,EAAG,iBAEPyyD,SAAU,CACN5hE,WAAYitB,EAAS,uCAEzBwpC,aAAc78D,EACd2uD,SAAU,YAA6B,IAA1B3rD,EAAyB,EAAzBA,MAAO3C,EAAkB,EAAlBA,MAAOiV,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAC1BkmD,GAAS,SAAAxyD,GAAG,kCACLA,GADK,IAER7C,WAAY/F,EACZ4F,YAAajD,EACbmD,cAAemP,EACfpP,cAAeqP,OAEnB80D,YAKhBha,UAAU,SAvCgB,SAyC1B,eAACmX,GAAD,CACIpV,UAAWoY,EACX/C,QAASoD,GAAiBpmE,EAC1BZ,UAAU,yCAHd,UAKKwvB,EAAS,iCALd,IAKgD,cAAC+3C,GAAA,EAAD,QA9CT,iBAiD3C,cAAC,KAAD,CACI3Y,QAAS,CAAC,SACVvB,iBAAiB,mDACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,sBAAKA,UAAW,sBAAhB,UACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,KAAD,CAAU7D,MAAO,WAAY2yD,QAASnuD,EAAYmqD,SAAU,WACxDub,EAAQ,UACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAezE,YAAayE,EAAIzE,gBAC5C6lE,KAHJ,SAKKh3C,EAAS,6CAGjB7uB,GAAc,cAACsjE,GAAD,CAAiB/X,IAAK2a,EACjC7mE,UAAU,oBACVkkE,SAAU,CACN/kE,MAAO,YACP3C,MAAO,YACPiV,EAAG,cACHC,EAAG,eAEPyyD,SAAU,CACN7iE,UAAWkuB,EAAS,4CAExBwpC,aAAc78D,EACd2uD,SAAU,YAA6B,IAA1B3rD,EAAyB,EAAzBA,MAAO3C,EAAkB,EAAlBA,MAAOiV,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EAC1BkmD,GAAS,SAAAxyD,GAAG,kCACLA,GADK,IAER9D,UAAW9E,EACX+E,UAAWpC,EACXuC,YAAa+P,EACb/O,YAAagP,OAEjB80D,YAKhBha,UAAU,SAvCd,SAyCI,eAACmX,GAAD,CACIpV,UAAWoY,EACX/C,QAASoD,GAAiBrmE,EAC1BX,UAAU,0CAHd,UAKKwvB,EAAS,kCALd,IAKiD,cAAC+3C,GAAA,EAAD,QA9CxC,kBAiDZrqC,GAA6B,cAAC,KAAD,CAC1B0xB,QAAS,CAAC,SACVvB,iBAAiB,mDACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,sBAAKA,UAAW,sBAAhB,UACI,oBAAIA,UAAU,sBAAd,SACI,cAAC,KAAD,CAAU7D,MAAO,eAAgB2yD,QAASpuD,EAAaoqD,SAAU,WAC7Dub,EAAQ,UACRzO,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAe1E,aAAc0E,EAAI1E,iBAC7C8lE,KAHJ,SAKKh3C,EAAS,8CAGjB9uB,GAAe,qBAAKV,UAAU,wBAAf,SACZ,cAACshE,GAAD,CACII,MAAO7/D,EACP6jB,QAAS5jB,EACT8/D,iBAAkB8E,WAKlCla,UAAU,SAvBgB,SAyB1B,eAACmX,GAAD,CACIpV,UAAWoY,EACX/C,QAASoD,GAAiBtmE,EAC1BV,UAAU,2CAHd,UAKKwvB,EAAS,mCALd,IAKkD,cAAC+3C,GAAA,EAAD,QA9BX,mBAiC1CrqC,GAA6B,cAAC,KAAD,CAC1B0xB,QAAS,CAAC,SACVvB,iBAAiB,8CACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,eAAC6jE,GAAD,CAAwBnZ,QAAS,SAAAx1C,GAAC,OAAIA,EAAE2R,mBAAxC,UACI,qBAAK7mB,UAAU,QAAf,SACKwvB,EAAS,oCAEb3rB,EAAY4K,KAAI,YAA4B,IAAzBzN,EAAwB,EAAxBA,IAAKiC,EAAmB,EAAnBA,aACrB,OAAO,cAAC6gE,GAAD,CACH9jE,UAAW,CACP,iBACA7D,EAAM0E,UAAYG,EAAM,cAAgB,GACxCiC,EAAe,GAAK,YACtB+J,KAAK,KACP09C,QAAS,WACLkN,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAevE,QAASG,OACpCwlE,KARD,SAWFvjE,EACK,qBACEmhB,MAAOnhB,EAAe8jE,EAAe,GACrC/mE,UAAU,gBACVE,IAAG,UAAKE,aAAL,oCAAuD6C,EAAvD,QACHhD,IAAKe,IAEP,qCACE,cAACvB,EAAA,EAAD,IADF,IAC2B+vB,EAAS,iDAnBbxuB,WAyB7CwrD,UAAU,aAlCgB,SAoC1B,cAACmX,GAAD,CACIpV,UAAWoY,EACX/C,QAASoD,GAAoC,kBAAZnmE,GAAoC,SAAZA,EACzDb,UAAU,0CAHd,SAKKwvB,EAAS,qCAzCyB,kBA4C3C,cAAC,KAAD,CACIo/B,QAAS,CAAC,SACVvB,iBAAiB,2CACjBva,QAAS,qBAAK9yC,UAAU,yBAAf,SACL,cAAC25D,GAAeC,UAAhB,UACKtyD,EAASmH,KAAI,YAAkC,IAAxB+4D,EAAuB,EAA9BrrE,MAAkBC,EAAY,EAAZA,MAC/B,OAAO,cAACu9D,GAAeE,OAAhB,CACH75D,UAAWyB,IAAS+lE,EAAY,cAAgB,GAChD9c,QAAS,WACLkN,GAAS,SAAAxyD,GAAG,kCAAUA,GAAV,IAAe3D,KAAM+lE,OACjChB,KAJD,SAOFpqE,GAP8BorE,UAY/Chb,UAAU,aAlBd,SAoBI,cAACmX,GAAD,CAAoBpV,UAAWoY,EAAmB3mE,UAAU,uCAA5D,SACKwvB,EAAS,kCArBL,6B,2nCEjc1B,MAAMi4C,GAAiBjZ,aAAGxkC,M,mFCOjC,MAAM09C,GAAmB59C,aAAOunC,GAAPvnC,CAAkBE,KACxCy9C,IAMUE,GAAa5oD,IAEP,IAFQ,gBACvB6oD,GACS7oD,EACT,MAAM,QACFse,GACAR,MACE,0BAAEK,GAA8BG,EAChCpwB,EAAY40C,mBAAQ,IAAM4c,KAC3B/5C,QAAOhW,GACGwuB,GAA+C,WAAlBxuB,EAAM/B,WAE9C,CAACuwB,KAGC,MACFzsB,EAAK,QACLwrB,GACAD,GAAQmwB,uBAAWx6B,IAAA,IAAC,KACpBjd,EAAI,QACJunB,GACHtK,EAAA,MAAM,CACHlhB,MAAOiE,EAAKjE,MACZwrB,eAEE4rC,EAAcvpC,uBAAawpC,IAC7B7rC,GAAQkC,IACJ,MAAM,YACF1rB,EAAW,WACX7T,EAAU,UACVoS,EAAS,OACTb,GACAguB,EACE4pC,EAAS,GAAA5nE,OAAM2nE,GACfE,EAAqB,UAAdD,GAAuC,SAAdA,EAChCv9C,EAAqB,QAAXra,EACV,CACE,aAAc,aACd,YAAa,aAEf9D,GACA47D,EAA+B,UAAdF,EACjB,CAACv9C,EAAQ,eACK,SAAdu9C,EAAuB,CAACv9C,EAAQ,cAAgB/X,EAGtD,OAFIu1D,GAAMJ,EAAgBK,GAE1BlpE,wBAAA,GACOo/B,GAAW,IACd1tB,MAAOs3D,EACPnpE,WAA0B,SAAdmpE,GAA+BnpE,EAC3CwT,OAAsB,SAAd21D,EACR/2D,UAAWg3D,EACL,GAAA7nE,OAAG4nE,GAAYpzC,cACf3jB,EACNyB,YAAaw1D,SAGtB,CAAChsC,EAAS2rC,IAEb,OAAOpoE,cAACkoE,GAAgB,CAAC1nE,UAAU,cAAc7D,MAAOsU,EAAOq6C,SAAU+c,EAAa7W,WAAY/jD,K,qFCrEtG,MAAMi7D,GAA+Bp+C,KAAOokC,IAAGlkC,KACzC4mC,IASOuX,GAAgBppD,IAMP,IANQ,SAC1B+rC,EACA3uD,MAAO40D,EAAW,WAClBC,EAAU,SACVvlC,EAAQ,UACRzrB,GACY+e,EACZ,MAAOmJ,EAAOpB,GAAYgiC,oBAAU,GAC9BliC,EAAeoqC,EAAW37C,OAEhC,OAAOi0C,eAAC4e,GAA4B,CAChCloE,UAAW,CAAC,yDAA0DA,GAAWgN,KAAK,KAAKye,SAAA,CAE1FA,GAAYjsB,cAAA,SAAOQ,UAAU,yCAAwCyrB,SAAEA,IACxEjsB,cAAA,MAAAT,wBAAA,CACIiB,UAAU,8BACN0mB,GAAmB,CACnBI,WACAF,eACAG,UAAWA,KACP,MAAM4V,EAASq0B,EAAW9oC,GAC1B,GAAIyU,EAAQ,CACR,MAAMy0B,IAAYx6C,MAAMC,QAAQk6C,IAAeA,EAAY/7C,SAAS,GAAD7U,OAAIw8B,EAAOxgC,QAC9E2uD,EAASsG,EACHL,EAAYrsC,QAAOoiD,GAAgB,GAAA3mE,OAAGw8B,EAAOxgC,SAAY2qE,IACzD,IAAI/V,EAAY,GAAD5wD,OAAKw8B,EAAOxgC,cAG3C,IAAAsvB,SAEDulC,EAAWviD,KAAI,CAACC,EAAOmX,KACpB,MAAM,MAAEzpB,EAAK,MAAED,EAAK,MAAE4nB,GAAUrV,EAC1B0iD,IAAYx6C,MAAMC,QAAQk6C,IAAeA,EAAY/7C,SAAS,GAAD7U,OAAIhE,IAEvE,OAAOmtD,eAAA,QAAAvqD,wBAAA,GACCglB,GAAK,IACT/jB,UAAW,CACP,2BACAoxD,EAAY,mCAAqC,GACjDlpC,IAAUrC,EAAQ,yBAA2B,IAC/C7Y,KAAK,KACP09C,QAASA,KACLI,EAASsG,EACHL,EAAYrsC,QAAOoiD,GAAgB,GAAA3mE,OAAGhE,KAAY2qE,IAClD,IAAI/V,EAAY,GAAD5wD,OAAKhE,MAC5BsvB,SAAA,CAEFjsB,cAAA,QAAMQ,UAAS,oBAAAG,OAAsBixD,EAAY,2BAA6B,IAAK3lC,SAC/EjsB,cAAA,QAAMQ,UAAU,6BAEpBR,cAAA,QAAMQ,UAAU,QAAOyrB,SAAErvB,OAhBVD,a,4bCzCnC,MAAMisE,GAAqBt+C,aAAO2oC,GAAP3oC,CAAoBE,MAgClCq+C,GAAuBpc,sBAA0D,CAAAltC,EAO3FmtC,KAAS,IAPmF,gBAC3FyE,EAAe,SACfllC,EAAQ,gBACRsnC,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACHr0C,EACG,MAAMyQ,EAAWQ,MACX,WACFle,EAAU,eAAEI,EAAc,eAAEpT,EAAc,eAAEiT,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FpT,EAAU,QACVC,EAAO,WACPw9B,EAAU,QACVJ,GACAD,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,WACF5C,EAAU,eAAEI,EAAc,eAAEpT,EAAc,eAAEiT,EAAc,iBAAEE,EAAgB,cAAED,EAAa,WAC3FpT,EAAU,QACVC,GACH,WACDw9B,EAAU,QACVJ,GACHtK,EAAA,MAAM,CACH7f,aAAYI,iBAAgBpT,iBAAgBiT,iBAAgBE,mBAAkBD,gBAC9EpT,aACAC,UACAw9B,aACAJ,eAEEqsC,EAAkBjqC,iBAAwB,MAE1CkqC,EAAyB1mB,mBAAQ,IAAMxlB,EAAW,qBAAqB,CAACA,IACxEmsC,EAAmB3mB,mBAAQ,IAAMxlB,EAAW,eAAe,CAACA,IAC5DosC,EAAuB5mB,mBAAQ,IAAMxlB,EAAW,mBAAmB,CAACA,IACpEqsC,EAAsBpqC,uBAAa1F,GAAoBqD,GAAQkC,GACjEp/B,wBAAA,GACOo/B,GAAW,IACdnsB,cAAe4mB,OAEnB,CAACqD,IACC0sC,EAAuBrqC,uBAAY,CAACu4B,EAAmChD,EAAkC+U,KAC/F,OAAZxV,QAAY,IAAZA,KAAeyD,EAAUhD,GACrBgD,GAAU56B,GACVsS,GAAIxvC,wBAAA,GACGwvC,GAAI,IACPr8B,eAAgB2kD,KAEpB+R,KAEL,CAACxV,EAAcn3B,IAkBlB,OAhBAqwB,8BAAoBJ,GAAK,MACrBx8B,UAAWA,KAAA,IAAAm5C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB7rC,eAAO,IAAAqsC,OAAA,EAAvBA,EAAyBp5C,mBAAW,IAAAm5C,MACrDlS,SAAUA,KAAA,IAAAoS,EAAAC,EAAA,OAAyC,QAAzCD,EAA6B,QAA7BC,EAAMV,EAAgB7rC,eAAO,IAAAusC,OAAA,EAAvBA,EAAyBrS,kBAAU,IAAAoS,MACnDnR,SAAU/lC,IAAuE,IAAtE,WAAE/f,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,GAAkB4f,EAER,IAADo3C,EAIJC,EALjC,YAArBj3D,EAC8B,kBAAnBF,GAA+BG,IACf,QAAvB+2D,EAAAX,EAAgB7rC,eAAO,IAAAwsC,GAAvBA,EAAyBrS,YAAY,UAAW7kD,EAAgBG,IAG1C,kBAAfJ,GAA2BI,IACX,QAAvBg3D,EAAAZ,EAAgB7rC,eAAO,IAAAysC,GAAvBA,EAAyBtS,YAAY,SAAU9kD,EAAYI,SAMpE1S,cAAC4oE,GAAkB,CACtBlc,IAAKoc,EACLnpC,MAAO3P,EAAS,gCAChBmhC,gBAAiBA,EACjBiC,kBAAmB3gD,EACnB4gD,sBAAuB9gD,EACvB+gD,sBAAuBhhD,EACvBmhD,gBAAiB/gD,EACjB6gD,gBAAiBA,EACjBJ,SAAU3gD,EACVmhD,eAAgBA,CAAC90D,EAAMyyB,KACnBy3C,EAAuBlqE,GACV,YAATA,EAAoBoqE,EAAqB33C,GACxC03C,EAAiB13C,IAE1BsiC,aAAcuV,EACdtV,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkBmV,EAClBpV,kBAAmBjvC,IACfoX,KAAajjB,MAAM,CACfmjB,YAAanM,EAAS,8BAA8BnL,GACpDqX,QAASlM,EAAS,6BAG1BxxB,MAAOW,EAAuBC,EAAYC,EAASC,GAAgBd,MACnEg1D,cAAe,KAAKvnC,SAEnBA,O,izICpHT,MAAM09C,GAAyBr/C,KAAO4jC,KAAI1jC,MAGpCo/C,GAA8Bt/C,KAAOokC,IAAGtC,MAmFxCyd,GAAgCv/C,KAAOokC,IAAGnC,MAkFnCud,GAAerd,sBAA2C,CAAAltC,EAOpEmtC,KAAS,IAADqd,EAAA,IAP6D,gBACpExW,EAAe,aACfiG,EAAY,UACZ3F,EAAS,SACTvI,EAAQ,eACRoI,EAAc,aACdE,GACHr0C,EACG,MAAMyQ,EAAWQ,MACX,cACFne,EAAa,eACb/S,EAAc,WACdF,EAAU,WACVkT,EAAU,QACVmqB,EAAO,WACPI,GACAL,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,WACF9V,EAAU,cACViT,EAAa,eACb/S,EAAc,WACdgT,GACH,QACDmqB,EAAO,WACPI,GACH1K,EAAA,MAAM,CACH9f,gBACA/S,iBACAF,aACAkT,aACAmqB,UACAI,mBAEGmtC,EAAwBC,GAA6B3gB,oBAAS,IAC9D4gB,EAAuBC,GAA4B7gB,oBAAS,IAC5DjqD,EAAS+qE,GAAc9gB,oBAAS,IAAA/pD,wBAAC,GAAW/B,KAA4Bg8D,KACzE6Q,EAAqBxrC,iBAAgC,MAErDyrC,EAAuBjoB,mBAAQ,IAAMxlB,EAAW,mBAAmB,CAACA,IACpE0tC,EAAsBzrC,uBAAappB,GAAW+mB,GAAQkC,IACxD,MAAM0mC,EAAY3vD,EAAEynB,OAAOmyB,QAE3B,OAAA/vD,wBAAA,GAAYo/B,GAAW,IAAEtsB,cAAegzD,QACxC,CAAC5oC,IAEL+C,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACA6rB,EAASjsD,KAEd,KAEI,KACHogC,GAAW,KAIhB,CAACpgC,IAEJmgC,qBAAU,KAENyqC,GAA0B,GAE1BvqC,YAAW,KACPyqC,GAAyB,KAC1B,OACJ,IAEHrd,8BAAoBJ,GAAK,MACrBx8B,UAAWA,KAAA,IAAAs6C,EAAAC,EAAA,OAA6C,QAA7CD,EAAgC,QAAhCC,EAAMJ,EAAmBptC,eAAO,IAAAwtC,OAAA,EAA1BA,EAA4Bv6C,mBAAW,IAAAs6C,MACxDpS,SAAU/lC,IAAoF,IAAnF,WAAE/f,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,GAA+B4f,EAAV6kC,EAAQl8C,YAAAqX,EAAA,qEACa,IAADq4C,EAAnE,kBAAfp4D,GAAqD,kBAAnBC,IAAgCG,IAChD,QAA1Bg4D,EAAAL,EAAmBptC,eAAO,IAAAytC,GAA1BA,EAA4BtS,SAAS,CAAE9lD,aAAYI,iBAAgBH,iBAAgBE,sBAEvF,IAAK,MAAMjR,KAAO01D,EACVA,EAAS11D,KAA8BnC,EAAQmC,IAC/C4oE,GAAWxkE,GACPrG,wBAAA,GAAYqG,GAAQsxD,UAOxC,MAAMyT,EAA6C,KAAnB,OAAVr4D,QAAU,IAAVA,IAAc,IAAIuD,SACW,KAAjB,QAA1Bk0D,EAAAM,EAAmBptC,eAAO,IAAA8sC,OAAA,EAA1BA,EAA4B5S,YACpC,OAAOrN,eAAC8f,GAA2B,CAACppE,UAAU,gCAA+ByrB,SAAA,CACzEjsB,cAAC8rD,KAAO,CACJ+B,iBAAiB,uBACjBluB,MAAO3/B,cAAC2pE,GAAsB,CAAA19C,SACzB+D,EAAS,qCACY/D,SAE1BjsB,cAACqvD,KAAQ,CACL7uD,UAAU,YACV8qD,SAAU3uD,GAASytE,GAAWxkE,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE5H,UAAWrB,EAAMwgC,OAAOmyB,YACxEA,QAASjwD,EAAQrB,UAAUiuB,SAE1B+D,EAAS,qCAGjBnb,GAAY5F,KAAIkkB,IAA8C,IAADy3C,EAAAC,EAAAC,EAAA,IAA5C,SAAEzqE,EAAQ,KAAExB,EAAI,QAAEiW,EAAO,WAAEC,GAAYoe,EACrD,GAAa,aAATt0B,IAAwBO,EAAY,OAAO,KAC/C,MAAM2rE,IAAcj2D,EACd2kC,EAAW3kC,GAAWzV,EAAQyV,GACpC,OAAOg1C,eAAA,OACHtpD,UAAW,CACP,sBACAi5C,EAAW,GAAK,YAClBjsC,KAAK,KAAKye,SAAA,CAEZ69B,eAAA,OAAKtpD,UAAU,eAAcyrB,SAAA,CACf,SAATptB,GAAmBmB,cAACmvD,KAAO,CACxBx2B,QAASqxC,EACTgB,sBAAsB,EACtB5b,QAAS,CAAC,SACV0Y,gBAAiBmC,EACjBpc,iBAAkB,CACd,yEACAmc,EAAyB,iBAAmB,GAC5CE,EAAwB,gBAAkB,IAC5C18D,KAAK,KACP8lC,QAAStzC,cAAA,OAAKQ,UAAU,yBAAwByrB,SAC5C69B,eAAC+f,GAA6B,CAC1BrpE,UAAW,CACP,sBACAmqE,EAAe,8BAAgC,IACjDn9D,KAAK,KAAKye,SAAA,CAEZ69B,eAAA,MAAItpD,UAAS,uBAAAG,OAAyB0R,EAAgB,GAAK,YAAa4Z,SAAA,CACpEjsB,cAACqvD,KAAQ,CACLC,QAASj9C,EACTi5C,SAAU51C,IACN60D,EAAoB70D,IACtBuW,SACJ+D,EAAS,mCACXhwB,cAAA,SACAA,cAAA,KAAAisB,SAAI+D,EAAS,qCAEjBhwB,cAAA,OAAKQ,UAAS,qBAAAG,OAAuB0R,EAAgB,GAAK,yBAA0B4Z,SAChFjsB,cAAC6oE,GAAoB,CACjBnc,IAAK2d,EACL9W,gBAAiBA,EACjBG,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,EACdzC,gBAAiB9xD,EAAQxB,SAASouB,SAElC69B,eAAA,OAAKtpD,UAAU,sBAAqByrB,SAAA,CAChC69B,eAAA,OAAKtpD,UAAU,uCAAsCyrB,SAAA,CACjDjsB,cAAA,MAAAisB,SAAK+D,EAAS,kCACdhwB,cAACimE,KAAa,CACVC,OAAQlxD,GACRrV,MAAON,EAAQxB,SACf4jE,iBAAkB9hE,IACdyqE,GAAWxkE,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE/H,SAAU8B,EAAMkpB,eAIvD8hD,GAAgB7gB,eAAA,OAAKtpD,UAAU,sCAAqCyrB,SAAA,CAClEjsB,cAAA,MAAAisB,SAAK+D,EAAS,iCACdhwB,cAAC6xD,GAAU,CACPvG,SAAUgf,EACV9Y,WAAY/0D,EAAsB,CAC9BI,IAAKmzB,EAAS,mCACdlzB,KAAMkzB,EAAS,sCAEnBrzB,MAAO2C,mBAQnC0tD,UAAU,SAAQ/gC,SAElBjsB,cAAA,OACIQ,UAAU,qBACVokB,MAAO,CAAEusC,gBAAiB9+C,EAAgBhT,EAAQxB,SAAWN,GAA0B0uB,SAEtF5Z,EACKC,EACItS,cAAA,OAAKQ,UAAU,2BAA2BE,IAAK4R,EAAY7R,IAAI,eAC/D,KACJT,cAACirE,KAAmB,CAACzqE,UAAU,2BAG5CuqE,GAAa/qE,cAAC8rD,KAAO,CAClBnsB,MAAO5qB,GACmB,QADT61D,EACX56C,EAASjb,UAAW,IAAA61D,IACpB,KACN/c,iBAAiB,uBAAsB5hC,SAEvCjsB,cAACqvD,KAAQ,CACLC,QAAS7V,EACT6R,SAAU51C,GAAKZ,GAAWs1D,GAAWxkE,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE,CAACkP,GAAUY,EAAEynB,OAAOmyB,gBAGlFt/B,EAAS3vB,MAEdL,cAACihE,KAAW,CACRp8C,KAAK,QACLhC,IAAK,EACLC,IAAK,IACLwoC,SAAU3uD,GAASytE,GAAWxkE,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE,CAAC/G,GAAwB,kBAAVlC,EAAqBA,EAAQ,QAC5FA,MAAoB,QAAfkuE,EAAExrE,EAAQR,UAAK,IAAAgsE,IAAI,MAE5B7qE,cAAC+5D,GAAa,CACVl3C,IAAK,EACLC,IAAK,IACLooD,KAAM,EACN5f,SAAU3uD,GAASytE,GAAWxkE,GAAGrG,wBAAA,GAAUqG,GAAG,IAAE,CAAC/G,GAAOlC,MACxDA,MAAoB,QAAfmuE,EAAEzrE,EAAQR,UAAK,IAAAisE,IAAI,MAE5B9qE,cAAA,OAAKQ,UAAU,qBA9GF3B,Y,2fC3R7B,MAAMssE,GAAqB7gD,aAAO6vC,GAAeC,UAAtB9vC,CAAgCE,MAKrD4gD,GAA0B9gD,aAAOunC,GAAPvnC,CAAkB8hC,MAmBrCif,GAAqB5e,sBAAsD,CAAAltC,EAIrFmtC,KAAS,IAJ6E,OACrF95C,EAAM,UACN+rC,EAAS,mBACTlhB,GACHle,EACG,MAAMyQ,EAAWQ,MACX,MACFvf,EAAK,UACLQ,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,EAAa,WACbirB,GACAL,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,MACFjE,EAAK,UACLQ,EAAS,SACTC,EAAQ,KACRC,EAAI,cACJC,GACH,WACDirB,GACH1K,EAAA,MAAM,CACHlhB,QACAQ,YACAC,WACAC,OACAC,gBACAirB,kBAEEyuC,EzExDgB,iByEwDiB,CAAEr6D,SzExD7BA,MyEyDZ,MAAM4kC,EAAQ5gC,GAAS,CAAEhE,UAEnBs6D,EAAiBlpB,mBAAQ,IAAMxlB,EAAW,aAAa,CAACA,IACxD2uC,EAAkBnpB,mBAAQ,IAAMxlB,EAAW,cAAc,CAACA,IAC1D4uC,EAAappB,mBAAQ,IAAMxlB,EAAW,SAAS,CAACA,IAChD6uC,EAAsBrpB,mBAAQ,IAAMxlB,EAAW,kBAAkB,CAACA,IAExEiwB,8BAAoBJ,GAAK,WAEzB,MAAMif,EAA4B,SAAbj6D,EACftR,EAAYu+C,EACR9I,EAAQ,OAASy1B,EAAgB,iBAAmB,QACpD,MAEJlrE,EAAYsR,GACZk6D,EAAmB57C,EAAS27C,EAAatrE,UACzCwrE,EAAoBpuC,EACpBqsB,eAAAC,WAAA,CAAA99B,SAAA,CAAG2/C,EAAiB,IAAC5rE,cAAC+nE,KAAiB,OACvC6D,EACAE,EAAe9rE,cAACmvD,KAAO,CACzBC,QAAS,CAAC,SACVvB,iBAAiB,8CACjBva,QAAStzC,cAAA,OAAKQ,UAAU,yBAAwByrB,SAC5CjsB,cAACmrE,GAAkB,CAAAl/C,SACdprB,EAAaoO,KAAIojB,IAAoC,IAAnC,aAAE/xB,EAAY,MAAE3D,EAAK,KAAE4D,GAAM8xB,EAC5C,OAAOy3B,eAACqQ,GAAeE,OAAM,CACzB75D,UAAW7D,IAAU+U,EAAW,cAAgB,GAChDw5C,QAASA,IAAMqgB,EAAe5uE,GAAOsvB,SAAA,CAEpC1rB,EAAOupD,eAAAC,WAAA,CAAA99B,SAAA,CAAG1rB,EAAK,UAAY,KAAMyvB,EAAS1vB,KAJZ3D,UAS/CqwD,UAAU,cAAa/gC,SAEvBjsB,cAAA,QACIQ,UAAS,sBAAAG,OAAqC,SAAb+Q,EAAsB,GAAK,SAAQ,KAAA/Q,OAAI88B,EAAqB,GAAK,YAAaxR,SAE9G4/C,KApByB,oBAuB5BE,EAAmBtuC,EACnBquC,EACAD,EACN,OAAQj5D,EAiDF,KAhDuB,OAAvB+4D,EAAahvE,MACTqD,cAAC6xD,GAAU,CAACrxD,UAAU,mBAAmB7D,MAAO8U,EAAW65C,SAAUkgB,EAAiBha,YbnBhE90D,EamBgGszB,EbnBzDjwB,EAASkP,KAAIkrB,IAAA,IAAC,MAAEx9B,EAAK,QAAE+C,GAASy6B,EAAA,MAAM,CAC7Gv9B,MAAOD,IAAUmD,EACXE,cAACC,IAAmB,IACpBD,cAAC8rD,KAAO,CAACrK,QAAS/kD,EAAWgD,GAASusB,SACpCjsB,cAAA,OACIS,IAAK/D,EAAWgD,GAChBgB,IAAG,GAAAC,OAAKC,aAAsB,qCAAAD,OAAoChE,EAAMo0B,cAAa,YAGjGp0B,aaU0IsvB,SAC7H8/C,IAEH/rE,cAACorE,GAAuB,CACtB5qE,UAAU,sBACV7D,MAAOgV,EACP25C,SAAUmgB,EACVja,WAAY0N,GACZt2D,QAAQ,EACR6oD,OAAQh0B,GAAsBqsB,eAAA,OAAKtpD,UAAU,uBAAsByrB,SAAA,CAC/DjsB,cAAC43D,KAAK,CACFp3D,UAAU,oBACV7D,MAAuB,kBAATgV,EAAoB,GAAKA,EACvComD,YAAU,EACVzM,SAAUmgB,EACV5T,YAAa7nC,EAAS,wCAE1BhwB,cAAC6xD,GAAU,CACPl1D,MAAOiV,EACP05C,SAAUogB,EACVla,WAAY,CACR,CACI70D,MAAO,OACP0xD,aAAc,CAAE5M,QAASzxB,EAAS,mCAClCpzB,MAAOoD,cAACC,IAAmB,KAE/B,CACItD,MAAO,OACP0xD,aAAc,CAAE5M,QAASzxB,EAAS,mCAClCpzB,MAAOoD,cAACgsE,KAAiB,KAE7B,CACIrvE,MAAO,SACP0xD,aAAc,CAAE5M,QAASzxB,EAAS,qCAClCpzB,MAAOoD,cAACisE,KAAmB,KAE/B,CACItvE,MAAO,QACP0xD,aAAc,CAAE5M,QAASzxB,EAAS,oCAClCpzB,MAAOoD,cAACksE,KAAkB,WAInCjgD,SAEN8/C,IbhEmBrvE,Sc9F7B,IAAMyvE,GAAmB,IAAIl7C,IAAI,CAAC,IAAK,IAAK,IAAK,IAAK,MAChDm7C,GAAgB,SACzBzvE,EACA6E,EACAu+D,EACAG,EACAmM,EACAC,GAEA,IAAMC,EAAe5vE,EAAMiZ,UAAUmqD,EAAgBG,GAE/CsM,EAA4B,OADf7vE,EAAMujE,KACkBmM,EACvCI,EAAcF,EACdG,EAAe,EACnB,OAAQlrE,GACJ,IAAK,IAAKirE,EAAW,WAAOF,EAAP,YAAuBC,EAAa,GAAK,MAC1DE,EAAeF,EAAa,EAAI,EAChC,MACJ,IAAK,IAAKC,EAAW,WAAOF,EAAP,KAAwB,MAC7C,IAAK,IAAKE,EAAW,WAAOF,EAAP,MAAyB,MAC9C,IAAK,IAAKE,EAAW,WAAOF,EAAP,OAA0BG,EAAe,EAAG,MACjE,IAAK,IAAKD,EAAW,YAAQF,EAAR,MAA0BG,EAAe,EAMlEJ,EAJmB3vE,EAAMiZ,UAAU,EAAGmqD,GAAnB,UACV0M,GACH9vE,EAAMiZ,UAAUsqD,EAAcvjE,EAAMkZ,QAErBqqD,EAAewM,IAG3BC,GAAqB,SAAC,GAM5B,IALHj4D,EAKE,EALFA,GACAs4C,EAIE,EAJFA,UAKA,GAAIt4C,GAAMs4C,GAAa,EAAG,CAAC,IAAD,EAChB7vB,EAASthB,SAAS4M,cAAT,WAA2B/T,IAEtCyoB,IAAU,UAACA,EAAO+iC,oBAAR,SAAyB,IAAM,IACzC/iC,EAAO+iC,aAAelT,KCpC1BgP,GAAapE,KAAboE,SAiBK4Q,GAAengB,sBAA0C,WASnEC,GAAS,IARRh4C,EAQO,EARPA,GACA6oB,EAOO,EAPPA,YACAi8B,EAMO,EANPA,aACAqT,EAKO,EALPA,aACAvhB,EAIO,EAJPA,SACAxjC,EAGO,EAHPA,UACAtnB,EAEO,EAFPA,UACGif,EACI,qGACDqtD,EAAiBjuC,iBAAO26B,GADvB,EAEmBlQ,mBAASkQ,GAF5B,oBAEA78D,EAFA,KAEOy7D,EAFP,OAG6B9O,mBAAS,CAAE50C,GAAI,GAAIs4C,WAAY,IAH5D,oBAGA+f,EAHA,KAGYC,EAHZ,KAIDC,EAAmBnuC,uBAAY,SAACouC,GAClC,IAAMz7C,EAA0C,kBAAjBy7C,EAA4BA,EAAeA,EAAa/vC,OAAOxgC,MAC9FmwE,EAAe7vC,QAAUxL,EACzB2mC,EAAS3mC,KACV,IAEH+N,qBAAU,WACNmtC,GAAmBI,KACpB,CAACA,IAEJvtC,qBAAU,WACN8rB,EAAS,CAAEnuB,OAAQ,CAAExgC,aAGtB,CAACA,IAEJ,IAAMwwE,EAAmB,SAAC9H,GAClBA,IAAcyH,EAAe7vC,SAC7BgwC,EAAiB5H,IAQzB,OALAvY,8BAAoBJ,GAAK,iBAAO,CAC5B0L,SAAU+U,EACVC,aAAc,kBAAM14D,EAAM,CAAEA,KAAI0jD,SAAU+U,GAAsB,UAG7D,cAACnR,GAAD,aACHtnD,GAAIA,EACJ24D,aAAa,MACb1lD,QAAS,kBAAMjT,IAAE,OAAIm4D,QAAJ,IAAIA,OAAJ,EAAIA,EAAe,CAAEn4D,KAAI0jD,SAAU+U,MACpDpV,YAAU,EACVuV,YAAY,EACZ9sE,UAAS,UAAKkU,EAAL,kBAAiBlU,GAC1B7D,MAAOA,EACPmrB,UAAW,SAAAmY,GAAO,IAAD,IAEb,GADS,OAATnY,QAAS,IAATA,KAAYmY,GACP1C,EAAL,CAFa,IAGLgwC,EAA0BttC,EAA1BstC,QAAS/rE,EAAiBy+B,EAAjBz+B,IAAKgsE,EAAYvtC,EAAZutC,QAChBzN,EAAc,UAAG9/B,EAAGwtC,cAAc1N,sBAApB,SAAuC,EACrDG,EAAY,UAAGjgC,EAAGwtC,cAAcvN,oBAApB,SAAqC,GAClDqN,GAAWC,IAAY94D,GAAMwrD,IAAiBH,GAAkBoM,GAAiB/6C,IAAI5vB,KACtFy+B,EAAGlY,iBACHqkD,GACInsC,EAAGwtC,cAAc9wE,MAAO6E,EACxBu+D,EAAgBG,GAChB,GACA,SAACwN,EAAY1gB,GACTigB,EAAiBS,GACjBV,EAAc,CAAEt4D,KAAIs4C,oBAKpC1B,SAAU2hB,GACNxtD,OCxECkuD,GAAgBlhB,sBAA4C,WAQtEC,GAAS,IAPRh4C,EAOO,EAPPA,GACA8kD,EAMO,EANPA,aACAqT,EAKO,EALPA,aACAvhB,EAIO,EAJPA,SACAxjC,EAGO,EAHPA,UACAtnB,EAEO,EAFPA,UACGif,EACI,uFAEC8d,EADYF,KAAZQ,QACAN,YACFuvC,EAAiBjuC,iBAAO26B,GAHvB,EAImBlQ,mBAASkQ,GAJ5B,oBAIA78D,EAJA,KAIOy7D,EAJP,OAK6B9O,mBAAS,CAAE50C,GAAI,GAAIs4C,WAAY,IAL5D,oBAKA+f,EALA,KAKYC,EALZ,KAMDC,EAAmBnuC,uBAAY,SAACouC,GAClC,IAAMz7C,EAA0C,kBAAjBy7C,EAA4BA,EAAeA,EAAa/vC,OAAOxgC,MAC9FmwE,EAAe7vC,QAAUxL,EACzB2mC,EAAS3mC,KACV,IAEH+N,qBAAU,WACNmtC,GAAmBI,KACpB,CAACA,IAEJvtC,qBAAU,WACN8rB,EAAS,CAAEnuB,OAAQ,CAAExgC,aAGtB,CAACA,IAEJ,IAAMwwE,EAAmB,SAAC9H,GAClBA,IAAc1oE,GACdswE,EAAiB5H,IAOzB,OAJAvY,8BAAoBJ,GAAK,iBAAO,CAC5B0L,SAAU+U,MAGP,cAAC,KAAD,aACHz4D,GAAIA,EACJ24D,aAAa,MACb1lD,QAAS,kBAAMjT,IAAE,OAAIm4D,QAAJ,IAAIA,OAAJ,EAAIA,EAAe,CAAEn4D,KAAI0jD,SAAU+U,MACpDpV,YAAU,EACVv3D,UAAS,UAAKkU,EAAL,kBAAiBlU,GAC1B7D,MAAOA,EACPmrB,UAAW,SAAAmY,GAAO,IAAD,IAEb,GADS,OAATnY,QAAS,IAATA,KAAYmY,GACP1C,EAAL,CAFa,IAGLgwC,EAA0BttC,EAA1BstC,QAAS/rE,EAAiBy+B,EAAjBz+B,IAAKgsE,EAAYvtC,EAAZutC,QAChBzN,EAAc,UAAG9/B,EAAGwtC,cAAc1N,sBAApB,SAAuC,EACrDG,EAAY,UAAGjgC,EAAGwtC,cAAcvN,oBAApB,SAAqC,GAClDqN,GAAWC,IAAY94D,GAAMwrD,IAAiBH,GAAkBoM,GAAiB/6C,IAAI5vB,KACtFy+B,EAAGlY,iBACHqkD,GACInsC,EAAGwtC,cAAc9wE,MAAO6E,EACxBu+D,EAAgBG,GAChB,GACA,SAACwN,EAAY1gB,GACTigB,EAAiBS,GACjBV,EAAc,CAAEt4D,KAAIs4C,oBAKpC1B,SAAU,SAAArrB,GAAE,OAAIgtC,EAAiBhtC,EAAG9C,OAAOxgC,SACvC8iB,OC3ECmuD,GAAmBnhB,sBAAkD,WAE/EC,GAAS,IADRmgB,EACO,EADPA,aAEMhwC,EAAaL,IAAQ,SAAAhO,GAAK,OAAIA,EAAMqO,cACpCgxC,EAAiBhvC,iBAAwB,MAEzCivC,EAAezrB,mBAAQ,kBAAMxlB,EAAW,cAAUhmB,EAAW,cAAa,CAACgmB,IAgBjF,OAdA2C,qBAAU,WAAO,IAAD,EACN6iC,EAAS,UAAGwL,EAAe5wC,eAAlB,aAAG,EAAwBmwC,eAEtC/K,IAAuB,OAAZwK,QAAY,IAAZA,KAAexK,MAG/B,IAEHvV,8BAAoBJ,GAAK,iBAAO,CAC5B0L,SAAU,SAACz7D,GAAW,IAAD,EACjB,UAAAkxE,EAAe5wC,eAAf,SAAwBm7B,SAASz7D,QAIlC,cAACiwE,GAAD,CAAclgB,IAAKmhB,EACtBn5D,GAAG,SACH6oB,aAAW,EACXi8B,aAAch9B,GAAQ9L,WAAWxb,KAAK5B,OACtCg4C,SAAUwiB,EACVjB,aAAcA,EACdpO,KAAM,O,4LC5Bd,MAAMsP,GAAsBzjD,KAAOokC,IAAGlkC,MASzBwjD,GAAqBhuB,IAC9B,MAAMhwB,EAAWQ,MACX,mBACFzc,EAAkB,eAClBH,EAAc,YACdC,EAAW,iBACXC,EAAgB,aAChBE,EAAY,QACZyoB,GACAD,GAAQmwB,uBAAWptC,IAAA,IAAC,KACpBrK,EAAI,QACJunB,GACHld,EAAA,MAAM,CACH1L,YAAaqB,EAAKrB,YAClBE,mBAAoBmB,EAAKnB,mBACzBH,eAAgBsB,EAAKtB,eACrBE,iBAAkBoB,EAAKpB,iBACvBE,aAAckB,EAAKlB,aACnByoB,eAOEwxC,EAAuBnvC,uBAAappB,GAA2B+mB,GAAQkC,IAEzE,IAAIuvC,EAoBJ,OAhBQA,EALUx4D,EAAEynB,OAAOmyB,QAInBt7C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBF,gBAAgB,GAGpBrU,wBAAA,GAAYo/B,GAAgBuvC,OAC5B,CAACzxC,EAASzoB,IACRm6D,EAAyBrvC,uBAAappB,GAA2B+mB,GAAQkC,IAE3E,IAAIuvC,EAoBJ,OAhBQA,EALUx4D,EAAEynB,OAAOmyB,QAInBt7C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVD,gBAAgB,EAChBE,kBAAkB,GAGT,CACjBA,kBAAkB,GAGtBvU,wBAAA,GAAYo/B,GAAgBuvC,OAC5B,CAACzxC,EAASzoB,IACRo6D,EAA2BtvC,uBAAappB,GAA2B+mB,GAAQkC,IAE7E,IAAIuvC,EAoBJ,OAhBQA,EALUx4D,EAAEynB,OAAOmyB,QAInBt7C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVA,aAAa,EACbE,oBAAoB,GAGX,CACjBA,oBAAoB,GAGxBxU,wBAAA,GAAYo/B,GAAgBuvC,OAC5B,CAACzxC,EAASzoB,IACRq6D,EAAoBvvC,uBAAappB,GAA2B+mB,GAAQkC,IAEtE,IAAIuvC,EAoBJ,OAhBQA,EALUx4D,EAAEynB,OAAOmyB,QAInBt7C,EACc,CACVD,oBAAoB,EACpBH,gBAAgB,EAChBE,kBAAkB,EAClBD,aAAa,GAGH,CACVE,oBAAoB,EACpBF,aAAa,GAGJ,CACjBA,aAAa,GAGjBtU,wBAAA,GAAYo/B,GAAgBuvC,OAC5B,CAACzxC,EAASzoB,IACRs6D,EAAqBxvC,uBAAappB,GAA2B+mB,GAAQkC,IACvE,MAAM0mC,EAAY3vD,EAAEynB,OAAOmyB,SACrB,mBACFv7C,EAAkB,eAClBH,EAAc,iBACdE,EAAgB,YAChBD,GACA8qB,EAIJ,IAAI4vC,GAAyB,EACzBC,GAAqB,EACrBC,GAAuB,EACvBC,GAAkB,EAiBtB,OAfIrJ,GACAmJ,EAAqB56D,EACrB86D,GAAkBF,GAA6B36D,EAC/C06D,GAA0BG,IAAmBF,GAA8Bz6D,EAC3E06D,IAAwBF,GAA0BC,GAAsBC,IAElE36D,IAEN06D,EAAqB56D,EACrB66D,GAAuBD,GAA6B16D,EAEpD46D,EAAkB76D,EAClB06D,GAAyBG,GAA0B36D,GAGvDxU,wBAAA,GACOo/B,GAAW,IACd3qB,aAAcqxD,EACdtxD,mBAAoBw6D,EACpB36D,eAAgB46D,EAChB16D,iBAAkB26D,EAClB56D,YAAa66D,QAEjB,CAACjyC,IAEL,OAAOqtB,eAACikB,GAAmB,CAACvtE,UAAU,iBAAgByrB,SAAA,CAClDjsB,cAAC8rD,KAAO,CAAC+B,iBAAiB,uBAAuBpM,QAASzxB,EAAS,wBAAwB/D,SACvFjsB,cAACqvD,KAAQ,CACL7uD,UAAU,eACV8qD,SAAUgjB,EACVhf,QAASt7C,EACT0T,SAAU,EAAEuE,SAEX+D,EAAS,0BAGlBhwB,cAACqvD,KAAQ,CACL7uD,UAAU,YACV8qD,SAAU2iB,EACV3e,QAAS17C,EACT8T,SAAU,EAAEuE,SAEX+D,EAAS,6BAEdhwB,cAACqvD,KAAQ,CACL7uD,UAAU,gBACV8qD,SAAU6iB,EACV7e,QAASx7C,EACT4T,SAAU,EAAEuE,SAEX+D,EAAS,iCAGdhwB,cAACqvD,KAAQ,CACL7uD,UAAU,cACV8qD,SAAU+iB,EACV/e,QAASz7C,EACT6T,SAAU,EAAEuE,SAEX+D,EAAS,4BAEdhwB,cAACqvD,KAAQ,CACL7uD,UAAU,iBACV8qD,SAAU8iB,EACV9e,QAASv7C,EACT2T,SAAU,EAAEuE,SAEX+D,EAAS,mC,2uECzNf,MAAM2+C,GAA+BrkD,aAAO6vC,GAAeC,UAAtB9vC,CAAgCE,KAgBtEy9C,IAGO2G,GAA6BtkD,KAAOokC,IAAGtC,MAQvCyiB,GAAgCvkD,KAAOokC,IAAGnC,MAQ1CuiB,GAAyBxkD,aAAOunC,GAAPvnC,CAAkB2kC,M,qgBCzBxD,MAAM8f,GAA6BzkD,KAAOokC,IAAGlkC,MA2BhCwkD,GAAmBviB,sBAAkD,CAAAltC,EAI/EmtC,KAAS,IAJuE,UAC/E/N,EAAS,mBACTlhB,EAAkB,aAClBovC,GACHttD,EACG,MAAMyQ,EAAWQ,MACX,QACF7c,EAAO,OACPhD,EAAM,WACNksB,GACAL,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,QAAEvB,EAAO,OAAEhD,GAAQ,WACzBksB,GACH1K,EAAA,MAAM,CACHxe,UACAhD,SACAksB,kBAEEoyC,EAAmBpwC,iBAAyB,MAC5CqwC,EAAkBrwC,iBAAyB,MAC3CswC,EAActwC,iBAAyB,MACvCuwC,EAAcvwC,iBAAyB,MAEvCwwC,EAAiB1+D,GAAUhE,GAAagE,GACxChE,GAAagE,GACbhE,GAAa/H,IAEb0qE,EAAYjtB,mBAAQ,IAAMxlB,EAAW,OAAOlgC,GAA0B,kBAAVA,EAAqBA,EAAMo4B,OAASp4B,KAAQ,CAACkgC,IACzG0yC,EAAYltB,mBAAQ,IAAMxlB,EAAW,OAAOlgC,GAA0B,kBAAVA,EAAqBA,EAAMo4B,OAASp4B,KAAQ,CAACkgC,IACzG2yC,EAAiBntB,mBAAQ,IAAMxlB,EAAW,gBAAYhmB,EAAW,aAAa,CAACgmB,IAC/E4yC,EAAkBptB,mBAAQ,IAAMxlB,EAAW,YAAY,CAACA,IACxD6yC,EAAgBrtB,mBAAQ,IAAMxlB,EAAW,eAAWhmB,EAAW,aAAa,CAACgmB,IAWnF,OATAiwB,8BAAoBJ,GAAK,MACrB0L,SAAU/lC,IAAsC,IAADs9C,EAAAC,EAAAC,EAAAC,EAAA,IAApC,SAAEp8D,EAAQ,QAAEO,EAAO,IAAET,EAAG,IAAEC,GAAK4e,EACnB,kBAAR7e,IAAqC,QAAnBm8D,EAAAR,EAAYlyC,eAAO,IAAA0yC,GAAnBA,EAAqBvX,SAAS5kD,IACxC,kBAARC,IAAqC,QAAnBm8D,EAAAR,EAAYnyC,eAAO,IAAA2yC,GAAnBA,EAAqBxX,SAAS3kD,IACnC,kBAAbC,IAA+C,QAAxBm8D,EAAAZ,EAAiBhyC,eAAO,IAAA4yC,GAAxBA,EAA0BzX,SAAS1kD,IAC9C,kBAAZO,IAA6C,QAAvB67D,EAAAZ,EAAgBjyC,eAAO,IAAA6yC,GAAvBA,EAAyB1X,SAASnkD,SAIpE61C,eAACilB,GAA0B,CAACvuE,UAAU,oBAAmByrB,SAAA,EAC1D0yB,GAAalhB,IAAuBqsB,eAAAC,WAAA,CAAA99B,SAAA,CAClCjsB,cAAC2tE,GAAa,CAACjhB,IAAKyiB,EAChBz6D,GAAG,MACHq7D,YAAa//C,EAAS,mBACtBwpC,aAAch9B,GAAQ9L,WAAWxb,KAAK1B,IACtC83C,SAAUgkB,EACVzC,aAAcA,IAElB7sE,cAAC2tE,GAAa,CAACjhB,IAAK0iB,EAChB16D,GAAG,MACHq7D,YAAa//C,EAAS,mBACtBwpC,aAAch9B,GAAQ9L,WAAWxb,KAAKzB,IACtC63C,SAAUikB,EACV1C,aAAcA,OAGtB7sE,cAAC2tE,GAAa,CAACjhB,IAAKuiB,EAChBv6D,GAAG,WACHq7D,YAAajmB,eAAC8kB,GAA0B,CAACpuE,UAAU,0BAAyByrB,SAAA,CACxEjsB,cAAA,OAAKQ,UAAU,cAAayrB,SAAE+D,EAAS,0BACvChwB,cAACmuD,GAAU,CACPjD,QAASA,KAAA,IAAA8kB,EAAA,OAA8B,QAA9BA,EAAMf,EAAiBhyC,eAAO,IAAA+yC,OAAA,EAAxBA,EAA0B5X,SnEtFnD,GAANz3D,OAAUqnB,GAAgB,aAAc,MmEuFxBomC,KAAM6hB,KACN5hB,aAAc,CAAE5M,QAASzxB,EAAS,gCAG1CwpC,aAAch9B,GAAQ9L,WAAWxb,KAAKxB,SACtC43C,SAAUkkB,EACV3C,aAAcA,IAElB7sE,cAAC2tE,GAAa,CAACjhB,IAAKwiB,EAChBx6D,GAAG,UACHq7D,YAAajmB,eAAC8kB,GAA0B,CAACpuE,UAAU,0BAAyByrB,SAAA,CACxEjsB,cAAA,OAAKQ,UAAU,cAAayrB,SAAE+D,EAAS,2BACvChwB,cAAC+sD,KAAQ,CACLvsD,UAAU,uBACVwsD,UAAU,UACVkjB,OAAK,EACLzuB,QAASzhD,cAACisD,KAAI,CAACf,QAASx1C,GAAKA,EAAEu3C,SAAS5lC,kBAAkB4E,SACrDojD,EAAcpgE,KAAI,CAACtR,EAAM0oB,IACfrmB,cAACisD,KAAKC,KAAI,CACbhB,QAASA,KAAO,IAADilB,EACY,QAAvBA,EAAAjB,EAAgBjyC,eAAO,IAAAkzC,GAAvBA,EAAyB/X,SAASz6D,IACpCsuB,SAEDtuB,GAAI,GAAAgD,OALiB0lB,QAQ1B4F,SAERjsB,cAAA,OAAAisB,SACAjsB,cAACmuD,GAAU,CACXjD,QAASA,OACLkD,KAAMgiB,cAKlB5W,aAAch9B,GAAQ9L,WAAWxb,KAAKjB,QACtCq3C,SAAUokB,EACV7C,aAAcA,IAElB7sE,cAACguE,GAAiB,IAClBhuE,cAAC6xD,GAAU,CACPrxD,UAAU,iCACV7D,MAAOgX,EACP23C,SAAUmkB,EACVje,WAAY2N,GAAkBlzC,SAE9BjsB,cAAA,QAAAisB,SAAO+D,EAAS,iC,+NChJ5B,MAAMqgD,GAAwB/lD,aAAOunC,GAAPvnC,CAAkBE,MAyBnC8lD,GAAkB7jB,sBAAgD,CAAAltC,EAM5EmtC,KAAS,IANoE,0BAC5EhvB,EAAyB,gBACzB61B,EAAe,eACfG,EAAc,UACdG,EAAS,aACTD,GACHr0C,EACG,MAAMyQ,EAAWQ,MACX,QACFnxB,EAAO,UACP+R,EAAS,QACTuB,EAAO,WACPvT,EAAU,OACVwT,EAAM,IACN1M,EAAG,QAAE8L,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,EAAM,WACxC+qB,EAAU,QACVJ,GACAD,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,QACF7V,EAAO,UACP+R,EAAS,QACTuB,EAAO,WACPvT,EAAU,OACVwT,EAAM,IACN1M,EAAG,QAAE8L,EAAO,QAAEH,EAAO,UAAEE,EAAS,OAAED,GACrC,WACD+qB,EAAU,QACVJ,GACHtK,EAAA,MAAM,CACH9yB,UACA+R,YACAuB,UACAvT,aACAwT,SACA1M,MAAK8L,UAASH,UAASE,YAAWD,SAClC+qB,aACAJ,eAEEqsC,EAAkBjqC,iBAAwB,MAE1C0xC,EAAgBluB,mBAAQ,IAAMxlB,EAAW,YAAY,CAACA,IACtD2zC,EAAmB1xC,uBAAa2xC,GAA4Bh0C,GAAQkC,GACtEp/B,wBAAA,GACOo/B,GAAW,IACd/rB,OAAQ69D,EACRrxE,YAAYqxE,GAAyB9xC,EAAYv/B,gBAErD,CAACq9B,IACCi0C,EAAYruB,mBAAQ,IAAMxlB,EAAW,QAAQ,CAACA,IAC9C8zC,EAAgBtuB,mBAAQ,IAAMxlB,EAAW,YAAY,CAACA,IACtD+zC,EAAe9xC,uBAAa1F,GAAoBqD,GAAQkC,GAC1Dp/B,wBAAA,GACOo/B,GAAW,IACd7sB,OAAQsnB,OAEZ,CAACqD,IACCo0C,EAAkBxuB,mBAAQ,IAAMxlB,EAAW,cAAc,CAACA,IAC1Di0C,EAAkBzuB,mBAAQ,IAAMxlB,EAAW,cAAc,CAACA,IAC1Dk0C,EAAkBjyC,uBAAY,CAACu4B,EAAmChD,EAAkC+U,KAC1F,OAAZxV,QAAY,IAAZA,KAAeyD,EAAUhD,GACrBgD,GAAU56B,GACVsS,GAAIxvC,wBAAA,GACGwvC,GAAI,IACP/8B,QAASqlD,KAEb+R,KAEL,CAACxV,EAAcn3B,IAiBlB,OAfAqwB,8BAAoBJ,GAAK,MACrBx8B,UAAWA,KAAA,IAAAm5C,EAAAC,EAAA,OAA0C,QAA1CD,EAA6B,QAA7BC,EAAMR,EAAgB7rC,eAAO,IAAAqsC,OAAA,EAAvBA,EAAyBp5C,mBAAW,IAAAm5C,MACrDjR,SAAU/lC,IAA2C,IAA1C,IAAEnsB,EAAG,QAAE8L,EAAO,QAAEH,EAAO,UAAEE,GAAWsgB,EAEM,IAADk3C,EAIJC,EAL1B,YAAdz3D,EACuB,kBAAZF,GAAwBG,IACR,QAAvBu3D,EAAAT,EAAgB7rC,eAAO,IAAAssC,GAAvBA,EAAyBnS,YAAY,UAAWvlD,EAASG,IAG1C,kBAAR9L,GAAoB8L,IACJ,QAAvBw3D,EAAAV,EAAgB7rC,eAAO,IAAAusC,GAAvBA,EAAyBpS,YAAY,SAAUlxD,EAAK8L,SAM7DhS,cAACizD,GAAY,CAChBvG,IAAKoc,EACLnpC,MAAO3P,EAAS,wBAChBojC,kBAAmBrhD,EACnBuhD,sBAAuBptD,EACvBmtD,sBAAuBxhD,EACvB4hD,gBAAiBzhD,EACjBmhD,SAAUrhD,EACVyhD,gBAAiBA,EACjBI,eAAgBA,CAAC90D,EAAMyyB,KACnBu/C,EAAgBhyE,GACH,YAATA,EAAoB8xE,EAAcr/C,GACjCo/C,EAAUp/C,IAEnBsiC,aAAcmd,EACdld,UAAWA,EACXH,eAAgBA,EAChBK,iBAAkB6c,EAClB9c,kBAAmBjvC,IACfoX,KAAajjB,MAAM,CACfmjB,YAAanM,EAAS,8BAA8BnL,GACpDqX,QAASlM,EAAS,6BAG1BxxB,MAAOW,EAAuBC,EAAYC,GAASb,MACnDg1D,cAAe91B,EACT19B,cAACqwE,GAAqB,CACpB7vE,UAAU,uCACV7D,MAAOyU,EACPk6C,SAAUwlB,EACVtf,WAAYwN,GAAoB/yC,SAEhCjsB,cAAA,QAAMQ,UAAU,cAAayrB,SAAE+D,EAAS,8BAE1C,KACL/D,SAEDjsB,cAACu5D,GAAe,CACZrqC,OAAQtc,EACR4mD,aAAc7mD,EACd24C,SAAUilB,EACV9W,eAAgB+W,GAAiB,QAAA7vE,OAJPoX,KAAKmmB,UAAUvrB,U,uZChJrD,MAAMq+D,GAA2B1mD,KAAOokC,IAAGlkC,MAcrCymD,GAAmB3mD,KAAO4jC,KAAI9B,MAQvB8kB,GAAoBzkB,sBAAoD,CAAAltC,EAElFmtC,KAAS,IAF0E,aAClFmgB,GACHttD,EACG,MAAMyQ,EAAWQ,MACX,KACF5yB,EAAI,OACJ+S,EAAM,WACNksB,GACAL,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,KACFtX,EAAI,OACJ+S,GACH,WACDksB,GACH1K,EAAA,MAAM,CACHv0B,OACA+S,SACAksB,kBAEEs0C,EAAetyC,iBAAyB,MACxCuyC,EAAgBvyC,iBAAyB,MAEzCwyC,EAAchvB,mBAAQ,IAAMxlB,EAAW,UAAU,CAACA,IAClDy0C,EAAajvB,mBAAQ,IAAMxlB,EAAW,YAAQhmB,EAAW,aAAa,CAACgmB,IAS7E,OAPAiwB,8BAAoBJ,GAAK,MACrB0L,SAAU/lC,IAAsB,IAADk/C,EAAAC,EAAA,IAApB,KAAE5zE,EAAI,MAAE2V,GAAO8e,EACF,kBAATz0B,IAAuC,QAApB2zE,EAAAJ,EAAal0C,eAAO,IAAAs0C,GAApBA,EAAsBnZ,SAASx6D,IACxC,kBAAV2V,IAAyC,QAArBi+D,EAAAJ,EAAcn0C,eAAO,IAAAu0C,GAArBA,EAAuBpZ,SAAS7kD,SAIhEu2C,eAACknB,GAAwB,CAACxwE,UAAU,gBAAeyrB,SAAA,CACtDjsB,cAAC2tE,GAAa,CAACjhB,IAAKykB,EAChBz8D,GAAG,OACH8kD,aAAc57D,EACdmyE,YAAa/vE,cAAC8rD,KAAO,CAACnsB,MAAO3P,EAAS,sBAAsB/D,SACxDjsB,cAACixE,GAAgB,CAAC/lB,QAASA,KACvBxhC,UAAU+nD,UAAUC,UAAUr2D,GAAkBzd,KAClDquB,SACG+D,EAAS,wBAGlBs7B,SAAUgmB,EACVzE,aAAcA,IAElB7sE,cAAC2tE,GAAa,CAACjhB,IAAK0kB,EAChB18D,GAAG,SACH8kD,aAAch9B,GAAQ9L,WAAWxb,KAAK3B,MACtCw8D,YAAajmB,eAAC8kB,GAA0B,CAACpuE,UAAU,0BAAyByrB,SAAA,CACxEjsB,cAAA,OAAKQ,UAAU,cAAayrB,SACvB+D,EAAS,wBAEdhwB,cAACmuD,GAAU,CACPjD,QAASA,KAAA,IAAAymB,EAAA,OAA2B,QAA3BA,EAAMP,EAAcn0C,eAAO,IAAA00C,OAAA,EAArBA,EAAuBvZ,SrE9E9BznD,IACjBqX,GAAgB,6BAA8B,GAC/C,KACY,QAAXrX,EAAmB,KAAO,MAE3BqX,GAAgB,wCAAyC,GACzDA,GAAgB,aAAc,GqEwE2B4pD,CAAYjhE,KAC3Dy9C,KAAM6hB,KACN5hB,aAAc,CAAE5M,QAASzxB,EAAS,gCAG1Cs7B,SAAU+lB,EACVxE,aAAcA,U,k8ECvE1B,MAAMgF,GAAwBplB,sBAA4D,CAAAltC,EAKvFmtC,KAAS,IAL+E,UACvFj/C,EAAS,cACToF,EAAa,SACby4C,EAAQ,SACR9jC,GACHjI,EACG,MAAMyQ,EAAWQ,KACXshD,EAA4BjzC,iBAAyB,SAAlBhsB,EAA2B,QAAUA,GACxEk/D,EAAWlzC,iBAAyB,OACnCnW,EAAOpB,GAAYgiC,mBAAS,GAMnC,OAJAwD,8BAAoBJ,GAAK,MACrBhkC,MAAOA,KAAA,IAAAspD,EAAA,OAAsB,QAAtBA,EAAMD,EAAS90C,eAAO,IAAA+0C,OAAA,EAAhBA,EAAkBtpD,aAG5BohC,eAAC6kB,GAA4BpvE,wBAAA,CAChCiB,UAAU,yBACN0mB,GAAmB,CACnBG,iBAAiB,EACjBD,aAAc3Z,EAAUoI,OACxByR,WACAC,UAAWA,KACHmB,GAAS,GAAG4iC,EAAS79C,EAAUib,GAAO/rB,QAE9C6qB,cACF,IAAAyE,SAAA,CAEFjsB,cAACqvD,KAAQ,CAAC3C,IAAKqlB,EACXvxE,UAAU,sBACV8uD,QAA2B,SAAlBz8C,EACTy4C,SAAU51C,IACN41C,EAAS51C,EAAEynB,OAAOmyB,QAAU,OAASwiB,EAA0B70C,UACjEhR,SACJ+D,EAAS,sBACXhwB,cAAC6xD,GAAU,CACPrxD,UAAU,cACV7D,MAAOkW,EACPy4C,SAAUA,EACVkG,WAAY/jD,WAKlBwkE,GAAoC3nD,KAAOokC,IAAGlkC,MAmC9C0nD,GAA+B5nD,KAAOokC,IAAGtC,MAqDlC+lB,GAAqB1lB,sBAAsD,CAAAt6B,EAIrFu6B,KAAS,IAJ6E,mBACrFjvB,EAAkB,0BAClBC,EAAyB,aACzBmvC,GACH16C,EACG,MAAMnC,EAAWQ,MACX,WACFpxB,EAAU,cACVyT,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,QAChB0pB,EAAO,WACPI,GACAL,GAAQmwB,uBAAWt6B,IAAA,IACnBnd,MAAM,WACF9V,EAAU,cACVyT,EAAa,kBACbG,EAAiB,iBACjBD,GACH,QACD0pB,EAAO,WACPI,GACHxK,EAAA,MAAM,CACHjzB,aACAyT,gBACAG,oBACAD,mBACA0pB,UACAI,kBAEEupC,EAAevnC,iBAAuB,MACtCuzC,EAA2BvzC,iBAAiC,MAC5DwzC,EAAyBxzC,iBAAwB,OAChDyzC,EAAeC,GAAkBjpB,oBAAS,IAC1CkpB,EAAsBC,GAAkCnpB,oBAAS,GAClEwoB,EAA4BjzC,iBAAyB,SAAlBhsB,EAA2B,QAAUA,GAwBxE6/D,EAAmBrwB,mBAAQ,IAAMxlB,EAAW,qBAAqB,CAACA,IAClE81C,EAAoBtwB,mBAAQ,IAAMxlB,EAAW,sBAAsB,CAACA,IACpE+1C,EAAuBvwB,mBAAQ,IAAMxlB,EAAW,sBAAkBhmB,EAAW,aAAa,CAACgmB,IAE3FpvB,EAAY40C,mBAAQ,IAAM4c,KAC3B/5C,QAAOhW,GACGwuB,GAA+C,WAAlBxuB,EAAM/B,WAE9C,CAACuwB,IAGLovB,8BAAoBJ,GAAK,MACrB0L,SAAUjlC,IAAyB,IAAD0/C,EAAA,IAAvB,eAAE//D,GAAgBqgB,EACrBrgB,IAA8C,QAA9B+/D,EAAAR,EAAuBp1C,eAAO,IAAA41C,GAA9BA,EAAgCza,SAAStlD,SAIrE,MAAMggE,EAAuB7lE,GAAa4F,GAC1C,OAAOi3C,eAACooB,GAA4B,CAChC1xE,UAAU,iBAAgByrB,SAAA,CAE1B69B,eAAA,OAAKtpD,UAAU,6BAA4ByrB,SAAA,CACvCjsB,cAAA,OAAKQ,UAAU,oBAAmByrB,SAC9BjsB,cAACqvD,KAAQ,CACL/D,SA/CU51C,GAAW+mB,GAAQkC,IACzC,MAAMo0C,EAAqBr9D,EAAEynB,OAAOmyB,QAOpC,OAAA/vD,wBAAA,GACOo/B,GAAW,IAEdv/B,WAAY2zE,EACZngE,QAAQmgE,GAA6Bp0C,EAAY/rB,YAoCzC08C,QAASlwD,EAAW6sB,SACtB+D,EAAS,4BAEdyN,GAAsBz9B,cAACmvD,KAAO,CAC3Bx2B,QAAS65C,EACT1K,gBAAiB2K,EACjBrjB,QAAS,CAAC,QAAS,SACnBpC,UAAU,SACVa,iBAAiB,gCACjBva,QAAStzC,cAAA,OAAKQ,UAAU,yBAAwByrB,SAC5CjsB,cAAC6xE,GAAqB,CAACnlB,IAAK0lB,EACxB3kE,UAAWA,EACXoF,cAAeA,EACf2U,SAAUA,KAAO,IAAD6+C,EACZoM,GAA+B,GACX,QAApBpM,EAAAD,EAAanpC,eAAO,IAAAopC,GAApBA,EAAsB39C,SAE1B4iC,SAlDO3uD,IACvB,MAAM80B,EAAe,GAAA9wB,OAAMhE,GAEH,SAApB80B,IAA4BqgD,EAA0B70C,QAAUxL,GACpEgL,GAAQkC,GACJp/B,wBAAA,GAAYo/B,GAAW,IAAE9rB,cAAe4e,WA+C7BxF,SAEP69B,eAACmoB,GAAiC,CAACvlB,IAAK0Z,EACpC5lE,UAAU,uBACVknB,SAAU,EACVI,UAAWpS,IACP,GAAc,cAAVA,EAAElU,KAAiC,UAAVkU,EAAElU,KAA6B,OAAVkU,EAAElU,IAOhD,OANAixE,GAA+B,GAE/B/yC,YAAW,KAAO,IAADszC,EACmB,QAAhCA,EAAAZ,EAAyBn1C,eAAO,IAAA+1C,GAAhCA,EAAkCtqD,UACnC,MAEI,GAEbuD,SAAA,CAEF69B,eAAA,QAAMtpD,UAAU,uBAAsByrB,SAAA,CAAE+D,EAAS,4BAA4B,IAAChwB,cAAC+nE,KAAiB,OAC/F+K,EACK9yE,cAACkxD,GAAc3xD,YAAA,CAACiB,UAAU,6BAAgCsyE,IAC1D9yE,cAACkxD,GAAc,CAAC1wD,UAAU,4BAA4Bd,QAAQ,0BAG1EN,GAAcq+B,GACTz9B,cAACqvD,KAAQ,CAAC/D,SAAU51C,GAAK68D,EAAe78D,EAAEynB,OAAOmyB,SAAUA,QAASgjB,EAAcrmD,SAChF+D,EAAS,iCAGrB5wB,GAAc0qD,eAAAC,WAAA,CAAA99B,SAAA,CACXjsB,cAAA,OAAAisB,SACIjsB,cAAC43D,KAAK,CACFmY,YAAa/vE,cAAA,QAAAisB,SACR+D,EAAS,qBACNhwB,cAAA,QAAwBQ,UAAU,aAAYyrB,SACzC+D,EAAS,2BADJ,iBAKlBrzB,MAAOqW,EACPs4C,SAAU51C,IACNi9D,EAAkBj9D,GACd48D,GAAeI,EAAiBh9D,QAIhD1V,cAAA,OAAAisB,SACIjsB,cAAC43D,KAAK,CACFmY,YAAa/vE,cAAA,QAAAisB,SACR+D,EAAS,qBACNhwB,cAAA,QAAsBQ,UAAU,YAAWyrB,SACtC+D,EAAS,0BADJ,gBAKlBrzB,MAAOoW,EACPu4C,SAAU51C,IACF48D,GAAeK,EAAkBj9D,GACrCg9D,EAAiBh9D,QAI7B1V,cAAA,OAAKQ,UAAU,aAAYyrB,SAGvBjsB,cAAC4sE,GAAY,CAAClgB,IAAK2lB,EACf39D,GAAG,kBACH6oB,aAAW,EACXi8B,aAAch9B,GAAQ9L,WAAWxb,KAAKpC,eACtCw4C,SAAUsnB,EACV/F,aAAcA,EACdpO,KAAM,e,s3BC3T1B,MAAMwU,GAAmC3oD,KAAOokC,IAAGlkC,MAwCtC0oD,GAAyBzmB,sBAA8D,CAAAltC,EAEjGmtC,KAAS,IAFyF,aACjGmgB,GACHttD,EACG,MAAMyQ,EAAWQ,MACX,MACFvf,EAAK,SACLS,EAAQ,OACRf,EAAM,eACNuD,EAAc,iBACdf,EAAgB,QAChBspB,EAAO,WACPI,GACAL,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,MACFjE,EAAK,SACLS,EAAQ,OACRf,EAAM,eACNuD,EAAc,YACdhB,GACH,QACDupB,EAAO,WACPI,GACH1K,EAAA,MAAM,CACHlhB,QACAS,WACAf,SACAuD,iBACAf,iBAA6B,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaC,iBAC/BspB,UACAI,kBAEEs2C,EAAkC,QAAXxiE,EAAmB,SAAM,IAChDyiE,EAAsBv0C,iBAAyB,MAC/Cw0C,EAAoBhxB,mBAAQ,IACvBxlB,EACH,eACAlgC,GAC4B,kBAAVA,EAAqB,GAAKA,EAAMmZ,MAAM,aAC/C7G,KAAIC,GAAS,GAAAvO,OAAGuO,GAAQ6lB,SACxB7P,QAAOhW,GAA0B,kBAAVA,GAAsBA,EAAM2G,OAAS,KAErE,aAEL,CAACgnB,IACEy2C,EAAuBx0C,uBAAappB,GAAW+mB,GAAQkC,GACzDp/B,wBAAA,GAAYo/B,GAAW,IAAEzqB,eAAgBwB,EAAEynB,OAAOmyB,aAClD,CAAC7yB,IAaLqwB,8BAAoBJ,GAAK,MACrB0L,SAAU/lC,IAAsB,IAADkhD,EAAA,IAApB,YAAEtgE,GAAaof,EAClBpf,IAAwC,QAA3BsgE,EAAAH,EAAoBn2C,eAAO,IAAAs2C,GAA3BA,EAA6Bnb,SAASnlD,EAAYzF,KAAK2lE,UAIhF,MAAMK,EAAyB,SAAb9hE,EACZ0D,GAAa,CAAEnE,UACX,2BACA,sBAC4B,OAAhC7Q,EAAYsR,GAAU/U,MAClB,sBACA,2BACJ82E,EAAmB,QAAX9iE,EACd,OAAOm5C,eAACmpB,GAAgC,CAACzyE,UAAS,+BAAAG,OAAiCgQ,GAASsb,SAAA,CACxFjsB,cAAC2tE,GAAa,CAACjhB,IAAK0mB,EAChBrD,YAAa//C,EAASwjD,GACtB9+D,GAAG,eACH8kD,aAAch9B,GAAQ9L,WAAWxb,KAAKjC,YAAYzF,KAAK2lE,GACvD7nB,SAAU+nB,EACVxG,aAAcA,IAEjB4G,GAASzzE,cAAC8rD,KAAO,CACdrK,QAASzxB,EAAS,iCAClB69B,iBAAiB,uBAAsB5hC,SAEvCjsB,cAACqvD,KAAQ,CACL7uD,UAAU,qBACV8qD,SAAUgoB,EACVhkB,QAASp7C,EAAe+X,SAEvB+D,EAAS,mCAGlBhwB,cAAC6xD,GAAU,CAACrxD,UAAU,iBAAiB7D,MAAK,GAAAgE,OAAKwS,GAC7Cm4C,SAAU3uD,GA/CgBA,KAC9B8/B,GAAQkC,GACJp/B,wBAAA,GACOo/B,GAAW,IACdzrB,YAAW3T,wBAAA,GACJo/B,EAAYzrB,aAAW,IAC1BC,iBAAkBxW,SAyCP+2E,CAAyB/2E,GAC5C60D,WAAY4N,GAA4BnzC,SAExC69B,eAAA,QAAA79B,SAAA,CACK+D,EAAS,wBAAwB,IAAChwB,cAAC4tD,GAAW,CAC3Cta,QAAStjB,EAAS,iCAI9BhwB,cAACwwD,GAAoB,U,4tHC9I7B,MAAMmjB,GAAmCrpD,KAAOokC,IAAGlkC,MAkD7CopD,GAAkB,CACpB,CAAE/qD,IAAK,UAAWgrD,IAAK,CAAC,IAAK,IAAK,MAClC,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,EAAG,EAAG,IAC9B,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,IAAK,EAAG,IAChC,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,IAAK,IAAK,IAClC,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,EAAG,IAAK,IAChC,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,EAAG,IAAK,MAChC,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,EAAG,EAAG,MAC9B,CAAEhrD,IAAK,UAAWgrD,IAAK,CAAC,IAAK,EAAG,OAM9BC,GAAoBv0D,IAGA,IAHC,MACvB5iB,EAAQ,GAAE,SACV2uD,GACgB/rC,EAChB,MAAOw0D,EAAaC,GAAkB1qB,mBAAS3sD,IACxCs3E,EAAeC,GAAoB5qB,oBAAS,KACxC,CACHzgC,IAAKF,GAAcmB,KAAKntB,GAASA,EAAQ,UACzCk3E,IAAKjrD,GAAUjsB,GAAO,OA2B9B,OAvBA6iC,qBAAU,KACN,MAAMgT,EAAiBuhC,EAAYr4D,WAAW,KAAOq4D,EAAW,IAAApzE,OAAOozE,GAEnEprD,GAAcmB,KAAK0oB,KACnBwhC,EAAexhC,GACf0hC,EAAiB,CACbrrD,IAAK2pB,EACLqhC,IAAKjrD,GAAU4pB,GAAgB,KAE3B,OAAR8Y,QAAQ,IAARA,KAAW9Y,MAIhB,CAACuhC,IAEJv0C,qBAAU,KACNw0C,EAAer3E,GACfu3E,EAAiB,CACbrrD,IAAKF,GAAcmB,KAAKntB,GAASA,EAAQ,UACzCk3E,IAAKjrD,GAAUjsB,GAAO,OAE3B,CAACA,IAEGmtD,eAAC6pB,GAAgC,CAAA1nD,SAAA,CACpCjsB,cAAA,OAAKQ,UAAU,aAAYyrB,SACtB2nD,GAAgB3kE,KAAIkjB,IAAmB,IAAlB,IAAEtJ,EAAG,IAAEgrD,GAAK1hD,EAE9B,MAAMgiD,GAAqB,IAATN,EAAI,GAAoB,IAATA,EAAI,GAAoB,IAATA,EAAI,IAAY,KAAQ,IAClE,UACA,UAEN,OAAO7zE,cAAA,OAAeQ,UAAU,cAAcm/B,MAAO9W,EAAKjE,MAAO,CAAEusC,gBAAiBtoC,GAAOqiC,QAASA,IAAc,OAARI,QAAQ,IAARA,OAAQ,EAARA,EAAWziC,GAAKoD,SACrHgoD,EAAcprD,IAAIsM,gBAAkBtM,GAAO7oB,cAAA,OACxCQ,UAAU,aACVokB,MAAO,CACHusC,gBAAiBgjB,MAJZtrD,QAUzBihC,eAAA,OAAKtpD,UAAU,cAAayrB,SAAA,CACxBjsB,cAAA,OAAKQ,UAAU,2BAA2BokB,MAAO,CAAEusC,gBAAiB8iB,EAAcprD,OAClF7oB,cAAC43D,KAAK,CACF/yC,KAAK,QACLloB,MAAOo3E,EACPzoB,SAAU51C,IACNs+D,EAAet+D,EAAEynB,OAAOxgC,iBAOtCy3E,GAA2B9pD,KAAOokC,IAAGtC,MAgCrCioB,GAAwB/pD,KAAOokC,IAAGnC,MAsDlC+nB,GAAmB,CACrBjgE,gBAAiB,CACbkgE,QAAS,kBACTC,aAAc,cACdn0E,SAAU,yCAEdiU,kBAAmB,CACfigE,QAAS,oBACTC,aAAc,gBACdn0E,SAAU,2CAEd8T,cAAe,CACXogE,QAAS,gBACTC,kBAAc39D,EACdxW,SAAU,uCAEd+T,cAAe,CACXmgE,QAAS,gBACTC,kBAAc39D,EACdxW,SAAU,uCAEdkU,eAAgB,CACZggE,QAAS,iBACTC,kBAAc39D,EACdxW,SAAU,yCAGLo0E,GAAkBA,KAC3B,MAAMzkD,EAAWQ,MACX,YACFtd,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,QACjBmoB,EAAO,cACPtoB,EAAa,cACbC,GACAooB,GAAQmwB,uBAAWt6B,IAAA,IACnBnd,MAAM,YACFhC,EAAW,gBACXmB,EAAe,eACfE,EAAc,cACdlB,EAAa,kBACbiB,EAAiB,cACjBH,EAAa,cACbC,GACH,QACDqoB,GACHpK,EAAA,MAAM,CACHnf,cACAmB,kBACAE,iBACAlB,gBACAiB,oBACAmoB,UACAtoB,gBACAC,qBAGEsgE,EAAY,CACd,CACI9sD,KAAM0sD,GAAiBjgE,gBACvB1X,MAAO0X,EACPsgE,WAAYzhE,GAEhB,CACI0U,KAAM0sD,GAAiBhgE,kBACvB3X,MAAO2X,EACPqgE,WAAYthE,GAEhB,CACIuU,KAAM0sD,GAAiBngE,cACvBxX,MAAOwX,GAEX,CACIyT,KAAM0sD,GAAiBlgE,cACvBzX,MAAOyX,GAEX,CACIwT,KAAM0sD,GAAiB//D,eACvB5X,MAAO4X,IAGf,OAAOvU,cAACmvD,KAAO,CACXC,QAAS,CAAC,SACVpC,UAAU,aAEVa,iBAAiB,mDACjBva,QAAStzC,cAAA,OAAKQ,UAAU,yBAAwByrB,SAC5CjsB,cAACq0E,GAAqB,CAAC7zE,UAAU,sBAAqByrB,SACjDyoD,EAAUzlE,KAAIkkB,IAAkC,IAAjC,KAAEvL,EAAI,MAAEjrB,EAAK,WAAEg4E,GAAYxhD,EACvC,MAAM,QAAEohD,EAAO,SAAEl0E,EAAQ,aAAEm0E,GAAiB5sD,GACrCgtD,EAAQjzE,EAAWP,EAAWyzE,GAAUl4E,GACzC,OAAEyW,GAAqB,OAAVuhE,QAAU,IAAVA,IAAc,GAEjC,OAAO7qB,eAAA,OAAmBtpD,UAAU,gBAAeyrB,SAAA,CAC/C69B,eAAA,MAAItpD,UAAS,uBAAAG,OAAyBi0E,EAAS,GAAK,YAAa3oD,SAAA,CAC7DjsB,cAAA,QAAAisB,SACK+D,EAAS3vB,KAEdL,cAACqvD,KAAQ,CACLC,QAASslB,EACTtpB,SAAU51C,IACN+mB,GAAQkC,IACJ,MAAMm2C,EAAap/D,EAAEynB,OAAOmyB,QAE5B,OAAA/vD,wBAAA,GACOo/B,GAAW,IACd,CAAC41C,GAAU,CAACO,KAAen4E,EAAM0sB,MAAM,UAGjD4C,SACJ+D,EAAS,sCAEd4kD,GAAU9qB,eAAA,OAAKtpD,UAAU,uBAAsByrB,SAAA,CACzB,kBAAX7Y,GAAuBpT,cAAA+pD,WAAA,CAAA99B,SAC3B69B,eAAA,MAAItpD,UAAU,cAAayrB,SAAA,CACvBjsB,cAAA,QAAMQ,UAAU,QAAOyrB,SAAE+D,EAAS,uCAClChwB,cAAC6xD,GAAU,CACPrxD,UAAU,qBACV7D,MAAOyW,EACPo+C,WAAY,CACR,CAAE50D,MAAOoD,cAACC,IAAmB,IAAKtD,MAAO,GACzC,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,GACtB,CAAEC,MAAO,KAAMD,MAAO,IAE1B2uD,SAAU3uD,IACN8/B,GAAQkC,IACJ,MAAMo2C,EAAWP,EAAYj1E,YAAA,GAAQo/B,EAAY61C,SAAkB39D,EACnE,OAAKk+D,GAAaP,GAElBO,EAAS3hE,OAA0B,kBAAVzW,EAAqBA,EAAQ,EACtD4C,wBAAA,GACOo/B,GAAW,IACd,CAAC61C,GAAeO,KALmBp2C,aAY3D3+B,cAAA,MAAAisB,SACIjsB,cAACqvD,KAAQ,CACL7uD,UAAU,kBACV8uD,QAASluD,EACTkqD,SAAU51C,IACN+mB,GAAQkC,IACJ,MAAMq2C,EAAct/D,EAAEynB,OAAOmyB,QAE7B,OAAA/vD,wBAAA,GACOo/B,GAAW,IACd,CAAC41C,GAAU,IAAI53E,EAAM0sB,MAAM,EAAG,GAAI2rD,EAAar4E,EAAM,UAG/DsvB,SAEFjsB,cAAA,QAAMQ,UAAU,QAAOyrB,SAAE+D,EAAS,uCAGzC5uB,GAAapB,cAAC8zE,GAAiB,CAC5Bn3E,MAAOk4E,EACPvpB,SAAU2pB,GAAex4C,GAAQkC,GAC7Bp/B,wBAAA,GACOo/B,GAAW,IACd,CAAC41C,GAAU,IAAI53E,EAAM0sB,MAAM,EAAG,GAAI4rD,SAI9Cj1E,cAAA,MAAAisB,SAAK+D,EAAS,kCACdhwB,cAACimE,KAAa,CACVC,OAAQlxD,GACRrV,MAAgB,OAATgC,QAAS,IAATA,IAAa,GACpB8/D,iBAAkB9hE,IACd88B,GAAQkC,GACJp/B,wBAAA,GACOo/B,GAAW,IACd,CAAC41C,GAAU,CAAC53E,EAAM,GAAIgD,EAAMkpB,OAAQlsB,EAAM0sB,MAAM,EAAG,gBAlF1DkrD,UA2FtBtoD,SAEP69B,eAACsqB,GAAwB,CAAC5zE,UAAU,qBAAoByrB,SAAA,CACpDjsB,cAAA,OAAKQ,UAAU,kBAAiByrB,SAC3ByoD,EAAUzlE,KAAIskB,IAAkC,IAAjC,KAAE3L,EAAI,MAAEjrB,EAAK,WAAEg4E,GAAYphD,EACvC,MAAM,QAAEghD,GAAY3sD,GACbgtD,EAAQjzE,EAAWP,EAAWyzE,GAAUl4E,GACzC,OAAEyW,GAAqB,OAAVuhE,QAAU,IAAVA,IAAc,GAEjC,OAAO30E,cAAA,OACHQ,UAAU,6BACVokB,MAAO,CACHjlB,MAAoC,KAAnB,OAATgC,QAAS,IAATA,IAAa,IAAIkU,QAAiB++D,EAAqBjzE,EAAZ,UACnDuzE,WAAaN,GAAUxzE,EAAS,WAAAT,OAAek0E,GAAW,QAC5D5oD,SAEA7Y,GAAUwhE,EAAU9qB,eAAA,OAAA79B,SAAA,CAAK,IAAE7Y,KAAgB,QAPhCmhE,QAWzBv0E,cAAA,QAAMQ,UAAU,mBAAkByrB,SAAE+D,EAAS,gD,OCrXlD,MAAMmlD,GAAiB1oB,sBAA8C,CAAAltC,EAMzD2zC,KAAkB,IANwC,cACzE1d,EAAa,iBACbC,EAAgB,aAChBme,EAAY,UACZC,EAAS,eACTH,GACan0C,EACb,MAAMyQ,EAAWQ,MACX,OACF7f,EAAM,MACNM,EAAK,KAAEC,EAAI,OAAEC,EAAM,QAAE9R,EAAO,cAC5BgS,EAAa,UAAEC,EAAS,WACxBlS,EAAU,OACVwT,EAAM,UACNpB,EAAS,WACTqrB,EAAU,QACVJ,GACAD,GAAQmwB,uBAAWx6B,IAAA,IACnBjd,MAAM,OACFvE,EAAM,MACNM,EAAK,KAAEC,EAAI,OAAEC,EAAM,QAAE9R,EAAO,cAC5BgS,EAAa,UAAEC,EAAS,WACxBlS,EAAU,OACVwT,EAAM,UACNpB,GACH,WACDqrB,EAAU,QACVJ,GACHtK,EAAA,MAAM,CACHxhB,SACAM,QAAOC,OAAMC,SAAQ9R,UACrBgS,gBAAeC,YACflS,aACAwT,SACApB,YACAqrB,aACAJ,gBAEE,QAAEoB,GAAYR,MACd,mBAAEI,EAAkB,0BAAEC,GAA8BG,EAEpDu3C,EAAiBv2C,iBAA2B,MAE5C8f,EAAYvpC,GAAa,CAAEnE,WAC1BokE,EAAuBC,GAA4BhsB,mBAAS,GAC7DisB,EAAiBlzB,mBAAQ,KAAMmzB,O1BrEP94E,E0BqEyB,CACnDwB,OAAQ8xB,EAAS,2BACjBhtB,KAAMgtB,EAAS,yBACfrtB,SAAUqtB,EAAS,8B1BvEhB5pB,EAAY1J,GAAYuS,KAAIsQ,IAAA,IAAC,MAAE5f,EAAK,KAAE/B,EAAI,MAAEhB,GAAO2iB,EAAA,MAAM,CAC5D3iB,MAAgB,WAATgB,EAAoBoC,cAACC,IAAmB,IAAMrD,EACrDD,MAAOiB,EACP2mB,MAAO,CACHK,MAAO,CACHjlB,QACAm/D,WAAY,aAPMpiE,Q0ByE1B,CAACszB,IAECylD,EAAqB52C,iBAA2B,MAChD62C,EAAkB72C,iBAAyB,MAC3C82C,EAAyB92C,iBAA6B,MACtD+2C,EAAwB/2C,iBAA8B,MACtDg3C,EAAsBh3C,iBAA4B,MAClDi3C,EAA4Bj3C,iBAAkC,MAC9Dk3C,EAAsBl3C,iBAA4B,OAEjDm3C,EAAcC,GAAmB3sB,mBAGrC,CACC50C,GAAI,GACJ0jD,SAAUA,SAkBR8d,EAAa7zB,mBAAQ,IAAMxlB,EAAW,SAAS,CAACA,IAChDs5C,EAAiB9zB,mBAAQ,IAAMxlB,EAAW,WAAW,CAACA,IACtDu5C,EAAgBt3C,uBAAaz/B,GAAyBo9B,GAAQsS,GAAIxvC,wBAAA,GAAUwvC,GAAI,IAAE1vC,eAAa,CAACo9B,IAChG45C,EAAkBh0B,mBAAQ,IAAMxlB,EAAW,cAAc,CAACA,IAC1Dy5C,EAAkBx3C,uBAAY,CAACjgC,EAAqBlC,KACtD8/B,GAAQkC,GACJp/B,wBAAA,GACOo/B,GAAW,IACdttB,cAAexS,EACfyS,UAAW3U,QAGpB,CAAC8/B,IAEE85C,EAAgBl0B,mBAAQ,I1B/EFm0B,EAAC7lE,EAAgBjU,EAAoC+gC,IAAgCh+B,EAChHwP,KAAIoqB,IAAA,IAAC,KAAEz7B,EAAI,QAAE8B,EAAO,WAAEE,GAAYy5B,EAAA,MAAM,CACrCz8B,MAAOgB,IAAS4B,EACVQ,cAACC,IAAmB,IACpBD,cAAC8rD,KAAO,CAACrK,QAAS/kD,EAAWgD,GAASusB,SACpCjsB,cAAA,OACIS,IAAK/D,EAAWgD,GAChBgB,IAAG,GAAAC,OAAKC,aAAsB,gCAAAD,OAA+BgQ,EAAM,KAAAhQ,OAAI/C,EAAKmzB,cAAa,YAGrGp0B,MAAOiB,EACPgC,iBAEHslB,QAAOyU,IAAA,IAAC,WAAE/5B,GAAY+5B,EAAA,OAAoB,IAAf/5B,GAAwBA,IAAe69B,K0BkE/B+4C,CAAiB7lE,EAAQqf,EAAUyN,IAAqB,CAAC9sB,EAAQqf,EAAUyN,IAyC/G,OAvCA+B,qBAAU,KAAO,IAADi3C,EACU,QAAtBA,EAAArB,EAAen4C,eAAO,IAAAw5C,GAAtBA,EAAwBre,SAAS,CAAEn2D,KAAMqP,EAAUrP,SACpD,CAACqP,IAEJkuB,qBAAU,KAAO,IAADk3C,EACW,QAAvBA,EAAAhB,EAAgBz4C,eAAO,IAAAy5C,GAAvBA,EAAyBte,SAAS/4D,KACnC,CAACA,IAEJytD,8BAAoBoG,GAAc,MAC9BhjC,UAAWA,KAAA,IAAAymD,EAAAC,EAAAC,EAAAC,EAAA,OAA8C,QAAxCH,EAA2B,QAA3BC,EAACnB,EAAmBx4C,eAAO,IAAA25C,OAAA,EAA1BA,EAA4B1mD,mBAAW,IAAAymD,MACb,QADsBE,EACnC,QADmCC,EAC1DpB,EAAgBz4C,eAAO,IAAA65C,OAAA,EAAvBA,EAAyB5mD,mBAAW,IAAA2mD,MAC5CE,cAAe7hE,IAAS,IAAD8hE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACnBhC,GAAyB99C,GAAOA,EAAM,IACtC,MAAM,KACF55B,EAAI,IACJsI,EAAG,QAAE8L,EAAO,QAAEH,EAAO,UAAEE,EAAS,WAChCO,EAAU,eAAEI,EAAc,eAAEH,EAAc,iBAAEE,EAAgB,QAC5DpT,EAAO,MACPkU,EAAK,eACLT,EAAc,YACdG,EAAW,OACXK,EAAM,IACNE,EAAG,IAAEC,EAAG,QACRQ,EAAO,SAAEP,GACTwB,EAEsB,QAA1B8hE,EAAAvB,EAAmBx4C,eAAO,IAAA+5C,GAA1BA,EAA4B5e,SAAS,CAAElyD,MAAK8L,UAASH,UAASE,cACvC,QAAvBklE,EAAAvB,EAAgBz4C,eAAO,IAAAg6C,GAAvBA,EAAyB7e,SAAQ74D,wBAAC,GAC3BF,GAAO,IACViT,aAAYI,iBAAgBH,iBAAgBE,sBAElB,QAA9BykE,EAAAvB,EAAuB14C,eAAO,IAAAi6C,GAA9BA,EAAgC9e,SAAS,CAAEx6D,OAAM2V,UACpB,QAA7B4jE,EAAAvB,EAAsB34C,eAAO,IAAAk6C,GAA7BA,EAA+B/e,SAAS,CAAEtlD,mBACf,QAA3BskE,EAAAvB,EAAoB54C,eAAO,IAAAm6C,GAA3BA,EAA6Bhf,SAAS9kD,GACL,QAAjC+jE,EAAAvB,EAA0B74C,eAAO,IAAAo6C,GAAjCA,EAAmCjf,SAAS,CAAEnlD,gBACnB,QAA3BqkE,EAAAvB,EAAoB94C,eAAO,IAAAq6C,GAA3BA,EAA6Blf,SAAS,CAAE5kD,MAAKC,MAAKQ,UAASP,kBAI5Do2C,eAAA,OACHtpD,UAAW,CAAC,kBAA8B,QAAXmQ,EAAmB,YAAc,aAAanD,KAAK,KAAKye,SAAA,CAEvFjsB,cAAC4vD,GAAS,IACV5vD,cAAA,SACAA,cAACwvD,GAAW,IAEZ1F,eAAA,OAAKtpD,UAAU,qBAAoByrB,SAAA,CAC/BjsB,cAAC8uE,GAAsB,CAACtuE,UAAU,eAAe7D,MAAOgU,EAAQ26C,SA9ElDisB,IAClB96C,GAAQkC,IAAgB,IAAD64C,EAAAC,EAAAC,EAAAC,EAAAC,EACnB,MAAMC,EAAU,GAAAl3E,OAAM42E,GAChBO,EAAoBrtD,GAAiBkU,EAAak5C,IAElD,KAAEj6E,EAAI,MAAE2V,EAAK,OAAED,EAAM,YAAEL,EAAW,SAAES,EAAQ,QAAEO,EAAO,eAAEnB,GAAmBglE,EAOhF,OAN8B,QAA9BN,EAAA7B,EAAuB14C,eAAO,IAAAu6C,GAA9BA,EAAgCpf,SAAS,CAAEx6D,OAAM2V,UACtB,QAA3BkkE,EAAA5B,EAAoB54C,eAAO,IAAAw6C,GAA3BA,EAA6Brf,SAAS9kD,GACT,QAA7BokE,EAAA9B,EAAsB34C,eAAO,IAAAy6C,GAA7BA,EAA+Btf,SAAS,CAAEtlD,mBACT,QAAjC6kE,EAAA7B,EAA0B74C,eAAO,IAAA06C,GAAjCA,EAAmCvf,SAAS,CAAEnlD,gBACnB,QAA3B2kE,EAAA7B,EAAoB94C,eAAO,IAAA26C,GAA3BA,EAA6Bxf,SAAS,CAAEnkD,UAASP,aAE1CokE,MAkEiFtmB,WAAYqN,GAAiB5yC,SACjHjsB,cAAA,QAAAisB,SAAO+D,EAAS,0BAEpBhwB,cAAC6xD,GAAU,CAACrxD,UAAU,aAAa7D,MAAOuU,EAAMo6C,SAAU4qB,EAAY1kB,WAAY+jB,EAAetpD,SAC7FjsB,cAAA,QAAAisB,SAAO+D,EAAS,wBAEnB0N,GAA6B19B,cAAC2oE,GAAa,CACxCnoE,UAAU,kBACV7D,MAAOwU,EACPm6C,SAAU6qB,EACV3kB,WAAYuN,GAAiB9yC,SAE7BjsB,cAAA,QAAAisB,SAAO+D,EAAS,6BAIvByN,GAAsBqsB,eAAA,OAAKtpD,UAAU,oBAAmByrB,SAAA,CACrD69B,eAAA,SAAOtpD,UAAU,yCAAwCyrB,SAAA,CACpD+D,EAAS,sBAAsB,IAAChwB,cAAC4tD,GAAW,CACzCta,QAAStjB,EAAS,6BAG1BhwB,cAAC8pE,GAAY,CAACpd,IAAKgpB,EACflc,aAAcn6D,EACdk0D,gBAAiB9d,EACjB6V,SAAU8qB,EACVviB,UAAWA,EACXD,aAAcA,EACdF,eAAgBA,OAIxB1zD,cAACmoE,GAAU,CAACC,gBAAiBn1D,IAAW,IAAA8kE,EAAA,OAAqC,QAArCA,EAAIjC,EAA0B74C,eAAO,IAAA86C,OAAA,EAAjCA,EAAmC3f,SAAS,CAAEnlD,mBAE1F62C,eAAC+kB,GAA6B,CAACruE,UAAU,sBAAqByrB,SAAA,CAC1DjsB,cAACkxE,GAAiB,CAACxkB,IAAKipB,EACpB9I,aAAcoJ,IAElBj2E,cAACsmE,GAAe,CAA6B5Z,IAAK0oB,EAC9C7O,UAAWt5D,GAAagE,GACxBu1D,YAAan1D,EACbmoD,aAAcloD,EACdosB,0BAA2BA,EAC3B4tB,SAAUgrB,GALQjB,GAOtBr1E,cAACqrE,GAAkB,CACfz4D,OAAQA,EACR+rC,UAAWA,EACXlhB,mBAAoBA,OAG5BqsB,eAAA,OAAKtpD,UAAU,YAAWyrB,SAAA,CACtB69B,eAAA,OAAKtpD,UAAU,kBAAiByrB,SAAA,CAC5BjsB,cAAC6xD,GAAU,CACPrxD,UAAU,mCACV7D,MAAO6U,EACP85C,SAAU+qB,EACV7kB,WAAY+kB,EAActqD,SAE1BjsB,cAAA,QAAAisB,SAAO+D,EAAS,8BAGlB5wB,GAAcq+B,IACTz9B,cAACmyE,GAAkB,CAACzlB,IAAKkpB,EACxBn4C,mBAAoBA,EACpBC,0BAA2BA,EAC3BmvC,aAAcoJ,IAGtBj2E,cAACkzE,GAAsB,CAACxmB,IAAKopB,EAA2BjJ,aAAcoJ,IAEtEnsB,eAAA,OAAA79B,SAAA,CACI69B,eAAA,OAAKtpD,UAAU,4BAA2ByrB,SAAA,CACtCjsB,cAACi6D,GAAe,CAACz5D,UAAU,mBAAkByrB,SACxC+D,EAAS,wBAEbyN,EAAqBz9B,cAACy0E,GAAe,IAAMz0E,cAAA,UAC5CA,cAACs/D,GAAU,CACPC,SAAUyW,EAAathE,GACvB8qD,OAAQwW,EAAa5d,cAG7Bp4D,cAAC4tE,GAAgB,CAAClhB,IAAKmpB,EAAqBhJ,aAAcoJ,OAG9Dj2E,cAACgvE,GAAgB,CAACtiB,IAAKqpB,EACnBp3B,UAAWA,EACXlhB,mBAAoBA,EACpBovC,aAAcoJ,OAGtBj2E,cAAA,OAAKQ,UAAU,mBAAkByrB,SAC7BjsB,cAACswE,GAAe,CAAC5jB,IAAK+oB,EAClBliB,gBAAiB/d,EACjB9X,0BAA2BA,EAC3Bg2B,eAAgBA,EAChBG,UAAWA,EACXD,aAAcA,e,q+WC9RlC,MAGI32D,OAAQ+6E,GACRh7E,MAAOi7E,GAAS,WAChB36E,IACAP,EACEm7E,GANoB,GAMeD,GACnCE,GAAkB7tD,KAAOokC,IAAGlkC,KAPR,MADH,IAmNV4tD,GAAY74D,IAUP,IAAD84D,EAAAC,EAAAC,EAAAC,EAAA,IAVS,MACtBnyD,EAAK,KACLnR,EAAI,OACJga,EAAM,SACNc,EAAQ,YACRyoD,EAAW,SACXpY,EAAQ,SACRqY,EAAQ,WACRC,EAAU,MACV/zD,GACQrF,EACR,MAAOq5D,EAAeC,GAAoBvvB,oBAAkB,IACtD,IACFpjD,EAAG,QACH8L,EAAO,OACPF,EAAM,UACNC,EAAS,IACTyB,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,cACdF,EAAa,SACbd,EAAQ,IACR+B,EAAG,OACH9C,EAAM,MACNM,EAAK,eACL3R,EAAc,cACd+S,EAAa,OACbO,EAAM,WACNxT,EAAU,QACVuT,EAAO,KACP/U,EAAI,cACJiV,EAAa,QACbxT,EAAO,kBACP2T,EAAiB,iBACjBD,EAAgB,MAChBQ,EAAK,KACL5B,EAAI,UACJF,EAAS,YACTwB,GACAiC,EACE4jE,EAAqBz9D,GAAkBzd,GACvCm7E,EAA0C,SAAlBlmE,EACxBzT,EACI,QACA6R,EACJ4B,EACAmmE,EAAmC,YAAdjnE,GAA4B7L,EAEjDA,EADA,kCAEA+yE,EAAsC,SAAbvnE,EAAsB2D,GAAqBpE,GAASS,EAC7EonC,EAAgD,OAA3BmgC,EACrBxnE,EACAwnE,EACAt6B,EAAYvpC,GAAaF,GACzB0gC,GAAezgC,GAAgBD,GAC/B4uC,GAAkC,SAAlBjxC,GAA4BzT,KACzCoU,GAAOC,GAAQb,GAAUD,EAAQkD,QACpC8oC,EACAu6B,GAAoBjmE,EAAYzF,KAAK,OACrC2rE,GAAmBh6E,EAAuBC,EAAYC,IACtD,eACFX,GAAc,cACdD,IACA06E,GAEJ,OAAOrvB,eAACquB,GAAe,CACnB33E,UAAWwpB,GACP,WACAkF,EAAS,SAAW,GACpB7I,EAAQ,IAAM,EAAI,oBAAsB,IAE5C6kC,QAASA,IAAMmV,EAASnrD,GACxB0P,MAAOA,EAAMqH,SAAA,CAEb69B,eAAA,OACItpD,UAAU,YAAWyrB,SAAA,CAErBjsB,cAAA,OAAKQ,UAAU,uBACXokB,MAAO,CACHusC,gBAAoC,QAArBknB,EAAEprE,GAAagE,UAAM,IAAAonE,OAAA,EAAnBA,EAAqBjrE,qBACtCyrD,gBAAoC,QAArByf,EAAErrE,GAAagE,UAAM,IAAAqnE,OAAA,EAAnBA,EAAqB/qE,wBAG9CvN,cAAA,OAAKQ,UAAU,0BACXokB,MAAO,CACHusC,gBAAoD,QAArConB,EAAEtrE,GAAa8rE,UAAsB,IAAAR,OAAA,EAAnCA,EAAqCnrE,qBACtDyrD,gBAAoD,QAArC2f,EAAEvrE,GAAa8rE,UAAsB,IAAAP,OAAA,EAAnCA,EAAqCjrE,wBAG9Du8C,eAAA,KACItpD,UAAU,qBACVwb,KAAMg9D,EACN77C,OAAO,SACPsyB,IAAI,aACJvE,QAASx1C,GAAKA,EAAEqS,iBAChBnD,MAAO,CACH5nB,MAAOyB,GAAgBy5E,GACvBj7E,OAAQyB,GAAiBw5E,GACzBvqE,KAAMqqE,GAAaC,IAAa,EAAI,EAAIC,GACxCtqE,MAAOqqE,GAAYx5E,IAAiB,EAAIy5E,IAC1CjsD,SAAA,CAED5Z,GAAiBrS,cAACo5E,GAAY,CAC3B54E,UAAU,iBACV64E,QAAmB,OAAV/mE,QAAU,IAAVA,IAAc,gCACvB1U,KAAMk7E,EAAqB,gBAC3Bj8E,IAAK2V,EACL0/C,KAAMx/C,EACNymE,iBAAkBh6E,EAAuBC,EAAUG,wBAAA,GAC5CF,GAAO,IACVrB,UAA8B,QAAnBsB,OAGnBU,cAACo5E,GAAY,CACT54E,UAAU,iBACV64E,QAASL,EACTp7E,KAAMk7E,EACNj8E,IAAKiV,EACLogD,KAAMlgD,EACNmnE,iBAAkBA,QAGzBvmE,GAAU,IAAIwE,MAAM,IAAInI,KAAI,CAAC+wC,EAAG35B,IACf,IAAVA,EAAoB,KACjBrmB,cAAA,OACHQ,UAAWwpB,GAAW,iDAADrpB,OACgC0lB,EAAQ,GACzD1T,EAAQ6C,SAAS,GAAD7U,OAAI0lB,EAAQ,IAAO,iBAAmB,IAC1DzB,MAAO,CAAEsxC,UAAU,UAADv1D,OAAYkN,GAAewY,GAAM,oBAAA1lB,OAAmBmN,GAAeuY,GAAM,SAAQ,QAAA1lB,OAJ9E0lB,MAO5BjnB,GAAcY,cAAA,OAAKQ,UAAU,4BAA2ByrB,SAAEjZ,IAC1D5T,GAAcY,cAAA,OAAKQ,UAAU,2BAA0ByrB,SAAElZ,OAE9D+2C,eAAA,OAAKtpD,UAAU,sBAAqByrB,SAAA,CAChCjsB,cAAA,OAAKQ,UAAU,qBAAoByrB,SAC9B6sD,IAELhvB,eAAA,OAAKtpD,UAAU,sBAAqByrB,SAAA,CAC/B2pB,IAA8B,SAAdpkC,EACX,KACAxR,cAAA,OAAKQ,UAAU,iBACbE,IAAG,GAAAC,OAAKC,aAAsB,gCAAAD,OAA+BgQ,EAAM,KAAAhQ,OAAI6Q,EAAUuf,cAAa,QAC9FtwB,IAAI,SAEXwS,EAAY4C,OAAS,GAAK7V,cAAA,OAAKQ,UAAU,WAAUyrB,SAAEitD,KAC1B,OAA3BD,GAAmCj5E,cAAA,OAAKQ,UAAU,aAChDoS,GAAUkmC,IAAuBh5C,GAAsC,SAA3Bm5E,GAAsCj5E,cAAA,OACjFQ,UAAU,YACVE,IAAG,GAAAC,OAAKC,aAAsB,qCAAAD,OAAoCm4C,EAAkB,QACpFr4C,IAAI,UAELmS,IAAWgjC,IAA2C,OAA3BqjC,GAAoCj5E,cAAA,QAC9DQ,UAAWwpB,GAAW,wBAAyBkvD,GAAkBnoD,cAAcvb,SAAS,SAAW,QAAU,IAAIyW,SAEhG,kBAATta,EACFA,EACS,KAATA,EAAW,IAAAhR,OACHgR,EAAI,KACR,QAGlBm4C,eAAA,OAAKtpD,UAAU,qBAAoByrB,SAAA,CAC9B63B,IAAgB9jD,cAAA,OAAAisB,SACZzY,IAEJswC,GAAe9jD,cAAA,OAAAisB,SAAK,cAAsBjsB,cAAA,OAAAisB,SAAK,SAC/C63B,IAAgB9jD,cAAA,OAAAisB,SACZrZ,EAAM,QAAAjS,OAAWgS,EAAQkD,QAAWpC,IAExCF,GAASvT,cAAA,OAAKQ,UAAU,SAAQyrB,SAAE1Y,UAG3CvT,cAAA,OAAKQ,UAAWwpB,GAAW,cAAe4uD,EAAgB,gBAAkB,IAAK1tB,QAASx1C,GAAKA,EAAE2R,kBAAkB4E,SAC/G69B,eAAA,OAAKtpD,UAAU,mBAAkByrB,SAAA,CAC7BjsB,cAAC8rD,KAAO,CAACkB,UAAU,OAAOrtB,MAAO3P,EAAS,oCAAoC/D,SAC1EjsB,cAACs5E,KAAY,CAAC94E,UAAU,iCAAiC0qD,QAASA,IAAMutB,EAAYvjE,OAExFlV,cAAC8rD,KAAO,CAACkB,UAAU,OAAOrtB,MAAO3P,EAAS,mCAAmC/D,SACzEjsB,cAACw3D,KAAgB,CAACh3D,UAAU,gCAAgC0qD,QAASA,IAAMytB,EAAWzjE,OAE1FlV,cAACu5E,KAAU,CACPvsB,UAAU,OACVrtB,MAAO3P,EAAS,+BAChB83C,gBAAiB1uC,GAAUy/C,EAAiBz/C,GAC5CogD,UAAWA,IAAMd,EAASxjE,EAAKR,IAC/Bw1C,OAAQl6B,EAAS,uCACjBm6B,WAAYn6B,EAAS,sCAAsC/D,SAE3DjsB,cAAC8rD,KAAO,CAACkB,UAAU,OAAOrtB,MAAO3P,EAAS,iCAAiC/D,SACvEjsB,cAAC4rD,KAAa,CAACprD,UAAU,6CAQ3Ci5E,GAAyBA,CAC3BviC,EACAC,EACAgiC,EACAO,EACA78E,KACE,IAADs1B,EACD,MAAM,SACF9zB,EAAQ,KACRE,EAAI,MACJC,EAAK,cACLC,EAAa,UACbE,GACAw6E,GACE,MACFn8E,EAAK,OACLC,EAAM,EACNgV,EAAC,EACDC,GAGU,QAFbigB,EAAIt1B,EAAG0C,wBAAA,GACGm6E,GAAQ,IAAE18E,MAAO,IAAKC,OAAQ,IAAKgV,EAAG,EAAGC,EAAG,IACjDwnE,SAAQ,IAAAvnD,IAAK,GAKbwnD,EAAeh7E,EAAYJ,EAQ3Bq7E,EANgBv7E,EAAW65E,IAGZhhC,IAAoB,OAALl6C,QAAK,IAALA,IAAS,GAAK,MAYlD,MAAO,CACH2Q,KAHiC,OAADuE,QAAC,IAADA,IAAK,GAAK,KAA1BilC,EAAiCyiC,EAIjDhsE,MALiC,OAADqE,QAAC,IAADA,IAAK,GAAK,KAAzBilC,EAAgC0iC,EAMjD58E,MAToBk6C,EAAa0iC,EAUjC38E,OAAQJ,EATas6C,GATF94C,EAAWG,EAAQ05E,IAGpB/gC,IAAsB,OAANl6C,QAAM,IAANA,IAAU,GAAK,YAehB4Z,EACjCq/C,UAAU,cAADv1D,SAzBQtC,IAAaI,EAC5B,GACCw5E,GAAYx5E,GAAiB,EAAInB,IAwBf46E,GAAmB,mBAAAv3E,QAElCg5E,EAAezB,GAAmB,SAc1CkB,GAAe/mD,IAQA,IARC,QAClBgnD,EAAO,KACPz7E,EACAs0D,KAAMwnB,EAAQ,UACdl5E,EAAS,IACT3D,EAAG,iBACHs8E,EAAgB,MAChBv0D,GACWyN,EACX,MAAOwnD,EAAcC,GAAmBxwB,mBAAS,iCAC3CywB,EAAWl7C,iBAAyB,OACnCm7C,EAAiBC,GAAsB3wB,oBAAS,SAAA4wB,EAAAC,EAAAC,EAAAC,EAAA,OAAMZ,GAC3B,QADiDS,EAC/D,QAD+DC,EAC/EJ,EAAS98C,eAAO,IAAAk9C,OAAA,EAAhBA,EAAkBj7B,oBAAY,IAAAg7B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCN,EAAS98C,eAAO,IAAAo9C,OAAA,EAAhBA,EAAkB1nB,qBAAa,IAAAynB,IAAI,EACnCjB,EACAO,EACA78E,MAkCJ,OAhCA2iC,qBAAU,KACN,IAAIC,GAAW,EAOf,OANAC,YAAW,KACHD,GACAq6C,EAAgBT,KAErB,KAEI,KACH55C,GAAW,KAEhB,CAAC45C,IAEJ75C,qBAAU,KACN,IAAIC,GAAW,EAaf,OAZAC,YAAW,KACQ,IAAD46C,EAAAC,EAAAC,EAAAC,EAAVh7C,GACAw6C,EAAmBR,GACe,QADOa,EACrB,QADqBC,EACrCR,EAAS98C,eAAO,IAAAs9C,OAAA,EAAhBA,EAAkBr7B,oBAAY,IAAAo7B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCV,EAAS98C,eAAO,IAAAw9C,OAAA,EAAhBA,EAAkB9nB,qBAAa,IAAA6nB,IAAI,EACnCrB,EACAO,EACA78E,MAGT,KAEI,KACH4iC,GAAW,KAEhB,CAACi6C,EAAUP,EAAkBt8E,IAEzBmD,cAAA,OAAK0sD,IAAKqtB,EACbv5E,UAAWwpB,GAAW,WAAYxpB,GAClCE,IAAKm5E,EACLp5E,IAAK7C,EACLgnB,MAAKrlB,wBAAA,GACEy6E,GACAp1D,GAEP6wC,OAAQA,KAAO,IAADilB,EAAAC,EAAAC,EAAAC,EACVZ,EAAmBR,GACe,QADOiB,EACrB,QADqBC,EACrCZ,EAAS98C,eAAO,IAAA09C,OAAA,EAAhBA,EAAkBz7B,oBAAY,IAAAw7B,IAAI,EACH,QADIE,EACnB,QADmBC,EACnCd,EAAS98C,eAAO,IAAA49C,OAAA,EAAhBA,EAAkBloB,qBAAa,IAAAioB,IAAI,EACnCzB,EACAO,EACA78E,Q,6vBCliBhB,MAAMi+E,GAAwBxwD,KAAOokC,IAAGlkC,MAuClCuwD,GAAex7D,IAI6B,IAJ5B,KAClB+R,EAAI,MACJjL,EAAK,MACLzB,GACwCrF,EACxC,MAAM,SACF6Y,EAAQ,SACRpI,EAAQ,KACRgrD,EAAI,SACJtC,EAAQ,WACRC,EAAU,YACVF,EAAW,SACXpY,GACA/uC,EAEJ,OAAOtxB,cAACo4E,GAAS,CACb/xD,MAAOA,EACPnR,KAAM8lE,EAAK30D,GACX6I,OAAQ8rD,EAAK30D,GAAO3R,KAAO0jB,EAC3BpI,SAAUA,EACVyoD,YAAaA,EACbpY,SAAUA,EACVsY,WAAYA,EACZD,SAAUA,EACV9zD,MAAOA,KAaFq2D,GAAkB9oD,IAKP,IALQ,SAC5BnC,EAAQ,SACRqwC,EAAQ,WACRsY,EAAU,gBACVuC,GACc/oD,EACd,MAAM,SACFiG,EAAQ,gBACRC,EAAe,WACf6B,EAAU,cACVU,EAAa,YACb9B,GACAZ,GAAYy0B,uBAAWt6B,IAAA,IAAC,SACxB+F,EAAQ,gBACRC,EAAe,WACf6B,EAAU,cACVU,EAAa,YACb9B,GACHzG,EAAA,MAAM,CACH+F,WACAC,kBACA6B,aACAU,gBACA9B,oBAEGqiD,EAAaC,GAAkB9xB,mBAAS,GAEzC+xB,EAAqB3mE,IACvBwlB,EAAWxlB,GACX0mE,GAAe5jD,GAAOA,EAAM,KAwBhC,OArBAgI,qBAAU,KACN,IAAIC,GAAW,EAef,OAdAC,YAAW,KACP,GAAID,GAAY07C,EAAc,EAAG,CAC7B,MAAM,SAAE/iD,EAAQ,SAAET,EAAQ,YAAEqC,GAAgB9B,GAAYxH,WAClDkM,EAAWjF,EAASmC,MAAK5kB,GAAQA,EAAKR,KAAO0jB,IACnD,GAAIwE,EACAyjC,EAASzjC,OACN,CAEH,MAAMnI,EAASl1B,YAAA,CAAKmV,GAAIC,eAAWC,MACnColB,EAAY,CAACvF,GAAYA,EAAU72B,UAG5C,KAEI,KACH6hC,GAAW,KAEhB,CAAC4gC,EAAU8a,IAEPrxB,eAACgxB,GAAqB,CACzBl2D,MAAO,CACHi0C,gBAAgB,QAADl4D,OAAUC,aAAsB,4CACjDqrB,SAAA,CAEFjsB,cAAA,OAAKQ,UAAU,iBAAgByrB,SAC3BjsB,cAACs7E,KAAS,CAAArvD,SACLkH,IAAA,IAAC,OAAEl2B,EAAM,MAAED,GAAOm2B,EAAA,OACfnzB,cAACu7E,KAAI,CACD/6E,UAAU,OACVvD,OAAQA,EACRu+E,UAAWnjD,EAAgBxiB,OAC3B4lE,SDrIE,GCsIFC,SAAU,CACNV,KAAM3iD,EACNrI,WACAoI,WACAqgD,YAAa79C,EACbylC,SAAUA,EACVsY,WAAYA,EACZD,SAAU2C,GAEdM,cAAe,EACf3+E,MAAOA,EAAMivB,SAEZ8uD,UAeW,IAA3B1iD,EAAgBxiB,QAAgBi0C,eAAA,OAAKtpD,UAAU,UAASyrB,SAAA,CACrDjsB,cAAA,OAAAisB,SAAM+D,EAAS,2CACfhwB,cAAA,OAAKQ,UAAU,eAAe0qD,QAASpyB,EAAY7M,SAC9C+D,EAAS,iDAGlBhwB,cAACssD,KAAM,CACH9rD,UAAU,WACV0qD,QAASgwB,EAAgBjvD,SAExB+D,EAAS,kC,gmECxKtB,MAAM,MAAE4rD,IAAUC,KACZC,GAAqBxxD,KAAOokC,IAAGlkC,MAK/BuxD,GAAazxD,aAAO4lC,GAAP5lC,CAAkB8hC,MAwB/B4vB,GAAsB1xD,aAAO6+B,KAAP7+B,CAAaiiC,KAsCvBwvB,IAWZE,GAAe18D,IAGA,IAHC,KAClB+R,EAAI,SACJrF,GACW1M,EACX,MAAOk7C,EAAkBC,GAAmBpR,oBAAS,GASrD,OAAOQ,eAACiyB,GAAU,CACd7wB,QAASx1C,IATkBilD,MAUvBjlD,EAAE2R,kBAVqBszC,EAWDrpC,EAV1BspC,KAAKD,GACLD,GAAgB,GAChBh7B,YAAW,KACPg7B,GAAgB,KACjB,MAODzuC,SAAA,CAEDwuC,EAAmBz6D,cAAA,OAAKQ,UAAU,mBAAkByrB,SAACjsB,cAAC66D,KAAa,MAAY,KAC/E5uC,MAMIiwD,GAAgB/pD,IAEP,IAFQ,SAC1BnC,GACYmC,EACZ,MAAOwG,EAAS0wB,GAAcC,oBAAS,GAEvC,OAAOQ,eAAAC,WAAA,CAAA99B,SAAA,CACHjsB,cAAC87E,GAAkB,CAACt7E,UAAU,wBAAwB0qD,QAASA,IAAM7B,GAAW,GAAMp9B,SACjF+D,EAAS,0CAEdhwB,cAACg8E,GAAmB,CAChBrjD,QAASA,EACTnR,SAAUA,IAAM6hC,GAAW,GAC3BW,cAAe,CACXplC,MAAO,CACHk3C,QAAS,SAGjB3R,WAAYn6B,EAAS,wCAAwC/D,SAE7D69B,eAAA,OAAKtpD,UAAU,yBAAwByrB,SAAA,CACnC69B,eAAA,OAAA79B,SAAA,CACK+D,EAAS,uCACVhwB,cAAA,SACCgwB,EAAS,0CAEdhwB,cAAA,OACIQ,UAAU,kBAAiByrB,SAE3BjsB,cAAA,KACIgc,KAAMpb,qFACNu8B,OAAO,SACPsyB,IAAI,aACJ1zC,UAAQ,EAAAkQ,SAERjsB,cAACssD,KAAM,CAAArgC,SAAE+D,EAAS,yCAG1BhwB,cAAC67E,KAAQ,CAACM,OAAK,EAAAlwD,SACXjsB,cAAC47E,GAAK,CAEFQ,OAAQp8E,cAAA,OAAAisB,SACH+D,EAAS,yCACP/D,SAEP69B,eAAA,SAAOtpD,UAAU,mBAAkByrB,SAAA,CAC/B69B,eAAA,MAAA79B,SAAA,CACIjsB,cAAA,MAAAisB,SAAIjsB,cAAA,KAAAisB,SAAI+D,EAAS,2CACjBhwB,cAAA,MAAAisB,SAAIjsB,cAAA,KAAAisB,SAAI+D,EAAS,8CAEpB,CACG,CACIc,MAAO,SACPn0B,MAAOqD,cAAA,OAAAisB,SACF,CACG,MACA,OACFhd,KAAItS,GACKqD,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,QAItC,CACIm0B,MAAO,QACPurD,SAAU,eACV1/E,MAAOqD,cAAA,OAAAisB,SACFxe,GACIwB,KAAIojB,IAAA,IAAC,KAAEz0B,GAAMy0B,EAAA,OAAKryB,cAACi8E,GAAY,CAAY3qD,KAAM1zB,EAAKquB,SAAEruB,GAAnBA,SAGlD,CACIkzB,MAAO,YACPn0B,MAAOqD,cAAA,OAAAisB,SACFxsB,EACIylB,QAAOiO,IAAA,IAAC,SAAEtzB,GAAUszB,EAAA,OAAKtzB,KACzBoP,KAAIskB,IAAA,IAAC,KAAE31B,GAAM21B,EAAA,OAAKvzB,cAACi8E,GAAY,CAAY3qD,KAAM1zB,EAAKquB,SAAEruB,GAAnBA,SAGlD,CACIkzB,MAAO,kBACPn0B,MAAOqD,cAAA,OAAAisB,SACFlsB,EACImlB,QAAOmU,IAAA,IAAC,SAAEx5B,GAAUw5B,EAAA,OAAKx5B,KACzBoP,KAAI0qB,IAAA,IAAC,MAAEh9B,GAAOg9B,EAAA,OAAK35B,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,SAGnD,CACIm0B,MAAO,UACPn0B,MAAOqD,cAAA,OAAAisB,SACF9rB,EACI+kB,QAAOiV,IAAA,IAAC,SAAEt6B,GAAUs6B,EAAA,OAAKt6B,KACzBoP,KAAImrB,IAAA,IAAC,MAAEz9B,GAAOy9B,EAAA,OAAKp6B,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,SAGnD,CACIm0B,MAAO,OACPn0B,MAAOqD,cAAA,OAAAisB,SACF7lB,IACI8e,QAAO2V,IAAA,IAAC,SAAEh7B,GAAUg7B,EAAA,OAAKh7B,KACzBoP,KAAI8rB,IAAA,IAAC,KAAEn9B,GAAMm9B,EAAA,OAAK/6B,cAACi8E,GAAY,CAAY3qD,KAAM1zB,EAAKquB,SAAEruB,GAAnBA,SAGlD,CACIkzB,MAAO,cACPn0B,MAAOmtD,eAAA,OAAA79B,SAAA,CACFnrB,OAAOC,OAAOgF,GACVkJ,KAAImsB,IAAA,IAAC,MAAEz+B,GAAOy+B,EAAA,OAAKp7B,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,MAC3CqD,cAAA,OAAAisB,SAAM+D,EAAS,+CAGvB,CACIc,MAAO,aACPn0B,MAAOqD,cAAA,OAAAisB,SACFnrB,OAAOC,OAAOkF,GACVgJ,KAAIqtE,IAAA,IAAC,MAAE3/E,GAAO2/E,EAAA,OAAKt8E,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,SAGnD,CACIm0B,MAAO,iBACPn0B,MAAOqD,cAAA,OAAAisB,SACF,CACG,OACA,SACA,SACFhd,KAAItS,GACKqD,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,QAItC,CACIm0B,MAAO,iBACPn0B,MAAOqD,cAAA,OAAAisB,SACFprB,EACIqkB,QAAOq3D,IAAA,IAAC,SAAE18E,GAAU08E,EAAA,OAAK18E,KACzBoP,KAAIutE,IAAA,IAAC,MAAE7/E,GAAO6/E,EAAA,OAAKx8E,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,SAGnD,CACIm0B,MAAO,kBACPn0B,MAAOqD,cAAA,OAAAisB,SACFxvB,IACIwS,KAAIwtE,IAAA,IAAC,MAAE9/E,GAAO8/E,EAAA,OAAKz8E,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,SAGnD,CACIm0B,MAAO,gBACPn0B,MAAOqD,cAAA,OAAAisB,SACFnrB,OAAOkW,KAAKtO,IACRuG,KAAItS,GAASqD,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,QAG7C,CACIm0B,MAAO,kBACPn0B,MAAOqD,cAAA,OAAAisB,SACF,CACG,aACA,UACFhd,KAAItS,GACKqD,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,QAItC,CACIm0B,MAAO,oBACPn0B,MAAOqD,cAAA,OAAAisB,SACHjsB,cAACi8E,GAAY,CAAC3qD,KAAM,QAAQrF,SAAC,aAGrC,CACI6E,MAAO,sBACPn0B,MAAOqD,cAAA,OAAAisB,SACFnrB,OAAOkW,KAAK1V,GACR2N,KAAItS,GAASqD,cAACi8E,GAAY,CAAa3qD,KAAM30B,EAAMsvB,SAAEtvB,GAArBA,QAG7C,CACIm0B,MAAO,uBACPn0B,MAAOqD,cAAA,OAAAisB,SACF5nB,EACI6gB,QAAOw3D,IAAA,IAAC,SAAE78E,GAAU68E,EAAA,OAAK78E,KACzBoP,KAAI0tE,IAAA,IAAC,IAAEn7E,GAAKm7E,EAAA,OAAK38E,cAACi8E,GAAY,CAAW3qD,KAAM9vB,EAAIyqB,SAAEzqB,GAAjBA,UAGnDyN,KAAI2tE,IAIC,IAJA,MACH9rD,EAAK,SACLurD,EAAQ,MACR1/E,GACHigF,EACG,OAAO9yB,eAAA,MAAA79B,SAAA,CACH69B,eAAA,MAAA79B,SAAA,CACIjsB,cAAC+7E,GAAU,CAAA9vD,SAAE6E,IACZurD,GAAYvyB,eAAAC,WAAA,CAAA99B,SAAA,CAAEjsB,cAAA,SAAMA,cAAC+7E,GAAU,CAAA9vD,SAAEowD,UAEtCr8E,cAAA,MAAAisB,SAAKtvB,MALOm0B,UApJpB,4B,uuDCjJ5B,MAAM+rD,G9EAkC,WAA6C,IAA5CC,EAAalmE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,GAAAA,UAAA,GAFhB,KAG9BmmE,EAAiBD,EAErB,MAAO,CACHtzD,MAAOA,KACH,MAAMnQ,EAASI,KAAK4O,SAEpB,OAAI00D,EAAiB1jE,GACjB0jE,GAAkBD,GACX,IAEPC,EAAiBD,GACV,K8EZME,GACvBC,GAAyB3yD,KAAOokC,IAAGlkC,MAKnC0yD,GAA0B5yD,aAAOqmC,KAAPrmC,CAAc8hC,MAiEjC+wB,GAAmB1wB,sBAAW,CAAAltC,EAMtBmtC,KAAkD,IAN3B,SACxC18B,EAAQ,gBACR83C,EAAe,SACfzH,EAAQ,WACRsY,EAAU,gBACVuC,GACe37D,EACf,MAAM69D,EAAe,iBACfC,EAAgBx+C,iBAAyB,OACzC,SACFlH,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjBqB,EAAW,YACXC,EAAW,kBACXpB,EAAiB,qBACjBW,EAAoB,SACpB4B,EAAQ,cACRhC,EAAa,QACbR,GACAT,GAAYy0B,uBAAWx6B,IAAA,IAAC,SACxBwF,EAAQ,iBACRsB,EAAgB,kBAChBP,EAAiB,YACjBqB,EAAW,YACXC,EAAW,kBACXpB,EAAiB,qBACjBW,EAAoB,SACpB4B,EAAQ,cACRhC,EAAa,QACbR,GACHxG,EAAA,MAAM,CACHwF,WACAsB,mBACAP,oBACAqB,cACAC,cACApB,oBACAW,uBACA4B,WACAhC,gBACAR,gBAEG+jC,EAAUC,GAAerT,mBAAS,IAClCg0B,EAAaC,GAAkBj0B,oBAAS,GACzCk0B,EAAiBnhD,MAAU3mB,IAC7BkjB,EAAkB,CAAE/5B,KAAM,OAAQlC,MAAO+Y,EAAEynB,OAAOxgC,UACnD,KAEG8gF,EAAa3+C,uBAAa5pB,IAC5BmrD,EAASnrD,GACT6kB,EAAY7kB,EAAKR,MAClB,CAAC2rD,EAAUtmC,IAiCd,OA/BAyF,qBAAU,KACF9G,IACA2nC,EAAS3nC,GACTqB,EAAYrB,EAAkBhkB,IAC9B6kB,OAEL,CAAC8mC,EAAU3nC,EAAmBqB,EAAaR,IAE9CiG,qBAAU,KACN9Q,aAAauB,QAAQ,wBAAyB0I,EAAQ2I,YACtDwmC,EAAgBnvC,KACjB,CAACmvC,EAAiBnvC,IAErB6G,qBAAU,KACN,MAAMk+C,EAAQxlD,GAAYylD,WACtBnvD,GAASA,EAAM+J,oBACfqlD,IACQA,GACAjhB,GAAYnlC,GAAOA,EAAM,OAKrC,MAAO,KACHkmD,OAEL,IAGH5wB,8BAAoBJ,GAAK,UAAY,IAE9B1sD,cAACi9E,GAAsB,CAAAhxD,SAC1BjsB,cAACk9E,GAAuB,CACpBv9C,MAAOmqB,eAAA,OAAKtpD,UAAU,+BAA8ByrB,SAAA,CAChDjsB,cAAC69E,GAAkB,CAACr9E,UAAU,mCAAmCwvB,SAAUA,EAAS/D,SAC/E0L,EAAS9hB,SAEdi0C,eAAA,OAAKtpD,UAAU,2BAA0ByrB,SAAA,CACrCjsB,cAAA,OACIQ,UAAU,iBAAgByrB,SAE1BjsB,cAACk8E,GAAa,CAAClsD,SAAUA,MAE7BhwB,cAAC+sD,KAAQ,CACLtL,QAASzhD,cAACisD,KAAI,CAAAhgC,SACT,CACG,CACItvB,MAAO86B,GAAgB/X,MAAMle,IAC7B5E,MAAOozB,EAAS,oCAEpB,CACIrzB,MAAO86B,GAAgB75B,KAAK4D,IAC5B5E,MAAOozB,EAAS,mCAEpB,CACIrzB,MAAO86B,GAAgBjkB,IAAIhS,IAC3B5E,MAAOozB,EAAS,kCAEpB,CACIrzB,MAAO86B,GAAgBhkB,IAAIjS,IAC3B5E,MAAOozB,EAAS,kCAEpB,CACIrzB,MAAO86B,GAAgB5J,IAAIrsB,IAC3B5E,MAAOozB,EAAS,sCAEtB/gB,KAAIojB,IAAuB,IAAtB,MAAE11B,EAAK,MAAEC,GAAOy1B,EACnB,OAAOryB,cAACisD,KAAKC,KAAI,CAAahB,QAASA,IAAM/vB,EAASx+B,GAAOsvB,SACxDrvB,GADkBD,QAIvBsvB,SAERjsB,cAAA,OACIQ,UAAU,iBAAgByrB,SAE1BjsB,cAACowE,KAAqB,QAU9BpwE,cAAC8rD,KAAO,CAACnsB,MAAO3P,EAAS,0CAA0C/D,SAC/DjsB,cAAA,OACIQ,UAAU,iBACV0qD,QAAS3kC,UACL,IAAIu3D,GAAgB,EAKpB,GAJIjB,GAAqBrzD,UACrBs0D,EAAgB7hE,OAAO8hE,QAAQ/tD,EAAS,gCAGxC8tD,EAAe,CACf,MAAME,ExEvEZrmD,KAC1B,MAAMsmD,EAAsB,GACtBC,EAAYvtD,GAAqB9a,OAEvC,IAAK,IAAI2hB,EAAM,EAAGA,EAAMG,EAAS9hB,OAAQ2hB,IAAO,CAC5C,MAAM2mD,EAAQA,CAAC38E,EAAe7E,KAC1B,MAAM0pB,EAAQ6K,GAAoB1vB,GAEb,kBAAV6kB,IACc,kBAAV1pB,IAAoByhF,EAAS/3D,GAAS1pB,GAC5B,kBAAVA,IAAoByhF,EAAS/3D,GAAM,GAAA1lB,OAAMhE,IAC/B,mBAAVA,IAAqByhF,EAAS/3D,GAAM,GAAA1lB,OAAMhE,IACxC,MAATA,IAAeyhF,EAAS/3D,GAAS,MAIvC+3D,EAAWhnE,MAAM8mE,GAAWjvE,KAAI,IAAM,MACtC,IACF/I,EAAG,QACH8L,EAAO,UAEPZ,EAAS,OACTU,EAAM,IAEN0B,EAAG,UACHhC,EAAS,WACTc,EAAU,eACVI,EAAc,cAEdF,EAAa,eAEblT,EAAc,SACdoS,EAAQ,QACRuC,EAAO,IACPR,EAAG,OACHH,EAAM,YACNJ,EAAW,gBACXmB,EAAe,aACfG,EAAY,OACZrD,EAAM,KACND,EAAI,OACJP,EAAM,MACNM,EAAK,eACLiD,EAAc,cACd7B,EAAa,mBACb0B,EAAkB,eAClBH,EAAc,aACdI,EAAY,iBACZF,EAAgB,OAChBlB,EAAM,WACNxT,EAAU,YACVyU,EAAW,QACXlB,EAAO,KACP/U,EAAI,UACJ0T,EAAS,cACTD,EAAa,QACbhS,EAAO,eACPkV,EAAc,SACdb,EAAQ,eACRZ,EAAc,cACdD,EAAa,kBACbG,EAAiB,iBACjBD,EAAgB,cAChBM,EAAa,kBACbiB,EAAiB,MACjBf,EAAK,KACL5B,EAAI,cACJC,EAAa,cACbuC,EAAa,QACbR,EAAO,UACPlC,GAAS,YACTwB,GAAW,cACXmB,IACAujB,EAASH,GACP6mD,GAAyBtmE,KAAKmmB,UAAU1pB,GAE9C2pE,EAAM,SAAUxtE,GAChBwtE,EAAM,QAASltE,GACfktE,EAAM,OAAQvgF,GACdugF,EAAM,YAAa3sE,GACnB2sE,EAAM,OAAO,GAADx9E,OAAKgR,IACjBwsE,EAAM,kBAAmB1sE,IACzB0sE,EAAM,WAAYj4E,GAClBi4E,EAAM,eAAgBlrE,GAAYzF,KAAK,MACvC2wE,EAAM,SAAU7qE,GAChB6qE,EAAM,SAAU5qE,GAChB4qE,EAAM,MAAO3qE,GACb2qE,EAAM,MAAO1qE,GACb0qE,EAAM,WAAYzqE,GAClByqE,EAAM,UAAWxqE,GACjBwqE,EAAM,YAAalqE,GACnBkqE,EAAM,cAAe/+E,GACrB++E,EAAM,kBAAmBrrE,GACzBqrE,EAAM,qBAAsBprE,GAC5BorE,EAAM,sBAAuBnrE,GAC7BmrE,EAAM,UAAWvrE,GACjBurE,EAAM,wBAAyBxrE,EAAQ6C,SAAS,MAChD2oE,EAAM,mBAAoBxrE,EAAQ6C,SAAS,MAC3C2oE,EAAM,yBAA0BxrE,EAAQ6C,SAAS,MACjD2oE,EAAM,oBAAqBxrE,EAAQ6C,SAAS,MAC5C2oE,EAAM,qBAAsBxrE,EAAQ6C,SAAS,MAC7C2oE,EAAM,2BAA4BxrE,EAAQ6C,SAAS,MACnD2oE,EAAM,sBAAuBxrE,EAAQ6C,SAAS,MAC9C2oE,EAAM,4BAA6BxrE,EAAQ6C,SAAS,MACpD2oE,EAAM,mBAAoBvqE,GAC1BuqE,EAAM,gBAAiBtqE,GACvBsqE,EAAM,qBAAsBrqE,GAC5BqqE,EAAM,wBAAyBpqE,GAC/BoqE,EAAM,iBAAkBnqE,GACxBmqE,EAAM,OAAQjtE,GACditE,EAAM,aAAc/sE,GACpB+sE,EAAM,cAAehtE,EAAO3D,KAAK,MACjC2wE,EAAM,mBAAoBnsE,EAAQC,GAClCksE,EAAM,mBAAoBnsE,EAAQE,GAClCisE,EAAM,uBAAwBnsE,EAAQhV,OACtCmhF,EAAM,wBAAyBnsE,EAAQ/U,QACvCkhF,EAAM,oBAAqBrsE,GAC3BqsE,EAAM,iBAAkBvsE,GACxBusE,EAAM,iBAAkBzsE,GACxBysE,EAAM,iBAAkB9+E,EAAQ5B,MAChC0gF,EAAM,qBAAsB9+E,EAAQ3B,UACpCygF,EAAM,iBAAkB9+E,EAAQ1B,MAChCwgF,EAAM,iBAAkB9+E,EAAQzB,MAChCugF,EAAM,sBAAuB9+E,EAAQxB,UACrCsgF,EAAM,uBAAwB9+E,EAAQvB,WACtCqgF,EAAM,wBAAyB9+E,EAAQtB,YACvCogF,EAAM,sBAAuB9+E,EAAQrB,WACrCmgF,EAAM,iBAAkB9rE,GACxB8rE,EAAM,kBAAmB7rE,GACzB6rE,EAAM,2BAA4B3rE,GAClC2rE,EAAM,kBAAmB7+E,GACzB6+E,EAAM,0BAA2BzrE,EAAeT,GAChDksE,EAAM,0BAA2BzrE,EAAeR,GAChDisE,EAAM,8BAA+BzrE,EAAe1V,OACpDmhF,EAAM,+BAAgCzrE,EAAezV,QACrDkhF,EAAM,eAAgBtrE,GACtBsrE,EAAM,gBAAiBjrE,EAAYC,kBACnCgrE,EAAM,sBAAuBjqE,GAC7BiqE,EAAM,kBAAmB9sE,GACzB8sE,EAAM,oBAAqB7sE,EAAUrP,MACrCk8E,EAAM,0BAA2B7sE,EAAU3P,WAC3Cw8E,EAAM,mCAAoC7sE,EAAUC,mBACpD4sE,EAAM,4BAA6B7sE,EAAU1O,aAC7Cu7E,EAAM,+BAAgC7sE,EAAUzO,eAChDs7E,EAAM,+BAAgC7sE,EAAUxO,eAChDq7E,EAAM,2BAA4B7sE,EAAUvO,YAC5Co7E,EAAM,0BAA2B7sE,EAAUlQ,WAC3C+8E,EAAM,0BAA2B7sE,EAAUvP,WAC3Co8E,EAAM,0BAA2B7sE,EAAUxP,WAC3Cq8E,EAAM,6BAA8B7sE,EAAUpO,aAC9Ci7E,EAAM,6BAA8B7sE,EAAUpP,aAC9Ci8E,EAAM,2BAA4B7sE,EAAUnQ,YAC5Cg9E,EAAM,8BAA+B7sE,EAAUjP,eAC/C87E,EAAM,8BAA+B7sE,EAAUhP,eAC/C67E,EAAM,4BAA6B7sE,EAAUpQ,aAC7Ci9E,EAAM,sBAAuB7sE,EAAU5P,QACvCy8E,EAAM,uBAAwB7sE,EAAUjQ,SACxC88E,EAAM,yBAA0BhqE,EAAc,IAC9CgqE,EAAM,0BAA2BhqE,EAAc,IAC/CgqE,EAAM,0BAA2BhqE,EAAc,IAC/CgqE,EAAM,4BAA6BhqE,EAAc,IACjDgqE,EAAM,yBAA0B/pE,GAAc,IAC9C+pE,EAAM,0BAA2B/pE,GAAc,IAC/C+pE,EAAM,0BAA2B/pE,GAAc,IAC/C+pE,EAAM,4BAA6B/pE,GAAc,IACjD+pE,EAAM,2BAA4B9pE,EAAgB,IAClD8pE,EAAM,4BAA6B9pE,EAAgB,IACnD8pE,EAAM,4BAA6B9pE,EAAgB,IACnD8pE,EAAM,8BAA+B9pE,EAAgB,IACrD8pE,EAAM,wBAAyBjrE,EAAYE,QAC3C+qE,EAAM,oCAAqC7pE,EAAkB,IAC7D6pE,EAAM,qCAAsC7pE,EAAkB,IAC9D6pE,EAAM,qCAAsC7pE,EAAkB,IAC9D6pE,EAAM,uCAAwC7pE,EAAkB,IAChE6pE,EAAM,iCAAkC9qE,EAAcD,QACtD+qE,EAAM,0BAA2B5pE,EAAe,IAChD4pE,EAAM,2BAA4B5pE,EAAe,IACjD4pE,EAAM,2BAA4B5pE,EAAe,IACjD4pE,EAAM,6BAA8B5pE,EAAe,IACnD4pE,EAAM,uBAAmD,OAA3BE,GAAkC,GAAKA,IACrEJ,EAAU3uC,KAAK8uC,EAASnvE,IAAIoiB,IAAkB7jB,KAAK,MAGvD,MAAO,CACHmjB,GAAqBnjB,KAAK,KAC1BywE,EAAUzwE,KAAK,OACjBA,KAAK,OwEnHyC8wE,CAAcpmD,GAAYxH,WAAWiH,UAErDhc,GACIuc,GAAYxH,WAAW+H,SACvB,IAAImyB,KAAK,CAACozB,GAAU,CAAEn/E,KAAM,aAC5B,YAEJo6B,EAAiB,cAEvBhN,SAEFjsB,cAACw3D,KAAgB,QAGzBx3D,cAAC8rD,KAAO,CAAwBrK,QAASzxB,EAAS,wCAAwC/D,SACtF69B,eAAA,OACItpD,UAAU,iBACV0qD,QAASA,KACL,MAAM/tB,EAASthB,SAAS0kB,eAAe68C,GACnCjgD,IAAWmgD,GACXngD,EAAOmC,SAEbrT,SAAA,CAEFjsB,cAAA,SAAkC0sD,IAAK2wB,EACnCx+E,KAAK,OACL6V,GAAI0oE,EACJhyB,OAAO,OACP5qD,UAAU,sBACV8qD,SAAU/kC,UAAa,IAADg4D,EAClB,MAAM50B,EAAgC,QAAxB40B,EAAGlB,EAAcpgD,eAAO,IAAAshD,OAAA,EAArBA,EAAuB/yB,OAClC,YAAEhzB,GAAgBN,GAAYxH,WAC9B8tD,EAAgBA,KAClB7hB,GAAYnlC,GAAOA,EAAM,IACzB+lD,GAAe,GACfthD,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,4BAClBmM,YAAanM,EAAS,mCAG9B,IAAIyuD,GAAa,EAEbjmD,IACAimD,EAAaxiE,OAAO8hE,QAAQ/tD,EAAS,oCAErCyuD,GAAc90B,GAAYA,EAAS,IACnC4zB,GAAe,GACfmB,KAAK1mE,MAAgB2xC,EAAS,GAAI,CAC9Bg1B,SAAStlE,GACL,MAAM6hB,EAAepJ,GAAczY,GAE/B6hB,EAAarlB,OAAS,GACtBmkB,EAAYkB,EAAcA,EAAa,GAAGxmB,IAC1CioD,GAAYnlC,GAAOA,EAAM,IACzB6oC,EAASnlC,EAAa,IACtBqiD,GAAe,IAEfiB,KAGRxlE,MAAOwlE,MAGX7hB,GAAYnlC,GAAOA,EAAM,IACzB+lD,GAAe,MAErB,UAAA58E,OA1CgB+7D,IA4CrB4gB,EAAct9E,cAAC4+E,KAAe,IAAM5+E,cAAC4+D,KAAc,QAClD,GAAAj+D,OAvDO28E,IAyDjBt9E,cAAA,OACIQ,UAAU,8BACV0qD,QAASA,IAAM/xB,GAAc,GAAOlN,SAEpCjsB,cAAC4rD,KAAa,SAGtB5rD,cAAA,OAAKQ,UAAU,sBAAqByrB,SAChCjsB,cAAC43D,KAAK,CACFp3D,UAAU,sBACVq3D,YAAa7nC,EAAS,0CACtBs7B,SAAUkyB,EACVzlB,YAAU,aAAAp3D,OAJQ+7D,SAQ9B/jC,QAASA,EACTkmD,cAAc,EACdC,MAAM,EACN/iB,gBAAgB,EAChBgjB,aAAa,EACbC,UAAWA,IAAM,KACjBnuB,QAASA,IAAM13B,GAAc,GAC7Bn8B,MAAO,IAAIivB,SAEXjsB,cAACi7E,GAAe,CACZjrD,SAAUA,EACVqwC,SAAUod,EACV9E,WAAYA,EACZuC,gBAAiBA,WAM3B+D,GAA2B30D,KAAOokC,IAAGnC,MAQrCsxB,GAAqB1qD,IAIA,IAJC,SACxBnD,EAAQ,SACR/D,GAEiBkH,EADd1T,EAAIzE,YAAAmY,EAAA,yBAEP,MAAM,YACFqF,EAAW,SACXb,GACAO,GAAYy0B,uBAAWp5B,IAAA,IAAC,YACxBiF,EAAW,SACXb,GACHpE,EAAA,MAAM,CACHiF,cACAb,gBAkBJ,OAfA6H,qBAAU,KACN,IAAIQ,EAAiBC,IACjBA,EAAGlY,iBACIiI,EAAS,kCAOpB,OAJIwI,GAAeb,EAAS9hB,OAAS,GACjCoG,OAAO6jB,iBAAiB,eAAgBE,GAGrC,KACH/jB,OAAO8jB,oBAAoB,eAAgBC,MAEhD,CAACrI,EAAS9hB,OAAQ2iB,EAAaxI,IAE3B85B,eAACm1B,GAAwB1/E,wBAAA,GAAKkgB,GAAI,IAAAwM,SAAA,CACpCA,EAAWuM,GAAeb,EAAS9hB,OAAS,GAAM7V,cAAA,QAAMQ,UAAU,iBAAgByrB,SAAC,e,0gMCjYrF,MAAMizD,GAAiC50D,KAAOokC,IAAGlkC,KAyE9CH,IAMG80D,GAAiC70D,KAAOokC,IAAGtC,MA4E3CgzB,GAAmB90D,KAAOokC,IAAGnC,MAkB7B8yB,GAAa/0D,KAAOokC,IAAGO,MAcvBqwB,GAAah1D,KAAO4jC,KAAIqxB,MAIxBC,GAAgBl1D,KAAOokC,IAAG+wB,MAsB1BC,GAAiBp1D,aAAOk1D,GAAPl1D,CAAqBq1D,MAKtCC,GAAct1D,aAAOk1D,GAAPl1D,CAAqBu1D,M,sDCpKhDC,qBAAU,CACNC,WAAY,KAEhB,MAAMC,GAAqB,CACvBC,OAAQ,CAAC,SAAU,aACnBC,OAAQ,CAAC,SAAU,aACnBC,MAAO,CAAC,SAAU,aAClBC,KAAM,CAAC,SAAU,aACjBC,SAAU,CAAC,SAAU,eAGjBpjF,OAAQ6kC,GAAc9kC,MAAO+kC,IAAgBhlC,EA4hBtCujF,OA3hBf,WAAgB,IAADC,EACX,MAAM,YACFhjD,EAAW,SACXijD,GACAnjD,GAAWsvB,uBAAWptC,IAAA,IAAGse,SAAS,YAAEN,EAAW,kBAAEC,IAAqBje,EAAA,MAAM,CAC5EihE,SAAUhjD,EACVD,oBAGApN,aAAcswD,EACdvwD,UAAWwwD,EAAiB,SAC5B1wD,EAAQ,gBACRI,EAAe,aACfL,EACAM,SAAUswD,EAAY,oBACtBpwD,GACA5C,GAAQg/B,uBAAWx6B,IAAA,IAAC,aACpBhC,EAAY,UACZD,EAAS,SACTF,EAAQ,gBACRI,EAAe,aACfL,EAAY,SACZM,EAAQ,oBACRE,GACH4B,EAAA,MAAM,CACHhC,eACAD,YACAF,WACAI,kBACAL,eACAM,WACAE,4BAEG8N,EAAgBuiD,GAAmBt3B,oBAAS,IAC5CtwC,EAAO47C,GAAYtL,mBAAS,KAC5B+K,EAAYC,GAAiBhL,mBAA+B,WAC5Du3B,EAAWC,GAAgBx3B,mBAAS,IACpCy3B,EAAiBC,GAAsB13B,oBAAS,IAChD23B,EAAgBC,GAAqB53B,oBAAS,GAE/C63B,EAAetiD,iBAA0B,MACzCyhB,EAAmBzhB,iBAA0B,MAC7C0hB,EAAsB1hB,iBAA0B,MAChDP,EAAkBO,iBAA0B,MAC5C2hB,EAAiB3hB,iBAA0B,MAC3CqiB,EAAoBriB,iBAA0B,MAC9CiiB,EAAyBjiB,iBAA0B,MACnDgiB,EAA0BhiB,iBAA0B,MACpDsiB,EAAgBtiB,iBAA0B,MAC1C6hB,EAAkB7hB,iBAA0B,MAC5C8hB,EAAgB9hB,iBAA0B,MAC1CmiB,EAAgBniB,iBAA0B,MAC1CkiB,EAAiBliB,iBAA0B,MAC3C+hB,EAAoB/hB,iBAA0B,MAC9C4hB,EAAmB5hB,iBAA0B,MAC7CoiB,EAAmBpiB,iBAA0B,MAC7CuiB,EAAkBviB,iBAA0B,MAC5CwiB,EAAoBxiB,iBAA0B,OAC7CwhB,GAAaiJ,mBAAS,CACzBhJ,mBACAC,sBACAjiB,kBACAkiB,iBACAU,oBACAJ,yBACAD,0BACAM,gBACAT,kBACAC,gBACAK,gBACAD,iBACAH,oBACAH,mBACAQ,mBACAG,kBACAC,sBAGE+/B,EAAoBviD,iBAA0B,MAC9CwiD,EAAiBxiD,iBAAuB,MACxCyiD,EAAiBziD,iBAAuB,OAEvCmlB,EAAkBu9B,GAAuBj4B,mBAAS,GAEzD9pB,qBAAU,KACNmhD,MACD,CAACA,IACJnhD,qBAAU,KACFpP,GAAiBG,MACtB,CAACH,EAAiBG,IAErBiP,qBAAU,KACY,CACd,cACA,iBACA,iBAGMvoB,SAAQuqE,IAAc,IAADC,EAAAC,EAC3B7lE,SAASpe,KAAKmnB,MAAM+8D,YAAYH,EAA0C,QAAjCC,EAAoB,QAApBC,EAAE3xD,EAAanL,aAAK,IAAA88D,OAAA,EAAlBA,EAAqBF,UAAU,IAAAC,IAAI,SAEnF,CAAC1xD,IAEJyP,qBAAU,KAAO,IAADoiD,EACZ,MAAM3/C,EAA6B,QAA1B2/C,EAAGtjD,EAAgBrB,eAAO,IAAA2kD,OAAA,EAAvBA,EAAyBziD,WAAW,MAC1C1C,EAAUD,GAAQ9L,WAAW+L,QAC/BwF,IACAA,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChChI,EAAI80B,sBAAwB,OAC5BxzB,GAAYtB,KAGa,IAAzBw+C,GAAgCoB,KAAQC,KAAK,CAC7ClN,OAAQ,CACJmN,SAAU,CACN,mBACA,cACA,sBACA,aACA,yBACA,kBACA,yBACA,SACA,yBACA,mBACA,uBAEJC,KAAM,CAAC,mBAEX9yD,OAAQA,KACJ,MAAM+yD,ExE/FWC,MAC7B,IACI,MAAMC,EAAmBzzD,aAAaC,QAAQ,gBACxCyzD,EAA0B1zD,aAAaC,QAAQ,aAC/C0zD,EAAgBD,EAChBlqE,GAAgBH,KAAKC,MAAMoqE,IAC3B,KAEAE,EAAe,IAAIthD,gBAAgB/kB,OAAOgS,SAASgT,QAASnT,IAAI,QACtE,GAAIw0D,EAAa,CAAC,IAADC,EAAAC,EASb,MAAQttE,KAAMqmB,GAAgBF,GAAWinD,GACnCptE,EAAOgD,GAAgBqjB,IACvB,UAAExpB,EAAS,iBAAEU,GAAqByC,EACxC,GAAkB,WAAdnD,GAA+C,WAArBU,EAC1B,OAAO4oB,GAAWinD,GAAaptE,KAGnC,MAAMutE,EAAYljF,YAAA,GAAQ2V,GAI1B,MAHkB,YAAdnD,IAAyB0wE,EAAa5wE,QAAgC,QAAzB0wE,EAAgB,OAAbF,QAAa,IAAbA,OAAa,EAAbA,EAAexwE,eAAO,IAAA0wE,IAAI,IACrD,YAArB9vE,IAAgCgwE,EAAalwE,eAA8C,QAAhCiwE,EAAgB,OAAbH,QAAa,IAAbA,OAAa,EAAbA,EAAe9vE,sBAAc,IAAAiwE,IAAI,IAE5FC,EACJ,OAAsB,OAAlBJ,GAA+CzhF,UAArBuhF,EAC1BE,EAEJ5tE,KACT,MAAOiB,GAEL,OADAqD,QAAQC,MAAMtD,GACPjB,OwE2DuBytE,GAEtBzlD,EAAQwlD,GACR/pD,GAAYxH,WAAWsJ,YAAY,CAACioD,GAAgBA,EAAcvtE,IAClEksE,GAAgB,IAEpB8B,aAAav2D,EAAYw2D,GACrB5pE,QAAQC,MAAM,mBAAoBmT,EAAYw2D,GAC9C1mD,KAAajjB,MAAM,CACfkjB,QAASzL,KAAc,uBAAuBtE,MAGtDy2D,SAAUA,KACNhuB,EAASnkC,KAAc,4BACvBmwD,GAAgB,QAGzB,CAACH,IAEJ,MACIoC,aAAcC,GC/MI,SAAC,GAMR,IALfrC,EAKc,EALdA,qBACAsC,EAIc,EAJdA,SACAC,EAGc,EAHdA,aACAC,EAEc,EAFdA,eACAC,EACc,EADdA,WACc,EAIV1mD,GAAQmwB,uBAAW,SAAAn+B,GAAK,MAAK,CAC7B7d,OAAQ6d,EAAMtZ,KAAKvE,OACnB1O,KAAMusB,EAAMtZ,KAAK5D,UAAUrP,UAJ3BA,EAFU,EAEVA,KACA0O,EAHU,EAGVA,OAHU,EAQ0B24C,mBAAS,IARnC,oBAQPu5B,EARO,KAQOM,EARP,KAURC,EAAWvkD,kBAAO,GAClBwkD,EAAcxkD,iBAAO,GAmC3B,OAlCAW,qBAAU,YAEU,QAAX7uB,GAA6B,QAAT1O,KACG,IAArBmhF,EAASnmD,SACTomD,EAAYpmD,SAAW,IACE,IAAzBwjD,IAEH4C,EAAYpmD,SAAW,EACvBkmD,EAAgB,GAAD,OAAIviF,aAAJ,wBACfoiF,IAEAnB,KAAQC,KAAK,CACTlN,OAAQ,CACJmN,SAAU,CACN,2BACA,oBACA,kBACA,yBAEJC,KAAM,CAAC,uBAEX9yD,OAAQ,WACJk0D,EAASnmD,SAAU,EACnB8lD,KAEJH,SAAU,WACNQ,EAASnmD,SAAU,EACnBimD,KAEJR,aAAcO,OAGvB,CAACtyE,EAAQ1O,EAAMw+E,EAAsBsC,EAAUC,EAAcC,EAAgBC,IAEzE,CACHL,gBD2JAS,CAAW,CACX7C,uBACAuC,aAAcA,KAAO,IAADO,EAChB3C,GAAgB,GAChB,MAAM3+C,EAA6B,QAA1BshD,EAAGjlD,EAAgBrB,eAAO,IAAAsmD,OAAA,EAAvBA,EAAyBpkD,WAAW,MAC5C8C,IACAA,EAAIgI,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GAChChI,EAAI80B,sBAAwB,OAC5BxzB,GAAYtB,KAGpB8gD,SAAUA,KACNnC,GAAgB,IAEpBsC,WAAYA,KACRtuB,EAASnkC,KAAc,4BACvBmwD,GAAgB,IAEpBqC,eAAgBA,CAAC92D,EAAYw2D,KACzB5pE,QAAQC,MAAM,mBAAoBmT,EAAYw2D,GAC9C1mD,KAAajjB,MAAM,CACfkjB,QAASzL,KAAc,uBAAuBtE,SAKnDiS,EAAWolD,GAAcl6B,oBAAS,GAEzC9pB,qBAAU,KACN,MAAMikD,EAAoB5nE,SAASpe,KAAK8hC,UAEpCihD,EAAUiD,EAAkBhiD,IAAI,wBAC/BgiD,EAAkB7mE,OAAO,0BAC/B,CAAC4jE,IAEJ,MAAMkD,GAAkB5kD,uBAAY,SAAC1F,GAA0C,IAAxBuqD,EAAU/sE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GACzD+sE,IAAepmD,GAEnByjD,GAAmBp7E,GAAyB,mBAAXwzB,EAAuBA,GAAUxzB,MACnE,CAAC23B,IAEEqmD,GAAoB/kD,kBAAO,GAC3BglD,GAAehoE,SAAS0kB,eAAe,qBAC7Cf,qBAAU,KACFqkD,IAAgB7zD,IAA0C,IAA9B4zD,GAAkB3mD,UAAgD,IAA3BwwB,SACnEm2B,GAAkB3mD,SAAU,EAE5BwwB,KAAY,CACRq2B,IAAK,kGACLC,aAAc,CACVt2B,OACAA,OACAA,KAA2B,CACvBu2B,YAAa,SACbC,YAAY,IACbC,SAASL,GAAc,CACtBM,UAAWn0D,EAAS,kCACpBo0D,UAAWp0D,EAAS,qCACpBq0D,gBAAiBr0D,EAAS,2CAC1Bs0D,iBAAiB,EACjBC,WAAW,EACXC,aAAcx0D,EAAS,wCACvBy0D,mBAAoBz0D,EAAS,8CAC7B00D,yBAA0B10D,EAAS,2CACnC20D,4BAA6B30D,EAAS,kDACtC40D,kBAAmB50D,EAAS,uCAC5B60D,kBAAmB70D,EAAS,uCAC5B80D,gBAAiB90D,EAAS,yCAC1B+0D,mBAAoB/0D,EAAS,2CAcrCg1D,iBAAkB,EAElBC,wBAAyB,CAAC,qBAE1BC,yBAA0B,GAC1BC,yBAA0B,OAGnC,CAACn1D,EAAU6zD,KAEd,MAAMuB,GAAetmD,uBAAY,CAC7BvD,EACAoH,KAKE,IAAD0iD,EACD,MAAM,UACFhoB,EAAS,iBACT1gC,EAAgB,mBAChBygC,GACM,OAANz6B,QAAM,IAANA,IAAU,IAER,QAAElG,EAAO,KAAEvnB,GAASsnB,GAAQ9L,WAC5B3Z,EAAiBqmD,EAAkB79D,wBAAA,GAC9Bg8B,GAAW,IAAE7mB,GAAIQ,EAAKR,KAC3B6mB,EAEF8hC,GACAnlC,GAAYxH,WAAWqI,QAAQhiB,GAEnC0lB,EAAQ1lB,EAAgB4lB,GACxB4kD,GAAoB/pD,GAAOA,EAAM,IACb,QAApB6tD,EAAAlE,EAAalkD,eAAO,IAAAooD,GAApBA,EAAsBtO,cAAchgE,GAEpCuR,OACD,IAEGg9D,GAAaxmD,uBAAYvY,eAC3B2S,GAEE,IAADqsD,EAAA,IADD5B,EAAU/sE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAEN+sE,IAAepmD,IAEd,OAALrE,QAAK,IAALA,KAAOnR,iBACe,QAAtBw9D,EAAAjE,EAAerkD,eAAO,IAAAsoD,GAAtBA,EAAwB1oB,cAAc,cACvC,CAACt/B,IAEEioD,GAAY1mD,uBAAY,SAC1B5F,GAEE,IAADusD,EAAA,IADD9B,EAAU/sE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAEN+sE,IAAepmD,IAEd,OAALrE,QAAK,IAALA,KAAOnR,iBACe,QAAtB09D,EAAAnE,EAAerkD,eAAO,IAAAwoD,GAAtBA,EAAwB5oB,cAAc,YACvC,CAACt/B,IAEEmoD,GAAa5mD,uBAAY,SAC3B5F,GAGE,IAADysD,EAAA,IAFDhC,EAAU/sE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GACV0a,EAAW1a,UAAAf,OAAA,EAAAe,UAAA,QAAAC,EAEX,IAAI8sE,GAAepmD,EAGnB,GADK,OAALrE,QAAK,IAALA,KAAOnR,iBACY,WAAfssC,IAA+C,QAAxBsxB,EAAIxE,EAAalkD,eAAO,IAAA0oD,OAAA,EAApBA,EAAsBz1D,aACjDjU,OAAOi8C,MAAMloC,EAAS,4CAI1B,IAAK,IAAD41D,EACA,MAAMtqD,EAAe,OAAJhK,QAAI,IAAJA,IAAQkL,GAAQ9L,WAAWxb,KAEtB,QAAtB0wE,EAAAvE,EAAepkD,eAAO,IAAA2oD,GAAtBA,EAAwBhqB,YAAYtgC,GACtC,MAAO5lB,GACLqD,QAAQC,MAAMtD,GACdumB,KAAajjB,MAAM,CACfkjB,QAASlM,EAAS,wBAClBmM,YAAanM,EAAS,iCAG/B,CAACuN,EAAavN,EAAUqkC,IAErBwxB,GAAmB/mD,uBAAa5pB,IAClC,MAAM,GAAER,GAA0BQ,EAAnB4wE,EAAc9qE,YAAK9F,EAAI,QAEtCwwE,QAAW7uE,GAAW,EAAOivE,KAC9B,CAACJ,KAEEK,GAAqBjnD,uBAAY,SAAC5F,GAAgE,IAAD8sD,EAAA,IAAvBrC,EAAU/sE,UAAAf,OAAA,QAAAgB,IAAAD,UAAA,IAAAA,UAAA,GAClF+sE,IAAepmD,IAEd,OAALrE,QAAK,IAALA,KAAOnR,iBACkB,QAAzBi+D,EAAA5E,EAAkBnkD,eAAO,IAAA+oD,GAAzBA,EAA2BjqE,cAC5B,CAACwhB,IAEE0oD,GAAmB5jC,mBAAQ,KACtB,CACH69B,OAAShnD,GAA2CosD,GAAWpsD,GAAO,GACtEinD,MAAQjnD,GAA2CssD,GAAUtsD,GAAO,GACpE+mD,OAAS/mD,GAA2CwsD,GAAWxsD,GAAO,GACtEknD,KAAMA,IAAMsD,IAAgB,GAAM,GAClCrD,SAAWnnD,GAA2C6sD,GAAmB7sD,GAAO,MAErF,CAAC6sD,GAAoBL,GAAYJ,GAAYE,GAAW9B,KAErDwC,GAAqBpnD,uBAAY,KACnC0kD,GAAW,GACXtrB,MAAMloC,EAAS,sCAChB,CAACA,IAEEm2D,GAAmBrnD,uBAAY,KACjCgiD,GAAatpD,GAAOA,EAAM,IAC1B+pD,GAAoB/pD,GAAOA,EAAM,IACjCgsD,GAAW,KACZ,IAEG4C,GAAiEtnD,uBAAY,CAACkhB,EAAGqU,KACnFktB,GAAoB/pD,GAAOA,EAAM,IACjC88B,EAAcD,KACf,IAEGgyB,GAAmBvnD,uBAAY,KACjCyiD,GAAoB/pD,GAAOA,EAAM,IACjCgsD,GAAW,KACZ,IAEG8C,GAAoBxnD,uBAAaniC,IACnCukF,EAAkBvkF,KACnB,IAEGuzB,GAAYwwD,GAAqBriD,EACvC,OACIr+B,cAACumF,WAAO,CAACC,OAAQxG,GAAoByG,SAAUR,GAAiBh6D,SAC5D69B,eAAA,OAAKp1C,GAAG,MAEJgyE,OAAQA,OACRlmF,UAAS,YAAAG,OAAcovB,EAAahB,SAAQ,aAAApuB,OAAYsgF,EAAiB,UAAY,UACrFr8D,MAAKrlB,YAAA,CACDs5D,gBAAgB,QAADl4D,OACXC,aAAsB,wFAE1B3D,OAAQssB,KAAmB,yBAA2B,SAClD,CACA,gBAAgB,GAAD5oB,OAAK5D,EAAYE,OAAM,MACtC,eAAe,GAAD0D,OAAK5D,EAAYC,MAAK,QAE1CivB,SAAA,CAED62D,GAAgB9iF,cAAA,QAAMyvD,IAAI,aAAa5wD,KAAK,WAAWmd,KAAM8mE,IAC9Dh5B,eAAA,OACItpD,UAAW,gBACXokB,MAAO,CACHi0C,gBAAgB,QAADl4D,OAAUC,aAAsB,4CACjDqrB,SAAA,CAEDiE,IAAalwB,cAACo/E,GAAgB,CAAC5+E,UAAU,cAAayrB,SAClDjT,EAAMnD,OAAS,EACV7V,cAACs/E,GAAU,CAAArzD,SACRjT,IAEwB,QADhBunE,EACXxwD,EAAaf,sBAAc,IAAAuxD,IAAI,KAGzCz2B,eAAA,OAAKtpD,UAAS,sBAAAG,OAAwBy9B,EAAY,iBAAmB,iBAAkBnS,SAAA,CACnF69B,eAACo1B,GAA8B,CAAC1+E,UAAU,oBAAmByrB,SAAA,CACzD69B,eAAA,OAAKtpD,UAAU,WAAUyrB,SAAA,CACrBjsB,cAACg7D,GAAW,CAACtO,IAAK20B,EACd7rC,cAAe8K,EAAiBrjB,QAChCM,YAAaA,EACb09B,oBAAqByqB,GACrBxqB,kBAAmBA,KAAA,IAAAyrB,EAAA,OAA+B,QAA/BA,EAAMvF,EAAkBnkD,eAAO,IAAA0pD,OAAA,EAAzBA,EAA2B5qE,YACpD80C,QAASvoC,KAEbtoB,cAAA,UACAA,cAACo8D,GAAW,CAAC1P,IAAK40B,EACdjlB,SAAU+oB,GACVv0B,QAASvoC,GACTiV,YAAaA,EACbvN,SAAUA,OAGlBhwB,cAACopD,GAAc,CAACp5B,SAAUA,IAC1BhwB,cAACwsD,GAAc,CAACE,IAAK00B,EACjB/gC,UAAWA,EACX2D,iBAAkBA,EAClB5lB,UAAWA,EACXC,eAAgBA,EAChBI,gBAAiBynD,KAEpB9nD,GAAap+B,cAAA,OAAK0U,GAAG,sBAAsBlU,UAAU,wBAAuByrB,SACzE69B,eAAA,QAAA79B,SAAA,CACK+D,EAAS,qCAAqChwB,cAAA,SAC9CgwB,EAAS,sCAAsC,IAAChwB,cAACiwD,GAAoB,YAGlFjwD,cAAA,OAAKQ,UAAU,wBAAuByrB,SAClC69B,eAACq1B,GAA8B,CAAC3+E,UAAU,oBAAmByrB,SAAA,CACzDjsB,cAAC8rD,KAAO,CAACnsB,MAAO3P,EAAS,wBAAwB/D,SAC7CjsB,cAAC4/E,GAAW,CACRp/E,UAAU,eACV0qD,QAASA,KAGL,GAFgBjvC,OAAO8hE,QAAQ/tD,EAAS,yBAE3B,CAAC,IAAD42D,EACT,MAAM,QAAEnqD,EAAO,KAAEvnB,GAASsnB,GAAQ9L,WAC5Bm2D,EAAWtnF,YAAA,CAAKmV,GAAIQ,EAAKR,IAAO3D,MAChC+1E,EAA4C,QAAhB5xE,EAAKvE,OACjCk2E,EACAp8D,GAAiBo8D,EAAa,OAEpCpqD,EAAQqqD,GAA2B,GACnCvF,GAAoB/pD,GAAOA,EAAM,IACb,QAApBovD,EAAAzF,EAAalkD,eAAO,IAAA2pD,GAApBA,EAAsB7P,cAAc+P,KAE1C76D,SAEFjsB,cAAC+mF,KAAa,QAGtB/mF,cAAC8rD,KAAO,CAACnsB,MAAOmqB,eAAA,OAAKtpD,UAAU,SAAQyrB,SAAA,CAClC+D,EAAS,0BACTuN,EAAcusB,eAAAC,WAAA,CAAA99B,SAAA,CAAEjsB,cAAA,SAAM,uBAAkB,QACtCisB,SACHjsB,cAAC0/E,GAAc,CAACl/E,UAAU,kBAAkB0qD,QAASA,IAAMw4B,KAAkBz3D,SACzEjsB,cAACgnF,KAAc,QAGvBhnF,cAAA,UAEI0U,GAAG,gBACHg4C,IAAKpuB,EACLthC,MAAO+kC,GACP9kC,OAAQ6kC,IAJH++C,EAAY,IAOrB7gF,cAAA,OAAK0U,GAAG,sBAAsBuyE,cAAevxE,GAAKA,EAAEqS,mBAGpD/nB,cAAA,UAAQ0U,GAAG,cAEPg4C,IAAKlM,EACLxjD,MAAO+kC,GACP9kC,OAAQ6kC,IAHH++C,GAKT7gF,cAAA,UAAQ0U,GAAG,aAAag4C,IAAK/L,EAAe3jD,MAAO+kC,GAAa9kC,OAAQ,MACxE+C,cAAA,UAAQ0U,GAAG,iBAAiBg4C,IAAKxL,EAAmBlkD,MAAO+kC,GAAa9kC,OAAQ,MAChF+C,cAAA,UAAQ0U,GAAG,sBAAsBg4C,IAAK5L,EAAwB9jD,MAAO+kC,GAAa9kC,OAAQ,MAC1F+C,cAAA,UAAQ0U,GAAG,uBAAuBg4C,IAAK7L,EAAyB7jD,MAAO+kC,GAAa9kC,OAAQ,MAC5F+C,cAAA,UAAQ0U,GAAG,aAAag4C,IAAKvL,EAAenkD,MAAO+kC,GAAa9kC,OAAQ,OACxE+C,cAAA,UAAQ0U,GAAG,eAAeg4C,IAAKhM,EAAiB1jD,MAAO+kC,GAAa9kC,OAAQ,OAC5E+C,cAAA,UAAQ0U,GAAG,aAAag4C,IAAK1L,EAAehkD,MAAO+kC,GAAa9kC,OAAQ6kC,KACxE9hC,cAAA,UAAQ0U,GAAG,cAAcg4C,IAAK3L,EAAgB/jD,MAAO+kC,GAAa9kC,OAAQ6kC,KAC1E9hC,cAAA,UAAQ0U,GAAG,iBAAiBg4C,IAAK9L,EAAmB5jD,MAAO+kC,GAAa9kC,OAAQ6kC,KAChF9hC,cAAA,UAAQ0U,GAAG,gBAAgBg4C,IAAKjM,EAAkBzjD,MAAO+kC,GAAa9kC,OAAQ6kC,KAC9E9hC,cAAA,UAAQ0U,GAAG,gBAAgBg4C,IAAKzL,EAAkBjkD,MAAO+kC,GAAa9kC,OAAQ6kC,KAC9E9hC,cAAA,UAAQ0U,GAAG,eAAeg4C,IAAKtL,EAAiBpkD,MAAO+kC,GAAa9kC,OAAQ6kC,KAC5E9hC,cAAA,UAAQQ,UAAU,cAAcksD,IAAKpM,IACrCtgD,cAAA,UAAQQ,UAAU,cAAcksD,IAAKnM,aAIlC,IAAdrwB,IAAuBlwB,cAACm1E,GAAc,CACnCzoB,IAAKy0B,EACL3rC,cAAe8K,EAAiBrjB,QAChCwY,iBAAkB8K,EAAoBtjB,QACtCy2B,eAAgByyB,GAChBvyB,aAAcwyB,GACdvyB,UAAWwyB,QAGnBrmF,cAACm9E,GAAgB,CACbntD,SAAUA,EACV83C,gBAAiBwe,GACjB3N,WAAYkN,GACZxlB,SAAU+kB,GACVlK,gBAAiBA,KAAO,IAADgM,EACG,QAAtBA,EAAA5F,EAAerkD,eAAO,IAAAiqD,GAAtBA,EAAwBrqB,cAAc,UAI9C78D,cAACmpD,KAAK,CACFnsD,MAAK,GAAA2D,OAAK5D,EAAYC,MAAQ,GAAM,MACpCmqF,cAAc,wBACdxuD,QAASooD,EACThC,aAAa,EACbv3D,SAAUA,IAAMw5D,GAAmB,GACnCpwB,OAAQ,KAAK3kC,SAEbjsB,cAAA,UACI0U,GAAG,kBACHg4C,IAAKrL,EACLrkD,MAAO+kC,GACP9kC,OAAQ6kC,IAJC++C,EAAY,MAO7B/2B,eAACu1B,GAAU,CAAC7+E,UAAU,QAAOyrB,SAAA,CAAC,mBACVjsB,cAAA,OAAKU,IAAI,kCAAkCD,IAAI,oBE7kBpE2mF,GAZS,SAAAC,GAChBA,GAAeA,aAAuBC,UACtC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzDJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDpBQ,IAASl6B,OACL,cAAC,IAAMm6B,WAAP,UACI,cAAC,GAAD,MAEJjsE,SAAS0kB,eAAe,SAM5B6mD,O","file":"static/js/main.846471e3.chunk.js","sourcesContent":["export const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n}) => [\r\n    {\r\n        value: 'fit' as const,\r\n        label: dictionary?.fit,\r\n    },\r\n    {\r\n        value: 'full' as const,\r\n        label: dictionary?.full,\r\n    },\r\n];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    topToPendulumStructure: 210,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.057,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    const artSource = normalizedBoundless || body < 100\r\n        ? isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard'\r\n        : isPendulum\r\n            ? text < 100\r\n                ? 'extendedPendulum'\r\n                : pendulum < 100\r\n                    ? 'truePendulum'\r\n                    : 'pendulum'\r\n            : text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n\r\n    return CardArtCanvasCoordinateMap[artSource];\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 919.8, trueEdge: 64.5 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5 },\r\n    ],\r\n};\r\n\r\nexport const PendulumEffectCoordinate: CoordinateData[] = [\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n    { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n];\r\n\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<string, CoordinateData>> = {\r\n    tcg: {\r\n        small: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        small: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        medium: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 255,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    bulletSymbolOffset?: number,\r\n    bulletSymbolWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    bulletSymbolOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport const DefaultFontDeviation: Required<FontDeviation> = {\r\n    yOffset: 0,\r\n    yRatio: 1,\r\n};\r\nexport type FontDeviation = {\r\n    yRatio?: number,\r\n    yOffset?: number,\r\n};\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviation>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nconst DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"LucidaFax-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nconst DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 19.95, lineHeight: 21.5, lineCount: 7 },\r\n            { bulletSymbolWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8 },\r\n            { bulletSymbolWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletSymbolOffset: 1 },\r\n            { bulletSymbolWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletSymbolOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 30, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletSymbolWidth: 23, fontSize: 25.2, lineHeight: 24.9, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletSymbolWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletSymbolOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletSymbolOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletSymbolWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletSymbolOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletSymbolWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const TCGVanillaTypeStatFontList: FontSizeData[] = [\r\n    { bulletSymbolWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3 },\r\n    { bulletSymbolWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n    { bulletSymbolWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n    { bulletSymbolWidth: 23, fontSize: 21.8, lineHeight: 24.9, lineCount: 6 },\r\n    { bulletSymbolWidth: 23, fontSize: 17.28, lineHeight: 21.5, lineCount: 7, wordLetterSpacing: -0.06 },\r\n    { bulletSymbolWidth: 23, fontSize: 16.28, lineHeight: 18.8, lineCount: 8 },\r\n    { bulletSymbolWidth: 19, fontSize: 14.46, lineHeight: 16.7, lineCount: 9 },\r\n    { bulletSymbolWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10 },\r\n];\r\n\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    tcg: {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletSymbolWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletSymbolWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletSymbolOffset: 2 },\r\n            { bulletSymbolWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletSymbolOffset: 3 },\r\n            { bulletSymbolWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n        ],\r\n    },\r\n    ocg: {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            {\r\n                bulletSymbolWidth: 41,\r\n                bulletSymbolOffset: 3,\r\n                fontSize: 45.55,\r\n                lineHeight: 57.6,\r\n                headTextFontRatio: 0.2,\r\n                lineCount: 2,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 31,\r\n                bulletSymbolOffset: 2,\r\n                fontSize: 35.55,\r\n                lineHeight: 40.6,\r\n                headTextFontRatio: 0.3,\r\n                lineCount: 3,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 23,\r\n                bulletSymbolOffset: 1,\r\n                fontSize: 25.05,\r\n                lineHeight: 30.6,\r\n                headTextFontRatio: 0.35,\r\n                lineCount: 4,\r\n            },\r\n            {\r\n                bulletSymbolWidth: 16,\r\n                fontSize: 22.05,\r\n                lineHeight: 25.2,\r\n                headTextFontRatio: 0.4,\r\n                lineCount: 5,\r\n            },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletSymbolWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                i: { yOffset: 1, yRatio: 1.03 },\r\n                ì: { yOffset: 1, yRatio: 1.03 },\r\n                í: { yOffset: 1, yRatio: 1.03 },\r\n                î: { yOffset: 1, yRatio: 1.03 },\r\n                ï: { yOffset: 1, yRatio: 1.03 },\r\n                ĩ: { yOffset: 1, yRatio: 1.03 },\r\n                ī: { yOffset: 1, yRatio: 1.03 },\r\n                ĭ: { yOffset: 1, yRatio: 1.03 },\r\n                į: { yOffset: 1, yRatio: 1.03 },\r\n                ǐ: { yOffset: 1, yRatio: 1.03 },\r\n                ȉ: { yOffset: 1, yRatio: 1.03 },\r\n                ȋ: { yOffset: 1, yRatio: 1.03 },\r\n                ɨ: { yOffset: 1, yRatio: 1.03 },\r\n                ɩ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵹ: { yOffset: 1, yRatio: 1.03 },\r\n                ᵼ: { yOffset: 1, yRatio: 1.03 },\r\n                ᶖ: { yOffset: 1, yRatio: 1.03 },\r\n                ḭ: { yOffset: 1, yRatio: 1.03 },\r\n                ḯ: { yOffset: 1, yRatio: 1.03 },\r\n                ỉ: { yOffset: 1, yRatio: 1.03 },\r\n                ị: { yOffset: 1, yRatio: 1.03 },\r\n                I: { yOffset: 1, yRatio: 1.022 },\r\n                Ì: { yOffset: 1, yRatio: 1.022 },\r\n                Í: { yOffset: 1, yRatio: 1.022 },\r\n                Î: { yOffset: 1, yRatio: 1.022 },\r\n                Ï: { yOffset: 1, yRatio: 1.022 },\r\n                Ĩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ī: { yOffset: 1, yRatio: 1.022 },\r\n                Ĭ: { yOffset: 1, yRatio: 1.022 },\r\n                Į: { yOffset: 1, yRatio: 1.022 },\r\n                İ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɩ: { yOffset: 1, yRatio: 1.022 },\r\n                Ɨ: { yOffset: 1, yRatio: 1.022 },\r\n                Ǐ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ȋ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḭ: { yOffset: 1, yRatio: 1.022 },\r\n                Ḯ: { yOffset: 1, yRatio: 1.022 },\r\n                Ỉ: { yOffset: 1, yRatio: 1.022 },\r\n                Ị: { yOffset: 1, yRatio: 1.022 },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletSymbolWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletSymbolWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletSymbolWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 21,\r\n            lineHeight: 21,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletSymbolWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletSymbolWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionList = [\r\n    { top: 175, left: 55, width: 100, height: 100 },\r\n    { top: 165, left: 323, width: 170, height: 80 },\r\n    { top: 175, left: 655, width: 100, height: 100 },\r\n    { top: 442, left: 45, width: 70, height: 170 },\r\n    { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n    { top: 442, left: 700, width: 70, height: 170 },\r\n    { top: 775, left: 55, width: 100, height: 100 },\r\n    { top: 810, left: 323, width: 170, height: 80 },\r\n    { top: 775, left: 655, width: 100, height: 100 },\r\n];\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -27, -38, -27, 0, -27, -38, -27, -38];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './font-data-effect';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 0,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: false,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './regex';","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        font: 'nsft',\r\n        fillStyle: 'nsfs',\r\n        headTextFillStyle: 'nshfs',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetY: 'nssoy',\r\n        shadowOffsetX: 'nssox',\r\n        shadowBlur: 'nssb',\r\n        hasShadow: 'nshs',\r\n        lineColor: 'nslc',\r\n        lineWidth: 'nslw',\r\n        lineOffsetY: 'nsloy',\r\n        lineOffsetX: 'nslox',\r\n        hasOutline: 'nshl',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasGradient: 'nshg',\r\n        preset: 'nspr',\r\n        pattern: 'nspt',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                fullCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const fullCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                fullCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                fullCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return fullCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let fullCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        fullCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        fullCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(fullCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || card.backgroundSource === 'offline') {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect.replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: 'Normal',\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter<string>(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedEffect = desc\r\n        ? desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const normalizedMonsterEffect = monster_desc\r\n        ? monster_desc.replaceAll(/^''|''$/g, '')\r\n        : undefined;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: normalizedMonsterEffect ?? normalizedEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: `${scale}`,\r\n        pendulumScaleRed: `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontGetter } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","export const uploadToImgur = async (imgLink: string) => {\r\n    const myHeaders = new Headers();\r\n    myHeaders.append('Authorization', `Client-ID ${process.env.REACT_APP_IMGUR_CLIENT_ID}`);\r\n\r\n    const formdata = new FormData();\r\n    formdata.append('image', imgLink);\r\n    formdata.append('type', 'url');\r\n    formdata.append('title', imgLink.replace('https://images.ygoprodeck.com/images/cards_cropped/', '').replace('.jpg', ''));\r\n\r\n    return await fetch('https://api.imgur.com/3/image', {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: formdata,\r\n        redirect: 'follow',\r\n    });\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    border-left: var(--bw) solid var(--sub-level-3);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field: string) => field.toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            // artData,\r\n            artFinish,\r\n            artFit,\r\n            // artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            // backgroundData,\r\n            backgroundFit,\r\n            // backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return [\r\n        CsvStandardFieldList.join(','),\r\n        valueList.join('\\n'),\r\n    ].join('\\n');\r\n};\r\n\r\nconst analyzeImportHeader = (header: string[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: string[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (csv: Papa.ParseResult<string[]>): InternalCard[] => {\r\n    try {\r\n        const data = csv.data;\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = parseInt(rawStar) <= 13 && reader('Star_Type') !== '2'\r\n                    ? parseInt(rawStar)\r\n                    : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? emptyCard.pendulumScaleRed;\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? emptyCard.pendulumScaleBlue;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter<string>(entry => typeof entry === 'string')\r\n                        .filter(entry => entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink);\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize },\r\n                    pendulumTextStyle,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const cloneCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const cloneCanvasContext = cloneCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && cloneCanvas && cloneCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    cloneCanvas.width = size[0];\r\n                    cloneCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                cloneCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, cloneCanvas.width, cloneCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = cloneCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, FinishInformation, FinishMap } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth,\r\n    height = CanvasHeight,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType);\r\n                    }\r\n                } else {\r\n                    await caller(finishType);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x = DEFAULT_SHADOW_OFFSET_X,\r\n    y = DEFAULT_SHADOW_OFFSET_Y,\r\n    blur = DEFAULT_SHADOW_BLUR,\r\n    color = DEFAULT_TEXT_COLOR,\r\n    shadowColor = DEFAULT_SHADOW_COLOR,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n} & CanvasTextStyle) => {\r\n    ctx.shadowOffsetX = x;\r\n    ctx.shadowOffsetY = y;\r\n    ctx.shadowBlur = blur;\r\n    ctx.shadowColor = shadowColor;\r\n    ctx.fillStyle = color;\r\n\r\n    return () => {\r\n        ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n\r\n                ctx.drawImage(image, normalizedX, normalizedY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number) = 0,\r\n    sy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    sx: number | ((image: HTMLImageElement) => number),\r\n    sy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n            const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n            const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n            const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n\r\n            ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const normalizedX = typeof sx === 'number' ? sx : sx(image);\r\n                const normalizedY = typeof sy === 'number' ? sy : sy(image);\r\n                const normalizedW = typeof dw === 'number' ? dw : dw(image);\r\n                const normalizedH = typeof dh === 'number' ? dh : dh(image);\r\n    \r\n                ctx.drawImage(image, normalizedX, normalizedY, normalizedW, normalizedH);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    sx, sy,\r\n    dw, dh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        sx, sy,\r\n        dw, dh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    DefaultFontDeviation,\r\n    FontDeviation,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n            ? 0.046875\r\n            : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation = {},\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviation,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        yOffset: deviationYOffset = DefaultFontDeviation.yOffset,\r\n        yRatio = DefaultFontDeviation.yRatio,\r\n    } = xRatio < 1 ? {} : deviation;\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    ctx.scale(1, yRatio);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + deviationYOffset) / yRatio,\r\n    });\r\n    ctx.scale(1, 1 / yRatio);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n) => {\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = DefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = DefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius - 1, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n            + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing = DefaultFontSizeData.letterSpacing,\r\n    format,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN` and `NB_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    debug?: boolean,\r\n}) => {\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const {\r\n        bulletSymbolOffset = DefaultFontSizeData.bulletSymbolOffset,\r\n        bulletSymbolWidth,\r\n        capitalLetterRatio = DefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = DefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletSymbolWidth,\r\n        largeSymbolRatio = DefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = DefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = DefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = DefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(ctx, fragmentEdge, trueBaseline + bulletSymbolOffset, bulletSymbolWidth, getBulletSpacing(format));\r\n                fragmentEdge += bulletSymbolWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg' ? 1 : 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1 }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= -2 && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[currentLetter],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap[letter],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END\r\n} from 'src/model';\r\n\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    let fullLineList = [];\r\n    const wholeLineRegex = new RegExp(`^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`);\r\n    let materialReplacement;\r\n    let material;\r\n    do {\r\n        materialReplacement = wholeLineRegex.exec(effectText)?.[1];\r\n        material = wholeLineRegex.exec(effectText)?.[2];\r\n\r\n        if (material && materialReplacement) {\r\n            fullLineList.push(material);\r\n            effectText = effectText.replace(materialReplacement, '');\r\n        }\r\n    } while (materialReplacement && material);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n\r\n    return {\r\n        fullLineList,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is need or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(/(^|[-\\u2014/[(\\u2018\\s])\"/g, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CanvasConst,\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    TCGVanillaTypeStatFontList,\r\n    DefaultTCGNormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter } from '../../util';\r\nimport { setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    isNormal,\r\n    statInEffect,\r\n    typeInEffect,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    isNormal: boolean,\r\n}) => {\r\n    const coordinateKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [format, typeInEffect ? 'type' : '', statInEffect ? 'stat' : '']\r\n        .filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (statInEffect && typeInEffect && isNormal && format === 'tcg') {\r\n        fontData = DefaultTCGNormalFontData;\r\n        fontData.fontList = TCGVanillaTypeStatFontList;\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    fontData = EffectFontData.tcg,\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    fontData?: FontData,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n    } = option ?? {};\r\n    let effectSizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return effectSizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    const { font, fontList } = fontData;\r\n    const yRatio = 1;\r\n    /** We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold. */\r\n    while (effectSizeLevel < fontList.length && effectSizeLevel >= 0) {\r\n        const tolerancePerSentence: Record<string, number> = format === 'tcg'\r\n            ? forceRelaxCondenseLimit && effectSizeLevel < forceRelaxCondenseLimit\r\n                ? CondenseTolerantMap['relaxed']\r\n                : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n            : {\r\n                '1': 800,\r\n                '2': 800,\r\n                '3': 800,\r\n            };\r\n        const fontSizeData = fontList[effectSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n        } = sizeList[effectSizeLevel] ?? sizeList[sizeList.length - 1];\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 : trueWidthStart;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setStyle(isNormal && format === 'tcg' ? '' : '')\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(font)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData,\r\n            fontLevel: effectSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = condense(\r\n            median => {\r\n                const { currentLineList, currentLineCount } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList,\r\n                    additionalLineCount,\r\n                    format, textData,\r\n                    width,\r\n                });\r\n                lineListWithRatio = currentLineList;\r\n\r\n                if (currentLineCount > lineCount) return false;\r\n                return true;\r\n            },\r\n            200,\r\n        );\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (effectSizeLevel < fontList.length - 1)\r\n        ) {\r\n            effectSizeLevel += 1;\r\n        } else {\r\n            ctx.clearRect(0, 0, CanvasWidth, 1111);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map(line => {\r\n                return {\r\n                    line,\r\n                    isLast: true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0) {\r\n                const flavorFontData = EffectFontData.tcg;\r\n                const flavorFontSizeData = flavorFontData.fontList[effectSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: flavorFontData,\r\n                    fontLevel: effectSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return effectSizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    onStarDraw,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    return await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(ctx, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    return drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, 739.1438, 1110.938);\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...coordinate,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1122, 240 - widthOffset, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...coordinate,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        600, 1080,\r\n        120, 30,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = 'bold 26.55px RoGSanSrfStd-Bd';\r\n    ctx.fillText(`${linkMap.length}`, 622.75, 1105);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionList,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst {\r\n    topToPendulumStructure,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: string,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 24, backgroundEffectBoxX = effectBoxX + 19;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderType = frameBorderType;\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit'\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    backgroundDestinationX, backgroundDestinationY,\r\n                    backgroundDestinationWidth, backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                artX, artY,\r\n                artWidth, artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            await drawAsset(ctx, `attribute/attr-${format}-${attribute.toLowerCase()}.png`, 678, 55);\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n            });\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            await drawAsset(ctx, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 750);\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[]) => {\r\n            await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n                .map(async entry => {\r\n                    const { left, top, height, width } = ArrowPositionList[entry - 1];\r\n                    const isActive = linkMap.includes(`${entry}`);\r\n                    const baseLink = `link/link-inactive-${entry}`;\r\n                    const activeLink = `link/link-active-${entry}`;\r\n                    const coordinate = [left, top, width, height] as const;\r\n\r\n                    await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n                    await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n                    if (isActive) {\r\n                        await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                        return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n                    } else return;\r\n                })\r\n            );\r\n        },\r\n        drawStatBorder: async (color: string) => {\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                { color },\r\n            );\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityText / 100;\r\n            await drawAsset(\r\n                ctx,\r\n                `background/background-text-${bottomFrame}.png`,\r\n                backgroundEffectBoxX, backgroundEffectBoxY,\r\n            );\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                await drawAsset(ctx, `background/background-pendulum-${bottomFrame}.png`, 55, 738);\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            return drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n        },\r\n        drawNameBorder: async () => {\r\n            return nameBorder\r\n                ? drawAsset(ctx, `frame/name-border-${nameBorderType}.png`, 0, 0)\r\n                : Promise.resolve();\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            await drawAsset(\r\n                ctx,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                + `-${foilType}`\r\n                + (artBorder ? '' : '-artless')\r\n                + '.png',\r\n                30, 185,\r\n            );\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n        },\r\n        drawCardBorder: async () => {\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder) => {\r\n            await drawAsset(ctx, `link/link-overlay-arrow-${foil}${withBorder ? '' : '-artless'}.png`, 0, 175);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if (artBorder || nameBorder) await loopFinish(\r\n                ctx,\r\n                'name',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE) {\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish) await loopArtFinish(\r\n                ctx,\r\n                'art',\r\n                async finishType => await drawAsset(\r\n                    ctx,\r\n                    `finish/art-finish-${finishType}${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`,\r\n                    artFinishX, artFinishY,\r\n                ),\r\n            );\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder) {\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => drawAsset(ctx, `finish/finish-${finishType}-border-pendulum-${pendulumSize}.png`, 0, 0)\r\n            );\r\n        },\r\n        drawFrameFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    trueBaseline: number,\r\n    width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper } = option;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n    if (ctx && cloneCtx && value) {\r\n        const {\r\n            font,\r\n            fillStyle,\r\n            headTextFillStyle,\r\n            shadowBlur,\r\n            hasShadow,\r\n            shadowColor,\r\n            shadowOffsetX,\r\n            shadowOffsetY,\r\n            hasOutline: hasDefaultOutline,\r\n            lineColor,\r\n            lineWidth,\r\n            lineOffsetX,\r\n            lineOffsetY,\r\n            hasGradient,\r\n            gradientAngle,\r\n            gradientColor,\r\n            pattern,\r\n        } = { ...getDefaultNameStyle(), ...style };\r\n        const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n        const hasOutline = hasDefaultOutline;\r\n\r\n        ctx.textAlign = 'left';\r\n        if (hasShadow) {\r\n            ctx.shadowColor = shadowColor;\r\n            ctx.shadowOffsetY = shadowOffsetY;\r\n            ctx.shadowOffsetX = shadowOffsetX;\r\n            ctx.shadowBlur = shadowBlur;\r\n        }\r\n        if (hasDefaultOutline) {\r\n            ctx.lineWidth = lineWidth;\r\n            ctx.strokeStyle = lineColor;\r\n        }\r\n        const fontData = {\r\n            ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n            headTextFillStyle,\r\n        };\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const textData = {\r\n            fontLevel: 0,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        const quoteConvertedValue = normalizeCardText(\r\n            value,\r\n            format,\r\n            { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n        );\r\n\r\n        /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n        const crudeTokenList = format === 'ocg'\r\n            ? [quoteConvertedValue]\r\n            : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n        const fontGetterForWidthCalculating = createFontGetter({\r\n            defaultFamily: fontData.font,\r\n            defaultSize: fontData.fontList[0].fontSize,\r\n            defaultWeight: fontData.weight,\r\n        });\r\n        const normalStyle = fontGetterForWidthCalculating.getFont();\r\n        const symbolStyle = fontGetterForWidthCalculating\r\n            .setSize(cur => cur * fontData.symbolFontRatio)\r\n            .setStyle('small-caps')\r\n            .setFamily(fontData.symbolFont)\r\n            .getFont();\r\n        let maxAscent = 0;\r\n        let maxDescent = 0;\r\n        crudeTokenList.forEach((cur, index) => {\r\n            ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n            const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n            maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n            maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n        }, 0);\r\n\r\n        ctx.font = normalStyle;\r\n        /** Calculate fitting ratio like normal */\r\n        let actualLineWidth = 0;\r\n        const internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [quoteConvertedValue],\r\n                    format, textData,\r\n                    width,\r\n                });\r\n\r\n                if (currentLineCount > 1) return false;\r\n                actualLineWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n        const xRatio = internalEffectiveMedian / 1000;\r\n        const yRatio = 1;\r\n\r\n        ctx.scale(xRatio, yRatio);\r\n\r\n        /** Calculate gradient and offset based on card's frame. */\r\n        const offsetY = fontData.fontList[0].offsetY ?? DefaultFontSizeData.offsetY;\r\n        const tokenList = tokenizeText(quoteConvertedValue);\r\n        const gradient = actualLineWidth > 0 && hasGradient\r\n            ? getNameGradient(\r\n                ctx,\r\n                gradientAngle,\r\n                parsePalette(gradientColor),\r\n                edge,\r\n                actualLineWidth,\r\n                trueBaseline,\r\n                maxAscent, maxDescent,\r\n            )\r\n            : undefined;\r\n\r\n\r\n        /** First iteration: Draw the card name with color, shadow and gradient */\r\n        ctx.fillStyle = gradient ?? fillStyle;\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            },\r\n        });\r\n\r\n        /** Second iteration, draw pattern, we follow these steps:\r\n         *  * We create a second, temporary canvas node.\r\n         *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n         *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essential \"coating\" the pattern on top of the text, without damaging it's surrounding.\r\n         */\r\n        if (patternImage && cloneNode) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n            await drawAsset(cloneCtx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(cloneCtx, `background/background-name-${frame}.png`, 0, 0);\r\n            cloneCtx.globalCompositeOperation = patternBlendMode;\r\n            await drawAssetWithSize(\r\n                cloneCtx, `finish-name/${patternImage}.png`,\r\n                edge, trueBaseline - maxAscent,\r\n                width,\r\n                maxAscent + maxDescent,\r\n            );\r\n            ctx.globalCompositeOperation = 'source-in';\r\n            ctx.drawImage(cloneNode, 0, 0);\r\n            ctx.scale(xRatio, yRatio);\r\n            ctx.globalCompositeOperation = 'source-over';\r\n\r\n            /** Again, foot text is not affected by pattern, so we draw the whole name again but without the foot text part.\r\n             * \r\n             * Because head text is not affected by shadow and outline, and their color is always solid. When placed on top of the head text with pattern, they will cover the pattern perfectly.\r\n             */\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: () => {},\r\n            });\r\n        }\r\n\r\n        /** Third iteration, we apply \"outline\" to card name. We use stroke method to simulate outline behavior. This is not ideal (like at all), but current canvas has no way to do it properly. */\r\n        if (hasOutline) {\r\n            ctx.globalCompositeOperation = 'destination-over';\r\n            drawLine({\r\n                ctx,\r\n                tokenList,\r\n                xRatio, yRatio,\r\n                trueEdge: edge, trueBaseline,\r\n                textData,\r\n                format,\r\n                textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                    ctx.lineJoin = 'round';\r\n                    ctx.strokeText(\r\n                        letter,\r\n                        scaledEdge + lineOffsetX,\r\n                        scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                    );\r\n                },\r\n            });\r\n        }\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        const defaultTextStyle = getDefaultNameStyle();\r\n        ctx.fillStyle = defaultTextStyle.fillStyle;\r\n        ctx.shadowColor = defaultTextStyle.shadowColor;\r\n        ctx.shadowOffsetY = defaultTextStyle.shadowOffsetY;\r\n        ctx.shadowOffsetX = defaultTextStyle.shadowOffsetX;\r\n        ctx.shadowBlur = defaultTextStyle.shadowBlur;\r\n        ctx.lineWidth = defaultTextStyle.lineWidth;\r\n        ctx.strokeStyle = defaultTextStyle.lineColor;\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    }\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<string, number> = {\r\n    small: 0,\r\n    medium: 1,\r\n    large: 2,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: 'small' | 'medium' | 'large',\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'];\r\n    const fontData = getTypeAbilityFontData()[format];\r\n    if (metricMethod) fontData.metricMethod = metricMethod;\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: 'small' | 'medium' | 'large',\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + image.naturalWidth * 0.175 * xRatio + offsetX,\r\n            image => baseline - image.naturalWidth * 0.8 + offsetY,\r\n            image => image.naturalWidth,\r\n            image => image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (ctx && value) {\r\n        const fontSize = 60.5;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const digitScaleRatio = 0.65;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(digit, digit === '1' ? accLeft - 3 : accLeft, baseline + fontSize);\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? digitScaleRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    edge = 99,\r\n    baseline = 1150.93,\r\n    baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    } = {\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle } = option ?? {};\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4;\r\n    ctx.font = 'bold 23.7px palatino-linotype-bold';\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2;\r\n\r\n    ctx.font = 'bold 17.78px palatino-linotype-bold';\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = 'bold 22.22px palatino-linotype-bold';\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = 'bold 35.73px Matrix-Bold';\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = 'bold 34.74px Matrix-Bold';\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    edge: number,\r\n    baseline: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const statWidth = 73.97;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 37px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = 'bold 34px matrix';\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = '37px MatrixBoldSmallCaps';\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = '37px matrix';\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = '37px MatrixBoldSmallCaps';\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = 'bold 37px matrix';\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} 22px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, 66.65 + xOffset, 1105.01 + offsetY);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 666.56 + xOffset, 872.94 + offsetY);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, 728.78 + xOffset, 871.50 + offsetY);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinate,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    pendulumSize?: 'medium',\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const typeInEffect = cardIcon === 'auto'\r\n        ? isMonster || isSpeedSkill\r\n        : cardIcon !== 'st' || isLink;\r\n\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        pendulumSize = 'medium',\r\n        language,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground ? baseFill : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, CanvasWidth, CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !isLink && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum && !isLink) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder(resolvedStatTextStyle.color ?? '#000000');\r\n\r\n            /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n            if (!isPendulum && isLink) {\r\n                await drawLinkArrowMap(linkMap);\r\n                await drawLinkMapFoil(false);\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n                if (statInEffect) await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle);\r\n                resetStyle();\r\n            }\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            if (!isLink && !isSpeedSkill) await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            drawScale(ctx, pendulumScaleBlue ?? 0, 84.4, 790);\r\n            drawScale(ctx, pendulumScaleRed ?? 0, 728.0, 790);\r\n        }\r\n    }, [readyToDraw, isPendulum, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494);\r\n        drawStat(ctx, atk, 508.824, 1106.494);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494);\r\n            drawStat(ctx, def, 673.865, 1106.494);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const endOfPassword = drawPasswordText({\r\n            ctx,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n        });\r\n        if (isFirstEdition) {\r\n            const left = isLegacyCard && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(endOfPassword + 14.813, 142.2) - (format === 'ocg' ? 10 : 0);\r\n            const bottom = isLegacyCard && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = isLegacyCard && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            const compactThreshold = format === 'tcg' ? 390 : 350;\r\n            const compactOffset = format === 'tcg' ? 30 : 40;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            return await drawSticker({\r\n                ctx: stickerCanvasRef.current?.getContext('2d'),\r\n                sticker,\r\n            });\r\n        };\r\n    }, [readyToDraw, sticker, stickerCanvasRef]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize } = effectStyle ?? {};\r\n            const normalizedUpSize = effectTextStyle[0] ? upSize : 0;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    isNormal,\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'medium' : 'small',\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize } = pendulumStyle ?? {};\r\n            const normalizedUpSize = pendulumTextStyle[0] ? upSize : 0;\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                fontData: PendulumEffectFontData[format],\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: PendulumEffectCoordinate,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n        };\r\n    }, [readyToDraw, finishCanvasRef, loopFinish, name]);\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n        /** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\n        const generateLayer = (\r\n            canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n            exportCtx: CanvasRenderingContext2D | null | undefined,\r\n            delayQueue: number = 0,\r\n        ) => {\r\n            return new Promise<boolean>(resolve => {\r\n                setTimeout(() => {\r\n                    if (!canvasLayer.current || !exportCtx) resolve(false);\r\n                    else {\r\n                        try {\r\n                            canvasLayer.current.toBlob(blob => {\r\n                                if (!blob) resolve(false);\r\n                                else {\r\n                                    const url = URL.createObjectURL(blob);\r\n                                    if (!url) resolve(false);\r\n                                    else {\r\n                                        const layer = new Image();\r\n                                        layer.src = url;\r\n                                        layer.onload = () => {\r\n                                            exportCtx.drawImage(layer, 0, 0);\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(true);\r\n                                        };\r\n                                        layer.onerror = () => {\r\n                                            URL.revokeObjectURL(url);\r\n                                            resolve(false);\r\n                                        };\r\n                                    }\r\n                                }\r\n                            });\r\n                        } catch (e) {\r\n                            console.error(e);\r\n                            resolve(false);\r\n                        }\r\n                    }\r\n                }, delayQueue * 25);\r\n            });\r\n        };\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            exportCtx.clearRect(0, 0, CanvasConst.width, CanvasConst.height);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(exportCanvas, 0, 0);\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxCanvasRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return 0;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'];\r\n    const isNumberPassword = /^[0-9]*$/.test(value);\r\n    const fontData = PasswordFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: !isNumberPassword ? 1 : 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return result.tokenEdge;\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'];\r\n    const fontData = CreatorFontData[format];\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? DefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import { Button, Dropdown, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { MenuOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-resolution {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n    .button-option {\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n        padding: var(--spacing);\r\n        border-left: var(--bw) solid var(--sub-secondary);\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        .anticon {\r\n            font-size: var(--fs-2xl);\r\n            margin-left: 0;\r\n        }\r\n        &:hover {\r\n            background: #399af9;\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                    <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n                        {language['button.download.resolution.label']}\r\n                    </StyledDownloadDropdownLabel>\r\n                    {[\r\n                        { width: 549, height: 800 },\r\n                        { width: 561, height: 818 },\r\n                        { width: 813, height: 1185 },\r\n                    ].map(({ width, height }) => {\r\n                        return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                            className={resolution[0] === width && resolution[1] === height ? 'active-resolution' : ''}\r\n                            onClick={() => {\r\n                                updateSetting({\r\n                                    resolution: [width, height],\r\n                                });\r\n                                forceRefocus();\r\n                            }}\r\n                        >\r\n                            {width} × {height}\r\n                        </StyledDownloadDropdownOption>;\r\n                    })}\r\n                </Menu>}\r\n            >\r\n                <div className=\"button-option\" onClick={e => e.stopPropagation()}>\r\n                    <MenuOutlined />\r\n                </div>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport './explanation.scss';\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <ExclamationCircleOutlined className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                <Icon {...iconProps} />{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import { GithubFilled, BugOutlined, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport './app-header.scss';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <span className=\"version\">v{process.env.REACT_APP_VERSION ?? 'unknown'}</span>\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']} <BugOutlined />\r\n                    </div>\r\n                </span>\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<div className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </div>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    const language = useLanguage();\r\n\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<div className=\"disclaimer\">\r\n            <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n            <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n            <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n        </div>}\r\n    />;\r\n};","import styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: () => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        // setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded();\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip title={<div className=\"image-warning\">\r\n                                {language['image-cropper.offline-warning']}\r\n                            </div>}>\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <div\r\n                        className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                        onClick={() => {\r\n                            setInteracted(true);\r\n                            onForceFitChange(!forceFit);\r\n                        }}\r\n                    >\r\n                        <FullscreenOutlined />\r\n                    </div>\r\n                    {!forceFit && <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                        setInteracted(true);\r\n                        setCrop(cur => {\r\n                            const { width, x } = cur.completed ?? {};\r\n\r\n                            if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                            const newCrop: ReactCrop.Crop = {\r\n                                ...cur.completed,\r\n                                x: (100 - width) / 2,\r\n                            };\r\n\r\n                            return {\r\n                                current: newCrop,\r\n                                completed: newCrop,\r\n                            };\r\n                        });\r\n                    }}>\r\n                        <VerticalAlignMiddleOutlined />\r\n                    </div>}\r\n                    {!forceFit && <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                        setInteracted(true);\r\n                        setCrop(cur => {\r\n                            const { height, y } = cur.completed ?? {};\r\n\r\n                            if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                            const newCrop: ReactCrop.Crop = {\r\n                                ...cur.completed,\r\n                                y: (100 - height) / 2,\r\n                            };\r\n\r\n                            return {\r\n                                current: newCrop,\r\n                                completed: newCrop,\r\n                            };\r\n                        });\r\n                    }}>\r\n                        <VerticalAlignMiddleOutlined />\r\n                    </div>}\r\n                </div>}\r\n                {(!hasImage || error) && <Empty description={language['image-cropper.not-found-warning']} image={null} />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        setError('Image error');\r\n                        setLoading(false);\r\n                        if (!receivingCanvas) onTainted();\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded();\r\n                        } else {\r\n                            onTainted();\r\n                        }\r\n                        // setCrossOrigin(undefined);\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './app-header';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './setting';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { RadioTrain } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        border-left: var(--bw) solid var(--main-primary);\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        grid-template-columns: 115px auto;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .inline-alert {\r\n        grid-row: span 2;\r\n        line-height: 1.25;\r\n    }\r\n    .export-input-raw {\r\n        grid-row: span 3;\r\n        height: 100%;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    allowHotkey: boolean,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    allowHotkey,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n                        notification.error({\r\n                            message: language['error.export.message'],\r\n                            description: language['error.export.description'],\r\n                        });\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className=\"export-container-result\">\r\n                    <StyledActionIconButton\r\n                        onClick={() => {\r\n                            const blob = new Blob([data], { type: 'application/json' });\r\n                            downloadBlob(\r\n                                normalizeCardName(name),\r\n                                blob,\r\n                                'application/json',\r\n                            );\r\n                        }}\r\n                    >\r\n                        {language['button.export-modal.download-button.label']}\r\n                    </StyledActionIconButton>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                    />}\r\n                    {(mode === 'ygocarder' && !isPartial) && <CardDataCopyButton\r\n                        data={internalCardData.ygocarder.data}\r\n                    >\r\n                        {language['button.export-modal.copy-button.label']}\r\n                    </CardDataCopyButton>}\r\n                    {((mode === 'other')\r\n                    || (mode === 'ygocarder' && isPartial)) && <div className=\"inline-alert\">\r\n                        {language['prompt.export.offline-warning.message']}\r\n                    </div>}\r\n                    <StyledActionIconButton onClick={onRequireDownload}>\r\n                        {language['button.export-modal.save-button.label']}\r\n                    </StyledActionIconButton>\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, YgoproDeckCard } from 'src/model';\r\nimport { isYgoprodeckImage, uploadToImgur } from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom {\r\n            font-size: var(--fs);\r\n            margin-left: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    mode === 'replace' ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    try {\r\n                        const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                        if (imgurResponse.status !== 200) {\r\n                            surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                            throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                        }\r\n                        const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                        surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    } catch (e) {\r\n                        /** Failing the upload process does not terminate the import process */\r\n                        console.error('Upload error:', e);\r\n                        notification.error({\r\n                            message: language['prompt.import.imgur.message'],\r\n                            description: language['prompt.import.imgur.description'],\r\n                        });\r\n                    }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span>{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const FinishButtonList = Object.values(FinishMap).map(({ value, label }) => ({\r\n    label,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n    }))\r\n    .filter(({ isCreative }) => isCreative === false || isCreative === showCreativeOption);\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { AnglePicker, ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n}\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className=\"controls-wrapper gradient-picker-container\">\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <div className=\"angle-picker-container\">\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n                <AnglePicker angle={angle} size={120} setAngle={setAngle} />\r\n            </div>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPickerButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={5} xmin={-5}\r\n                ymax={5} ymin={-5}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}: <GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n    StyledPickerButton,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [customStyleSignal, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        customStyleSignal();\r\n    }, [customStyleSignal]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={fillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown color-picker-dropdown\">\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        customStyleSignal();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        customStyleSignal();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            customStyleSignal();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <StyledPickerButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </StyledPickerButton>\r\n                    </Popover>\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                isPendulum,\r\n                attribute,\r\n                format,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const isST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const newTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            if (isST) onSTFrameChange(newTypeAbility);\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isPendulum: nextFrame === 'link' ? false : isPendulum,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: isST\r\n                    ? `${nextFrame}`.toUpperCase()\r\n                    : attribute,\r\n                typeAbility: newTypeAbility,\r\n            };\r\n        });\r\n    }, [setCard, onSTFrameChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n\r\n                return <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType).ratio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n        display: grid;\r\n        grid-template-columns: max-content 60px 45px 12px;\r\n        &.inactive {\r\n            .slider-label,\r\n            .ant-slider,\r\n            .slider-padding {\r\n                background-color: var(--main-level-3);\r\n            }\r\n        }\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            hasBackground,\r\n            backgroundType,\r\n            background,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        hasBackground,\r\n        backgroundType,\r\n        isPendulum,\r\n        background,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <div key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            {hasBackground\r\n                                ? background\r\n                                    ? <img className=\"background-image-preview\" src={background} alt=\"Background\" />\r\n                                    : null\r\n                                : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </div>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { checkDarkSynchro, checkXyz } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 6.5rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    isLink: boolean,\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    isLink,\r\n    isMonster,\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n    const isDarkSynchro = checkDarkSynchro({ frame });\r\n    const isXyz = checkXyz({ frame });\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[isMonster\r\n            ? isXyz ? 'rank' : isDarkSynchro ? 'negative-level' : 'level'\r\n            : 'st'\r\n        ]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return !isLink\r\n        ? iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>\r\n        : null;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n            cursorOffset = keepInline ? 2 : 3;\r\n            break;\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        rows={9}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value.trim() : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n            isPendulum: willBecomeLink ? false : currentCard.isPendulum,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n            active={isLink}\r\n            defaultValue={linkMap}\r\n            onChange={changeLinkMap}\r\n            onStatusChange={changeLinkStatus}\r\n        />\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, RadioTrain } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { FrameInfoMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .joined-row {\r\n        position: 'relative';\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing-lg);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [isMirrorScale, setMirrorScale] = useState(true);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n            isLink: willBecomePendulum ? false : currentCard.isLink,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            {showCreativeOption && <Popover\r\n                visible={frameDropdownVisible}\r\n                onVisibleChange={setFrameDropdownVisibleVisible}\r\n                trigger={['hover', 'click']}\r\n                placement=\"bottom\"\r\n                overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                content={<div className=\"overlay-event-absorber\">\r\n                    <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                        frameList={frameList}\r\n                        pendulumFrame={pendulumFrame}\r\n                        onCancel={() => {\r\n                            setFrameDropdownVisibleVisible(false);\r\n                            containerRef.current?.focus();\r\n                        }}\r\n                        onChange={changeBottomFrame}\r\n                    />\r\n                </div>}\r\n            >\r\n                <StyledPendulumFrameInputContainer ref={containerRef}\r\n                    className=\"pendulum-frame-input\"\r\n                    tabIndex={0}\r\n                    onKeyDown={e => {\r\n                        if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                            setFrameDropdownVisibleVisible(true);\r\n                            /** Popover takes time to mount / become visible */\r\n                            setTimeout(() => {\r\n                                bottomFrameOptionGridRef.current?.focus();\r\n                            }, 200);\r\n\r\n                            return false;\r\n                        }\r\n                    }}\r\n                >\r\n                    <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                    {currentPendulumFrame\r\n                        ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                        : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                </StyledPendulumFrameInputContainer>\r\n            </Popover>}\r\n            {(isPendulum && showCreativeOption)\r\n                && <Checkbox onChange={e => setMirrorScale(e.target.checked)} checked={isMirrorScale}>\r\n                    {language['input.mirror-scale.label']}\r\n                </Checkbox>}\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (isMirrorScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    onChange={e => {\r\n                        if (isMirrorScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    rows={5}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={language['input.condense.tooltip']}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        background-color: #eaeaea;\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none'\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    FinishButtonList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={FinishButtonList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={language['input.layout.tooltip']}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })} />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                isLink={isLink}\r\n                isMonster={isMonster}\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkMonster, checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined, DownloadOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            top: 19px;\r\n            left: 20px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundFit,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        backgroundType,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        pendulumFrame,\r\n        opacity,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = (artSource === 'offline' || !art)\r\n        ? 'https://i.imgur.com/jjtCuG5.png'\r\n        : art;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n        ? !!(atk || def || (isLink && linkMap.length))\r\n        : isMonster;\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={background ?? 'https://imgur.com/pdSVzUZ.png'}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '')}\r\n                    style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(${LinkIndentList[index]}px)` }}\r\n                />;\r\n            })}\r\n            {isPendulum && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {isPendulum && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip>\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / croppedWidth;\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / croppedHeight;\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n            {/* {cardDisplayList.map(card => <CardThumb\r\n                key={card.id}\r\n                card={card}\r\n                active={card.id === activeId}\r\n                language={language}\r\n                onDuplicate={duplicateCard}\r\n                onSelect={onSelect}\r\n                onDownload={onDownload}\r\n                onDelete={deleteAndReselect}\r\n            />)} */}\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport Papa from 'papaparse';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    const csvdata = cardListToCsv(useCardList.getState().cardList);\r\n    \r\n                                    downloadBlob(\r\n                                        useCardList.getState().listName,\r\n                                        new Blob([csvdata], { type: 'text/csv' }),\r\n                                        'text/csv',\r\n                                    );\r\n                                    changeEditStatus('download');\r\n                                }\r\n                            }}\r\n                        >\r\n                            <DownloadOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept=\".csv\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={async () => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        Papa.parse<string[]>(fileList[0], {\r\n                                            complete(result) {\r\n                                                const nextCardList = csvToCardList(result);\r\n\r\n                                                if (nextCardList.length > 0) {\r\n                                                    setCardList(nextCardList, nextCardList[0].id);\r\n                                                    setInputKey(cnt => cnt + 1);\r\n                                                    onSelect(nextCardList[0]);\r\n                                                    setReadingFile(false);\r\n                                                } else {\r\n                                                    announceError();\r\n                                                }\r\n                                            },\r\n                                            error: announceError,\r\n                                        });\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const StyledCardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(var(--translate-ratio)) translateY(var(--translate-ratio)) scale(var(--resize-ratio))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled.div`\r\n    --overlay-size: 51px;\r\n    position: absolute;\r\n    z-index: 101;\r\n    background: var(--main-primary);\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing);\r\n    line-height: 1;\r\n    font-size: var(--fs-3xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-1);\r\n    display: none;\r\n    &:hover {\r\n        background: var(--sub-primary);\r\n    }\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Modal, notification, Tooltip } from 'antd';\r\nimport { TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined } from '@ant-design/icons';\r\nimport {\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    StyledCardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'LucidaFax-Italic',\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        setLightboxVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback(() => {\r\n        setCanvasKey(cnt => cnt + 1);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(false);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasConst.height}px`,\r\n                        '--card-width': `${CanvasConst.width}px`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    allowHotkey={allowHotkey}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container\">\r\n                                <span>\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning /></span>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <div className=\"card-canvas-container\">\r\n                            <StyledCardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <Tooltip title={language['button.reset.tooltip']}>\r\n                                    <ResetButton\r\n                                        className=\"reset-button\"\r\n                                        onClick={() => {\r\n                                            const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                            if (consent) {\r\n                                                const { setCard, card } = useCard.getState();\r\n                                                const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                                const contextualDefaultCardData = card.format === 'tcg'\r\n                                                    ? defaultCard\r\n                                                    : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                                setCard(contextualDefaultCardData, true);\r\n                                                setImageChangeCount(cnt => cnt + 1);\r\n                                                cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                            }\r\n                                        }}\r\n                                    >\r\n                                        <ClearOutlined />\r\n                                    </ResetButton>\r\n                                </Tooltip>\r\n                                <Tooltip title={<div className=\"center\">\r\n                                    {language['button.full-size.label']}\r\n                                    {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                                </div>}>\r\n                                    <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                        <ZoomInOutlined />\r\n                                    </LightboxButton>\r\n                                </Tooltip>\r\n                                <canvas\r\n                                    key={canvasKey + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={canvasKey}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth}\r\n                                    height={CanvasHeight}\r\n                                />\r\n                                <canvas id=\"nameCanvas\" ref={nameCanvasRef} width={CanvasWidth} height={148} />\r\n                                <canvas id=\"cardIconCanvas\" ref={cardIconCanvasRef} width={CanvasWidth} height={222} />\r\n                                <canvas id=\"pendulumScaleCanvas\" ref={pendulumScaleCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"pendulumEffectCanvas\" ref={pendulumEffectCanvasRef} width={CanvasWidth} height={889} />\r\n                                <canvas id=\"typeCanvas\" ref={typeCanvasRef} width={CanvasWidth} height={1037} />\r\n                                <canvas id=\"effectCanvas\" ref={effectCanvasRef} width={CanvasWidth} height={1111} />\r\n                                <canvas id=\"statCanvas\" ref={statCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"setIdCanvas\" ref={setIdCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"passwordCanvas\" ref={passwordCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"creatorCanvas\" ref={creatorCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"stickerCanvas\" ref={stickerCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas id=\"finishCanvas\" ref={finishCanvasRef} width={CanvasWidth} height={CanvasHeight} />\r\n                                <canvas className=\"crop-canvas\" ref={artworkCanvasRef} />\r\n                                <canvas className=\"crop-canvas\" ref={backgroundCanvasRef} />\r\n                            </StyledCardCanvasGroupContainer>\r\n                        </div>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Modal\r\n                    width={`${CanvasConst.width + 15 * 2}px`}\r\n                    wrapClassName=\"card-lightbox-overlay\"\r\n                    visible={lightboxVisible}\r\n                    forceRender={true}\r\n                    onCancel={() => setLightboxVisible(false)}\r\n                    footer={null}\r\n                >\r\n                    <canvas key={canvasKey + 0.1}\r\n                        id=\"lightbox-canvas\"\r\n                        ref={lightboxCanvasRef}\r\n                        width={CanvasWidth}\r\n                        height={CanvasHeight}\r\n                    />\r\n                </Modal>\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}