{"version":3,"sources":["model/canvas.ts","model/icon.tsx","model/name-preset.ts","model/pendulum.ts","model/condense.ts","model/coordinate-data.tsx","model/dictionary.ts","model/foil-finish.tsx","model/font-data-effect.tsx","model/font-data-name.ts","model/font-data-other.ts","model/font-data-pendulum-effect.ts","model/format.tsx","model/frame.tsx","model/link.tsx","model/regex.tsx","model/index.tsx","util/canvas/create.ts","util/canvas/distance-transform.ts","util/canvas/shader.ts","util/canvas/emboss.ts","util/canvas/bilateral-filter.ts","util/canvas/generate-layer.ts","util/categorize.tsx","3rd/index.ts","util/codec.ts","util/normalize.ts","util/other.ts","util/codec-other-vendor.ts","util/codec-ygoprodeck.ts","util/condenser.ts","util/font.tsx","util/gradient.ts","util/hook.ts","util/navigation.ts","util/random.ts","util/scale.ts","util/index.tsx","page/canvas-panel/styled.tsx","service/format-change.tsx","service/use-i18n/processor.tsx","service/use-i18n/index.ts","service/use-card-list/csv.ts","service/use-card-list/index.tsx","service/use-card.ts","service/use-setting.ts","service/use-card-export.ts","draw/canvas-util.ts","draw/image.ts","draw/letter.ts","draw/text-util.ts","draw/text-analyze.ts","draw/line.ts","draw/text-overhead.ts","draw/text.ts","draw/text-normalize.tsx","draw/predefined-section/effect.ts","draw/predefined-section/with-image.ts","draw/predefined-section/layout.ts","draw/predefined-section/name.ts","draw/predefined-section/type-ability.ts","draw/predefined-section/with-text.ts","service/use-master-seri/index.tsx","service/use-master-seri/prepare-style.ts","draw/predefined-section/password.ts","draw/predefined-section/creator.ts","service/use-notification.ts","page/canvas-panel/batch-converter.tsx","component/error-boundary/index.tsx","component/angle-picker/index.tsx","component/explanation/index.tsx","component/icon-button/index.tsx","component/input-train/input-train.styled.tsx","component/input-train/radio-train.tsx","component/atom.tsx","component/setting/index.tsx","component/app-header/styled.ts","component/app-header/version-log.tsx","component/app-header/faq.tsx","component/app-header/index.tsx","component/formatting-guide/index.tsx","component/frame-info-block/index.tsx","component/lightbox/index.tsx","component/setting-panel/index.tsx","component/loading/index.tsx","component/image-cropper/index.tsx","component/link-marker/index.tsx","component/index.tsx","page/canvas-panel/download-button.tsx","page/canvas-panel/export-panel.tsx","page/canvas-panel/import-panel.tsx","page/input-panel/const.tsx","page/input-panel/char-picker/index.tsx","page/input-panel/name-style-picker/gradient-picker.tsx","page/input-panel/name-style-picker/style-picker.styled.tsx","page/input-panel/name-style-picker/grid-slider-input.tsx","page/input-panel/name-style-picker/predefined-option-grid.tsx","page/input-panel/name-style-picker/emboss-controller.tsx","page/input-panel/name-style-picker/text-color-picker.tsx","page/input-panel/name-style-picker/index.tsx","page/input-panel/input-train/input-train.styled.tsx","page/input-panel/input-train/frame-train.tsx","page/input-panel/input-train/checkbox-train.tsx","page/input-panel/layout-picker/background-input-group.tsx","page/input-panel/layout-picker/index.tsx","page/input-panel/input-group/card-icon-input-group.tsx","page/input-panel/input-text/util.ts","page/input-panel/input-text/card-text-area.tsx","page/input-panel/input-text/card-text-input.tsx","page/input-panel/input-group/effect-input-group.tsx","page/input-panel/input-checkbox-group.tsx","page/input-panel/input-panel.styled.tsx","page/input-panel/input-group/footer-input-group.tsx","page/input-panel/input-group/image-input-group.tsx","page/input-panel/input-group/name-set-input-group.tsx","page/input-panel/input-group/pendulum-input-group.tsx","page/input-panel/input-group/post-pendulum-input-group.tsx","page/input-panel/text-style-picker.tsx","page/input-panel/index.tsx","page/manager-panel/card-thumb.tsx","page/manager-panel/card-list.tsx","page/manager-panel/manager-sample.tsx","page/manager-panel/index.tsx","app.styled.tsx","app.tsx","service/use-ocg-font.ts","reportWebVitals.js","index.js"],"names":["getBackgroundTypeList","dictionary","value","label","fit","full","frame","CanvasConst","width","height","maximumScale","topToPendulumStructure","topToPendulumStructureFrame","topToArtFrame","pendulumStructureHeight","pendulumIconFrameWidth","pendulumIconFrameHeight","pendulumFrameWidth","pendulumFrameHeight","leftToPendulumStructure","cardBorder","topToEffectBox","leftToEffectBox","effectBoxWidth","effectBoxHeight","finishTypeCardWidth","finishTypeCardHeight","stickerSize","attributeSize","attributeY","attributeX","stickerX","stickerY","DEFAULT_BASE_FILL_COLOR","getDefaultCardOpacity","body","pendulum","text","name","baseFill","artBorder","nameBorder","boundless","CardArtCanvasCoordinateMap","normal","artFinishX","artFinishY","artWidth","artX","artY","ratio","backgroundRatio","artFrameWidth","artFrameHeight","artFrameY","artRatio","type","pendulumSmall","extendedCard","extendedPendulum","extendedPendulumSmall","truePendulum","truePendulumSmall","truePendulumLarge","fullCard","fullPendulum","getArtCanvasCoordinate","isPendulum","opacity","backgroundType","pendulumSize","_objectSpread","distributionMode","result","NO_ATTRIBUTE","AttributeList","nameKey","color","isCreative","isOption","supportFormat","NO_ICON","IconList","_jsx","CloseCircleOutlined","NO_STICKER","StickerList","IconTypeMap","labelKey","fullLabelKey","icon","className","alt","src","concat","process","IconTypeList","Object","values","createPresetNameStyle","presetValue","hasGradient","hasOutline","hasShadow","hasEmboss","pattern","PresetNameStyleMap","commonB","key","image","preset","fillStyle","commonW","skillDefault","lineWidth","lineColor","skillArial","font","lineOffsetX","rare","secretGradient","gradientAngle","gradientColor","secret","platinum2","ultra","ultra2","platinum","shadowColor","shadowOffsetY","shadowOffsetX","shadowBlur","gold","animeRed","lineOffsetY","animeSilver","animeGold","promo","embossGold","embossPitch","embossYaw","embossPlatinum","PresetNameStyleList","PatternMap","none","patternImage","blendMode","type1","type2","type3","type4","type5","overrideFill","type6","type7","type8","type9","PatternList","PendulumSizeMap","small","frameType","effectBoxOffsetY","pendulumBoxX","pendulumBoxY","pendulumBoxWidth","pendulumBoxHeight","pendulumBoxOffsetY","numberBlueX","numberRedX","numberY","artlessFrameY","fontSize","medium","large","PendulumSizeList","PendulumSizeMapException","exceptionPendulumBoxOffsetHeight","zarc","exceptionFrameType","DEFAULT_PENDULUM_SIZE","CondenseTolerantMap","veryStrict","strict","loose","veryLoose","relaxed","EffectCoordinateData","trueWidth","trueBaseline","trueEdge","trueHeightCap","HALF_SCALE_WIDTH_OFFSET","PendulumEffectCoordinateMap","scaleless","TypeAbilityCoordinateMap","tcg","smaller","edgeAlignment","highPendulumNormal","highPendulumSmaller","ocg","CreatorCoordinateMap","PasswordCoordinateMap","ocgKeywordDataList","shortForm","rubyForm","regexForm","rubyFormName","ocgKeywordDataMap","reduce","acc","cur","type3CommonInstruction","type8CommonInstruction","FinishMap","partInstructionMap","pendulumSubstituteMap","art","tooltipKey","ArtFinishMap","FoilNameMap","getFoilList","DefaultFontSizeData","allRightSymbolOffset","bulletWidth","lineHeight","lineCount","bulletOffset","capitalLetterRatio","headTextFontRatio","headTextSpacing","largeSymbolRatio","letterSpacing","offsetY","ordinalFontOffsetY","ordinalFontRatio","squareBracketRatio","DefaultFontData","headTextHeightRatio","headTextOverflow","headTextBold","headTextGapRatio","DefaultEffectFontData","alphabetFont","furiganaFont","ordinalFont","symbolFont","symbolFontRatio","DefaultTCGEffectFontData","fontStyle","fontList","DefaultTCGNormalFontData","DefaultOCGEffectFontData","metricMethod","NormalFontData","EffectFontData","NameFontDataMap","Default","fontData","letterDeviationMap","threshold","letterMap","I","uniformBoxDescent","i","Ì","Í","Î","Ï","ì","í","î","ï","Ĩ","ĩ","Ī","ī","Ỉ","ỉ","Ị","ị","E","È","É","Ê","Ê̄","Ê̌","Ë","è","é","ê","ê̄","ê̌","ë","Ē","ē","Ẻ","ẻ","Ẽ","ẽ","Ế","ế","Ề","ề","Ể","ể","Ễ","ễ","E̩","e̩","È̩","É̩","è̩","Ẹ","ẹ","Ệ","ệ","Arial","weight","OCG","numberFont","numberFontRatio","CreatorFontData","wordLetterSpacing","PasswordFontData","tcgTypeAbilityFontData","iconSymbolWidth","ocgTypeAbilityFontData","PendulumNormalFontData","PendulumEffectFontData","tcgToOCGLetterMap","ocgToTCGLetterMap","ocgNumberCircleMap","copyrightMap","passwordSentenceMap","ocgToTCGTermMap","tcgToOCGTermMap","entries","ocgTerm","tcgTerm","FrameInfoMap","labelColor","edition","labelBackgroundColor","sortWeight","labelBackgroundColorList","labelBackgroundImage","join","frameList","ArrowPositionMap","top","left","LinkRotateList","LinkIndentList","LinkPendulumIndentList","LinkOffsetList","LinkPendulumOffsetList","CapitalLetterRegex","RegExp","SquareBracketLetterRegex","WHOLE_WORD_SOURCE","WholeWordRegex","FragmentSplitRegex","NB_WORD_OPEN","NB_WORD_CLOSE","NB_LINE_OPEN","NB_LINE_CLOSE","NB_FULL_LINE_OPEN","NB_FULL_LINE_CLOSE","NB_UNCOMPRESSED_START","NB_UNCOMPRESSED_END","NormalizeTextRegex","CONTEXTUAL_DOUBLE_QUOTE_SOURCE","contextualDoubleQuoteRegex","NON_BREAKABLE_SYMBOL_SOURCE","nonBreakableSymbolRegex","FLAVOR_CONDITION_SOURCE","TCGSymbolLetterRegex","OCG_KEYWORD_JOIN_REGEX","map","entry","_entry$regexForm","OCG_KEYWORD_SOURCE","CHIISAI_KANA_JOINLIST","ChiisaiRegex","NOT_START_OF_LINE_SOURCE","NonCompressableRegex","OCGAlphabetRegex","OCGNumberRegex","NumberRegex","HiraganaRegex","KatakanaRegex","OCGDotRegex","ChoonpuRegex","NoSpaceRegex","OCGIncreasedLevel2WidthRegex","OCGIncreasedWidthRegex","OCGNoOverheadGapRegex","OCGOffsetMap","OCGLastOfLineOffsetMap","OCGBoxSpacingRatioMap","TCGOffsetMap","TCGLastOfLineOffsetMap","TCGBoxSpacingRatioMap","getBulletSpacing","format","RUBY_REGEX","BREAKABLE_LETTER","GAP_PER_WIDTH_RATIO","getDefaultCard","version","foil","finish","artFinish","nameStyleType","nameStyle","headTextFillStyle","embossThickness","attribute","subFamily","cardIcon","star","starAlignment","artData","artFit","artSource","artCrop","x","y","unit","aspect","hasBackground","background","backgroundData","backgroundFit","backgroundSource","backgroundCrop","linkMap","isLink","pendulumFrame","pendulumEffect","pendulumScaleRed","pendulumScaleBlue","typeAbility","effectStyle","condenseTolerant","upSize","pendulumStyle","effect","setId","atk","def","password","sticker","isFirstEdition","isSpeedCard","isLimitedEdition","isDuelTerminalCard","isLegacyCard","creator","furiganaHelper","statTextStyle","typeTextStyle","effectTextStyle","pendulumTextStyle","otherTextStyle","externalInfo","getDefaultInternalCard","id","uuid","getEmptyCard","OpacityList","subType","DefaultColorList","ResolutionMap","scale","settingValue","style","children","ResolutionList","ExportFormatList","createCanvas","canvas","document","createElement","context","getContext","distanceTransform","array","exponent","index","j","n","strideList","tmp","currentDimensionSize","dimensionCount","shape","length","slice","stride","Array","size","stackSize","infinityHeight","Math","max","phase2ResultAllocation","pool","mallocDouble","phase2ResultArray","ndarray","s_q","mallocUint32","t_q","phase1ResultAllocation","phase1ResultArray","rowIndex","columnIndex","set","get","rowCount","colCount","nextPoint","ptr","min","phase1","data","ops","assign","isFinite","phase2_1","phase2_2","Error","phase2_p","phase2_inf","freeDouble","freeUint32","HorizontalBlurShader","uniforms","vertexShader","fragmentShader","VerticalBlurShader","tDiffuse","v","NormalMapShader","SHADER_FILTER_TYPE","getDefaultHeightToNormalMapOption","invertedRed","invertedGreen","invertedSource","blurSharp","strength","level","HeightToNormalMap","constructor","option","resultCanvas","renderer","effectComposer","normalMapUniform","material","gaussianShaderX","gaussianShaderY","this","init","apply","arguments","undefined","texture","getTexture","tHeightMap","dimensions","setSize","reset","getRenderTarget","invertRed","invertGreen","invertSource","setBlurSharp","setStrengthAndLevel","setType","render","camera","THREE","scene","normalRenderScene","RenderPass","alpha","antialias","setClearColor","clone","transparent","meshGeometry","renderMesh","add","ShaderPass","renderToScreen","EffectComposer","addPass","minFilter","magFilter","stencilBuffer","wrapS","wrapT","anisotropy","needsUpdate","status","invertR","invertG","invertH","h","dz","pow","angleToVector","lightYaw","lightPitch","angleRadian","PI","verticalAngleRadian","cos","sin","z","round","applyEmboss","_ref","inputCanvas","affectedHeight","affectedWidth","maxHeight","lightColorVec","lightAngleVec","minIntensity","maxIntensity","ctx","getImageData","willReadFrequently","computedLightAngleVec","angleVecMagnitude","sqrt","normalizedLightAngleVec","validPixelList","Uint8ClampedArray","dtImageData","row","column","nextDtBitmap","heightIntensityRatio","floor","colIndex","currentIndex","heightValue","heightmapCanvas","putImageData","ImageData","normalMapCanvas","softenNormalMapCanvas","softenNormalMapContext","drawImage","filteredData","bilateralFilter","imageData","diameter","sigmaColor","sigmaSpace","output","halfD","spatialWeight","cx","cy","exp","colorWeight","c1","c2","rSum","gSum","bSum","wSum","ky","kx","nx","ny","centerPixel","neighborPixel","rCenter","gCenter","bCenter","rNeighbor","gNeighbor","bNeighbor","outputPixel","resultData","pixelCnt","nz","enhancedIntensity","abs","intensity","e","console","error","generateLayer","canvasLayer","exportCtx","delayQueue","Promise","resolve","setTimeout","current","toBlob","blob","url","URL","createObjectURL","layer","Image","onload","revokeObjectURL","onerror","checkSpeedSkill","card","checkMonster","getCardIconFromFrame","checkLightHeader","checkLightFrame","includes","JSONUncrush","substring","split","r","pop","JSONCrushSwap","o","replace","cardFieldShortenMap","_newKey","artFrame","passcode","picture","pictureCrop","compressCardData","shortenMap","condensedCard","normalizedCard","keys","forEach","fieldKey","fieldValue","isArray","newFieldKey","_shortenMap$fieldKey","newKey","decompressCardData","decompressedCard","fullKey","shortenKey","shortendKey","legacyReverseCardDataShortener","normalizedCondensedCard","JSON","parse","decodeURIComponent","unshortenedCard","migrateCardData","_migratedCard$art","_migratedCard$artData","_migratedCard$artSour","_migratedCard$backgro","_migratedCard$backgro2","_migratedCard$backgro3","baseCard","migratedCard","kanjiHelper","isMonster","checkYgoCarderCard","object","checkCompactYgoCarderCard","ygoCarderToExportableData","_artRef","isPartial","isPartialNumberEqual","numberLeft","numberRight","isCropDataEqual","cropLeft","cropRight","aspectLeft","heightLeft","widthLeft","xLeft","yLeft","unitLeft","aspectRight","heightRight","widthRight","xRight","yRight","unitRight","isCardDataEqual","cardLeft","cardRight","artCropLeft","backgroundCropLeft","restLCard","_objectWithoutProperties","artCropRight","backgroundCropRight","restRCard","equals","normalizeCardName","replaceAll","normalizeCardEffect","isYgoprodeckImage","link","startsWith","downloadBlob","download","href","window","dataset","downloadurl","downloadEvent","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","cardIconMap","CONTINUOUS","COUNTER","EQUIP","FIELD","RITUAL","reverseCardIconMap","vendorValue","ourValue","boxSizeMap","reverseBoxSizeMap","attributeMap","EARTH","LIGHT","DARK","FIRE","WIND","WATER","SPELL","TRAP","DIVINE","reverseAttributeMap","frameMap","ritual","fusion","synchro","xyz","token","spell","trap","reverseFrameMap","reverseRarityMap","rarityMap","vendorKey","ygoCarderToCardMakerData","artRef","normalizedName","normalizedEffect","normalizedPendulumEffect","normalizedIcon","normalizedAttribute","normalizedFrame","normalizedRarity","rarity","rest","serial","copyright","enabled","blue","red","boxSize","boxSizeEnabled","variant","topLeft","topCenter","topRight","middleLeft","middleRight","bottomLeft","bottomCenter","bottomRight","layout","toDataURL","normal_pendulum","effect_pendulum","ritual_pendulum","fusion_pendulum","synchro_pendulum","xyz_pendulum","reverseLinkMap","ygoproDeckToYgoCarderData","_card_sets$set_code","_card_sets","card_images","card_sets","desc","monster_desc","pend_desc","race","typeline","linkval","linkmarkers","subFrame","normalizedMonsterEffect","splittedMonsterEffect","formattedMonsterEffect","checkExtraDeckMonster","cardImage","image_url_cropped","set_code","marker","padStart","MAX_CONDENSER_THRESHOLD","createCondenser","minThreshold","maxThreshold","median","lastEffective","iterateCount","magnitude","magnitudeReductionRatio","reverseSearch","searchDown","getMedian","setMedian","newMedian","setLastEffective","forceMedian","getLastEffective","applyLastEffective","getIterateCount","condense","worker","effectiveMedian","condenser","finalMedian","satisfy","forcedMedian","createFontGetter","props","defaultWeight","defaultStyle","defaultSize","defaultFamily","sizeAsNumber","parseFloat","family","getFont","filter","part","getFontInfo","setWeight","nextWeight","setStyle","nextStyle","nextSize","calculatedSize","setFamily","nextFamily","getDynamicFont","heightCap","injectDynamicFont","dynamicFontOption","getDefaultGradientPalette","parsePalette","stringifyPalette","palette","offset","stringifiedPalette","useRefresh","useState","cnt","setCnt","useCallback","getNavigationProps","debug","optionLength","stopPropagation","setFocus","onTrigger","onCancel","onKeyPress","tabIndex","onFocus","info","onBlur","onKeyDown","preventDefault","scaleCoordinateData","coordinateData","scaleDrawCoordinate","coordinate","scaleFontSizeData","fontSizeData","scaleFontData","randomCharacter","charSet","charactersLength","charAt","random","forceRefocus","_document$querySelect","selector","querySelector","focus","HexColorRegex","hexToRGBA","hex","withAlpha","pureHex","rgbaList","_pureHex$","_pureHex$2","_pureHex$slice","parseInt","isNaN","isMobileDevice","check","a","navigator","userAgent","vendor","opera","test","substr","mergeClass","_len","args","_key","Boolean","StyledActionIconButton","styled","button","_templateObject","changeCardFormat","targetFormat","_termMap$name","_termMap$effect","_termMap$pendulumEffe","_termMap$creator","_termMap$password","termMap","newSetId","nextNameStyle","_termMap$entry","processLanguage","rawLanguageData","fallbackRawDictionary","normalizedRawDictionary","rawDictionary","getDictionaryEntry","_normalizedRawDiction","applyTemplateNode","template","nodeMap","splitRegex","splittedString","React","Fragment","specializedDictionary","familyName","fileSize","siteLink","contributor.disclaimer.line-5","author1","author2","contributor.template-maker","artist1","artist2","artist3","artist4","maxAmount","settingIcon","guide.format.section-1.content","openTag","closeTag","hotkey","hotkeyAlternative","guide.format.section-2.content","guide.format.section-3.content","separator","guide.format.section-4.content","guide.format.section-5.content","guide.format.section-6.content","colorTab","scaleType","useI18N","create","defaultLanguageName","location","initialParam","searchParams","defaultLanguageFromURL","delete","history","replaceState","state","cachedLanguage","localStorage","getItem","languageMap","defaultLanguage","formalName","codeName","initialMessage","order","active","loadLanguage","async","languageName","_languageMap$eng","response","fetch","headers","languageData","json","processedLanguage","eng","changeLanguage","nextMeta","languageMetadataMap","languageInfo","language","setItem","isLoading","isInitiating","isMetadataReady","initiate","loadLanguageMetadata","loadDefaultLanguage","useLanguage","getLanguage","getState","CsvStandardFieldList","CsvFieldList","normalizeFieldName","field","toLowerCase","CsvFieldSet","Set","analyzeExportHeader","normalizedColumnName","has","normalizeCsvData","normalizeBoolean","fallback","normalizedValue","normalizeInt","normalizeFloat","normalizeColor","csvToCardList","headerIndexMap","_reader","_ref2","_reader2","_ref3","_reader3","_reader4","_reader5","_reader6","_reader7","_reader8","_reader9","_reader10","_reader$split$filter","_reader11","_reader12","_reader13","_reader14","_ref4","_reader15","_reader16","_reader17","_ref5","_reader18","_reader19","_reader20","_reader21","_reader22","_reader23","_reader24","_reader25","_reader26","_reader27","_reader28","_reader29","_reader30","_reader31","_reader32","_reader33","_reader34","_reader35","_reader36","_emptyCard$isLink","_filter","emptyCard","reader","getCsvFieldReader","_headerIndexMap$field","_row$columnIndex","trim","rawStar","rawFoil","rawAttribute","toUpperCase","rawTypeAbility","effectUpSize","pendulumEffectUpSize","effectFontStyle","pendulumEffectFontStyle","emptyOpacity","emptyArtCrop","emptyBackgroundCrop","emptyNameStyle","emptyTextStyle","_reader37","compareInt","statLeft","statRight","parsedStatLeft","parsedStatRight","isLeftFinite","isRightFinite","fallbackStatLeft","fallbackStatRight","localeCompare","compareName","l","compareSetId","compareAtk","compareDef","compareStar","compareFrame","_FrameInfoMap$r$pendu","_FrameInfoMap$r$pendu2","_FrameInfoMap$l$pendu","_FrameInfoMap$l$pendu2","frameResult","normalizeCard","chainCompare","compareList","lCard","rCard","SortFunctionMap","sortFunction","cardList","sort","applyFilter","filterMap","filterList","filteredList","currentFilter","useCardList","subscribeWithSelector","activeId","cardDisplayList","filterFunctionMap","filterResetSignal","isListDirty","listName","pendingActiveCard","visible","setFilterFunction","nextFilterFunctionMap","resetFilter","addCard","newCard","changeEditStatus","event","toggleVisible","_ref6","setListName","setPendingActiveCard","changeActiveCard","nextActiveCard","checkPurity","_ref7","nextIsListDirty","targetCard","find","setActiveId","setCardList","_cardList$","deleteCard","_ref8","_ref9","_normalizedCardDispla","_normalizedCardDispla2","_normalizedCardDispla3","normalizedCardList","normalizedCardDisplayList","currentActiveId","findIndex","duplicateCard","_ref10","targetIndex","_ref11","clonedId","clonedCard","nextCardList","sortList","_ref12","decodeCard","cardData","decodedCard","unwrappedCard","isPartialCard","checkYgoproDeckCard","pendulumBoxSize","useImageData","levelAsNumber","namePreset","cardMakerToYgoCarderData","rebuiltCard","legacyRebuildCardData","notification","message","description","VariantConfigMap","debounce","wait","throttle","useCard","setCard","cardTransform","forcePurityCheck","nextCard","getUpdater","_VariantConfigMap$var","valueTransform","returnFunction","_e$target","target","variantConfig","useSetting","allowHotkey","exportFormat","reduceMotionColor","resolution","globalScale","showCreativeOption","showExtraDecorativeOption","mirrorPendulumScale","_localStorage$getItem","cachedStore","setting","updateSetting","transformerOrPayload","currentStore","newSetting","stringify","useCardExport","isTainted","isInitializing","exportCanvasRef","exportRef","onExport","onDownloadError","onDownloadComplete","currentCard","pendingSave","useRef","drawCanvas","clonedCanvas","cloneNode","drawCanvasContext","clonedCanvasContext","click","classList","useEffect","relevant","title","saveBeforeReload","_process$env$REACT_AP","addEventListener","removeEventListener","confirmReload","ev","_process$env$REACT_AP2","close","_document$getElementB","_document$getElementB2","_document$getElementB3","_document$getElementB4","getElementById","setAttribute","pipelineRunning","currentPipeline","isRelevant","_document$getElementB5","_document$getElementB6","_document$getElementB7","_document$getElementB8","pushState","URLSearchParams","search","newurl","protocol","host","pathname","toString","path","insertUrlParam","onSave","_document$querySelect2","queuingSize","isPipelineRunning","CanvasHeight","CanvasWidth","randomDarkColor","drawMarker","edge","baseline","xRatio","currentFillStyle","beginPath","rect","fillTextLeftWithSpacing","str","letterSpacingRatio","stroke","textAlign","charList","curLeft","char","fillText","strokeText","measureText","fillTextRightWithSpacing","curRight","c","clearCanvas","clearRect","getFinishIterator","finishMap","caller","finishType","finishInformation","_partInstructionMap$n","_pendulumSubstituteMa","instructionList","pendulumSuffix","globalCompositeOperation","globalAlpha","DEFAULT_LINE_COLOR","DEFAULT_SHADOW_COLOR","DEFAULT_TEXT_COLOR","setTextStyle","blur","colorGradient","lineColorGradient","useDefault","strokeStyle","imageCacheMap","drawFrom","source","dx","dy","_imageCacheMap$source","_imageCacheMap$source2","ready","actualDX","actualDY","imageCached","cache","once","drawAsset","drawAssetWithSize","dw","dh","sx","sy","sw","sh","_imageCacheMap$source3","_imageCacheMap$source4","actualDW","actualDH","actualSX","actualSY","actualSW","actualSH","drawFromWithSize","drawWithStyle","clonedCtx","fillRect","resetMainCanvasStyle","getLetterWidth","_boxSpacingRatioMap$l2","letter","isLastOfLine","boundWidth","boxSpacingRatioMap","offsetMap","lastOfLineOffsetMap","metric","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundWidth","kerningScaleRatio","spacingRatio","offsetRatio","_boxSpacingRatioMap$l","letterBoxSpacing","standardMetricRatio","actualLetterWidth","drawLetter","_letterMap$letter","deviation","letterMetric","textDrawer","letterWidth","scaledBoundingWidth","scaledBaseline","scaledEdge","boundingOffset","externalOffset","uniformYScale","boxDescentCompensate","actualBoundingBoxDescent","actualBoundingBoxAscent","actualLetterHeight","tokenizeText","keepControlCharacter","regex","getTextWorker","fontController","scaledDefaultFontSizeData","numberFontMemory","symbolFontMemory","ordinalFontMemory","furiganaFontMemory","largerTextFontMemory","applyNumberFont","stopApplyNumberFont","applyLargerText","fontRatio","stopApplyLargerText","applySymbolFont","stopApplySymbolFont","applyOrdinalFont","stopApplyOrdinalFont","applyFuriganaFont","bold","stopApplyFuriganaFont","applyAsymmetricScale","yRatio","applyScale","xScale","yScale","resetScale","setTransform","reverseScale","scaleValue","drawBullet","spaceAfter","bulletRadius","arc","fill","analyzeHeadText","footText","footTextWidth","headText","headTextLetterWidth","headTextGap","gapPadding","fitFootText","sentenceXRatio","noHeadText","condenseHeadText","alignCenterLetterSpacing","internalXRatio","alignCenterHeadTextWidth","alignEvenlyLetterSpacing","alignEvenlyHeadTextWidth","alignment","trueHeadTextWidth","headTextWidth","baseHalfGap","halfGap","headTextXRatio","getLostLeftWidth","prevGap","curGap","analyzeToken","rawToken","nextToken","previousTokenGap","_letterSpacing","textData","totalWidth","leftMostLetter","spaceCount","spaceAtEnd","rightGap","leftGap","currentFont","fontLevel","defaultGap","currentRightGap","offsetable","leftMostGap","fragmentList","isLeftmostFragment","fragment","fragmentWidth","rubyType","lostLeftWidth","normalizedWordSpacingRatio","remainFragment","currentLetter","nextRemainFragment","analyzeLine","line","baseXRatio","isLast","tokenList","totalContentWidth","lineSpaceCount","currentGap","expectedSpaceWidth","spaceWidth","createLineList","paragraphList","additionalLineCount","currentLineList","currentLineCount","accumulatedLineCount","curr","scaledWidth","addedLineCount","wordList","currentLineWidth","unCompressedFlag","tokenWidth","push","actualLineWidth","fillHeadText","textWorker","externalHeadTextXRatio","overflow","baseLoneTokenRatio","finalizedRatio","currentEdge","drawLine","drawHeadText","iconPositionList","previousTokenRebalanceOffset","tokenEdge","tokenCnt","gapRatio","next2ndToken","analyzeTokenParameter","drawLetterParameter","tokenRightGap","totalTokenWidth","indent","fragmentEdge","fragmentCnt","_fragmentList","_fragmentList2","nextFragment","next2ndFragment","vacantLeftWidth","isNextTokenOffsetable","nextUncompressedLeftGap","nextLeftGap","lostRightWidth","totalVacantSpace","rebalancedSpace","nextTokenRebalanceOffset","footTextFragmentEdge","currentStrokeStyle","currentShadowColor","currentShadowOffsetX","currentShadowOffsetY","currentShadowBlur","headTextFragmentEdge","fragmentNaiveWidth","currentPosition","drawLetterofWordParameter","letterOffset","normalizeCardText","multiline","dictionaryType","nonNullableText","normalizedText","letterSwapMap","_letterSwapMap$letter","textAfterJoinRow","textAfterDetectBlockWord","m","correspondingCircleSymbol","textAfterProcessing","_ocgKeywordDataMap$m$","keywordSubtitue","textAfterNormalizeBlockWord","currentDepth","drawEffect","_fullLineList$length","content","isNormal","fontDataKey","textStyle","sizeList","defaultSizeLevel","forceRelaxCondenseLimit","sizeLevel","normalizedContent","effectText","effectFlavorCondition","fullLineList","fullLineListOption","_flavorConditionRegex","lineRegexSource","fullLineRegexSource","wholeLineRegex","lineReplacement","lineContent","fullLineReplacement","fullLineContent","willContinue","exec","flavorConditionRegex","potentialFlavorConditionText","splitEffect","effectiveLineCount","scaledFontData","_CondenseTolerantMap$","_sizeList$appliedSize","_tolerancePerSentence","requireDynamicSize","appliedSizeLevel","tolerancePerSentence","trueWidthStart","trueBaselineStart","useDynamicSize","dynamicFontData","dynamicSizeLevel","dynamicFont","dynamicFontList","lineListWithRatio","resetStyle","flavorFontData","dynamicFlavorFontData","flavorFontSizeData","flavorTextCurrentFont","flavorTextData","drawLinkRatingText","baseDrawLinkArrowMap","positionType","all","isActive","baseLink","activeLink","resetTransform","baseDrawLinkMapFoil","withBorder","cardWidth","cardHeight","getLayoutDrawFunction","artworkCanvas","backgroundCanvas","bottomFrame","isSpeedSkill","isXyz","pendulumFrameTypeMap","useArtFinish","loopFinish","loopArtFinish","keepArtBorder","opacityBody","opacityName","opacityPendulum","opacityText","effectBoxY","backgroundEffectBoxY","backgroundEffectBoxWidth","backgroundEffectBoxHeight","hasFoil","frameBorderType","nameBorderTypeList","applyArtFinish","resultAPI","calculateCardArtRedrawCoordination","imageCanvas","customOpacity","extraHeightRatio","customBackgroundType","normalizedOpacity","bodyOpacity","imageWidth","imageHeight","imageScaledRatio","sourceOffsetX","destinationOffsetX","sourceOffsetY","destinationOffsetY","offsetHeight","destinationX","destinationY","destinationWidth","destinationHeight","fillWidth","fillHeight","drawFrame","backgroundWidth","backgroundHeight","drawCardArt","drawBackground","boundary","redrawCoordination","backgroundSourceOffsetX","backgroundSourceOffsetY","backgroundOffsetHeight","backgroundDestinationX","backgroundDestinationY","backgroundDestinationWidth","backgroundDestinationHeight","drawAttribute","attributeCanvas","attributeContext","attributeFinishCanvas","attributeFinishContext","drawStar","normalizedCardIcon","onStarDraw","starWidth","normalizedStarCount","leftEdge","resetShadow","starCanvas","starContext","starFinishCanvas","starFinishContext","drawStarContent","drawPendulumScaleIcon","pendulumIconCanvas","pendulumIconContext","drawLinkArrowMap","drawStatBorder","drawNameBackground","drawEffectBackground","withPendulum","effectBoxX","_PendulumSizeMapExcep","drawFrameBorder","drawNameBorder","drawArtBorder","artFrameSource","drawPendulumBorder","foilType","pendulumBorderCanvas","pendulumBorderContext","drawEffectBorder","drawCardBorder","drawArtBorderFoil","drawEffectBorderFoil","drawLinkMapFoil","drawNameFinish","drawAttributeFinish","drawArtFinish","drawArtOverlayFinish","drawArtBorderFinish","drawPendulumArtBorderFinish","drawBorderPendulumFinish","finishLinkBase","drawFrameFinish","drawFrameBackgroundFinish","drawOverlayFinish","overlayType","drawCardBorderFinish","drawName","_edge","_trueBaseline","_width","_PatternMap","_NameFontDataMap","_fontData$fontList$0$","cloneCtx","patternBlendMode","fontGetter","quoteConvertedValue","crudeTokenList","fontGetterForWidthCalculating","normalStyle","symbolStyle","maxAscent","maxDescent","textMetric","gradient","getNameGradient","angleAsDegree","colorStopList","contentWidth","baseKAF","quarterSlot","KAF","originHeight","AD","FDA","asin","AF","AL","FL","offsetX","topX","topY","botX","botY","createLinearGradient","addColorStop","thickenEmboss","resetEmbossStroke","patternCanvas","patternContext","affectedWidthExtraPadding","embossedImageData","ceil","resetStroke","lineJoin","shadowCanvas","shadowContext","defaultTextStyle","sizeMap","drawTypeAbilityText","_TypeAbilityCoordinat","_TypeAbilityCoordinat2","scaledBaseFontData","drawScale","_baseline","_fontSize","exceptionDigitWidthRatio","digitList","digit","accLeft","drawStatText","cursorEndOfATK","drawStat","statWidth","tokenizedText","prev","nextWidth","condenseRatio","_","arr","curText","nextEdge","useMasterSeriDrawer","canvasMap","artworkCanvasRef","backgroundCanvasRef","frameCanvasRef","creatorCanvasRef","effectCanvasRef","nameCanvasRef","passwordCanvasRef","pendulumEffectCanvasRef","pendulumScaleCanvasRef","setIdCanvasRef","statCanvasRef","stickerCanvasRef","cardIconCanvasRef","typeCanvasRef","finishCanvasRef","lightboxRef","previewCanvasRef","drawingPipeline","rerun","instructor","overlay","checkNormal","checkXyz","checkLink","requireShadow","lightFooter","lightHeader","levelStyle","resolvedEffectTextStyle","resolvedPendulumEffectTextStyle","resolvedStatTextStyle","resolvedTypeTextStyle","resolvedOtherEffectTextStyle","useMemo","levelColor","customEffectText","effectTextFillStyle","effectHasShadow","effectTextShadow","customPendulumEffectText","pendulumEffectTextFillStyle","pendulumEffectHasShadow","pendulumEffectTextShadow","customTypeText","typeTextFillStyle","typeHasShadow","typeTextShadow","customStatText","statTextFillStyle","statHasShadow","statTextShadow","customOtherEffectText","otherEffectTextFillStyle","otherEffectHasShadow","otherEffectTextShadow","prepareStyle","normalizedSubFamily","normalizedTypeAbility","statInEffect","typeInEffect","withBlueScale","withRedScale","imageChangeCount","readyToDraw","_frameCanvasRef$curre","fillBaseColor","w","customFill","hasArtBorder","artHeight","bordered","drawPredefinedMark","_pendulumScaleCanvasR","_nameCanvasRef$curren","_nameCanvasRef$curren2","_PresetNameStyleMap$f","_PresetNameStyleMap$f2","contextualFont","contextualColor","_nameStyle$preset","_resultNameStyle$pres","resultNameStyle","contextualOutline","foilStyle","frameStyle","resolveNameStyle","_statCanvasRef$curren","_setIdCanvasRef$curre","drawSetId","withShadow","spacing","xOffset","resetTextStyle","_passwordCanvasRef$cu","isNumberPassword","willOffset","rightEdge","_PasswordCoordinateMa","_fontSizeData$offsetY","baselineOffset","edgeOffset","internalEffectiveMedian","internalTextData","internalTrueWidth","drawPasswordText","willDraw","bottom","bottomOffset","_baselineOffset","superTextOffset","draw1stEdition","_creatorCanvasRef$cur","_creatorCanvasRef$cur2","endOfCreatorText","_CreatorCoordinateMap","drawCreatorText","compactThreshold","compactOffset","_endOfCreatorText$lef","widthOffset","drawLimitedEditionMark","_stickerCanvasRef$cur","stickerCanvas","stickerContext","drawSticker","stickerFinishCanvas","stickerFinishContext","_effectCanvasRef$curr","_typeCanvasRef$curren","typeCtx","customizeEffectStyle","normalizedUpSize","useItalic","effectIndexSize","coordinateKey","getEffectFontAndCoordinate","willDrawTypeAbility","willDrawIcon","typeAbilityWithIcon","normalizedTypeAbilityText","defaultFillStyle","normalizedStyle","naturalWidth","drawTypeAbility","_pendulumEffectCanvas","customPendulumStyle","coordinateList","modifiedCoordinateList","_finishCanvasRef$curr","drawHistory","exportProps","exportCanvas","_lightboxRef$current","_previewCanvasRef$cur","_previewCanvasRef$cur2","catch","draw","notificationLocalStorageKey","useNotificationMemory","condenseReminder","versionReminder","faqReminder","memory","updateNotification","newNotificationMemory","updateNotificationMemory","useNotification","targetMemory","useShallow","StyledBatchConverterModal","Modal","BatchConverter","setVisible","isRunning","setRunning","isReverse","setReverse","fileList","setFileList","isExceedMaxAmount","_jsxs","_Fragment","okButtonProps","disabled","okText","cancelText","onOk","convertedFileList","file","reject","FileReader","resultObject","isYgoCarderCard","convertedCard","Blob","readAsText","zipObject","JSZip","zipBlob","generateAsync","onClick","ArrowRightOutlined","accept","multiple","onChange","fileFromInput","files","nextFileList","targetFile","item","CloseOutlined","curList","Tooltip","RetweetOutlined","ErrorBoundary","Component","super","hasError","componentDidCatch","Sentry","componentStack","ANGLE_PICKER_CLASSNAME","AnglePickerContainer","div","CircularAnglePicker","AnglePicker","StyledExplanationIcon","ExclamationCircleOutlined","Explanation","overlayClassName","iconProps","restIconProps","Popover","StyledIconButtonContainer","span","IconButton","Icon","tooltipProps","containerProps","customOnClick","restContainerProps","StyledHeaderButtonContainer","_templateObject2","InputTrainStyle","css","StyledRadioTrainContainer","UnrefRadioTrain","ref","activeValue","optionList","suffix","internalRef","useImperativeHandle","_internalRef$current","isChecked","RadioTrain","forwardRef","StyledCode","StyledMarkdown","StyledPopMarkdown","_templateObject3","InternalPopover","CardActionButton","_templateObject4","CombinedSliderContainer","_templateObject5","PopoverButton","_templateObject6","$active","$softMode","rotate","keyframes","StyledSettingPanel","StyledSettingButtonContainer","SettingButton","trigger","Checkbox","checked","placement","resolutionValue","SettingFilled","titlShaking","VersionLogButtonLabel","$animating","FaqButtonLabel","QuoteContainer","LogSentence","li","VersionLogStore","isReady","versionLog","getLog","responseLog","VersionLog","log","setLog","loading","setLoading","logList","StyledVersionLog","VersionLogButton","memo","animating","setAnimating","setMemoizedVersion","currentSemver","memoizedSemver","compareSemver","b","majorA","minorA","patchA","String","Number","majorB","minorB","patchB","onMouseOver","Quote","author","question","QuestionAndFeedback","setMemoizedReminder","footer","Tabs","TabPane","tab","answer","Affiliation","rel","GithubFilled","StyledAppHeaderButtonContainer","AppHeader","Radio","Group","Button","DatabaseFilled","TaintedCanvasPanel","TaintedCanvasWarning","StyledContainer","StyledImageSection","StyledImageWithCaptionContainer","ImageWithCaption","caption","FormattingHelpDrawer","modalOpen","setDrawerOpen","Drawer","onClose","BulbFilled","StyledFrameContainer","$withPillar","StyledFramePillar","FrameInfoBlock","backgroundColor","StyledLightboxContainer","Controls","zoomIn","zoomOut","ZoomInOutlined","ZoomOutOutlined","FullscreenExitOutlined","FullscreenOutlined","Lightbox","lightboxVisible","setLightboxVisible","canvasKey","setCanvasKey","lightboxCanvasRef","setScale","targetCanvas","_lightboxCanvasRef$cu","_lightboxCanvasRef$cu2","refresh","getCanvasKey","wrapClassName","forceRender","TransformWrapper","initialScale","initialPositionX","initialPositionY","minScale","maxScale","onTransformed","utils","TransformComponent","wrapperClass","wrapperStyle","maxWidth","StyledDownloadDropdownLabel","Menu","Item","StyledDownloadDropdownOption","ResolutionPicker","domEvent","StyledLoadingFullViewContainer","Loading","FullView","normalizeCrop","crop","cropWidth","cropHeight","oldHeightToWidthRatio","newHeightToWidthRatio","scaleRatio","nextX","nextY","newWidth","naturalHeight","acceptableError","nextHeight","oversizeRatio","normalizedHeight","normalizedWidth","normalizedX","normalizedY","ImageCropper","forwardedRef","forceFit","defaultSourceType","defaultInternalSource","defaultExternalSource","receivingCanvas","beforeCropper","defaultCropInfo","onSourceLoaded","onSourceChange","onCropChange","onTainted","onMaxSizeExceeded","onForceFitChange","normalizedDefaultSource","fileInputRef","crossorigin","setCrossOrigin","redrawSignal","setRedrawSignal","sourceType","setSourceType","inputMode","setInputMode","internalSource","setInternalSource","setError","interacted","setInteracted","externalSource","setExternalSource","imgRef","setCrop","completed","isMigrated","setMigrated","currentCrop","completedCrop","pendingCrop","onLoad","img","internalId","pendingId","normalizedCrop","_completedCrop$unit","_completedCrop$width","_completedCrop$x","_completedCrop$y","transform","zoomX","zoomY","cropUnit","pixelRatio","devicePixelRatio","fitCropData","expectedDrawWidth","drawWidth","expectedDrawHeight","drawHeight","drawCoordinateX","drawCoordinateY","imageSmoothingQuality","_drawWidth","_drawHeight","newValue","hasImage","forceSource","cropInfo","currentSource","isDownloadable","DownloadOutlined","previewUrl","anchor","generateDownload","Input","placeholder","maxLength","allowClear","maxFileSize","readAsDataURL","alert","_fileInputRef$current","setValue","_cur$completed","newCrop","VerticalAlignMiddleOutlined","_cur$completed2","Empty","ReactCrop","imageStyle","backgroundImage","onImageLoaded","onImageError","onDragStart","pixelCropData","percentCropData","onComplete","percentData","ruleOfThirds","StyledLinkMarkChooser","LinkMarkChooser","defaultValue","onStatusChange","choosenArrow","setChoosenArrow","literalChoosenArrow","normalizedIndex","newMap","GuardedSlider","Slider","StandaloneLabel","StyledDropdownOption","StyledDropdown","Container","Option","ResolutionButton","StyledDownloadButton","DownloadButton","isDownloading","setDownloading","Dropdown","GatewayOutlined","StyledExportContainer","StyledCardDataCopyButton","CardDataCopyButton","withText","showFlashOverlay","setFlashOverlay","copyingContent","copy","CheckOutlined","getExportModeDataList","converter","ExportPanel","tainted","onRequireExportData","onRequireDownload","mode","setMode","internalCardData","setInternalCardData","other","ygocarder","inputId","focusInput","select","setCardData","openModal","display","destroyOnClose","CopyOutlined","LinkOutlined","FileImageOutlined","TextArea","rows","downloadAsFile","rawData","StyledImportContainer","ImportPanel","onImport","directUploadId","uploadId","ygoCarderImportDirectInputRef","ygoCarderImportInputRef","inputKey","setInputKey","requestImport","cleanup","startImport","imageSurvey","surveyedDecodedCard","writeOnCurrentCard","addToList","getFileAndImport","startRequest","_value$trim","uncrushedValue","endsWith","_baseCardData$data$fi","ygoproDeckApi","ok","baseCardData","_l$misc_info","_r$misc_info","lMisc","misc_info","rMisc","viewsweek","views","confirmLoading","cancelButtonProps","onPressEnter","_ygoCarderImportInput","_ygoCarderImportDirec","UploadOutlined","FormatButtonList","fontWeight","ArtFinishButtonList","getFrameButtonList","StarButtonList","StickerButtonList","CondenseThresholdButtonList","StyledCharPickerContainer","CharPicker","targetId","onPick","internalOnPick","inputTarget","myValue","selection","createRange","position","selectionStart","startPos","endPos","selectionEnd","insertAtCursor","WrappedColorPicker","onSelect","onOffsetChange","onRemove","internalColor","setInternalColor","internalOffset","setInternalOffset","setInternalId","debouncedOnChange","setColor","colorInfo","setCurrentOffset","InputNumber","ChromePicker","styles","default","picker","boxShadow","padding","disableAlpha","onChangeComplete","getPaletteInfo","newColorList","colorList","raw","TextGradientPicker","_palette$colorList$le","_palette$colorList","externalPalette","angle","externalAngle","memoizedOnChange","pickerRef","setAngle","setPalette","_intialPalette$0$id","_intialPalette$","intialPalette","currentControlId","changePalette","nextColorList","_newPalette$0$id","_newPalette$","newPalette","setPickerOnMount","_pickerRef$current","_pickerRef$current2","targetColor","GradientPicker","paletteHeight","maxStops","minStops","stopRemovalDrop","onPaletteChange","onColorStopSelect","stopColor","_pickerRef$current3","_nextColorList$0$id","nextId","_pickerRef$current4","StyledPatternContainer","StyledPatternOption","StyledPredefinedContainer","StyledPredefinedOption","GridSliderInput","fieldMap","labelMap","xField","yField","colorField","widthField","xValue","yValue","colorValue","widthValue","widthLabel","nextValue","keyList","PowerSlider","axis","track","gridRow","thumb","zIndex","xmax","xmin","ymax","ymin","CompactPicker","colors","PredefinedOptionGrid","containerRef","_containerRef$current","MaterialColor","$color","EmbossControlContainer","VECTOR_VALUE_EPSILON","EmbossController","defaultPitch","defaultYaw","defaultThickness","materialColor","onColorTabNavigate","requestUpdate","thickness","setThickness","verticalAngle","setVerticalAngle","currentColorVec","currentAngleVec","currentThickness","allowPickColor","nextAngle","nextColor","hexToRgb","yaw","pitch","SyncOutlined","TextColorPickerContainer","TextColorPicker","NameStylePicker","frameInfo","defaultType","undebouncedOnChange","optionGridRef","predefinedDropdownVisible","setPredefinedDropdownVisible","requestUpdateCustomStyle","sendCustomStyleSignal","memoizedOnGradientChange","reduceColorMotion","getNameFontOptionList","shadowPickeRef","outlinePickeRef","embossControllerRef","_shadowPickeRef$curre","_outlinePickeRef$curr","_embossControllerRef$","currentValue","patternStyle","isStyleCustom","isStylePredefined","optionInputContainerId","applyAutoStyle","applyPredefinedStyle","_PresetNameStyleMap$v","applyCustomStyle","colorPickerButtonId","_optionGridRef$curren","onVisibleChange","_PresetNameStyleMap$k","hexColor","CaretDownOutlined","fontValue","TrainGridStyle","StyledFrameTrain","FrameTrain","onSTFrameChange","onPasswordChange","onStatChange","changeFrame","frameValue","nextFrame","willBecomeST","willRemoveStat","nextTypeAbility","nextPassword","nextAtk","nextDef","nextStar","StyledCheckboxTrainContainer","CheckboxTrain","tooltip","StyledImageCropper","BackgroundInputGroup","imageCropperRef","changeBackgroundSource","changeBackground","changeBackgroundData","changeBackgroundFit","changeBackgroundCrop","byUser","_imageCropperRef$curr","_imageCropperRef$curr2","_imageCropperRef$curr3","_imageCropperRef$curr4","_imageCropperRef$curr5","_imageCropperRef$curr6","StyledBoundlessOverlay","StyledLayoutPickerContainer","StyledBaseFillPickerContainer","LayoutPicker","_backgroundInputRef$c4","backgroundInputVisible","setBackgroundInputVisible","backgroundInputHidden","setBackgroundInputHidden","setOpacity","backgroundInputRef","changeBackgroundType","changeHasBackground","_backgroundInputRef$c","_backgroundInputRef$c2","_backgroundInputRef$c3","noBackground","_language$tooltipKey","_opacity$type","_opacity$type2","activable","destroyTooltipOnHide","BorderOuterOutlined","step","StyledIconDropdown","StyledCheckboxStarTrain","CardIconInputGroup","changeCardIcon","changeSubFamily","changeStar","changeStarAlignment","autoIconType","iconTypeData","iconDropdownText","IconDropdownLabel","IconDropdown","DropdownChildren","AlignLeftOutlined","AlignCenterOutlined","AlignRightOutlined","availableCommand","resolveHotkey","allowNewLine","holdingShift","onResult","selectedText","keepInline","wrappedText","cursorOffset","placeCursorInInput","_target$selectionEnd","CardTextArea","onTakePicker","immediateValue","cursorData","setCursorData","internalOnChange","eventOrValue","externalSetValue","getPickerRef","autoComplete","spellCheck","_ev$currentTarget$sel","_ev$currentTarget$sel2","ctrlKey","metaKey","currentTarget","shiftKey","joinedText","CardTextInput","EffectInputGroup","effectInputRef","changeEffect","_effectInputRef$curre","_effectInputRef$curre2","autoSize","minRows","StyledCheckboxGroup","CardCheckboxGroup","onFirstEditionChange","updatedPart","onLimitedEditionChange","onDuelTerminalCardChange","onSpeedCardChange","onLegacyCardChange","nextIsDuelTerminalCard","nextIsFirstEdition","nextIsLimitedEdition","nextIsSpeedCard","StyledPendulumFrameContainer","StyledInputLabelWithButton","StyledNameSetIdInputContainer","StyledFormatRadioTrain","StyledFooterInputContainer","FooterInputGroup","passwordInputRef","creatorInputRef","atkInputRef","defInputRef","copyrightList","changeATK","changeDEF","changePassword","onStickerChange","changeCreator","_atkInputRef$current","_defInputRef$current","_passwordInputRef$cur","_creatorInputRef$curr","addonBefore","_passwordInputRef$cur2","arrow","_creatorInputRef$curr2","UnorderedListOutlined","StyledImageRadioTrain","ImageInputGroup","changeLinkMap","changeLinkStatus","willBecomeLink","changeArt","changeArtData","changeArtFit","changeArtSource","changeArtFinish","changeImageCrop","StyledNameInputContainer","StyledCopyButton","NameSetInputGroup","nameInputRef","setIdInputRef","changeSetId","changeName","_nameInputRef$current","_setIdInputRef$curren","clipboard","writeText","_setIdInputRef$curren2","randomSetID","BottomFrameOptionGrid","recentCustomPendulumFrame","inputRef","_inputRef$current","StyledPendulumFrameInputContainer","StyledPendulumInputContainer","PendulumInputGroup","softMode","bottomFrameOptionGridRef","pendulumEffectInputRef","frameDropdownVisible","setFrameDropdownVisibleVisible","onRedScaleChange","onBlueScaleChange","onPendulumSizeChange","changePendulumEffect","pendulumSizeList","getPendulumSizeList","_pendulumEffectInputR","currentPendulumFrame","willBecomePendulum","_bottomFrameOptionGri","willMirror","StyledPostPendulumInputContainer","PostPendulumInputGroup","typeAbilitySeparator","typeAbilityInputRef","changeTypeAbility","toggleFuriganaHelper","_typeAbilityInputRef$","typeLabel","isOCG","onCondenseTolerantChange","StyledInlineColorPickerContainer","InlineColorList","rgb","InlineColorPicker","currentText","setCurrentText","internalValue","setInternalValue","dotColor","StyledTextStyleContainer","StyledTextStylePicker","TextStyleInfoMap","keyName","extraKeyname","TextStylePicker","styleList","extraValue","custom","shadow","applyStyle","newStyle","applyShadow","shadowValue","textShadow","CardInputPanel","stylePickerRef","stylePickerResetCount","setStylePickerResetCount","foilButtonList","getFoilButtonList","imageInputGroupRef","layoutPickerRef","nameSetIdInputGroupRef","pendulumInputGroupRef","effectInputGroupRef","postPendulumInputGroupRef","footerInputGroupRef","pickerTarget","setPickerTarget","changeFoil","onFinishChange","changeOpacity","changeAttribute","changeNameStyle","attributeList","getAttributeList","finishList","getFinishList","_stylePickerRef$curre","_layoutPickerRef$curr","_imageInputGroupRef$c","_imageInputGroupRef$c2","_layoutPickerRef$curr2","_layoutPickerRef$curr3","forceCardData","_imageInputGroupRef$c3","_layoutPickerRef$curr4","_nameSetIdInputGroupR2","_pendulumInputGroupRe2","_effectInputGroupRef$2","_postPendulumInputGro2","_footerInputGroupRef$2","formatValue","_nameSetIdInputGroupR","_effectInputGroupRef$","_pendulumInputGroupRe","_postPendulumInputGro","_footerInputGroupRef$","nextFormat","formatSwappedCard","_postPendulumInputGro3","_footerInputGroupRef$3","_footerInputGroupRef$4","THUMB_TO_CARD_RATIO","StyledCardThumb","CardThumb","_FrameInfoMap$frame","_FrameInfoMap$frame2","_FrameInfoMap$normali","_FrameInfoMap$normali2","onDuplicate","onDelete","actionVisible","setActionVisible","normalizedCardName","normalizedBottomFrame","normalizedCardArt","normalizedBackgroundArt","normalizedCardIconType","joinedTypeAbility","canvasCoordinate","DelayedImage","artLink","indentList","offsetList","Popconfirm","onConfirm","calculateThumbArtStyle","baseCrop","thumbArtYGap","croppedWidth","croppedHeight","thumbToCroppedWidthRatio","internalLink","setInternalLink","imageRef","calculatedStyle","setCalculatedStyle","_imageRef$current$nat","_imageRef$current","_imageRef$current$nat2","_imageRef$current2","_imageRef$current$nat3","_imageRef$current3","_imageRef$current$nat4","_imageRef$current4","_imageRef$current$nat5","_imageRef$current5","_imageRef$current$nat6","_imageRef$current6","StyledManagerCardList","CardThumbRow","list","onDownload","ManagerCardList","onRequestImport","reselectCnt","setReselectCnt","deleteAndReselect","AutoSizer","List","itemCount","itemSize","itemData","overscanCount","Panel","Collapse","StyledToggleButton","StyledMono","StyledManagerSample","CopiableCode","ManagerSample","FileTextOutlined","ghost","header","altField","_ref13","_ref14","_ref15","_ref16","_ref17","_ref18","_ref19","_ref20","chanceToRemindBackup","seedIncrement","internalChance","getNaivePseudoRandomizer","StyledCardManagerPanel","StyledCardManagerDrawer","CardManagerPanel","listUploadId","listUploadRef","readingFile","setReadingFile","savingFile","setSavingFile","debounceSearch","activeCard","unsub","subscribe","nextSignal","CardManagerMonitor","wouldDownload","confirm","csvdata","valueList","rowLength","write","rowValue","stringifedExternalInfo","cardListToCsv","errorMessage","errorDescription","exportWorkbook","XLSX","read","writeFile","LoadingOutlined","_listUploadRef$curren","announceError","willImport","arrayBuffer","fileName","workbook","codepage","csvBook","sheet_to_json","Sheets","SheetNames","maskClosable","mask","closeIcon","StyledCardManagerMonitor","StyledDataButtonPanelContainer","CardPreviewContainer","CardCanvasGroupContainer","StyledAppLoading","StyledByMe","ErrorAlert","OverlayButton","_templateObject7","LightboxButton","_templateObject8","ResetButton","_templateObject9","configure","ignoreTags","AppGlobalHotkeyMap","EXPORT","IMPORT","MERGE","VIEW","DOWNLOAD","App","_languageInfo$initial","_lightboxRef$current$","_lightboxRef$current3","_lightboxRef$current$2","_lightboxRef$current4","_lightboxRef$current$3","_lightboxRef$current5","isLanguageInitiating","isLanguageLoading","initiateI18N","setInitializing","managerVisible","setManagerVisible","cardInputRef","downloadButtonRef","exportPanelRef","importPanelRef","setImageChangeCount","styleName","_languageInfo$style$s","_languageInfo$style","setProperty","_exportCanvasRef$curr","WebFont","load","families","urls","retrievedCard","retrieveSavedCard","localCardVersion","stringifedLocalCardData","localCardData","urlCardData","_localCardData$artDat","_localCardData$backgr","combinedCard","fontinactive","fvd","inactive","styleContent","ocgStyleFile","onActive","onBeforeLoad","onFontInactive","onInactive","setStyleContent","ocgReady","loadAttempt","useOCGFont","_exportCanvasRef$curr2","setTainted","documentClassList","displayLightbox","fromHotkey","sentryInitialized","reportTarget","dsn","integrations","colorScheme","autoInject","attachTo","formTitle","nameLabel","namePlaceholder","isEmailRequired","showEmail","messageLabel","messagePlaceholder","addScreenshotButtonLabel","removeScreenshotButtonLabel","cancelButtonLabel","submitButtonLabel","isRequiredLabel","successMessageText","tracesSampleRate","tracePropagationTargets","replaysSessionSampleRate","replaysOnErrorSampleRate","treatNewCard","_cardInputRef$current","importData","_importPanelRef$curre","mergeData","_importPanelRef$curre2","exportData","_cardInputRef$current2","_exportPanelRef$curre","exportCardInList","exportableCard","downloadFromHotkey","_downloadButtonRef$cu","hotkeyHandlerMap","alertDownloadError","rerenderAllImage","_lightboxRef$current2","rerenderCardImage","markTaintedImage","toggleManagerMode","HotKeys","keyMap","handlers","onDrop","_downloadButtonRef$cu2","_cardInputRef$current3","defaultCard","contextualDefaultCardData","ClearOutlined","onContextMenu","_importPanelRef$curre3","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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ID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,KACXE,UAAW,gCACXD,SAAU,mDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,KACXE,UAAW,oBACXD,SAAU,uCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,6CACXC,SAAU,gDAEd,CACID,UAAW,qBACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,qBACXC,SAAU,yEAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,6DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,qBACXC,SAAU,mEAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,mEAEd,CACID,UAAW,SACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,2BACXC,SAAU,kFAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,2BACXC,SAAU,sEAEd,CACID,UAAW,qBACXC,SAAU,uDAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,iCACXC,SAAU,iDAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,2BACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,uCACXC,SAAU,0CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,MACXE,UAAW,qBACXD,SAAU,sEAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,gCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,sCAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,0BAEd,CACID,UAAW,IACXE,UAAW,mBACXD,SAAU,4CAEd,CACID,UAAW,qBACXC,SAAU,wBAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,2BACXC,SAAU,8BAEd,CACID,UAAW,iCACXC,SAAU,oCAEd,CACID,UAAW,qBACXC,SAAU,qCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,0DAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,yBAEd,CACID,UAAW,qBACXC,SAAU,+BAEd,CACID,UAAW,YACXE,UAAW,qCACXD,SAAU,gEACVE,aAAc,iEAElB,CACIH,UAAW,WACXE,UAAW,oCACXD,SAAU,6CACVE,aAAc,8CAElB,CACIH,UAAW,KACXE,UAAW,8BACXD,SAAU,yDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,kCAEd,CACID,UAAW,eACXC,SAAU,wCAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,eACXC,SAAU,oDAEd,CACID,UAAW,eACXC,SAAU,+BAEd,CACID,UAAW,eACXC,SAAU,8CAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,mBAEd,CACID,UAAW,SACXC,SAAU,+BAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW,SACXC,SAAU,yBAEd,CACID,UAAW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GACLC,QAAQC,MAAM,6EAA8EF,GAC5FlL,EAAI,CACAgmB,oBAAqB,CACjBH,IAAK,CACD9jC,KAAM,UACN+iC,WAAY,UACZC,SAAU,MACVC,eAAgB,kCAChBC,MAAO,EACPC,QAAQ,IAGhBoB,iBAAiB,MAkErBE,IAEJC,oBAAqBrB,gBAEXD,EAAa,aACbW,EAAe9B,GACrBhkB,EAAI,CACAqmB,cAAc,KAGtBlB,eACAW,qBAIKY,GAAcA,IACN5C,IAAQpd,IAAA,IAAC,SAAEwf,GAAUxf,EAAA,OAAKwf,KAIlCS,GAAcA,IAAM7C,GAAQ8C,WAAWV,S,cC/IpD,MAAMW,GAAuB,CAEzB,SACA,QACA,OACA,YACA,OACA,kBACA,WACA,eACA,SACA,SACA,MACA,MACA,WACA,UACA,YACA,cACA,kBACA,qBACA,sBACA,UACA,wBACA,mBACA,yBACA,oBACA,qBACA,2BACA,sBACA,4BAEA,mBACA,gBACA,qBACA,wBACA,iBACA,OACA,aACA,cACA,mBACA,mBACA,uBACA,wBACA,oBAEA,YACA,iBACA,iBACA,iBACA,qBACA,iBACA,iBACA,sBACA,uBACA,wBACA,sBACA,iBACA,kBACA,2BACA,kBACA,0BACA,0BACA,8BACA,+BACA,eACA,gBACA,sBAEA,kBACA,oBACA,0BACA,mCACA,4BACA,+BACA,+BACA,2BACA,0BACA,0BACA,0BACA,6BACA,6BACA,2BACA,8BACA,8BACA,4BACA,4BACA,0BACA,gCACA,0BACA,sBACA,uBACA,yBACA,0BACA,0BACA,4BACA,yBACA,0BACA,0BACA,4BACA,2BACA,4BACA,4BACA,8BACA,wBACA,4BACA,gBACA,oCACA,qCACA,qCACA,uCACA,iCACA,qCACA,0BACA,2BACA,2BACA,6BACA,wBAEEC,GAAe,IACdD,GAKH,aACA,YACA,uBACA,SACA,SACA,SACA,SACA,SAEA,aACA,UACA,SACA,kBACA,kBACA,aACA,aACA,oBAEEE,GAAsBC,IAAyB,OAALA,QAAK,IAALA,IAAS,IAAIC,cAAc/U,WAAW,IAAK,IAAIA,WAAW,IAAK,IACzGgV,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","file":"static/js/main.e0588b22.chunk.js","sourcesContent":["import { PendulumSize } from './pendulum';\r\n\r\nexport const getBackgroundTypeList = (dictionary?: {\r\n    fit: string,\r\n    full: string,\r\n    frame: string,\r\n}) => [\r\n        {\r\n            value: 'fit' as const,\r\n            label: dictionary?.fit,\r\n        },\r\n        {\r\n            value: 'full' as const,\r\n            label: dictionary?.full,\r\n        },\r\n        {\r\n            value: 'frame' as const,\r\n            label: dictionary?.frame,\r\n        },\r\n    ];\r\nexport type BackgroundType = ReturnType<typeof getBackgroundTypeList>[0]['value'];\r\n\r\n/**\r\n * @summary About x y headache.\r\n * \r\n * * Normal (True): Actual position / size on the card. If the coordinate / size is multiplied by a ratio, it is likely a normal value.\r\n * * Scaled: Position or size on a hypothesis (scaled) canvas. For example a 1000px wide canvas with scaleX of 0.5 can be treated as a 2000px wide canvas with scaleX of 1. So draw a point at x 50 in this hypothesis canvas will result an actual point at x = 25. If the coordinate / size is divided by a ratio, it is likely a scaled value.\r\n * * Inverse-scaled: Position or size on a hypothesis canvas. For example a letter that much has exactly 50px wide on every scale. So in a 1000px wide canvas with scaleX of 0.5 the letter actually has 100px width, and vice versa in a 1000px wide canvas with scaleX of 2.0, the letter will have 25px width only.\r\n */\r\nexport type MasterSeriesCanvas = {\r\n    artworkCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    backgroundCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    frameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    cardIconCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumScaleCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    pendulumEffectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    typeCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    effectCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    nameCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    statCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    setIdCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    passwordCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    creatorCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    stickerCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    finishCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    previewCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    lightboxRef: React.RefObject<{\r\n        draw: (exportCanvas: HTMLCanvasElement) => void,\r\n    }>,\r\n};\r\n\r\n/** Some coordination data must be rounded into nearest integer so it does not create those janky ghost pixels. */\r\nexport const CanvasConst = {\r\n    width: 813,\r\n    height: 1185,\r\n    maximumScale: 2,\r\n    topToPendulumStructure: 210,\r\n    /** Pure structure is visible frame on the card, the frame of that structure has a bit padding for shadow around it. */\r\n    topToPendulumStructureFrame: 185,\r\n    topToArtFrame: 213,\r\n    pendulumStructureHeight: 912,\r\n    pendulumIconFrameWidth: 813,\r\n    pendulumIconFrameHeight: 100,\r\n    pendulumFrameWidth: 753,\r\n    pendulumFrameHeight: 955,\r\n    leftToPendulumStructure: 52,\r\n    cardBorder: 28,\r\n    topToEffectBox: 885,\r\n    leftToEffectBox: 54,\r\n    effectBoxWidth: 705,\r\n    effectBoxHeight: 231,\r\n    finishTypeCardWidth: 702,\r\n    finishTypeCardHeight: 200,\r\n    stickerSize: 52,\r\n    attributeSize: 77,\r\n    attributeY: 55,\r\n    attributeX: 678,\r\n    stickerX: 739.1438,\r\n    stickerY: 1110.938,\r\n};\r\n\r\nexport const DEFAULT_BASE_FILL_COLOR = '#404040';\r\nexport const getDefaultCardOpacity = () => ({\r\n    body: 100,\r\n    pendulum: 100,\r\n    text: 100,\r\n    name: 100,\r\n    baseFill: DEFAULT_BASE_FILL_COLOR,\r\n    artBorder: true,\r\n    nameBorder: true,\r\n    boundless: false,\r\n});\r\nexport type CardOpacity = ReturnType<typeof getDefaultCardOpacity>;\r\nexport type CardArtCanvasCoordinate = typeof CardArtCanvasCoordinateMap[keyof typeof CardArtCanvasCoordinateMap];\r\nexport const CardArtCanvasCoordinateMap = {\r\n    normal: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 614,\r\n        artX: 100,\r\n        artY: 219,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        /** Actual size of the art frame on the card, does not affected by creative art position such as boundless art. */\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'normal' as const,\r\n    },\r\n    pendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.325,\r\n        backgroundRatio: 1.325,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'pendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, but the pendulum box size is smaller. This results a taller visible image.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    pendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.236,\r\n        backgroundRatio: 1.236,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'pendulumSmall' as const,\r\n    },\r\n    /** Normal distribution, with artwork extends under effect's box. */\r\n    extendedCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'extendedCard' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box and effect's box. */\r\n    extendedPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'extendedPendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box and effect's box, but the pendulum box size is smaller.\r\n     * Even though the image size does not change, the image frame does become larger.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     *  */\r\n    extendedPendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 0.775,\r\n        backgroundRatio: 0.775,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'extendedPendulumSmall' as const,\r\n    },\r\n    /** Pendulum distribution, with artwork extends under pendulum effect's box. It is actually the \"default\" mode of pendulum cards in practices. But most of the time the artwork only cut the visible image part because it is very hard to find the full image of a card unless an official source provide it. */\r\n    truePendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulum' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is smaller.\r\n     * This results a taller visible image, but shorter image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumSmall: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1.055,\r\n        backgroundRatio: 1.055,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 568,\r\n        artFrameY: 213,\r\n        artRatio: 1.236,\r\n        type: 'truePendulumSmall' as const,\r\n    },\r\n    /**\r\n     * Pendulum distribution, with artwork extends under pendulum effect's box, but the pendulum box size is larger.\r\n     * This results the same visible image as `truePendulum` distribution type, but taller image behind the box.\r\n     * It is only used for series 9 Pendulum cards, which is deprecated.\r\n     * */\r\n    truePendulumLarge: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 702,\r\n        artX: 56,\r\n        artY: 213,\r\n        ratio: 1,\r\n        backgroundRatio: 1,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'truePendulumLarge' as const,\r\n    },\r\n    /** Normal distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. */\r\n    fullCard: {\r\n        artFinishX: 100,\r\n        artFinishY: 219,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 614,\r\n        artFrameHeight: 614,\r\n        artFrameY: 219,\r\n        artRatio: 1,\r\n        type: 'fullCard' as const,\r\n    },\r\n    /** Pendulum distribution with artwork span the entire card over the frame, use boundless mode to show frame above it. Pendulum size is irrelevant here */\r\n    fullPendulum: {\r\n        artFinishX: 56,\r\n        artFinishY: 213,\r\n        artWidth: 758,\r\n        artX: 28,\r\n        artY: 28,\r\n        ratio: 0.670,\r\n        backgroundRatio: 0.670,\r\n        artFrameWidth: 702,\r\n        artFrameHeight: 530,\r\n        artFrameY: 213,\r\n        artRatio: 1.325,\r\n        type: 'fullPendulum' as const,\r\n    },\r\n};\r\nexport const getArtCanvasCoordinate = (\r\n    isPendulum: boolean,\r\n    opacity?: Partial<CardOpacity>,\r\n    backgroundType?: BackgroundType,\r\n    pendulumSize?: PendulumSize,\r\n) => {\r\n    const {\r\n        boundless,\r\n        body,\r\n        pendulum,\r\n        text,\r\n    } = { ...getDefaultCardOpacity(), ...opacity };\r\n    const normalizedBoundless = backgroundType === 'fit'\r\n        ? false\r\n        : boundless;\r\n\r\n    if (backgroundType === 'full') return CardArtCanvasCoordinateMap.fullCard;\r\n    let distributionMode: keyof typeof CardArtCanvasCoordinateMap = 'normal';\r\n\r\n    /** The only different between boundless mode and transparent body is card art in boundless mode will be put higher than art frame */\r\n    if (normalizedBoundless || body < 100) {\r\n        distributionMode = isPendulum\r\n            ? 'fullPendulum'\r\n            : 'fullCard';\r\n    } else {\r\n        if (isPendulum) {\r\n            if (text < 100) {\r\n                distributionMode = pendulumSize === 'small'\r\n                    ? 'extendedPendulumSmall'\r\n                    : 'extendedPendulum';\r\n            } else {\r\n                if (pendulum < 100) {\r\n                    if (pendulumSize === 'large') distributionMode = 'truePendulumLarge';\r\n                    if (pendulumSize === 'small') distributionMode = 'truePendulumSmall';\r\n                    if (pendulumSize === 'medium') distributionMode = 'truePendulum';\r\n                } else {\r\n                    distributionMode = pendulumSize === 'small'\r\n                        ? 'pendulumSmall'\r\n                        : 'pendulum';\r\n                }\r\n            }\r\n        } else {\r\n            distributionMode = text < 100\r\n                ? 'extendedCard'\r\n                : 'normal';\r\n        }\r\n    }\r\n\r\n    const result = CardArtCanvasCoordinateMap[distributionMode];\r\n    return {\r\n        ...result,\r\n        backgroundRatio: backgroundType === 'frame'\r\n            ? 0.686\r\n            : result.backgroundRatio,\r\n    };\r\n};\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\n\r\nexport const NO_ATTRIBUTE = 'NONE';\r\nexport const AttributeList = [\r\n    {\r\n        name: NO_ATTRIBUTE,\r\n        nameKey: 'input.attribute.none',\r\n        color: '#000000',\r\n        isCreative: false,\r\n        isOption: false,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DARK',\r\n        nameKey: 'input.attribute.dark',\r\n        label: 'Dark',\r\n        color: '#b41dda',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'EARTH',\r\n        nameKey: 'input.attribute.earth',\r\n        label: 'Earth',\r\n        color: '#8d8e8e',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'FIRE',\r\n        nameKey: 'input.attribute.fire',\r\n        label: 'Fire',\r\n        color: '#e51b23',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LIGHT',\r\n        nameKey: 'input.attribute.light',\r\n        label: 'Light',\r\n        color: '#bfae32',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WATER',\r\n        nameKey: 'input.attribute.water',\r\n        label: 'Water',\r\n        color: '#008ecd',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'WIND',\r\n        nameKey: 'input.attribute.wind',\r\n        label: 'Wind',\r\n        color: '#28ab35',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'DIVINE',\r\n        nameKey: 'input.attribute.divine',\r\n        label: 'Divine',\r\n        color: '#ef6300',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'SPELL',\r\n        nameKey: 'input.attribute.spell',\r\n        label: 'Spell',\r\n        color: '#1b8f83',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'TRAP',\r\n        nameKey: 'input.attribute.trap',\r\n        label: 'Trap',\r\n        color: '#c32a8c',\r\n        isCreative: false,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'LAUGH',\r\n        nameKey: 'input.attribute.laugh',\r\n        label: 'Laugh',\r\n        color: '#f78f27',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n    {\r\n        name: 'MAGIC',\r\n        nameKey: 'input.attribute.magic',\r\n        label: 'Laugh',\r\n        color: '#1b8f83',\r\n        isCreative: true,\r\n        isOption: true,\r\n        supportFormat: ['tcg', 'ocg'],\r\n    },\r\n];\r\n\r\nexport const NO_ICON = 'NO ICON';\r\nexport const IconList = [\r\n    {\r\n        label: <CloseCircleOutlined />,\r\n        value: NO_ICON,\r\n        nameKey: 'input.icon.none',\r\n        isOption: false,\r\n    },\r\n    {\r\n        label: 'Field',\r\n        value: 'FIELD',\r\n        nameKey: 'input.icon.field',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Continuous',\r\n        value: 'CONTINUOUS',\r\n        nameKey: 'input.icon.continuous',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Quick-Play',\r\n        value: 'QUICK-PLAY',\r\n        nameKey: 'input.icon.quick-play',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Ritual',\r\n        value: 'RITUAL',\r\n        nameKey: 'input.icon.ritual',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Equip',\r\n        value: 'EQUIP',\r\n        nameKey: 'input.icon.equip',\r\n        isOption: true,\r\n    },\r\n    {\r\n        label: 'Counter',\r\n        value: 'COUNTER',\r\n        nameKey: 'input.icon.counter',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const NO_STICKER = 'no-sticker';\r\nexport const StickerList = [\r\n    {\r\n        value: NO_STICKER,\r\n        isOption: false,\r\n    },\r\n    {\r\n        value: 'gold',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'silver',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'beta',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo5',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo4',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo3',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo2',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'holo1',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'limited',\r\n        isOption: true,\r\n    },\r\n    {\r\n        value: 'unlimited',\r\n        isOption: true,\r\n    },\r\n];\r\n\r\nexport const IconTypeMap: Record<string, {\r\n    value: string,\r\n    labelKey: string,\r\n    fullLabelKey: string,\r\n    icon: React.ReactNode,\r\n    isOption: boolean,\r\n}> = {\r\n    'auto': {\r\n        value: 'auto',\r\n        labelKey: 'input.icon-type.auto.label',\r\n        fullLabelKey: 'input.icon-type.auto.full.label',\r\n        icon: null,\r\n        isOption: false,\r\n    },\r\n    'st': {\r\n        value: 'st',\r\n        labelKey: 'input.icon-type.icon.label',\r\n        fullLabelKey: 'input.icon-type.icon.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"s/t-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-continuous.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'level': {\r\n        value: 'level',\r\n        labelKey: 'input.icon-type.level.label',\r\n        fullLabelKey: 'input.icon-type.level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'negative-level': {\r\n        value: 'negative-level',\r\n        labelKey: 'input.icon-type.negative-level.label',\r\n        fullLabelKey: 'input.icon-type.negative-level.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"negative-level-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-negative-level.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n    'rank': {\r\n        value: 'rank',\r\n        labelKey: 'input.icon-type.rank.label',\r\n        fullLabelKey: 'input.icon-type.rank.full.label',\r\n        icon: <img\r\n            className=\"icon-image\"\r\n            alt=\"rank-icon\"\r\n            src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-rank.png`}\r\n        />,\r\n        isOption: true,\r\n    },\r\n};\r\nexport const IconTypeList = Object.values(IconTypeMap);","export type NameStyleType = 'auto' | 'custom' | 'predefined';\r\nexport type NameStyle = ReturnType<typeof getDefaultNameStyle>;\r\nexport const getDefaultNameStyle = () => ({\r\n    font: 'Default',\r\n    fillStyle: '#000000',\r\n    headTextFillStyle: '#000000',\r\n    shadowColor: '#000000',\r\n    shadowOffsetY: 0,\r\n    shadowOffsetX: 0,\r\n    shadowBlur: 0,\r\n    hasShadow: false,\r\n    lineColor: '#000000',\r\n    lineWidth: 0,\r\n    lineOffsetY: 0,\r\n    lineOffsetX: 0,\r\n    hasOutline: false,\r\n    gradientAngle: 0,\r\n    gradientColor: '0.000|#eef10b,0.5|#d78025,1.000|#7e20cf',\r\n    hasGradient: false,\r\n    embossPitch: 90,\r\n    embossYaw: 90,\r\n    embossThickness: 0,\r\n    hasEmboss: false,\r\n    preset: 'commonB' as PresetNameStyle,\r\n    pattern: 'none',\r\n});\r\n\r\n/** Is it worth it? Store as array significantly reduces data size, but also make the code harder to read. Maybe we should only apply it to simple fields. */\r\nexport type TextStyle = [\r\n    custom: boolean,\r\n    fillStyle: string,\r\n    hasShadow: boolean,\r\n    shadow: string,\r\n];\r\nexport const getDefaultTextStyle = (): TextStyle => [\r\n    false,\r\n    '#000000',\r\n    false,\r\n    '#000000',\r\n];\r\n\r\nconst createPresetNameStyle = (presetValue: Partial<NameStyle>): Partial<NameStyle> => ({\r\n    hasGradient: false,\r\n    hasOutline: false,\r\n    hasShadow: false,\r\n    hasEmboss: false,\r\n    pattern: 'none',\r\n    ...presetValue\r\n});\r\nexport type PresetNameStyle = 'commonB' | 'commonW'\r\n| 'skillDefault' | 'skillArial'\r\n| 'rare' | 'secretGradient' | 'secret' | 'platinum2' | 'ultra' | 'ultra2' | 'platinum' | 'gold'\r\n| 'animeRed' | 'animeSilver' | 'animeGold'\r\n| 'promo'\r\n| 'embossGold' | 'embossPlatinum';\r\nexport const PresetNameStyleMap: Record<PresetNameStyle, {\r\n    key: PresetNameStyle,\r\n    label: string,\r\n    image: string,\r\n    value: Partial<NameStyle>,\r\n}> = {\r\n    commonB: {\r\n        key: 'commonB',\r\n        label: 'Common (Black)',\r\n        image: 'asset/image/other/name-common-b.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonB',\r\n            fillStyle: '#000000',\r\n        }),\r\n    },\r\n    commonW: {\r\n        key: 'commonW',\r\n        label: 'Common (White)',\r\n        image: 'asset/image/other/name-common-w.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'commonW',\r\n            fillStyle: '#ffffff',\r\n        }),\r\n    },\r\n    skillDefault: {\r\n        key: 'skillDefault',\r\n        label: 'Skill (Default)',\r\n        image: 'asset/image/other/name-skill-default.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillDefault',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    skillArial: {\r\n        key: 'skillArial',\r\n        label: 'Skill (Arial)',\r\n        image: 'asset/image/other/name-skill-arial.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'skillArial',\r\n            font: 'Arial',\r\n            fillStyle: '#ffffff',\r\n            lineWidth: 6,\r\n            lineColor: '#000',\r\n            lineOffsetX: 1,\r\n            hasOutline: true,\r\n        }),\r\n    },\r\n    rare: {\r\n        key: 'rare',\r\n        label: 'Rare',\r\n        image: 'asset/image/other/name-rare.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'rare',\r\n            fillStyle: '#cfc6de',\r\n        }),\r\n    },\r\n    secretGradient: {\r\n        key: 'secretGradient',\r\n        label: 'Secret (Gradient)',\r\n        image: 'asset/image/other/name-secret-gradient.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secretGradient',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#7a71a6,1.000|#a8c1e5',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    secret: {\r\n        key: 'secret',\r\n        label: 'Secret',\r\n        image: 'asset/image/other/name-secret.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'secret',\r\n            fillStyle: '#8a8381',\r\n        }),\r\n    },\r\n    platinum2: {\r\n        key: 'platinum2',\r\n        label: 'Platinum',\r\n        image: 'asset/image/other/name-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum2',\r\n            fillStyle: '#a49f9e',\r\n        }),\r\n    },\r\n    ultra: {\r\n        key: 'ultra',\r\n        label: 'Ultra',\r\n        image: 'asset/image/other/name-ultra.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra',\r\n            fillStyle: '#dbb473',\r\n        }),\r\n    },\r\n    ultra2: {\r\n        key: 'ultra2',\r\n        label: 'Ultra (Type 2)',\r\n        image: 'asset/image/other/name-ultra-2.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'ultra2',\r\n            fillStyle: '#fee002',\r\n        }),\r\n    },\r\n    platinum: {\r\n        key: 'platinum',\r\n        label: 'Foil Platinum',\r\n        image: 'asset/image/other/name-foil-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'platinum',\r\n            fillStyle: '#CCCCCC',\r\n            shadowColor: '#FFFFFF',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    gold: {\r\n        key: 'gold',\r\n        label: 'Foil Gold',\r\n        image: 'asset/image/other/name-foil-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'gold',\r\n            fillStyle: '#b88c43',\r\n            shadowColor: '#FCC400',\r\n            shadowOffsetY: 1,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n        }),\r\n    },\r\n    animeRed: {\r\n        key: 'animeRed',\r\n        label: 'Anime (Type Red)',\r\n        image: 'asset/image/other/name-anime-red.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeRed',\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#d81961,0.220|#b81654,0.270|#9e1348,0.330|#95093e,0.380|#95093e,0.450|#ba3264,0.530|#ff5e99,0.620|#ffa0c3,0.690|#ffffff,0.770|#ff5e99,0.870|#d81961,1.000|#b81654',\r\n            hasGradient: true,\r\n            hasOutline: true,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            lineWidth: 3,\r\n            shadowBlur: 2,\r\n            shadowColor: '#383838',\r\n            shadowOffsetX: 2,\r\n            shadowOffsetY: 3,\r\n        }),\r\n    },\r\n    animeSilver: {\r\n        key: 'animeSilver',\r\n        label: 'Anime (Type Silver)',\r\n        image: 'asset/image/other/name-anime-silver.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeSilver',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#cecbb8,0.220|#b0ad9b,0.270|#94917e,0.330|#797768,0.380|#797768,0.450|#d9d9d9,0.610|#ffffff,0.700|#ffffff,0.870|#d6d7c7,1.000|#c9cbb6',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    animeGold: {\r\n        key: 'animeGold',\r\n        label: 'Anime (Type Gold)',\r\n        image: 'asset/image/other/name-anime-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'animeGold',\r\n            shadowColor: '#383838',\r\n            shadowOffsetY: 3,\r\n            shadowOffsetX: 2,\r\n            shadowBlur: 2,\r\n            hasShadow: true,\r\n            lineColor: '#333333',\r\n            lineWidth: 3,\r\n            lineOffsetX: 1,\r\n            lineOffsetY: 0,\r\n            hasOutline: true,\r\n            gradientAngle: 180,\r\n            gradientColor: '0.000|#eee317,0.220|#dbbe15,0.270|#d0920c,0.330|#b57f0b,0.380|#d0920c,0.450|#ffff6b,0.610|#ffffff,0.700|#ffffff,0.870|#e5dd2d,1.000|#e3da23',\r\n            hasGradient: true,\r\n        }),\r\n    },\r\n    promo: {\r\n        key: 'promo',\r\n        label: 'Promo',\r\n        image: 'asset/image/other/name-promo.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'promo',\r\n            fillStyle: '#c7080b',\r\n            shadowColor: '#333333',\r\n            shadowOffsetY: 0,\r\n            shadowOffsetX: 0,\r\n            shadowBlur: 1,\r\n            hasShadow: true,\r\n            lineColor: '#8a1801',\r\n            lineWidth: 3,\r\n            lineOffsetX: 0,\r\n            hasOutline: true,\r\n            lineOffsetY: 0\r\n        }),\r\n    },\r\n    embossGold: {\r\n        key: 'embossGold',\r\n        label: 'Embossed Gold',\r\n        image: 'asset/image/other/name-emboss-gold.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossGold',\r\n            fillStyle: '#d09b0e',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#333333',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n    embossPlatinum: {\r\n        key: 'embossPlatinum',\r\n        label: 'Embossed Platinum',\r\n        image: 'asset/image/other/name-emboss-platinum.png',\r\n        value: createPresetNameStyle({\r\n            preset: 'embossPlatinum',\r\n            fillStyle: '#c0c0c0',\r\n            hasEmboss: true,\r\n            embossPitch: 90,\r\n            embossYaw: 90,\r\n            hasShadow: true,\r\n            shadowBlur: 2,\r\n            shadowColor: '#4d4d4d',\r\n            shadowOffsetX: -1,\r\n            shadowOffsetY: 1,\r\n        }),\r\n    },\r\n};\r\nexport const PresetNameStyleList = Object.values(PresetNameStyleMap);\r\n\r\nexport const PatternMap: Record<string, {\r\n    key: string,\r\n    patternImage: string,\r\n    blendMode: GlobalCompositeOperation,\r\n    overrideFill?: boolean,\r\n    isOption: boolean,\r\n}> = {\r\n    none: {\r\n        key: 'none',\r\n        patternImage: '',\r\n        blendMode: 'source-atop',\r\n        isOption: false,\r\n    },\r\n    type1: {\r\n        key: 'type1',\r\n        patternImage: 'finish-name-type1',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type2: {\r\n        key: 'type2',\r\n        patternImage: 'finish-name-type2',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type3: {\r\n        key: 'type3',\r\n        patternImage: 'finish-name-type3',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type4: {\r\n        key: 'type4',\r\n        patternImage: 'finish-name-type4',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type5: {\r\n        key: 'type5',\r\n        patternImage: 'finish-name-type5',\r\n        blendMode: 'multiply',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type6: {\r\n        key: 'type6',\r\n        patternImage: 'finish-name-type6',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type7: {\r\n        key: 'type7',\r\n        patternImage: 'finish-name-type7',\r\n        blendMode: 'lighter',\r\n        overrideFill: true,\r\n        isOption: true,\r\n    },\r\n    type8: {\r\n        key: 'type8',\r\n        patternImage: 'finish-name-type8',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n    type9: {\r\n        key: 'type9',\r\n        patternImage: 'finish-name-type9',\r\n        blendMode: 'source-atop',\r\n        isOption: true,\r\n    },\r\n};\r\nexport const PatternList = Object.values(PatternMap);","export type PendulumSize = keyof typeof PendulumSizeMap;\r\nexport const PendulumSizeMap = {\r\n    small: {\r\n        key: 'small' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.small.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 95,\r\n        pendulumBoxOffsetY: 50,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 816,\r\n        artlessFrameY: 594,\r\n        fontSize: 56.5,\r\n    },\r\n    medium: {\r\n        key: 'medium' as const,\r\n        frameType: 'pendulum',\r\n        labelKey: 'input.pendulum-size.medium.label',\r\n        effectBoxOffsetY: 0,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 147,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 790,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n    large: {\r\n        key: 'large' as const,\r\n        frameType: 'text',\r\n        labelKey: 'input.pendulum-size.large.label',\r\n        effectBoxOffsetY: 27,\r\n        pendulumBoxX: 55,\r\n        pendulumBoxY: 738,\r\n        pendulumBoxWidth: 705,\r\n        pendulumBoxHeight: 180,\r\n        pendulumBoxOffsetY: 0,\r\n        numberBlueX: 84.4,\r\n        numberRedX: 728.0,\r\n        numberY: 806,\r\n        artlessFrameY: 553,\r\n        fontSize: 60.5,\r\n    },\r\n};\r\nexport const PendulumSizeList = Object.values(PendulumSizeMap);\r\n\r\nexport const PendulumSizeMapException: Record<PendulumSize, Record<string, {\r\n    exceptionPendulumBoxOffsetHeight?: number,\r\n    exceptionFrameType?: string,\r\n}>> = {\r\n    small: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: -13,\r\n        },\r\n    },\r\n    medium: {},\r\n    large: {\r\n        'speed-skill': {\r\n            exceptionPendulumBoxOffsetHeight: 15,\r\n        },\r\n        zarc: {\r\n            exceptionFrameType: 'pendulum-large',\r\n        }\r\n    },\r\n};\r\n\r\nexport const DEFAULT_PENDULUM_SIZE: PendulumSize = 'medium';","export type CondenseType = 'veryStrict' | 'veryLoose' | 'strict' | 'loose' | 'relaxed';\r\nexport const CondenseTolerantMap: Record<CondenseType, Record<string, number>> = {\r\n    veryStrict: {\r\n        '1': 600,\r\n        '2': 620,\r\n        '3': 640,\r\n    },\r\n    strict: {\r\n        '1': 645,\r\n        '2': 665,\r\n        '3': 685,\r\n    },\r\n    loose: {\r\n        '1': 700,\r\n        '2': 710,\r\n        '3': 720,\r\n    },\r\n    veryLoose: {\r\n        '1': 740,\r\n        '2': 770,\r\n        '3': 800,\r\n    },\r\n    relaxed: {\r\n        '1': 850,\r\n        '2': 900,\r\n        '3': 950,\r\n    },\r\n};\r\nexport const CondenseTolerantLabelMap: Record<CondenseType, { label: string, order: number }> = {\r\n    veryStrict: {\r\n        label: '5',\r\n        order: 1,\r\n    },\r\n    strict: {\r\n        label: '4',\r\n        order: 2,\r\n    },\r\n    loose: {\r\n        label: '3',\r\n        order: 3,\r\n    },\r\n    veryLoose: {\r\n        label: '2',\r\n        order: 4,\r\n    },\r\n    relaxed: {\r\n        label: '1',\r\n        order: 5,\r\n    },\r\n};","export type CoordinateData = {\r\n    edgeAlignment?: 'left' | 'right',\r\n    trueWidth: number,\r\n    trueBaseline: number,\r\n    trueEdge: number,\r\n    trueHeightCap?: number,\r\n};\r\n\r\nexport const EffectCoordinateData: Record<string, CoordinateData[]> = {\r\n    'tcg': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'tcg-stat': [\r\n        { trueWidth: 684, trueBaseline: 890.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.8, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'tcg-type': [\r\n        { trueWidth: 684, trueBaseline: 921.8, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'ocg': [\r\n        { trueWidth: 684, trueBaseline: 895.23, trueEdge: 64.8, trueHeightCap: 211 },\r\n    ],\r\n    'ocg-stat': [\r\n        { trueWidth: 684, trueBaseline: 891.23, trueEdge: 64.8, trueHeightCap: 182 },\r\n    ],\r\n    'ocg-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 152 },\r\n    ],\r\n    'ocg-type': [\r\n        { trueWidth: 684, trueBaseline: 918.5, trueEdge: 64.5, trueHeightCap: 182 },\r\n    ],\r\n    'tcg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'tcg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 920.73, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'tcg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 953.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'tcg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 954.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge': [\r\n        { trueWidth: 684, trueBaseline: 923.23, trueEdge: 64.8, trueHeightCap: 173 },\r\n    ],\r\n    'ocg-pendulumLarge-stat': [\r\n        { trueWidth: 684, trueBaseline: 921.23, trueEdge: 64.8, trueHeightCap: 144 },\r\n    ],\r\n    'ocg-pendulumLarge-type-stat': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 118 },\r\n    ],\r\n    'ocg-pendulumLarge-type': [\r\n        { trueWidth: 684, trueBaseline: 948.5, trueEdge: 64.5, trueHeightCap: 144 },\r\n    ],\r\n};\r\n\r\nexport const HALF_SCALE_WIDTH_OFFSET = 64.44;\r\nexport const PendulumEffectCoordinateMap: Record<'normal' | 'scaleless', Record<string, CoordinateData[]>> = {\r\n    normal: {\r\n        small: [\r\n            { trueWidth: 555.47, trueBaseline: 789.65, trueEdge: 128.94 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 555.47, trueBaseline: 746.29, trueEdge: 128.94 },\r\n        ],\r\n    },\r\n    scaleless: {\r\n        small: [\r\n            { trueWidth: 684.35, trueBaseline: 789.65, trueEdge: 64.5 },\r\n        ],\r\n        medium: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n        large: [\r\n            { trueWidth: 684.35, trueBaseline: 746.29, trueEdge: 64.5 },\r\n        ],\r\n    },\r\n};\r\n\r\nexport type TypeAbilityCoordinateType = 'smaller' | 'normal' | 'large' | 'highPendulumNormal' | 'highPendulumSmaller';\r\nexport const TypeAbilityCoordinateMap: Record<string, Record<TypeAbilityCoordinateType, CoordinateData>> = {\r\n    tcg: {\r\n        smaller: {\r\n            trueBaseline: 919,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 920,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 187.5,\r\n            trueEdge: 732.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 648.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 950.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949.5,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n    ocg: {\r\n        smaller: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        normal: {\r\n            trueBaseline: 917,\r\n            trueEdge: 63.70,\r\n            trueWidth: 684.5,\r\n        },\r\n        large: {\r\n            trueBaseline: 190.5,\r\n            trueEdge: 728.00,\r\n            edgeAlignment: 'right',\r\n            trueWidth: 642.5,\r\n        },\r\n        highPendulumNormal: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n        highPendulumSmaller: {\r\n            trueBaseline: 949,\r\n            trueEdge: 62.50,\r\n            trueWidth: 684.5,\r\n        },\r\n    },\r\n};\r\n\r\nexport const CreatorCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1146.5,\r\n        trueEdge: 736,\r\n        trueWidth: 435,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.5,\r\n        trueEdge: 733,\r\n        trueWidth: 380,\r\n    },\r\n};\r\n\r\nexport const PasswordCoordinateMap: Record<string, CoordinateData> = {\r\n    ocg: {\r\n        trueBaseline: 1148.931,\r\n        trueEdge: 37.031,\r\n        trueWidth: 258,\r\n    },\r\n    tcg: {\r\n        trueBaseline: 1149.431,\r\n        trueEdge: 37.031,\r\n        trueWidth: 311,\r\n    },\r\n};","/** Dicitionary that convert popular letters combination into a fragment block with (most of the time) corresponding furigana attached.\r\n * \r\n * This is created based on pure survey only. Also this is based on regex, so do not add too many entries into this one. Around 300 would be a nice limit to stop, after all this is just a helper. There are much more rules and block words in practice that we basically have no way to collect and implement.\r\n * \r\n * Each dicitionary entry has at most 4 fields.\r\n *  * `shortForm`: Pure letters without decoration, act as the primary key in this dictionary.\r\n *  * `regexForm`: Some words may blend inside fragment and will get falsely detected, especially English letter. For example \"銀翼のAXE－サリー\" OCG has letter X in its name, which maybe detected as Xyz Monster. Regex form will (try to) solve this problem.\r\n *  * `rubyForm`: The full version of `shortForm`, with furigana and control characters attached.\r\n *  * `rubyFormName`: In very rare case, the same `shortForm` has different treatment based on the section it belong in. This field (if existed) will be preferred when converting the name of the card.\r\n * \r\n * Overall we want to sort this list based on the length of the shortForm, so we match larger entry first. For example, the letter \"族\" appears both as a standalone letter and in the word \"種族\", we naturally want to match the word \"種族\" first.\r\n */\r\nexport const ocgKeywordDataList = [\r\n    {\r\n        shortForm: '特殊召喚',\r\n        rubyForm: '{特|とく}{殊|しゅ}{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: 'カード',\r\n        rubyForm: '{カード}',\r\n    },\r\n    {\r\n        shortForm: 'デュエル',\r\n        rubyForm: '{デュエル}',\r\n    },\r\n    {\r\n        shortForm: 'マッチ',\r\n        rubyForm: '{マッチ}',\r\n    },\r\n    {\r\n        shortForm: 'ターン',\r\n        rubyForm: '{ターン}',\r\n    },\r\n    {\r\n        shortForm: 'プレイヤー',\r\n        rubyForm: '{プレイヤー}',\r\n    },\r\n    {\r\n        shortForm: '自分',\r\n        rubyForm: '{自|じ}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '相手',\r\n        rubyForm: '{相|あい}{手|て}',\r\n    },\r\n    {\r\n        shortForm: 'LP',\r\n        regexForm: '(?<![a-zA-Z_])LP(?![a-zA-Z_])',\r\n        rubyForm: '{LP|ライフポイント}',\r\n    },\r\n    {\r\n        shortForm: 'デッキ',\r\n        rubyForm: '{デッキ}',\r\n    },\r\n    {\r\n        shortForm: 'メイン',\r\n        rubyForm: '{メイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイド',\r\n        rubyForm: '{サイド}',\r\n    },\r\n    {\r\n        shortForm: 'EX',\r\n        regexForm: '(?<!\\\\w)EX(?!\\\\w)',\r\n        rubyForm: '{EX|エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フィールド',\r\n        rubyForm: '{フィールド}',\r\n    },\r\n    {\r\n        shortForm: '墓地',\r\n        rubyForm: '{墓|ぼ}{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '手札',\r\n        rubyForm: '{手|て}{札|ふだ}',\r\n    },\r\n    {\r\n        shortForm: 'ゾーン',\r\n        rubyForm: '{ゾーン}',\r\n    },\r\n    {\r\n        shortForm: 'モンスター',\r\n        rubyForm: '{モンスター}',\r\n    },\r\n    {\r\n        shortForm: '縦列',\r\n        rubyForm: '{縦|たて}{列|れつ}',\r\n    },\r\n    {\r\n        shortForm: 'コントローラー',\r\n        rubyForm: '{コントローラー}',\r\n    },\r\n    {\r\n        shortForm: '持ち主',\r\n        rubyForm: '{持|も}ち{主|ぬし}',\r\n    },\r\n    {\r\n        shortForm: 'ダメージ',\r\n        rubyForm: '{ダメージ}',\r\n    },\r\n    {\r\n        shortForm: '戦闘',\r\n        rubyForm: '{戦|せん}{闘|とう}',\r\n    },\r\n    {\r\n        shortForm: 'スペル',\r\n        rubyForm: '{スペル}',\r\n    },\r\n    {\r\n        shortForm: 'スピード',\r\n        rubyForm: '{スピード}',\r\n    },\r\n    {\r\n        shortForm: 'チェーン',\r\n        rubyForm: '{チェーン}',\r\n    },\r\n    {\r\n        shortForm: 'ブロック',\r\n        rubyForm: '{ブロック}',\r\n    },\r\n    {\r\n        shortForm: '直接',\r\n        rubyForm: '{直|ちょく}{接|せつ}',\r\n    },\r\n    {\r\n        shortForm: '素材',\r\n        rubyForm: '{素|そ}{材|ざい}',\r\n    },\r\n    {\r\n        shortForm: '名',\r\n        rubyForm: '{名|めい}',\r\n    },\r\n    {\r\n        shortForm: '条件',\r\n        rubyForm: '{条|じょう}{件|けん}',\r\n    },\r\n    {\r\n        shortForm: 'コイン',\r\n        rubyForm: '{コイン}',\r\n    },\r\n    {\r\n        shortForm: 'サイコロ',\r\n        rubyForm: '{サイコロ}',\r\n    },\r\n    {\r\n        shortForm: '元',\r\n        rubyForm: '{元|もと}',\r\n    },\r\n    {\r\n        shortForm: '先',\r\n        rubyForm: '{先|さき}',\r\n    },\r\n    {\r\n        shortForm: '状態',\r\n        rubyForm: '{状|じょう}{態|たい}',\r\n    },\r\n    {\r\n        shortForm: '相互',\r\n        rubyForm: '{相|そう}{互|ご}',\r\n    },\r\n    {\r\n        shortForm: 'エクストラ',\r\n        rubyForm: '{エクストラ}',\r\n    },\r\n    {\r\n        shortForm: 'フェイズ',\r\n        rubyForm: '{フェイズ}',\r\n    },\r\n    {\r\n        shortForm: 'ドロー',\r\n        rubyForm: '{ドロー}',\r\n    },\r\n    {\r\n        shortForm: 'スタンバイ',\r\n        rubyForm: '{スタンバイ}',\r\n    },\r\n    {\r\n        shortForm: 'バトル',\r\n        rubyForm: '{バトル}',\r\n    },\r\n    {\r\n        shortForm: 'エンド',\r\n        rubyForm: '{エンド}',\r\n    },\r\n    {\r\n        shortForm: 'スタート',\r\n        rubyForm: '{スタート}',\r\n    },\r\n    {\r\n        shortForm: 'ステップ',\r\n        rubyForm: '{ステップ}',\r\n    },\r\n    {\r\n        shortForm: '種類',\r\n        rubyForm: '{種|しゅ}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '形式',\r\n        rubyForm: '{形|けい}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: '表側',\r\n        rubyForm: '{表|おもて}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '裏側',\r\n        rubyForm: '{裏|うら}{側|がわ}',\r\n    },\r\n    {\r\n        shortForm: '表示',\r\n        rubyForm: '{表|ひょう}{示|じ}',\r\n    },\r\n    {\r\n        shortForm: '裏',\r\n        rubyForm: '{裏|うら}',\r\n    },\r\n    {\r\n        shortForm: '罠',\r\n        rubyForm: '{罠|トラップ}',\r\n    },\r\n    {\r\n        shortForm: 'アクション',\r\n        rubyForm: 'アクション',\r\n    },\r\n    {\r\n        shortForm: '装備',\r\n        rubyForm: '{装|そう}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '速攻',\r\n        rubyForm: '{速|そっ}{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '永続',\r\n        rubyForm: '{永|えい}{続|ぞく}',\r\n    },\r\n    {\r\n        shortForm: 'カウンター',\r\n        rubyForm: '{カウンター}',\r\n    },\r\n    {\r\n        shortForm: 'レベル',\r\n        rubyForm: '{レベル}',\r\n    },\r\n    {\r\n        shortForm: 'ランク',\r\n        rubyForm: '{ランク}',\r\n    },\r\n    {\r\n        shortForm: 'スケール',\r\n        rubyForm: '{スケール}',\r\n    },\r\n    {\r\n        shortForm: '攻撃力',\r\n        rubyForm: '{攻|こう}{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '守備力',\r\n        rubyForm: '{守|しゅ}{備|び}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '撃力',\r\n        rubyForm: '{撃|げき}{力|りょく}',\r\n    },\r\n    {\r\n        shortForm: '勝利',\r\n        rubyForm: '{勝|しょう}{利|り}',\r\n    },\r\n    {\r\n        shortForm: '属性',\r\n        rubyForm: '{属|ぞく}{性|せい}',\r\n    },\r\n    {\r\n        shortForm: '種族',\r\n        rubyForm: '{種|しゅ}{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '効果',\r\n        rubyForm: '{効|こう}{果|か}',\r\n    },\r\n    {\r\n        shortForm: '融合',\r\n        rubyForm: '{融|ゆう}{合|ごう}',\r\n    },\r\n    {\r\n        shortForm: '儀式',\r\n        rubyForm: '{儀|ぎ}{式|しき}',\r\n    },\r\n    {\r\n        shortForm: 'マキシマム',\r\n        rubyForm: '{マキシマム}',\r\n    },\r\n    {\r\n        shortForm: 'トークン',\r\n        rubyForm: '{トークン}',\r\n    },\r\n    {\r\n        shortForm: 'チューナー',\r\n        rubyForm: '{チューナー}',\r\n    },\r\n    {\r\n        shortForm: 'デュアル',\r\n        rubyForm: '{デュアル}',\r\n    },\r\n    {\r\n        shortForm: 'リバース',\r\n        rubyForm: '{リバース}',\r\n    },\r\n    {\r\n        shortForm: 'トゥーン',\r\n        rubyForm: '{トゥーン}',\r\n    },\r\n    {\r\n        shortForm: 'スピリット',\r\n        rubyForm: '{スピリット}',\r\n    },\r\n    {\r\n        shortForm: 'ユニオン',\r\n        rubyForm: '{ユニオン}',\r\n    },\r\n    {\r\n        shortForm: '光',\r\n        rubyForm: '{光|ひかり}',\r\n    },\r\n    {\r\n        shortForm: '闇',\r\n        rubyForm: '{闇|やみ}',\r\n    },\r\n    {\r\n        shortForm: '地',\r\n        rubyForm: '{地|ち}',\r\n    },\r\n    {\r\n        shortForm: '水',\r\n        rubyForm: '{水|みず}',\r\n    },\r\n    {\r\n        shortForm: '炎',\r\n        rubyForm: '{炎|ほのお}',\r\n    },\r\n    {\r\n        shortForm: '風',\r\n        rubyForm: '{風|かぜ}',\r\n    },\r\n    {\r\n        shortForm: '獣戦士',\r\n        rubyForm: '{獣|じゅう}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '創造神',\r\n        rubyForm: '{創|そう}{造|ぞう}{神|しん}',\r\n    },\r\n    {\r\n        shortForm: 'サイバース',\r\n        rubyForm: '{サイバース}',\r\n    },\r\n    {\r\n        shortForm: '恐竜',\r\n        rubyForm: '{恐|きょう}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻神獣',\r\n        rubyForm: '{幻|げん}{神|しん}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '天使',\r\n        rubyForm: '{天|てん}{使|し}',\r\n    },\r\n    {\r\n        shortForm: '悪魔',\r\n        rubyForm: '{悪|あく}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '魚',\r\n        rubyForm: '{魚|さかな}',\r\n    },\r\n    {\r\n        shortForm: 'ギャラクシー',\r\n        rubyForm: '{ギャラクシー}',\r\n    },\r\n    {\r\n        shortForm: '幻想魔',\r\n        rubyForm: '{幻|げん}{想|そう}{魔|ま}',\r\n    },\r\n    {\r\n        shortForm: '昆虫',\r\n        rubyForm: '{昆|こん}{虫|ちゅう}',\r\n    },\r\n    {\r\n        shortForm: '機械',\r\n        rubyForm: '{機|き}{械|かい}',\r\n    },\r\n    {\r\n        shortForm: '植物',\r\n        rubyForm: '{植|しょく}{物|ぶつ}',\r\n    },\r\n    {\r\n        shortForm: '爬虫類',\r\n        rubyForm: '{爬|は}{虫|ちゅう}{類|るい}',\r\n    },\r\n    {\r\n        shortForm: '岩石',\r\n        rubyForm: '{岩|がん}{石|せき}',\r\n    },\r\n    {\r\n        shortForm: '海竜',\r\n        rubyForm: '{海|かい}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: '魔法使い',\r\n        rubyForm: '{魔|ま}{法|ほう}{使|つか}い',\r\n    },\r\n    {\r\n        shortForm: '雷',\r\n        rubyForm: '{雷|いかずち}',\r\n    },\r\n    {\r\n        shortForm: '鳥獣',\r\n        rubyForm: '{鳥|ちょう}{獣|じゅう}',\r\n    },\r\n    {\r\n        shortForm: '幻竜',\r\n        rubyForm: '{幻|げん}{竜|りゅう}',\r\n    },\r\n    {\r\n        shortForm: 'アンデット',\r\n        rubyForm: '{アンデット}',\r\n    },\r\n    {\r\n        shortForm: 'サイボーグ',\r\n        rubyForm: '{サイボーグ}',\r\n    },\r\n    {\r\n        shortForm: '天界戦士',\r\n        rubyForm: '{天|てん}{界|かい}{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: 'ハイドラゴン',\r\n        rubyForm: '{ハイドラゴン}',\r\n    },\r\n    {\r\n        shortForm: '魔導騎士',\r\n        rubyForm: '{魔|ま}{導|どう}{騎|き}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '無効化',\r\n        rubyForm: '{無|む}{効|こう}{化|か}',\r\n    },\r\n    {\r\n        shortForm: 'オメガ',\r\n        rubyForm: '{オメガ}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '捨てる',\r\n        rubyForm: '{捨|す}てる',\r\n    },\r\n    {\r\n        shortForm: '加える',\r\n        rubyForm: '{加|くわ}える',\r\n    },\r\n    {\r\n        shortForm: 'から離れる',\r\n        rubyForm: 'から{離|はな}れる',\r\n    },\r\n    {\r\n        shortForm: '与える',\r\n        rubyForm: '{与|あた}える',\r\n    },\r\n    {\r\n        shortForm: '重ねる',\r\n        rubyForm: '{重|かさ}ねる',\r\n    },\r\n    {\r\n        shortForm: '取り除く',\r\n        rubyForm: '{取|と}り{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '取り除い',\r\n        rubyForm: '{取|と}り{除|のぞ}い',\r\n    },\r\n    {\r\n        shortForm: '除く',\r\n        rubyForm: '{除|のぞ}く',\r\n    },\r\n    {\r\n        shortForm: '行う',\r\n        rubyForm: '{行|おこな}う',\r\n    },\r\n    {\r\n        shortForm: '対す',\r\n        rubyForm: '{対|たい}す',\r\n    },\r\n    {\r\n        shortForm: '送る',\r\n        rubyForm: '{送|おく}る',\r\n    },\r\n    {\r\n        shortForm: '置く',\r\n        rubyForm: '{置|お}く',\r\n    },\r\n    {\r\n        shortForm: 'めくる',\r\n        rubyForm: '{めくる}',\r\n    },\r\n    {\r\n        shortForm: 'アドバンス',\r\n        rubyForm: '{アドバンス}',\r\n    },\r\n    {\r\n        shortForm: '反転',\r\n        rubyForm: '{反|はん}{転|てん}',\r\n    },\r\n    {\r\n        shortForm: '特殊',\r\n        rubyForm: '{特|とく}{殊|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '発動',\r\n        rubyForm: '{発|はつ}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '破壊',\r\n        rubyForm: '{破|は}{壊|かい}',\r\n    },\r\n    {\r\n        shortForm: '対象',\r\n        rubyForm: '{対|たい}{象|しょう}',\r\n    },\r\n    {\r\n        shortForm: '無効',\r\n        rubyForm: '{無|む}{効|こう}',\r\n    },\r\n    {\r\n        shortForm: '無視',\r\n        rubyForm: '{無|む}{視|し}',\r\n    },\r\n    {\r\n        shortForm: '確認',\r\n        rubyForm: '{確|かく}{認|にん}',\r\n    },\r\n    {\r\n        shortForm: '攻撃',\r\n        rubyForm: '{攻|こう}{撃|げき}',\r\n    },\r\n    {\r\n        shortForm: '処理',\r\n        rubyForm: '{処|しょ}{理|り}',\r\n    },\r\n    {\r\n        shortForm: '宣言',\r\n        rubyForm: '{宣|せん}{言|げん}',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: 'リリース',\r\n        rubyForm: '{リリース}',\r\n    },\r\n    {\r\n        shortForm: 'スキップ',\r\n        rubyForm: '{スキップ}',\r\n    },\r\n    {\r\n        shortForm: 'シャッフル',\r\n        rubyForm: '{シャッフル}',\r\n    },\r\n    {\r\n        shortForm: 'コントロール',\r\n        rubyForm: '{コントロール}',\r\n    },\r\n    {\r\n        shortForm: 'セット',\r\n        rubyForm: '{セット}',\r\n    },\r\n    {\r\n        shortForm: 'RUM',\r\n        regexForm: '(?<!\\\\w)RUM(?!\\\\w)',\r\n        rubyForm: '{RUM|ランクアップマジック}',\r\n    },\r\n    {\r\n        shortForm: 'S',\r\n        regexForm: '(?<!\\\\w)S(?!\\\\w)',\r\n        rubyForm: '{S|シンクロ}',\r\n    },\r\n    {\r\n        shortForm: 'X',\r\n        regexForm: '(?<!\\\\w)X(?!\\\\w)',\r\n        rubyForm: '{X|エクシーズ}',\r\n    },\r\n    {\r\n        shortForm: 'L',\r\n        regexForm: '(?<!\\\\w)L(?!\\\\w)',\r\n        rubyForm: '{L|リンク}',\r\n    },\r\n    {\r\n        shortForm: 'P',\r\n        regexForm: '(?<!\\\\w)P(?!\\\\w)',\r\n        rubyForm: '{P|ペンデュラム}',\r\n    },\r\n    {\r\n        shortForm: 'リンク',\r\n        rubyForm: '{リンク}',\r\n    },\r\n    {\r\n        shortForm: '守備',\r\n        rubyForm: '{守|しゅ}{備|び}',\r\n    },\r\n    {\r\n        shortForm: '通常',\r\n        rubyForm: '{通|つう}{常|じょう}',\r\n    },\r\n    {\r\n        shortForm: '可能',\r\n        rubyForm: '{可|か}{能|のう}',\r\n    },\r\n    {\r\n        shortForm: '神',\r\n        rubyForm: '{神|かみ}',\r\n    },\r\n    {\r\n        shortForm: '獣',\r\n        rubyForm: '{獣|けもの}',\r\n    },\r\n    {\r\n        shortForm: 'ドラゴン',\r\n        rubyForm: '{ドラゴン}',\r\n    },\r\n    {\r\n        shortForm: 'サイキック',\r\n        rubyForm: '{サイキック}',\r\n    },\r\n    {\r\n        shortForm: '重ねて',\r\n        rubyForm: '{重|かさ}ねて',\r\n    },\r\n    {\r\n        shortForm: '魔法',\r\n        rubyForm: '{魔|ま}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '戦士',\r\n        rubyForm: '{戦|せん}{士|し}',\r\n    },\r\n    {\r\n        shortForm: '召喚',\r\n        rubyForm: '{召|しょう}{喚|かん}',\r\n    },\r\n    {\r\n        shortForm: '合計',\r\n        rubyForm: '{合|ごう}{計|けい}',\r\n    },\r\n    {\r\n        shortForm: '以上',\r\n        rubyForm: '{以|い}{上|じょう}',\r\n    },\r\n    {\r\n        shortForm: '上記',\r\n        rubyForm: '{上|じょう}{記|き}',\r\n    },\r\n    {\r\n        shortForm: '場合',\r\n        rubyForm: '{場|ば}{合|あい}',\r\n    },\r\n    {\r\n        shortForm: '降臨',\r\n        rubyForm: '{降|こう}{臨|りん}',\r\n    },\r\n    {\r\n        shortForm: '以外',\r\n        rubyForm: '{以|い}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '使用',\r\n        rubyForm: '{使|し}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '存在',\r\n        rubyForm: '{存|そん}{在|ざい}',\r\n    },\r\n    {\r\n        shortForm: '最大',\r\n        rubyForm: '{最|さい}{大|だい}',\r\n    },\r\n    {\r\n        shortForm: '成功',\r\n        rubyForm: '{成|せい}{功|こう}',\r\n    },\r\n    {\r\n        shortForm: '自身',\r\n        rubyForm: '{自|じ}{身|しん}',\r\n    },\r\n    {\r\n        shortForm: '以下',\r\n        rubyForm: '{以|い}{下|か}',\r\n    },\r\n    {\r\n        shortForm: '終了',\r\n        rubyForm: '{終|しゅう}{了|りょう}',\r\n    },\r\n    {\r\n        shortForm: '全て',\r\n        rubyForm: '{全|すべ}て',\r\n    },\r\n    {\r\n        shortForm: '捨て',\r\n        rubyForm: '{捨|す}て',\r\n    },\r\n    {\r\n        shortForm: '行かず',\r\n        rubyForm: '{行|い}かず',\r\n    },\r\n    {\r\n        shortForm: 'CNo．',\r\n        regexForm: '(?<![a-zA-Z])CNo．(?![a-zA-Z])',\r\n        rubyForm: '{CNo．||カオスナンバーズ}',\r\n        rubyFormName: '{CNo||カオスナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'No．',\r\n        regexForm: '(?<![a-zA-Z])No．(?![a-zA-Z])',\r\n        rubyForm: '{No．||ナンバーズ}',\r\n        rubyFormName: '{No||ナンバーズ}．',\r\n    },\r\n    {\r\n        shortForm: 'CX',\r\n        regexForm: '(?<![a-zA-Z])CX(?![a-zA-Z])',\r\n        rubyForm: '{CX|カオスエクシーズ}',\r\n    },\r\n    {\r\n        shortForm: '適用',\r\n        rubyForm: '{適|てき}{用|よう}',\r\n    },\r\n    {\r\n        shortForm: '数値',\r\n        rubyForm: '{数|すう}{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '計算',\r\n        rubyForm: '{計|けい}{算|さん}',\r\n    },\r\n    {\r\n        shortForm: '必要',\r\n        rubyForm: '{必|ひつ}{要|よう}',\r\n    },\r\n    {\r\n        shortForm: '選択',\r\n        rubyForm: '{選|せん}{択|たく}',\r\n    },\r\n    {\r\n        shortForm: '半分',\r\n        rubyForm: '{半|はん}{分|ぶん}',\r\n    },\r\n    {\r\n        shortForm: '開始',\r\n        rubyForm: '{開|かい}{始|し}',\r\n    },\r\n    {\r\n        shortForm: '裏表',\r\n        rubyForm: '{裏|うら}{表|おもて}',\r\n    },\r\n    {\r\n        shortForm: '回復',\r\n        rubyForm: '{回|かい}{復|ふく}',\r\n    },\r\n    {\r\n        shortForm: '指定',\r\n        rubyForm: '{指|し}{定|てい}',\r\n    },\r\n    {\r\n        shortForm: '位置',\r\n        rubyForm: '{位|い}{置|ち}',\r\n    },\r\n    {\r\n        shortForm: '移動',\r\n        rubyForm: '{移|い}{動|どう}',\r\n    },\r\n    {\r\n        shortForm: '方法',\r\n        rubyForm: '{方|ほう}{法|ほう}',\r\n    },\r\n    {\r\n        shortForm: '変更',\r\n        rubyForm: '{変|へん}{更|こう}',\r\n    },\r\n    {\r\n        shortForm: '発生',\r\n        rubyForm: '{発|はっ}{生|せい}',\r\n    },\r\n    {\r\n        shortForm: '公開',\r\n        rubyForm: '{公|こう}{開|かい}',\r\n    },\r\n    {\r\n        shortForm: '順番',\r\n        rubyForm: '{順|じゅん}{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '限り',\r\n        rubyForm: '{限|かぎ}り',\r\n    },\r\n    {\r\n        shortForm: '除外',\r\n        rubyForm: '{除|じょ}{外|がい}',\r\n    },\r\n    {\r\n        shortForm: '順',\r\n        rubyForm: '{順|じゅん}',\r\n    },\r\n    {\r\n        shortForm: '代',\r\n        rubyForm: '{代|か}',\r\n    },\r\n    {\r\n        shortForm: '超',\r\n        rubyForm: '{超|こ}',\r\n    },\r\n    {\r\n        shortForm: '毎',\r\n        rubyForm: '{毎|ごと}',\r\n    },\r\n    {\r\n        shortForm: '前',\r\n        rubyForm: '{前|まえ}',\r\n    },\r\n    {\r\n        shortForm: '違',\r\n        rubyForm: '{違|ちが}',\r\n    },\r\n    {\r\n        shortForm: '続',\r\n        rubyForm: '{続|つづ}',\r\n    },\r\n    {\r\n        shortForm: '残',\r\n        rubyForm: '{残|のこ}',\r\n    },\r\n    {\r\n        shortForm: '他',\r\n        rubyForm: '{他|ほか}',\r\n    },\r\n    {\r\n        shortForm: '当',\r\n        rubyForm: '{当|あ}',\r\n    },\r\n    {\r\n        shortForm: '度',\r\n        rubyForm: '{度|ど}',\r\n    },\r\n    {\r\n        shortForm: '時',\r\n        rubyForm: '{時|とき}',\r\n    },\r\n    {\r\n        shortForm: '族',\r\n        rubyForm: '{族|ぞく}',\r\n    },\r\n    {\r\n        shortForm: '数',\r\n        rubyForm: '{数|かず}',\r\n    },\r\n    {\r\n        shortForm: '体',\r\n        rubyForm: '{体|たい}',\r\n    },\r\n    {\r\n        shortForm: '限',\r\n        rubyForm: '{限|ゲン}',\r\n    },\r\n    {\r\n        shortForm: '置',\r\n        rubyForm: '{置|チ}',\r\n    },\r\n    {\r\n        shortForm: '受',\r\n        rubyForm: '{受|う}',\r\n    },\r\n    {\r\n        shortForm: '枚',\r\n        rubyForm: '{枚|まい}',\r\n    },\r\n    {\r\n        shortForm: '後',\r\n        rubyForm: '{後|ご}',\r\n    },\r\n    {\r\n        shortForm: '送',\r\n        rubyForm: '{送|おく}',\r\n    },\r\n    {\r\n        shortForm: '事',\r\n        rubyForm: '{事|こと}',\r\n    },\r\n    {\r\n        shortForm: '内',\r\n        rubyForm: '{内|うち}',\r\n    },\r\n    {\r\n        shortForm: '見',\r\n        rubyForm: '{見|み}',\r\n    },\r\n    {\r\n        shortForm: '中',\r\n        rubyForm: '{中|なか}',\r\n    },\r\n    {\r\n        shortForm: '加',\r\n        rubyForm: '{加|くわ}',\r\n    },\r\n    {\r\n        shortForm: '選',\r\n        rubyForm: '{選|えら}',\r\n    },\r\n    {\r\n        shortForm: '一',\r\n        rubyForm: '{一|いち}',\r\n    },\r\n    {\r\n        shortForm: '番',\r\n        rubyForm: '{番|ばん}',\r\n    },\r\n    {\r\n        shortForm: '同',\r\n        rubyForm: '{同|どう}',\r\n    },\r\n    {\r\n        shortForm: '回',\r\n        rubyForm: '{回|かい}',\r\n    },\r\n    {\r\n        shortForm: '扱',\r\n        rubyForm: '{扱|あつか}',\r\n    },\r\n    {\r\n        shortForm: '星',\r\n        rubyForm: '{星|レベル}',\r\n    },\r\n    {\r\n        shortForm: '攻',\r\n        rubyForm: '{攻|こう}',\r\n    },\r\n    {\r\n        shortForm: '守',\r\n        rubyForm: '{守|しゅ}',\r\n    },\r\n    {\r\n        shortForm: '戻',\r\n        rubyForm: '{戻|もど}',\r\n    },\r\n    {\r\n        shortForm: '上',\r\n        rubyForm: '{上|うえ}',\r\n    },\r\n    {\r\n        shortForm: '次',\r\n        rubyForm: '{次|つぎ}',\r\n    },\r\n    {\r\n        shortForm: '値',\r\n        rubyForm: '{値|ち}',\r\n    },\r\n    {\r\n        shortForm: '含',\r\n        rubyForm: '{含|ふく}',\r\n    },\r\n    {\r\n        shortForm: '与',\r\n        rubyForm: '{与|むた}',\r\n    },\r\n    {\r\n        shortForm: '得',\r\n        rubyForm: '{得|え}',\r\n    },\r\n    {\r\n        shortForm: '及',\r\n        rubyForm: '{及|およ}',\r\n    },\r\n    {\r\n        shortForm: '異',\r\n        rubyForm: '{異|こと}',\r\n    },\r\n    {\r\n        shortForm: '記',\r\n        rubyForm: '{記|しる}',\r\n    },\r\n    {\r\n        shortForm: '繰',\r\n        rubyForm: '{繰|く}',\r\n    },\r\n    {\r\n        shortForm: '返',\r\n        rubyForm: '{返|かえ}',\r\n    },\r\n    {\r\n        shortForm: '決',\r\n        rubyForm: '{決|き}',\r\n    },\r\n    {\r\n        shortForm: '互',\r\n        rubyForm: '{互|たが}',\r\n    },\r\n    {\r\n        shortForm: '払',\r\n        rubyForm: '{払|はら}',\r\n    },\r\n    {\r\n        shortForm: '多',\r\n        rubyForm: '{多|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|おお}',\r\n    },\r\n    {\r\n        shortForm: '持',\r\n        rubyForm: '{持|も}',\r\n    },\r\n    {\r\n        shortForm: '間',\r\n        rubyForm: '{間|あいだ}',\r\n    },\r\n    {\r\n        shortForm: '所',\r\n        rubyForm: '{所|しょ}',\r\n    },\r\n    {\r\n        shortForm: '高',\r\n        rubyForm: '{高|たか}',\r\n    },\r\n    {\r\n        shortForm: '倍',\r\n        rubyForm: '{倍|ばい}',\r\n    },\r\n    {\r\n        shortForm: '下',\r\n        rubyForm: '{下|した}',\r\n    },\r\n    {\r\n        shortForm: '際',\r\n        rubyForm: '{際|さい}',\r\n    },\r\n    {\r\n        shortForm: '好',\r\n        rubyForm: '{好|す}',\r\n    },\r\n    {\r\n        shortForm: '表',\r\n        rubyForm: '{表|おもて}',\r\n    },\r\n];\r\nexport const ocgKeywordDataMap = ocgKeywordDataList.reduce((acc, cur) => {\r\n    acc[cur.shortForm] = cur;\r\n    return acc;\r\n}, {} as Record<string, typeof ocgKeywordDataList[0]>);","type FinishInstruction = { opacity?: number, blendMode?: GlobalCompositeOperation };\r\nconst type3CommonInstruction: FinishInstruction[] = [{ blendMode: 'overlay', opacity: 1 }];\r\nconst type8CommonInstruction: FinishInstruction[] = [\r\n    { blendMode: 'overlay', opacity: 0.65 },\r\n    { blendMode: 'multiply', opacity: 0.55 },\r\n];\r\n\r\n/** @summary Web engine has less blend mode than photoshop (or any desktop image manipulators for that matter), the behavior of similar blend mode is also different, so we currently we cannot have a 1:1 conversion between photoshop layer into canvas. */\r\n\r\nexport const ArtFinishType = 'art';\r\nexport type FinishInformation = {\r\n    value: string,\r\n    label: React.ReactNode,\r\n    labelKey?: string,\r\n    tooltipKey?: string,\r\n    partInstructionMap: Record<string, FinishInstruction[]>,\r\n    pendulumSubstituteMap: Record<string, string>,\r\n};\r\nexport const FinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            'card-border': type3CommonInstruction,\r\n            'art-overlay': type3CommonInstruction,\r\n            'art-border': type3CommonInstruction,\r\n            'art-border-pendulum': type3CommonInstruction,\r\n            'border-pendulum': type3CommonInstruction,\r\n            'attribute': type3CommonInstruction,\r\n            'frame': type3CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.175 }, { blendMode: 'color-dodge', opacity: 0.125 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type8: {\r\n        value: 'type8',\r\n        label: '8',\r\n        partInstructionMap: {\r\n            'card-border': type8CommonInstruction,\r\n            'art-border': type8CommonInstruction,\r\n            'art-border-pendulum': type8CommonInstruction,\r\n            'border-pendulum': type8CommonInstruction,\r\n            'frame': type8CommonInstruction,\r\n            'frame-background': type8CommonInstruction,\r\n            'name': type8CommonInstruction,\r\n            'star': type8CommonInstruction,\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    type9: {\r\n        value: 'type9',\r\n        label: '9',\r\n        partInstructionMap: {\r\n            'total-overlay': [{ blendMode: 'screen', opacity: 0.45 }],\r\n        },\r\n        pendulumSubstituteMap: {},\r\n    },\r\n    art: {\r\n        value: ArtFinishType,\r\n        label: 'Art',\r\n        partInstructionMap: {},\r\n        pendulumSubstituteMap: {},\r\n        labelKey: 'input.finish.art.label',\r\n        tooltipKey: 'input.finish.art.tooltip',\r\n    },\r\n};\r\n\r\nexport const ArtFinishMap: Record<string, FinishInformation> = {\r\n    type1: {\r\n        value: 'type1',\r\n        label: '1',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type2: {\r\n        value: 'type2',\r\n        label: '2',\r\n        partInstructionMap: {\r\n            art: [\r\n                { opacity: 0.08, blendMode: 'darken' },\r\n                { opacity: 0.28, blendMode: 'color-dodge' },\r\n                { opacity: 0.48, blendMode: 'multiply' },\r\n            ],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type3: {\r\n        value: 'type3',\r\n        label: '3',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.66, blendMode: 'color-dodge' }, { opacity: 0.64, blendMode: 'multiply' }],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type4: {\r\n        value: 'type4',\r\n        label: '4',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.31, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type5: {\r\n        value: 'type5',\r\n        label: '5',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.19, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type6: {\r\n        value: 'type6',\r\n        label: '6',\r\n        partInstructionMap: {\r\n            art: [{ opacity: 0.25, blendMode: 'color-dodge' }, { opacity: 0.6, blendMode: 'multiply' }]\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n    type7: {\r\n        value: 'type7',\r\n        label: '7',\r\n        partInstructionMap: {\r\n            art: [{}],\r\n        },\r\n        pendulumSubstituteMap: {\r\n            small: '-pendulum-small',\r\n            medium: '-pendulum-medium',\r\n            large: '-pendulum-medium',\r\n        },\r\n    },\r\n};\r\n\r\nexport type FoilDictionary = {\r\n    normal: string,\r\n    gold: string,\r\n    platinum: string,\r\n};\r\nexport const FoilNameMap = {\r\n    normal: 'normal' as const,\r\n    gold: 'gold' as const,\r\n    platinum: 'platinum' as const,\r\n};\r\nexport const getFoilList = (dictionary?: FoilDictionary) => [\r\n    {\r\n        name: FoilNameMap['normal' as const],\r\n        label: dictionary?.normal,\r\n        color: '#747b95',\r\n        isOption: false,\r\n    },\r\n    {\r\n        name: FoilNameMap['gold' as const],\r\n        label: dictionary?.gold,\r\n        color: '#cfa65f',\r\n        isOption: true,\r\n    },\r\n    {\r\n        name: FoilNameMap['platinum' as const],\r\n        label: dictionary?.platinum,\r\n        color: '#b1b1b1',\r\n        isOption: true,\r\n    },\r\n];\r\nexport type Foil = ReturnType<typeof getFoilList>[0]['name'];","export type FontGetter = {\r\n    getFont: () => string,\r\n    getFontInfo: () => {\r\n        style: '' | 'italic' | 'small-caps',\r\n        size: `${number}px`,\r\n        sizeAsNumber: number,\r\n        family: string,\r\n        weight: '' | 'bold',\r\n    },\r\n    setWeight(nextWeight: '' | 'bold'): FontGetter,\r\n    setStyle(nextStyle: '' | 'italic' | 'small-caps'): FontGetter,\r\n    setSize(nextSize: number | `${number}px` | ((currentSize: number) => number | `${number}px`)): FontGetter,\r\n    setFamily(nextFamily: string): FontGetter,\r\n};\r\n\r\nexport type FontSizeData = {\r\n    allRightSymbolOffset?: number,\r\n    bulletOffset?: number,\r\n    bulletWidth: number,\r\n    capitalLetterRatio?: number,\r\n    fontSize: number,\r\n    headTextFontRatio?: number,\r\n    headTextSpacing?: number,\r\n    iconSymbolWidth?: number,\r\n    largeSymbolRatio?: number,\r\n    letterSpacing?: number,\r\n    lineCount: number,\r\n    lineHeight: number,\r\n    offsetY?: number,\r\n    ordinalFontOffsetY?: number,\r\n    ordinalFontRatio?: number,\r\n    squareBracketRatio?: number,\r\n    wordLetterSpacing?: number,\r\n};\r\nexport const DefaultFontSizeData = {\r\n    allRightSymbolOffset: 1,\r\n    bulletWidth: 23,\r\n    fontSize: 24.5,\r\n    lineHeight: 24.7,\r\n    lineCount: 6,\r\n    bulletOffset: 0,\r\n    capitalLetterRatio: 1,\r\n    headTextFontRatio: 0.355,\r\n    headTextSpacing: 1.5,\r\n    largeSymbolRatio: 1.35,\r\n    letterSpacing: 0,\r\n    offsetY: 0,\r\n    ordinalFontOffsetY: -2,\r\n    ordinalFontRatio: 1 / 1.1,\r\n    squareBracketRatio: 1,\r\n};\r\n\r\n/**\r\n * @summary For some weird reasons, letter sometime just got deviated from current baseline compare to other letters of the same font only in 1:1 scale. The only known case is with MatrixRegularSmallCaps font with font size bigger than around 85px. This deviation create a small but noticeable disruption in baseline, which currently we are unable to fix. We cannot fix this in canvas, and modify the font directly give no positive result.\r\n * \r\n * So for now we can only hardcode a list of problematic letters with their correpsonding treatment. This is just baffling.\r\n */\r\nexport type FontDeviation = {\r\n    uniformBoxDescent?: number,\r\n};\r\nexport type FontDeviationMap = {\r\n    threshold: number,\r\n    letterMap: Record<string, FontDeviation>,\r\n}\r\n\r\nexport type MetricMethod = 'name' | 'standard' | 'compact' | 'creator' | 'furigana';\r\nexport type FontData = {\r\n    alphabetFont: string,\r\n    font: string,\r\n    fontList: FontSizeData[],\r\n    letterDeviationMap?: Record<string, FontDeviationMap>,\r\n    fontStyle: string,\r\n    furiganaFont: string,\r\n    headTextBold?: boolean,\r\n    headTextFillStyle?: string,\r\n    headTextGapRatio?: number,\r\n    headTextHeightRatio?: number,\r\n    headTextOverflow?: 'normal' | 'condense',\r\n    metricMethod?: MetricMethod,\r\n    numberFont?: string,\r\n    numberFontRatio?: number,\r\n    ordinalFont: string,\r\n    symbolFont: string,\r\n    symbolFontRatio: number,\r\n    weight?: 'bold',\r\n};\r\nexport const DefaultFontData = {\r\n    headTextHeightRatio: 0.800,\r\n    headTextOverflow: 'normal' as 'normal' | 'condense',\r\n    headTextBold: true,\r\n    headTextGapRatio: 0.03125,\r\n};\r\nexport type TextData = {\r\n    fontData: FontData,\r\n    fontLevel: number,\r\n    currentFont: FontGetter,\r\n};\r\n\r\nconst DefaultEffectFontData = {\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    headTextFontRatio: 0.7,\r\n    headTextHeightRatio: 0.815,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 1,\r\n    headTextGapRatio: 0,\r\n};\r\nexport const DefaultTCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: 'MatrixBook',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultTCGNormalFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"StoneSerif-Italic\"',\r\n    headTextHeightRatio: 0.750,\r\n    fontStyle: 'tcg',\r\n    fontList: [],\r\n};\r\nexport const DefaultOCGEffectFontData: FontData = {\r\n    ...DefaultEffectFontData,\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'compact',\r\n    fontList: [],\r\n};\r\n\r\n/**\r\n * Keep in sync with EffectFontData, for example if tcg-type of EffectFontData fontList has 9 entries, tcg-type of NormalFontData must also has 9 entries.\r\n * */\r\nexport const NormalFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.2, lineHeight: 47.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.28, lineHeight: 21.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 17.78, lineHeight: 18.9, lineCount: 8 },\r\n            { bulletWidth: 19, fontSize: 15.46, lineHeight: 16.8, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 12.99, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 41.2, lineHeight: 44.1, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.5, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 36.8, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 31.5, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.1, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 23.7, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.54, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.14, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.6, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.4, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 39.5, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 32.6, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 26.7, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 24.8, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.0, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.3, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.4, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 44.4, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.5, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 26.6, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 24.7, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.4, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.2, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.9, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.7, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 38.9, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 32.4, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 26.5, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.2, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.5, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.6, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.7, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.1, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport const DEFAULT_EFFECT_NORMAL_SIZE = 3;\r\nexport const DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE = 3;\r\nexport const EffectFontData: Record<string, FontData> = {\r\n    'tcg': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 40.2, lineHeight: 42.1, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 33.2, lineHeight: 35.1, lineCount: 6 },\r\n            { bulletWidth: 26, fontSize: 28.2, lineHeight: 30.3, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 24.38, lineHeight: 24.7, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 19.94, lineHeight: 21.15, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 21, fontSize: 18.5, lineHeight: 19.2, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 17.0, lineHeight: 17.6, lineCount: 12, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.6, lineHeight: 16.3, lineCount: 13, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 21, fontSize: 19.01, lineHeight: 20.15, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.5, lineHeight: 18.2, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.7, lineHeight: 16.5, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 48.1, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 36.5, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.7, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.0, lineHeight: 15.0, lineCount: 10, bulletOffset: 2 },\r\n        ]\r\n    },\r\n    'tcg-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 42.2, lineHeight: 43.9, lineCount: 4, bulletOffset: 2 },\r\n            { bulletWidth: 32, fontSize: 33.2, lineHeight: 35.5, lineCount: 5 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 7 },\r\n            { bulletWidth: 23, fontSize: 19.95, lineHeight: 21.3, lineCount: 8 },\r\n            { bulletWidth: 23, fontSize: 18.8, lineHeight: 18.8, lineCount: 9 },\r\n            { bulletWidth: 20, fontSize: 16.8, lineHeight: 17.7, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 15.1, lineHeight: 16.1, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.1, lineHeight: 14.7, lineCount: 12, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 37.6, lineHeight: 43.3, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 32, fontSize: 32.2, lineHeight: 35.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 30.1, lineCount: 6 },\r\n            { bulletWidth: 23, fontSize: 24.2, lineHeight: 25.8, lineCount: 7 },\r\n            { bulletWidth: 22, fontSize: 19.94, lineHeight: 22.7, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 17.44, lineHeight: 18.55, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 15.8, lineHeight: 16.4, lineCount: 11, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 14.5, lineHeight: 15.0, lineCount: 12, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'tcg-pendulumLarge-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.2, lineHeight: 47.9, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 34, fontSize: 33.2, lineHeight: 36.0, lineCount: 4 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 29.5, lineCount: 5 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 24.7, lineCount: 6 },\r\n            { bulletWidth: 20, fontSize: 17.31, lineHeight: 18.65, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 15.5, lineHeight: 16.7, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.5, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type-stat': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 45.2, lineHeight: 54.1, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 34.2, lineHeight: 37.5, lineCount: 3 },\r\n            { bulletWidth: 26, fontSize: 27.2, lineHeight: 28.5, lineCount: 4 },\r\n            { bulletWidth: 23, fontSize: 25.2, lineHeight: 23.3, lineCount: 5 },\r\n            { bulletWidth: 22, fontSize: 19.85, lineHeight: 19.5, lineCount: 6, bulletOffset: 1 },\r\n            { bulletWidth: 20, fontSize: 18.5, lineHeight: 16.9, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 17, fontSize: 16.1, lineHeight: 14.8, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 13.8, lineHeight: 13.2, lineCount: 9, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'tcg-pendulumLarge-type': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 40, fontSize: 39.8, lineHeight: 45.5, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 33.2, lineHeight: 36.9, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 28, fontSize: 27.2, lineHeight: 28.8, lineCount: 5 },\r\n            { bulletWidth: 25, fontSize: 22.8, lineHeight: 24.5, lineCount: 6 },\r\n            { bulletWidth: 22, fontSize: 19.95, lineHeight: 21.2, lineCount: 7 },\r\n            { bulletWidth: 20, fontSize: 17.95, lineHeight: 18.5, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 16.0, lineHeight: 16.6, lineCount: 9 },\r\n            { bulletWidth: 18, fontSize: 14.3, lineHeight: 15.0, lineCount: 10, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 12.5, lineHeight: 13.4, lineCount: 11, bulletOffset: 1 },\r\n        ]\r\n    },\r\n    'ocg': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.2, lineHeight: 50.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 34.7, lineHeight: 40.1, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 8 },\r\n        ]\r\n    },\r\n    'ocg-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 24, fontSize: 27.7, lineHeight: 30.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 34, fontSize: 38.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 36.1, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 26, fontSize: 28.7, lineHeight: 32.8, lineCount: 6, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.8, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 39, fontSize: 45.2, lineHeight: 55.1, lineCount: 3, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 35.7, lineHeight: 44.1, lineCount: 4, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 27, fontSize: 29.7, lineHeight: 35.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 6 },\r\n            { bulletWidth: 16, fontSize: 22, lineHeight: 26, lineCount: 7 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 40.7, lineHeight: 48.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 30, fontSize: 32.7, lineHeight: 37.1, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 25.7, lineHeight: 29.8, lineCount: 5, bulletOffset: 1, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.9, lineCount: 6 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type-stat': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 45.7, lineHeight: 54.8, lineCount: 2, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 32, fontSize: 35.7, lineHeight: 40.1, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 4, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 24.8, lineCount: 5 },\r\n        ]\r\n    },\r\n    'ocg-pendulumLarge-type': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 38, fontSize: 43.7, lineHeight: 49.8, lineCount: 3, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 31, fontSize: 34.7, lineHeight: 38.1, lineCount: 4, bulletOffset: 3, headTextFontRatio: 0.25 },\r\n            { bulletWidth: 23, fontSize: 26.7, lineHeight: 30.6, lineCount: 5, bulletOffset: 2, headTextFontRatio: 0.3 },\r\n            { bulletWidth: 16, fontSize: 21.05, lineHeight: 25.8, lineCount: 6 },\r\n        ]\r\n    },\r\n};\r\n\r\nexport type FontStyle = '' | 'italic' | 'small-caps';","import { FontData } from './font-data-effect';\r\n\r\nexport type NameFontData = {\r\n    value: string,\r\n    labelKey: string,\r\n    fontData: FontData,\r\n};\r\nexport const NameFontDataMap: Record<'Default' | 'Arial' | 'OCG', NameFontData> = {\r\n    Default: {\r\n        value: 'Default',\r\n        labelKey: 'input.name-style.font-type.default',\r\n        fontData: {\r\n            alphabetFont: 'MatrixRegularSmallCaps',\r\n            font: 'MatrixRegularSmallCaps',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.55,\r\n            fontList: [{\r\n                bulletWidth: 64,\r\n                fontSize: 91.5,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: 0.015,\r\n                lineCount: 1,\r\n                lineHeight: 91.5,\r\n                offsetY: 0,\r\n            }],\r\n            letterDeviationMap: {\r\n                '1': {\r\n                    threshold: 0.94,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 11 },\r\n                        ị: { uniformBoxDescent: 11 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 11 },\r\n                        e̩: { uniformBoxDescent: 11 },\r\n                        È̩: { uniformBoxDescent: 11 },\r\n                        É̩: { uniformBoxDescent: 11 },\r\n                        è̩: { uniformBoxDescent: 11 },\r\n                        Ẹ: { uniformBoxDescent: 11 },\r\n                        ẹ: { uniformBoxDescent: 11 },\r\n                        Ệ: { uniformBoxDescent: 11 },\r\n                        ệ: { uniformBoxDescent: 11 },\r\n                    },\r\n                },\r\n                '2': {\r\n                    threshold: 0,\r\n                    letterMap: {\r\n                        I: { uniformBoxDescent: 1 },\r\n                        i: { uniformBoxDescent: 1 },\r\n                        Ì: { uniformBoxDescent: 1 },\r\n                        Í: { uniformBoxDescent: 1 },\r\n                        Î: { uniformBoxDescent: 1 },\r\n                        Ï: { uniformBoxDescent: 1 },\r\n                        ì: { uniformBoxDescent: 1 },\r\n                        í: { uniformBoxDescent: 1 },\r\n                        î: { uniformBoxDescent: 1 },\r\n                        ï: { uniformBoxDescent: 1 },\r\n                        Ĩ: { uniformBoxDescent: 1 },\r\n                        ĩ: { uniformBoxDescent: 1 },\r\n                        Ī: { uniformBoxDescent: 1 },\r\n                        ī: { uniformBoxDescent: 1 },\r\n                        Ỉ: { uniformBoxDescent: 1 },\r\n                        ỉ: { uniformBoxDescent: 1 },\r\n                        Ị: { uniformBoxDescent: 20 },\r\n                        ị: { uniformBoxDescent: 20 },\r\n        \r\n                        E: { uniformBoxDescent: 1 },\r\n                        È: { uniformBoxDescent: 1 },\r\n                        É: { uniformBoxDescent: 1 },\r\n                        Ê: { uniformBoxDescent: 1 },\r\n                        Ê̄: { uniformBoxDescent: 1 },\r\n                        Ê̌: { uniformBoxDescent: 1 },\r\n                        Ë: { uniformBoxDescent: 1 },\r\n                        è: { uniformBoxDescent: 1 },\r\n                        é: { uniformBoxDescent: 1 },\r\n                        ê: { uniformBoxDescent: 1 },\r\n                        ê̄: { uniformBoxDescent: 1 },\r\n                        ê̌: { uniformBoxDescent: 1 },\r\n                        ë: { uniformBoxDescent: 1 },\r\n                        Ē: { uniformBoxDescent: 1 },\r\n                        ē: { uniformBoxDescent: 1 },\r\n                        Ẻ: { uniformBoxDescent: 1 },\r\n                        ẻ: { uniformBoxDescent: 1 },\r\n                        Ẽ: { uniformBoxDescent: 1 },\r\n                        ẽ: { uniformBoxDescent: 1 },\r\n                        Ế: { uniformBoxDescent: 1 },\r\n                        ế: { uniformBoxDescent: 1 },\r\n                        Ề: { uniformBoxDescent: 1 },\r\n                        ề: { uniformBoxDescent: 1 },\r\n                        Ể: { uniformBoxDescent: 1 },\r\n                        ể: { uniformBoxDescent: 1 },\r\n                        Ễ: { uniformBoxDescent: 1 },\r\n                        ễ: { uniformBoxDescent: 1 },\r\n                        E̩: { uniformBoxDescent: 20 },\r\n                        e̩: { uniformBoxDescent: 20 },\r\n                        È̩: { uniformBoxDescent: 20 },\r\n                        É̩: { uniformBoxDescent: 20 },\r\n                        è̩: { uniformBoxDescent: 20 },\r\n                        Ẹ: { uniformBoxDescent: 20 },\r\n                        ẹ: { uniformBoxDescent: 20 },\r\n                        Ệ: { uniformBoxDescent: 20 },\r\n                        ệ: { uniformBoxDescent: 20 },\r\n                    },\r\n                },\r\n            },\r\n        },\r\n    },\r\n    Arial: {\r\n        value: 'Arial',\r\n        labelKey: 'input.name-style.font-type.arial',\r\n        fontData: {\r\n            alphabetFont: 'Arial',\r\n            font: 'Arial',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            fontStyle: 'tcg',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            headTextHeightRatio: 0.825,\r\n            weight: 'bold',\r\n            fontList: [{\r\n                bulletWidth: 40.67,\r\n                fontSize: 61,\r\n                headTextFontRatio: 0.190,\r\n                letterSpacing: -0.14,\r\n                lineCount: 1,\r\n                lineHeight: 61,\r\n                offsetY: 3,\r\n            }],\r\n        },\r\n    },\r\n    OCG: {\r\n        value: 'OCG',\r\n        labelKey: 'input.name-style.font-type.ocg',\r\n        fontData: {\r\n            alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n            furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n            headTextHeightRatio: 0.775,\r\n            headTextOverflow: 'condense',\r\n            headTextBold: true,\r\n            metricMethod: 'name',\r\n            numberFont: 'DFKakuTaiHiStd-W4',\r\n            numberFontRatio: 1.00,\r\n            ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n            symbolFont: 'matrix',\r\n            symbolFontRatio: 0.775,\r\n            fontStyle: 'ocg',\r\n            fontList: [{\r\n                bulletWidth: 42.67,\r\n                fontSize: 64,\r\n                headTextFontRatio: 0.175,\r\n                headTextSpacing: 3,\r\n                letterSpacing: -0.03,\r\n                lineCount: 1,\r\n                lineHeight: 64,\r\n                offsetY: 0,\r\n            }],\r\n        }\r\n    },\r\n};","import { FontData } from './font-data-effect';\r\n\r\nexport const tcgCreatorFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            offsetY: -1,\r\n            bulletWidth: 20.05,\r\n            fontSize: 21.2,\r\n            lineHeight: 21.2,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 20,\r\n            lineHeight: 20,\r\n            lineCount: 1,\r\n            letterSpacing: -0.01,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const ocgCreatorFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    metricMethod: 'creator',\r\n    fontStyle: 'ocg',\r\n    fontList: [{\r\n        bulletWidth: 18,\r\n        fontSize: 19.0,\r\n        letterSpacing: 0.05,\r\n        lineHeight: 20.5,\r\n        lineCount: 1,\r\n        headTextFontRatio: 0,\r\n        wordLetterSpacing: 0.11,\r\n    }],\r\n};\r\nexport const CreatorFontData: Record<string, FontData> = {\r\n    tcg: tcgCreatorFontData,\r\n    ocg: ocgCreatorFontData,\r\n};\r\n\r\nexport const tcgPasswordFontData: FontData = {\r\n    font: 'stone-serif-regular',\r\n    alphabetFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'stone-serif-regular',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n            offsetY: 1,\r\n        },\r\n    ],\r\n};\r\nexport const ocgPasswordFontData: FontData = {\r\n    font: '\"FOT-Rodin Pro M\"',\r\n    alphabetFont: '\"FOT-Rodin Pro M\"',\r\n    numberFont: 'stone-serif-regular',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    metricMethod: 'furigana',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 22.219,\r\n            lineHeight: 22.219,\r\n            lineCount: 1,\r\n            letterSpacing: 0.1,\r\n            headTextFontRatio: 0.4,\r\n            largeSymbolRatio: 1.25,\r\n        },\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 19.0,\r\n            headTextFontRatio: 0,\r\n            largeSymbolRatio: 1.25,\r\n            lineCount: 1,\r\n            lineHeight: 20.5,\r\n            ordinalFontOffsetY: 1,\r\n            ordinalFontRatio: 1.25,\r\n        },\r\n    ],\r\n};\r\nexport const PasswordFontData: Record<string, FontData> = {\r\n    tcg: tcgPasswordFontData,\r\n    ocg: ocgPasswordFontData,\r\n};\r\n\r\nexport const tcgTypeAbilityFontData: FontData = {\r\n    font: 'YuGiOhITCStoneSerifBSc',\r\n    alphabetFont: 'YuGiOhITCStoneSerifBSc',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    ordinalFont: 'YuGiOhITCStoneSerifBSc',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'tcg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 31.5,\r\n            lineHeight: 31.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: 0.02,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 32.75,\r\n            lineHeight: 32.75,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            capitalLetterRatio: 0.95,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n        {\r\n            bulletWidth: 14.80,\r\n            fontSize: 44.5,\r\n            lineHeight: 44.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            // Noticeable baseline mismatch when this ratio reach 0.9, some rounding magic fuckery is going on here\r\n            capitalLetterRatio: 0.90001,\r\n            squareBracketRatio: 0.94001,\r\n            letterSpacing: -0.03,\r\n            headTextFontRatio: 0.4,\r\n        },\r\n    ],\r\n};\r\nexport const ocgTypeAbilityFontData: FontData = {\r\n    font: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    alphabetFont: '\"Yu-Gi-Oh! DF Leisho 3\"',\r\n    symbolFont: 'matrix',\r\n    symbolFontRatio: 0.8,\r\n    headTextHeightRatio: 0.775,\r\n    ordinalFont: '\"DFKakuTaiHiStd-W4\"',\r\n    furiganaFont: 'DFHSGothic-W3-WIN-RKSJ-H',\r\n    fontStyle: 'ocg',\r\n    fontList: [\r\n        {\r\n            bulletWidth: 20.05,\r\n            fontSize: 25.2,\r\n            lineHeight: 25.2,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 21.80,\r\n            fontSize: 26.5,\r\n            lineHeight: 26.5,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 26,\r\n            headTextFontRatio: 0.300,\r\n        },\r\n        {\r\n            bulletWidth: 36.80,\r\n            fontSize: 48,\r\n            lineHeight: 48,\r\n            lineCount: 1,\r\n            iconSymbolWidth: 45,\r\n            headTextFontRatio: 0.25,\r\n            headTextSpacing: 3,\r\n            letterSpacing: -0.07,\r\n            squareBracketRatio: 1.02501,\r\n        },\r\n    ],\r\n};\r\nexport const getTypeAbilityFontData = (): Record<string, FontData> => ({\r\n    tcg: tcgTypeAbilityFontData,\r\n    ocg: ocgTypeAbilityFontData,\r\n});","import {\r\n    DefaultOCGEffectFontData,\r\n    DefaultTCGEffectFontData,\r\n    DefaultTCGNormalFontData,\r\n    FontData,\r\n} from './font-data-effect';\r\n\r\n/** OCG does not have different fonts between normal and effect monsters */\r\nexport const PendulumNormalFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGNormalFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.52, lineCount: 10 },\r\n        ],\r\n    },\r\n};\r\nexport const PendulumEffectFontData: Record<string, FontData> = {\r\n    'tcg-small': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 36.3, lineHeight: 37.20, lineCount: 2, bulletOffset: 1 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.65, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.23, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 18, fontSize: 14.8, lineHeight: 15.78, lineCount: 5, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 12.4, lineHeight: 13.32, lineCount: 6, bulletOffset: 2 },\r\n        ],\r\n    },\r\n    'tcg-medium': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 50.3, lineHeight: 56.35, lineCount: 2 },\r\n            { bulletWidth: 34, fontSize: 35.3, lineHeight: 38.85, lineCount: 3, bulletOffset: 2 },\r\n            { bulletWidth: 27, fontSize: 26.3, lineHeight: 29.35, lineCount: 4, bulletOffset: 3 },\r\n            { bulletWidth: 23, fontSize: 24.3, lineHeight: 24.35, lineCount: 5 },\r\n            { bulletWidth: 19, fontSize: 19.5, lineHeight: 20.23, lineCount: 6 },\r\n            { bulletWidth: 18, fontSize: 17.0, lineHeight: 17.40, lineCount: 7, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 14.7, lineHeight: 15.32, lineCount: 8 },\r\n        ],\r\n    },\r\n    'tcg-large': {\r\n        ...DefaultTCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, fontSize: 40.7, lineHeight: 48.52, lineCount: 3, bulletOffset: 1 },\r\n            { bulletWidth: 36, fontSize: 35.3, lineHeight: 37.65, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 30, fontSize: 28.3, lineHeight: 30.35, lineCount: 5, bulletOffset: 2 },\r\n            { bulletWidth: 26, fontSize: 24.3, lineHeight: 25.85, lineCount: 6, bulletOffset: 2 },\r\n            { bulletWidth: 23, fontSize: 20.7, lineHeight: 22.05, lineCount: 7, bulletOffset: 2 },\r\n            { bulletWidth: 19, fontSize: 18.5, lineHeight: 19.33, lineCount: 8, bulletOffset: 1 },\r\n            { bulletWidth: 18, fontSize: 16.8, lineHeight: 17.30, lineCount: 9, bulletOffset: 1 },\r\n        ],\r\n    },\r\n    'ocg-small': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 35, fontSize: 38.55, lineHeight: 39.2, headTextFontRatio: 0.2, lineCount: 2, bulletOffset: 3 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 26.6, headTextFontRatio: 0.3, lineCount: 3 },\r\n        ],\r\n    },\r\n    'ocg-medium': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 41, bulletOffset: 3, fontSize: 45.55, lineHeight: 57.6, headTextFontRatio: 0.2, lineCount: 2 },\r\n            { bulletWidth: 31, bulletOffset: 2, fontSize: 35.55, lineHeight: 40.6, lineCount: 3 },\r\n            { bulletWidth: 23, bulletOffset: 1, fontSize: 25.05, lineHeight: 30.6, lineCount: 4 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.2, lineCount: 5 },\r\n        ],\r\n    },\r\n    'ocg-large': {\r\n        ...DefaultOCGEffectFontData,\r\n        fontList: [\r\n            { bulletWidth: 37, fontSize: 43.55, lineHeight: 49.6, headTextFontRatio: 0.25, lineCount: 3, bulletOffset: 3 },\r\n            { bulletWidth: 29, fontSize: 32.55, lineHeight: 38.6, lineCount: 4, bulletOffset: 1 },\r\n            { bulletWidth: 23, fontSize: 25.05, lineHeight: 30.6, lineCount: 5, bulletOffset: 1 },\r\n            { bulletWidth: 16, fontSize: 22.05, lineHeight: 25.9, lineCount: 6 },\r\n        ],\r\n    },\r\n};","/** Normalize various variant of a general letter into a single version for easier manage. For example OCG has their own version of full-width alphabet characters and digits. */\r\nexport const tcgToOCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    '「': '｢',\r\n    '」': '｣',\r\n    '、': '､',\r\n    // '/': '／',\r\n    ':': '：',\r\n    // 'ー': 'ｰ',\r\n    // '・': '･',\r\n    // '・': '･',\r\n    // '：': ':',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\nexport const ocgToTCGLetterMap: Record<string, string> = {\r\n    '０': '0',\r\n    '１': '1',\r\n    '２': '2',\r\n    '３': '3',\r\n    '４': '4',\r\n    '５': '5',\r\n    '６': '6',\r\n    '７': '7',\r\n    '８': '8',\r\n    '９': '9',\r\n    'ａ': 'a',\r\n    'ｂ': 'b',\r\n    'ｃ': 'c',\r\n    'ｄ': 'd',\r\n    'ｅ': 'e',\r\n    'ｆ': 'f',\r\n    'ｇ': 'g',\r\n    'ｈ': 'h',\r\n    'ｉ': 'i',\r\n    'ｊ': 'j',\r\n    'ｋ': 'k',\r\n    'ｌ': 'l',\r\n    'ｍ': 'm',\r\n    'ｎ': 'n',\r\n    'ｏ': 'o',\r\n    'ｐ': 'p',\r\n    'ｑ': 'q',\r\n    'ｒ': 'r',\r\n    'ｓ': 's',\r\n    'ｔ': 't',\r\n    'ｕ': 'u',\r\n    'ｖ': 'v',\r\n    'ｗ': 'w',\r\n    'ｘ': 'x',\r\n    'ｙ': 'y',\r\n    'ｚ': 'z',\r\n    'Ａ': 'A',\r\n    'Ｂ': 'B',\r\n    'Ｃ': 'C',\r\n    'Ｄ': 'D',\r\n    'Ｅ': 'E',\r\n    'Ｆ': 'F',\r\n    'Ｇ': 'G',\r\n    'Ｈ': 'H',\r\n    'Ｉ': 'I',\r\n    'Ｊ': 'J',\r\n    'Ｋ': 'K',\r\n    'Ｌ': 'L',\r\n    'Ｍ': 'M',\r\n    'Ｎ': 'N',\r\n    'Ｏ': 'O',\r\n    'Ｐ': 'P',\r\n    'Ｑ': 'Q',\r\n    'Ｒ': 'R',\r\n    'Ｓ': 'S',\r\n    'Ｔ': 'T',\r\n    'Ｕ': 'U',\r\n    'Ｖ': 'V',\r\n    'Ｗ': 'W',\r\n    'Ｘ': 'X',\r\n    'Ｙ': 'Y',\r\n    'Ｚ': 'Z',\r\n    // '｡': '。',\r\n    '｢': '「',\r\n    '｣': '」',\r\n    '､': '、',\r\n    // '／': '/',\r\n    '：': ':',\r\n    // 'ｰ': 'ー',\r\n    // '･': '・',\r\n    // '･': '・',\r\n    // ':': '：',\r\n    '∀': 'Ɐ',\r\n    'ꓯ': 'Ɐ',\r\n    'ꓛ': 'Ɔ',\r\n    'ꓱ': 'Ǝ',\r\n    'ꓞ': 'Ⅎ',\r\n    'ꓨ': '⅁',\r\n    'ꓘ': 'Ʞ',\r\n    'ꓶ': 'Ꞁ',\r\n    '⅂': 'Ꞁ',\r\n    'ꓒ': 'Ԁ',\r\n    'ꓕ': 'Ʇ',\r\n    'Ո': 'ꓵ',\r\n    'ꓥ': 'Ʌ',\r\n    '＜': '<',\r\n    '＞': '>',\r\n    '！': '!',\r\n    '（': '(',\r\n    '）': ')',\r\n    '＆': '&',\r\n    '＇': '\\'',\r\n    '＠': '@',\r\n};\r\n\r\n// const MirrorableLetter = {\r\n//     'ꟻ': 'Ｆ',\r\n//     '⅃': 'Ｌ',\r\n//     'ꟼ': 'Ｐ',\r\n//     'И': 'Ｎ',\r\n//     'Я': 'Ｒ',\r\n// };\r\n\r\nexport const ocgNumberCircleMap: Record<string, string> = {\r\n    '(１)': '①',\r\n    '(２)': '②',\r\n    '(３)': '③',\r\n    '(４)': '④',\r\n    '(５)': '⑤',\r\n    '(６)': '⑥',\r\n    '(７)': '⑦',\r\n    '(８)': '⑧',\r\n    '(９)': '⑨',\r\n    '(１０)': '⑩',\r\n    '(１１)': '⑪',\r\n    '(１２)': '⑫',\r\n    '(１３)': '⑬',\r\n    '(１４)': '⑭',\r\n    '(１５)': '⑮',\r\n    '(１６)': '⑯',\r\n    '(１７)': '⑰',\r\n    '(１８)': '⑱',\r\n    '(１９)': '⑲',\r\n    '(２０)': '⑳',\r\n    '(1)': '①',\r\n    '(2)': '②',\r\n    '(3)': '③',\r\n    '(4)': '④',\r\n    '(5)': '⑤',\r\n    '(6)': '⑥',\r\n    '(7)': '⑦',\r\n    '(8)': '⑧',\r\n    '(9)': '⑨',\r\n    '(10)': '⑩',\r\n    '(11)': '⑪',\r\n    '(12)': '⑫',\r\n    '(13)': '⑬',\r\n    '(14)': '⑭',\r\n    '(15)': '⑮',\r\n    '(16)': '⑯',\r\n    '(17)': '⑰',\r\n    '(18)': '⑱',\r\n    '(19)': '⑲',\r\n    '(20)': '⑳',\r\n};\r\n\r\n/** Newest at top */\r\nexport const copyrightMap = {\r\n    ocg: [\r\n        '©スタジオ・ダイス／集英社・テレビ東京・KONAMI',\r\n        '©高橋和希 スタジオ・ダイス／集英社',\r\n        '©高橋和希／集英社',\r\n    ],\r\n    tcg: [\r\n        '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n        '©1996 KAZUKI TAKAHASHI',\r\n        '©KAZUKI TAKAHASHI / SHUEISHA',\r\n    ],\r\n};\r\n\r\nexport const passwordSentenceMap: Record<string, string> = {\r\n    ocg: '※デッキ構築には使用できません。',\r\n    tcg: 'This card cannot be in a Deck.',\r\n};\r\n\r\n/** Automatically convert popular OCG terms into their TCG counterpart. Never introduce machine translation here :'( */\r\nexport const ocgToTCGTermMap: Record<string, string> = {\r\n    /** monster type */\r\n    '水族': 'Aqua',\r\n    '獣族': 'Beast',\r\n    '獣戦士族': 'Beast-Warrior',\r\n    '創造神族': 'Creator God',\r\n    'サイバース族': 'Cyberse',\r\n    '恐竜族': 'Dinosaur',\r\n    '幻神獣族': 'Divine-Beast',\r\n    'ドラゴン族': 'Dragon',\r\n    '天使族': 'Fairy',\r\n    '悪魔族': 'Fiend',\r\n    '魚族': 'Fish',\r\n    'ギャラクシー族': 'Galaxy',\r\n    '幻想魔族': 'Illusion',\r\n    '昆虫族': 'Insect',\r\n    '機械族': 'Machine',\r\n    '植物族': 'Plant',\r\n    'サイキック族': 'Psychic',\r\n    '炎族': 'Pyro',\r\n    '爬虫類族': 'Reptile',\r\n    '岩石族': 'Rock',\r\n    '海竜族': 'Sea Serpent',\r\n    '魔法使い族': 'Spellcaster',\r\n    '雷族': 'Thunder',\r\n    '戦士族': 'Warrior',\r\n    '鳥獣族': 'Winged Beast',\r\n    '幻竜族': 'Wyrm',\r\n    'アンデット族': 'Zombie',\r\n    'サイボーグ族': 'Cyborg',\r\n    '天界戦士族': 'Celestial Warrior',\r\n    'ハイドラゴン族': 'High Dragon',\r\n    '魔導騎士族': 'Magical Knight',\r\n    'オメガサイキック族': 'Omega Psychic',\r\n    /** type */\r\n    'モンスター': 'Monster',\r\n    '魔法カード': 'Spell Card',\r\n    '罠カード': 'Trap Card',\r\n    'アクション': 'Action',\r\n    /** subType */\r\n    '通常': 'Normal',\r\n    '効果': 'Effect',\r\n    '儀式': 'Ritual',\r\n    'フュージョン': 'Fusion', // This is Fusion in Rush Duel, when we translate this map into TCG one these two entries will have the same \"Fusion\" key. We place this one above so it will got overwritten by the normal OCG text for Fusion in the master series.\r\n    '融合': 'Fusion',\r\n    'シンクロ': 'Synchro',\r\n    'エクシーズ': 'Xyz',\r\n    'ペンデュラム': 'Pendulum',\r\n    'リンク': 'Link',\r\n    'マキシマム': 'Maximum',\r\n    'トークン': 'Token',\r\n    '特殊召喚': 'Special Summon',\r\n    'ダークシンクロモンスター': 'Dark Synchro',\r\n    /** ability */\r\n    'チューナー': 'Tuner',\r\n    'デュアル': 'Gemini',\r\n    'リバース': 'Flip',\r\n    'トゥーン': 'Toon',\r\n    'スピリット': 'Spirit',\r\n    'ユニオン': 'Union',\r\n    /** creator copyright */\r\n    [copyrightMap.ocg[2]]: copyrightMap.tcg[2],\r\n    [copyrightMap.ocg[1]]: copyrightMap.tcg[1],\r\n    [copyrightMap.ocg[0]]: copyrightMap.tcg[0],\r\n    /** sample card */\r\n    '{純|ジュン}{狐|こ}': 'Junko',\r\n    [`自分フィールドの効果モンスター×２体以上\r\n①：このカードがモンスターゾーンに存在する限り、相手フィールドのモンスターが効果を発動する度に、その相手の表側表示モンスターにピュアカウンターを１つ置く(最大１つまで）。②：このカードはピュアカウンターが置かれているモンスターが発動した効果を受けない。③：このカードはピュアカウンターが置かれているモンスターとの戦闘では破壊されない。`]: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    '※公式のデュエルでは使用できません。': 'This card cannot be used in a Duel.',\r\n    // eslint-disable-next-line quotes\r\n    '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。': \"Once per turn: You can pay 800 LP, increase this card's Pendulum Scale by 1.\",\r\n    [passwordSentenceMap.ocg]: passwordSentenceMap.tcg,\r\n};\r\nexport const tcgToOCGTermMap = Object.entries(ocgToTCGTermMap).reduce((acc, cur) => {\r\n    const [ocgTerm, tcgTerm] = cur;\r\n    acc[tcgTerm] = ocgTerm;\r\n\r\n    return acc;\r\n}, {\r\n    /** Safe fallback, because the single quote maybe converted into curly single quote */\r\n    'Once per turn: You can pay 800 LP, increase this card’s Pendulum Scale by 1.': '①：１ターンに１度、８００ＬＰを払って発動できる。このカードのＰスケールを1つ上げる。',\r\n} as Record<string, string>);","export type FrameInfo = {\r\n    name: string,\r\n    nameKey: string,\r\n    edition: 'normal' | 'extendend',\r\n    labelColor: string,\r\n    labelBackgroundColor?: string,\r\n    labelBackgroundColorList?: string[],\r\n    labelBackgroundImage?: string,\r\n    sortWeight: number,\r\n};\r\nexport const FrameInfoMap: Record<string, FrameInfo> = {\r\n    'normal': {\r\n        name: 'normal',\r\n        nameKey: 'input.frame.normal',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c49c5e',\r\n        sortWeight: 100,\r\n    },\r\n    'effect': {\r\n        name: 'effect',\r\n        nameKey: 'input.frame.effect',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#b96c49',\r\n        sortWeight: 90,\r\n    },\r\n    'fusion': {\r\n        name: 'fusion',\r\n        nameKey: 'input.frame.fusion',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#8948a4',\r\n        sortWeight: 80,\r\n    },\r\n    'synchro': {\r\n        name: 'synchro',\r\n        nameKey: 'input.frame.synchro',\r\n        labelColor: '#000',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#efefef',\r\n        sortWeight: 70,\r\n    },\r\n    'xyz': {\r\n        name: 'xyz',\r\n        nameKey: 'input.frame.xyz',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#000000',\r\n        sortWeight: 60,\r\n    },\r\n    'link': {\r\n        name: 'link',\r\n        nameKey: 'input.frame.link',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#0c8ac6',\r\n        sortWeight: 50,\r\n    },\r\n    'ritual': {\r\n        name: 'ritual',\r\n        nameKey: 'input.frame.ritual',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#5e85c9',\r\n        sortWeight: 85,\r\n    },\r\n    'spell': {\r\n        name: 'spell',\r\n        nameKey: 'input.frame.spell',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#1b8f83',\r\n        sortWeight: 30,\r\n    },\r\n    'trap': {\r\n        name: 'trap',\r\n        nameKey: 'input.frame.trap',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#c32a8c',\r\n        sortWeight: 25,\r\n    },\r\n    'token': {\r\n        name: 'token',\r\n        nameKey: 'input.frame.token',\r\n        labelColor: '#ffffff',\r\n        edition: 'normal',\r\n        labelBackgroundColor: '#6f6c6b',\r\n        sortWeight: 1,\r\n    },\r\n    'dark-synchro': {\r\n        name: 'dark-synchro',\r\n        nameKey: 'input.frame.dark-synchro',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4d4543',\r\n        sortWeight: 15,\r\n    },\r\n    'obelisk': {\r\n        name: 'obelisk',\r\n        nameKey: 'input.frame.obelisk',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#515eb0',\r\n        sortWeight: 10,\r\n    },\r\n    'osiris': {\r\n        name: 'osiris',\r\n        nameKey: 'input.frame.osiris',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#bd5044',\r\n        sortWeight: 9,\r\n    },\r\n    'ra': {\r\n        name: 'ra',\r\n        nameKey: 'input.frame.ra',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#b9ad34',\r\n        sortWeight: 8,\r\n    },\r\n    'raviel': {\r\n        name: 'raviel',\r\n        nameKey: 'input.frame.raviel',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#313c5f',\r\n        sortWeight: 7,\r\n    },\r\n    'uria': {\r\n        name: 'uria',\r\n        nameKey: 'input.frame.uria',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#623320',\r\n        sortWeight: 6,\r\n    },\r\n    'hamon': {\r\n        name: 'hamon',\r\n        nameKey: 'input.frame.hamon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#534a19',\r\n        sortWeight: 5,\r\n    },\r\n    'lg-dragon': {\r\n        name: 'lg-dragon',\r\n        nameKey: 'input.frame.lg-dragon',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#4e84a4',\r\n        sortWeight: 3,\r\n    },\r\n    'speed-skill': {\r\n        name: 'speed-skill',\r\n        nameKey: 'input.frame.speed-skill',\r\n        labelColor: '#ffffff',\r\n        edition: 'extendend',\r\n        labelBackgroundColor: '#199cd5',\r\n        sortWeight: 2,\r\n    },\r\n    'zarc': {\r\n        name: 'zarc',\r\n        nameKey: 'input.frame.zarc',\r\n        labelColor: '#000',\r\n        edition: 'extendend',\r\n        labelBackgroundColorList: [\r\n            'rgba(185,108,73,1)',\r\n            'rgba(137,72,164,1)',\r\n            'rgba(239,239,239,1)',\r\n            'rgba(0,0,0,1)',\r\n        ],\r\n        labelBackgroundImage: `linear-gradient(90deg, ${[\r\n            'rgba(185,108,73,1) 23%',\r\n            'rgba(137,72,164,1) 27%',\r\n            'rgba(137,72,164,1) 48%',\r\n            'rgba(239,239,239,1) 52%',\r\n            'rgba(239,239,239,1) 73%',\r\n            'rgba(0,0,0,1) 77%',\r\n        ].join(', ')})`,\r\n        sortWeight: 4,\r\n    },\r\n};\r\nexport const frameList = Object.values(FrameInfoMap);","export const ArrowPositionMap = {\r\n    normal: [\r\n        { top: 175, left: 55, width: 100, height: 100 },\r\n        { top: 165, left: 323, width: 170, height: 80 },\r\n        { top: 175, left: 655, width: 100, height: 100 },\r\n        { top: 442, left: 45, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 442, left: 700, width: 70, height: 170 },\r\n        { top: 775, left: 55, width: 100, height: 100 },\r\n        { top: 810, left: 323, width: 170, height: 80 },\r\n        { top: 775, left: 655, width: 100, height: 100 },\r\n    ],\r\n    pendulum: [\r\n        { top: 169, left: 11, width: 100, height: 100 },\r\n        { top: 159, left: 323, width: 170, height: 80 },\r\n        { top: 169, left: 699, width: 100, height: 100 },\r\n        { top: 572, left: 1, width: 70, height: 170 },\r\n        { top: 0, left: 0, width: 0, height: 0 },   /** Middle */\r\n        { top: 572, left: 744, width: 70, height: 170 },\r\n        { top: 1054, left: 11, width: 100, height: 100 },\r\n        { top: 1093, left: 323, width: 170, height: 80 },\r\n        { top: 1054, left: 699, width: 100, height: 100 },\r\n    ],\r\n};\r\nexport const LinkRotateList = [-45, 0, 45, -90, 0, 90, -135, 180, 135];\r\nexport const LinkIndentList = [-38, -28, -38, -28, 0, -28, -38, -28, -38];\r\nexport const LinkPendulumIndentList = [-30, -23, -30, -28, 0, -28, -30, -23, -30];\r\nexport const LinkOffsetList = [0, 0, 0, 0, 0, 0, 0, 0, 0];\r\nexport const LinkPendulumOffsetList = [-5, 0, 5, 0, 0, 0, 5, 0, -5];\r\nexport const LinkRotateMap: Record<string, number> = {\r\n    '1': LinkRotateList[0],\r\n    '2': LinkRotateList[1],\r\n    '3': LinkRotateList[2],\r\n    '4': LinkRotateList[3],\r\n    '6': LinkRotateList[5],\r\n    '7': LinkRotateList[6],\r\n    '8': LinkRotateList[7],\r\n    '9': LinkRotateList[8],\r\n};\r\nexport const LinkIconMap: Record<string, string> = {\r\n    '1': '🡔',\r\n    '2': '🡑',\r\n    '3': '🡕',\r\n    '4': '🡐',\r\n    '6': '🡒',\r\n    '7': '🡗',\r\n    '8': '🡓',\r\n    '9': '🡖',\r\n};","import { ocgKeywordDataList } from './dictionary';\r\n\r\nexport const ST_ICON_SYMBOL = '⦾';\r\n\r\nexport const CAPITAL_LETTER_SOURCE = '[A-ZＡ-Ｚ]';\r\nexport const CapitalLetterRegex = new RegExp(CAPITAL_LETTER_SOURCE);\r\n\r\nexport const SQUARE_BRACKET_SOURCE = '[\\\\[\\\\]【】]';\r\nexport const SquareBracketLetterRegex = new RegExp(SQUARE_BRACKET_SOURCE);\r\n\r\nexport const WHOLE_WORD_SOURCE = '[#@∞a-zａ-ｚA-ZＡ-Ｚ0-9０-９!！+×＃#@∞‘“’”:;\\\\[\\\\]\\\\(\\\\)【】\\\\.,]+';\r\nexport const WholeWordRegex = new RegExp(WHOLE_WORD_SOURCE);\r\n\r\nexport const FragmentSplitRegex = new RegExp(`({[^{}]+?}|${WHOLE_WORD_SOURCE}|.)`);\r\n// export const FragmentSplitRegex = new RegExp('({[^{}]+?}|.)');\r\n\r\nexport const UNCOMPRESSED_SOURCE = '{{([^{}]+?)}}';\r\n\r\nexport const NB_WORD_OPEN = '⦉';\r\nexport const NB_WORD_CLOSE = '⦊';\r\nexport const NB_LINE_OPEN = '⟅';\r\nexport const NB_LINE_CLOSE = '⟆';\r\nexport const NB_FULL_LINE_OPEN = '᚛';\r\nexport const NB_FULL_LINE_CLOSE = '᚜';\r\nexport const NB_UNCOMPRESSED_START = '⟬';\r\nexport const NB_UNCOMPRESSED_END = '⟭';\r\n/** Remove all control characters */\r\nexport const NormalizeTextRegex = new RegExp(`[${[\r\n    NB_FULL_LINE_CLOSE,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    NB_LINE_OPEN,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n].join('')}]|(\\\\|[^}]+})`, 'g');\r\n\r\nexport const CONTEXTUAL_DOUBLE_QUOTE_SOURCE = `(^|[-\\\\u2014/[(\\\\u2018${NB_WORD_OPEN}${NB_LINE_OPEN}${NB_FULL_LINE_OPEN}${NB_UNCOMPRESSED_START}\\\\s])\"`;\r\nexport const contextualDoubleQuoteRegex = new RegExp(CONTEXTUAL_DOUBLE_QUOTE_SOURCE, 'g');\r\n\r\nexport const NON_BREAKABLE_SYMBOL_SOURCE = `${NB_WORD_OPEN}|${NB_WORD_CLOSE}`;\r\nexport const nonBreakableSymbolRegex = new RegExp(NON_BREAKABLE_SYMBOL_SOURCE);\r\n\r\n/** Pretty hard to automatically detect condition clause inside flavor text. We must assume that the clause is always put inside a parentheses or asterisk (as official cards do). */\r\nexport const FLAVOR_CONDITION_SOURCE = `(\\\\n^[\\\\r\\\\t\\\\f\\\\v \\\\u00a0\\\\u1680\\\\u2000-\\\\u200a\\\\u2028\\\\u2029\\\\u202f\\\\u205f\\\\u3000\\\\ufeff]*\\\\n${NB_WORD_OPEN}?(\\\\(|\\\\*)[\\\\w\\\\W]+${NB_WORD_CLOSE}?)\\\\s*$`;\r\n\r\n/** Small reminder: `g` flag turn regex into stateful, and cannot be reused without reset it first. */\r\nexport const TCG_LETTER_JOINLIST = '&A-Za-z0-9\\\\-/\\\\s\\\\(\\\\)!,.‘“’”:;<>\\\\[\\\\]\\\\\\\\';\r\nexport const TCG_SYMBOL_JOINLIST = '#★☆@∞';\r\nexport const TCGSymbolLetterRegex = new RegExp(`[${TCG_SYMBOL_JOINLIST}]`);\r\n\r\nexport const OCG_KEYWORD_JOIN_REGEX = ocgKeywordDataList.map(entry => entry.regexForm ?? entry.shortForm).join('|');\r\nexport const OCG_KEYWORD_SOURCE = `(${OCG_KEYWORD_JOIN_REGEX})(?![^{]*})`;\r\n\r\nexport const CHIISAI_KANA_JOINLIST = 'ヽヾーァィゥェォッャュョヮヵヶぁぃぅぇぉっゃゅょゎゕゖㇰㇱㇲㇳㇴㇵㇶㇷㇸㇹㇺㇻㇼㇽㇾㇿ々〻';\r\nexport const ChiisaiRegex = new RegExp(`[${CHIISAI_KANA_JOINLIST}]`);\r\n\r\nexport const OCG_RUBY_SOURCE = '{[^{}]+?}';\r\nexport const NOT_START_OF_LINE_SOURCE = `.[${CHIISAI_KANA_JOINLIST})\\\\]｝〕〉》」｣』】〙〗〟'\"’”｠»‐゠–〜？!‼⁇⁈⁉・、:;,。.｡､]+`;\r\nexport const NOT_END_OF_LINE_SOURCE = '[(\\\\[｛〔〈《「｢『【〘〖〝\\'\"‘“｟«●]+.';\r\nexport const NOT_SPLIT_SOURCE = '.[—...‥〳〴〵)]+[^\\\\s]';\r\nexport const OCG_BULLET_SOURCE = '[①-⑳]：.';\r\n\r\nexport const NON_COMPRESSABLE_SOURCE = '[①-⑳※]';\r\nexport const NonCompressableRegex = new RegExp(NON_COMPRESSABLE_SOURCE);\r\n\r\nexport const OCG_ALPHABET_SOURCE = '[Ａ-Ｚａ-ｚ]';\r\nexport const OCGAlphabetRegex = new RegExp(OCG_ALPHABET_SOURCE);\r\n\r\nexport const OCGNumberRegex = new RegExp('[０-９]');\r\nexport const NumberRegex = new RegExp('[0-9]');\r\n\r\nexport const HiraganaRegex = /[あいうえおかがきぎくぐけげこごさざしじすずせぜそぞただちぢつづてでとどなにぬねのはばぱひびぴふぶぷへべぺほぼぽまみむめもやゆよらりるれろわゐゑをんゔ]/;\r\n\r\nexport const KatakanaRegex = /[アイウエオカガキギクグケゲコゴサザシジスズセゼソゾタダチヂツヅテデトドナニヌネノハバパヒビピフブプヘベペホボポマミムメモヤユヨラリルレロワヰヱヲンヴヷヸヹヺ]/;\r\n\r\nexport const OCGDotRegex = new RegExp('[・]');\r\nexport const ChoonpuRegex = new RegExp('[ー]');\r\nexport const NoSpaceRegex = new RegExp('[―]');\r\n\r\nconst OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST = '：';\r\nexport const OCGIncreasedLevel2WidthRegex = new RegExp(`[${OCG_INCREASED_LEVEL_2_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_INCREASED_WIDTH_JOINLIST = '。､';\r\nexport const OCGIncreasedWidthRegex = new RegExp(`[${OCG_INCREASED_WIDTH_JOINLIST}]`);\r\n\r\nconst OCG_NO_OVERHEAD_GAP_JOINLIST = '：';\r\nexport const OCGNoOverheadGapRegex = new RegExp(`[${OCG_NO_OVERHEAD_GAP_JOINLIST}]`);\r\n\r\nexport const OCGOffsetMap: Record<string, number> = {\r\n    '。': -0.2,\r\n    '､': -0.2,\r\n    '｢': 0,\r\n    '｣': 0,\r\n    '：': 0,\r\n    '>': 0.25,\r\n    '<': -0.25,\r\n};\r\nexport const OCGLastOfLineOffsetMap: Record<string, number> = {\r\n    '。': -0.5,\r\n    '：': -0.25,\r\n};\r\nexport const OCGBoxSpacingRatioMap: Record<string, number> = {\r\n    '>': 0.125,\r\n    '<': 0.125,\r\n};\r\nexport const TCGOffsetMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': -0.025,\r\n};\r\nexport const TCGLastOfLineOffsetMap: Record<string, number> = {\r\n};\r\nexport const TCGBoxSpacingRatioMap: Record<string, number> = {\r\n    // Example\r\n    // '\\\\': 0.3,\r\n};\r\n\r\nexport const OCG_REDUCED_AT_END_LINE_RATIO = 0.500;\r\n\r\nexport const BULLET_LETTER = '●';\r\nexport const getBulletSpacing = (format: string) => format === 'tcg' ? 7 : 1;\r\n\r\nexport const MAX_LINE_REVERSE_INDENT = 20;\r\nexport const START_OF_LINE_ALPHABET_OFFSET = 4;\r\n\r\nexport const RUBY_REGEX = /{[^{}]+?}/;\r\n/** If foot text consist of multiple letter and overflow mode is `condense`, head text will also condense but with a smaller rate (that mean they are less compressed), this is the bonus rate. So if foot text is compressed by 50%, head text only got compressed by 40%. */\r\nexport const RUBY_BONUS_RATIO = 0.1;\r\n\r\nexport const BREAKABLE_LETTER = '\\\\s\\\\-/';\r\n/** Default ratio to calculate the gap of a letter. We do not want head text to overlap, so a letter cannot give more space than half of it size. 40-50% is nice enough. */\r\nexport const LETTER_GAP_RATIO = -0.5;\r\nexport const GAP_PER_WIDTH_RATIO = -2.25;","import { BackgroundType, CardOpacity, getDefaultCardOpacity } from './canvas';\r\nimport { Foil } from './foil-finish';\r\nimport { CondenseType } from './condense';\r\nimport { NO_ATTRIBUTE, NO_ICON, NO_STICKER } from './icon';\r\nimport { getDefaultNameStyle, getDefaultTextStyle, NameStyle, NameStyleType } from './name-preset';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { DEFAULT_PENDULUM_SIZE } from './pendulum';\r\n\r\nexport const getDefaultCrop = () => ({\r\n    x: 0,\r\n    y: 4,\r\n    width: 100,\r\n    height: 89.5,\r\n    unit: '%' as '%' | 'px',\r\n    aspect: 1,\r\n});\r\n\r\n/**\r\n * Check following things when adding new attributes:\r\n * * Default card and empty card\r\n * * Convert codec\r\n * * Shorten codec\r\n * * Card thumb\r\n * * Legacy version\r\n * * Import / export\r\n */\r\nexport type Card = ReturnType<typeof getDefaultCard>;\r\nexport const getDefaultCard = () => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'fusion',\r\n    foil: 'normal' as Foil,\r\n    opacity: getDefaultCardOpacity() as Partial<CardOpacity>,\r\n    finish: [] as string[],\r\n    artFinish: 'normal',\r\n    name: 'Junko',\r\n    nameStyleType: 'auto' as NameStyleType,\r\n    nameStyle: getDefaultNameStyle() as Partial<NameStyle>,\r\n    attribute: 'LIGHT',\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6 as number | string,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/h5kXZeC.png',\r\n    artData: '',\r\n    artFit: false,\r\n    artSource: 'online',\r\n    artCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit' as BackgroundType,\r\n    backgroundCrop: getDefaultCrop() as Partial<ReactCrop.Crop>,\r\n    linkMap: [\r\n        '1',\r\n        '3',\r\n        '7',\r\n        '9',\r\n    ] as string[],\r\n    isLink: false as boolean | null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: 'Once per turn: You can pay 800 LP, increase this card\\'s Pendulum Scale by 1.',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [\r\n        'Fairy',\r\n        'Fusion',\r\n        'Effect',\r\n    ] as string[],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict' as CondenseType,\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: `[2+ Effect Monsters on your field]\r\nEach time an opponent's monster activates its effect, place 1 Pure Counter on that opponent's monster (max. 1) after that effect resolves. Unaffected by activated effects from monster with a Pure Counter. Cannot be destroyed by battle with monsters with a Pure Counter.`,\r\n    setId: 'YGOC-EN001',\r\n    atk: '2000',\r\n    def: '2000',\r\n    password: '18199611',\r\n    sticker: 'holo5',\r\n    isFirstEdition: true,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    creator: '©2020 Studio Dice/SHUEISHA, TV TOKYO, KONAMI',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    /** Extra information come from different card source such as YGOPro custom card maker */\r\n    externalInfo: {} as Record<string, any>,\r\n});\r\n/** We avoid storing unique id for card, as it does not contribute to the card's identity. Id only matter when we are managing the card inside the app. */\r\nexport type InternalCard = ReturnType<typeof getDefaultInternalCard>;\r\nexport const getDefaultInternalCard = () => ({\r\n    id: uuid(),\r\n    ...getDefaultCard(),\r\n});\r\n\r\nexport const getEmptyCard = (): Card => ({\r\n    version: 2,\r\n    format: 'tcg',\r\n    frame: 'effect',\r\n    foil: 'normal',\r\n    opacity: getDefaultCardOpacity(),\r\n    finish: [],\r\n    artFinish: 'normal',\r\n    name: '',\r\n    nameStyleType: 'auto',\r\n    nameStyle: getDefaultNameStyle(),\r\n    attribute: NO_ATTRIBUTE,\r\n    subFamily: NO_ICON,\r\n    cardIcon: 'auto',\r\n    star: 6,\r\n    starAlignment: 'auto',\r\n    art: 'https://i.imgur.com/jjtCuG5.png',\r\n    artData: '',\r\n    artSource: 'online',\r\n    artFit: false,\r\n    artCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    hasBackground: false,\r\n    background: '',\r\n    backgroundData: '',\r\n    backgroundFit: false,\r\n    backgroundSource: 'online',\r\n    backgroundType: 'fit',\r\n    backgroundCrop: {\r\n        x: 0,\r\n        y: 4,\r\n        width: 100,\r\n        height: 89.5,\r\n        unit: '%',\r\n        aspect: 1,\r\n    },\r\n    linkMap: [],\r\n    isLink: null,\r\n    isPendulum: false,\r\n    pendulumFrame: 'auto',\r\n    pendulumEffect: '',\r\n    pendulumScaleRed: '4',\r\n    pendulumScaleBlue: '4',\r\n    pendulumSize: DEFAULT_PENDULUM_SIZE,\r\n    typeAbility: [],\r\n    effectStyle: {\r\n        condenseTolerant: 'strict',\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    pendulumStyle: {\r\n        fontStyle: 'auto',\r\n        upSize: 0,\r\n    },\r\n    effect: '',\r\n    setId: '',\r\n    atk: '0',\r\n    def: '0',\r\n    password: '',\r\n    sticker: NO_STICKER,\r\n    isFirstEdition: false,\r\n    isSpeedCard: false,\r\n    isLimitedEdition: false,\r\n    isDuelTerminalCard: false,\r\n    isLegacyCard: false,\r\n    /** A.k.a copyright */\r\n    creator: '',\r\n    furiganaHelper: true,\r\n    statTextStyle: getDefaultTextStyle(),\r\n    typeTextStyle: getDefaultTextStyle(),\r\n    effectTextStyle: getDefaultTextStyle(),\r\n    pendulumTextStyle: getDefaultTextStyle(),\r\n    otherTextStyle: getDefaultTextStyle(),\r\n    externalInfo: {},\r\n});\r\n\r\nexport const OpacityList = [\r\n    {\r\n        type: 'body' as const,\r\n        subType: 'artBorder' as const,\r\n        label: 'Card',\r\n        labelKey: 'input.opacity.body.label',\r\n        tooltipKey: 'input.opacity.art-border.tooltip',\r\n    },\r\n    {\r\n        type: 'name' as const,\r\n        subType: 'nameBorder' as const,\r\n        label: 'Name',\r\n        labelKey: 'input.opacity.name.label',\r\n        tooltipKey: 'input.opacity.name-border.tooltip',\r\n    },\r\n    {\r\n        type: 'pendulum' as const,\r\n        label: 'Pendulum',\r\n        labelKey: 'input.opacity.pendulum.label',\r\n        tooltipKey: null,\r\n    },\r\n    {\r\n        type: 'text' as const,\r\n        label: 'Effect',\r\n        labelKey: 'input.opacity.effect.label',\r\n        tooltipKey: null,\r\n    },\r\n];\r\n\r\nexport const DefaultColorList = [\r\n    '#4D4D4D', '#999999', '#FFFFFF', '#FF7F7F', '#FFD27F', '#FFFF7F',\r\n    '#7FFF7F', '#7FBF7F', '#7FFFFF', '#7F7FFF', '#BF7FBF', '#FF7FFF',\r\n\r\n    '#333333', '#808080', '#cccccc', '#FF0000', '#FFA500', '#FFFF00',\r\n    '#00FF00', '#008000', '#00FFFF', '#0000FF', '#800080', '#FF00FF',\r\n\r\n    '#000000', '#666666', '#B3B3B3', '#7F0000', '#7F5200', '#7F7F00',\r\n    '#007F00', '#004000', '#007F7F', '#00007F', '#400040', '#7F007F',\r\n];\r\n\r\nexport const ResolutionMap = {\r\n    '549x800': {\r\n        label: '549 × 800',\r\n        width: 549,\r\n        height: 800,\r\n        scale: 1,\r\n        settingValue: [549, 800] as [number, number],\r\n    },\r\n    '561x818': {\r\n        label: '561 × 818',\r\n        width: 561,\r\n        height: 818,\r\n        scale: 1,\r\n        settingValue: [561, 818] as [number, number],\r\n    },\r\n    '813x1185': {\r\n        label: '813 × 1185',\r\n        width: 813,\r\n        height: 1185,\r\n        scale: 1,\r\n        settingValue: [813, 1185] as [number, number],\r\n    },\r\n    '1122x1636': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1122 × 1636</div>,\r\n        width: 1122,\r\n        height: 1636,\r\n        scale: 2,\r\n        settingValue: [1122, 1636] as [number, number],\r\n    },\r\n    '1388x2026': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1388 × 2026</div>,\r\n        width: 1388,\r\n        height: 2026,\r\n        scale: 2,\r\n        settingValue: [1388, 2026] as [number, number],\r\n    },\r\n    '1626x2370': {\r\n        label: <div style={{ color: 'var(--main-warning)' }}>1626 × 2370</div>,\r\n        width: 1626,\r\n        height: 2370,\r\n        scale: 2,\r\n        settingValue: [1626, 2370] as [number, number],\r\n    },\r\n};\r\nexport const ResolutionList = [\r\n    ResolutionMap['549x800'],\r\n    ResolutionMap['561x818'],\r\n    ResolutionMap['813x1185'],\r\n    ResolutionMap['1122x1636'],\r\n    ResolutionMap['1388x2026'],\r\n    ResolutionMap['1626x2370'],\r\n];\r\n\r\nexport type ExportFormat = typeof ExportFormatList[0]['value'];\r\nexport const ExportFormatList = [\r\n    {\r\n        value: 'csv' as const,\r\n        label: '.csv',\r\n    },\r\n    {\r\n        value: 'xlsx' as const,\r\n        label: '.xlsx',\r\n    },\r\n];\r\n\r\nexport * from './canvas';\r\nexport * from './compatible-card';\r\nexport * from './condense';\r\nexport * from './coordinate-data';\r\nexport * from './dictionary';\r\nexport * from './foil-finish';\r\nexport * from './font-data-effect';\r\nexport * from './font-data-name';\r\nexport * from './font-data-other';\r\nexport * from './font-data-pendulum-effect';\r\nexport * from './format';\r\nexport * from './frame';\r\nexport * from './icon';\r\nexport * from './link';\r\nexport * from './name-preset';\r\nexport * from './pendulum';\r\nexport * from './regex';","export const createCanvas = (width: number, height: number) => {\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    const context = canvas.getContext('2d');\r\n\r\n    return {\r\n        canvas,\r\n        context,\r\n    };\r\n};","import ndarray, { NdArray } from 'ndarray';\r\nimport ops from 'ndarray-ops';\r\nimport pool from 'typedarray-pool';\r\nimport phase2_1 from 'distance-transform/lib/p1';\r\nimport phase2_2 from 'distance-transform/lib/p2';\r\nimport phase2_inf from 'distance-transform/lib/pinf';\r\nimport phase2_p from 'distance-transform/lib/pp';\r\n\r\nfunction phase1(array: Float64Array<ArrayBufferLike>, rowCount: number, colCount: number) {\r\n    var i: number, j: number, ptr = 0, nextPoint: number, min = Math.min;\r\n    for (i = 0; i < rowCount; ++i) {\r\n        nextPoint = array[ptr++];\r\n        for (j = 1; j < colCount; ++j) {\r\n            nextPoint = min(array[ptr], nextPoint + 1);\r\n            array[ptr++] = nextPoint;\r\n        }\r\n        for (j = 0; j < colCount; ++j) {\r\n            nextPoint = min(array[--ptr], nextPoint + 1);\r\n            array[ptr] = nextPoint;\r\n        }\r\n        ptr += colCount;\r\n    }\r\n}\r\n\r\nexport function distanceTransform(array: NdArray, exponent?: 1 | 2 | typeof Infinity) {\r\n    var dimensionCount = array.shape.length,\r\n        shape = array.shape.slice(0),\r\n        stride = new Array(dimensionCount),\r\n        size = 1,\r\n        stackSize = 0,\r\n        infinityHeight = 0,\r\n        index: number,\r\n        j: number,\r\n        n: number,\r\n        strideList: number[],\r\n        tmp: NdArray<Float64Array<ArrayBufferLike>>,\r\n        currentDimensionSize: number;\r\n    exponent = exponent || 2;\r\n    for (index = dimensionCount - 1; index >= 0; --index) {\r\n        stride[index] = size;\r\n        size *= shape[index];\r\n        infinityHeight += shape[index];\r\n        stackSize = Math.max(stackSize, shape[index]);\r\n    }\r\n\r\n    // Allocate scratch buffers\r\n    var phase2ResultAllocation = pool.mallocDouble(size),\r\n        phase2ResultArray = ndarray(phase2ResultAllocation, shape.slice(0), stride.slice(0), 0),\r\n        s_q = pool.mallocUint32(stackSize),\r\n        t_q = pool.mallocUint32(stackSize);\r\n\r\n    /**\r\n     * For some insane reason cwise library refuse to run properly on production when it work fine on dev.\r\n     * We have no other choice but to replicate the macro. We know for sure that we only need to deal with 2-dimension array so it will be fine.\r\n     * */\r\n    var phase1ResultAllocation = pool.mallocDouble(size),\r\n        phase1ResultArray = ndarray(phase1ResultAllocation, shape.slice(0), stride.slice(0), 0);\r\n    for (let rowIndex = 0; rowIndex < array.shape[0]; rowIndex++) {\r\n        for (let columnIndex = 0; columnIndex < array.shape[1]; columnIndex++) {\r\n            phase1ResultArray.set(rowIndex, columnIndex, array.get(rowIndex, columnIndex) ? 0 : infinityHeight);\r\n        }\r\n    }\r\n    //Perform first phase of distance transform\r\n    phase1(phase1ResultArray.data, (size / shape[dimensionCount - 1]) | 0, shape[dimensionCount - 1] | 0);\r\n\r\n    //Second passes\r\n    for (index = dimensionCount - 1; index > 0; --index) {\r\n        strideList = phase2ResultArray.stride;\r\n        n = 1;\r\n        for (j = index - 1; j < dimensionCount; ++j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        for (j = index - 2; j >= 0; --j) {\r\n            strideList[j] = n;\r\n            n *= shape[j];\r\n        }\r\n        ops.assign(phase2ResultArray, phase1ResultArray);\r\n\r\n        //Execute phase 2\r\n        currentDimensionSize = shape[index - 1];\r\n        if (!isFinite(exponent)) {\r\n            phase2_inf(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 1) {\r\n            phase2_1(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent === 2) {\r\n            phase2_2(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q);\r\n        } else if (exponent < 1) {\r\n            throw new Error('Values of exponent < 1 are not supported');\r\n        } else {\r\n            phase2_p(phase2ResultArray.data, (size / currentDimensionSize) | 0, currentDimensionSize | 0, s_q, t_q, exponent);\r\n        }\r\n\r\n        //Swap buffers\r\n        tmp = phase1ResultArray;\r\n        phase1ResultArray = phase2ResultArray;\r\n        phase2ResultArray = tmp;\r\n    }\r\n\r\n    //Copy phase1ResultArray to result\r\n    ops.assign(array, phase1ResultArray);\r\n\r\n    pool.freeDouble(phase1ResultAllocation);\r\n    pool.freeDouble(phase2ResultAllocation);\r\n    pool.freeUint32(s_q);\r\n    pool.freeUint32(t_q);\r\n    return array;\r\n}","import * as THREE from 'three';\r\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\r\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\r\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\r\n\r\nconst HorizontalBlurShader = {\r\n    uniforms: {\r\n        'tDiffuse': { type: 't', value: null },\r\n        'h': { type: 'f', value: 3.0 / 512.0 }\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float h;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float lef4 = vUv.x - 4.0 * h;',\r\n        'float lef3 = vUv.x - 3.0 * h;',\r\n        'float lef2 = vUv.x - 2.0 * h;',\r\n        'float lef1 = vUv.x - 1.0 * h;',\r\n        'float rig1 = vUv.x + 1.0 * h;',\r\n        'float rig2 = vUv.x + 2.0 * h;',\r\n        'float rig3 = vUv.x + 3.0 * h;',\r\n        'float rig4 = vUv.x + 4.0 * h;',\r\n\r\n        'lef4 = lef4 >= 0.0 ? lef4 : (1.0 + lef4);',\r\n        'lef4 = lef4 < 1.0  ? lef4 : (lef4 - 1.0 );',\r\n        'lef3 = lef3 >= 0.0 ? lef3 : (1.0 + lef3);',\r\n        'lef3 = lef3 < 1.0  ? lef3 : (lef3 - 1.0 );',\r\n        'lef2 = lef2 >= 0.0 ? lef2 : (1.0 + lef2);',\r\n        'lef2 = lef2 < 1.0  ? lef2 : (lef2 - 1.0 );',\r\n        'lef1 = lef1 >= 0.0 ? lef1 : (1.0 + lef1);',\r\n        'lef1 = lef1 < 1.0  ? lef1 : (lef1 - 1.0 );',\r\n        'rig1 = rig1 >= 0.0 ? rig1 : (1.0 + rig1);',\r\n        'rig1 = rig1 < 1.0  ? rig1 : (rig1 - 1.0 );',\r\n        'rig2 = rig2 >= 0.0 ? rig2 : (1.0 + rig2);',\r\n        'rig2 = rig2 < 1.0  ? rig2 : (rig2 - 1.0 );',\r\n        'rig3 = rig3 >= 0.0 ? rig3 : (1.0 + rig3);',\r\n        'rig3 = rig3 < 1.0  ? rig3 : (rig3 - 1.0 );',\r\n        'rig4 = rig4 >= 0.0 ? rig4 : (1.0 + rig4);',\r\n        'rig4 = rig4 < 1.0  ? rig4 : (rig4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( lef4, vUv.y ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( lef3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( lef2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( lef1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( rig1, vUv.y ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( rig2, vUv.y ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( rig3, vUv.y ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( rig4, vUv.y ) ) * 0.051;',\r\n        'if (h > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n        //\"gl_FragColor = vec4(1,0,0,1);\",\r\n\r\n        '}'\r\n    ].join('\\n')\r\n};\r\nconst VerticalBlurShader = {\r\n    uniforms: {\r\n        tDiffuse: { type: 't', value: null },\r\n        v: { type: 'f', value: 3.0 / 512.0 },\r\n    },\r\n    vertexShader: [\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vUv = uv;',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'uniform sampler2D tDiffuse;',\r\n        'uniform float v;',\r\n\r\n        'varying vec2 vUv;',\r\n\r\n        'void main() {',\r\n\r\n        'vec4 sum = vec4( 0.0 );',\r\n        'float top4 = vUv.y - 4.0 * v;',\r\n        'float top3 = vUv.y - 3.0 * v;',\r\n        'float top2 = vUv.y - 2.0 * v;',\r\n        'float top1 = vUv.y - 1.0 * v;',\r\n        'float bot1 = vUv.y + 1.0 * v;',\r\n        'float bot2 = vUv.y + 2.0 * v;',\r\n        'float bot3 = vUv.y + 3.0 * v;',\r\n        'float bot4 = vUv.y + 4.0 * v;',\r\n\r\n        'top4 = top4 >= 0.0 ? top4 : (1.0 + top4);',\r\n        'top4 = top4 < 1.0  ? top4 : (top4 - 1.0 );',\r\n        'top3 = top3 >= 0.0 ? top3 : (1.0 + top3);',\r\n        'top3 = top3 < 1.0  ? top3 : (top3 - 1.0 );',\r\n        'top2 = top2 >= 0.0 ? top2 : (1.0 + top2);',\r\n        'top2 = top2 < 1.0  ? top2 : (top2 - 1.0 );',\r\n        'top1 = top1 >= 0.0 ? top1 : (1.0 + top1);',\r\n        'top1 = top1 < 1.0  ? top1 : (top1 - 1.0 );',\r\n        'bot1 = bot1 >= 0.0 ? bot1 : (1.0 + bot1);',\r\n        'bot1 = bot1 < 1.0  ? bot1 : (bot1 - 1.0 );',\r\n        'bot2 = bot2 >= 0.0 ? bot2 : (1.0 + bot2);',\r\n        'bot2 = bot2 < 1.0  ? bot2 : (bot2 - 1.0 );',\r\n        'bot3 = bot3 >= 0.0 ? bot3 : (1.0 + bot3);',\r\n        'bot3 = bot3 < 1.0  ? bot3 : (bot3 - 1.0 );',\r\n        'bot4 = bot4 >= 0.0 ? bot4 : (1.0 + bot4);',\r\n        'bot4 = bot4 < 1.0  ? bot4 : (bot4 - 1.0 );',\r\n\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top4 ) ) * 0.051;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, top1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot1 ) ) * 0.1531;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot2 ) ) * 0.12245;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot3 ) ) * 0.0918;',\r\n        'sum += texture2D( tDiffuse, vec2( vUv.x, bot4 ) ) * 0.051;',\r\n        'if (v > 0.0){',\r\n        '\tvec4 srcValue = texture2D( tDiffuse, vec2( vUv.x, vUv.y ) );',\r\n        '\tsum = srcValue + srcValue - sum;',\r\n        '}',\r\n        'gl_FragColor = sum;',\r\n\r\n        '}',\r\n    ].join('\\n'),\r\n};\r\nconst NormalMapShader = {\r\n    uniforms: {\r\n        'type': { type: '1i', value: 0 },\r\n        'invertR': { type: '1f', value: 1 },\r\n        'invertG': { type: '1f', value: 1 },\r\n        'invertH': { type: '1f', value: 1 },\r\n        'dz': { type: '1f', value: 0 },\r\n        'dimensions': { type: 'fv', value: [0, 0, 0] },\r\n        'tHeightMap': { type: 't', value: null }\r\n    },\r\n    vertexShader: [\r\n        'precision mediump float;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform vec3 dimensions;',\r\n        'void main() {',\r\n        'gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\r\n        'step = vec2(-1.0 / dimensions.x, -1.0 / dimensions.y);', // - to switch from glsl orientation to my orientation :D\r\n        'vUv = uv;',\r\n        '}'\r\n    ].join('\\n'),\r\n    fragmentShader: [\r\n        'precision mediump float;',\r\n        'uniform vec3 dimensions;',\r\n        'varying vec2 vUv;',\r\n        'varying vec2 step;',\r\n        'uniform float dz;',\r\n        'uniform float invertR;',\r\n        'uniform float invertG;',\r\n        'uniform float invertH;',\r\n        'uniform int type;',\r\n        'uniform sampler2D tHeightMap;',\r\n\r\n        'void main(void) {',\r\n        '\tvec2 tlv = vec2(vUv.x - step.x, vUv.y + step.y );',\r\n        '\tvec2 lv  = vec2(vUv.x - step.x, vUv.y \t\t   );',\r\n        '\tvec2 blv = vec2(vUv.x - step.x, vUv.y - step.y);',\r\n        '\tvec2 tv  = vec2(vUv.x \t\t  , vUv.y + step.y );',\r\n        '\tvec2 bv  = vec2(vUv.x \t\t  , vUv.y - step.y);',\r\n        '\tvec2 trv = vec2(vUv.x + step.x, vUv.y + step.y );',\r\n        '\tvec2 rv  = vec2(vUv.x + step.x, vUv.y \t\t   );',\r\n        '\tvec2 brv = vec2(vUv.x + step.x, vUv.y - step.y);',\r\n        '\ttlv = vec2(tlv.x >= 0.0 ? tlv.x : (1.0 + tlv.x), \ttlv.y >= 0.0\t? tlv.y : (1.0  + tlv.y));',\r\n        '\ttlv = vec2(tlv.x < 1.0  ? tlv.x : (tlv.x - 1.0 ), \ttlv.y < 1.0   \t? tlv.y : (tlv.y - 1.0 ));',\r\n        '\tlv  = vec2( lv.x >= 0.0 ?  lv.x : (1.0 + lv.x),  \tlv.y  >= 0.0 \t?  lv.y : (1.0  +  lv.y));',\r\n        '\tlv  = vec2( lv.x < 1.0  ?  lv.x : ( lv.x - 1.0 ),   lv.y  < 1.0  \t?  lv.y : ( lv.y - 1.0 ));',\r\n        '\tblv = vec2(blv.x >= 0.0 ? blv.x : (1.0 + blv.x), \tblv.y >= 0.0 \t? blv.y : (1.0  + blv.y));',\r\n        '\tblv = vec2(blv.x < 1.0  ? blv.x : (blv.x - 1.0 ), \tblv.y < 1.0 \t? blv.y : (blv.y - 1.0 ));',\r\n        '\ttv  = vec2( tv.x >= 0.0 ?  tv.x : (1.0 + tv.x),  \ttv.y  >= 0.0 \t?  tv.y : (1.0  +  tv.y));',\r\n        '\ttv  = vec2( tv.x < 1.0  ?  tv.x : ( tv.x - 1.0 ),   tv.y  < 1.0 \t?  tv.y : ( tv.y - 1.0 ));',\r\n        '\tbv  = vec2( bv.x >= 0.0 ?  bv.x : (1.0 + bv.x),  \tbv.y  >= 0.0 \t?  bv.y : (1.0  +  bv.y));',\r\n        '\tbv  = vec2( bv.x < 1.0  ?  bv.x : ( bv.x - 1.0 ),   bv.y  < 1.0 \t?  bv.y : ( bv.y - 1.0 ));',\r\n        '\ttrv = vec2(trv.x >= 0.0 ? trv.x : (1.0 + trv.x), \ttrv.y >= 0.0 \t? trv.y : (1.0  + trv.y));',\r\n        '\ttrv = vec2(trv.x < 1.0  ? trv.x : (trv.x - 1.0 ), \ttrv.y < 1.0   \t? trv.y : (trv.y - 1.0 ));',\r\n        '\trv  = vec2( rv.x >= 0.0 ?  rv.x : (1.0 + rv.x),  \trv.y  >= 0.0 \t?  rv.y : (1.0  +  rv.y));',\r\n        '\trv  = vec2( rv.x < 1.0  ?  rv.x : ( rv.x - 1.0 ),   rv.y  < 1.0   \t?  rv.y : ( rv.y - 1.0 ));',\r\n        '\tbrv = vec2(brv.x >= 0.0 ? brv.x : (1.0 + brv.x), \tbrv.y >= 0.0 \t? brv.y : (1.0  + brv.y));',\r\n        '\tbrv = vec2(brv.x < 1.0  ? brv.x : (brv.x - 1.0 ), \tbrv.y < 1.0   \t? brv.y : (brv.y - 1.0 ));',\r\n        /*\"\ttlv = vec2(tlv.x >= 0.0 \t\t ? tlv.x : (dimensions.x - tlv.x), \ttlv.y >= 0.0\t\t\t? tlv.y : (dimensions.y - tlv.y));\",\r\n        \"\ttlv = vec2(tlv.x < dimensions.x  ? tlv.x : (tlv.x - dimensions.x ), tlv.y <= dimensions.y   ? tlv.y : (tlv.y - dimensions.y  ));\",\r\n        \"\tlv  = vec2( lv.x >= 0.0  \t\t ?  lv.x : (dimensions.x - lv.x),  \tlv.y >= 0.0 \t\t\t?  lv.y : (dimensions.y - lv.y));\",\r\n        \"\tlv  = vec2( lv.x < dimensions.x  ?  lv.x : ( lv.x - dimensions.x ), lv.y <= dimensions.y   \t?  lv.y : ( lv.y - dimensions.y  ));\",\r\n        \"\tblv = vec2(blv.x >= 0.0  \t\t ? blv.x : (dimensions.x - blv.x), \tblv.y >= 0.0 \t\t\t? blv.y : (dimensions.y - blv.y));\",\r\n        \"\tblv = vec2(blv.x < dimensions.x  ? blv.x : (blv.x - dimensions.x ), blv.y <= dimensions.y  \t? blv.y : (blv.y - dimensions.y  ));\",\r\n        \"\ttv  = vec2( tv.x >= 0.0  \t\t ?  tv.x : (dimensions.x - tv.x),  \ttv.y >= 0.0 \t\t\t?  tv.y : (dimensions.y - tv.y));\",\r\n        \"\ttv  = vec2( tv.x < dimensions.x  ?  tv.x : ( tv.x - dimensions.x ), tv.y <= dimensions.y  \t?  tv.y : ( tv.y - dimensions.y  ));\",\r\n        \"\tbv  = vec2( bv.x >= 0.0  \t\t ?  bv.x : (dimensions.x - bv.x),  \tbv.y >= 0.0 \t\t\t?  bv.y : (dimensions.y - bv.y));\",\r\n        \"\tbv  = vec2( bv.x < dimensions.x  ?  bv.x : ( bv.x - dimensions.x ), bv.y <= dimensions.y  \t?  bv.y : ( bv.y - dimensions.y  ));\",\r\n        \"\ttrv = vec2(trv.x >= 0.0  \t\t ? trv.x : (dimensions.x - trv.x), \ttrv.y >= 0.0 \t\t\t? trv.y : (dimensions.y - trv.y));\",\r\n        \"\ttrv = vec2(trv.x < dimensions.x  ? trv.x : (trv.x - dimensions.x ), trv.y <= dimensions.y   ? trv.y : (trv.y - dimensions.y  ));\",\r\n        \"\trv  = vec2( rv.x >= 0.0 \t\t ?  rv.x : (dimensions.x - rv.x),  \trv.y >= 0.0 \t\t\t?  rv.y : (dimensions.y - rv.y));\",\r\n        \"\trv  = vec2( rv.x < dimensions.x  ?  rv.x : ( rv.x - dimensions.x ), rv.y <= dimensions.y    ?  rv.y : ( rv.y - dimensions.y  ));\",\r\n        \"\tbrv = vec2(brv.x >= 0.0 \t\t ? brv.x : (dimensions.x - brv.x), \tbrv.y >= 0.0 \t\t\t? brv.y : (dimensions.y - brv.y));\",\r\n        \"\tbrv = vec2(brv.x < dimensions.x  ? brv.x : (brv.x - dimensions.x ), brv.y <= dimensions.y    ? brv.y : (brv.y - dimensions.y  ));\",*/\r\n        '\tfloat tl = abs(texture2D(tHeightMap, tlv).r);',\r\n        '\tfloat l  = abs(texture2D(tHeightMap, lv ).r);',\r\n        '\tfloat bl = abs(texture2D(tHeightMap, blv).r);',\r\n        '\tfloat t  = abs(texture2D(tHeightMap, tv ).r);',\r\n        '\tfloat b  = abs(texture2D(tHeightMap, bv ).r);',\r\n        '\tfloat tr = abs(texture2D(tHeightMap, trv).r);',\r\n        '\tfloat r  = abs(texture2D(tHeightMap, rv ).r);',\r\n        '\tfloat br = abs(texture2D(tHeightMap, brv).r);',\r\n        '   float dx = 0.0, dy = 0.0;',\r\n        '   if(type == 0){',\t// Sobel\r\n        '\t\tdx = tl + l*2.0 + bl - tr - r*2.0 - br;',\r\n        '\t\tdy = tl + t*2.0 + tr - bl - b*2.0 - br;',\r\n        '   }',\r\n        '   else{',\t\t\t\t// Scharr\r\n        '\t\tdx = tl*3.0 + l*10.0 + bl*3.0 - tr*3.0 - r*10.0 - br*3.0;',\r\n        '\t\tdy = tl*3.0 + t*10.0 + tr*3.0 - bl*3.0 - b*10.0 - br*3.0;',\r\n        '   }',\r\n        '\tvec4 normal = vec4(normalize(vec3(dx * invertR * invertH * 255.0, dy * invertG * invertH * 255.0, dz)), texture2D(tHeightMap, vUv).a);',\r\n        '\tgl_FragColor = vec4(normal.xy * 0.5 + 0.5, normal.zw);',\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, vec2(1.0,1.0));\",\r\n        //\"\tgl_FragColor = texture2D(tHeightMap, vec2(0.0,0.0));\",\r\n        //\"\tgl_FragColor = texture2D(tDiffuse, tlv);\",\r\n        //\"\tgl_FragColor = vec4(texture2D(tHeightMap, vUv.xy).rgba);\",\r\n        '}'\r\n    ].join('\\n')\r\n};\r\n\r\nexport const SHADER_FILTER_TYPE = {\r\n    SOBEL: 'sobel' as const,\r\n    SCHARR: 'scharr' as const,\r\n};\r\nexport const getDefaultHeightToNormalMapOption = () => ({\r\n    invertedRed: false,\r\n    invertedGreen: false,\r\n    invertedSource: false,\r\n    blurSharp: 0,\r\n    strength: 1,\r\n    level: 8.5,\r\n    type: SHADER_FILTER_TYPE.SOBEL,\r\n});\r\ntype HeightToNormalMapOption = Partial<ReturnType<typeof getDefaultHeightToNormalMapOption>>;\r\n\r\nexport class HeightToNormalMap {\r\n    renderer: THREE.WebGLRenderer;\r\n    effectComposer: EffectComposer;\r\n    normalMapUniform: typeof NormalMapShader['uniforms'];\r\n    material: THREE.ShaderMaterial;\r\n    option: Required<HeightToNormalMapOption>;\r\n    canvas!: HTMLCanvasElement;\r\n    gaussianShaderX!: ShaderPass;\r\n    gaussianShaderY!: ShaderPass;\r\n\r\n    constructor(option: HeightToNormalMapOption, resultCanvas: HTMLCanvasElement) {\r\n        this.canvas = resultCanvas;\r\n        this.option = { ...getDefaultHeightToNormalMapOption(), ...option };\r\n        this.init();\r\n    }\r\n\r\n    apply(image: HTMLCanvasElement, option: HeightToNormalMapOption = {}) {\r\n        const { width, height } = image;\r\n        const texture = this.getTexture(image);\r\n        this.normalMapUniform.tHeightMap.value = texture;\r\n        this.normalMapUniform.dimensions.value = [width, height, 0];\r\n        this.renderer.setSize(width, height);\r\n        this.effectComposer.setSize(width, height);\r\n        this.effectComposer.reset(this.getRenderTarget(width, height));\r\n\r\n        const { invertedRed, invertedGreen, invertedSource, blurSharp, strength, level, type } = {\r\n            ...this.option,\r\n            ...option,\r\n        };\r\n\r\n        this.invertRed(invertedRed);\r\n        this.invertGreen(invertedGreen);\r\n        this.invertSource(invertedSource);\r\n        this.setBlurSharp(blurSharp, width, height);\r\n        this.setStrengthAndLevel(strength, level);\r\n        this.setType(type);\r\n\r\n        this.effectComposer.render(1 / 60);\r\n    }\r\n\r\n    init() {\r\n        const camera = new THREE.OrthographicCamera(1 / -2, 1 / 2, 1 / 2, 1 / -2, 0, 1);\r\n        const scene = new THREE.Scene();\r\n        const normalRenderScene = new RenderPass(scene, camera);\r\n\r\n        this.renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true, canvas: this.canvas });\r\n        this.renderer.setClearColor(0x000000, 0); // the default\r\n\r\n        this.normalMapUniform = THREE.UniformsUtils.clone(NormalMapShader.uniforms);\r\n\r\n        this.material = new THREE.ShaderMaterial({\r\n            fragmentShader: NormalMapShader.fragmentShader,\r\n            vertexShader: NormalMapShader.vertexShader,\r\n            uniforms: this.normalMapUniform,\r\n        });\r\n        this.material.transparent = true;\r\n\r\n        const meshGeometry = new THREE.PlaneGeometry(1, 1, 1, 1);\r\n        const renderMesh = new THREE.Mesh(meshGeometry, this.material);\r\n        scene.add(renderMesh);\r\n\r\n        this.gaussianShaderY = new ShaderPass(VerticalBlurShader);\r\n        this.gaussianShaderX = new ShaderPass(HorizontalBlurShader);\r\n        this.gaussianShaderX.renderToScreen = true;\r\n\r\n        this.effectComposer = new EffectComposer(this.renderer, this.getRenderTarget());\r\n        this.effectComposer.addPass(normalRenderScene);\r\n        this.effectComposer.addPass(this.gaussianShaderY);\r\n        this.effectComposer.addPass(this.gaussianShaderX);\r\n    }\r\n    getRenderTarget(width?: number, height?: number) {\r\n        return new THREE.WebGLRenderTarget(width, height, {\r\n            minFilter: THREE.NearestFilter,\r\n            magFilter: THREE.NearestFilter,\r\n            format: THREE.RGBAFormat,\r\n            stencilBuffer: false,\r\n        });\r\n    }\r\n    getTexture(image: TexImageSource) {\r\n        const texture = new THREE.Texture(image);\r\n        texture.wrapS = texture.wrapT = THREE.ClampToEdgeWrapping; // eslint-disable-line\r\n        texture.minFilter = texture.magFilter = THREE.NearestFilter; // eslint-disable-line\r\n        texture.anisotropy = 2;\r\n        texture.needsUpdate = true;\r\n        return texture;\r\n    }\r\n\r\n    invertRed(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertR.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertR.value = 1;\r\n        }\r\n    }\r\n\r\n    invertGreen(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertG.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertG.value = 1;\r\n        }\r\n    }\r\n\r\n    invertSource(status: boolean) {\r\n        if (status) {\r\n            this.normalMapUniform.invertH.value = -1;\r\n        } else {\r\n            this.normalMapUniform.invertH.value = 1;\r\n        }\r\n    }\r\n\r\n    setBlurSharp(value: number, width: number, height: number) {\r\n        this.gaussianShaderY.uniforms.v.value = value / width / 5;\r\n        this.gaussianShaderX.uniforms.h.value = value / height / 5;\r\n    }\r\n\r\n    setStrengthAndLevel(strength: number, level: number) {\r\n        this.normalMapUniform.dz.value = 1.0 / strength * (1.0 + Math.pow(2.0, level)); //  eslint-disable-line\r\n    }\r\n\r\n    setType(type: typeof SHADER_FILTER_TYPE[keyof typeof SHADER_FILTER_TYPE]) {\r\n        this.normalMapUniform.type.value = type === 'sobel' ? 0 : 1;\r\n    }\r\n}","// import distanceTransform from 'distance-transform';\r\nimport ndarray from 'ndarray';\r\nimport { getDefaultHeightToNormalMapOption, HeightToNormalMap, SHADER_FILTER_TYPE } from './shader';\r\nimport { bilateralFilter } from './bilateral-filter';\r\nimport { distanceTransform } from './distance-transform';\r\n\r\nexport const angleToVector = (lightYaw: number, lightPitch: number) => {\r\n    const angleRadian = (lightYaw + 90) * Math.PI / 180;\r\n    const verticalAngleRadian = (lightPitch + 90) * Math.PI / 180;\r\n    const x = Math.cos(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const y = Math.sin(angleRadian) * Math.cos(verticalAngleRadian);\r\n    const z = Math.sin(verticalAngleRadian);\r\n\r\n    return [Math.round(x * 100) / 100, Math.round(y * 100) / 100, Math.round(z * 100) / 100] as [number, number, number];\r\n};\r\nexport const applyEmboss = ({\r\n    inputCanvas,\r\n    affectedHeight,\r\n    affectedWidth,\r\n    maxHeight = 8,\r\n    lightColorVec = [255, 255, 255],\r\n    /** Shine parallel with the surface, from rightside. */\r\n    lightAngleVec,\r\n    lightPitch,\r\n    lightYaw,\r\n    minIntensity = -1,\r\n    maxIntensity = 1,\r\n}: {\r\n    inputCanvas: HTMLCanvasElement,\r\n    affectedWidth?: number,\r\n    affectedHeight?: number,\r\n    maxHeight?: number,\r\n    lightColorVec?: [number, number, number],\r\n    lightAngleVec?: [number, number, number],\r\n    lightPitch?: number,\r\n    lightYaw?: number,\r\n    minIntensity?: number,\r\n    maxIntensity?: number,\r\n}) => {\r\n    const ctx = inputCanvas.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    /** Support partial transform to increase transform speed and reduce stuttering */\r\n    const height = affectedHeight ?? inputCanvas.height;\r\n    const width = affectedWidth ?? inputCanvas.width;\r\n    /** @todo Typescript current does not recognize `willReadFrequently` option yet */\r\n    const imageData = ctx.getImageData(0, 0, width, height, { willReadFrequently: true } as any);\r\n    const data = imageData.data;\r\n\r\n    const computedLightAngleVec: [number, number, number] = lightAngleVec\r\n        ? lightAngleVec\r\n        : (typeof lightPitch === 'number' && typeof lightYaw === 'number')\r\n            ? angleToVector(lightPitch, lightYaw)\r\n            : [1, 0, 0];\r\n    const angleVecMagnitude = Math.sqrt(computedLightAngleVec[0] ** 2 + computedLightAngleVec[1] ** 2 + computedLightAngleVec[2] ** 2);\r\n    const normalizedLightAngleVec = [\r\n        computedLightAngleVec[0] / angleVecMagnitude,\r\n        computedLightAngleVec[1] / angleVecMagnitude,\r\n        computedLightAngleVec[2] / angleVecMagnitude\r\n    ];\r\n\r\n    if (!data) return;\r\n\r\n    try {\r\n        /**\r\n         * Step 1: Create heightmap. We will run an algorithm that transform the flat text image into a heightmap. Pixels that is near the transparent background has lower height and vice versa. We use a distance transform algorithm for this.\r\n         */\r\n        /** Any pixel that is not transparent will be the foreground. */\r\n        const validPixelList = new Uint8ClampedArray(width * height);\r\n        for (let i = 0; i < data.length; i += 4) {\r\n            if ((data[i] || data[i + 1] || data[i + 2] || data[i + 3])) {\r\n                validPixelList[i / 4] = 0;\r\n            } else {\r\n                validPixelList[i / 4] = 1;\r\n            }\r\n        }\r\n        const dtImageData = distanceTransform(ndarray(validPixelList, [height, width]));\r\n        const row = dtImageData.shape[0], column = dtImageData.shape[1];\r\n        const nextDtBitmap = new Uint8ClampedArray(width * height * 4);\r\n\r\n        /** Heightmap will be resprented by a grayscale image. If we print it out, the lighter a pixel, the higher it is in the heightmap. */\r\n        const heightIntensityRatio = Math.floor(255 / maxHeight);\r\n        for (let rowIndex = 0; rowIndex < row; rowIndex++) {\r\n            for (let colIndex = 0; colIndex < column; colIndex++) {\r\n                const currentIndex = (rowIndex * width + colIndex) * 4;\r\n                const heightValue = dtImageData.get(rowIndex, colIndex);\r\n\r\n                nextDtBitmap[currentIndex] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 1] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 2] = heightValue * heightIntensityRatio;\r\n                nextDtBitmap[currentIndex + 3] = heightValue === 0 ? 0 : 255;\r\n            }\r\n        }\r\n\r\n        // if (Math.random() >= 0) return new ImageData(nextDtBitmap, width, height);\r\n        const heightmapCanvas = document.createElement('canvas');\r\n        heightmapCanvas.width = width;\r\n        heightmapCanvas.height = height;\r\n        heightmapCanvas.getContext('2d').putImageData(\r\n            new ImageData(nextDtBitmap, width, height),\r\n            0,\r\n            0,\r\n        );\r\n\r\n        /**\r\n         * Step 2: Create normal map. We will run another algorithm to transform height map into normal map, which each pixel hold the information about how light will reflect when shine into it.\r\n         */\r\n        const normalMapCanvas = document.createElement('canvas');\r\n        normalMapCanvas.width = width;\r\n        normalMapCanvas.height = height;\r\n        const heightToNormalMapConverter = new HeightToNormalMap(getDefaultHeightToNormalMapOption(), normalMapCanvas);\r\n        heightToNormalMapConverter.apply(heightmapCanvas, {\r\n            blurSharp: 0,\r\n            level: 9,\r\n            strength: 2.5,\r\n            invertedRed: false,\r\n            invertedGreen: false,\r\n            invertedSource: true,\r\n            type: SHADER_FILTER_TYPE.SOBEL,\r\n        });\r\n\r\n        /**\r\n         * Step 2b: We run the normal map through a simple bilateral filter to soften it, ensure the surface is smooth so we get a more even result.\r\n         */\r\n        const softenNormalMapCanvas = document.createElement('canvas');\r\n        softenNormalMapCanvas.width = width;\r\n        softenNormalMapCanvas.height = height;\r\n\r\n        const softenNormalMapContext = softenNormalMapCanvas.getContext('2d');\r\n        softenNormalMapContext.drawImage(\r\n            normalMapCanvas,\r\n            0,\r\n            0,\r\n            width,\r\n            height,\r\n        );\r\n        const filteredData = bilateralFilter(\r\n            softenNormalMapContext.getImageData(0, 0, width, height).data,\r\n            width,\r\n            height,\r\n            9,\r\n            70,\r\n            20,\r\n        );\r\n\r\n        /**\r\n         * Step 3: We shine the defined light into the normal map. The product between the normal vector and the light vector will produce a single number which is the light intensity of that pixel. After that we combine the color of light (affected by intensity) with the native color of the original image to produce desired result.\r\n         * \r\n         * Even though in physical world the original image is not a light source and therefore not produce additive color with our light source. We ignore that to produce a more intuitive result. But also for the sake of an easy to control effect, we do not allow user to customize light color, and instead only allow pure white light (#ffffff).\r\n         */\r\n        const resultData = new Uint8ClampedArray(width * height * 4);\r\n        for (let pixelCnt = 0; pixelCnt < data.length; pixelCnt += 4) {\r\n            let nx = (filteredData[pixelCnt] / 127.5) - 1.0;\r\n            let ny = (filteredData[pixelCnt + 1] / 127.5) - 1.0;\r\n            let nz = (filteredData[pixelCnt + 2] / 127.5) - 1.0;\r\n            const baseIntensity = nx * normalizedLightAngleVec[0]\r\n                + ny * normalizedLightAngleVec[1]\r\n                + nz * normalizedLightAngleVec[2];\r\n            const enhancedIntensity = baseIntensity / 2 * (Math.abs(minIntensity) + Math.abs(maxIntensity));\r\n            const intensity = Math.max(minIntensity, Math.min(enhancedIntensity, maxIntensity));\r\n\r\n            /** Step 3b: We apply the original alpha channel into the result pixel to soften it, removing rough edges. */\r\n            resultData[pixelCnt] = Math.round(data[pixelCnt] + lightColorVec[0] * intensity);\r\n            resultData[pixelCnt + 1] = Math.round(data[pixelCnt + 1] + lightColorVec[1] * intensity);\r\n            resultData[pixelCnt + 2] = Math.round(data[pixelCnt + 2] + lightColorVec[2] * intensity);\r\n            resultData[pixelCnt + 3] = data[pixelCnt + 3];\r\n        }\r\n\r\n        return new ImageData(resultData, width, height);\r\n    } catch (e) {\r\n        console.error('Could not apply emboss effect', e);\r\n        return null;\r\n    }\r\n};","export const bilateralFilter = (\r\n    imageData: Uint8ClampedArray<ArrayBuffer | ArrayBufferLike>,\r\n    width: number,\r\n    height: number,\r\n    diameter: number,\r\n    sigmaColor: number,\r\n    sigmaSpace: number,\r\n) => {\r\n    const output = new Uint8ClampedArray(width * height * 4);\r\n    const halfD = Math.floor(diameter / 2);\r\n\r\n    // Helper function to calculate the Gaussian weight for spatial distance\r\n    function spatialWeight(x: number, y: number, cx: number, cy: number) {\r\n        return Math.exp(-((x - cx) ** 2 + (y - cy) ** 2) / (2 * sigmaSpace ** 2));\r\n    }\r\n\r\n    // Helper function to calculate the Gaussian weight for color distance\r\n    function colorWeight(c1: number, c2: number) {\r\n        return Math.exp(-((c1 - c2) ** 2) / (2 * sigmaColor ** 2));\r\n    }\r\n\r\n    // Loop through each pixel in the image\r\n    for (let y = 0; y < height; y++) {\r\n        for (let x = 0; x < width; x++) {\r\n            let rSum = 0, gSum = 0, bSum = 0, wSum = 0;\r\n\r\n            // Apply the filter to a local neighborhood around the current pixel\r\n            for (let ky = -halfD; ky <= halfD; ky++) {\r\n                for (let kx = -halfD; kx <= halfD; kx++) {\r\n                    const nx = x + kx;\r\n                    const ny = y + ky;\r\n\r\n                    // Check if the neighbor is within the image bounds\r\n                    if (nx >= 0 && ny >= 0 && nx < width && ny < height) {\r\n                        const centerPixel = (y * width + x) * 4;\r\n                        const neighborPixel = (ny * width + nx) * 4;\r\n\r\n                        // Get the color values for the center pixel and the neighbor pixel\r\n                        const rCenter = imageData[centerPixel];\r\n                        const gCenter = imageData[centerPixel + 1];\r\n                        const bCenter = imageData[centerPixel + 2];\r\n                        const rNeighbor = imageData[neighborPixel];\r\n                        const gNeighbor = imageData[neighborPixel + 1];\r\n                        const bNeighbor = imageData[neighborPixel + 2];\r\n\r\n                        // Compute spatial and color weights\r\n                        const spatial = spatialWeight(nx, ny, x, y);\r\n                        const colorR = colorWeight(rCenter, rNeighbor);\r\n                        const colorG = colorWeight(gCenter, gNeighbor);\r\n                        const colorB = colorWeight(bCenter, bNeighbor);\r\n\r\n                        const weight = spatial * colorR * colorG * colorB;\r\n\r\n                        // Accumulate weighted sum of colors\r\n                        rSum += rNeighbor * weight;\r\n                        gSum += gNeighbor * weight;\r\n                        bSum += bNeighbor * weight;\r\n                        wSum += weight;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Normalize the result and assign it to the output image\r\n            const outputPixel = (y * width + x) * 4;\r\n            output[outputPixel] = rSum / wSum;\r\n            output[outputPixel + 1] = gSum / wSum;\r\n            output[outputPixel + 2] = bSum / wSum;\r\n            output[outputPixel + 3] = imageData[outputPixel + 3];  // Preserve alpha channel\r\n        }\r\n    }\r\n\r\n    return output;\r\n};","/** Delay queue and relevant checker is used for potential performance improvement, but currently performance is not making a hard impact to the app. */\r\nexport const generateLayer = (\r\n    canvasLayer: React.RefObject<HTMLCanvasElement>,\r\n    exportCtx: CanvasRenderingContext2D | null | undefined,\r\n    delayQueue: number = 0,\r\n) => {\r\n    return new Promise<boolean>(resolve => {\r\n        setTimeout(() => {\r\n            if (!canvasLayer.current || !exportCtx) resolve(false);\r\n            else {\r\n                try {\r\n                    canvasLayer.current.toBlob(blob => {\r\n                        if (!blob) resolve(false);\r\n                        else {\r\n                            const url = URL.createObjectURL(blob);\r\n                            if (!url) resolve(false);\r\n                            else {\r\n                                const layer = new Image();\r\n                                layer.src = url;\r\n                                layer.onload = () => {\r\n                                    exportCtx.drawImage(layer, 0, 0);\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(true);\r\n                                };\r\n                                layer.onerror = () => {\r\n                                    URL.revokeObjectURL(url);\r\n                                    resolve(false);\r\n                                };\r\n                            }\r\n                        }\r\n                    });\r\n                } catch (e) {\r\n                    /** Draw directly into export canvas, which will tainted the export canvas afterward. */\r\n                    exportCtx.drawImage(canvasLayer.current, 0, 0);\r\n                    console.error(e);\r\n                    resolve(false);\r\n                }\r\n            }\r\n        }, delayQueue * 25);\r\n    });\r\n};","import { Card, Foil, frameList, NameStyle, NameStyleType, PresetNameStyleMap } from '../model';\r\n\r\nexport const checkNormal = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'normal' && checkMonster(card);\r\n};\r\nexport const checkXyz = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'xyz';\r\n};\r\nexport const checkDarkSynchro = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'dark-synchro';\r\n};\r\nexport const checkLink = (card: Pick<Card, 'isLink'>) => {\r\n    return card.isLink === true;\r\n};\r\nexport const checkSpeedSkill = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame === 'speed-skill' && !checkMonster(card);\r\n};\r\nexport const checkMonster = (card: Pick<Card, 'frame'>) => {\r\n    return card.frame !== 'spell' && card.frame !== 'trap' && card.frame !== 'speed-skill';\r\n};\r\nexport const checkExtraDeckMonster = (card: Pick<Card, 'frame'>) => {\r\n    return [\r\n        'fusion',\r\n        'synchro',\r\n        'xyz',\r\n        'link',\r\n        'dark-synchro',\r\n        'zarc',\r\n    ].includes(card.frame);\r\n};\r\n\r\nexport const getCardFrame = (frame: string) => {\r\n    return frameList.find(entry => entry.name === frame.toLowerCase())?.name ?? 'effect';\r\n};\r\nexport const getCardIconFromFrame = (frame: string) => {\r\n    if (frame === 'spell' || frame === 'trap') return 'st';\r\n    if (frame === 'xyz') return 'rank';\r\n    if (frame === 'dark-synchro') return 'negative-level';\r\n    if (frame === 'speed-skill' || frame === 'link' || frame === 'lg-dragon') return 'none';\r\n    return 'level';\r\n};\r\n\r\nexport const checkLightHeader = (frame: string) => {\r\n    return !checkMonster({ frame }) || checkLightFrame(frame);\r\n};\r\n\r\nexport const checkLightFrame = (frame: string) => {\r\n    return ['link', 'xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(frame);\r\n};\r\n\r\nexport const resolveNameStyle = ({\r\n    format,\r\n    frame,\r\n    nameStyle,\r\n    nameStyleType,\r\n    foil,\r\n}: {\r\n    nameStyleType: NameStyleType,\r\n    nameStyle: Partial<NameStyle>,\r\n    frame: string,\r\n    format: string,\r\n    foil: Foil,\r\n}) => {\r\n    /** Custom style will be kept as is */\r\n    if (nameStyleType === 'custom') {\r\n        return nameStyle;\r\n    }\r\n\r\n    const isSpeedSkill = checkSpeedSkill({ frame });\r\n    const lightHeader = checkLightHeader(frame);\r\n\r\n    let contextualFont = 'Default';\r\n    if (format === 'ocg') contextualFont = 'OCG';\r\n    if (isSpeedSkill && format === 'tcg') contextualFont = 'Arial';\r\n\r\n    /** Predefined name style has dynamic font based on format unless explictly stated */\r\n    let contextualColor = {\r\n        fillStyle: lightHeader ? '#ffffff' : '#000000',\r\n        headTextFillStyle: lightHeader ? '#ffffff' : '#000000',\r\n    };\r\n    if (nameStyleType === 'predefined') {\r\n        const resultNameStyle = { ...PresetNameStyleMap[nameStyle.preset ?? 'commonB'].value };\r\n        if (!PresetNameStyleMap[resultNameStyle.preset ?? 'commonB'].value.font) {\r\n            resultNameStyle.font = contextualFont;\r\n        }\r\n\r\n        return {\r\n            ...contextualColor,\r\n            ...resultNameStyle,\r\n        };\r\n    }\r\n\r\n    let contextualOutline = isSpeedSkill\r\n        ? {\r\n            hasOutline: true,\r\n            lineWidth: 6,\r\n            strokeStyle: '#000',\r\n        }\r\n        : {};\r\n\r\n    const foilStyle = foil !== 'normal' ? PresetNameStyleMap[foil]?.value ?? {} : {};\r\n    const frameStyle = frame === 'zarc' ? PresetNameStyleMap.animeGold.value : {};\r\n\r\n    /** Auto name style has dynamic font, outline, color, fully affected by foil and frame */\r\n    return {\r\n        font: contextualFont,\r\n        ...contextualColor,\r\n        ...contextualOutline,\r\n        ...foilStyle,\r\n        ...frameStyle,\r\n    };\r\n};","// @ts-nocheck\r\n/* eslint-disable */\r\n// JSONCrush by Frank Force [MIT] https://github.com/KilledByAPixel/JSONCrush\r\n\"use strict\"\r\nexport const JSONCrush=(e,n=50)=>{for(var r=[],o=127;--o;)(48<=o&&57>=o||65<=o&&90>=o||97<=o&&122>=o||\"-_.!~*'()\".includes(String.fromCharCode(o)))&&r.push(String.fromCharCode(o));for(o=32;255>o;++o){var t=String.fromCharCode(o);\"\\\\\"==t||r.includes(t)||r.unshift(t)}e=e.replace(/\\u0001/g,\"\"),e=JSONCrushSwap(e),o=r.length,t=\"\";for(var i={},l=2;l<n;l++)for(var f=0;f<e.length-l;++f){var h=e.substr(f,l);if(!i[h]){var a=h.charCodeAt(0),g=h.charCodeAt(h.length-1);if(!(a=56320<=a&&57343>=a||55296<=g&&56319>=g)){for(a=1,g=e.indexOf(h,f+l);0<=g;++a)g=e.indexOf(h,g+l);1<a&&(i[h]=a)}}}for(;;){for(;o--&&e.includes(r[o]););if(0>o)break;n=r[o];var d=void 0;l=0,f=encodeURI(encodeURIComponent(n)).replace(/%../g,\"i\").length;for(let e in i)h=((h=i[e])-1)*encodeURI(encodeURIComponent(e)).replace(/%../g,\"i\").length-(h+1)*f,t.length||(h-=encodeURI(encodeURIComponent(\"\u0001\")).replace(/%../g,\"i\").length),0>=h?delete i[e]:h>l&&(d=e,l=h);if(!d)break;e=e.split(d).join(n)+n+d,t=n+t,l={};for(let r in i){for(i=r.split(d).join(n),f=0,h=e.indexOf(i);0<=h;++f)h=e.indexOf(i,h+i.length);1<f&&(l[i]=f)}i=l}return d=e,(r=t).length&&(d+=\"\u0001\"+r),encodeURIComponent(d+\"_\")},JSONUncrush=e=>{var n=(e=e.substring(0,e.length-1)).split(\"\u0001\");if(e=n[0],1<n.length){n=n[1];for(let r of n)e=(e=e.split(r)).join(e.pop())}return JSONCrushSwap(e,0)},JSONCrushSwap=(e,n=1)=>{const r=[['\"',\"'\"],[\"':\",\"!\"],[\",'\",\"~\"],[\"}\",\")\",\"\\\\\",\"\\\\\"],[\"{\",\"(\",\"\\\\\",\"\\\\\"]],o=(e,n)=>e.replace(new RegExp(`${(n[2]?n[2]:\"\")+n[0]}|${(n[3]?n[3]:\"\")+n[1]}`,\"g\"),e=>e===n[0]?n[1]:n[0]);if(n)for(n=0;n<r.length;++n)e=o(e,r[n]);else for(n=r.length;n--;)e=o(e,r[n]);return e}","import { clone, equals } from 'ramda';\r\nimport { JSONUncrush } from '../3rd';\r\nimport { Card, getDefaultCardOpacity, getDefaultCrop, getDefaultTextStyle, getEmptyCard, InternalCard } from '../model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkMonster } from './categorize';\r\n\r\nconst currentCardFieldShortenMap: Record<keyof Card, string | Record<string, string>> = {\r\n    version: 've',\r\n    format: 'fm',\r\n    frame: 'fr',\r\n    foil: 'fo',\r\n    opacity: {\r\n        _newKey: 'op',\r\n        body: 'opbd',\r\n        pendulum: 'oppd',\r\n        name: 'opnm',\r\n        text: 'optx',\r\n        boundless: 'opbl',\r\n        /** legacy */\r\n        artFrame: 'opaf',\r\n        artBorder: 'opab',\r\n        nameBorder: 'opnb',\r\n        baseFill: 'opbf',\r\n    },\r\n    finish: 'fn',\r\n    art: 'ar',\r\n    artData: 'ad',\r\n    artFit: 'af',\r\n    artSource: 'as',\r\n    artFinish: 'afn',\r\n    artCrop: {\r\n        _newKey: 'arc',\r\n        x: 'arx',\r\n        y: 'ary',\r\n        width: 'arw',\r\n        height: 'arh',\r\n        unit: 'aru',\r\n        aspect: 'ara',\r\n    },\r\n    hasBackground: 'hbg',\r\n    background: 'bg',\r\n    backgroundFit: 'bf',\r\n    backgroundData: 'bgd',\r\n    backgroundSource: 'bgs',\r\n    backgroundType: 'bgt',\r\n    backgroundCrop: {\r\n        _newKey: 'bgc',\r\n        x: 'bgx',\r\n        y: 'bgy',\r\n        width: 'bgw',\r\n        height: 'bgh',\r\n        unit: 'bgu',\r\n        aspect: 'bga',\r\n    },\r\n    name: 'na',\r\n    nameStyleType: 'nst',\r\n    effectStyle: {\r\n        _newKey: 'es',\r\n        condenseTolerant: 'cdtl',\r\n        fontStyle: 'efs',\r\n        upSize: 'eus',\r\n    },\r\n    pendulumStyle: {\r\n        _newKey: 'ps',\r\n        fontStyle: 'pfs',\r\n        upSize: 'pus',\r\n    },\r\n    nameStyle: {\r\n        _newKey: 'ns',\r\n        embossPitch: 'nsep',\r\n        embossThickness: 'nset',\r\n        embossYaw: 'nsey',\r\n        fillStyle: 'nsfs',\r\n        font: 'nsft',\r\n        gradientAngle: 'nsgd',\r\n        gradientColor: 'nscg',\r\n        hasEmboss: 'nshe',\r\n        hasGradient: 'nshg',\r\n        hasOutline: 'nshl',\r\n        hasShadow: 'nshs',\r\n        headTextFillStyle: 'nshfs',\r\n        lineColor: 'nslc',\r\n        lineOffsetX: 'nslox',\r\n        lineOffsetY: 'nsloy',\r\n        lineWidth: 'nslw',\r\n        pattern: 'nspt',\r\n        preset: 'nspr',\r\n        shadowBlur: 'nssb',\r\n        shadowColor: 'nssc',\r\n        shadowOffsetX: 'nssox',\r\n        shadowOffsetY: 'nssoy',\r\n    },\r\n    attribute: 'at',\r\n    subFamily: 'sf',\r\n    star: 'st',\r\n    starAlignment: 'sa',\r\n    cardIcon: 'it',\r\n    linkMap: 'lm',\r\n    isLink: 'il',\r\n    isPendulum: 'ip',\r\n    pendulumFrame: 'pf',\r\n    pendulumEffect: 'pe',\r\n    pendulumScaleRed: 'rs',\r\n    pendulumScaleBlue: 'bs',\r\n    pendulumSize: 'psi',\r\n    typeAbility: 'ta',\r\n    effect: 'ef',\r\n    setId: 'si',\r\n    atk: 'atk',\r\n    def: 'def',\r\n    password: 'pw',\r\n    sticker: 'sti',\r\n    isFirstEdition: 'ife',\r\n    isSpeedCard: 'isp',\r\n    isDuelTerminalCard: 'idt',\r\n    isLimitedEdition: 'ile',\r\n    isLegacyCard: 'ilc',\r\n    creator: 'cr',\r\n    furiganaHelper: 'fh',\r\n    effectTextStyle: 'ets',\r\n    pendulumTextStyle: 'pts',\r\n    statTextStyle: 'sts',\r\n    typeTextStyle: 'tts',\r\n    otherTextStyle: 'ots',\r\n    externalInfo: 'ei',\r\n};\r\nconst legacyCardFieldShortenMap = {\r\n    passcode: 'pc',\r\n    picture: 'pt',\r\n    pictureCrop: {\r\n        _newKey: 'ptc',\r\n        x: 'ptx',\r\n        y: 'pty',\r\n        width: 'ptw',\r\n        height: 'pth',\r\n        unit: 'ptu',\r\n        aspect: 'pta',\r\n    },\r\n};\r\nconst cardFieldShortenMap = {\r\n    ...currentCardFieldShortenMap,\r\n    ...legacyCardFieldShortenMap,\r\n};\r\n\r\nexport const compressCardData = (\r\n    card: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const condensedCard: Record<string, any> = {};\r\n    const normalizedCard = { ...card };\r\n\r\n    Object.keys(normalizedCard).forEach(fieldKey => {\r\n        const fieldValue = normalizedCard[fieldKey];\r\n\r\n        if (typeof fieldValue === 'object' && fieldValue !== null && !Array.isArray(fieldValue)) {\r\n            const newKey = shortenMap[fieldKey]?._newKey;\r\n\r\n            if (newKey) {\r\n                condensedCard[newKey] = compressCardData(fieldValue, shortenMap[fieldKey]);\r\n            }\r\n        } else {\r\n            const newFieldKey = shortenMap[fieldKey];\r\n\r\n            if (typeof newFieldKey === 'string') condensedCard[newFieldKey] = fieldValue;\r\n        }\r\n    });\r\n\r\n    return condensedCard;\r\n};\r\n\r\nexport const decompressCardData = (\r\n    condensedCard: Record<string, any>,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const decompressedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && condensedCard[shortendKey]) {\r\n                decompressedCard[fullKey] = decompressCardData(condensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (condensedCard[shortenKey] != null) {\r\n                decompressedCard[fullKey] = condensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return decompressedCard;\r\n};\r\nexport const legacyReverseCardDataShortener = (\r\n    condensedCard: Record<string, any> | string,\r\n    shortenMap: Record<string, any> = cardFieldShortenMap,\r\n) => {\r\n    const normalizedCondensedCard = typeof condensedCard === 'string'\r\n        ? JSON.parse(JSONUncrush(decodeURIComponent(condensedCard)))\r\n        : condensedCard;\r\n\r\n    const unshortenedCard: Record<string, any> = {};\r\n    Object.keys(shortenMap).forEach(fullKey => {\r\n        const shortenKey = shortenMap[fullKey];\r\n\r\n        if (typeof shortenKey === 'object' && shortenKey !== null && !Array.isArray(shortenKey)) {\r\n            const shortendKey = shortenKey?._newKey;\r\n\r\n            if (shortendKey && normalizedCondensedCard[shortendKey]) {\r\n                unshortenedCard[fullKey] = legacyReverseCardDataShortener(normalizedCondensedCard[shortendKey], shortenMap[fullKey]);\r\n            }\r\n        } else {\r\n            if (normalizedCondensedCard[shortenKey] != null) {\r\n                unshortenedCard[fullKey] = normalizedCondensedCard[shortenKey];\r\n            }\r\n        }\r\n    });\r\n    return unshortenedCard;\r\n};\r\n\r\nexport const legacyRebuildCardData = (\r\n    card: Record<string, any> | string,\r\n    isCondensed = false,\r\n) => {\r\n    let rebuiltCard: Record<string, any>;\r\n    if (isCondensed) {\r\n        rebuiltCard = legacyReverseCardDataShortener(card);\r\n    } else {\r\n        rebuiltCard = typeof card === 'string'\r\n            ? JSON.parse(card)\r\n            : card;\r\n    }\r\n\r\n    return migrateCardData(rebuiltCard);\r\n};\r\n\r\n/** Migrate old version of card data into the new version without information loss */\r\nexport const migrateCardData = (card: Record<string, any>, baseCard = getEmptyCard()): InternalCard => {\r\n    /** Ensure that we detech the actual version from incoming cards. */\r\n    delete baseCard.version;\r\n    const migratedCard = {\r\n        id: uuid(),\r\n        ...baseCard,\r\n        ...clone(card),\r\n    };\r\n\r\n    migratedCard.effectStyle = {\r\n        ...getEmptyCard().effectStyle,\r\n        ...migratedCard.effectStyle,\r\n    };\r\n\r\n    if (migratedCard.pendulumStyle == null) {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n        };\r\n    } else {\r\n        migratedCard.pendulumStyle = {\r\n            ...getEmptyCard().pendulumStyle,\r\n            ...migratedCard.pendulumStyle,\r\n        };\r\n    }\r\n\r\n    if (migratedCard.version == null) migratedCard.version = 1;\r\n    if (migratedCard.format == null) migratedCard.format = 'tcg';\r\n    if (migratedCard.pendulumFrame == null) migratedCard.pendulumFrame = 'auto';\r\n    if (migratedCard.pendulumSize == null) migratedCard.pendulumSize = 'medium';\r\n    if (migratedCard.finish == null) migratedCard.finish = [];\r\n\r\n    if (migratedCard.artFinish == null) migratedCard.artFinish = 'normal';\r\n    if ((migratedCard as any).picture && !card.art) migratedCard.art = (migratedCard as any).picture;\r\n    delete (migratedCard as any).picture;\r\n\r\n    if ((migratedCard as any).pictureCrop && !card.artCrop) migratedCard.artCrop = (migratedCard as any).pictureCrop;\r\n    delete (migratedCard as any).pictureCrop;\r\n\r\n    /** Seems like no image is fine for now. */\r\n    // if ((migratedCard.art ?? '') === '') migratedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n    if ((migratedCard.art ?? '') === '') migratedCard.art = '';\r\n    if ((migratedCard.artData ?? '') === '') migratedCard.artData = '';\r\n    if ((migratedCard.artSource ?? '') === '') migratedCard.artSource = 'online';\r\n    if (migratedCard.artFit == null) migratedCard.artFit = false;\r\n\r\n    if (typeof (migratedCard.opacity as any).artFrame === 'boolean' && migratedCard.opacity.boundless == null) {\r\n        migratedCard.opacity.boundless = !(migratedCard.opacity as any).artFrame;\r\n        delete (migratedCard.opacity as any).artFrame;\r\n    }\r\n    migratedCard.opacity = { ...getDefaultCardOpacity(), ...migratedCard.opacity };\r\n    delete (migratedCard.opacity as any).artFrame;\r\n\r\n    if ((migratedCard.background ?? '') === '') migratedCard.background = '';\r\n    if ((migratedCard.backgroundData ?? '') === '') migratedCard.backgroundData = '';\r\n    if ((migratedCard.backgroundSource ?? '') === '') migratedCard.backgroundSource = 'online';\r\n    if (migratedCard.backgroundFit == null) migratedCard.backgroundFit = false;\r\n    if (migratedCard.hasBackground == null\r\n        && (migratedCard.background || migratedCard.backgroundData || migratedCard.opacity.baseFill)\r\n    ) {\r\n        migratedCard.hasBackground = true;\r\n    }\r\n    migratedCard.backgroundCrop = {\r\n        ...getDefaultCrop(),\r\n        ...migratedCard.backgroundCrop,\r\n    };\r\n\r\n    if (migratedCard.isLink == null && migratedCard.frame === 'link') {\r\n        migratedCard.isLink = true;\r\n    }\r\n\r\n    if ((migratedCard as any).kanjiHelper && !card.furiganaHelper) migratedCard.furiganaHelper = (migratedCard as any).kanjiHelper;\r\n    delete (migratedCard as any).kanjiHelper;\r\n    if (migratedCard.furiganaHelper === undefined) migratedCard.furiganaHelper = true;\r\n\r\n    if ((migratedCard as any).passcode && !card.password) migratedCard.password = (migratedCard as any).passcode;\r\n    delete (migratedCard as any).passcode;\r\n\r\n    if (!migratedCard.effectTextStyle) migratedCard.effectTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.pendulumTextStyle) migratedCard.pendulumTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.typeTextStyle) migratedCard.typeTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.statTextStyle) migratedCard.statTextStyle = getDefaultTextStyle();\r\n    if (!migratedCard.otherTextStyle) migratedCard.otherTextStyle = getDefaultTextStyle();\r\n    if (typeof migratedCard.isLimitedEdition === 'undefined') migratedCard.isLimitedEdition = false;\r\n    if (typeof migratedCard.isLegacyCard === 'undefined') migratedCard.isLegacyCard = false;\r\n    if (!migratedCard.starAlignment) migratedCard.starAlignment = 'auto';\r\n\r\n    if (migratedCard.version === 0 || migratedCard.version === 1) {\r\n        migratedCard.version = 2;\r\n\r\n        const { pendulumFrame, isPendulum, atk, def, isLink, linkMap, frame } = migratedCard;\r\n        /**\r\n         * For older card, we have a detailed check to decide whether to display stats or not.\r\n         * \r\n         * In newer card, we simplify the test, if stat is a valid value, it will be shown. When user change to spell frame for example, the stat field is cleared. This is much less a headache, even though we always want to preserve data whenever possible.\r\n         */\r\n        const isMonster = checkMonster({ frame });\r\n        const statInEffect = (pendulumFrame !== 'auto' || isPendulum)\r\n            ? !!(atk || def || (isLink && linkMap.length))\r\n            : isMonster;\r\n\r\n        if (!statInEffect) {\r\n            migratedCard.atk = '';\r\n            migratedCard.def = '';\r\n        }\r\n    }\r\n\r\n    return migratedCard;\r\n};\r\n\r\nexport const checkYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'isFirstEdition' in object\r\n            && 'typeAbility' in object\r\n            && 'setId' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\nexport const checkCompactYgoCarderCard = (object: Record<string, any>): object is Card => {\r\n    try {\r\n        return 'ife' in object\r\n            && 'ta' in object\r\n            && 'si' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nexport const ygoCarderToExportableData = (\r\n    card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n) => {\r\n    if (card.artSource === 'offline' || (card.hasBackground && card.backgroundSource === 'offline')) {\r\n        return {\r\n            isPartial: true,\r\n            result: compressCardData(card),\r\n        };\r\n    }\r\n    /** Remove art data here, it will easily exceed the limit of text area */\r\n    const normalizedCard = { ...card, artData: '', backgroundData: '' };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result: compressCardData(normalizedCard),\r\n    };\r\n};\r\n\r\nconst ROUNDING_THRESHOLD = 0.1;\r\nconst isPartialNumberEqual = (numberLeft: any, numberRight: any) => {\r\n    if (typeof numberLeft !== typeof numberRight) return false;\r\n    if (typeof numberLeft === 'number' && typeof numberRight === 'number') return Math.abs(numberLeft - numberRight) <= ROUNDING_THRESHOLD;\r\n    return numberLeft === numberRight;\r\n};\r\nconst isCropDataEqual = (cropLeft: Partial<ReactCrop.Crop>, cropRight: Partial<ReactCrop.Crop>) => {\r\n    const {\r\n        aspect: aspectLeft,\r\n        height: heightLeft,\r\n        width: widthLeft,\r\n        x: xLeft,\r\n        y: yLeft,\r\n        unit: unitLeft,\r\n    } = cropLeft ?? {};\r\n    const {\r\n        aspect: aspectRight,\r\n        height: heightRight,\r\n        width: widthRight,\r\n        x: xRight,\r\n        y: yRight,\r\n        unit: unitRight,\r\n    } = cropRight ?? {};\r\n\r\n    return isPartialNumberEqual(aspectLeft, aspectRight)\r\n        && isPartialNumberEqual(heightLeft, heightRight)\r\n        && isPartialNumberEqual(widthLeft, widthRight)\r\n        && isPartialNumberEqual(xLeft, xRight)\r\n        && isPartialNumberEqual(yLeft, yRight)\r\n        && unitLeft === unitRight;\r\n};\r\n/** Cropped data is rather unpredictable, and can produce rounding error that is hard to get a hold off. So when comparing card data we ignore any difference that is smaller than a threshold */\r\nexport const isCardDataEqual = (cardLeft: InternalCard, cardRight: InternalCard) => {\r\n    const {\r\n        artCrop: artCropLeft,\r\n        backgroundCrop: backgroundCropLeft,\r\n        ...restLCard\r\n    } = cardLeft;\r\n    const {\r\n        artCrop: artCropRight,\r\n        backgroundCrop: backgroundCropRight,\r\n        ...restRCard\r\n    } = cardRight;\r\n\r\n    return equals(restLCard, restRCard)\r\n        && isCropDataEqual(artCropLeft, artCropRight)\r\n        && isCropDataEqual(backgroundCropLeft, backgroundCropRight);\r\n};","export const normalizeCardName = (name: string) => {\r\n    try {\r\n        return name\r\n        .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n        .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return name;\r\n    }\r\n};\r\nexport const normalizeCardEffect = (effect: string) => {\r\n    try {\r\n        return effect\r\n            .replaceAll(/\\{([^{}|]*)\\|+?[^{}|]*\\}/g, '$1')\r\n            .replaceAll(/(^\\[|\\[\\[|{|{{)([^{}[\\]]*)[}\\]]{1,2}/gm, '$2');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return effect;\r\n    }\r\n};\r\n/** Sample image before normalization: `https://images.ygoprodeck.com/images/cards_cropped/46986414.jpg`. We convert into yugicrawler - another public API that allow us to bypass the CORS restriction for these images. If yugicrawler decide that it does not want to support our operation, we have no other options except force user to upload the image manually. */\r\nexport const isYgoprodeckImage = (link: string) => {\r\n    try {\r\n        return link.startsWith('https://images.ygoprodeck.com/images/cards_cropped');\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};","export const isImageData = (data: any) => typeof data === 'string' && data.startsWith('data:image/');\r\n\r\nexport const downloadBlob = (name: string, blob: Blob, type: string) => {\r\n    const link = document.createElement('a');\r\n\r\n    link.download = name;\r\n    link.href = window.URL.createObjectURL(blob);\r\n    link.dataset.downloadurl = [type, link.download, link.href].join(':');\r\n\r\n    const downloadEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true,\r\n    });\r\n\r\n    link.dispatchEvent(downloadEvent);\r\n    link.remove();\r\n};","import {\r\n    Card,\r\n    OtherMakerCard,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    PresetNameStyle,\r\n    PresetNameStyleMap,\r\n    getDefaultNameStyle,\r\n    PendulumSize,\r\n} from 'src/model';\r\nimport { normalizeCardEffect, normalizeCardName } from './normalize';\r\nimport { isImageData } from './other';\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst boxSizeMap: Record<string, string> = {\r\n    large: 'Large',\r\n    medium: 'Normal',\r\n    small: 'Small',\r\n};\r\nconst reverseBoxSizeMap = Object.entries(boxSizeMap).reduce<Record<string, PendulumSize>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue as PendulumSize;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'Earth',\r\n    LIGHT: 'Light',\r\n    DARK: 'Dark',\r\n    FIRE: 'Fire',\r\n    WIND: 'Wind',\r\n    WATER: 'Water',\r\n    SPELL: 'Spell',\r\n    TRAP: 'Trap',\r\n    DIVINE: 'Divine',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'Normal',\r\n    effect: 'Effect',\r\n    ritual: 'Ritual',\r\n    fusion: 'Fusion',\r\n    synchro: 'Synchro',\r\n    xyz: 'Xyz',\r\n    link: 'Link',\r\n    token: 'Token',\r\n    spell: 'Spell',\r\n    trap: 'Trap',\r\n    'dark-synchro': 'Dark Synchro',\r\n    zarc: 'Unity',\r\n    'speed-skill': 'Skill',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n    'common': {\r\n        key: '',\r\n    },\r\n    'rare': {\r\n        key: 'rare--',\r\n        text: 'rare',\r\n    },\r\n    'secret': {\r\n        key: 'secretGradient-type3-',\r\n        text: 'secretGradient',\r\n        artFinish: 'type3',\r\n    },\r\n    'ultra': {\r\n        key: 'ultra-type3-',\r\n        text: 'ultra',\r\n        artFinish: 'type3',\r\n    },\r\n    'rainbow': {\r\n        key: 'platinum-type1-type1',\r\n        text: 'platinum',\r\n        artFinish: 'type1',\r\n        finish: ['type1'],\r\n    },\r\n};\r\nconst rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorKey, vendorValue] = cur;\r\n    acc[vendorValue.key] = vendorKey;\r\n\r\n    return acc;\r\n}, {});\r\n\r\n/**\r\n * Why does artRef here?\r\n * \r\n * The main problem is that ygocarder deal with a full image and allow user to crop their best fit, while:\r\n * * Other vendors merely squeeze them to fit inside the boundary (and therefore may destroy its ratio).\r\n * * Other vendor do not store online link, even if you use online link, it will get the data and converted them into base64 regardless.\r\n * \r\n * That means the crop and full image information only matter for ygocarder data, as other vendor does not support any operation regarding the full image, and only care about the cropped part. So when we export ygocarder data, we will retain full image information / image link, but when export other vendor data, we only get the cropped part of the image, hence while we need the ref here.\r\n */\r\nexport const ygoCarderToCardMakerData = (\r\n    card: Card,\r\n    artRef?: HTMLCanvasElement | null,\r\n): { result: OtherMakerCard, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        star,\r\n        typeAbility,\r\n        subFamily,\r\n        effect,\r\n        atk,\r\n        def,\r\n        art,\r\n        artData,\r\n        artSource,\r\n        password,\r\n        creator,\r\n        attribute,\r\n        setId,\r\n        pendulumEffect,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        isPendulum,\r\n        linkMap,\r\n        frame,\r\n        externalInfo,\r\n        nameStyle,\r\n        nameStyleType,\r\n        artFinish,\r\n        finish,\r\n    } = card;\r\n    const normalizedName = normalizeCardName(name);\r\n    const normalizedEffect = normalizeCardEffect(effect);\r\n    const normalizedPendulumEffect = normalizeCardEffect(pendulumEffect);\r\n    const normalizedIcon = cardIconMap[subFamily];\r\n    const normalizedAttribute = attributeMap[attribute];\r\n    const normalizedFrame = frameMap[frame];\r\n    const normalizedRarity = nameStyleType === 'predefined'\r\n        ? rarityMap[\r\n            [\r\n                nameStyle.preset,\r\n                artFinish,\r\n                finish.join('|'),\r\n            ].join('-')\r\n        ]\r\n        : 'common';\r\n    const { pendulum, rarity, ...rest } = externalInfo ?? {};\r\n\r\n    let isPartial = name !== normalizedName\r\n        || effect !== normalizedEffect\r\n        || pendulumEffect !== normalizedPendulumEffect\r\n        || normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const result = {\r\n        version: '1.0.0',\r\n        name: normalizedName,\r\n        level: `${star}`,\r\n        type: typeAbility.join('/'),\r\n        icon: normalizedIcon ?? '',\r\n        effect: normalizedEffect,\r\n        atk,\r\n        def,\r\n        serial: password,\r\n        copyright: creator,\r\n        attribute: normalizedAttribute ?? 'None',\r\n        id: setId,\r\n        pendulum: {\r\n            enabled: isPendulum,\r\n            effect: normalizedPendulumEffect,\r\n            blue: pendulumScaleBlue,\r\n            red: pendulumScaleRed,\r\n            boxSize: boxSizeMap[pendulumSize],\r\n            boxSizeEnabled: true,\r\n            ...pendulum,\r\n        },\r\n        variant: 'Normal',\r\n        link: {\r\n            topLeft: linkMap.includes('1') ? true : false,\r\n            topCenter: linkMap.includes('2') ? true : false,\r\n            topRight: linkMap.includes('3') ? true : false,\r\n            middleLeft: linkMap.includes('4') ? true : false,\r\n            middleRight: linkMap.includes('6') ? true : false,\r\n            bottomLeft: linkMap.includes('7') ? true : false,\r\n            bottomCenter: linkMap.includes('8') ? true : false,\r\n            bottomRight: linkMap.includes('9') ? true : false,\r\n        },\r\n        layout: normalizedFrame ?? 'Normal',\r\n        boxSize: pendulumSize === 'large' ? 'Small' : 'Normal',\r\n        rarity: normalizedRarity ?? rarity,\r\n        /** For other card maker, inline art data is preferred over art link */\r\n        image: artRef\r\n            ? artRef.toDataURL('image/jpeg')\r\n            : artSource === 'offline'\r\n                ? artData\r\n                : art,\r\n        ...rest,\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};\r\n\r\nexport const cardMakerToYgoCarderData = (card: OtherMakerCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        name,\r\n        atk,\r\n        def,\r\n        attribute,\r\n        effect,\r\n        boxSize,\r\n        copyright,\r\n        icon,\r\n        id,\r\n        image,\r\n        layout,\r\n        level,\r\n        link,\r\n        pendulum,\r\n        rarity,\r\n        serial,\r\n        type,\r\n        variant,\r\n        version,\r\n    } = card;\r\n    const { red, blue, boxSize: pendulumBoxSize, boxSizeEnabled, effect: pendulumEffect, enabled } = pendulum;\r\n    const normalizedIcon = reverseCardIconMap[icon];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const normalizedFrame = reverseFrameMap[layout];\r\n    const useImageData = isImageData(image);\r\n    const levelAsNumber = parseInt(level);\r\n    const normalizedRarity = rarity ? reverseRarityMap[rarity.toLowerCase()] : undefined;\r\n\r\n    let isPartial = normalizedIcon === undefined\r\n        || normalizedAttribute === undefined\r\n        || normalizedFrame === undefined\r\n        || normalizedRarity === undefined;\r\n    const {\r\n        finish,\r\n        artFinish,\r\n        text,\r\n    } = normalizedRarity ?? {};\r\n    const namePreset = text ? PresetNameStyleMap[text as PresetNameStyle] : null;\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        finish: finish ?? [],\r\n        name,\r\n        nameStyleType: text ? 'predefined' : 'auto',\r\n        nameStyle: namePreset\r\n            ? namePreset.value\r\n            : getDefaultNameStyle(),\r\n        atk,\r\n        def,\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect,\r\n        creator: copyright,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: id,\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: `${levelAsNumber}` === level && levelAsNumber <= 13 ? levelAsNumber : level,\r\n        typeAbility: type.split('/').map(entry => entry.trim()),\r\n        art: useImageData ? '' : image,\r\n        artFit: true,\r\n        artData: useImageData ? image : '',\r\n        artSource: useImageData ? 'offline' : 'online',\r\n        artFinish: artFinish ?? 'normal',\r\n        isLink: normalizedFrame === 'link' && link != null,\r\n        linkMap: [\r\n            link?.topLeft === true ? '1' : null,\r\n            link?.topCenter === true ? '2' : null,\r\n            link?.topRight === true ? '3' : null,\r\n            link?.middleLeft === true ? '4' : null,\r\n            link?.middleRight === true ? '6' : null,\r\n            link?.bottomLeft === true ? '7' : null,\r\n            link?.bottomCenter === true ? '8' : null,\r\n            link?.bottomRight === true ? '9' : null,\r\n        ].filter(entry => typeof entry === 'string'),\r\n        isPendulum: enabled,\r\n        pendulumScaleBlue: blue,\r\n        pendulumScaleRed: red,\r\n        pendulumEffect: pendulumEffect,\r\n        pendulumSize: reverseBoxSizeMap[pendulumBoxSize],\r\n        password: serial,\r\n        externalInfo: {\r\n            version,\r\n            variant,\r\n            boxSize,\r\n            rarity,\r\n            pendulum: {\r\n                boxSize: pendulumBoxSize,\r\n                boxSizeEnabled,\r\n            },\r\n        }\r\n    };\r\n\r\n    return {\r\n        isPartial,\r\n        result,\r\n    };\r\n};","import {\r\n    Card,\r\n    getEmptyCard,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    YgoproDeckCard,\r\n    getDefaultYgoproDeckCard,\r\n    copyrightMap,\r\n} from 'src/model';\r\nimport { checkExtraDeckMonster } from './categorize';\r\n\r\nexport const checkYgoproDeckCard = (object: Record<string, any>): object is YgoproDeckCard => {\r\n    try {\r\n        /** No need to check the whole object (we mainly want to distinguish this with YGOPro structure), so just need a few presentative fields */\r\n        return 'id' in object\r\n            && 'frameType' in object\r\n            && 'card_sets' in object;\r\n    } catch (e) {\r\n        console.error(e);\r\n        return false;\r\n    }\r\n};\r\n\r\nconst cardIconMap: Record<string, string> = {\r\n    CONTINUOUS: 'Continuous',\r\n    COUNTER: 'Counter',\r\n    EQUIP: 'Equip',\r\n    FIELD: 'Field',\r\n    'QUICK-PLAY': 'Quick-Play',\r\n    RITUAL: 'Ritual',\r\n    [NO_ICON]: 'None',\r\n};\r\nconst reverseCardIconMap = Object.entries(cardIconMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst attributeMap: Record<string, string> = {\r\n    EARTH: 'EARTH',\r\n    LIGHT: 'LIGHT',\r\n    DARK: 'DARK',\r\n    FIRE: 'FIRE',\r\n    WIND: 'WIND',\r\n    WATER: 'WATER',\r\n    SPELL: 'SPELL',\r\n    TRAP: 'TRAP',\r\n    DIVINE: 'DIVINE',\r\n};\r\nconst reverseAttributeMap = Object.entries(attributeMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst frameMap: Record<string, string> = {\r\n    normal: 'normal',\r\n    effect: 'effect',\r\n    ritual: 'ritual',\r\n    fusion: 'fusion',\r\n    synchro: 'synchro',\r\n    xyz: 'xyz',\r\n    link: 'link',\r\n    token: 'token',\r\n    spell: 'spell',\r\n    trap: 'trap',\r\n    'speed-skill': 'skill',\r\n    normal_pendulum: 'normal_pendulum',\r\n    effect_pendulum: 'effect_pendulum',\r\n    ritual_pendulum: 'ritual_pendulum',\r\n    fusion_pendulum: 'fusion_pendulum',\r\n    synchro_pendulum: 'synchro_pendulum',\r\n    xyz_pendulum: 'xyz_pendulum',\r\n};\r\nconst reverseFrameMap = Object.entries(frameMap).reduce<Record<string, string>>((acc, cur) => {\r\n    const [vendorValue, ourValue] = cur;\r\n    acc[ourValue] = vendorValue;\r\n\r\n    return acc;\r\n}, {});\r\n\r\nconst reverseLinkMap: Record<string, string> = {\r\n    'Top-Left': '1',\r\n    'Top': '2',\r\n    'Top-Right': '3',\r\n    'Left': '4',\r\n    'Right': '6',\r\n    'Bottom-Left': '7',\r\n    'Bottom': '8',\r\n    'Bottom-Right': '9',\r\n};\r\n\r\n// const reverseRarityMap: Record<string, { key: string, text?: string, artFinish?: string, finish?: string[] }> = {\r\n//     'common': {\r\n//         key: '',\r\n//     },\r\n//     'rare': {\r\n//         key: 'rare--',\r\n//         text: 'rare',\r\n//     },\r\n//     'secret': {\r\n//         key: 'secretGradient-type3-',\r\n//         text: 'secretGradient',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'ultra': {\r\n//         key: 'ultra-type3-',\r\n//         text: 'ultra',\r\n//         artFinish: 'type3',\r\n//     },\r\n//     'rainbow': {\r\n//         key: 'platinum-type1-type1',\r\n//         text: 'platinum',\r\n//         artFinish: 'type1',\r\n//         finish: ['type1'],\r\n//     },\r\n// };\r\n// const rarityMap = Object.entries(reverseRarityMap).reduce<Record<string, string>>((acc, cur) => {\r\n//     const [vendorKey, vendorValue] = cur;\r\n//     acc[vendorValue.key] = vendorKey;\r\n\r\n//     return acc;\r\n// }, {});\r\n\r\n/**\r\n * We have no use case to convert ygoCarder into YgoproDeck yet.\r\n */\r\nexport const ygoCarderToYgoproDeckData = (\r\n    _card: Card,\r\n    _artRef?: HTMLCanvasElement | null,\r\n): { result: YgoproDeckCard, isPartial: boolean } => {\r\n    return {\r\n        isPartial: false,\r\n        result: getDefaultYgoproDeckCard(),\r\n    };\r\n};\r\n\r\nexport const ygoproDeckToYgoCarderData = (card: YgoproDeckCard): { result: Card, isPartial: boolean } => {\r\n    const {\r\n        atk,\r\n        attribute,\r\n        card_images,\r\n        card_sets,\r\n        def,\r\n        desc,\r\n        frameType,\r\n        id,\r\n        level,\r\n        monster_desc,\r\n        name,\r\n        pend_desc,\r\n        race,\r\n        scale,\r\n        typeline,\r\n        linkval,\r\n        linkmarkers,\r\n    } = card;\r\n    const normalizedIcon = reverseCardIconMap[race];\r\n    const normalizedAttribute = reverseAttributeMap[attribute];\r\n    const [normalizedFrame, subFrame] = reverseFrameMap[frameType].split('_');\r\n\r\n    /** Normal description is wrapped inside a double single quotes, we have no use for it here. */\r\n    const normalizedMonsterEffect = (monster_desc ? monster_desc.replaceAll(/^''|''$/g, '') : undefined)\r\n        ?? (desc ? desc.replaceAll(/^''|''$/g, '') : '');\r\n    /** Try to being clever */\r\n    const splittedMonsterEffect = normalizedMonsterEffect.split('\\n');\r\n    const formattedMonsterEffect = (checkExtraDeckMonster({\r\n        frame: normalizedFrame ?? 'normal'\r\n    }) && splittedMonsterEffect.length > 1)\r\n        ? [\r\n            `[${splittedMonsterEffect[0].replaceAll('\\r', '')}]`,\r\n            ...splittedMonsterEffect.slice(1),\r\n        ].join('\\n')\r\n        : normalizedMonsterEffect;\r\n    const normalizedPendulumEffect = pend_desc\r\n        ? pend_desc.replaceAll(/^''|''$/g, '')\r\n        : '';\r\n    const cardImage = card_images[0].image_url_cropped;\r\n\r\n    const baseCard = getEmptyCard();\r\n    const result: Card = {\r\n        ...baseCard,\r\n        name,\r\n        atk: (atk < 0 || atk == null) ? '?' : `${atk}`,\r\n        def: def\r\n            ? (def < 0 || def == null) ? '?' : `${def}`\r\n            : '0',\r\n        attribute: normalizedAttribute ?? NO_ATTRIBUTE,\r\n        effect: formattedMonsterEffect,\r\n        subFamily: normalizedIcon ?? NO_ICON,\r\n        setId: card_sets[card_sets.length - 1]?.set_code ?? '',\r\n        frame: normalizedFrame ?? 'normal',\r\n        star: frameType === 'link' && linkval ? linkval : level,\r\n        typeAbility: typeline\r\n            ? typeline\r\n            : frameType === 'spell'\r\n                ? ['Spell Card']\r\n                : frameType === 'trap'\r\n                    ? ['Trap Card']\r\n                    : [],\r\n        art: cardImage,\r\n        artSource: 'online',\r\n        artCrop: {\r\n            ...baseCard.artCrop,\r\n            y: 0,\r\n        },\r\n        isLink: normalizedFrame === 'link' && Array.isArray(linkmarkers),\r\n        linkMap: (linkmarkers ?? []).map(marker => reverseLinkMap[marker]),\r\n        isPendulum: subFrame === 'pendulum',\r\n        pendulumScaleBlue: scale == null ? '0' : `${scale}`,\r\n        pendulumScaleRed: scale == null ? '0' : `${scale}`,\r\n        pendulumEffect: normalizedPendulumEffect,\r\n        password: `${id}`.padStart(8, '0'),\r\n        creator: copyrightMap.tcg[0],\r\n    };\r\n\r\n    return {\r\n        isPartial: false,\r\n        result,\r\n    };\r\n};","const MAX_CONDENSER_THRESHOLD = 1000;\r\n/** Simple iteration method\r\n * 1 The initial threshold is 1000, initial step is 100, max step count is 30.\r\n * 1. If current threshold satisfy the driver, or step count is already 0, return the current threshold.\r\n * 1. Step down the threshold, and keep stepdown until driver return satisfy signal, reduce step count by 1 for each step made.\r\n * 1. Otherwise if step value is less than 1, finish with the current threshold.\r\n * 1. Otherwise step up the threshold by 1 step, and cut down the step value tenfold. Repeat from step 2.\r\n * \r\n * Example, we want to reach satisfy target at 487:\r\n *\r\n```\r\nCurr  Step    Count Explain\r\n1000  100     30    Initial\r\n900   100     29    Down\r\n800   100     28    Down\r\n700   100     27    Down\r\n600   100     26    Down\r\n500   100     25    Down\r\n400   100     24    Down\r\n500   10      24    Up => Step / 10\r\n490   10      23    Down\r\n480   10      22    Down\r\n490   1       21    Up => Step / 10\r\n489   1       20    Down\r\n488   1       19    Down\r\n487   1       18    Down => Satisfy\r\n * ```\r\n */\r\nexport const createCondenser = (minThreshold = 0, maxThreshold = MAX_CONDENSER_THRESHOLD) => {\r\n    let min = minThreshold;\r\n    let max = maxThreshold;\r\n    let median = max;\r\n    let lastEffective = median;\r\n    let iterateCount = 30;\r\n    let magnitude = 100;\r\n    let magnitudeReductionRatio = 10;\r\n\r\n    const reverseSearch = () => {\r\n        if (magnitude === 1) finish();\r\n        else {\r\n            median += magnitude;\r\n            magnitude /= magnitudeReductionRatio;\r\n            median -= magnitude;\r\n        }\r\n\r\n        return Math.min(median, max);\r\n    };\r\n\r\n    const searchDown = () => {\r\n        median -= magnitude;\r\n        iterateCount -= 1;\r\n\r\n        return median;\r\n    };\r\n\r\n    const reset = (minThreshold = min, maxThreshold = max) => {\r\n        min = minThreshold;\r\n        max = maxThreshold;\r\n        median = maxThreshold;\r\n        iterateCount = 30;\r\n        magnitude = 100;\r\n        lastEffective = maxThreshold;\r\n    };\r\n\r\n    const getMedian = () => median;\r\n    const setMedian = (newMedian: number) => median = newMedian;\r\n\r\n    const setLastEffective = (forceMedian = median) => lastEffective = forceMedian;\r\n    const getLastEffective = () => lastEffective;\r\n    const applyLastEffective = () => {\r\n        median = lastEffective;\r\n        iterateCount = -1;\r\n        return median;\r\n    };\r\n\r\n    const getIterateCount = () => iterateCount;\r\n    const finish = () => iterateCount = -1;\r\n\r\n    return {\r\n        reset,\r\n        searchDown,\r\n        reverseSearch,\r\n        finish,\r\n        getMedian,\r\n        setMedian,\r\n        setLastEffective,\r\n        getLastEffective,\r\n        applyLastEffective,\r\n        getIterateCount,\r\n    };\r\n};\r\n\r\nexport const condense = (\r\n    worker: (currentMedian: number) => boolean,\r\n    minThreshold = 100,\r\n) => {\r\n    let effectiveMedian = MAX_CONDENSER_THRESHOLD;\r\n    const condenser = createCondenser();\r\n    while (condenser.getIterateCount() >= 0) {\r\n        if (condenser.getIterateCount() <= 0) {\r\n            /** Support minThreshold here, we don't want to deal with 0. In practices, most text become unreadable when condense with ratio of 400 or lower. */\r\n            const finalMedian = condenser.getMedian();\r\n\r\n            effectiveMedian = finalMedian;\r\n            break;\r\n        } else {\r\n            const satisfy = worker(condenser.getMedian());\r\n\r\n            if (!satisfy && condenser.getMedian() > 0) {\r\n                /** If overflow, lower the median and apply it */\r\n                condenser.searchDown();\r\n            } else {\r\n                /** Return immediately if max threshold is enough to satisfy the driver */\r\n                if (condenser.getMedian() === MAX_CONDENSER_THRESHOLD) break;\r\n                else effectiveMedian = condenser.reverseSearch();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Ensure worker does not run with undesirable threshold (it may have side effect depend on the current ratio, for example, scale canvas). So we run worker with the final median one last time to make sure any side effects from it is affected by the ratio we gonna return.\r\n     */\r\n    const forcedMedian = Math.max(minThreshold, Math.min(effectiveMedian, MAX_CONDENSER_THRESHOLD));\r\n    if (forcedMedian !== effectiveMedian) worker(forcedMedian);\r\n    return forcedMedian;\r\n};","import { FontData, FontGetter, FontSizeData } from 'src/model';\r\n\r\nexport const createFontGetter = (props?: {\r\n    defaultWeight?: '' | 'bold',\r\n    defaultStyle?: '' | 'italic' | 'small-caps',\r\n    defaultSize?: number | `${number}px`,\r\n    defaultFamily?: string,\r\n}): FontGetter => {\r\n    const {\r\n        defaultWeight = '',\r\n        defaultStyle = '',\r\n        defaultSize = '10px',\r\n        defaultFamily = 'Arial',\r\n    } = props ?? {};\r\n    let weight = defaultWeight;\r\n    let style = defaultStyle;\r\n    let size: `${number}px` = typeof defaultSize === 'number' ? `${defaultSize}px` : defaultSize;\r\n    let sizeAsNumber = typeof defaultSize === 'number' ? defaultSize : parseFloat(defaultSize.replaceAll('px', ''));\r\n    let family = defaultFamily;\r\n\r\n    return {\r\n        getFont: () => `${[style, weight, size, family].filter(part => part !== '').join(' ')}, Arial`,\r\n        getFontInfo: () => ({ style, size, family, sizeAsNumber, weight }),\r\n        setWeight(nextWeight) {\r\n            weight = nextWeight;\r\n            return this;\r\n        },\r\n        setStyle(nextStyle) {\r\n            style = nextStyle;\r\n            return this;\r\n        },\r\n        setSize(nextSize) {\r\n            const calculatedSize = typeof nextSize === 'function'\r\n                ? nextSize(sizeAsNumber)\r\n                : nextSize;\r\n            size = typeof calculatedSize === 'number'\r\n                ? `${calculatedSize}px`\r\n                : calculatedSize;\r\n            sizeAsNumber = typeof calculatedSize === 'number'\r\n                ? calculatedSize\r\n                : parseFloat(calculatedSize.replaceAll('px', ''));\r\n            return this;\r\n        },\r\n        setFamily(nextFamily) {\r\n            family = nextFamily;\r\n            return this;\r\n        },\r\n    };\r\n};\r\n\r\nexport const getDynamicFont = ({\r\n    heightCap,\r\n    lineCount,\r\n}: {\r\n    heightCap: number,\r\n    lineCount: number,\r\n}): FontSizeData => {\r\n    return {\r\n        bulletWidth: Math.round(heightCap / lineCount * 0.9),\r\n        fontSize: heightCap / lineCount * 0.9,\r\n        lineHeight: heightCap / lineCount,\r\n        lineCount,\r\n        bulletOffset: 1,\r\n    };\r\n};\r\nexport const injectDynamicFont = (fontData: FontData, dynamicFontOption: Parameters<typeof getDynamicFont>[0]): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: [\r\n            ...fontData.fontList,\r\n            getDynamicFont(dynamicFontOption),\r\n        ]\r\n    };\r\n};","import { ColorPoint } from 'react-linear-gradient-picker';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nexport const getDefaultGradientPalette = (): ColorPoint[] => parsePalette(getDefaultNameStyle().gradientColor);\r\n\r\nexport const stringifyPalette = (palette?: ColorPoint[]) => (palette ?? [])\r\n    .map(({ color, offset }) => `${offset}|${color}`).join(',');\r\nexport const parsePalette = (stringifiedPalette?: string): ColorPoint[] => stringifiedPalette\r\n    ? stringifiedPalette.split(',')\r\n        .map((entry, index) => {\r\n            const [offset, color] = entry.split('|');\r\n\r\n            return { color, offset, id: index + 1 };\r\n        })\r\n    : parsePalette(getDefaultNameStyle().gradientColor);","import { useCallback, useState } from 'react';\r\n\r\nexport const useRefresh = (): [() => void, number] => {\r\n    const [cnt, setCnt] = useState(0);\r\n    const refresh = useCallback(() => {\r\n        setCnt(cur => cur + 1);\r\n    }, []);\r\n\r\n    return [refresh, cnt];\r\n};","export const getNavigationProps = ({\r\n    debug,\r\n    optionLength,\r\n    stopPropagation = false,\r\n    setFocus,\r\n    onTrigger,\r\n    onCancel,\r\n    onKeyPress,\r\n}: {\r\n    debug?: string,\r\n    optionLength: number,\r\n    stopPropagation?: boolean,\r\n    setFocus: (value: React.SetStateAction<number>) => void,\r\n    onTrigger: () => void,\r\n    onCancel?: () => void,\r\n    onKeyPress?: (ev: React.KeyboardEvent<any>) => (void | boolean),\r\n}) => {\r\n    return {\r\n        tabIndex: 0,\r\n        onFocus: () => {\r\n            if (debug) console.info('Navigation Focus', debug);\r\n            setFocus(0);\r\n        },\r\n        onBlur: () => {\r\n            if (debug) console.info('Navigation Blur', debug);\r\n            setFocus(-1);\r\n        },\r\n        onKeyDown: (e: React.KeyboardEvent<any>) => {\r\n            if (stopPropagation) e.stopPropagation();\r\n            if (debug) console.info('Navigation Keydown', debug, e.key);\r\n            if (onKeyPress?.(e) === false) return;\r\n            if (e.key === 'ArrowRight' || e.key === 'ArrowDown') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur + 1) % optionLength);\r\n            }\r\n            else if (e.key === 'ArrowLeft' || e.key === 'ArrowUp') {\r\n                e.preventDefault();\r\n                setFocus(cur => Math.max(0, optionLength + cur - 1) % optionLength);\r\n            }\r\n            else if (e.key === 'Enter' || e.key === ' ') {\r\n                onTrigger();\r\n            }\r\n            else if (e.key === 'Escape') {\r\n                onCancel?.();\r\n            }\r\n        },\r\n    };\r\n};","export const seedDistributionCalculator = (seedIncrement: number) => {\r\n    const runSeed = () => {\r\n        let count = 1;\r\n        let current = seedIncrement;\r\n        while (current < Math.random()) {\r\n            current += seedIncrement;\r\n            count += 1;\r\n        }\r\n        return count;\r\n    };\r\n    let distributionMap: Record<string, number> = {};\r\n    for (let i = 0; i < 100000; i++) {\r\n        const result = runSeed();\r\n        if (distributionMap[result] !== undefined) distributionMap[result] += 1;\r\n        else distributionMap[result] = 1;\r\n    }\r\n    return distributionMap;\r\n};\r\n/** We choose 0.015 as our seed increment, so it has roughly 20% chance to remind user of backup every 5 saves, and increased to 60% after 10. */\r\nexport const DEFAULT_SEED_INCREMENT = 0.015;\r\n\r\nexport const getNaivePseudoRandomizer = (seedIncrement = DEFAULT_SEED_INCREMENT) => {\r\n    let internalChance = seedIncrement;\r\n\r\n    return {\r\n        check: () => {\r\n            const result = Math.random();\r\n\r\n            if (internalChance < result) {\r\n                internalChance += seedIncrement;\r\n                return false;\r\n            } else {\r\n                internalChance = seedIncrement;\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n};","import { CoordinateData, FontData, FontSizeData } from 'src/model';\r\n\r\nexport const scaleCoordinateData = (coordinateData: CoordinateData, scale: number): CoordinateData => {\r\n    const {\r\n        trueBaseline,\r\n        trueEdge,\r\n        trueWidth,\r\n        trueHeightCap,\r\n    } = coordinateData;\r\n\r\n    return {\r\n        ...coordinateData,\r\n        trueBaseline: trueBaseline * scale,\r\n        trueEdge: trueEdge * scale,\r\n        trueWidth: trueWidth * scale,\r\n        trueHeightCap: typeof trueHeightCap === 'number' ? trueHeightCap * scale : trueHeightCap,\r\n    };\r\n};\r\n\r\nexport const scaleDrawCoordinate = (coordinate: [number, number, number, number], scale: number) => {\r\n    return coordinate.map(value => value * scale) as [number, number, number, number];\r\n};\r\n\r\nexport const scaleFontSizeData = <FontData extends FontSizeData = FontSizeData>(\r\n    fontSizeData: FontData,\r\n    scale: number,\r\n): FontData => {\r\n    const {\r\n        allRightSymbolOffset,\r\n        bulletOffset,\r\n        bulletWidth,\r\n        fontSize,\r\n        headTextSpacing,\r\n        iconSymbolWidth,\r\n        lineHeight,\r\n        offsetY,\r\n        ordinalFontOffsetY,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n\r\n    return {\r\n        ...fontSizeData,\r\n        allRightSymbolOffset: typeof allRightSymbolOffset === 'number' ? allRightSymbolOffset * scale : undefined,\r\n        bulletOffset: typeof bulletOffset === 'number' ? bulletOffset * scale : undefined,\r\n        bulletWidth: bulletWidth * scale,\r\n        fontSize: fontSize * scale,\r\n        headTextSpacing: typeof headTextSpacing === 'number' ? headTextSpacing * scale : undefined,\r\n        iconSymbolWidth: typeof iconSymbolWidth === 'number' ? iconSymbolWidth * scale : undefined,\r\n        lineHeight: lineHeight * scale,\r\n        offsetY: typeof offsetY === 'number' ? offsetY * scale : undefined,\r\n        ordinalFontOffsetY: typeof ordinalFontOffsetY === 'number' ? ordinalFontOffsetY * scale : undefined,\r\n        wordLetterSpacing: typeof wordLetterSpacing === 'number' ? wordLetterSpacing * scale : undefined,\r\n    };\r\n};\r\n\r\nexport const scaleFontData = (fontData: FontData, scale: number): FontData => {\r\n    return {\r\n        ...fontData,\r\n        fontList: fontData.fontList.map(entry => {\r\n            return scaleFontSizeData(entry, scale);\r\n        }),\r\n    };\r\n};","export const randomCharacter = (charSet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', length = 1) => {\r\n    let result = '';\r\n    const charactersLength = charSet.length;\r\n    for (let i = 0; i < length; i++) {\r\n        result += charSet.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n};\r\n\r\nexport const randomSetID = (format: string) => {\r\n    return randomCharacter('ABCDEFGHIJKLMNOPQRSTUVWXYZ', 4)\r\n        + '-'\r\n        + (format === 'OCG' ? 'JP' : 'EN')\r\n        /** Most set does not reach 200+ index, so 0, 1 and 2 has significantly higher chance to roll */\r\n        + randomCharacter('0000000000111111111122222222223456789', 1)\r\n        + randomCharacter('0123456789', 2);\r\n};\r\n\r\nexport const randomPassword = () => {\r\n    return `${randomCharacter('0123456789', 8)}`;\r\n};\r\n\r\nexport const nextChar = (c: string) => {\r\n    return String.fromCharCode(c.charCodeAt(0) + 1);\r\n};\r\n\r\nexport function insertUrlParam(key: string, value: string) {\r\n    if (window.history.pushState) {\r\n        let searchParams = new URLSearchParams(window.location.search);\r\n        searchParams.set(key, value);\r\n        let newurl = window.location.protocol\r\n            + '//'\r\n            + window.location.host\r\n            + window.location.pathname\r\n            + '?'\r\n            + searchParams.toString();\r\n        window.history.pushState({ path: newurl }, '', newurl);\r\n    }\r\n};\r\n\r\nexport const forceRefocus = (selector = '.radio-train-input-group') => {\r\n    document.querySelector<HTMLElement>(selector)?.focus();\r\n};\r\n\r\nexport const HexColorRegex = /^#[a-fA-F0-9]{3}([a-fA-F0-9]{3})?$/;\r\nexport const hexToRGBA = (hex: string, withAlpha = true) => {\r\n    try {\r\n        const pureHex = hex.replace('#', '');\r\n        let rgbaList = [0, 0, 0, 1];\r\n\r\n        if (pureHex.length === 3 || pureHex.length === 4) {\r\n            rgbaList = [\r\n                parseInt(`${pureHex[0]}${pureHex[0]}`, 16),\r\n                parseInt(`${pureHex[1]}${pureHex[1]}`, 16),\r\n                parseInt(`${pureHex[2]}${pureHex[2]}`, 16),\r\n                parseInt(`${pureHex[3] ?? 'f'}${pureHex[3] ?? 'f'}`, 16),\r\n            ];\r\n        }\r\n        if (pureHex.length === 6 || pureHex.length === 8) {\r\n            rgbaList = [\r\n                parseInt(pureHex.slice(0, 2), 16),\r\n                parseInt(pureHex.slice(2, 4), 16),\r\n                parseInt(pureHex.slice(4, 6), 16),\r\n                parseInt(pureHex.slice(6, 8) ?? 'ff', 16),\r\n            ];\r\n        }\r\n\r\n        return rgbaList.map(entry => isNaN(entry) ? 255 : entry).slice(0, withAlpha ? 4 : 3);\r\n    } catch (e) {\r\n        return [0, 0, 0, 1].slice(0, withAlpha ? 4 : 3);\r\n    }\r\n};\r\n\r\n/** Seriously, what the hell? */\r\nexport const isMobileDevice = () => {\r\n    let check = false;\r\n    (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(a.substr(0,4))) check = true;})(\r\n        navigator.userAgent\r\n        || navigator.vendor\r\n        || (window as any).opera);\r\n    return check;\r\n};\r\n\r\nexport function mergeClass(...args: (boolean | string | undefined | null)[]) {\r\n    return args.filter(Boolean).join(' ');\r\n}\r\n\r\nexport * from './canvas';\r\nexport * from './categorize';\r\nexport * from './codec';\r\nexport * from './codec-other-vendor';\r\nexport * from './codec-ygoprodeck';\r\nexport * from './condenser';\r\nexport * from './font';\r\nexport * from './gradient';\r\nexport * from './hook';\r\nexport * from './imgur';\r\nexport * from './navigation';\r\nexport * from './normalize';\r\nexport * from './other';\r\nexport * from './random';\r\nexport * from './scale';","import styled from 'styled-components';\r\n\r\nexport const StyledActionIconButton = styled.button`\r\n    align-content: center;\r\n    font-size: var(--fs-lg);\r\n    border: var(--bw) solid var(--sub-tertiary);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-primary);\r\n    border: var(--bw) solid var(--main-primary);\r\n    cursor: pointer;\r\n    &:not(:disabled):hover {\r\n        background-color: var(--sub-primary);\r\n    }\r\n    &:disabled {\r\n        color: var(--color-dim);\r\n        cursor: not-allowed;\r\n        background-color: var(--color-contrast);\r\n        border: var(--bw) solid var(--color-contrast);\r\n        .anticon {\r\n            color: inherit;\r\n        }\r\n    }\r\n    input {\r\n        display: none;\r\n    }  \r\n`;","import { InternalCard, ocgToTCGTermMap, tcgToOCGTermMap } from 'src/model';\r\n\r\nexport const changeCardFormat = (card: InternalCard, targetFormat: string): InternalCard => {\r\n    const {\r\n        creator,\r\n        effect,\r\n        format,\r\n        isFirstEdition,\r\n        name,\r\n        password,\r\n        pendulumEffect,\r\n        setId,\r\n        typeAbility,\r\n        nameStyle,\r\n    } = card;\r\n\r\n    if (format === targetFormat) return card;\r\n\r\n    const termMap = targetFormat === 'ocg' ? tcgToOCGTermMap : ocgToTCGTermMap;\r\n    const newSetId = (targetFormat === 'ocg' && /-EN/.test(setId))\r\n        ? setId.replace('-EN', '-JP')\r\n        : targetFormat === 'tcg' && /-JP/.test(setId)\r\n            ? setId.replace('-JP', '-EN')\r\n            : setId;\r\n    const nextNameStyle: typeof nameStyle = {\r\n        ...nameStyle,\r\n        font: targetFormat === 'ocg' && nameStyle.font === 'Default'\r\n            ? 'OCG'\r\n            : targetFormat === 'tcg' && nameStyle.font === 'OCG'\r\n                ? 'Default'\r\n                : nameStyle.font,\r\n    };\r\n\r\n    return {\r\n        ...card,\r\n        name: termMap[name] ?? name,\r\n        format: targetFormat,\r\n        effect: termMap[effect] ?? effect,\r\n        pendulumEffect: termMap[pendulumEffect] ?? pendulumEffect,\r\n        typeAbility: typeAbility.map(entry => termMap[entry] ?? entry),\r\n        creator: termMap[creator] ?? creator,\r\n        password: termMap[password] ?? password,\r\n        setId: newSetId,\r\n        isFirstEdition: targetFormat === 'ocg' ? false : isFirstEdition,\r\n        nameStyle: nextNameStyle,\r\n    };\r\n};","import React from 'react';\r\n\r\nexport type LanguageMetadata = {\r\n    name: string,\r\n    formalName: string,\r\n    codeName: string,\r\n    initialMessage: string,\r\n    active: boolean,\r\n    order: number,\r\n    style?: React.CSSProperties & Record<string, string>,\r\n};\r\nexport const getDefaultLanguageMetadata = () => ({\r\n    name: 'Default',\r\n    formalName: 'Default',\r\n    codeName: 'def',\r\n    initialMessage: '',\r\n    order: 1000,\r\n    active: false,\r\n});\r\nexport type RawLanguageData = LanguageMetadata & {\r\n    rawDictionary: Record<string, string>,\r\n};\r\nexport type LanguageData = ReturnType<typeof processLanguage>;\r\nexport type LanguageDataDictionary = LanguageData['dictionary'];\r\n\r\nexport const processLanguage = (rawLanguageData: RawLanguageData, fallbackRawDictionary: Record<string, string> = {}) => {\r\n    const normalizedRawDictionary = {\r\n        ...fallbackRawDictionary,\r\n        ...rawLanguageData.rawDictionary,\r\n    };\r\n    const getDictionaryEntry = (entry: string) => {\r\n        return normalizedRawDictionary[entry] ?? '';\r\n    };\r\n    const applyTemplateNode = (template: string, nodeMap: Record<string, React.ReactNode>) => {\r\n        const splitRegex = new RegExp(`\\\\{(${Object.keys(nodeMap).join('|')})\\\\}`);\r\n        /** Expectation: Odd slots belong to actual string, even slots belong to template node, we use index base */\r\n        const splittedString = template.split(splitRegex);\r\n\r\n        return <React.Fragment key={template}>\r\n            {splittedString.map((entry, index) => {\r\n                if (index % 2 === 0) return <React.Fragment key={`${entry}-${index}`}>{entry}</React.Fragment>;\r\n                return nodeMap[entry];\r\n            })}\r\n        </React.Fragment>;\r\n    };\r\n    const specializedDictionary = {\r\n        'error.load.font.tcg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.tcg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.load.font.ocg': (familyName: string) => {\r\n            return getDictionaryEntry('error.load.font.ocg').replaceAll('{familyName}', familyName);\r\n        },\r\n        'error.max-size.description': (fileSize: number) => {\r\n            return getDictionaryEntry('error.max-size.description').replaceAll('{fileSize}', `${fileSize}`);\r\n        },\r\n        'contributor.disclaimer.line-1': (siteLink: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-1'),\r\n                { siteLink },\r\n            );\r\n        },\r\n        'contributor.disclaimer.line-5': (author1: React.ReactNode, author2: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.disclaimer.line-5'),\r\n                { author1, author2 },\r\n            );\r\n        },\r\n        'contributor.template-maker': (\r\n            artist1: React.ReactNode,\r\n            artist2: React.ReactNode,\r\n            artist3: React.ReactNode,\r\n            artist4: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('contributor.template-maker'),\r\n                { artist1, artist2, artist3, artist4 },\r\n            );\r\n        },\r\n        'converter.header.warning.label': (\r\n            maxAmount: number,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('converter.header.warning.label'),\r\n                { maxAmount },\r\n            );\r\n        },\r\n        'guide.format.introduction': (settingIcon: React.ReactNode) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.introduction'),\r\n                { settingIcon },\r\n            );\r\n        },\r\n        'guide.format.section-1.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-1.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-2.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-2.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-3.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-3.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-4.content': (\r\n            separator: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-4.content'),\r\n                { separator, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-5.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-5.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'guide.format.section-6.content': (\r\n            openTag: React.ReactNode,\r\n            closeTag: React.ReactNode,\r\n            hotkey: React.ReactNode,\r\n            hotkeyAlternative: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('guide.format.section-6.content'),\r\n                { openTag, closeTag, hotkey, hotkeyAlternative },\r\n            );\r\n        },\r\n        'input.name-style.emboss.color.alert': (\r\n            colorTab: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.name-style.emboss.color.alert'),\r\n                { colorTab },\r\n            );\r\n        },\r\n        'input.scale.label': (\r\n            scaleType: React.ReactNode,\r\n        ) => {\r\n            return applyTemplateNode(\r\n                getDictionaryEntry('input.scale.label'),\r\n                { scaleType },\r\n            );\r\n        },\r\n    };\r\n\r\n    return {\r\n        ...rawLanguageData,\r\n        rawDictionary: normalizedRawDictionary,\r\n        dictionary: {\r\n            ...normalizedRawDictionary,\r\n            ...specializedDictionary,\r\n        } as typeof specializedDictionary & Record<string, string>,\r\n    };\r\n};","import { create } from 'zustand';\r\nimport {\r\n    getDefaultLanguageMetadata,\r\n    LanguageData,\r\n    LanguageMetadata,\r\n    processLanguage,\r\n    RawLanguageData,\r\n} from './processor';\r\n\r\nexport type I18NStore = {\r\n    languageInfo: LanguageMetadata,\r\n    languageMetadataMap: Record<string, LanguageMetadata>,\r\n    language: LanguageData['dictionary'],\r\n    error: any,\r\n    isLoading: boolean,\r\n    isMetadataReady: boolean,\r\n    isInitiating: boolean,\r\n    initiate: () => Promise<void>,\r\n    loadLanguage: (language: string) => Promise<LanguageData | null>,\r\n    loadDefaultLanguage: () => Promise<void>,\r\n    changeLanguage: (language: string) => Promise<void>,\r\n};\r\nexport const useI18N = create<I18NStore>((set, get) => {\r\n    const defaultLanguageName = (() => {\r\n        /** Direct request from URL is preferred */\r\n        const url = new URL(window.location.href);\r\n        const initialParam = url.searchParams;\r\n        const defaultLanguageFromURL = initialParam.get('language');\r\n        /** Side effect: Remove default language after load */\r\n        initialParam.delete('language');\r\n        window.history.replaceState(window.history.state, '', url.href);\r\n        if (defaultLanguageFromURL) return defaultLanguageFromURL;\r\n\r\n        try {\r\n            const cachedLanguage = localStorage.getItem('language');\r\n\r\n            if (cachedLanguage) return cachedLanguage;\r\n            return 'eng';\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached language', e);\r\n            return 'eng';\r\n        }\r\n    })();\r\n    const languageMap: Partial<Record<string, LanguageData>> = {};\r\n    const defaultLanguage = processLanguage({\r\n        ...getDefaultLanguageMetadata(),\r\n        rawDictionary: {},\r\n    });\r\n    const loadLanguageMetadata = async () => {\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/metadata.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageMetadataMap: Record<string, LanguageMetadata> = await response.json();\r\n\r\n            if (!languageMetadataMap) throw (new Error('No metadata found'));\r\n\r\n            set({\r\n                languageMetadataMap,\r\n                isMetadataReady: true,\r\n            });\r\n        } catch (e) {\r\n            console.error('loadLanguageMetadata: Could not load language metadata, try to use English', e);\r\n            set({\r\n                languageMetadataMap: {\r\n                    eng: {\r\n                        name: 'English',\r\n                        formalName: 'English',\r\n                        codeName: 'eng',\r\n                        initialMessage: 'Loading fonts and scripts…',\r\n                        order: 1,\r\n                        active: true\r\n                    },\r\n                },\r\n                isMetadataReady: true,\r\n            });\r\n        }\r\n    };\r\n    const loadLanguage = async (languageName: string) => {\r\n        if (languageMap[languageName]) return null;\r\n        try {\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/asset/i18n/${languageName}.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            const languageData: RawLanguageData = await response.json();\r\n\r\n            if (!languageData.rawDictionary) throw (new Error('No dictionary found'));\r\n            const processedLanguage = processLanguage(languageData, languageMap.eng?.rawDictionary);\r\n            languageMap[languageName] = processedLanguage;\r\n\r\n            return processedLanguage;\r\n        } catch (e) {\r\n            console.error('loadLanguage: Could not load language, revert back to default', e);\r\n            return null;\r\n        }\r\n    };\r\n    const changeLanguage = async (languageName: string) => {\r\n        const nextMeta = get().languageMetadataMap[languageName];\r\n        if (!nextMeta) return;\r\n\r\n        /** Currently it is better to NOT show language loading process, just let everything magically replaced. */\r\n        // set({ isLoading: true });\r\n        const languageData = !languageMap[languageName]\r\n            ? await loadLanguage(languageName)\r\n            : languageMap[languageName];\r\n\r\n        if (languageData) {\r\n            set({\r\n                languageInfo: get().languageMetadataMap[languageName],\r\n                language: languageData.dictionary,\r\n            });\r\n            localStorage.setItem('language', languageName);\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: nextMeta,\r\n            });\r\n        } else {\r\n            set({\r\n                isLoading: false,\r\n                languageInfo: get().languageMetadataMap.eng,\r\n                language: defaultLanguage.dictionary,\r\n            });\r\n        }\r\n    };\r\n\r\n    return {\r\n        languageMetadataMap: {},\r\n        languageInfo: getDefaultLanguageMetadata(),\r\n        language: defaultLanguage.dictionary,\r\n        error: null,\r\n        isInitiating: true,\r\n        isLoading: true,\r\n        isMetadataReady: false,\r\n        initiate: async () => {\r\n            loadLanguageMetadata();\r\n        },\r\n        loadDefaultLanguage: async () => {\r\n            /** Load english first regardless, so it can act as a fallback language */\r\n            await loadLanguage('eng');\r\n            await changeLanguage(defaultLanguageName);\r\n            set({\r\n                isInitiating: false,\r\n            });\r\n        },\r\n        loadLanguage,\r\n        changeLanguage,\r\n    };\r\n});\r\n\r\nexport const useLanguage = () => {\r\n    const language = useI18N(({ language }) => language);\r\n\r\n    return language;\r\n};\r\nexport const getLanguage = () => useI18N.getState().language;\r\nexport * from './processor';","import { Crop } from 'react-image-crop';\r\nimport {\r\n    BackgroundType,\r\n    Card,\r\n    CardOpacity,\r\n    CondenseType,\r\n    Foil,\r\n    FoilNameMap,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    getDefaultCrop,\r\n    getDefaultNameStyle,\r\n    getDefaultTextStyle,\r\n    getEmptyCard,\r\n    InternalCard,\r\n    NameStyle,\r\n    NameStyleType,\r\n    NO_ATTRIBUTE,\r\n    PendulumSize,\r\n    PresetNameStyle,\r\n} from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst CsvStandardFieldList = [\r\n    /** Extremely common stuff for most users */\r\n    'Format',\r\n    'Frame',\r\n    'Name',\r\n    'Attribute',\r\n    'Star',\r\n    'Spell/Trap Icon',\r\n    'Art Link',\r\n    'Type Ability',\r\n    'Effect',\r\n    'Set Id',\r\n    'ATK',\r\n    'DEF',\r\n    'Password',\r\n    'Sticker',\r\n    'Copyright',\r\n    'Is Pendulum',\r\n    'Pendulum Effect',\r\n    'Pendulum Scale Red',\r\n    'Pendulum Scale Blue',\r\n    'Is Link',\r\n    'Link - Top Left Arrow',\r\n    'Link - Top Arrow',\r\n    'Link - Top Right Arrow',\r\n    'Link - Left Arrow',\r\n    'Link - Right Arrow',\r\n    'Link - Bottom Left Arrow',\r\n    'Link - Bottom Arrow',\r\n    'Link - Bottom Right Arrow',\r\n    /** More detailed stuffs */\r\n    'Is First Edition',\r\n    'Is Speed Card',\r\n    'Is Limited Edition',\r\n    'Is Duel Terminal Card',\r\n    'Is Legacy Card',\r\n    'Foil',\r\n    'Art Finish',\r\n    'Card Finish',\r\n    'Art Crop - X (%)',\r\n    'Art Crop - Y (%)',\r\n    'Art Crop - Width (%)',\r\n    'Art Crop - Height (%)',\r\n    'Is Using Full Art',\r\n    /** Creative customize stuff */\r\n    'Star Type',\r\n    'Star Alignment',\r\n    'Card Icon Type',\r\n    'Opacity - Body',\r\n    'Opacity - Pendulum',\r\n    'Opacity - Text',\r\n    'Opacity - Name',\r\n    'Opacity - Base Fill',\r\n    'Opacity - Art Border',\r\n    'Opacity - Name Border',\r\n    'Opacity - Boundless',\r\n    'Has Background',\r\n    'Background Link',\r\n    'Is Using Full Background',\r\n    'Background Type',\r\n    'Background Crop - X (%)',\r\n    'Background Crop - Y (%)',\r\n    'Background Crop - Width (%)',\r\n    'Background Crop - Height (%)',\r\n    'Bottom Frame',\r\n    'Condense Rate',\r\n    'Use Furigana Helper',\r\n    /** Extremely intricate stuff, user usually should not bother with these */\r\n    'Name Style Type',\r\n    'Name Style - Font',\r\n    'Name Style - Fill Style',\r\n    'Name Style - Headtext Fill Style',\r\n    'Name Style - Shadow Color',\r\n    'Name Style - Shadow Offset Y',\r\n    'Name Style - Shadow Offset X',\r\n    'Name Style - Shadow Blur',\r\n    'Name Style - Has Shadow',\r\n    'Name Style - Line Color',\r\n    'Name Style - Line Width',\r\n    'Name Style - Line Offset Y',\r\n    'Name Style - Line Offset X',\r\n    'Name Style - Has Outline',\r\n    'Name Style - Gradient Angle',\r\n    'Name Style - Gradient Color',\r\n    'Name Style - Has Gradient',\r\n    'Name Style - Emboss Pitch',\r\n    'Name Style - Emboss Yaw',\r\n    'Name Style - Emboss Thickness',\r\n    'Name Style - Has Emboss',\r\n    'Name Style - Preset',\r\n    'Name Style - Pattern',\r\n    'Stat Style - Is Custom',\r\n    'Stat Style - Fill Color',\r\n    'Stat Style - Has Shadow',\r\n    'Stat Style - Shadow Color',\r\n    'Type Style - Is Custom',\r\n    'Type Style - Fill Color',\r\n    'Type Style - Has Shadow',\r\n    'Type Style - Shadow Color',\r\n    'Effect Style - Is Custom',\r\n    'Effect Style - Fill Color',\r\n    'Effect Style - Has Shadow',\r\n    'Effect Style - Shadow Color',\r\n    'Effect Style - Upsize',\r\n    'Effect Style - Font Style',\r\n    'Pendulum Size',\r\n    'Pendulum Effect Style - Is Custom',\r\n    'Pendulum Effect Style - Fill Color',\r\n    'Pendulum Effect Style - Has Shadow',\r\n    'Pendulum Effect Style - Shadow Color',\r\n    'Pendulum Effect Style - Upsize',\r\n    'Pendulum Effect Style - Font Style',\r\n    'Other Style - Is Custom',\r\n    'Other Style - Fill Color',\r\n    'Other Style - Has Shadow',\r\n    'Other Style - Shadow Color',\r\n    'External Info (JSON)',\r\n] as const;\r\nconst CsvFieldList = [\r\n    ...CsvStandardFieldList,\r\n    /**\r\n     * External fields that is not standard but we try to account for\r\n     * https://docs.google.com/spreadsheets/d/1bZcKiMB3taPFXGKhLoyVa9885HxJ5RBF/edit?gid=448833078#gid=448833078\r\n     * */\r\n    'Level/Rank',\r\n    'Star_Type',    // 1 = Treat star as number, 2 = Treat star as string\r\n    'spell_type/trap_type',\r\n    'Type_1',\r\n    'Type_2',\r\n    'Type_3',\r\n    'Type_4',\r\n    'Set_ID',\r\n    // 'foil', // Unclear + Conflict\r\n    'Borderless', // Unclear\r\n    'Edition',\r\n    'Rarity',\r\n    'Background_Type',\r\n    'Card_Background', // Unclear\r\n    'Font_Style', // Unclear\r\n    'Art_Finish',\r\n    'Image_Frame_Type', // Unclear\r\n] as const;\r\nconst normalizeFieldName = (field?: string) => (field ?? '').toLowerCase().replaceAll(' ', '').replaceAll('-', '');\r\nconst CsvFieldSet = new Set(CsvFieldList.map(normalizeFieldName));\r\ntype CsvField = typeof CsvFieldList[number];\r\nconst analyzeExportHeader = CsvStandardFieldList.reduce((acc, field, index) => {\r\n    const normalizedColumnName = normalizeFieldName(field);\r\n    if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n    return acc;\r\n}, {} as Record<CsvField, number | undefined>);\r\n\r\nconst normalizeCsvData = (data: any) => {\r\n    if (data == null) return '';\r\n    if (data === '') return '';\r\n    return `\"${data.replace(/\"/g, '\"\"')}\"`;\r\n};\r\nexport const cardListToCsv = (cardList: Card[]) => {\r\n    const valueList: string[] = [];\r\n    const rowLength = CsvStandardFieldList.length;\r\n    let error = '';\r\n\r\n    for (let cnt = 0; cnt < cardList.length; cnt++) {\r\n        const write = (key: CsvField, value: boolean | string | number | undefined) => {\r\n            const index = analyzeExportHeader[key];\r\n    \r\n            if (typeof index === 'number') {\r\n                if (typeof value === 'string') rowValue[index] = value;\r\n                if (typeof value === 'number') rowValue[index] = `${value}`;\r\n                if (typeof value === 'boolean') rowValue[index] = `${value}`;\r\n                if (value == null) rowValue[index] = '';\r\n            }\r\n        };\r\n        /** Again, we do not support export offline art or background here unless absolutely need to. With the current scope of about hundred of cards, the exported csv may become hundred MB in size, which is not scalable at all. */\r\n        const rowValue = Array(rowLength).map(() => '');\r\n        const {\r\n            art,\r\n            artCrop,\r\n            artFinish,\r\n            artFit,\r\n            artSource,\r\n            atk,\r\n            attribute,\r\n            background,\r\n            backgroundCrop,\r\n            backgroundFit,\r\n            backgroundSource,\r\n            backgroundType,\r\n            cardIcon,\r\n            creator,\r\n            def,\r\n            effect,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            externalInfo,\r\n            finish,\r\n            foil,\r\n            format,\r\n            frame,\r\n            furiganaHelper,\r\n            hasBackground,\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLegacyCard,\r\n            isLimitedEdition,\r\n            isLink,\r\n            isPendulum,\r\n            isSpeedCard,\r\n            linkMap,\r\n            name,\r\n            nameStyle,\r\n            nameStyleType,\r\n            opacity,\r\n            otherTextStyle,\r\n            password,\r\n            pendulumEffect,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumStyle,\r\n            pendulumSize,\r\n            pendulumTextStyle,\r\n            setId,\r\n            star,\r\n            starAlignment,\r\n            statTextStyle,\r\n            sticker,\r\n            subFamily,\r\n            typeAbility,\r\n            typeTextStyle,\r\n        } = cardList[cnt];\r\n        const stringifedExternalInfo = JSON.stringify(externalInfo);\r\n\r\n        write('Format', format);\r\n        write('Frame', frame);\r\n        write('Name', name);\r\n        write('Attribute', attribute);\r\n        write('Star', `${star}`);\r\n        write('Spell/Trap Icon', subFamily);\r\n        write('Art Link', art);\r\n        write('Type Ability', typeAbility.join('/'));\r\n        write('Effect', effect);\r\n        write('Set Id', setId);\r\n        write('ATK', atk);\r\n        write('DEF', def);\r\n        write('Password', password);\r\n        write('Sticker', sticker);\r\n        write('Copyright', creator);\r\n        write('Is Pendulum', isPendulum);\r\n        write('Pendulum Effect', pendulumEffect);\r\n        write('Pendulum Scale Red', pendulumScaleRed);\r\n        write('Pendulum Scale Blue', pendulumScaleBlue);\r\n        write('Is Link', isLink ?? undefined);\r\n        write('Link - Top Left Arrow', linkMap.includes('1'));\r\n        write('Link - Top Arrow', linkMap.includes('2'));\r\n        write('Link - Top Right Arrow', linkMap.includes('3'));\r\n        write('Link - Left Arrow', linkMap.includes('4'));\r\n        write('Link - Right Arrow', linkMap.includes('6'));\r\n        write('Link - Bottom Left Arrow', linkMap.includes('7'));\r\n        write('Link - Bottom Arrow', linkMap.includes('8'));\r\n        write('Link - Bottom Right Arrow', linkMap.includes('9'));\r\n        write('Is First Edition', isFirstEdition);\r\n        write('Is Speed Card', isSpeedCard);\r\n        write('Is Limited Edition', isLimitedEdition);\r\n        write('Is Duel Terminal Card', isDuelTerminalCard);\r\n        write('Is Legacy Card', isLegacyCard);\r\n        write('Foil', foil);\r\n        write('Art Finish', artFinish);\r\n        write('Card Finish', finish.join(','));\r\n        write('Art Crop - X (%)', artCrop.x);\r\n        write('Art Crop - Y (%)', artCrop.y);\r\n        write('Art Crop - Width (%)', artCrop.width);\r\n        write('Art Crop - Height (%)', artCrop.height);\r\n        write('Is Using Full Art', artFit);\r\n        write('Star Type', typeof star === 'number' && star >= 0 && star <= 13 ? 'number' : 'text');\r\n        write('Star Alignment', starAlignment);\r\n        write('Card Icon Type', cardIcon);\r\n        write('Opacity - Body', opacity.body);\r\n        write('Opacity - Pendulum', opacity.pendulum);\r\n        write('Opacity - Text', opacity.text);\r\n        write('Opacity - Name', opacity.name);\r\n        write('Opacity - Base Fill', opacity.baseFill);\r\n        write('Opacity - Art Border', opacity.artBorder);\r\n        write('Opacity - Name Border', opacity.nameBorder);\r\n        write('Opacity - Boundless', opacity.boundless);\r\n        write('Has Background', hasBackground);\r\n        write('Background Link', background);\r\n        write('Is Using Full Background', backgroundFit);\r\n        write('Background Type', backgroundType);\r\n        write('Background Crop - X (%)', backgroundCrop.x);\r\n        write('Background Crop - Y (%)', backgroundCrop.y);\r\n        write('Background Crop - Width (%)', backgroundCrop.width);\r\n        write('Background Crop - Height (%)', backgroundCrop.height);\r\n        write('Bottom Frame', pendulumFrame);\r\n        write('Condense Rate', effectStyle.condenseTolerant);\r\n        write('Use Furigana Helper', furiganaHelper);\r\n        write('Name Style Type', nameStyleType);\r\n        write('Name Style - Font', nameStyle.font);\r\n        write('Name Style - Fill Style', nameStyle.fillStyle);\r\n        write('Name Style - Headtext Fill Style', nameStyle.headTextFillStyle);\r\n        write('Name Style - Shadow Color', nameStyle.shadowColor);\r\n        write('Name Style - Shadow Offset Y', nameStyle.shadowOffsetY);\r\n        write('Name Style - Shadow Offset X', nameStyle.shadowOffsetX);\r\n        write('Name Style - Shadow Blur', nameStyle.shadowBlur);\r\n        write('Name Style - Has Shadow', nameStyle.hasShadow);\r\n        write('Name Style - Line Color', nameStyle.lineColor);\r\n        write('Name Style - Line Width', nameStyle.lineWidth);\r\n        write('Name Style - Line Offset Y', nameStyle.lineOffsetY);\r\n        write('Name Style - Line Offset X', nameStyle.lineOffsetX);\r\n        write('Name Style - Has Outline', nameStyle.hasOutline);\r\n        write('Name Style - Gradient Angle', nameStyle.gradientAngle);\r\n        write('Name Style - Gradient Color', nameStyle.gradientColor);\r\n        write('Name Style - Has Gradient', nameStyle.hasGradient);\r\n        write('Name Style - Emboss Pitch', nameStyle.embossPitch);\r\n        write('Name Style - Emboss Yaw', nameStyle.embossYaw);\r\n        write('Name Style - Emboss Thickness', nameStyle.embossThickness);\r\n        write('Name Style - Has Emboss', nameStyle.hasEmboss);\r\n        write('Name Style - Preset', nameStyle.preset);\r\n        write('Name Style - Pattern', nameStyle.pattern);\r\n        write('Stat Style - Is Custom', statTextStyle[0]);\r\n        write('Stat Style - Fill Color', statTextStyle[1]);\r\n        write('Stat Style - Has Shadow', statTextStyle[2]);\r\n        write('Stat Style - Shadow Color', statTextStyle[3]);\r\n        write('Type Style - Is Custom', typeTextStyle[0]);\r\n        write('Type Style - Fill Color', typeTextStyle[1]);\r\n        write('Type Style - Has Shadow', typeTextStyle[2]);\r\n        write('Type Style - Shadow Color', typeTextStyle[3]);\r\n        write('Effect Style - Is Custom', effectTextStyle[0]);\r\n        write('Effect Style - Fill Color', effectTextStyle[1]);\r\n        write('Effect Style - Has Shadow', effectTextStyle[2]);\r\n        write('Effect Style - Shadow Color', effectTextStyle[3]);\r\n        write('Effect Style - Upsize', effectStyle.upSize);\r\n        write('Effect Style - Font Style', effectStyle.fontStyle);\r\n        write('Pendulum Size', pendulumSize);\r\n        write('Pendulum Effect Style - Is Custom', pendulumTextStyle[0]);\r\n        write('Pendulum Effect Style - Fill Color', pendulumTextStyle[1]);\r\n        write('Pendulum Effect Style - Has Shadow', pendulumTextStyle[2]);\r\n        write('Pendulum Effect Style - Shadow Color', pendulumTextStyle[3]);\r\n        write('Pendulum Effect Style - Upsize', pendulumStyle.upSize);\r\n        write('Pendulum Effect Style - Font Style', pendulumStyle.fontStyle);\r\n        write('Other Style - Is Custom', otherTextStyle[0]);\r\n        write('Other Style - Fill Color', otherTextStyle[1]);\r\n        write('Other Style - Has Shadow', otherTextStyle[2]);\r\n        write('Other Style - Shadow Color', otherTextStyle[3]);\r\n        write('External Info (JSON)', stringifedExternalInfo === '{}' ? '' : stringifedExternalInfo);\r\n\r\n        if (artSource === 'offline' || (hasBackground && backgroundSource === 'offline')) {\r\n            error = 'offline-data';\r\n        }\r\n\r\n        valueList.push(rowValue.map(normalizeCsvData).join(','));\r\n    }\r\n\r\n    return {\r\n        value: [\r\n            CsvStandardFieldList.join(','),\r\n            valueList.join('\\n'),\r\n        ].join('\\n'),\r\n        error,\r\n    };\r\n};\r\n\r\nconst analyzeImportHeader = (header: (string | undefined)[]) => {\r\n    return header.reduce((acc, field, index) => {\r\n        const normalizedColumnName = normalizeFieldName(field);\r\n        if (CsvFieldSet.has(normalizedColumnName)) acc[field as CsvField] = index;\r\n\r\n        return acc;\r\n    }, {} as Record<CsvField, number | undefined>);\r\n};\r\nconst getCsvFieldReader = (row: (string | undefined)[], headerIndexMap: Record<CsvField, number | undefined>) => {\r\n    return (field: CsvField) => {\r\n        const columnIndex = headerIndexMap[field] ?? -1;\r\n        const value = (row[columnIndex] ?? '').trim();\r\n\r\n        return value === ''\r\n            ? undefined\r\n            : value;\r\n    };\r\n};\r\nconst normalizeBoolean = (value: any, fallback: boolean) => {\r\n    if (typeof value === 'boolean') return value;\r\n    if (typeof value === 'string') {\r\n        const normalizedValue = value.toLowerCase();\r\n        return normalizedValue === 'true'\r\n            ? true\r\n            : normalizedValue === 'false'\r\n                ? false\r\n                : fallback;\r\n    }\r\n    return fallback;\r\n};\r\nconst normalizeInt = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseInt(value)) ? parseInt(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeFloat = (value: any, fallback: number) => {\r\n    if (typeof value === 'number') return isFinite(value) ? value : fallback;\r\n    if (typeof value === 'string') return isFinite(parseFloat(value)) ? parseFloat(value) : fallback;\r\n    return fallback;\r\n};\r\nconst normalizeColor = (value: any, fallback: string) => {\r\n    if (typeof value === 'string') {\r\n        if (value.startsWith('#')) return value;\r\n        return `#${value}`;\r\n    }\r\n    return fallback;\r\n};\r\nexport const csvToCardList = (data: (string | undefined)[][]): InternalCard[] => {\r\n    try {\r\n        const headerIndexMap = analyzeImportHeader(data[0]);\r\n\r\n        return data\r\n            .map((row, index) => {\r\n                /** Ignore header */\r\n                if (index === 0) return null;\r\n                /** Ignore empty row */\r\n                if (row.join('') === '') return null;\r\n                const emptyCard = getEmptyCard();\r\n                const reader = getCsvFieldReader(row, headerIndexMap);\r\n\r\n                const frame = (reader('Frame') ?? reader('Background_Type') ?? emptyCard.frame).toLowerCase();\r\n\r\n                const rawStar = reader('Star') ?? reader('Level/Rank') ?? '';\r\n                const star = reader('Star Type') === 'text'\r\n                    ? rawStar\r\n                    : parseInt(rawStar) <= 13 && parseInt(rawStar) >= 0 && reader('Star_Type') !== '2'\r\n                        ? parseInt(rawStar)\r\n                        : rawStar;\r\n\r\n                const rawFoil = (reader('Foil') ?? reader('Rarity') ?? 'normal').toLowerCase() as Foil;\r\n                const foil = FoilNameMap[rawFoil] ? rawFoil : 'normal';\r\n\r\n                const rawAttribute = reader('Attribute')?.toUpperCase();\r\n                const attribute = rawAttribute\r\n                    ? rawAttribute === 'NONE'\r\n                        ? NO_ATTRIBUTE\r\n                        : rawAttribute\r\n                    : frame === 'spell'\r\n                        ? 'SPELL'\r\n                        : frame === 'trap'\r\n                            ? 'TRAP'\r\n                            : emptyCard.attribute;\r\n\r\n                const artFinish = (reader('Art Finish') ?? (reader('Art_Finish') ? `type${reader('Art_Finish')}` : ''));\r\n                const atk = reader('ATK') ?? '';\r\n                const cardIcon = (reader('Card Icon Type') ?? emptyCard.cardIcon);\r\n                const creator = reader('Copyright') ?? '';\r\n                const def = reader('DEF') ?? '';\r\n                const effect = reader('Effect') ?? '';\r\n                const finish = reader('Card Finish')?.split(/,| /).filter(entry => entry !== '') ?? [] as string[];\r\n                const format = (reader('Format') ?? emptyCard.format).toLowerCase();\r\n                const furiganaHelper = normalizeBoolean(reader('Use Furigana Helper'), emptyCard.furiganaHelper);\r\n                const name = reader('Name') ?? '';\r\n                const password = reader('Password') ?? '';\r\n                const setId = reader('Set Id') ?? reader('Set_ID') ?? '';\r\n                const starAlignment = (reader('Star Alignment') ?? emptyCard.starAlignment).toLowerCase();\r\n                const sticker = (reader('Sticker') ?? emptyCard.sticker).toLowerCase();\r\n                const subFamily = (reader('Spell/Trap Icon') ?? reader('spell_type/trap_type') ?? emptyCard.subFamily).toUpperCase();\r\n\r\n                const edition = reader('Edition')?.toLowerCase();\r\n                const isFirstEdition = normalizeBoolean(\r\n                    reader('Is First Edition'),\r\n                    edition ? edition === '1st edition' : emptyCard.isFirstEdition,\r\n                );\r\n                const isDuelTerminalCard = normalizeBoolean(\r\n                    reader('Is Duel Terminal Card'),\r\n                    edition ? edition === 'duel terminal' : emptyCard.isDuelTerminalCard,\r\n                );\r\n                const isLimitedEdition = normalizeBoolean(\r\n                    reader('Is Limited Edition'),\r\n                    edition ? edition === 'limited edition' : emptyCard.isLimitedEdition,\r\n                );\r\n                const isSpeedCard = normalizeBoolean(\r\n                    reader('Is Speed Card'),\r\n                    edition ? edition === 'speed duel' : emptyCard.isSpeedCard,\r\n                );\r\n                const isLegacyCard = normalizeBoolean(reader('Is Legacy Card'), emptyCard.isLegacyCard);\r\n\r\n                const isPendulum = normalizeBoolean(reader('Is Pendulum'), emptyCard.isPendulum);\r\n                const pendulumFrame = (reader('Bottom Frame') ?? emptyCard.pendulumFrame).toLowerCase();\r\n                const pendulumEffect = reader('Pendulum Effect') ?? '';\r\n                /** We treat empty scale value as scaleless behavior instead of assigning default value from empty card. As empty card still obey the normal card component and therefore must have a non-empty value. */\r\n                const pendulumScaleRed = reader('Pendulum Scale Red') ?? '';\r\n                const pendulumScaleBlue = reader('Pendulum Scale Blue') ?? '';\r\n                const pendulumSize = (reader('Pendulum Size') ?? 'medium') as PendulumSize;\r\n\r\n                const rawTypeAbility = reader('Type Ability');\r\n                const typeAbility = rawTypeAbility\r\n                    ? rawTypeAbility.split('/')\r\n                    : [reader('Type_1'), reader('Type_2'), reader('Type_3'), reader('Type_4')]\r\n                        .filter(entry => typeof entry === 'string' && entry !== '');\r\n\r\n                const condenseTolerant = (reader('Condense Rate') ?? emptyCard.effectStyle.condenseTolerant).toLowerCase() as CondenseType;\r\n                const effectUpSize = normalizeInt(reader('Effect Style - Upsize'), emptyCard.effectStyle.upSize);\r\n                const pendulumEffectUpSize = normalizeInt(reader('Pendulum Effect Style - Upsize'), emptyCard.pendulumStyle.upSize);\r\n                const effectFontStyle = (reader('Effect Style - Font Style') ?? emptyCard.effectStyle.fontStyle).toLowerCase();\r\n                const pendulumEffectFontStyle = (reader('Pendulum Effect Style - Font Style') ?? emptyCard.pendulumStyle.fontStyle).toLowerCase();\r\n\r\n                const emptyOpacity = getDefaultCardOpacity();\r\n                const opacity: CardOpacity = {\r\n                    artBorder: normalizeBoolean(reader('Opacity - Art Border'), emptyOpacity.artBorder),\r\n                    baseFill: reader('Opacity - Base Fill') ?? emptyOpacity.baseFill,\r\n                    body: normalizeInt(reader('Opacity - Body'), emptyOpacity.body),\r\n                    boundless: normalizeBoolean(reader('Opacity - Boundless'), emptyOpacity.boundless),\r\n                    name: normalizeInt(reader('Opacity - Name'), emptyOpacity.name),\r\n                    nameBorder: normalizeBoolean(reader('Opacity - Name Border'), emptyOpacity.nameBorder),\r\n                    pendulum: normalizeInt(reader('Opacity - Pendulum'), emptyOpacity.pendulum),\r\n                    text: normalizeInt(reader('Opacity - Text'), emptyOpacity.text),\r\n                };\r\n\r\n                const emptyArtCrop = getDefaultCrop();\r\n                const art = reader('Art Link') ?? emptyCard.art;\r\n                const artFit = normalizeBoolean(reader('Is Using Full Art'), emptyCard.artFit);\r\n                const artCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Art Crop - Height (%)'), emptyArtCrop.height),\r\n                    width: normalizeFloat(reader('Art Crop - Width (%)'), emptyArtCrop.width),\r\n                    x: normalizeFloat(reader('Art Crop - X (%)'), emptyArtCrop.x),\r\n                    y: normalizeFloat(reader('Art Crop - Y (%)'), emptyArtCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyBackgroundCrop = getDefaultCrop();\r\n                const hasBackground = normalizeBoolean(reader('Has Background'), emptyCard.hasBackground);\r\n                const background = reader('Background Link') ?? emptyCard.background;\r\n                const backgroundType = (reader('Background Type') ?? emptyCard.backgroundType).toLowerCase() as BackgroundType;\r\n                const backgroundFit = normalizeBoolean(reader('Is Using Full Background'), emptyCard.backgroundFit);\r\n                const backgroundCrop: Crop = {\r\n                    aspect: getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).ratio,\r\n                    height: normalizeFloat(reader('Background Crop - Height (%)'), emptyBackgroundCrop.height),\r\n                    width: normalizeFloat(reader('Background Crop - Width (%)'), emptyBackgroundCrop.width),\r\n                    x: normalizeFloat(reader('Background Crop - X (%)'), emptyBackgroundCrop.x),\r\n                    y: normalizeFloat(reader('Background Crop - Y (%)'), emptyBackgroundCrop.y),\r\n                    unit: '%',\r\n                };\r\n\r\n                const emptyNameStyle = getDefaultNameStyle();\r\n                const nameStyleType = (reader('Name Style Type') ?? emptyCard.nameStyleType).toLowerCase() as NameStyleType;\r\n                const nameStyle: NameStyle = {\r\n                    embossPitch: normalizeInt(reader('Name Style - Emboss Pitch'), emptyNameStyle.embossPitch),\r\n                    embossYaw: normalizeInt(reader('Name Style - Emboss Yaw'), emptyNameStyle.embossYaw),\r\n                    embossThickness: normalizeInt(reader('Name Style - Emboss Thickness'), emptyNameStyle.embossThickness),\r\n                    fillStyle: normalizeColor(reader('Name Style - Fill Style'), emptyNameStyle.fillStyle),\r\n                    font: reader('Name Style - Font') ?? emptyNameStyle.font,\r\n                    gradientAngle: normalizeInt(reader('Name Style - Gradient Angle'), emptyNameStyle.gradientAngle),\r\n                    gradientColor: reader('Name Style - Gradient Color') ?? emptyNameStyle.gradientColor,\r\n                    hasEmboss: normalizeBoolean(reader('Name Style - Has Emboss'), emptyNameStyle.hasEmboss),\r\n                    hasGradient: normalizeBoolean(reader('Name Style - Has Gradient'), emptyNameStyle.hasGradient),\r\n                    hasOutline: normalizeBoolean(reader('Name Style - Has Outline'), emptyNameStyle.hasOutline),\r\n                    hasShadow: normalizeBoolean(reader('Name Style - Has Shadow'), emptyNameStyle.hasShadow),\r\n                    headTextFillStyle: normalizeColor(reader('Name Style - Headtext Fill Style'), emptyNameStyle.headTextFillStyle),\r\n                    lineColor: normalizeColor(reader('Name Style - Line Color'), emptyNameStyle.lineColor),\r\n                    lineOffsetX: normalizeInt(reader('Name Style - Line Offset X'), emptyNameStyle.lineOffsetX),\r\n                    lineOffsetY: normalizeInt(reader('Name Style - Line Offset Y'), emptyNameStyle.lineOffsetY),\r\n                    lineWidth: normalizeInt(reader('Name Style - Line Width'), emptyNameStyle.lineWidth),\r\n                    pattern: reader('Name Style - Pattern') ?? emptyNameStyle.pattern,\r\n                    preset: (reader('Name Style - Preset') ?? emptyNameStyle.preset) as PresetNameStyle,\r\n                    shadowBlur: normalizeInt(reader('Name Style - Shadow Blur'), emptyNameStyle.shadowBlur),\r\n                    shadowColor: normalizeColor(reader('Name Style - Shadow Color'), emptyNameStyle.shadowColor),\r\n                    shadowOffsetX: normalizeInt(reader('Name Style - Shadow Offset X'), emptyNameStyle.shadowOffsetX),\r\n                    shadowOffsetY: normalizeInt(reader('Name Style - Shadow Offset Y'), emptyNameStyle.shadowOffsetY),\r\n                };\r\n\r\n                const isLink = normalizeBoolean(reader('Is Link'), emptyCard.isLink ?? (frame === 'link'));\r\n                const linkMap = [\r\n                    normalizeBoolean(reader('Link - Top Left Arrow'), false) ? '1' : '',\r\n                    normalizeBoolean(reader('Link - Top Arrow'), false) ? '2' : '',\r\n                    normalizeBoolean(reader('Link - Top Right Arrow'), false) ? '3' : '',\r\n                    normalizeBoolean(reader('Link - Left Arrow'), false) ? '4' : '',\r\n                    normalizeBoolean(reader('Link - Right Arrow'), false) ? '6' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Left Arrow'), false) ? '7' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Arrow'), false) ? '8' : '',\r\n                    normalizeBoolean(reader('Link - Bottom Right Arrow'), false) ? '9' : '',\r\n                ].filter(entry => entry !== '') ?? [];\r\n\r\n                const emptyTextStyle = getDefaultTextStyle();\r\n                const statTextStyle = [\r\n                    normalizeBoolean(reader('Stat Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Stat Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Stat Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Stat Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const typeTextStyle = [\r\n                    normalizeBoolean(reader('Type Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Type Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Type Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Type Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const effectTextStyle = [\r\n                    normalizeBoolean(reader('Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const pendulumTextStyle = [\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Pendulum Effect Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Pendulum Effect Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                const otherTextStyle = [\r\n                    normalizeBoolean(reader('Other Style - Is Custom'), emptyTextStyle[0]),\r\n                    normalizeColor(reader('Other Style - Fill Color'), emptyTextStyle[1]),\r\n                    normalizeBoolean(reader('Other Style - Has Shadow'), emptyTextStyle[2]),\r\n                    normalizeColor(reader('Other Style - Shadow Color'), emptyTextStyle[3]),\r\n                ] as [boolean, string, boolean, string];\r\n                let externalInfo = {};\r\n                try {\r\n                    externalInfo = JSON.parse(reader('External Info (JSON)') ?? '{}');\r\n                } catch (e) {\r\n                    console.error('csvToCardList', e);\r\n                }\r\n\r\n                return {\r\n                    id: uuid(),\r\n                    ...emptyCard,\r\n                    art,\r\n                    artCrop,\r\n                    artFinish,\r\n                    artFit,\r\n                    artSource: 'online',\r\n                    atk,\r\n                    attribute,\r\n                    background,\r\n                    backgroundCrop,\r\n                    backgroundFit,\r\n                    backgroundSource: 'online',\r\n                    backgroundType,\r\n                    cardIcon,\r\n                    condenseTolerant,\r\n                    creator,\r\n                    def,\r\n                    effectStyle: { condenseTolerant, upSize: effectUpSize, fontStyle: effectFontStyle },\r\n                    effect,\r\n                    effectTextStyle,\r\n                    externalInfo,\r\n                    finish,\r\n                    foil,\r\n                    format,\r\n                    frame,\r\n                    furiganaHelper,\r\n                    hasBackground,\r\n                    isDuelTerminalCard,\r\n                    isFirstEdition,\r\n                    isLegacyCard,\r\n                    isLimitedEdition,\r\n                    isLink,\r\n                    isPendulum,\r\n                    isSpeedCard,\r\n                    linkMap,\r\n                    name,\r\n                    nameStyle,\r\n                    nameStyleType,\r\n                    opacity,\r\n                    otherTextStyle,\r\n                    password,\r\n                    pendulumEffect,\r\n                    pendulumFrame,\r\n                    pendulumScaleBlue,\r\n                    pendulumScaleRed,\r\n                    pendulumStyle: { upSize: pendulumEffectUpSize, fontStyle: pendulumEffectFontStyle },\r\n                    pendulumTextStyle,\r\n                    pendulumSize,\r\n                    setId,\r\n                    star,\r\n                    starAlignment,\r\n                    statTextStyle,\r\n                    sticker,\r\n                    subFamily,\r\n                    typeAbility,\r\n                    typeTextStyle,\r\n                };\r\n            })\r\n            // .map(migrateCardData)\r\n            .filter(entry => {\r\n                return entry != null;\r\n            });\r\n    } catch (e) {\r\n        console.error('csvToCardList', e);\r\n        return [];\r\n    }\r\n};","import { clone } from 'ramda';\r\nimport { Card, FrameInfoMap, InternalCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport { subscribeWithSelector } from 'zustand/middleware';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { checkSpeedSkill, isCardDataEqual, normalizeCardEffect, normalizeCardName } from 'src/util';\r\n\r\nconst compareInt = (statLeft: string | number | undefined, statRight: string | number | undefined) => {\r\n    const parsedStatLeft = typeof statLeft === 'string' ? parseInt(statLeft) : statLeft;\r\n    const parsedStatRight = typeof statRight === 'string' ? parseInt(statRight) : statRight;\r\n    const isLeftFinite = parsedStatLeft ? isFinite(parsedStatLeft) : false;\r\n    const isRightFinite = parsedStatRight ? isFinite(parsedStatRight) : false;\r\n\r\n    if (isLeftFinite && !isRightFinite) return -1;\r\n    if (!isLeftFinite && isRightFinite) return 1;\r\n    if (isLeftFinite && isRightFinite) return (parsedStatRight ?? 0) - (parsedStatLeft ?? 0);\r\n\r\n    const fallbackStatLeft = statLeft === '?'\r\n        ? 1\r\n        : statLeft === ''\r\n            ? -1\r\n            : 0;\r\n    const fallbackStatRight = statRight === '?'\r\n        ? 1\r\n        : statRight === ''\r\n            ? -1\r\n            : 0;\r\n\r\n    if (\r\n        fallbackStatRight - fallbackStatLeft === 0\r\n        && typeof statLeft === 'string'\r\n        && typeof statRight === 'string'\r\n    ) return (statLeft ?? '').localeCompare(statRight);\r\n    return fallbackStatRight - fallbackStatLeft;\r\n};\r\nconst compareName = (l: InternalCard, r: InternalCard) => l.name.localeCompare(r.name);\r\nconst compareSetId = (l: InternalCard, r: InternalCard) => l.setId.localeCompare(r.setId);\r\nconst compareAtk = (l: InternalCard, r: InternalCard) => compareInt(l.atk, r.atk);\r\nconst compareDef = (l: InternalCard, r: InternalCard) => compareInt(l.def, r.def);\r\nconst compareStar = (l: InternalCard, r: InternalCard) => {\r\n    if (l.isLink && r.isLink) return r.linkMap.length - l.linkMap.length;\r\n    return compareInt(l.star, r.star);\r\n};\r\nconst compareFrame = (l: InternalCard, r: InternalCard) => {\r\n    const frameResult = FrameInfoMap[r.frame].sortWeight - FrameInfoMap[l.frame].sortWeight;\r\n\r\n    if (frameResult !== 0) return frameResult;\r\n\r\n    /** Assume we do not find frame result because it is \"auto\", and auto is the highest order */\r\n    const bottomFrameResult = (FrameInfoMap[r.pendulumFrame]?.sortWeight ?? 1000) - (FrameInfoMap[l.pendulumFrame]?.sortWeight ?? 1000);\r\n\r\n    return bottomFrameResult;\r\n};\r\nconst normalizeCard = (card: InternalCard) => {\r\n    const normalizedCard = { ...card };\r\n    const { frame, isLink } = normalizedCard;\r\n\r\n    if (frame === 'spell' || frame === 'trap' || checkSpeedSkill(normalizedCard)) {\r\n        normalizedCard.atk = '';\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n    if (isLink) {\r\n        normalizedCard.def = '';\r\n        normalizedCard.star = 0;\r\n    }\r\n\r\n    return normalizedCard;\r\n};\r\nconst chainCompare = (compareList: ((l: InternalCard, r: InternalCard) => number)[], lCard: InternalCard, rCard: InternalCard) => {\r\n    for (let cnt = 0; cnt < compareList.length; cnt++) {\r\n        const result = compareList[cnt](lCard, rCard);\r\n\r\n        if (result !== 0) return result;\r\n    }\r\n    return 0;\r\n};\r\nexport const SortFunctionMap = {\r\n    name: {\r\n        key: 'name',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareName,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    atk: {\r\n        key: 'atk',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareAtk,\r\n                        compareDef,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    def: {\r\n        key: 'def',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareDef,\r\n                        compareAtk,\r\n                        compareStar,\r\n                        compareFrame,\r\n                        compareName,\r\n                        compareSetId,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    set: {\r\n        key: 'set',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareSetId,\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n    level: {\r\n        key: 'level',\r\n        sortFunction: (cardList: InternalCard[]) => {\r\n            return cardList\r\n                .map(normalizeCard)\r\n                .sort((l, r) => chainCompare(\r\n                    [\r\n                        compareFrame,\r\n                        compareStar,\r\n                        compareName,\r\n                        compareSetId,\r\n                        compareAtk,\r\n                        compareDef,\r\n                    ],\r\n                    l,\r\n                    r,\r\n                ));\r\n        },\r\n    },\r\n} as const;\r\nconst applyFilter = (\r\n    cardList: InternalCard[],\r\n    filterMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n) => {\r\n    const filterList = Object\r\n        .values(filterMap)\r\n        .filter((entry): entry is (cardList: InternalCard[]) => InternalCard[] => entry != null);\r\n\r\n    if (filterList.length === 0) return cardList;\r\n    return filterList.reduce((filteredList, currentFilter) => {\r\n        return currentFilter(filteredList);\r\n    }, cardList);\r\n};\r\ntype CardFilter = {\r\n    type: 'text',\r\n    value: string,\r\n};\r\ntype CardFilterType = CardFilter['type'];\r\nexport type CardListStore = {\r\n    activeId: string,\r\n    cardDisplayList: InternalCard[],\r\n    cardList: InternalCard[],\r\n    filterFunctionMap: Partial<Record<CardFilterType, (cardList: InternalCard[]) => InternalCard[]>>,\r\n    filterResetSignal: number,\r\n    isListDirty: boolean,\r\n    listName: string,\r\n    pendingActiveCard?: InternalCard,\r\n    visible: boolean,\r\n    addCard: (card: Card) => void,\r\n    changeActiveCard: (nextActiveCard: InternalCard, checkPurity?: boolean) => void,\r\n    changeEditStatus: (event: 'download' | 'load' | 'switch-card' | 'update-card') => void,\r\n    deleteCard: (id: string) => void,\r\n    duplicateCard: (card: Card, ) => void,\r\n    resetFilter: () => void,\r\n    setActiveId: (id: string) => void,\r\n    setCardList: (cardList: InternalCard[], activeId?: string) => void,\r\n    setFilterFunction: (type: CardFilter) => void,\r\n    setListName: (name: string) => void,\r\n    setPendingActiveCard: (card?: InternalCard) => void,\r\n    sortList: (type: keyof typeof SortFunctionMap) => void,\r\n    toggleVisible: (status?: boolean) => void,\r\n};\r\nexport const useCardList = create<\r\n    CardListStore,\r\n    [['zustand/subscribeWithSelector', never]]\r\n>(subscribeWithSelector((set) => {\r\n    return {\r\n        activeId: '',\r\n        cardDisplayList: [],\r\n        cardList: [],\r\n        filterFunctionMap: {},\r\n        filterResetSignal: 0,\r\n        isListDirty: false,\r\n        listName: 'card-list',\r\n        pendingActiveCard: undefined,\r\n        visible: localStorage.getItem('manager-panel-visible') === 'true',\r\n        setFilterFunction: ({ type, value }) => set(({\r\n            cardList,\r\n            filterFunctionMap,\r\n        }) => {\r\n            const nextFilterFunctionMap = { ...filterFunctionMap };\r\n            if (type === 'text') {\r\n                const normalizedValue = value.toLowerCase();\r\n                nextFilterFunctionMap[type] = cardList => {\r\n                    return cardList.filter(({ name, effect, pendulumEffect }) => {\r\n                        return (normalizeCardName(name).toLowerCase()\r\n                            + normalizeCardEffect(effect).toLowerCase()\r\n                            + normalizeCardEffect(pendulumEffect).toLowerCase()).includes(normalizedValue);\r\n                    });\r\n                };\r\n            }\r\n\r\n            return {\r\n                filterFunctionMap: nextFilterFunctionMap,\r\n                cardDisplayList: applyFilter(cardList, nextFilterFunctionMap),\r\n            };\r\n        }),\r\n        resetFilter: () => {\r\n            set(({ filterResetSignal, cardList }) => {\r\n                return {\r\n                    filterFunctionMap: {},\r\n                    filterResetSignal: filterResetSignal + 1,\r\n                    cardDisplayList: [...cardList],\r\n                };\r\n            });\r\n        },\r\n        addCard: card => set(({ cardList }) => {\r\n            const id = uuid();\r\n            const newCard = { id, ...card };\r\n\r\n            return {\r\n                activeId: newCard.id,\r\n                cardList: [...cardList, newCard],\r\n                /** It maybe better to always display the new card regardless of current search, so user does not confuse about missing the card */\r\n                cardDisplayList: [...cardList, newCard],\r\n            };\r\n        }),\r\n        changeEditStatus: event => {\r\n            if (event === 'load') set({ isListDirty: false });\r\n            if (event === 'download') set({ isListDirty: false });\r\n        },\r\n        toggleVisible: status => set(({ visible }) => ({ visible: status ?? !visible })),\r\n        setListName: name => set({ listName: name }),\r\n        setPendingActiveCard: card => set({ pendingActiveCard: card }),\r\n        changeActiveCard: (nextActiveCard, checkPurity = false) => {\r\n            set(({ cardList, cardDisplayList, isListDirty }) => {\r\n                let nextIsListDirty = isListDirty;\r\n\r\n                /** There is multiple interactions that does not change list's purity, such as switch card inside the current list, or automatic adjustment of cropped canvas upon receiving new image. */\r\n                if (nextIsListDirty === false && checkPurity) {\r\n                    const targetCard = cardList.find(card => card.id === nextActiveCard.id);\r\n\r\n                    nextIsListDirty = targetCard\r\n                        ? !isCardDataEqual(nextActiveCard, targetCard)\r\n                        : true;\r\n                }\r\n                const nextCardList = cardList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                const nextCardDisplayList = cardDisplayList.map(card => {\r\n                    if (card.id === nextActiveCard.id) return { ...nextActiveCard };\r\n                    return card;\r\n                });\r\n                return {\r\n                    isListDirty: nextIsListDirty,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: nextCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        setActiveId: id => set({ activeId: id }),\r\n        setCardList: (cardList, activeId) => {\r\n            /** Reset all filter each time a new list is coming */\r\n            set({\r\n                filterFunctionMap: {},\r\n                isListDirty: false,\r\n                activeId: activeId ?? cardList[0]?.id,\r\n                cardList: cardList,\r\n                cardDisplayList: [...cardList],\r\n            });\r\n        },\r\n        deleteCard: id => {\r\n            set(({ cardList, activeId, cardDisplayList }) => {\r\n                const normalizedCardList = cardList.filter(card => card.id !== id);\r\n                const normalizedCardDisplayList = cardDisplayList.filter(card => card.id !== id);\r\n                const currentActiveId = normalizedCardDisplayList.findIndex(card => card.id === activeId);\r\n                const nextActiveId = activeId === id\r\n                    ? normalizedCardDisplayList[currentActiveId - 1]?.id ?? normalizedCardDisplayList[0]?.id ?? ''\r\n                    : activeId;\r\n\r\n                return {\r\n                    activeId: nextActiveId,\r\n                    cardList: normalizedCardList,\r\n                    cardDisplayList: normalizedCardDisplayList,\r\n                };\r\n            });\r\n        },\r\n        duplicateCard: card => {\r\n            set(({ cardList, filterFunctionMap }) => {\r\n                const targetIndex = cardList.findIndex(({ name }) => name === card.name);\r\n                const clonedId = uuid();\r\n                const clonedCard = {\r\n                    ...clone(card),\r\n                    name: `${card.name} - Copy`,\r\n                    id: clonedId,\r\n                };\r\n                const nextCardList = targetIndex < 0\r\n                    ? [...cardList, clonedCard]\r\n                    : [\r\n                        ...cardList.slice(0, targetIndex),\r\n                        cardList[targetIndex],\r\n                        clonedCard,\r\n                        ...cardList.slice(targetIndex + 1, cardList.length),\r\n                    ];\r\n\r\n                return {\r\n                    activeId: clonedId,\r\n                    pendingActiveCard: clonedCard,\r\n                    cardList: nextCardList,\r\n                    cardDisplayList: applyFilter(nextCardList, filterFunctionMap),\r\n                };\r\n            });\r\n        },\r\n        sortList: type => {\r\n            set(({ cardDisplayList, cardList }) => {\r\n                const sortedDisplayList = SortFunctionMap[type].sortFunction(cardDisplayList);\r\n                const sortedList = SortFunctionMap[type].sortFunction(cardList);\r\n\r\n                return {\r\n                    cardDisplayList: sortedDisplayList,\r\n                    /** We must also sort the main list here, because user can export the file right after sort, which should be reflect the current sort they see on the screen */\r\n                    cardList: sortedList,\r\n                };\r\n            });\r\n        },\r\n    };\r\n}));\r\n\r\nexport * from './csv';","import { Card, InternalCard, OtherMakerCard, YgoproDeckCard, getDefaultInternalCard, getEmptyCard } from 'src/model';\r\nimport { create } from 'zustand';\r\nimport debounce from 'lodash.debounce';\r\nimport throttle from 'lodash.throttle';\r\nimport {\r\n    migrateCardData,\r\n    legacyRebuildCardData,\r\n    checkYgoCarderCard,\r\n    checkCompactYgoCarderCard,\r\n    decompressCardData,\r\n    cardMakerToYgoCarderData,\r\n    checkYgoproDeckCard,\r\n    ygoproDeckToYgoCarderData,\r\n} from 'src/util';\r\nimport { notification } from 'antd';\r\nimport { getLanguage } from './use-i18n';\r\nimport { useCardList } from './use-card-list';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\n/** This method decode the following data into ygocarder uncompress data:\r\n * * Compressed legacy ygocarder data\r\n * * Uncompress ygocarder data (return as is)\r\n * * Compressed ygocarder data\r\n * * Other vendor data\r\n */\r\nexport const decodeCard = (\r\n    cardData: Record<string, any> | string | null,\r\n    baseCard?: Card,\r\n): {\r\n    card: InternalCard,\r\n    isPartial: boolean,\r\n} => {\r\n    const id = uuid();\r\n    let decodedCard = getEmptyCard();\r\n    let isPartial = false;\r\n    if (!cardData) return { isPartial, card: { ...decodedCard, id } };\r\n    try {\r\n        const normalizedCard = typeof cardData === 'string'\r\n            ? JSON.parse(cardData) as Record<string, any> | { data: Record<string, any>[] }\r\n            : cardData;\r\n\r\n        /** Merge card */\r\n        if (baseCard) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            /** First chance, assume it is a partial compressed card */\r\n            if (Object.keys(fullCard).length > 0) {\r\n                decodedCard = migrateCardData(fullCard, baseCard);\r\n            }\r\n            /** Second chance, assume it is a partial card */\r\n            else {\r\n                decodedCard = migrateCardData(normalizedCard, baseCard);\r\n            }\r\n        }\r\n        else if (checkYgoCarderCard(normalizedCard)) {\r\n            decodedCard = migrateCardData(normalizedCard);\r\n        }\r\n        else if (checkCompactYgoCarderCard(normalizedCard)) {\r\n            const fullCard: Record<string, any> = decompressCardData(normalizedCard);\r\n\r\n            decodedCard = migrateCardData(fullCard);\r\n        }\r\n        /** User may paste the entire YgoproDeck repsonse, to make it more convenient, we automatically unwrap the first item for them */\r\n        else if (Array.isArray(normalizedCard.data)) {\r\n            const unwrappedCard = Array.isArray(normalizedCard.data) ? normalizedCard.data[0] : normalizedCard;\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(unwrappedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else if (checkYgoproDeckCard(normalizedCard)) {\r\n            const { isPartial: isPartialCard, result } = ygoproDeckToYgoCarderData(normalizedCard as YgoproDeckCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n        else {\r\n            const { isPartial: isPartialCard, result } = cardMakerToYgoCarderData(normalizedCard as OtherMakerCard);\r\n            isPartial = isPartialCard;\r\n            decodedCard = result;\r\n        }\r\n    } catch (e) {\r\n        console.error('decodedCard', cardData, e);\r\n        try {\r\n            decodedCard = legacyRebuildCardData(cardData, true) as Card;\r\n            notification.info({\r\n                message: getLanguage()['service.decode.outdated.message'],\r\n                description: getLanguage()['service.decode.outdated.description'],\r\n            });\r\n        } catch (e) {\r\n            console.error('cardData', cardData, e);\r\n            notification.error({\r\n                message: getLanguage()['service.decode.error.message'],\r\n                description: getLanguage()['service.decode.error.description'],\r\n            });\r\n        }\r\n    }\r\n    return {\r\n        isPartial,\r\n        card: { ...decodedCard, id },\r\n    };\r\n};\r\n\r\n/**\r\n * Acquire saved card when the session is just initialized. URL source is preferred over local storage source.\r\n */\r\nexport const retrieveSavedCard = (): InternalCard => {\r\n    try {\r\n        const localCardVersion = localStorage.getItem('card-version');\r\n        const stringifedLocalCardData = localStorage.getItem('card-data');\r\n        const localCardData = stringifedLocalCardData\r\n            ? migrateCardData(JSON.parse(stringifedLocalCardData))\r\n            : null;\r\n\r\n        const urlCardData = (new URLSearchParams(window.location.search)).get('data');\r\n        if (urlCardData) {\r\n            /**\r\n             * Because url card does not store offline image, we search for local storage to match the image if possible.\r\n             * The trick here is that everytime user want to unload the tab, we save the current card data (including the offline image) into local storage first. That way:\r\n             *   * If they reload the tab, the offline image can be restored from local storage. Even if they have many tabs, the tab they are going to reload will save (become the newest one) before reloading, and display the exact image.\r\n             *   * If they duplicate the tab, the new tab will read from the local storage so the offline will be duplicated as well.\r\n             *   * If they re-open the tab, the latest tab already save before being closed, so re-open it restore the exact image.\r\n             *   * If they close multiple tab, and want to re-open the one that is not the latest tab, we have no luck here.\r\n             */\r\n            const { card: decodedCard } = decodeCard(urlCardData);\r\n            const card = migrateCardData(decodedCard);\r\n            const { artSource, backgroundSource } = card;\r\n            if (artSource === 'online' && backgroundSource === 'online') {\r\n                return decodeCard(urlCardData).card;\r\n            }\r\n\r\n            const combinedCard = { ...card };\r\n            if (artSource === 'offline') combinedCard.artData = localCardData?.artData ?? '';\r\n            if (backgroundSource === 'offline') combinedCard.backgroundData = localCardData?.backgroundData ?? '';\r\n\r\n            return combinedCard;\r\n        } else if (localCardData !== null && localCardVersion === process.env.REACT_APP_VERSION) {\r\n            return localCardData;\r\n        }\r\n        return getDefaultInternalCard();\r\n    } catch (e) {\r\n        console.error(e);\r\n        return getDefaultInternalCard();\r\n    }\r\n};\r\n\r\nconst VariantConfigMap = {\r\n    debounce: { type: 'debounce' as const, wait: 400 },\r\n    throttle: { type: 'throttle' as const, wait: 1000 },\r\n};\r\nexport const isInternalCard = (card: Card | InternalCard): card is InternalCard => {\r\n    return 'id' in card && card.id !== '';\r\n};\r\nexport type CardStore = {\r\n    card: InternalCard,\r\n    /**\r\n     * Note: If you pass a whole new card object here, it will skip the purity check by default\r\n     */\r\n    setCard: (\r\n        cardTransform: Card | InternalCard | ((currentCard: InternalCard) => InternalCard),\r\n        forcePurityCheck?: boolean,\r\n    ) => void,\r\n    getUpdater: (\r\n        key: string,\r\n        valueTransform?: (value: any) => any,\r\n        variant?: 'throttle' | 'debounce' | { type: 'throttle', wait: number } | { type: 'debounce', wait: number },\r\n    ) => (e: any) => void,\r\n};\r\nexport const useCard = create<CardStore>((set, get) => {\r\n    return {\r\n        card: getDefaultInternalCard(),\r\n        setCard: (cardTransform, forcePurityCheck) => {\r\n            /** Change some fields inside a card, check list purity afterward */\r\n            const changeActiveCard = useCardList.getState().changeActiveCard;\r\n            if (typeof cardTransform === 'function') {\r\n                set(cur => {\r\n                    const nextCard = cardTransform(cur.card);\r\n                    changeActiveCard(nextCard, forcePurityCheck ?? true);\r\n\r\n                    return { card: nextCard };\r\n                });\r\n            }\r\n            /** Change the whole card */\r\n            else if (isInternalCard(cardTransform)) {\r\n                changeActiveCard(cardTransform, forcePurityCheck);\r\n                set({ card: cardTransform });\r\n            }\r\n            else {\r\n                const normalizedCard = { id: uuid(), ...cardTransform };\r\n                changeActiveCard(normalizedCard, forcePurityCheck);\r\n                set({ card: normalizedCard });\r\n            }\r\n        },\r\n        getUpdater: (\r\n            key: string,\r\n            valueTransform: (value: any) => any = (value) => value,\r\n            variant,\r\n        ) => {\r\n            const { setCard } = get();\r\n            const returnFunction = (e: any) => {\r\n                setCard(current => ({\r\n                    ...current,\r\n                    [key]: valueTransform(typeof e === 'string' || typeof e === 'number' || Array.isArray(e) ? e : e?.target?.value),\r\n                }));\r\n            };\r\n\r\n            if (!variant) return returnFunction;\r\n            const variantConfig = typeof variant === 'string'\r\n                ? VariantConfigMap[variant] ?? undefined\r\n                : variant;\r\n\r\n            if (!variantConfig) return returnFunction;\r\n            const { wait, type } = variantConfig;\r\n\r\n            if (type === 'debounce') return debounce(returnFunction, wait);\r\n            if (type === 'throttle') return throttle(returnFunction, wait);\r\n\r\n            return returnFunction;\r\n        }\r\n    };\r\n});","import { CanvasConst, ExportFormat } from 'src/model';\r\nimport { create } from 'zustand';\r\n\r\nexport type Setting = {\r\n    globalScale: number,\r\n    exportFormat: ExportFormat,\r\n    resolution: [number, number],\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n    allowHotkey: boolean,\r\n    reduceMotionColor: boolean,\r\n    mirrorPendulumScale: boolean,\r\n};\r\nexport type SettingStore = {\r\n    setting: Setting,\r\n    updateSetting: (transformerOrPayload: Partial<Setting> | ((currentSetting: Setting) => Setting)) => void,\r\n};\r\nexport const useSetting = create<SettingStore>((set) => {\r\n    const {\r\n        allowHotkey,\r\n        exportFormat,\r\n        reduceMotionColor,\r\n        resolution,\r\n        globalScale,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n        mirrorPendulumScale,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem('setting') ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useSetting: Error when getting cached setting', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        setting: {\r\n            globalScale: typeof globalScale === 'number' && globalScale <= CanvasConst.maximumScale\r\n                ? globalScale\r\n                : 1,\r\n            exportFormat: typeof exportFormat === 'string' ? exportFormat as ExportFormat : 'csv',\r\n            resolution: Array.isArray(resolution) && typeof resolution[0] === 'number' && typeof resolution[1] === 'number'\r\n                ? resolution as [number, number]\r\n                : [CanvasConst.width, CanvasConst.height],\r\n            allowHotkey: typeof allowHotkey === 'boolean' ? allowHotkey : true,\r\n            reduceMotionColor: typeof reduceMotionColor === 'boolean' ? reduceMotionColor : false,\r\n            showCreativeOption: typeof showCreativeOption === 'boolean' ? showCreativeOption : true,\r\n            showExtraDecorativeOption: typeof showExtraDecorativeOption === 'boolean' ? showExtraDecorativeOption : true,\r\n            mirrorPendulumScale: typeof mirrorPendulumScale === 'boolean' ? mirrorPendulumScale : false,\r\n        },\r\n        updateSetting: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newSetting = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.setting)\r\n                    : { ...currentStore.setting, ...transformerOrPayload };\r\n\r\n                localStorage.setItem('setting', JSON.stringify(newSetting));\r\n\r\n                return {\r\n                    setting: newSetting,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});","import { useCallback, useEffect, useRef } from 'react';\r\nimport { compressCardData, insertUrlParam, normalizeCardName } from 'src/util';\r\nimport { useCard } from './use-card';\r\nimport { CardOpacity, PendulumSize } from 'src/model';\r\nimport { useSetting } from './use-setting';\r\nimport { notification } from 'antd';\r\nimport { useLanguage } from './use-i18n';\r\n\r\nexport type UseCardExport = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    exportCanvasRef: React.RefObject<HTMLCanvasElement>,\r\n    exportRef: React.MutableRefObject<{\r\n        currentPipeline: Promise<void>;\r\n        pipelineRunning: boolean;\r\n    }>,\r\n    onExport: (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        isRelevant: () => boolean,\r\n    }) => Promise<void>,\r\n    onDownloadError: () => void,\r\n    onDownloadComplete: () => void,\r\n};\r\nexport const useCardExport = ({\r\n    isTainted,\r\n    isInitializing,\r\n    exportCanvasRef,\r\n    exportRef,\r\n    onExport,\r\n    onDownloadError,\r\n    onDownloadComplete,\r\n}: UseCardExport) => {\r\n    const language = useLanguage();\r\n    const {\r\n        card: currentCard,\r\n    } = useCard();\r\n    const resolution = useSetting(state => state.setting.resolution);\r\n    const {\r\n        opacity,\r\n        name,\r\n        isPendulum,\r\n        pendulumSize,\r\n    } = currentCard;\r\n    const pendingSave = useRef(false);\r\n\r\n    const download = useCallback((size: [number, number] = resolution) => {\r\n        const drawCanvas = exportCanvasRef.current;\r\n        /** Clone node so we can resize it as will */\r\n        const clonedCanvas = drawCanvas?.cloneNode() as HTMLCanvasElement | null;\r\n        const drawCanvasContext = drawCanvas?.getContext('2d');\r\n        const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n        if (drawCanvas && drawCanvasContext\r\n            && clonedCanvas && clonedCanvasContext\r\n            && !isTainted\r\n        ) {\r\n            try {\r\n                if (size) {\r\n                    clonedCanvas.width = size[0];\r\n                    clonedCanvas.height = size[1];\r\n                }\r\n                /** Resize here */\r\n                clonedCanvasContext.drawImage(\r\n                    drawCanvas,\r\n                    0, 0, drawCanvas.width, drawCanvas.height,\r\n                    0, 0, clonedCanvas.width, clonedCanvas.height,\r\n                );\r\n\r\n                const normalizedName = normalizeCardName(name);\r\n                var link = document.createElement('a');\r\n                link.download = normalizedName\r\n                    ? `${normalizedName}.png`\r\n                    : 'card.png';\r\n                link.href = clonedCanvas.toDataURL('image/png');\r\n                link.click();\r\n            } catch (e) {\r\n                onDownloadError();\r\n            }\r\n        }\r\n        document.querySelector('#export-canvas-guard')?.classList.remove('guard-on');\r\n        onDownloadComplete();\r\n    }, [exportCanvasRef, isTainted, name, resolution, onDownloadComplete, onDownloadError]);\r\n    const onSave = (size?: [number, number]) => {\r\n        document.querySelector('#export-canvas-guard')?.classList.add('guard-on');\r\n        const queuingSize = size ? [...size] as [number, number] : undefined;\r\n        /** Prevent split-second download. By using hotkey user is able to perform extremely fast save process before the pipeline start running, thus getting the previous card data instead of the most recent one. */\r\n        setTimeout(() => {\r\n            if (exportRef.current.pipelineRunning === false) {\r\n                download(queuingSize);\r\n            } else pendingSave.current = true;\r\n        }, 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const normalizedName = normalizeCardName(name);\r\n\r\n            if (relevant) {\r\n                document.title = normalizedName\r\n                    ? `${normalizedName} - Yu-Gi-Oh Carder`\r\n                    : 'Yu-Gi-Oh Carder';\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [name]);\r\n\r\n    useEffect(() => {\r\n        let saveBeforeReload = () => {\r\n            localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n            localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n        };\r\n        window.addEventListener('beforeunload', saveBeforeReload);\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', saveBeforeReload);\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        if (isInitializing === false) {\r\n            try {\r\n                localStorage.setItem('card-data', JSON.stringify(currentCard));\r\n                localStorage.setItem('card-version', process.env.REACT_APP_VERSION ?? 'unknown');\r\n            } catch (e) {\r\n                /** Ensure it does not fire repeatedly */\r\n                const key = 'fail-to-set-storage-notification';\r\n                notification.close(key);\r\n                notification.error({\r\n                    key,\r\n                    message: language['error.card-max-size.message'],\r\n                    description: language['error.card-max-size.description'],\r\n                });\r\n            }\r\n\r\n            /**\r\n             * Run export pipeline:\r\n             * - Immediately mark the pipeline as running, then run wait for the current pipeline (1).\r\n             * - If the (1) pipeline is no longer relevant, end effect.\r\n             * - Otherwise (the current pipeline is the newest), start export pipeline, this export pipeline is now the current pipeline (2).\r\n             * - If the (2) pipeline is no longer relevant, end effect.\r\n             * - Otherwise finish the pipeline and write result, also mark the pipeline as no longer running.\r\n             */\r\n            (async () => {\r\n                const canvasRef = exportCanvasRef.current;\r\n                if (canvasRef) {\r\n                    window.addEventListener('beforeunload', confirmReload);\r\n                    document.getElementById('export-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('preview-canvas')?.classList.remove('js-export-available');\r\n                    document.getElementById('export-canvas-guard')?.setAttribute('style', '');\r\n                    document.getElementById('save-button-waiting')?.setAttribute('style', 'display: block');\r\n\r\n                    exportRef.current.pipelineRunning = true;\r\n                    /** Artifical delay, turn on to test export timing */\r\n                    // await new Promise(resolve => setTimeout(() => resolve(true), 3000));\r\n                    await exportRef.current.currentPipeline;\r\n\r\n                    if (relevant) {\r\n                        exportRef.current.currentPipeline = onExport({\r\n                            isPendulum,\r\n                            opacity,\r\n                            pendulumSize,\r\n                            isRelevant: () => relevant,\r\n                        });\r\n\r\n                        await exportRef.current.currentPipeline;\r\n                        if (relevant) {\r\n                            /** Never include art data here, it will easily exceed the limit of url length */\r\n                            const normalizedCard = { ...currentCard, artData: '', backgroundData: '' };\r\n                            const condensedCard = JSON.stringify(compressCardData(normalizedCard));\r\n                            if (typeof condensedCard === 'string') insertUrlParam('data', condensedCard);\r\n\r\n                            document.getElementById('export-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('preview-canvas')?.classList.add('js-export-available');\r\n                            document.getElementById('export-canvas-guard')?.setAttribute('style', 'display: none');\r\n                            document.getElementById('save-button-waiting')?.setAttribute('style', 'display: none');\r\n                            window.removeEventListener('beforeunload', confirmReload);\r\n                            exportRef.current.pipelineRunning = false;\r\n\r\n                            if (pendingSave.current) {\r\n                                pendingSave.current = false;\r\n                                download();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n            relevant = false;\r\n        };\r\n    });\r\n\r\n    return {\r\n        onSave,\r\n        isPipelineRunning: () => exportRef.current.pipelineRunning,\r\n    };\r\n};","import { CanvasConst, DEFAULT_PENDULUM_SIZE, FinishInformation, FinishMap, PendulumSize } from 'src/model';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth, maximumScale } = CanvasConst;\r\n\r\nexport const randomDarkColor = () => '#000000'.replace(/0/g, () => (~~(Math.random() * 12 + 2)).toString(16));\r\n\r\n/** Draw a straight line with random color, used for measurement debug. It take true edge and width, but will draw based on the current scale ratio. */\r\nexport const drawMarker = ({\r\n    ctx,\r\n    color = randomDarkColor(), width,\r\n    offset = 4,\r\n    edge, baseline,\r\n    xRatio,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    color?: string, width: number,\r\n    offset?: number,\r\n    edge: number, baseline: number,\r\n    xRatio: number,\r\n}) => {\r\n    const currentFillStyle = ctx.fillStyle;\r\n    ctx.fillStyle = color;\r\n    ctx.beginPath();\r\n    ctx.rect(edge / xRatio, baseline + 1 + Math.random() * offset, width / xRatio, 2);\r\n    // ctx.fill();\r\n    ctx.fillStyle = currentFillStyle;\r\n};\r\n\r\n/**\r\n * @summary Letter spacing rules:\r\n * * It is based on the letter width (so each letter has different spacing), default is no spacing (0).\r\n * * Positive letter spacing will create a gap between each letter, and vice versa.\r\n * * Each letter distribute the gap evenly to their left and right side. So for example if letter spacing is 50% (0.5), it will have a gap equal to 25% (0.25) of its width.\r\n */\r\n\r\n/** Draw a left-aligned text with provided letter spacing. This function take true edge and baseline. It return the right side of the newly created text. */\r\nexport const fillTextLeftWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacingRatio: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'left';\r\n    const charList = str.split('');\r\n    let curLeft = edge;\r\n\r\n    charList.forEach(char => {\r\n        ctx.fillText(char, curLeft, baseline);\r\n        if (stroke) ctx.strokeText(char, curLeft, baseline);\r\n        curLeft += ctx.measureText(char).width * (2 + letterSpacingRatio) / 2;\r\n    });\r\n\r\n    return curLeft;\r\n};\r\n/** Draw a right-aligned text with provided letter spacing. This function take true edge and baseline. It return the left side of the newly created text. */\r\nexport const fillTextRightWithSpacing = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    str: string,\r\n    letterSpacing: number,\r\n    edge: number,\r\n    baseline: number,\r\n    option?: {\r\n        stroke?: boolean,\r\n    }\r\n) => {\r\n    if (!ctx || !str) return edge;\r\n\r\n    const { stroke = false } = option ?? {};\r\n    ctx.textAlign = 'right';\r\n    const charList = str.split('');\r\n    let curRight = edge;\r\n\r\n    charList.forEach((c, index) => {\r\n        const char = charList[charList.length - index - 1];\r\n        ctx.fillText(char, curRight, baseline);\r\n        if (stroke) ctx.strokeText(char, curRight, baseline);\r\n        curRight -= ctx.measureText(char).width * (2 + letterSpacing) / 2;\r\n    });\r\n    return curRight;\r\n};\r\n\r\n/** Clear current canvas, it also ensure canvas existed so we do not need to check for afterward. */\r\nexport const clearCanvas = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    width = CanvasWidth * maximumScale,\r\n    height = CanvasHeight * maximumScale,\r\n): ctx is CanvasRenderingContext2D => {\r\n    if (ctx) {\r\n        ctx.clearRect(0, 0, width, height);\r\n\r\n        return true;\r\n    };\r\n    return false;\r\n};\r\n\r\n/** Each finish object may contain many parts, each part has its own set of instruction. This function will abstract all the looping logic so we can instantly apply a finish to some card's part. */\r\nexport const getFinishIterator = (\r\n    finish: string[],\r\n    finishMap: Record<string, FinishInformation> = FinishMap,\r\n) => {\r\n    return async (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string, pendulumSuffix: string) => Promise<any>,\r\n        pendulumSize?: PendulumSize,\r\n    ) => {\r\n        if (!ctx || !Array.isArray(finish) || finish.length <= 0) return Promise.resolve();\r\n        for (const finishType of finish) {\r\n            const finishInformation = finishMap[finishType];\r\n            if (caller && finishMap[finishType]) {\r\n                const { partInstructionMap, pendulumSubstituteMap } = finishInformation;\r\n                const instructionList = name ? partInstructionMap[name] ?? [] : [];\r\n                const pendulumSuffix = pendulumSize\r\n                    ? pendulumSubstituteMap[pendulumSize] ?? pendulumSize\r\n                    : DEFAULT_PENDULUM_SIZE;\r\n\r\n                if (instructionList.length) {\r\n                    for (const { blendMode = 'source-over', opacity = 1 } of instructionList) {\r\n                        ctx.globalCompositeOperation = blendMode;\r\n                        ctx.globalAlpha = opacity;\r\n\r\n                        await caller(finishType, pendulumSuffix);\r\n                    }\r\n                } else {\r\n                    await caller(finishType, pendulumSuffix);\r\n                }\r\n                ctx.globalAlpha = 1;\r\n                ctx.globalCompositeOperation = 'source-over';\r\n            }\r\n        }\r\n        ctx.globalAlpha = 1;\r\n        ctx.globalCompositeOperation = 'source-over';\r\n    };\r\n};\r\n\r\nconst DEFAULT_LINE_COLOR = '#000000';\r\nconst DEFAULT_LINE_WIDTH = 0;\r\nconst DEFAULT_SHADOW_BLUR = 0;\r\nconst DEFAULT_SHADOW_COLOR = '#000000';\r\nconst DEFAULT_SHADOW_OFFSET_X = 0;\r\nconst DEFAULT_SHADOW_OFFSET_Y = 0;\r\nconst DEFAULT_TEXT_COLOR = '#000000';\r\n\r\nexport const setTextStyle = ({\r\n    ctx,\r\n    x,\r\n    y,\r\n    blur,\r\n    color,\r\n    colorGradient,\r\n    shadowColor,\r\n    lineColor,\r\n    lineColorGradient,\r\n    lineWidth,\r\n    globalScale = 1,\r\n    useDefault = true,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    useDefault?: boolean,\r\n    colorGradient?: CanvasGradient,\r\n    lineColorGradient?: CanvasGradient,\r\n} & CanvasTextStyle) => {\r\n    if (useDefault || typeof x === 'number') ctx.shadowOffsetX = (x ?? DEFAULT_SHADOW_OFFSET_X) * globalScale;\r\n    if (useDefault || typeof y === 'number') ctx.shadowOffsetY = (y ?? DEFAULT_SHADOW_OFFSET_Y) * globalScale;\r\n    if (useDefault || typeof blur === 'number') ctx.shadowBlur = (blur ?? DEFAULT_SHADOW_BLUR) * globalScale;\r\n    if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = shadowColor ?? DEFAULT_SHADOW_COLOR;\r\n    if (useDefault || typeof color === 'string') ctx.fillStyle = colorGradient ?? color ?? DEFAULT_TEXT_COLOR;\r\n    if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = lineColorGradient ?? lineColor ?? DEFAULT_LINE_COLOR;\r\n    if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = (lineWidth ?? DEFAULT_LINE_WIDTH) * globalScale;\r\n\r\n    return () => {\r\n        if (useDefault || typeof x === 'number') ctx.shadowOffsetX = DEFAULT_SHADOW_OFFSET_X;\r\n        if (useDefault || typeof y === 'number') ctx.shadowOffsetY = DEFAULT_SHADOW_OFFSET_Y;\r\n        if (useDefault || typeof blur === 'number') ctx.shadowBlur = DEFAULT_SHADOW_BLUR;\r\n        if (useDefault || typeof shadowColor === 'string') ctx.shadowColor = DEFAULT_SHADOW_COLOR;\r\n        if (useDefault || typeof color === 'string') ctx.fillStyle = DEFAULT_TEXT_COLOR;\r\n        if (useDefault || typeof lineColor === 'string') ctx.strokeStyle = DEFAULT_LINE_COLOR;\r\n        if (useDefault || typeof lineWidth === 'number') ctx.lineWidth = DEFAULT_LINE_WIDTH;\r\n    };\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { setTextStyle } from './canvas-util';\r\n\r\nconst imageCacheMap: Record<string, {\r\n    image: HTMLImageElement,\r\n    ready: boolean,\r\n    error: boolean,\r\n    cache: boolean,\r\n}> = {};\r\n\r\nexport const drawFrom = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /**\r\n         * Manually caching this image is not a good idea? Should have just let the browser do all the work. We are trying to reinvent the wheel here.\r\n         * \r\n         * Still, caching image prevent constant flashing when draw, so we will keep it as long as we can until we figure a better UX.\r\n        */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n            ctx.drawImage(image, actualDX, actualDY);\r\n            /** Same treatment for chrome mobile bug */\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n\r\n                ctx.drawImage(image, actualDX, actualDY);\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAsset = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number) = 0,\r\n    dy: number | ((image: HTMLImageElement) => number) = 0,\r\n) => {\r\n    return await drawFrom(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n    );\r\n};\r\n\r\nexport const drawFromWithSize = async (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    source: string,\r\n    dx: number | ((image: HTMLImageElement) => number),\r\n    dy: number | ((image: HTMLImageElement) => number),\r\n    dw: number | ((image: HTMLImageElement) => number),\r\n    dh: number | ((image: HTMLImageElement) => number),\r\n    sx?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sy?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sw?: undefined | number | ((image: HTMLImageElement) => number),\r\n    sh?: undefined | number | ((image: HTMLImageElement) => number),\r\n) => {\r\n    if (!ctx || source === '') return new Promise<boolean>(resolve => resolve(false));\r\n    return new Promise<boolean>(resolve => {\r\n        /** Check `drawFrom` comment for disable reasons */\r\n        if (imageCacheMap[source]?.ready === true) {\r\n            const image = imageCacheMap[source].image;\r\n            const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n            const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n            const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n            const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n            const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n            const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n            const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n            const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n\r\n            if (\r\n                typeof actualSX === 'number'\r\n                && typeof actualSY === 'number'\r\n                && typeof actualSW === 'number'\r\n                && typeof actualSH === 'number'\r\n            ) {\r\n                ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n            } else {\r\n                ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n            }\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n        if (imageCacheMap[source]?.error) {\r\n            setTimeout(() => resolve(true), 0);\r\n            return;\r\n        }\r\n\r\n        const imageCached = imageCacheMap[source] && (imageCacheMap[source].cache || imageCacheMap[source].ready);\r\n        const image = imageCached\r\n            ? imageCacheMap[source].image\r\n            : new Image();\r\n\r\n        if (!imageCached) image.src = process.env.PUBLIC_URL + source;\r\n        image.addEventListener(\r\n            'load',\r\n            () => {\r\n                const actualDX = typeof dx === 'number' ? dx : dx(image);\r\n                const actualDY = typeof dy === 'number' ? dy : dy(image);\r\n                const actualDW = typeof dw === 'number' ? dw : dw(image);\r\n                const actualDH = typeof dh === 'number' ? dh : dh(image);\r\n                const actualSX = typeof sx === 'number' ? sx : sx?.(image);\r\n                const actualSY = typeof sy === 'number' ? sy : sy?.(image);\r\n                const actualSW = typeof sw === 'number' ? sw : sw?.(image);\r\n                const actualSH = typeof sh === 'number' ? sh : sh?.(image);\r\n    \r\n                if (\r\n                    typeof actualSX === 'number'\r\n                    && typeof actualSY === 'number'\r\n                    && typeof actualSW === 'number'\r\n                    && typeof actualSH === 'number'\r\n                ) {\r\n                    ctx.drawImage(image, actualSX, actualSY, actualSW, actualSH, actualDX, actualDY, actualDW, actualDH);\r\n                } else {\r\n                    ctx.drawImage(image, actualDX, actualDY, actualDW, actualDH);\r\n                }\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].ready = true;\r\n                    imageCacheMap[source].error = false;\r\n                }\r\n                resolve(true);\r\n            },\r\n            { once: true },\r\n        );\r\n        image.addEventListener(\r\n            'error',\r\n            () => {\r\n                if (imageCacheMap[source]) {\r\n                    imageCacheMap[source].error = true;\r\n                }\r\n                resolve(false);\r\n            },\r\n            { once: true },\r\n        );\r\n\r\n        if (!imageCached) imageCacheMap[source] = {\r\n            image: image,\r\n            ready: false,\r\n            error: false,\r\n            cache: true,\r\n        };\r\n    });\r\n};\r\nexport const drawAssetWithSize: typeof drawFromWithSize = async (\r\n    ctx,\r\n    source,\r\n    dx, dy,\r\n    dw, dh,\r\n    sx, sy,\r\n    sw, sh,\r\n) => {\r\n    return await drawFromWithSize(\r\n        ctx,\r\n        '/asset/image/' + source,\r\n        dx, dy,\r\n        dw, dh,\r\n        sx, sy,\r\n        sw, sh,\r\n    );\r\n};\r\n\r\nexport const drawWithStyle = async (\r\n    canvas: HTMLCanvasElement,\r\n    source: string,\r\n    dx: number, dy: number,\r\n    sw: number, sh: number,\r\n    globalScale: number,\r\n    style?: CanvasTextStyle,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const clonedCanvas = document.createElement('canvas');\r\n    clonedCanvas.width = sw;\r\n    clonedCanvas.height = sh;\r\n    const clonedCtx = clonedCanvas.getContext('2d', { willReadFrequently: true });\r\n\r\n    if (!clonedCtx || !ctx) return;\r\n\r\n    /**\r\n     * * First, we clone a canvas with the same size of the destination one.\r\n     * * Then, we fill the solid color from custom style into it, now the canvas is colored.\r\n     * * After that, we draw the asset into the colored canvas, with destination-in mode, this means the asset will only draw on the colored area (opacity factored). This way, we effectively ignore the original color from the asset, and only use the alpha channel.\r\n     * \r\n     * Needless to say this will not work very well with multi-colored asset.\r\n     * */\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    if (style?.color) {\r\n        clonedCtx.fillStyle = style.color;\r\n        clonedCtx.fillRect(0, 0, sw, sh);\r\n        clonedCtx.globalCompositeOperation = 'destination-in';\r\n    }\r\n    await drawAssetWithSize(clonedCtx, source, 0, 0, sw, sh);\r\n    clonedCtx.globalCompositeOperation = 'source-over';\r\n\r\n    /** After that, we draw the cloned canvas back into the main one, and apply corresponding shadow if needed. */\r\n    const resetMainCanvasStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.drawImage(clonedCanvas, dx, dy);\r\n    resetMainCanvasStyle();\r\n};","import {\r\n    ChiisaiRegex,\r\n    ChoonpuRegex,\r\n    FontDeviationMap,\r\n    HiraganaRegex,\r\n    KatakanaRegex,\r\n    MetricMethod,\r\n    NoSpaceRegex,\r\n    OCGBoxSpacingRatioMap,\r\n    OCGDotRegex,\r\n    OCGIncreasedLevel2WidthRegex,\r\n    OCGIncreasedWidthRegex,\r\n    OCGLastOfLineOffsetMap,\r\n    OCGNumberRegex,\r\n    OCGOffsetMap,\r\n    OCG_REDUCED_AT_END_LINE_RATIO,\r\n    TCGBoxSpacingRatioMap,\r\n    TCGLastOfLineOffsetMap,\r\n    TCGOffsetMap,\r\n    nonBreakableSymbolRegex,\r\n} from 'src/model';\r\n\r\n/**\r\n * Return the width of a letter. This function return true width of a scalable letter, but will return the inverse-scaled width of a non-scalable letter (based on the `xRatio` property). For example:\r\n *  * Canvas does not scaled: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 50px.\r\n *  * Canvas scaled down by 0.5: Letter \"A\" return 50px, while letter \"①\" (non-scalable) return 100px.\r\n *\r\n * Each letter has 3 main values:\r\n *  * `width`: The width of a character based on font size, for example all kanji with the same font size will have the same width, because each letter is designed within a consistent box.\r\n *  * `actualBoundWidth`: The width of actual image of a character based on its shape, for example letter of the sokuon \"ァ\" will have actualBoundingWidth much smaller than the kanji letter \"道\", even though they have the same font-size (and therefore same width).\r\n *  * `boundWidth`: It is actualBoundWidth + small padding at left and right so that the letter does not stick closely to each other.\r\n * \r\n * `metricMethod` dictate the ratio and calculation method of a letter, used for different use-cases.\r\n * \r\n * DO NOT apply font weight to the canvas while calling this function, as the result will become inconsistent.\r\n */\r\nexport const getLetterWidth = ({\r\n    ctx,\r\n    letter,\r\n    isLastOfLine = false,\r\n    debug,\r\n    fontStyle,\r\n    xRatio,\r\n    metricMethod = 'standard',\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    isLastOfLine?: boolean,\r\n    fontStyle: string,\r\n    xRatio: number,\r\n    metricMethod?: MetricMethod,\r\n    debug?: string,\r\n    globalScale: number,\r\n}) => {\r\n    if (nonBreakableSymbolRegex.test(letter)) return {\r\n        width: 0,\r\n        boundWidth: 0,\r\n    };\r\n\r\n    const boxSpacingRatioMap = fontStyle === 'tcg'\r\n        ? TCGBoxSpacingRatioMap\r\n        : OCGBoxSpacingRatioMap;\r\n    const offsetMap = fontStyle === 'tcg'\r\n        ? TCGOffsetMap\r\n        : OCGOffsetMap;\r\n    const lastOfLineOffsetMap = fontStyle === 'tcg'\r\n        ? TCGLastOfLineOffsetMap\r\n        : OCGLastOfLineOffsetMap;\r\n    const metric = ctx.measureText(letter);\r\n    const {\r\n        width,\r\n        actualBoundingBoxLeft,\r\n        actualBoundingBoxRight,\r\n    } = metric;\r\n    const actualBoundWidth = actualBoundingBoxLeft + actualBoundingBoxRight;\r\n    let kerningScaleRatio = 1;\r\n    if (metricMethod === 'name') {\r\n        kerningScaleRatio = 1 + (1 - xRatio) * 8;\r\n    }\r\n    const spacingRatio = metricMethod === 'name' || metricMethod === 'compact' || metricMethod === 'furigana'\r\n        ? 0.046875\r\n        : 0;\r\n    let boundWidth = actualBoundWidth;\r\n    let offsetRatio = (isLastOfLine\r\n        ? lastOfLineOffsetMap[letter]\r\n        : offsetMap[letter]) ?? 0;\r\n\r\n    if (fontStyle === 'tcg') {\r\n        let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width;\r\n\r\n        return {\r\n            width,\r\n            actualBoundWidth,\r\n            boundWidth: width + 2 * letterBoxSpacing,\r\n            metric,\r\n            offsetRatio,\r\n        };\r\n    }\r\n\r\n    let letterBoxSpacing = (boxSpacingRatioMap[letter] ?? 0) * width\r\n        + (metricMethod === 'furigana'\r\n            ? 0\r\n            : Math.min(\r\n                width * 0.075,\r\n                Math.max(0.450 * globalScale, width * spacingRatio) * kerningScaleRatio,\r\n            ));\r\n    let letterRatio = 1;\r\n    let endLineRatio = 1;\r\n    let standardMetricRatio = 1.000;\r\n    if (OCGDotRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana'\r\n            ? actualBoundWidth\r\n            : actualBoundWidth * (metricMethod === 'creator' ? 1.750 : 2.500);\r\n        standardMetricRatio = 0.600;\r\n    }\r\n    else if (ChoonpuRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.75);\r\n        letterBoxSpacing = 2 * globalScale;\r\n    }\r\n    else if (ChiisaiRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.7);\r\n    }\r\n    else if (OCGNumberRegex.test(letter)) {\r\n        boundWidth = width;\r\n    }\r\n    else if (OCGIncreasedLevel2WidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 2;\r\n    }\r\n    else if (OCGIncreasedWidthRegex.test(letter)) {\r\n        boundWidth = actualBoundWidth * 1.250 * (isLastOfLine ? OCG_REDUCED_AT_END_LINE_RATIO : 1);\r\n    }\r\n    else if (HiraganaRegex.test(letter)) {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    else if (KatakanaRegex.test(letter)) {\r\n        boundWidth = Math.max(actualBoundWidth, width * 0.690)\r\n            * (metricMethod === 'creator' ? 0.97500 : 1.000);\r\n    }\r\n    else if (NoSpaceRegex.test(letter)) {\r\n        boundWidth = width;\r\n        letterBoxSpacing = 0;\r\n    }\r\n    else {\r\n        boundWidth = metricMethod === 'furigana' ? actualBoundWidth : Math.max(actualBoundWidth, width * 0.750);\r\n    }\r\n    letterBoxSpacing = metricMethod === 'furigana' ? 0 : letterBoxSpacing;\r\n\r\n    const actualLetterWidth = width * letterRatio * endLineRatio;\r\n\r\n    if (debug) console.info(`getLetterWidth ${debug}`, letter, metric, letterRatio, endLineRatio, '|', actualLetterWidth);\r\n    return {\r\n        width,\r\n        actualBoundWidth,\r\n        boundWidth: metricMethod === 'standard'\r\n            ? width * standardMetricRatio\r\n            : boundWidth + letterBoxSpacing * 2,\r\n        metric,\r\n        offsetRatio,\r\n    };\r\n};\r\n\r\nexport type TextDrawer = (props: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    scaledEdge: number,\r\n    scaledBaseline: number,\r\n}) => void;\r\n/** \r\n * Draw the letter with a provided worker. It take true edge as paramter, but will pass scaled edge to the worker.\r\n */\r\nexport const drawLetter = ({\r\n    ctx,\r\n    baseline,\r\n    edge,\r\n    letter,\r\n    xRatio,\r\n    deviation,\r\n    letterMetric,\r\n    textDrawer,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    letter: string,\r\n    letterMetric?: ReturnType<typeof getLetterWidth>,\r\n    edge: number,\r\n    baseline: number,\r\n    xRatio: number,\r\n    deviation?: FontDeviationMap,\r\n    textDrawer?: TextDrawer,\r\n}) => {\r\n    const {\r\n        boundWidth,\r\n        metric = ctx.measureText(letter),\r\n        offsetRatio = 0,\r\n    } = letterMetric ?? {};\r\n    const {\r\n        letterMap = {},\r\n        threshold = 10,\r\n    } = deviation ?? {};\r\n    const {\r\n        uniformBoxDescent,\r\n    } = letterMap[letter] ?? {};\r\n\r\n    const letterWidth = metric.width * xRatio;\r\n    const scaledBoundingWidth = boundWidth ? boundWidth * xRatio : letterWidth;\r\n    const worker = textDrawer ?? (({\r\n        ctx,\r\n        letter,\r\n        scaledBaseline,\r\n        scaledEdge,\r\n    }) => {\r\n        ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n    });\r\n\r\n    const boundingOffset = (letterWidth - scaledBoundingWidth) / 2;\r\n    const externalOffset = scaledBoundingWidth * offsetRatio;\r\n    let uniformYScale = 1;\r\n    let boxDescentCompensate = 0;\r\n    if (typeof uniformBoxDescent === 'number' && xRatio >= threshold) {\r\n        const { actualBoundingBoxDescent, actualBoundingBoxAscent } = ctx.measureText(letter);\r\n\r\n        /** Need to carefully survey if we over-compensate in edge case. */\r\n        boxDescentCompensate = uniformBoxDescent - actualBoundingBoxDescent;\r\n\r\n        const actualLetterHeight = actualBoundingBoxAscent + actualBoundingBoxDescent;\r\n        uniformYScale = (actualLetterHeight + boxDescentCompensate * 2) / actualLetterHeight;\r\n    }\r\n    ctx.scale(1, uniformYScale);\r\n    worker({\r\n        ctx,\r\n        letter,\r\n        scaledEdge: edge / xRatio - boundingOffset - externalOffset,\r\n        scaledBaseline: (baseline + boxDescentCompensate) / uniformYScale,\r\n    });\r\n    ctx.scale(1, 1 / uniformYScale);\r\n};","import {\r\n    BREAKABLE_LETTER,\r\n    DefaultFontSizeData,\r\n    FontData,\r\n    FontSizeData,\r\n    NB_WORD_CLOSE,\r\n    NB_WORD_OPEN,\r\n} from 'src/model';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\n\r\nexport const tokenizeText = (text: string, keepControlCharacter = false) => {\r\n    const regex = keepControlCharacter\r\n        ? new RegExp(`([${BREAKABLE_LETTER}])|(${NB_WORD_OPEN}[\\\\w\\\\W]+?${NB_WORD_CLOSE})|(.+?)`)\r\n        : new RegExp(`([${BREAKABLE_LETTER}])|${NB_WORD_OPEN}([\\\\w\\\\W]+?)${NB_WORD_CLOSE}|(.+?)`);\r\n\r\n    return text\r\n        .split(regex)\r\n        .filter(token => token != null && token !== '');\r\n};\r\n\r\nexport const getTextWorker = (\r\n    ctx: CanvasRenderingContext2D,\r\n    fontData: FontData,\r\n    fontSizeData: FontSizeData,\r\n    fontController: ReturnType<typeof createFontGetter>,\r\n    globalScale: number,\r\n) => {\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        fontSize,\r\n        ordinalFontRatio = scaledDefaultFontSizeData.ordinalFontRatio,\r\n        headTextFontRatio = scaledDefaultFontSizeData.headTextFontRatio,\r\n    } = fontSizeData;\r\n    const {\r\n        font,\r\n        ordinalFont,\r\n        symbolFont,\r\n        symbolFontRatio,\r\n        numberFont = font,\r\n        numberFontRatio = 1,\r\n        furiganaFont,\r\n    } = fontData;\r\n\r\n    let numberFontMemory = fontController.getFontInfo();\r\n    const applyNumberFont = () => {\r\n        numberFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(numberFont).setSize(fontSize * numberFontRatio).getFont();\r\n    };\r\n    const stopApplyNumberFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(numberFontMemory.family)\r\n            .setSize(numberFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let symbolFontMemory = fontController.getFontInfo();\r\n    const applySymbolFont = () => {\r\n        symbolFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(symbolFont).setSize(fontSize * symbolFontRatio).getFont();\r\n    };\r\n    const stopApplySymbolFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(symbolFontMemory.family)\r\n            .setSize(symbolFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    let ordinalFontMemory = fontController.getFontInfo();\r\n    const applyOrdinalFont = () => {\r\n        ordinalFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(ordinalFont).setSize(fontSize * ordinalFontRatio).getFont();\r\n    };\r\n    const stopApplyOrdinalFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(ordinalFontMemory.family)\r\n            .setSize(ordinalFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const resetScale = () => {\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    };\r\n\r\n    const applyAsymmetricScale = (xRatio = 1, yRatio = 1) => {\r\n        ctx.scale(xRatio, yRatio);\r\n    };\r\n\r\n    let furiganaFontMemory = fontController.getFontInfo();\r\n    const applyFuriganaFont = (bold = false) => {\r\n        furiganaFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setFamily(furiganaFont).setWeight(bold ? 'bold' : '').setSize(fontSize * headTextFontRatio).getFont();\r\n    };\r\n    const stopApplyFuriganaFont = () => {\r\n        ctx.font = fontController\r\n            .setFamily(furiganaFontMemory.family)\r\n            .setWeight(furiganaFontMemory.weight)\r\n            .setSize(furiganaFontMemory.size)\r\n            .getFont();\r\n    };\r\n\r\n    const applyScale = (xScale = 1, yScale = xScale) => {\r\n        ctx.scale(xScale, yScale);\r\n    };\r\n\r\n    const reverseScale = (scaleValue = 1) => {\r\n        ctx.scale(1 / scaleValue, 1 / scaleValue);\r\n    };\r\n\r\n    let largerTextFontMemory = fontController.getFontInfo();\r\n    const applyLargerText = (fontRatio = 1) => {\r\n        largerTextFontMemory = fontController.getFontInfo();\r\n        ctx.font = fontController.setSize(fontSize * fontRatio).getFont();\r\n    };\r\n    const stopApplyLargerText = () => {\r\n        ctx.font = fontController.setSize(largerTextFontMemory.size).getFont();\r\n    };\r\n\r\n    return {\r\n        applyNumberFont, stopApplyNumberFont,\r\n        applyLargerText, stopApplyLargerText,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n\r\n        applyAsymmetricScale,\r\n        applyScale,\r\n        resetScale,\r\n        reverseScale,\r\n    };\r\n};\r\n\r\n/** We do not actually use the ● letter for bullet, instead we a draw a black circle with fixed size. Bullets not only does not condense, but also does not actually scale with font-size. They are the same size even if we use smaller font to add more lines (\"Agave Dragon\" TCG), this in turn prevent us from reducing the font size too small.\r\n * \r\n * In TCG the space behind bullet is fixed, so multiple lines with bullet at the start will align perfectly, it is not seems to be the case in OCG.\r\n*/\r\nexport const drawBullet = (ctx: CanvasRenderingContext2D, edge: number, baseline: number, width: number, spaceAfter: number) => {\r\n    const bulletRadius = (width - spaceAfter) / 2;\r\n    ctx.beginPath();\r\n    ctx.arc(edge + bulletRadius, baseline - bulletRadius, bulletRadius, 0, 2 * Math.PI, false);\r\n    ctx.fill();\r\n    ctx.lineWidth = 1;\r\n    ctx.strokeStyle = '#003300';\r\n    ctx.stroke();\r\n};\r\n\r\n/**\r\n * This function analyze head text of a token, and return various information: its width (same calculation rule with `analyzeToken`), alignment type, gap as well as drawing information (letter spacing and customized condense ratio).\r\n * \r\n * @summary All ruby (head text) rules:\r\n * * A token may or may not has head text.\r\n * * Head text take space above foot text, if foot text still has space left, the token has negative gap. On the other hand if head text is too long it may growth out of foot text's vertical boundary (overflowing), in this case the token has positive gap.\r\n * * Head text with positive gap may take negative gap from the previous token. Read knoweledge diagram for a visual presentation. They take available gap in such a way that head text never overlap with each other, and foot text also does not overlap with each other.\r\n * * Foot text may got pushed around a bit so empty space is distributed uniformly (\"Beyond the Pendulum\" OCG). The current implementation cannot achieve such effect automatically, but only to a degree.\r\n * * Head text above a single letter is always center-aligned. Head text above multiple letters is align using space-around distribution if it does not overflow, and center otherwise.\r\n * * Head text that is way too long compare to its foot text underneath will be condensed and has negative letter spacing (\"PenduLuMoon\" OCG), in some cases make it completely unreadable.\r\n * * Head text of the first token of a line can \"spill\" out of line's boundary. (\"Beyond the Pendulum\" OCG) Even if this is the case, all foot text must be perfectly aligned vertically.\r\n * * Head text above a single letter will not be condensed (\"Recette de Poisson (Fish Recipe)\" OCG) unless forced to by special syntax.\r\n * * Head text above multiple-letters foot text condeses with a slower rate than normal (\"CXyz N.As.Ch. Knight\" OCG).\r\n * * Head text above a whole line will be condensed so it does not overflow (\"Amaze Attraction Viking Vortex\" OCG).\r\n * * Those letters do not have gap, and therefore do not allow head text to overflow over them: Bullet ●, ordinal letter lie ⑤ (\"Pendulum Dimension\" OCG).\r\n * */\r\nexport const analyzeHeadText = ({\r\n    footText, footTextWidth,\r\n    headText, headTextLetterWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    gapPadding,\r\n    debug,\r\n    fitFootText,\r\n    sentenceXRatio,\r\n    xRatio,\r\n}: {\r\n    headText: string,\r\n    headTextLetterWidth: number,\r\n    footText: string,\r\n    footTextWidth: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    gapPadding: number,\r\n    debug?: string,\r\n    fitFootText: boolean,\r\n    sentenceXRatio: number,\r\n    xRatio: number,\r\n}) => {\r\n    const noHeadText = headText.length === 0;\r\n    const condenseHeadText = headTextLetterWidth / footTextWidth * sentenceXRatio;\r\n    let alignCenterLetterSpacing = headTextSpacing;\r\n    let internalXRatio = 0;\r\n    /** We use width ratio between head text (letters only) and foot text to determine that it is too long or not. For each ratio threshold, a different treatment is applied. */\r\n    if (condenseHeadText <= 0.95) {\r\n        /** Most case fall to this category */\r\n        alignCenterLetterSpacing = headTextSpacing * 1;\r\n    }\r\n    else if (condenseHeadText <= 1.175) {\r\n        /** If the head text is a bit too long, we force all head text's letters to stay close together. Example like \"EX\" - Extra Deck in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? 0\r\n            : headTextSpacing * 3;\r\n    }\r\n    else if (condenseHeadText <= 1.560) {\r\n        /** If the head text is too long, we start to introduce negative spacing. Example like \"S\" - Synchro in OCG. */\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 3;\r\n    }\r\n    else {\r\n        /** If the head text is way too long, not only we introduce negative spacing, but also condense the actual letter. \"P\" - Pendulum is a notorious example. */\r\n        internalXRatio = 0.66;\r\n        alignCenterLetterSpacing = headTextSpacing >= 0\r\n            ? headTextSpacing * -1/4\r\n            : headTextSpacing * 2;\r\n    }\r\n    if (fitFootText || (xRatio > 0 && xRatio < 1)) {\r\n        alignCenterLetterSpacing = headTextSpacing;\r\n    }\r\n\r\n    const alignCenterHeadTextWidth = headTextLetterWidth * ((xRatio && !fitFootText)\r\n        ? xRatio\r\n            : (!internalXRatio || fitFootText) ? 1 : internalXRatio)\r\n                + alignCenterLetterSpacing * (headText.length - 1);\r\n    const alignEvenlyLetterSpacing = noHeadText ? 0 : (footTextWidth - headTextLetterWidth) / headText.length;\r\n    const alignEvenlyHeadTextWidth = footTextWidth;\r\n\r\n    const alignment = footText.length === 1 || (gapPadding * 2 + alignCenterHeadTextWidth > footTextWidth)\r\n        ? 'center' as const\r\n        : 'space-around' as const;\r\n    const letterSpacing = alignment === 'center'\r\n        ? alignCenterLetterSpacing\r\n        : alignEvenlyLetterSpacing;\r\n    const trueHeadTextWidth = alignment === 'center'\r\n        ? gapPadding * 2 + alignCenterHeadTextWidth\r\n        : alignEvenlyHeadTextWidth;\r\n    const headTextWidth = fitFootText\r\n        ? Math.min(trueHeadTextWidth, footTextWidth)\r\n        : trueHeadTextWidth;\r\n    const baseHalfGap = alignment === 'center'\r\n        ? (alignCenterHeadTextWidth - footTextWidth) / 2\r\n        : 0;\r\n    const halfGap = Math.max(\r\n        headTextGap,\r\n        fitFootText ? Math.min(baseHalfGap, 0) : baseHalfGap,\r\n    );\r\n\r\n    if (debug) console.info(\r\n        `analyzeHeadText ${debug}`,\r\n        alignment,\r\n        letterSpacing,\r\n        '|',\r\n        headText, headTextWidth, trueHeadTextWidth,\r\n        footText, footTextWidth,\r\n        halfGap,\r\n    );\r\n    return {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        headTextWidth,\r\n        /**\r\n         * Simple visualization:\r\n         * * Center: `[gap][letter + spacing][gap]`\r\n         * * Space-around: `[half-gap][letter][gap][letter][half-gap]`\r\n         */\r\n        alignment,\r\n        /** \r\n         * * Positive gap will take space from other.\r\n         * * Negative app allow other to use their space.\r\n         */\r\n        halfGap,\r\n        headTextXRatio: alignment === 'center' ? internalXRatio : 0,\r\n    };\r\n};\r\n\r\n/**\r\n * Calculate the lost width from the left side of a token becaues of gap. This width is scalar and therefore ALWAYS positive. Visit knowledge diagram for a clearer visualization.\r\n * \r\n * * If the previous gap is positive (push to their right):\r\n *   * If current gap is positive (push to the left): No space is lost, they simply stand next to each other.\r\n *   * If current gap is negative (previous token pull them): Current token lose some width, but no more than what the previous token can take.\r\n * * If the previous gap is negative (pull the next token to them):\r\n *   * If current gap is positive (push to the left): Current token lose some width, but no more than what the previous token can give.\r\n *   * If current gap is negative (previous token pull them): No space is lost, they do not interfere with each other.\r\n */\r\nexport const getLostLeftWidth = (prevGap: number, curGap: number) => {\r\n    return prevGap >= 0\r\n        ? curGap >= 0\r\n            ? 0\r\n            : Math.max(prevGap * -1, curGap) * -1\r\n        : curGap >= 0\r\n            ? Math.max(prevGap, curGap * -1) * -1\r\n            : 0;\r\n};","import {\r\n    FontData,\r\n    BULLET_LETTER,\r\n    TCGSymbolLetterRegex,\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    FragmentSplitRegex,\r\n    WholeWordRegex,\r\n    DefaultFontSizeData,\r\n    ST_ICON_SYMBOL,\r\n    TextData,\r\n    NoSpaceRegex,\r\n    LETTER_GAP_RATIO,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    SquareBracketLetterRegex,\r\n    CapitalLetterRegex,\r\n    NumberRegex,\r\n    OCGNoOverheadGapRegex,\r\n    GAP_PER_WIDTH_RATIO,\r\n    RUBY_REGEX,\r\n    DefaultFontData,\r\n    RUBY_BONUS_RATIO,\r\n    NON_BREAKABLE_SYMBOL_SOURCE,\r\n    NonCompressableRegex,\r\n} from 'src/model';\r\nimport { getTextWorker, analyzeHeadText, tokenizeText, getLostLeftWidth } from './text-util';\r\nimport { createFontGetter, scaleFontSizeData } from 'src/util';\r\nimport { getLetterWidth } from './letter';\r\n\r\n/** \r\n * Return information of a token.\r\n * @returns\r\n *  * `totalWidth`: The width of the token based on xRatio. In the same fashion with `getLetterWidth`, we get the true width for scalable letter, and inverse-scaled width of a non-scalable letter. `totalWidth` does no include whitespaces since they are not calculate traditionally.\r\n *  * `leftMostLetter`: The left most letter of a token (not counting control characters), there is a special treatment based on what is the left most letter of a token (mainly indentation).\r\n *  * `spaceCount`: Number of whitespaces in a token, their width will be calculated afterward.\r\n *  * `spaceAtEnd`: Whether or not the token end with a space, for example most of English word requires a whitespace between words, while Japanese does not. We also does not allow a line to end with a whitespace unless it is the last line.\r\n *  * `rightGap`, `leftGap`: Gap of a token based on its overhead letters. The token may consist of multiple letters each with their own gap, so it is easy to see that right and left gap of a token is respectively left gap of the leftmost letter and right gap of the rightmost letter.\r\n */\r\nexport const analyzeToken = ({\r\n    ctx,\r\n    token: rawToken, nextToken,\r\n    xRatio,\r\n    previousTokenGap = 0,\r\n    letterSpacing: _letterSpacing,\r\n    format,\r\n    globalScale,\r\n    textData,\r\n    // debug = false,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    token: string,\r\n    nextToken: string | undefined,\r\n    xRatio: number,\r\n    previousTokenGap?: number,\r\n    letterSpacing?: number,\r\n    format: string,\r\n    globalScale: number,\r\n    // debug?: boolean,\r\n    textData: {\r\n        fontData: FontData,\r\n        fontLevel: number,\r\n        currentFont: ReturnType<typeof createFontGetter>,\r\n    },\r\n}) => {\r\n    if (!ctx || !rawToken) return {\r\n        totalWidth: 0,\r\n        leftMostLetter: '',\r\n        spaceCount: 0,\r\n        spaceAtEnd: false,\r\n        rightGap: 0,\r\n        leftGap: 0,\r\n    };\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const letterSpacing = _letterSpacing ?? scaledDefaultFontSizeData.letterSpacing;\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const {\r\n        metricMethod,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        fontStyle,\r\n    } = fontData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        bulletWidth,\r\n        capitalLetterRatio,\r\n        fontSize,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        squareBracketRatio,\r\n        wordLetterSpacing,\r\n    } = fontSizeData;\r\n    const defaultGap = fontSize * LETTER_GAP_RATIO;\r\n    const {\r\n        applyScale, reverseScale,\r\n        applyLargerText, stopApplyLargerText,\r\n        applyFuriganaFont, stopApplyFuriganaFont,\r\n        applyOrdinalFont, stopApplyOrdinalFont,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyNumberFont, stopApplyNumberFont,\r\n    } = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const token = rawToken.replaceAll(new RegExp(NON_BREAKABLE_SYMBOL_SOURCE, 'g'), '');\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    let leftMostLetter = '';\r\n    let totalWidth = 0;\r\n    let spaceCount = 0;\r\n    let spaceAtEnd = false;\r\n    const isLastOfLine = nextToken === undefined;\r\n    /** The right gap of a token will influence the left gap of the next token */\r\n    let currentRightGap = previousTokenGap ?? 0;\r\n    /** Whether or not it is affected by rebalance calculation */\r\n    let offsetable = false;\r\n    let leftMostGap = 0;\r\n\r\n    const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n    for (let cnt = 0; cnt < fragmentList.length; cnt++) {\r\n        const isLeftmostFragment = cnt === 0;\r\n        const fragment = fragmentList[cnt];\r\n\r\n        /** S/T symbol is unscalable (it does not condense no matter the ratio) */\r\n        if (fragment === ST_ICON_SYMBOL) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = iconSymbolWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Bullet symbol is unscalable (\"Agave Dragon\" OCG/TCG) */\r\n        else if (fragment === BULLET_LETTER) {\r\n            currentRightGap = 0;\r\n            const fragmentWidth = bulletWidth / xRatio;\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Copyright symbol © is unscalable (creator text) */\r\n        else if (/[©]/.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyLargerText(largeSymbolRatio);\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyLargerText();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** OCG Ordinal symbol is unscalable */\r\n        else if (NonCompressableRegex.test(fragment)) {\r\n            currentRightGap = 0;\r\n            applyOrdinalFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width / xRatio;\r\n            stopApplyOrdinalFont();\r\n            totalWidth += fragmentWidth * letterSpacingRatio;\r\n\r\n            spaceCount += 1;\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = 0;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        /** Process ruby syntax */\r\n        else if (RUBY_REGEX.test(fragment)) {\r\n            const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n            const fitFootText = rubyType === '||';\r\n            /** Calculate foot text's width */\r\n            const {\r\n                totalWidth: footTextWidth,\r\n            } = analyzeToken({ ctx, token: footText, nextToken, xRatio, letterSpacing, previousTokenGap: 0, format, textData, globalScale });\r\n\r\n            /** Calculate head text's width */\r\n            applyFuriganaFont();\r\n            const headTextLetterWidth = headText\r\n                .split('')\r\n                .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                .reduce((acc, cur) => acc + cur, 0);\r\n            stopApplyFuriganaFont();\r\n\r\n            /** Calculate gap */\r\n            const { halfGap: baseHalfGap, headTextWidth } = analyzeHeadText({\r\n                headText,\r\n                headTextLetterWidth: headTextLetterWidth / xRatio,\r\n                footText,\r\n                footTextWidth,\r\n                headTextGap: defaultGap / xRatio,\r\n                headTextSpacing,\r\n                gapPadding: headTextGapRatio * fontSize / xRatio,\r\n                fitFootText,\r\n                sentenceXRatio: xRatio,\r\n                xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n            });\r\n            const halfGap = headText.length === 0\r\n                ? Math.max(defaultGap, footTextWidth / GAP_PER_WIDTH_RATIO)\r\n                : baseHalfGap;\r\n            const leftGap = halfGap;\r\n            const rightGap = halfGap;\r\n            const boundWidth = Math.max(headTextWidth, footTextWidth);\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            currentRightGap = rightGap;\r\n            totalWidth += boundWidth - lostLeftWidth;\r\n            spaceCount += 1;\r\n\r\n            if (isLeftmostFragment) {\r\n                offsetable = true;\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = footText[0];\r\n            }\r\n        }\r\n        /** Process whole word. Because the font has contextual kerning, the width when we draw the whole word will be different compare to the width when we draw each letter next to each other, sometimes the different may become noticeable (for example in the word \"AWA\", there is a very noticeable distance between these letters), so we try to simulate that behavior. */\r\n        else if (WholeWordRegex.test(fragment)) {\r\n            /** Whole word may have their own spacing ratio */\r\n            const normalizedWordSpacingRatio = wordLetterSpacing\r\n                ? 1 + wordLetterSpacing / 2\r\n                : letterSpacingRatio;\r\n            ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n            let remainFragment = fragment;\r\n            let fragmentWidth = 0;\r\n            /** A simple algorithm to simulate contextual kerning, for each letter, we do these steps:\r\n             * * Split the current word into two part: The first letter and the rest of the word.\r\n             * * Calculate the width of a letter, then calculate the width of the remaining word.\r\n             * * By subtract them, we will have the actual width of a letter, when put into the word and affected by contextual kerning.\r\n             */\r\n            while (remainFragment !== '') {\r\n                let currentLetter = remainFragment[0];\r\n                let nextRemainFragment = remainFragment.slice(1);\r\n                let actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                /** Square brackets (\"[\" and \"]\") may have different scaling */\r\n                if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                    applyScale(squareBracketRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(squareBracketRatio);\r\n                }\r\n                /** Captial letters may have different scaling */\r\n                else if (CapitalLetterRegex.test(currentLetter)) {\r\n                    applyScale(capitalLetterRatio);\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    reverseScale(capitalLetterRatio);\r\n                }\r\n                /** Number letters may use different font, for the sake of simplicity, we assume that the font does not affect (too much) to the letter's width. In short, we assume that the letter \"8\" in font X have the same width with the letter \"8\" in font Y, just different shape. */\r\n                else if (NumberRegex.test(currentLetter)) {\r\n                    applyNumberFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplyNumberFont();\r\n                }\r\n                /** Special symbol in TCG card (\"Evil☆Twin\") may use different font, again we assume the letter have similar size. */\r\n                else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                    applySymbolFont();\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                    stopApplySymbolFont();\r\n                }\r\n                /** No special treatment for the usual letters */\r\n                else {\r\n                    actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                }\r\n                fragmentWidth += actualLetterWidth;\r\n                remainFragment = nextRemainFragment;\r\n            }\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            ctx.letterSpacing = '0px';\r\n        }\r\n        /** Special symbol in TCG card (\"Evil☆Twin\") may use different font */\r\n        else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n            applySymbolFont();\r\n            const fragmentWidth = ctx.measureText(fragment).width * letterSpacingRatio;\r\n            stopApplySymbolFont();\r\n\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n        }\r\n        else {\r\n            const { boundWidth } = getLetterWidth({ ctx, letter: fragment, isLastOfLine, fontStyle, metricMethod, xRatio, globalScale });\r\n            const fragmentWidth = boundWidth * letterSpacingRatio;\r\n            const leftGap = Math.max(defaultGap, fragmentWidth / GAP_PER_WIDTH_RATIO);\r\n            const rightGap = leftGap;\r\n            const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n            totalWidth += fragmentWidth - lostLeftWidth;\r\n            currentRightGap = rightGap;\r\n            if (\r\n                (format === 'ocg' || (format === 'tcg' && /\\s+/.test(fragment)))\r\n                && NoSpaceRegex.test(fragment) === false\r\n            ) {\r\n                spaceCount += 1;\r\n                if (cnt === fragmentList.length - 1) spaceAtEnd = true;\r\n            }\r\n            if (isLeftmostFragment) {\r\n                leftMostGap = leftGap;\r\n                leftMostLetter = fragment[0];\r\n            }\r\n            if (OCGNoOverheadGapRegex.test(fragment)) {\r\n                leftMostGap = 0;\r\n                currentRightGap = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    return {\r\n        totalWidth,\r\n        spaceCount,\r\n        spaceAtEnd,\r\n        leftMostLetter,\r\n        rightGap: currentRightGap,\r\n        leftGap: leftMostGap,\r\n        offsetable,\r\n    };\r\n};\r\n\r\n/**\r\n * Analyze a line again after we split it with suitable ratio. Text in line are justify-aligned, so we will calculate the sum of width of all tokens, then distribute the remaining space to the amount of whitespaces in the line, that means each whitespace will have additional width add into them so that the line fit perfectly into the available space.\r\n * \r\n * Special treatment for last line of a paragraph, because the last line may not be filled entirely unlike all the lines above, we will decide a threshold for them, if the remaining space is too large, we do not distribute them and just left the line as-is.\r\n */\r\nexport const analyzeLine = ({\r\n    ctx,\r\n    line,\r\n    width,\r\n    xRatio: baseXRatio,\r\n    format,\r\n    isLast,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    line: string,\r\n    width: number,\r\n    xRatio: number,\r\n    format: string,\r\n    isLast: boolean,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const tokenList = tokenizeText(line);\r\n    let totalContentWidth = 0;\r\n    let lineSpaceCount = 0;\r\n    let currentGap = 0;\r\n\r\n    for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n        const token = tokenList[cnt];\r\n        const nextToken = tokenList[cnt + 1];\r\n        /** Non-compressable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            continue;\r\n        }\r\n        const {\r\n            spaceCount,\r\n            totalWidth,\r\n            spaceAtEnd,\r\n            leftGap,\r\n            rightGap,\r\n            leftMostLetter,\r\n        } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap / xRatio, textData, format, globalScale });\r\n        /** Check `createLineList` function about first token indentation. */\r\n        const indent = (\r\n            (cnt === 0 && leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n            +\r\n            (cnt === 0 && OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale * xRatio : 0)\r\n        );\r\n\r\n        currentGap = rightGap * xRatio;\r\n        totalContentWidth += totalWidth * xRatio + indent;\r\n        lineSpaceCount += spaceCount - (spaceAtEnd && nextToken === undefined ? 1 : 0);\r\n    }\r\n    const expectedSpaceWidth = lineSpaceCount > 0 ? (width - totalContentWidth) / lineSpaceCount : 0;\r\n    const spaceWidth = isLast\r\n        ? format === 'tcg'\r\n            ? expectedSpaceWidth > 1.500 * globalScale ? 0 : expectedSpaceWidth\r\n            : expectedSpaceWidth > 3.650 * globalScale ? 0 : expectedSpaceWidth\r\n        : expectedSpaceWidth;\r\n\r\n    return {\r\n        tokenList,\r\n        spaceWidth,\r\n    };\r\n};","import {\r\n    OCGAlphabetRegex,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    TextData,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n} from 'src/model';\r\nimport { tokenizeText } from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\n\r\n/** Turn a paragraph into a list of lines with provided ratio (median). Basically we test with some ratio until reach a desirable list. Each line contains the information about its content, its actual width and whether or not it is the last line of a paragraph. Easy to see that actual width of all tokens on a line is always smaller or equal to the hypothesis width of the line. */\r\nexport const createLineList = ({\r\n    ctx,\r\n    median,\r\n    paragraphList,\r\n    additionalLineCount = 0,\r\n    width,\r\n    format,\r\n    textData,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    median: number,\r\n    width: number,\r\n    paragraphList: string[],\r\n    additionalLineCount?: number,\r\n    format: string,\r\n    textData: TextData,\r\n    globalScale: number,\r\n}) => {\r\n    const { fontData, fontLevel } = textData;\r\n    const { letterSpacing } = fontData.fontList[fontLevel];\r\n    const currentLineList: { line: string, isLast: boolean, effectiveMedian: number, actualLineWidth: number }[] = [];\r\n    const currentLineCount = paragraphList.reduce((accumulatedLineCount, curr) => {\r\n        // Calculate hypothesis canvas width with the provided median ratio\r\n        const baseXRatio = (median <= 100 ? 100 : median) / 1000;\r\n        const scaledWidth = width / baseXRatio;\r\n        const tokenList = tokenizeText(curr, true);\r\n        let addedLineCount = 1;\r\n        let wordList: string[] = [];\r\n        let currentLineWidth = 0;\r\n        let currentGap = 0;\r\n        let unCompressedFlag = 0;\r\n\r\n        for (let cnt = 0, xRatio = baseXRatio; cnt < tokenList.length; cnt++) {\r\n            const token = tokenList[cnt];\r\n            const nextToken = tokenList[cnt + 1];\r\n            /** Because NB_UNCOMPRESS control letters may affect multiple lines, but we want to reduce the dependencies between each line as much as possible (in other words, each line should not know about the line below or above it).\r\n             * To solve this, we will automatically add a NB_UNCOMPRESS_END letter to the end of a sentence, if it has an unclosed NB_UNCOMPRESS_START letter somewhere. Then we will add a NB_UNCOMPRESS_START letter immediately at the start of the next line.\r\n             * Control letters do not get draw so this will not affect the calculation result.\r\n             */\r\n            if (token === NB_UNCOMPRESSED_START) {\r\n                unCompressedFlag += 1;\r\n                xRatio = 1;\r\n            } else if (token === NB_UNCOMPRESSED_END) {\r\n                unCompressedFlag -= 1;\r\n                xRatio = baseXRatio;\r\n            }\r\n            let {\r\n                leftMostLetter,\r\n                totalWidth,\r\n                rightGap,\r\n                leftGap,\r\n            } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: currentGap, format, letterSpacing, textData, globalScale });\r\n\r\n            /** First token of a line may have the head text overflow to the left of the paragraph. On one hand we ensure that the foot text of that token does not overflow, on the other hand we also ensure that the head text cannot overflow too far so it overlap with the section's border (if any).\r\n             */\r\n            const indent = cnt === 0\r\n                ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n                : 0;\r\n            let tokenWidth = totalWidth / (unCompressedFlag > 0 ? baseXRatio : 1) + indent;\r\n            /** Last token is not allowed to become overflow (no known cases said otherwise). */\r\n            if (currentLineWidth + tokenWidth > scaledWidth) {\r\n                let line = wordList.join('').trim();\r\n                if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n                if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n                unCompressedFlag = 0;\r\n                currentLineList.push({\r\n                    line,\r\n                    effectiveMedian: median,\r\n                    isLast: false,\r\n                    actualLineWidth: currentLineWidth,\r\n                });\r\n                /** If the next token is gonna made the line become overflow, we will create a new line with it becoming the first token. We also re-calulate the width of that token since now the right side of it is not the \"previous token\" anymore, but the edge of a new line. */\r\n                let {\r\n                    totalWidth,\r\n                    rightGap,\r\n                    leftGap,\r\n                } = analyzeToken({ ctx, token, nextToken, xRatio, previousTokenGap: 0, format, textData, globalScale });\r\n                /** Of course we also re-calculate overflow possibility. */\r\n                const indent = (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale / xRatio, leftGap) * -1 : 0)\r\n                    + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0);\r\n                let tokenWidth = totalWidth + indent;\r\n                currentLineWidth = tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList = [token];\r\n                addedLineCount += 1;\r\n            } else {\r\n                currentLineWidth += tokenWidth;\r\n                currentGap = rightGap;\r\n                wordList.push(token);\r\n            }\r\n        }\r\n\r\n        /** If no more tokens left in the sentence, wrap them into the last line. */\r\n        let line = wordList.join('').trim();\r\n        if (unCompressedFlag > 0) line = line + NB_UNCOMPRESSED_END;\r\n        if (unCompressedFlag < 0) line = NB_UNCOMPRESSED_START + line;\r\n        unCompressedFlag = 0;\r\n        currentLineList.push({\r\n            line,\r\n            effectiveMedian: median,\r\n            isLast: true,\r\n            actualLineWidth: currentLineWidth,\r\n        });\r\n\r\n        return accumulatedLineCount + addedLineCount;\r\n    }, 0) + (additionalLineCount ?? 0);\r\n\r\n    return { currentLineList, currentLineCount };\r\n};","import {\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n} from './text-util';\r\nimport { getLetterWidth } from './letter';\r\nimport { RUBY_BONUS_RATIO } from 'src/model';\r\n\r\n/** Fill head text, by furigana rules, they have their own scaling space so they do not necessarily respect current ratio of the foot text. This function receive true coordinations.\r\n * \r\n * Head text has four cases of compression:\r\n * * Case 1: They do not condense at all, this is the default case for single-letter foot text.\r\n * * Case 2: They condense with a smaller rate compare to foot text, this is the default case for multiple-letters foot text.\r\n * * Case 3: They condense because the head text is way wider than the foot text, especially in the case of single-letter foot text.\r\n * * Case 4: They condense because overflow mode is explicitly set to `condense` by compressable ruby syntax. This prevent them from growth out of foot text's boundary, and has the highest priority, but only apply in the case of multiple-letters foot text.\r\n*/\r\nexport const fillHeadText = ({\r\n    ctx,\r\n    fontSize,\r\n    edge, baseline,\r\n    headText, headTextLetterWidth,\r\n    footText, footTextWidth,\r\n    headTextGap,\r\n    headTextSpacing,\r\n    headTextHeightRatio,\r\n    headTextBold,\r\n    headTextGapRatio,\r\n    globalScale,\r\n    xRatio,\r\n    fontStyle,\r\n    textWorker,\r\n    fitFootText,\r\n    headTextOverflow,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    fontSize: number,\r\n    headText: string, headTextLetterWidth: number,\r\n    footText: string, footTextWidth: number,\r\n    edge: number, baseline: number,\r\n    headTextGap: number,\r\n    headTextSpacing: number,\r\n    headTextHeightRatio: number,\r\n    headTextBold: boolean,\r\n    headTextGapRatio: number,\r\n    globalScale: number,\r\n    xRatio: number,\r\n    fontStyle: string,\r\n    textWorker: ReturnType<typeof getTextWorker>,\r\n    fitFootText: boolean,\r\n    headTextOverflow: 'normal' | 'condense',\r\n}) => {\r\n    const { applyFuriganaFont, stopApplyFuriganaFont, resetScale, applyScale } = textWorker;\r\n    /** Custom ratio for case 2 */\r\n    const externalHeadTextXRatio = (headTextOverflow === 'condense' && footText.length > 1)\r\n        ? Math.min(1, xRatio + RUBY_BONUS_RATIO)\r\n        : 0;\r\n    const {\r\n        gapPadding,\r\n        letterSpacing,\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n        alignment,\r\n        headTextXRatio,\r\n    } = analyzeHeadText({\r\n        headText, headTextLetterWidth,\r\n        footText, footTextWidth: footTextWidth * xRatio,\r\n        headTextGap, headTextSpacing: headTextSpacing * xRatio,\r\n        gapPadding: fontSize * headTextGapRatio,\r\n        fitFootText,\r\n        sentenceXRatio: xRatio,\r\n        xRatio: externalHeadTextXRatio,\r\n    });\r\n    const overflow = trueHeadTextWidth > footTextWidth * xRatio;\r\n\r\n    if (headText.length === 0) return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n\r\n    /** Custom ratio for case 4 */\r\n    const baseLoneTokenRatio = fitFootText\r\n        ? Math.min(1, footTextWidth * xRatio / trueHeadTextWidth)\r\n        : 1;\r\n\r\n    /** Priority: Case 4 => Case 3 and 2, in practice, case 2 and 3 are usually mutual exclusive, because case 2 currently only apply in card's name, while all case 3 only happens in card's effect. */\r\n    const finalizedRatio = fitFootText\r\n        ? baseLoneTokenRatio\r\n        : (externalHeadTextXRatio && alignment === 'center')\r\n            ? externalHeadTextXRatio\r\n            : headTextXRatio;\r\n\r\n    let currentEdge = edge;\r\n    resetScale();\r\n    if (fitFootText || finalizedRatio) {\r\n        applyScale(finalizedRatio, 1);\r\n        currentEdge = edge / finalizedRatio;\r\n    }\r\n\r\n    if (alignment === 'center') {\r\n        currentEdge += gapPadding;\r\n        /** Adjust head text's drawing position to fit case. */\r\n        if (!overflow) {\r\n            currentEdge += (footTextWidth * xRatio - trueHeadTextWidth) / 2;\r\n        } else if (finalizedRatio > baseLoneTokenRatio) {\r\n            currentEdge += (footTextWidth * xRatio / finalizedRatio - trueHeadTextWidth) / 2 / finalizedRatio;\r\n        }\r\n    } else {\r\n        currentEdge += letterSpacing / 2;\r\n    }\r\n\r\n    for (const letter of headText) {\r\n        /** `getLetterWidth` does not run properly in the case of bold font, so we must turn it off when calculating text width, before turn in on again and draw the actual text. */\r\n        applyFuriganaFont();\r\n        const { width, boundWidth } = getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale });\r\n        const boundingOffset = (width - boundWidth) / 2;\r\n        stopApplyFuriganaFont();\r\n\r\n        applyFuriganaFont(headTextBold);\r\n        ctx.fillText(letter, currentEdge - boundingOffset, baseline - fontSize * headTextHeightRatio);\r\n        stopApplyFuriganaFont();\r\n        currentEdge += (boundWidth + letterSpacing);\r\n    }\r\n    if (fitFootText || finalizedRatio) {\r\n        resetScale();\r\n    }\r\n    applyScale(xRatio, 1);\r\n\r\n    return {\r\n        trueHeadTextWidth,\r\n        halfGap,\r\n    };\r\n};","import {\r\n    BULLET_LETTER,\r\n    CapitalLetterRegex,\r\n    DefaultFontData,\r\n    DefaultFontSizeData,\r\n    FragmentSplitRegex,\r\n    LETTER_GAP_RATIO,\r\n    MAX_LINE_REVERSE_INDENT,\r\n    NB_UNCOMPRESSED_END,\r\n    NB_UNCOMPRESSED_START,\r\n    NoSpaceRegex,\r\n    NonCompressableRegex,\r\n    NumberRegex,\r\n    OCGAlphabetRegex,\r\n    OCGNoOverheadGapRegex,\r\n    RUBY_BONUS_RATIO,\r\n    RUBY_REGEX,\r\n    START_OF_LINE_ALPHABET_OFFSET,\r\n    ST_ICON_SYMBOL,\r\n    SquareBracketLetterRegex,\r\n    TCGSymbolLetterRegex,\r\n    TextData,\r\n    WholeWordRegex,\r\n    getBulletSpacing,\r\n} from 'src/model';\r\nimport {\r\n    drawBullet,\r\n    getLostLeftWidth,\r\n    analyzeHeadText,\r\n    getTextWorker,\r\n    tokenizeText,\r\n} from './text-util';\r\nimport { analyzeToken } from './text-analyze';\r\nimport { TextDrawer, drawLetter, getLetterWidth } from './letter';\r\nimport { fillHeadText } from './text-overhead';\r\nimport { drawMarker } from './canvas-util';\r\nimport { scaleFontSizeData } from 'src/util';\r\n\r\n/**\r\n * This is the heart and soul of drawer, please test this thoroughly for each change.\r\n * \r\n * @summary Text hierachy\r\n *   * Letter: Individual (1) letter. E.g. \"a\", \"1\", \"み\", \"装\", \"-\", \"①\"\r\n *   * Fragment: Multiple letters with decorate control characters. E.g. \"{無|む}\", \"Damage\"\r\n *   * Token: Multiple fragments with group control characters (`NB_WORD_OPEN` and `NB_WORD_CLOSE`) or a whole word, splitted by space or other breakable letters. E.g. \"⦉{相|あい}{手|て}⦊\"\r\n *   * Sentence: Sequence of tokens. E.g. \"Cannot be destroyed by battle or card effects\"\r\n *   * Paragraph: Consecutive sentences without new line characters (\"\\n\").\r\n *   * Block: Whole text in a section.\r\n * \r\n * Line: Line is a special unit, when a sentence hit the end of current text box, it wrap to new line without using the actual new line character. In this case the sentence is broke down into multiple lines. Line can be manully created with line control characters (`NB_LINE_OPEN`/`NB_FULL_LINE_OPEN` and `NB_LINE_CLOSE`/`NB_FULL_LINE_CLOSE`), or created from text split function.\r\n * **/\r\nexport const drawLine = ({\r\n    ctx,\r\n    tokenList,\r\n    trueEdge, trueBaseline,\r\n    spaceWidth = 0,\r\n    xRatio: baseXRatio, yRatio = 1,\r\n    textData,\r\n    format,\r\n    textDrawer,\r\n    debug = false,\r\n    option,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    format: string,\r\n    tokenList: string[],\r\n    xRatio: number,\r\n    yRatio?: number,\r\n    trueEdge: number,\r\n    trueBaseline: number,\r\n    spaceWidth?: number,\r\n    textData: TextData,\r\n    textDrawer?: TextDrawer,\r\n    globalScale: number,\r\n    option?: {\r\n        drawHeadText?: boolean,\r\n    },\r\n    debug?: boolean,\r\n}) => {\r\n    const { drawHeadText = true } = option ?? {};\r\n    const {\r\n        currentFont,\r\n        fontData,\r\n        fontLevel,\r\n    } = textData;\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const {\r\n        headTextFillStyle,\r\n        headTextBold = DefaultFontData.headTextBold,\r\n        headTextHeightRatio = DefaultFontData.headTextHeightRatio,\r\n        headTextOverflow = DefaultFontData.headTextOverflow,\r\n        headTextGapRatio = DefaultFontData.headTextGapRatio,\r\n        metricMethod,\r\n        fontStyle,\r\n        letterDeviationMap = {},\r\n    } = fontData;\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const {\r\n        bulletOffset = scaledDefaultFontSizeData.bulletOffset,\r\n        bulletWidth,\r\n        capitalLetterRatio = scaledDefaultFontSizeData.capitalLetterRatio,\r\n        fontSize,\r\n        headTextSpacing = scaledDefaultFontSizeData.headTextSpacing,\r\n        iconSymbolWidth = bulletWidth,\r\n        largeSymbolRatio = scaledDefaultFontSizeData.largeSymbolRatio,\r\n        letterSpacing = scaledDefaultFontSizeData.letterSpacing,\r\n        ordinalFontOffsetY = scaledDefaultFontSizeData.ordinalFontOffsetY,\r\n        squareBracketRatio = scaledDefaultFontSizeData.squareBracketRatio,\r\n        wordLetterSpacing,\r\n        allRightSymbolOffset = scaledDefaultFontSizeData.allRightSymbolOffset,\r\n    } = fontSizeData;\r\n    const textWorker = getTextWorker(ctx, fontData, fontSizeData, currentFont, globalScale);\r\n    const {\r\n        stopApplyFuriganaFont, applyFuriganaFont,\r\n        stopApplyLargerText, applyLargerText,\r\n        stopApplyNumberFont, applyNumberFont,\r\n        stopApplyOrdinalFont, applyOrdinalFont,\r\n        applyScale, reverseScale,\r\n        applySymbolFont, stopApplySymbolFont,\r\n        applyAsymmetricScale, resetScale,\r\n    } = textWorker;\r\n\r\n    const letterSpacingRatio = 1 + letterSpacing / 2;\r\n    const baseline = trueBaseline / yRatio;\r\n    let previousTokenGap = 0;\r\n    let iconPositionList: { edge: number, size: number, baseline: number }[] = [];\r\n    let previousTokenRebalanceOffset = 0;\r\n    let tokenEdge = trueEdge;\r\n\r\n    /** To reach a acceptable degree of calculation, we usually need to look ahead 1 or 2 next tokens, same with fragments. */\r\n    /** To prevent cascading calculation, we disconnect the relationship between fragments and tokens. We use all information to calculate an empty space for each token, then fragments of that token is drawn inside that empty space assuming they would fit. In other words, drawing fragments of a token DOES NOT interfere with the next token. That means in theory we can skip all fragments of a token to draw the next token right away.\r\n     */\r\n    for (let tokenCnt = 0, xRatio = baseXRatio; tokenCnt < tokenList.length; tokenCnt++) {\r\n        const token = tokenList[tokenCnt];\r\n        /** Turn on/off non-condenseable mode */\r\n        if (token === NB_UNCOMPRESSED_START) {\r\n            xRatio = 1;\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            continue;\r\n        }\r\n        else if (token === NB_UNCOMPRESSED_END) {\r\n            xRatio = baseXRatio;\r\n            ctx.scale(xRatio, 1);\r\n            continue;\r\n        }\r\n        const gapRatio = LETTER_GAP_RATIO * xRatio;\r\n        const defaultGap = fontSize * gapRatio;\r\n        const nextToken = tokenList[tokenCnt + 1];\r\n        const next2ndToken = tokenList[tokenCnt + 2];\r\n        const analyzeTokenParameter = {\r\n            ctx,\r\n            xRatio,\r\n            letterSpacing,\r\n            format,\r\n            textData,\r\n            globalScale,\r\n        };\r\n        const drawLetterParameter = {\r\n            ctx,\r\n            baseline,\r\n            xRatio,\r\n            textDrawer,\r\n        };\r\n        const fragmentList = token.split(FragmentSplitRegex).filter(entry => entry != null && entry !== '');\r\n        /** Analyze current token again, this will dictate the width of a token, no matter what is actually drawn. We expect to draw nothing but the calculation must stay correct. */\r\n        const {\r\n            leftMostLetter,\r\n            leftGap,\r\n            rightGap: tokenRightGap,\r\n            totalWidth: totalTokenWidth,\r\n            spaceCount,\r\n        } = analyzeToken({\r\n            token, nextToken, previousTokenGap: previousTokenGap / xRatio, ...analyzeTokenParameter,\r\n        });\r\n\r\n        /** Again, first token indentation. */\r\n        const indent = tokenCnt === 0\r\n            ? (leftGap > 0 ? Math.min(MAX_LINE_REVERSE_INDENT * globalScale, leftGap * xRatio) * -1 : 0)\r\n                + (OCGAlphabetRegex.test(leftMostLetter) ? START_OF_LINE_ALPHABET_OFFSET * globalScale : 0)\r\n            : 0;\r\n        let fragmentEdge = tokenEdge + indent;\r\n        let currentRightGap = previousTokenGap;\r\n\r\n        /** Draw all the fragments of a token. */\r\n        for (let fragmentCnt = 0; fragmentCnt < fragmentList.length; fragmentCnt++) {\r\n            const fragment = fragmentList[fragmentCnt];\r\n            const nextFragment = fragmentList[fragmentCnt + 1] ?? nextToken;\r\n            const next2ndFragment = fragmentList[tokenCnt + 2] ?? next2ndToken;\r\n\r\n            /** These fragments do not have any visual */\r\n            if (token === NB_UNCOMPRESSED_START || token === NB_UNCOMPRESSED_END) {}\r\n            /** We do not actually draw S/T Icon here, but we record its position and leave a suitable space for it. */\r\n            else if (fragment === ST_ICON_SYMBOL) {\r\n                iconPositionList.push({ edge: fragmentEdge, size: iconSymbolWidth, baseline });\r\n                fragmentEdge += iconSymbolWidth * letterSpacingRatio;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Bullet symbol ● is not condenseable, and has specialized draw worker. */\r\n            else if (fragment === BULLET_LETTER) {\r\n                resetScale();\r\n                drawBullet(\r\n                    ctx,\r\n                    fragmentEdge,\r\n                    trueBaseline + bulletOffset - 1 * globalScale,\r\n                    bulletWidth,\r\n                    getBulletSpacing(format) * globalScale,\r\n                );\r\n                fragmentEdge += bulletWidth * letterSpacingRatio;\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Copyright symbol © is not condenseable and use larger font. */\r\n            else if (/[©]/.test(fragment)) {\r\n                resetScale();\r\n                applyLargerText(largeSymbolRatio);\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + (format === 'tcg'\r\n                        ? allRightSymbolOffset\r\n                        : allRightSymbolOffset * 2), /** 1 look a bit better than 2 */\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyLargerText();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** OCG Ordinal symbol is not condenseable and use different font. */\r\n            else if (NonCompressableRegex.test(fragment)) {\r\n                resetScale();\r\n                applyOrdinalFont();\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter: fragment,\r\n                    edge: fragmentEdge * xRatio,\r\n                    baseline: trueBaseline + ordinalFontOffsetY,\r\n                });\r\n                fragmentEdge += ctx.measureText(fragment).width * letterSpacingRatio;\r\n                stopApplyOrdinalFont();\r\n                applyAsymmetricScale(xRatio, yRatio);\r\n\r\n                fragmentEdge += spaceWidth;\r\n                currentRightGap = 0;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** Fragment with overhead text. */\r\n            else if (RUBY_REGEX.test(fragment)) {\r\n                const [footText, rubyType, headText = ''] = fragment.replaceAll(/{|}/g, '').split(/(\\|+)/);\r\n                const fitFootText = rubyType === '||';\r\n                /** We do not support nested overhead text. */\r\n                const { totalWidth: footTextWidth } = analyzeToken({\r\n                    token: footText, nextToken: nextFragment,\r\n                    previousTokenGap: 0,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n\r\n                /** Calculate letter width first before deciding the spacing. */\r\n                applyFuriganaFont();\r\n                const headTextLetterWidth = headText\r\n                    .split('')\r\n                    .map(letter => getLetterWidth({ ctx, letter, fontStyle, metricMethod: 'furigana', xRatio: 1, globalScale }).boundWidth)\r\n                    .reduce((acc, cur) => acc + cur, 0);\r\n                stopApplyFuriganaFont();\r\n\r\n                /** Notice what is scaled and what is not in those params. It is a headache to work with sometime. */\r\n                const {\r\n                    headTextWidth,\r\n                    halfGap: baseHalfGap,\r\n                } = analyzeHeadText({\r\n                    headText,\r\n                    headTextLetterWidth,\r\n                    footText,\r\n                    footTextWidth: footTextWidth * xRatio,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing: headTextSpacing * xRatio,\r\n                    gapPadding: fontSize * headTextGapRatio,\r\n                    fitFootText,\r\n                    sentenceXRatio: xRatio,\r\n                    xRatio: (headTextOverflow === 'condense' && footText.length > 1) ? Math.min(1, xRatio + RUBY_BONUS_RATIO) : 0,\r\n                });\r\n                const halfGap = headText.length === 0\r\n                    ? Math.max(defaultGap, footTextWidth * gapRatio)\r\n                    : baseHalfGap;\r\n                const rightGap = halfGap;\r\n                const leftGap = halfGap;\r\n                /** Lost left width because of negative gap of the previous fragment OR token */\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                const vacantLeftWidth = leftGap > 0 ? leftGap - lostLeftWidth : 0;\r\n\r\n                const {\r\n                    offsetable: isNextTokenOffsetable,\r\n                    leftGap: nextUncompressedLeftGap\r\n                } = analyzeToken({\r\n                    token: nextFragment, nextToken: next2ndFragment,\r\n                    previousTokenGap: rightGap / xRatio,\r\n                    ...analyzeTokenParameter,\r\n                });\r\n                const nextLeftGap = nextUncompressedLeftGap * xRatio;\r\n                const lostRightWidth = getLostLeftWidth(rightGap, nextLeftGap);\r\n                const vacantRightWidth = rightGap > 0 ? rightGap - lostRightWidth : 0;\r\n                const totalVacantSpace = vacantLeftWidth + vacantRightWidth;\r\n                let rebalancedSpace = 0;\r\n                let nextTokenRebalanceOffset = 0;\r\n\r\n                /** Rebalance tactic here. In essential, we try to calculate the empty space of a fragment. These spaces are because the head text is too long compare to the foot text underneath. Then we divide those spaces in such a way that the foot text has roughly equal space each side so they looks more pleasant. */\r\n                if (totalVacantSpace > 0 && nextLeftGap >= (-2 * globalScale) && isNextTokenOffsetable) {\r\n                    rebalancedSpace = (totalVacantSpace + Math.max(nextLeftGap, 0) * 2) / 3;\r\n                    nextTokenRebalanceOffset = Math.max(nextLeftGap, 0) - rebalancedSpace;\r\n                } else {\r\n                    // rebalancedSpace = totalVacantSpace / 2;\r\n                    rebalancedSpace = vacantLeftWidth;\r\n                }\r\n                const footTextFragmentEdge = fragmentEdge\r\n                    + (halfGap < 0 ? -lostLeftWidth : (indent ? -indent : rebalancedSpace))\r\n                    + previousTokenRebalanceOffset;\r\n                previousTokenRebalanceOffset = nextTokenRebalanceOffset;\r\n\r\n                /** Draw actual foot text here */\r\n                drawLine({\r\n                    ctx,\r\n                    format,\r\n                    textData,\r\n                    tokenList: tokenizeText(footText),\r\n                    trueBaseline: baseline,\r\n                    trueEdge: footTextFragmentEdge,\r\n                    xRatio,\r\n                    yRatio,\r\n                    spaceWidth: 0,\r\n                    textDrawer,\r\n                    globalScale,\r\n                    debug: false,\r\n                });\r\n\r\n                /** Head text may have different text style than foot text, so we store the current style before start drawing head text. */\r\n                const currentFillStyle = ctx.fillStyle;\r\n                const currentStrokeStyle = ctx.strokeStyle;\r\n                const currentShadowColor = ctx.shadowColor;\r\n                const currentShadowOffsetX = ctx.shadowOffsetX;\r\n                const currentShadowOffsetY = ctx.shadowOffsetY;\r\n                const currentShadowBlur = ctx.shadowBlur;\r\n                if (headTextFillStyle) {\r\n                    ctx.fillStyle = headTextFillStyle;\r\n                    ctx.strokeStyle = '';\r\n                    ctx.shadowColor = '';\r\n                    ctx.shadowOffsetX = 0;\r\n                    ctx.shadowOffsetY = 0;\r\n                    ctx.shadowBlur = 0;\r\n                }\r\n                /** Draw head text here, remember head text and foot text most of the time do not align at all. */\r\n                const headTextFragmentEdge = fragmentEdge - lostLeftWidth;\r\n                if (drawHeadText) fillHeadText({\r\n                    ctx,\r\n                    fontSize,\r\n                    edge: headTextFragmentEdge, baseline,\r\n                    headText, headTextLetterWidth,\r\n                    footText, footTextWidth,\r\n                    headTextGap: defaultGap,\r\n                    headTextSpacing,\r\n                    headTextHeightRatio,\r\n                    headTextBold,\r\n                    headTextGapRatio,\r\n                    xRatio,\r\n                    fontStyle,\r\n                    textWorker,\r\n                    fitFootText,\r\n                    headTextOverflow,\r\n                    globalScale,\r\n                });\r\n                /** Restore foot text's original style */\r\n                ctx.fillStyle = currentFillStyle;\r\n                ctx.strokeStyle = currentStrokeStyle;\r\n                ctx.shadowColor = currentShadowColor;\r\n                ctx.shadowOffsetX = currentShadowOffsetX;\r\n                ctx.shadowOffsetY = currentShadowOffsetY;\r\n                ctx.shadowBlur = currentShadowBlur;\r\n\r\n                fragmentEdge += Math.max(footTextWidth * xRatio, headTextWidth) - lostLeftWidth + spaceWidth;\r\n                currentRightGap = rightGap;\r\n            }\r\n            /** Draw \"whole words\". */\r\n            else if (WholeWordRegex.test(fragment)) {\r\n                const normalizedWordSpacingRatio = wordLetterSpacing\r\n                    ? 1 + wordLetterSpacing / 2\r\n                    : letterSpacingRatio;\r\n                ctx.letterSpacing = `${(normalizedWordSpacingRatio - 1) * currentFont.getFontInfo().sizeAsNumber}px`;\r\n\r\n                /**\r\n                 * A problem here: We cannot calculate the gap of a fragment unless knowing its actual width, so that means we must calculate it first, then calculate the gap, then go back and calculate the actual width all over again when we draw. These are doable but it make this ugly long code become needlessly more ugly and long. So we just naively measure the word without any kind of special treatment, take the gap based on it and call it a day.\r\n                 * \r\n                 * Even if the actual width of the fragment is different than when we measure it naively, the gap ratio itself have a bit of room for error (around 50%), so most of the time we can avoid any overlap unless in extreme condensing situation.\r\n                 */\r\n                const fragmentNaiveWidth = ctx.measureText(fragment).width * xRatio;\r\n                const leftGap = Math.max(defaultGap, fragmentNaiveWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n                fragmentEdge -= lostLeftWidth;\r\n\r\n                /** Read the comment in `analyzeToken` function, we repeat exactly the treatment there, the different is we actually draw the letter along the way. */\r\n                let remainFragment = fragment;\r\n                let currentPosition = fragmentEdge;\r\n                while (remainFragment !== '') {\r\n                    let currentLetter = remainFragment[0];\r\n                    let nextRemainFragment = remainFragment.slice(1);\r\n                    let actualLetterWidth = 0;\r\n                    const drawLetterofWordParameter = {\r\n                        ...drawLetterParameter,\r\n                        deviation: letterDeviationMap[`${globalScale}`],\r\n                        letter: currentLetter,\r\n                        edge: currentPosition,\r\n                    };\r\n                    if (SquareBracketLetterRegex.test(currentLetter)) {\r\n                        applyScale(squareBracketRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / squareBracketRatio,\r\n                            baseline: baseline / squareBracketRatio,\r\n                        });\r\n                        reverseScale(squareBracketRatio);\r\n                    } else if (CapitalLetterRegex.test(currentLetter)) {\r\n                        applyScale(capitalLetterRatio);\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        const letterOffset = (actualLetterWidth > ctx.measureText(currentLetter).width * capitalLetterRatio)\r\n                            ? Math.round(actualLetterWidth * (1 - capitalLetterRatio)) / 2\r\n                            : 0;\r\n                        drawLetter({\r\n                            ...drawLetterofWordParameter,\r\n                            edge: currentPosition / capitalLetterRatio + letterOffset,\r\n                            baseline: baseline / capitalLetterRatio\r\n                        });\r\n                        reverseScale(capitalLetterRatio);\r\n                    } else if (NumberRegex.test(currentLetter)) {\r\n                        applyNumberFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplyNumberFont();\r\n                    } else if (TCGSymbolLetterRegex.test(currentLetter) && fontStyle === 'tcg') {\r\n                        applySymbolFont();\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                        stopApplySymbolFont();\r\n                    } else {\r\n                        actualLetterWidth = ctx.measureText(remainFragment).width - ctx.measureText(nextRemainFragment).width;\r\n                        drawLetter(drawLetterofWordParameter);\r\n                    }\r\n                    currentPosition += actualLetterWidth * xRatio;\r\n                    remainFragment = nextRemainFragment;\r\n                }\r\n\r\n                fragmentEdge = currentPosition;\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n                ctx.letterSpacing = '0px';\r\n            }\r\n            /** Some specific letter (\"Evil★Twin's Trouble Sunny\" TCG) requires different font. */\r\n            else if (TCGSymbolLetterRegex.test(fragment) && fontStyle === 'tcg') {\r\n                const letter = fragment;\r\n                applySymbolFont();\r\n\r\n                const letterWidth = ctx.measureText(letter).width * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({ ...drawLetterParameter, letter, edge: fragmentEdge });\r\n                fragmentEdge += letterWidth;\r\n\r\n                stopApplySymbolFont();\r\n\r\n                currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n            /** All other fragments */\r\n            else {\r\n                const letter = fragment;\r\n                const letterMetric = getLetterWidth({\r\n                    ctx,\r\n                    letter,\r\n                    fontStyle,\r\n                    metricMethod,\r\n                    isLastOfLine: nextFragment === undefined,\r\n                    xRatio,\r\n                    globalScale,\r\n                });\r\n                const letterWidth = letterMetric.boundWidth * letterSpacingRatio * xRatio;\r\n                const leftGap = Math.max(defaultGap, letterWidth * gapRatio);\r\n                const rightGap = leftGap;\r\n                const lostLeftWidth = getLostLeftWidth(currentRightGap, leftGap);\r\n\r\n                fragmentEdge -= lostLeftWidth;\r\n                drawLetter({\r\n                    ...drawLetterParameter,\r\n                    letter,\r\n                    edge: fragmentEdge,\r\n                    deviation: letterDeviationMap?.[`${globalScale}`],\r\n                    letterMetric,\r\n                });\r\n                fragmentEdge += letterWidth;\r\n                if (\r\n                    (format === 'ocg' || (format === 'tcg' && /\\s+/.test(letter)))\r\n                    && NoSpaceRegex.test(letter) !== true\r\n                ) {\r\n                    fragmentEdge += spaceWidth;\r\n                }\r\n                if (!OCGNoOverheadGapRegex.test(letter)) currentRightGap = rightGap;\r\n                previousTokenRebalanceOffset = 0;\r\n            }\r\n        }\r\n\r\n        /** Make space for the next token, as we can see it does not involve any variables from the fragment drawing process. */\r\n        previousTokenGap = tokenRightGap * xRatio;\r\n        if (debug) drawMarker({ ctx, baseline, edge: tokenEdge, width: totalTokenWidth * xRatio, xRatio });\r\n        tokenEdge += totalTokenWidth * xRatio + spaceCount * spaceWidth + indent;\r\n    }\r\n\r\n    return {\r\n        tokenEdge,\r\n        iconPositionList,\r\n    };\r\n};","import {\r\n    NB_LINE_OPEN,\r\n    NB_LINE_CLOSE,\r\n    OCG_RUBY_SOURCE,\r\n    OCG_KEYWORD_SOURCE,\r\n    ocgKeywordDataMap,\r\n    WHOLE_WORD_SOURCE,\r\n    NOT_END_OF_LINE_SOURCE,\r\n    NOT_START_OF_LINE_SOURCE,\r\n    NOT_SPLIT_SOURCE,\r\n    OCG_BULLET_SOURCE,\r\n    tcgToOCGLetterMap,\r\n    ocgToTCGLetterMap,\r\n    UNCOMPRESSED_SOURCE,\r\n    ocgNumberCircleMap,\r\n    NB_WORD_OPEN,\r\n    NB_WORD_CLOSE,\r\n    FLAVOR_CONDITION_SOURCE,\r\n    NB_UNCOMPRESSED_START,\r\n    NB_UNCOMPRESSED_END,\r\n    contextualDoubleQuoteRegex,\r\n    NB_FULL_LINE_OPEN,\r\n    NB_FULL_LINE_CLOSE\r\n} from 'src/model';\r\n\r\nexport type LineOption = {\r\n    alignment: 'left' | 'justify',\r\n};\r\nexport const splitEffect = (effect: string, isNormal = false) => {\r\n    let effectText = effect;\r\n\r\n    const fullLineList = [];\r\n    const fullLineListOption: LineOption[] = [];\r\n    const lineRegexSource = `^(${NB_LINE_OPEN}([^${NB_LINE_CLOSE}]*)${NB_LINE_CLOSE}\\\\s*)`;\r\n    const fullLineRegexSource = `^(${NB_FULL_LINE_OPEN}([^${NB_FULL_LINE_CLOSE}]*)${NB_FULL_LINE_CLOSE}\\\\s*)`;\r\n    const wholeLineRegex = new RegExp([lineRegexSource, fullLineRegexSource].join('|'));\r\n    let lineReplacement: string | undefined;\r\n    let lineContent: string | undefined;\r\n    let fullLineReplacement: string | undefined;\r\n    let fullLineContent: string | undefined;\r\n    let willContinue = false;\r\n    do {\r\n        const result = wholeLineRegex.exec(effectText);\r\n        lineReplacement = result?.[1];\r\n        lineContent = result?.[2];\r\n        fullLineReplacement = result?.[3];\r\n        fullLineContent = result?.[4];\r\n\r\n        willContinue = false;\r\n        if (lineContent && lineReplacement) {\r\n            fullLineList.push(lineContent);\r\n            effectText = effectText.replace(lineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'left' });\r\n            willContinue = true;\r\n        } else if (fullLineContent && fullLineReplacement) {\r\n            fullLineList.push(fullLineContent);\r\n            effectText = effectText.replace(fullLineReplacement, '');\r\n            fullLineListOption.push({ alignment: 'justify' });\r\n            willContinue = true;\r\n        }\r\n    } while (willContinue);\r\n\r\n    let effectFlavorCondition = '';\r\n    const flavorConditionRegex = new RegExp(FLAVOR_CONDITION_SOURCE, 'm');\r\n    const potentialFlavorConditionText = flavorConditionRegex.exec(effect)?.[1];\r\n    if (potentialFlavorConditionText && isNormal) {\r\n        effectFlavorCondition = potentialFlavorConditionText.trim();\r\n        effectText = effectText.replace(potentialFlavorConditionText, '');\r\n    } else effectFlavorCondition = '';\r\n    /** Restore all remaining nb line symbol back to their normal letters. */\r\n    effectText = effectText\r\n        .replaceAll(NB_LINE_OPEN, '[').replaceAll(NB_LINE_CLOSE, ']')\r\n        .replaceAll(NB_FULL_LINE_OPEN, '[[').replaceAll(NB_FULL_LINE_CLOSE, ']]');\r\n\r\n    return {\r\n        fullLineList,\r\n        fullLineListOption,\r\n        effectText,\r\n        effectFlavorCondition,\r\n    };\r\n};\r\n\r\nexport const normalizeCardText = (\r\n    text: string,\r\n    format: string,\r\n    option?: { multiline?: boolean, furiganaHelper?: boolean, dictionaryType?: 'rubyForm' | 'rubyFormName' },\r\n) => {\r\n    const {\r\n        multiline = true,\r\n        furiganaHelper = true,\r\n        dictionaryType = 'rubyForm',\r\n    } = option ?? {};\r\n    const nonNullableText = text ?? '';\r\n\r\n    /** Normalize the text based on format, by swapping letters to their corresponding form. For example full-width captial A \"Ａ\" will become normal capital \"A\" after normalized. */\r\n    let normalizedText = '';\r\n    let letterSwapMap = format === 'ocg'\r\n        ? tcgToOCGLetterMap\r\n        : ocgToTCGLetterMap;\r\n    for (const letter of nonNullableText) {\r\n        normalizedText += letterSwapMap[letter] ?? letter;\r\n    }\r\n\r\n    /** OCG text sometimes enter new line follow letter \"、\" or \"。\", we will automatically join them. It is debatable whether this feature is needed or not. */\r\n    // const textAfterJoinRow = normalizedText.replace(/(､|｡|。|、)\\n(?!●)/g, '$1');\r\n    const textAfterJoinRow = normalizedText;\r\n\r\n    /** Translate non-wrappable line syntax into internal control characters, beware that \"Qliphort Scout\" does use square brackets in its flavor text, so the regex must exclude that case. */\r\n    const textAfterSplitBlockRow = multiline\r\n        ? textAfterJoinRow\r\n            .replace(/^\\[\\[([\\w\\W]*?)\\]\\](?=(\\n|$))/gm, `${NB_FULL_LINE_OPEN}$1${NB_FULL_LINE_CLOSE}`)\r\n            .replace(/^\\[([\\w\\W]*?)\\](?=(\\n|$))/gm, `${NB_LINE_OPEN}$1${NB_LINE_CLOSE}`)\r\n        : textAfterJoinRow;\r\n\r\n    /** Various contextual swaps */\r\n    const textAfterSwapLetter = textAfterSplitBlockRow\r\n        .replace(/(^|[-\\u2014\\s([\"])'/g, '$1\\u2018')        /** Turn straight single quote ' into contextual curly quote ‘ */\r\n        .replace(/'/g, '\\u2019')                            /** Close open curly quote ’ */\r\n        .replace(contextualDoubleQuoteRegex, '$1\\u201c')  /** Turn straight double quote \" into contextual curly double quote “ */\r\n        .replace(/\"/g, '\\u201d')                            /** Close open curly double quote ” */\r\n        .replace(/--/g, '\\u2014')                           /** Turn double dash \"--\" into em-dash \"—\" */\r\n        .replace(/● /g, '●')                                /** Remove direct whitespace after bullet, bullet have their own fixed space that we will draw later */\r\n        /** Convert ordinal shorthand syntax, for example \"(15)\" will become \"⑮\", used in OCG effect */\r\n        .replace(/(\\([０-９0-9]{1,2}\\))/g, m => {\r\n            const correspondingCircleSymbol = ocgNumberCircleMap[m];\r\n\r\n            return correspondingCircleSymbol ?? m;\r\n        });\r\n\r\n    const textAfterDetectBlockWord = textAfterSwapLetter\r\n        /** Convert non-compressable syntax into internal control characters */\r\n        .replaceAll(new RegExp(UNCOMPRESSED_SOURCE, 'g'), m => m.replaceAll('{{', NB_UNCOMPRESSED_START).replaceAll('}}', NB_UNCOMPRESSED_END))\r\n        /** Convert ruby syntax into internal control characters */\r\n        .replaceAll(new RegExp(OCG_RUBY_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Apply dictionary */\r\n    const textAfterDictionaryMatch = format === 'tcg' || furiganaHelper === false\r\n        ? textAfterDetectBlockWord\r\n        : textAfterDetectBlockWord\r\n            .replaceAll(new RegExp(OCG_KEYWORD_SOURCE, 'g'), m => {\r\n                const keywordSubtitue = ocgKeywordDataMap[m][dictionaryType] ?? ocgKeywordDataMap[m].rubyForm;\r\n\r\n                return `${NB_WORD_OPEN}${keywordSubtitue}${NB_WORD_CLOSE}`;\r\n            });\r\n    /** Analyze various typography rules in OCG card (mainly Kinsoku Shorit)\r\n     * * Some letters cannot stand at the start of the line, so they form a block with the token before them.\r\n     * * Some letters cannot stand at the end of a line, so they form a block with the token next to them.\r\n     * * Some letters cannot be splitted into two lines, so they form a block with both tokens around them.\r\n     * * Ordinal letters must always followed by a colon \"：\", and cannot stand at the end of a line.\r\n    */\r\n    const textAfterProcessing = textAfterDictionaryMatch\r\n        .replaceAll(new RegExp(WHOLE_WORD_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_END_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_START_OF_LINE_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(NOT_SPLIT_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`)\r\n        .replaceAll(new RegExp(OCG_BULLET_SOURCE, 'g'), m => `${NB_WORD_OPEN}${m}${NB_WORD_CLOSE}`);\r\n\r\n    /** Eliminate overlapping group control characters, we perform a simple algorithm to reduce various overlapping forms into non-overlapping ones.\r\n     * * `((()))` => `()`\r\n     * * `(()())` => `()`\r\n     * * `((()()))` => `()`\r\n     * * `()()()` => `()()()`\r\n     */\r\n    let textAfterNormalizeBlockWord = [];\r\n    let currentDepth = 0;\r\n    for (const letter of textAfterProcessing) {\r\n        if (letter === NB_WORD_OPEN) {\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n            currentDepth += 1;\r\n        } else if (letter === NB_WORD_CLOSE) {\r\n            currentDepth -= 1;\r\n            if (currentDepth === 0) textAfterNormalizeBlockWord.push(letter);\r\n        } else textAfterNormalizeBlockWord.push(letter);\r\n    }\r\n    /** Non-wrappable line syntax has higher priority than non-wrappable word syntax, so we re-arrange control characters to fit such case. */\r\n    const finalizedText = textAfterNormalizeBlockWord.join('')\r\n        .replaceAll(`${NB_FULL_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_FULL_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_LINE_CLOSE}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_LINE_CLOSE}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_FULL_LINE_OPEN}`, `${NB_FULL_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_LINE_OPEN}`, `${NB_LINE_OPEN}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_UNCOMPRESSED_START}${NB_WORD_CLOSE}`, `${NB_WORD_CLOSE}${NB_UNCOMPRESSED_START}`)\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_UNCOMPRESSED_END}`, `${NB_UNCOMPRESSED_END}${NB_WORD_OPEN}`)\r\n        .replaceAll(`${NB_LINE_OPEN}${NB_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_FULL_LINE_OPEN}${NB_FULL_LINE_CLOSE}`, '')\r\n        .replaceAll(`${NB_WORD_OPEN}${NB_WORD_CLOSE}`, '');\r\n\r\n    return finalizedText;\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport {\r\n    CondenseType,\r\n    EffectFontData,\r\n    CoordinateData,\r\n    EffectCoordinateData,\r\n    CondenseTolerantMap,\r\n    FontData,\r\n    NormalFontData,\r\n} from '../../model';\r\nimport { condense, createFontGetter, injectDynamicFont, scaleCoordinateData, scaleFontData } from '../../util';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { createLineList } from '../line';\r\nimport { drawLine } from '../text';\r\nimport { analyzeLine } from '../text-analyze';\r\nimport { normalizeCardText, splitEffect } from '../text-normalize';\r\nimport { tokenizeText } from '../text-util';\r\n\r\n/** Sections inside effect box (stats and type) will affect the amount of line and applicable font size use for the text. */\r\nexport const getEffectFontAndCoordinate = ({\r\n    format,\r\n    useItalic,\r\n    statInEffect,\r\n    typeInEffect,\r\n    frameType,\r\n}: {\r\n    format: string,\r\n    statInEffect: boolean,\r\n    typeInEffect: boolean,\r\n    useItalic: boolean,\r\n    frameType: 'normal' | 'pendulumLarge',\r\n}) => {\r\n    const coordinateKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n    const fontDataKey = [\r\n        format,\r\n        ...(frameType === 'pendulumLarge' ? ['pendulumLarge'] : []),\r\n        typeInEffect ? 'type' : '',\r\n        statInEffect ? 'stat' : ''\r\n    ].filter(entry => entry !== '').join('-');\r\n\r\n    let fontData = EffectFontData[fontDataKey];\r\n    if (useItalic && format === 'tcg' && NormalFontData[fontDataKey]) {\r\n        fontData = NormalFontData[fontDataKey];\r\n    }\r\n\r\n    return {\r\n        fontDataKey,\r\n        fontData,\r\n        sizeList: EffectCoordinateData[coordinateKey],\r\n    };\r\n};\r\n\r\nexport const drawEffect = ({\r\n    ctx,\r\n    content,\r\n    isNormal = false,\r\n    // useItalic = false,\r\n    fontDataKey = 'tcg',\r\n    fontData = EffectFontData[fontDataKey],\r\n    textStyle,\r\n    sizeList = EffectCoordinateData['tcg-type'],\r\n    condenseTolerant = 'strict',\r\n    format,\r\n    furiganaHelper,\r\n    option,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    content: string,\r\n    isNormal?: boolean,\r\n    useItalic?: boolean,\r\n    fontData?: FontData,\r\n    fontDataKey?: string,\r\n    textStyle?: CanvasTextStyle,\r\n    sizeList?: CoordinateData[],\r\n    condenseTolerant?: CondenseType,\r\n    format: string,\r\n    furiganaHelper: boolean,\r\n    option?: {\r\n        /** When the text is up-sized, we don't want to apply the current condense tolerant, because large text looks much worse when compressing at high degree. So when the text is up-sized, condense tolerant automatically set to \"relaxed\". */\r\n        forceRelaxCondenseLimit?: number,\r\n        defaultSizeLevel?: number,\r\n        globalScale: number,\r\n    },\r\n}) => {\r\n    const {\r\n        defaultSizeLevel,\r\n        forceRelaxCondenseLimit,\r\n        globalScale = 1,\r\n    } = option ?? {};\r\n    let sizeLevel = defaultSizeLevel ?? 0;\r\n    if (!ctx || !content) return sizeLevel;\r\n\r\n    const normalizedContent = normalizeCardText(content.trim(), format, { furiganaHelper });\r\n    const {\r\n        effectText,\r\n        effectFlavorCondition,\r\n        fullLineList,\r\n        fullLineListOption,\r\n    } = splitEffect(normalizedContent, isNormal);\r\n\r\n    const additionalLineCount = (fullLineList.length ?? 0) + (effectFlavorCondition.length > 0 ? 1 : 0);\r\n    const paragraphList = effectText ? effectText.split('\\n') : [];\r\n\r\n    let effectiveLineCount = 0;\r\n    const scaledFontData = scaleFontData(fontData, globalScale);\r\n    const { fontList } = scaledFontData;\r\n    const yRatio = 1;\r\n    /**\r\n     * We basically go through each font size, then iterating the content multiple time with different condense ratio until the text is both fit inside the max amount of lines AND the ratio is larger than the current limit threshold.\r\n     * \r\n     * If it went through every single of our font list entries, dynamic entry will be activated. It will no longer care about accuracy and just do its best to cramp all the text together. Max font entry failed when either there are too many lines, or there are too many words that is pass the condense threshold.\r\n     * */\r\n    while (sizeLevel <= fontList.length && sizeLevel >= 0) {\r\n        const requireDynamicSize = sizeLevel === fontList.length\r\n            ? true\r\n            : false;\r\n        const appliedSizeLevel = Math.min(fontList.length - 1, sizeLevel);\r\n        const tolerancePerSentence: Record<string, number> = requireDynamicSize\r\n            ? {\r\n                '1': 1000,\r\n                '2': 1000,\r\n                '3': 1000,\r\n            }\r\n            : (format === 'tcg'\r\n                ? forceRelaxCondenseLimit && appliedSizeLevel < forceRelaxCondenseLimit\r\n                    ? CondenseTolerantMap['relaxed']\r\n                    : CondenseTolerantMap[condenseTolerant] ?? CondenseTolerantMap['strict']\r\n                : {\r\n                    '1': 800,\r\n                    '2': 800,\r\n                    '3': 800,\r\n                });\r\n        const {\r\n            trueEdge,\r\n            trueWidth: trueWidthStart,\r\n            trueBaseline: trueBaselineStart,\r\n            trueHeightCap,\r\n        } = scaleCoordinateData(sizeList[appliedSizeLevel] ?? sizeList[sizeList.length - 1], globalScale);\r\n        const width = (isNormal && format === 'tcg') ? trueWidthStart - 2 * globalScale : trueWidthStart;\r\n\r\n        const useDynamicSize = requireDynamicSize && typeof trueHeightCap === 'number';\r\n        const dynamicFontData = useDynamicSize\r\n            ? injectDynamicFont(scaledFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n            : scaledFontData;\r\n        const dynamicSizeLevel = useDynamicSize\r\n            ? sizeLevel\r\n            : appliedSizeLevel;\r\n        const {\r\n            font: dynamicFont,\r\n            fontList: dynamicFontList,\r\n        } = dynamicFontData;\r\n        const fontSizeData = useDynamicSize\r\n            ? dynamicFontList[dynamicSizeLevel]\r\n            : fontList[appliedSizeLevel];\r\n        const {\r\n            fontSize,\r\n            lineHeight,\r\n            lineCount,\r\n        } = fontSizeData;\r\n\r\n        const currentFont = createFontGetter();\r\n        ctx.font = currentFont\r\n            .setWeight(format === 'tcg' ? '' : '')\r\n            .setSize(fontSize)\r\n            .setFamily(dynamicFont)\r\n            .getFont();\r\n        ctx.textAlign = 'left';\r\n        const textData = {\r\n            fontData: dynamicFontData,\r\n            fontLevel: dynamicSizeLevel,\r\n            currentFont,\r\n        };\r\n        // [CREATE SENTENCE ON EACH LINE]\r\n        let lineListWithRatio: { line: string, isLast: boolean, effectiveMedian: number }[] = [];\r\n\r\n        // [FIND SUITABLE CONDENSE RATIO]\r\n        const effectiveMedian = (additionalLineCount > lineCount && typeof trueHeightCap === 'number')\r\n            ? 1 // If dynamic size is possible, no need to find condense value if current lint count is larger than the font's maximum line count, it will overflow anyways.\r\n            : condense(\r\n                median => {\r\n                    const { currentLineList, currentLineCount } = createLineList({\r\n                        ctx,\r\n                        median,\r\n                        paragraphList,\r\n                        additionalLineCount,\r\n                        format, textData,\r\n                        width,\r\n                        globalScale,\r\n                    });\r\n                    lineListWithRatio = currentLineList;\r\n\r\n                    if (currentLineCount > lineCount) return false;\r\n                    return true;\r\n                },\r\n                200,\r\n            );\r\n        effectiveLineCount = lineListWithRatio.length + additionalLineCount;\r\n\r\n        // [START DRAWING]\r\n        /** Usually effect only consist of 1 or 2 paragraphs, but in TCG they try to put each bullet clause in a new line, resulting many more. Still we don't know if having different tolerance based on amount of paragraph is correct or not, since it is very hard to survey the condensation of a real card. */\r\n        const resetStyle = setTextStyle({ ctx, ...textStyle, globalScale });\r\n        const tolerantValue = tolerancePerSentence[`${paragraphList.length}`] ?? tolerancePerSentence['3'];\r\n        if (\r\n            (effectiveMedian < tolerantValue)\r\n            && (sizeLevel < fontList.length)\r\n        ) {\r\n            sizeLevel += 1; // If sizeLevel is larger than the length of font list, trigger dynamic size\r\n        } else {\r\n            clearCanvas(ctx);\r\n\r\n            let trueBaseline = trueBaselineStart + lineHeight;\r\n            /** Naturally, non-brekable lines have their own condense ratio. */\r\n            const fullLineListWithRatio = fullLineList.map((line, index) => {\r\n                return {\r\n                    line,\r\n                    isLast: fullLineListOption[index].alignment === 'justify' ? false : true,\r\n                    effectiveMedian: condense(\r\n                        median => {\r\n                            const { currentLineCount } = createLineList({\r\n                                ctx,\r\n                                median,\r\n                                paragraphList: [line],\r\n                                format, textData,\r\n                                width,\r\n                                globalScale,\r\n                            });\r\n    \r\n                            if (currentLineCount > 1) return false;\r\n                            return true;\r\n                        },\r\n                    )\r\n                };\r\n            });\r\n\r\n            /** Draw each line based on their token list and corresponding ratio. */\r\n            [\r\n                ...fullLineListWithRatio,\r\n                ...lineListWithRatio,\r\n            ].forEach(({\r\n                line,\r\n                isLast,\r\n                effectiveMedian,\r\n            }) => {\r\n                const xRatio = effectiveMedian / 1000;\r\n                const { tokenList, spaceWidth } = analyzeLine({ ctx, line, xRatio, format, isLast, textData, width, globalScale });\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    spaceWidth,\r\n                    textData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            });\r\n\r\n            /** Condition clause of flavor text in TCG cards do not use italic font style (\"Summoned Skull\" TCG). */\r\n            if (effectFlavorCondition.length > 0 && EffectFontData[fontDataKey]) {\r\n                const flavorFontData = scaleFontData(EffectFontData[fontDataKey], globalScale);\r\n                const dynamicFlavorFontData = useDynamicSize\r\n                    ? injectDynamicFont(flavorFontData, { heightCap: trueHeightCap, lineCount: effectiveLineCount })\r\n                    : flavorFontData;\r\n                const flavorFontSizeData = useDynamicSize\r\n                    ? dynamicFlavorFontData.fontList[dynamicSizeLevel]\r\n                    : flavorFontData.fontList[appliedSizeLevel];\r\n                const {\r\n                    fontSize,\r\n                    lineHeight,\r\n                } = flavorFontSizeData;\r\n                const flavorTextCurrentFont = createFontGetter();\r\n                ctx.font = flavorTextCurrentFont\r\n                    .setSize(fontSize)\r\n                    .setFamily(flavorFontData.font)\r\n                    .getFont();\r\n                const flavorTextData = {\r\n                    fontData: dynamicFlavorFontData,\r\n                    fontLevel: dynamicSizeLevel,\r\n                    currentFont: flavorTextCurrentFont,\r\n                };\r\n                const internalEffectiveMedian = condense(\r\n                    median => {\r\n                        const { currentLineCount } = createLineList({\r\n                            ctx,\r\n                            median,\r\n                            paragraphList: [effectFlavorCondition],\r\n                            format, textData: flavorTextData,\r\n                            width,\r\n                            globalScale,\r\n                        });\r\n\r\n                        if (currentLineCount > 1) return false;\r\n                        return true;\r\n                    },\r\n                );\r\n                const xRatio = internalEffectiveMedian / 1000;\r\n\r\n                ctx.scale(xRatio, yRatio);\r\n                const tokenList = tokenizeText(effectFlavorCondition);\r\n                /** We use two new line character to identify condition clause among flavor text. Because in normal case the user will try to put in many new lines to ensure that the condition clause is placed at bottom of the card text.\r\n                 * \r\n                 * But this method has a caveat: For example if current line limit is 6, and the flavor text already take 5 lines. If user put the condition clause at line 6, it is indistinguishable from a normal paragraph, and therefore drawn with italic font. But if user put a new line between, it will force the draw function to increase the line limit into 7.\r\n                 * \r\n                 * To combat this, we perform a simple remove that additional new line, that means if conditional clause is present, two new lines in textare actually result only one new line. This does not create much hassle since user rarely notice this behavior.\r\n                 * */\r\n                drawLine({\r\n                    ctx,\r\n                    tokenList,\r\n                    xRatio, yRatio,\r\n                    trueEdge, trueBaseline,\r\n                    textData: flavorTextData,\r\n                    format,\r\n                    globalScale,\r\n                });\r\n                trueBaseline += lineHeight;\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            }\r\n            break;\r\n        }\r\n        resetStyle();\r\n    }\r\n\r\n    return sizeLevel;\r\n};","\r\nimport { CanvasConst, NO_STICKER } from 'src/model';\r\nimport { drawAsset, drawWithStyle } from '../image';\r\nimport { clearCanvas, getFinishIterator, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { createCanvas, scaleDrawCoordinate } from 'src/util';\r\n\r\nconst {\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n\r\nexport const drawStarContent = async ({\r\n    ctx,\r\n    globalScale,\r\n    cardIcon,\r\n    text,\r\n    star,\r\n    starAlignment = 'auto',\r\n    style,\r\n    useArtFinish,\r\n    onStarDraw,\r\n    loopArtFinish,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    globalScale: number,\r\n    cardIcon: string,\r\n    text: string | null,\r\n    star: string | number,\r\n    starAlignment: string,\r\n    style?: CanvasTextStyle,\r\n    useArtFinish: boolean,\r\n    onStarDraw: (coordinate: [number, number]) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const starWidth = 50;\r\n    const startSpacing = 4;\r\n    let normalizedStarCount = typeof star === 'string'\r\n        ? star === '' ? 0 : 1\r\n        : typeof star === 'number' ? star : 0;\r\n    let totalWidth = starWidth * normalizedStarCount + startSpacing * (normalizedStarCount - 1);\r\n    const baseline = 145;\r\n\r\n    let alignment = 'right';\r\n    if (['rank', 'negative-level'].includes(cardIcon)) alignment = 'left';\r\n    alignment = starAlignment === 'auto'\r\n        ? alignment\r\n        : starAlignment;\r\n    if (normalizedStarCount > 12) alignment = 'center';\r\n\r\n    if (text && alignment === 'center') {\r\n        normalizedStarCount = 0;\r\n        totalWidth = 0;\r\n    }\r\n\r\n    /** Level / Rank 13 is center-aligned. */\r\n    const leftEdge = alignment === 'center'\r\n        ? (CanvasWidth + totalWidth) / 2\r\n        : alignment === 'left'\r\n            ? 85.9125 + totalWidth\r\n            : 728.775;\r\n\r\n    let offset = 0 - (starWidth + startSpacing);\r\n\r\n    if (ctx && text && cardIcon !== 'st') {\r\n        const fontSize = 50;\r\n        const resetShadow = setTextStyle({ ctx, ...style, globalScale });\r\n        ctx.textAlign = alignment === 'left' || alignment === 'right'\r\n            ? alignment\r\n            : 'left';\r\n        ctx.font = `bold ${fontSize}px RoGSanSrfStd-Bd`;\r\n        const offset = alignment === 'center'\r\n            ? ctx.measureText(text).width / -2\r\n            : alignment === 'left'\r\n                ? startSpacing\r\n                : (starWidth + startSpacing * 2) * -1;\r\n        ctx.fillText(text, leftEdge + offset, baseline + fontSize * 0.9);\r\n        ctx.textAlign = 'left';\r\n        resetShadow();\r\n    }\r\n\r\n    const {\r\n        canvas: starCanvas,\r\n        context: starContext,\r\n    } = createCanvas(CanvasWidth * globalScale, (baseline + starWidth) * globalScale);\r\n    await Promise.all([...Array(normalizedStarCount)]\r\n        .map(async () => {\r\n            offset += (starWidth + startSpacing);\r\n            let coordinate: [number, number] = [\r\n                leftEdge - (starWidth + offset),\r\n                baseline,\r\n            ];\r\n            await drawAsset(starContext, `subfamily/subfamily-${cardIcon}.png`, ...coordinate);\r\n            return await onStarDraw(coordinate);\r\n        })\r\n    );\r\n    if (loopArtFinish && useArtFinish) {\r\n        const {\r\n            canvas: starFinishCanvas,\r\n            context: starFinishContext,\r\n        } = createCanvas(CanvasWidth, (baseline + starWidth));\r\n        starFinishContext.drawImage(starCanvas, 0, 0);\r\n        await loopArtFinish(\r\n            starFinishContext,\r\n            'art',\r\n            async (finishType) => {\r\n                return await drawAsset(\r\n                    starFinishContext,\r\n                    `finish/finish-typeart-${finishType}.png`,\r\n                    (CanvasWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                );\r\n            },\r\n        );\r\n        starContext.globalCompositeOperation = 'source-in';\r\n        starContext.drawImage(starFinishCanvas, 0, 0);\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    } else {\r\n        ctx.drawImage(starCanvas, 0, 0);\r\n    }\r\n};\r\n\r\nexport const drawSticker = async ({\r\n    ctx,\r\n    sticker,\r\n    globalScale,\r\n    x, y,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    sticker: string,\r\n    globalScale: number,\r\n    x: number,\r\n    y: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    if (sticker === NO_STICKER) return Promise.resolve();\r\n    ctx.scale(globalScale, globalScale);\r\n    await drawAsset(ctx, `sticker/sticker-${sticker.toLowerCase()}.png`, x, y);\r\n    ctx.resetTransform();\r\n    return;\r\n};\r\n\r\n/** Duel terminal mark and Speed card mark. */\r\nexport const drawPredefinedMark = async ({\r\n    canvas,\r\n    globalScale,\r\n    type,\r\n    isPendulum,\r\n    isLink,\r\n    isDuelTerminalCard,\r\n    isSpeedCard,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isDuelTerminalCard: boolean,\r\n    isSpeedCard: boolean,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const ctx = canvas?.getContext('2d');\r\n\r\n    if (!ctx) return;\r\n\r\n    if (isDuelTerminalCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1072, 175, 35]\r\n            : isLink\r\n                ? [151, 848, 216, 24]\r\n                : [80, 843, 270, 30];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-duel-terminal-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n    if (isSpeedCard) {\r\n        const coordinate: [number, number, number, number] = isPendulum\r\n            ? [255, 1084, 176.4, 25]\r\n            : isLink\r\n                ? [151, 854, 215.6, 22]\r\n                : [80, 850, 245, 25];\r\n\r\n        await drawWithStyle(\r\n            canvas,\r\n            `text/text-speed-duel-${type}${bordered ? '-bordered' : ''}.png`,\r\n            ...scaleDrawCoordinate(coordinate, globalScale),\r\n            globalScale,\r\n            textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n        );\r\n    }\r\n};\r\n\r\nexport const drawLimitedEditionMark = async ({\r\n    canvas,\r\n    type,\r\n    globalScale,\r\n    isPendulum,\r\n    isLink,\r\n    isLegacyCard,\r\n    widthOffset,\r\n    bordered,\r\n    textStyle,\r\n}: {\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    canvas: HTMLCanvasElement,\r\n    globalScale: number,\r\n    type: string,\r\n    isPendulum: boolean,\r\n    isLink: boolean,\r\n    isLegacyCard: boolean,\r\n    /** When the creator text is too long, this mark must be compressed */\r\n    widthOffset: number,\r\n    bordered: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n}) => {\r\n    const coordinate: [number, number, number, number] = !isLegacyCard || isPendulum\r\n        ? [145, 1123, 240 - widthOffset / globalScale, 37]\r\n        : isLink\r\n            ? [151, 846, 216, 36]\r\n            : [80, 843, 240, 40];\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        `text/text-limited-edition-${type}${bordered ? '-bordered' : ''}.png`,\r\n        ...scaleDrawCoordinate(coordinate, globalScale),\r\n        globalScale,\r\n        textStyle?.shadowColor ? { ...textStyle, blur: 3, x: 0, y: 0 } : textStyle,\r\n    );\r\n};\r\n\r\nexport const drawLinkRatingText = async (\r\n    canvas: HTMLCanvasElement,\r\n    linkMap: string[],\r\n    style: CanvasTextStyle,\r\n    globalScale: number,\r\n) => {\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    if (!ctx || !Array.isArray(linkMap)) return;\r\n\r\n    await drawWithStyle(\r\n        canvas,\r\n        'link/link-text.png',\r\n        ...scaleDrawCoordinate([600, 1080, 120, 30], globalScale),\r\n        globalScale,\r\n        style,\r\n    );\r\n    const resetStyle = setTextStyle({ ctx, ...style, globalScale });\r\n    ctx.textAlign = 'right';\r\n    ctx.scale(1.2, 1);\r\n    ctx.font = `bold ${26.55 * globalScale}px RoGSanSrfStd-Bd`;\r\n    ctx.fillText(`${linkMap.length}`, 622.75 * globalScale, 1105 * globalScale);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.textAlign = 'left';\r\n    resetStyle();\r\n};","import {\r\n    ArrowPositionMap,\r\n    BackgroundType,\r\n    CanvasConst,\r\n    CardArtCanvasCoordinateMap,\r\n    CardOpacity,\r\n    Foil,\r\n    getArtCanvasCoordinate,\r\n    NO_ATTRIBUTE,\r\n    PendulumSize,\r\n    PendulumSizeMap,\r\n    PendulumSizeMapException,\r\n} from 'src/model';\r\nimport { drawAsset, drawAssetWithSize, drawWithStyle } from '../image';\r\nimport { createCanvas, getCardIconFromFrame } from 'src/util';\r\nimport { drawStarContent } from './with-image';\r\nimport { CanvasTextStyle } from 'src/service';\r\nimport { getFinishIterator } from '../canvas-util';\r\n\r\nexport const baseDrawLinkArrowMap = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    linkMap: string[],\r\n    positionType: keyof typeof ArrowPositionMap,\r\n    boundless: boolean,\r\n) => {\r\n    if (!ctx) return;\r\n    ctx.scale(globalScale, globalScale);\r\n    await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n        .map(async entry => {\r\n            const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n            const isActive = linkMap.includes(`${entry}`);\r\n            const baseLink = `link/link-inactive-${entry}`;\r\n            const activeLink = `link/link-active-${entry}`;\r\n            const coordinate = [left, top, width, height] as const;\r\n\r\n            await drawAssetWithSize(ctx, `${baseLink}-base${boundless ? '-full' : ''}.png`, ...coordinate);\r\n            await drawAssetWithSize(ctx, `${baseLink}-core.png`, ...coordinate);\r\n            if (isActive) {\r\n                await drawAssetWithSize(ctx, `${activeLink}-base.png`, ...coordinate);\r\n                return drawAssetWithSize(ctx, `${activeLink}-core.png`, ...coordinate);\r\n            } else return;\r\n        })\r\n    );\r\n    ctx.resetTransform();\r\n};\r\nexport const baseDrawLinkMapFoil = async (\r\n    ctx: CanvasRenderingContext2D,\r\n    globalScale: number,\r\n    foil: string,\r\n    withBorder: boolean,\r\n    positionType: keyof typeof ArrowPositionMap,\r\n) => {\r\n    if (!ctx) return;\r\n    if (foil === 'normal') return;\r\n\r\n    ctx.scale(globalScale, globalScale);\r\n    if (withBorder) {\r\n        await drawAsset(ctx, `link/link-overlay-arrow-${foil}.png`, 0, 175);\r\n    } else {\r\n        await Promise.all<any>([1, 2, 3, 4, 6, 7, 8, 9]\r\n            .map(async entry => {\r\n                const { left, top, height, width } = ArrowPositionMap[positionType][entry - 1];\r\n                const coordinate = [left, top, width, height] as const;\r\n\r\n                await drawAssetWithSize(ctx, `link/link-overlay-${entry}-${foil}.png`, ...coordinate);\r\n            })\r\n        );\r\n    }\r\n    ctx.resetTransform();\r\n};\r\n\r\nconst {\r\n    width: cardWidth,\r\n    height: cardHeight,\r\n    topToPendulumStructure,\r\n    topToPendulumStructureFrame,\r\n    pendulumIconFrameHeight,\r\n    pendulumIconFrameWidth,\r\n    pendulumFrameHeight,\r\n    pendulumFrameWidth,\r\n    pendulumStructureHeight,\r\n    leftToPendulumStructure,\r\n    effectBoxHeight,\r\n    effectBoxWidth,\r\n    leftToEffectBox,\r\n    topToEffectBox,\r\n    attributeSize,\r\n    attributeX,\r\n    attributeY,\r\n    finishTypeCardWidth,\r\n    stickerSize,\r\n} = CanvasConst;\r\n/** Various function used to draw the layout of a card is abstracted to this factory. */\r\nexport const getLayoutDrawFunction = ({\r\n    canvas,\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    globalScale,\r\n    format,\r\n    hasBackground,\r\n    frame, bottomFrame,\r\n    backgroundType,\r\n    cardIcon,\r\n    attribute,\r\n    star,\r\n    foil,\r\n    pendulumSize,\r\n    opacity,\r\n    isLink, isSpeedSkill, isXyz,\r\n    isPendulum,\r\n    pendulumFrameTypeMap,\r\n    useArtFinish,\r\n    loopFinish,\r\n    loopArtFinish,\r\n}: {\r\n    canvas: HTMLCanvasElement,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    backgroundCanvas: HTMLCanvasElement | null,\r\n    globalScale: number,\r\n    format: string,\r\n    frame: string, bottomFrame: string,\r\n    hasBackground: boolean,\r\n    backgroundType: BackgroundType,\r\n    cardIcon: string,\r\n    attribute: string,\r\n    star: number | string,\r\n    foil: Foil,\r\n    pendulumSize: PendulumSize,\r\n    opacity: CardOpacity,\r\n    isXyz: boolean, isSpeedSkill: boolean, isLink: boolean,\r\n    isPendulum: boolean,\r\n    pendulumFrameTypeMap: { blue: 'normal' | 'scaleless', red: 'normal' | 'scaleless' },\r\n    useArtFinish: boolean,\r\n    loopFinish: (\r\n        ctx?: CanvasRenderingContext2D | null,\r\n        name?: string,\r\n        caller?: (finishType: string) => Promise<any>,\r\n    ) => Promise<void>,\r\n    loopArtFinish: ReturnType<typeof getFinishIterator>,\r\n}) => {\r\n    const ctx = canvas.getContext('2d');\r\n    const {\r\n        artBorder: keepArtBorder,\r\n        nameBorder,\r\n        body: opacityBody,\r\n        name: opacityName,\r\n        pendulum: opacityPendulum,\r\n        text: opacityText,\r\n        boundless,\r\n    } = opacity;\r\n    const {\r\n        artX,\r\n        artY,\r\n        artFinishX,\r\n        artFinishY,\r\n        artWidth,\r\n        artRatio,\r\n    } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n    const {\r\n        frameType,\r\n        effectBoxOffsetY,\r\n        pendulumBoxX, pendulumBoxY, pendulumBoxWidth, pendulumBoxHeight,\r\n        pendulumBoxOffsetY,\r\n        artlessFrameY,\r\n    } = PendulumSizeMap[pendulumSize];\r\n    const artBorder = opacityBody > 0 ? true : keepArtBorder;\r\n    const artBoxY = 170, artBoxX = 60;\r\n    const effectBoxY = 860, effectBoxX = 35;\r\n    const backgroundEffectBoxY = effectBoxY + 25, backgroundEffectBoxX = effectBoxX + 19;\r\n    const backgroundEffectBoxWidth = 705, backgroundEffectBoxHeight = 231;\r\n\r\n    const hasFoil = foil !== 'normal';\r\n    const frameBorderType = isXyz || isSpeedSkill\r\n        ? frame\r\n        : 'normal';\r\n    const nameBorderTypeList = frame === 'synchro'\r\n        ? ['normal', 'xyz'] /** This produce more accurate effect */\r\n        : [frameBorderType];\r\n    const applyArtFinish = !boundless && artBorder;\r\n\r\n    const resultAPI = {\r\n        /** Calculate new art coordination for creative mode, some configurations may result in the art getting drawn at different location compare to default one used by `drawArtwork` function. A lots of calculation is involved here since we:\r\n         * \r\n         *  * Trying to draw only a portion of the image.\r\n         *  * The source image has totally different size compare to the destination boundary.\r\n         *  * Various anchor points must be located based on the current card layout. Kinda regret making this feature, but they work pretty well so.\r\n         */\r\n        calculateCardArtRedrawCoordination(\r\n            imageCanvas: HTMLCanvasElement,\r\n            customOpacity?: CardOpacity,\r\n            extraHeightRatio = 1,\r\n            customBackgroundType?: BackgroundType,\r\n        ) {\r\n            const normalizedOpacity = customOpacity ?? opacity;\r\n            const {\r\n                body: bodyOpacity\r\n            } = normalizedOpacity;\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n                artFrameWidth,\r\n            } = getArtCanvasCoordinate(isPendulum, normalizedOpacity, customBackgroundType, pendulumSize);\r\n            const { width: imageWidth, height: imageHeight } = imageCanvas;\r\n            const imageScaledRatio = artWidth / imageWidth;\r\n            const sourceOffsetX = bodyOpacity < 100\r\n                ? (leftToPendulumStructure - artX) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetX = sourceOffsetX * imageScaledRatio;\r\n            const sourceOffsetY = bodyOpacity < 100\r\n                ? (topToPendulumStructure - artY) / imageScaledRatio\r\n                : 0;\r\n            const destinationOffsetY = sourceOffsetY * imageScaledRatio;\r\n            const offsetHeight = bodyOpacity < 100\r\n                ? imageHeight - (pendulumStructureHeight / imageScaledRatio)\r\n                : 0;\r\n\r\n            const destinationX = artX + destinationOffsetX;\r\n            const destinationY = artY + destinationOffsetY;\r\n            const destinationWidth = artWidth - destinationOffsetX * 2;\r\n            const destinationHeight = artWidth / (imageWidth / imageHeight) * extraHeightRatio - offsetHeight * imageScaledRatio;\r\n\r\n            return {\r\n                imageScaledRatio,\r\n                sourceOffsetX,\r\n                sourceOffsetY,\r\n                destinationOffsetX,\r\n                destinationOffsetY,\r\n                offsetHeight,\r\n                destinationX,\r\n                destinationY,\r\n                destinationWidth,\r\n                destinationHeight,\r\n                /** Background fill is not depend on art size */\r\n                fillWidth: artFrameWidth,\r\n                fillHeight: pendulumStructureHeight,\r\n            };\r\n        },\r\n\r\n        /** Main frame consists of top half and bottom half (for pendulum-like) card. */\r\n        drawFrame: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.globalAlpha = opacityBody / 100;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-${frame}.png`, 0, 0);\r\n            await drawAsset(ctx, `frame-pendulum/frame-pendulum-${bottomFrame}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            if (hasBackground && backgroundCanvas && backgroundType === 'frame') {\r\n                const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n                const clonedCanvas = backgroundCanvas.cloneNode() as HTMLCanvasElement | null;\r\n\r\n                const clonedCanvasContext = clonedCanvas?.getContext('2d');\r\n                if (clonedCanvas && clonedCanvasContext) {\r\n                    /** Clone background to create a new frame */\r\n                    clonedCanvas.width = cardWidth * globalScale;\r\n                    clonedCanvas.height = cardHeight * globalScale;\r\n                    clonedCanvasContext.drawImage(\r\n                        backgroundCanvas,\r\n                        0, 0, backgroundWidth, backgroundHeight,\r\n                        0, 0, cardWidth * globalScale, cardHeight * globalScale,\r\n                    );\r\n                    /** Clear slot for card art */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artX,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artY,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth,\r\n                        globalScale * CardArtCanvasCoordinateMap.normal.artWidth / CardArtCanvasCoordinateMap.normal.artRatio,\r\n                    );\r\n                    /** Clear slot for effect box */\r\n                    clonedCanvasContext.clearRect(\r\n                        globalScale * leftToEffectBox,\r\n                        globalScale * topToEffectBox,\r\n                        globalScale * effectBoxWidth,\r\n                        globalScale * effectBoxHeight,\r\n                    );\r\n                    ctx.drawImage(\r\n                        clonedCanvas,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                        0, 0,\r\n                        globalScale * cardWidth, globalScale * cardHeight,\r\n                    );\r\n                }\r\n            }\r\n            ctx.globalAlpha = 1;\r\n        },\r\n        /** Draw card artwork is synchronous because the image is already loaded from cropper's canvas. */\r\n        drawCardArt: () => {\r\n            if (!artworkCanvas || !ctx) return;\r\n            const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n            if (imageHeight <= 0) return;\r\n            ctx.drawImage(\r\n                artworkCanvas,\r\n                0, 0,\r\n                imageWidth, imageHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (imageWidth / imageHeight),\r\n            );\r\n        },\r\n        drawBackground: (\r\n            boundary?: 'pendulum',\r\n        ) => {\r\n            if (!backgroundCanvas || !ctx || !hasBackground) return;\r\n            const { width: backgroundWidth, height: backgroundHeight } = backgroundCanvas;\r\n\r\n            if (backgroundHeight <= 0) return;\r\n            if (boundary === 'pendulum' && backgroundType !== 'frame') {\r\n                let redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(backgroundCanvas);\r\n\r\n                if (backgroundType === 'full') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        { ...opacity, body: 0 },\r\n                        undefined,\r\n                        'full',\r\n                    );\r\n                } else if (backgroundType === 'fit') {\r\n                    redrawCoordination = resultAPI.calculateCardArtRedrawCoordination(\r\n                        backgroundCanvas,\r\n                        opacity,\r\n                        undefined,\r\n                        'fit',\r\n                    );\r\n                }\r\n\r\n                const {\r\n                    sourceOffsetX: backgroundSourceOffsetX, sourceOffsetY: backgroundSourceOffsetY,\r\n                    offsetHeight: backgroundOffsetHeight,\r\n                    destinationX: backgroundDestinationX, destinationY: backgroundDestinationY,\r\n                    destinationWidth: backgroundDestinationWidth, destinationHeight: backgroundDestinationHeight,\r\n                } = redrawCoordination;\r\n                ctx.drawImage(\r\n                    backgroundCanvas,\r\n                    backgroundSourceOffsetX, backgroundSourceOffsetY,\r\n                    backgroundWidth - backgroundSourceOffsetX * 2, backgroundHeight - backgroundOffsetHeight,\r\n                    globalScale * backgroundDestinationX, globalScale * backgroundDestinationY,\r\n                    globalScale * backgroundDestinationWidth, globalScale * backgroundDestinationHeight,\r\n                );\r\n                return;\r\n            }\r\n\r\n            const {\r\n                artX,\r\n                artY,\r\n                artWidth,\r\n            } = getArtCanvasCoordinate(\r\n                isPendulum,\r\n                { ...opacity, boundless: true },\r\n                backgroundType,\r\n                pendulumSize,\r\n            );\r\n            ctx.drawImage(\r\n                backgroundCanvas,\r\n                0, 0,\r\n                backgroundWidth, backgroundHeight,\r\n                globalScale * artX, globalScale * artY,\r\n                globalScale * artWidth, globalScale * artWidth / (backgroundWidth / backgroundHeight)\r\n            );\r\n        },\r\n        drawAttribute: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            const {\r\n                canvas: attributeCanvas,\r\n                context: attributeContext,\r\n            } = createCanvas(cardWidth * globalScale, (attributeY + attributeSize) * globalScale);\r\n            await drawAsset(\r\n                attributeContext,\r\n                `attribute/attr-${format}-${attribute.toLowerCase()}.png`,\r\n                attributeX, attributeY,\r\n            );\r\n            if (loopArtFinish && useArtFinish) {\r\n                const {\r\n                    canvas: attributeFinishCanvas,\r\n                    context: attributeFinishContext,\r\n                } = createCanvas(cardWidth, (attributeY + attributeSize));\r\n                attributeFinishContext.drawImage(attributeCanvas, 0, 0);\r\n                await loopArtFinish(\r\n                    attributeFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            attributeFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            (cardWidth - finishTypeCardWidth) / 2, stickerSize,\r\n                        );\r\n                    },\r\n                );\r\n                attributeContext.globalCompositeOperation = 'source-in';\r\n                attributeContext.drawImage(attributeFinishCanvas, 0, 0);\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(attributeCanvas, 0, 0);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawStar: async ({ style, starAlignment }: { style?: CanvasTextStyle, starAlignment: string }) => {\r\n            const normalizedCardIcon = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawStarContent({\r\n                ctx,\r\n                cardIcon: normalizedCardIcon,\r\n                text: typeof star === 'string' ? star : null,\r\n                star,\r\n                starAlignment,\r\n                style,\r\n                globalScale,\r\n                useArtFinish,\r\n                onStarDraw: async coordinate => {\r\n                    return normalizedCardIcon === 'st'\r\n                        ? Promise.resolve()\r\n                        : await loopFinish(\r\n                            ctx,\r\n                            'star',\r\n                            async type => drawAsset(ctx, `finish/finish-${type}-star.png`, ...coordinate),\r\n                        );\r\n                },\r\n                loopArtFinish,\r\n            });\r\n            ctx.resetTransform();\r\n        },\r\n        drawPendulumScaleIcon: async () => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumIconCanvas = document.createElement('canvas');\r\n            pendulumIconCanvas.width = pendulumIconFrameWidth;\r\n            pendulumIconCanvas.height = pendulumIconFrameHeight;\r\n            const pendulumIconContext = pendulumIconCanvas.getContext('2d');\r\n            await drawAsset(pendulumIconContext, `frame-pendulum/pendulum-scale-${pendulumSize}.png`, 0, 0);\r\n\r\n            if (pendulumFrameTypeMap.blue === 'scaleless') {\r\n                pendulumIconContext.clearRect(0, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n            if (pendulumFrameTypeMap.red === 'scaleless') {\r\n                pendulumIconContext.clearRect(pendulumIconFrameWidth / 2, 0, pendulumIconFrameWidth / 2, pendulumIconFrameHeight);\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumIconCanvas, 0, 750);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Individual arrows has two state (active/inactive) and two different parts (base and core) */\r\n        drawLinkArrowMap: async (linkMap: string[], positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkArrowMap(ctx, globalScale, linkMap, positionType, boundless);\r\n        },\r\n        drawStatBorder: async (style: CanvasTextStyle) => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawWithStyle(\r\n                canvas,\r\n                'frame/frame-stat-border.png',\r\n                0, 1070,\r\n                813, 20,\r\n                globalScale,\r\n                style,\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BACKGROUND section */\r\n\r\n        drawNameBackground: async () => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityName / 100;\r\n            await drawAsset(ctx, `background/background-name-${frame}.png`, 0, 0);\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n        /** Background is based on bottom frame. This function draws both background for pendulum part and normal effect part. */\r\n        drawEffectBackground: async (withPendulum = false) => {\r\n            if (!ctx) return;\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.globalAlpha = opacityText / 100;\r\n\r\n            if (withPendulum) {\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                    0, 0 + effectBoxOffsetY,\r\n                    backgroundEffectBoxWidth, backgroundEffectBoxHeight,\r\n                );\r\n            } else {\r\n                await drawAsset(\r\n                    ctx,\r\n                    `background/background-text-${bottomFrame}.png`,\r\n                    backgroundEffectBoxX, backgroundEffectBoxY,\r\n                );\r\n            }\r\n            if (withPendulum) {\r\n                ctx.globalAlpha = opacityPendulum / 100;\r\n                const {\r\n                    exceptionFrameType = frameType,\r\n                    exceptionPendulumBoxOffsetHeight = 0,\r\n                } = PendulumSizeMapException[pendulumSize][bottomFrame] ?? {};\r\n                await drawAssetWithSize(\r\n                    ctx,\r\n                    `background/background-${exceptionFrameType}-${bottomFrame}.png`,\r\n                    pendulumBoxX, pendulumBoxY + pendulumBoxOffsetY,\r\n                    pendulumBoxWidth, pendulumBoxHeight,\r\n                    0, pendulumBoxOffsetY + exceptionPendulumBoxOffsetHeight,\r\n                    pendulumBoxWidth, pendulumBoxHeight + exceptionPendulumBoxOffsetHeight,\r\n                );\r\n            }\r\n            ctx.globalAlpha = 1;\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary BORDER section */\r\n\r\n        drawFrameBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/frame-border-${frameBorderType}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n            return;\r\n        },\r\n        drawNameBorder: async () => {\r\n            if (nameBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                for (let index = 0; index < nameBorderTypeList.length; index++) {\r\n                    await drawAsset(ctx, `frame/name-border-${nameBorderTypeList[index]}.png`, 0, 0);\r\n                }\r\n                ctx.resetTransform();\r\n            } else {\r\n                Promise.resolve();\r\n            }\r\n            return;\r\n        },\r\n        drawArtBorder: async () => {\r\n            if (artBorder && ctx) {\r\n                let artFrameSource = '';\r\n                if (isXyz || isSpeedSkill) {\r\n                    artFrameSource = `frame/art-border-${frame}.png`;\r\n                } else if (isLink || ['zarc', 'hamon', 'uria', 'raviel'].includes(frame)) {\r\n                    artFrameSource = 'frame/art-border-special.png';\r\n                } else {\r\n                    artFrameSource = 'frame/art-border.png';\r\n                }\r\n                ctx.scale(globalScale, globalScale);\r\n                await drawAsset(ctx, artFrameSource, artBoxX, artBoxY);\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumBorder: async (artBorder: boolean, foilType: Foil) => {\r\n            if (!ctx) return;\r\n            /** We create a new canvas for easier manipulation. */\r\n            const pendulumBorderCanvas = document.createElement('canvas');\r\n            pendulumBorderCanvas.width = cardWidth;\r\n            pendulumBorderCanvas.height = cardHeight;\r\n            const pendulumBorderContext = pendulumBorderCanvas.getContext('2d');\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                0, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            await drawAssetWithSize(\r\n                pendulumBorderContext,\r\n                `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                    + `-${foilType}`\r\n                    + '-artless'\r\n                    + (pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : '')\r\n                    + '.png',\r\n                30 + pendulumFrameWidth / 2, topToPendulumStructureFrame,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n                pendulumFrameWidth / 2, 0,\r\n                pendulumFrameWidth / 2, pendulumFrameHeight,\r\n            );\r\n            if (artBorder) {\r\n                /**\r\n                 * In artless border, the top of the pendulum effect box has shadow. But there is no shadow in normal border, so if art border is present, we cut the top of the artless border to remove the shadow, before seemlessly join it with the art border part.\r\n                 */\r\n                pendulumBorderContext.clearRect(0, 0, cardWidth, artlessFrameY + topToPendulumStructureFrame);\r\n                await drawAsset(\r\n                    pendulumBorderContext,\r\n                    `frame-pendulum/border-pendulum-${pendulumSize}`\r\n                        + `-${foilType}`\r\n                        + '.png',\r\n                    30, topToPendulumStructureFrame,\r\n                );\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            ctx.drawImage(pendulumBorderCanvas, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n        /** Usually we can draw foil on top of effect border, but speed skill's effect border is thicker so foil cannot cover it properly, in this case we will not draw the effect border knowing foil will be applied.\r\n         * \r\n         * In fact the effect border of speed skill is kinda buggy and not align really well, but we can't really do anything about it. Speed skill is also just a non-standard frame. */\r\n        drawEffectBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (!hasFoil && bottomFrame === 'speed-skill') {\r\n                await drawAsset(ctx, 'frame/effect-border-speed-skill.png', effectBoxX, effectBoxY);\r\n            } else {\r\n                await drawAsset(ctx, 'frame/effect-border.png', effectBoxX, effectBoxY);\r\n            }\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorder: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/card-border${hasFoil ? `-${foil}` : ''}.png`, 0, 0);\r\n            ctx.resetTransform();\r\n        },\r\n\r\n        /** @summary FOIL section */\r\n\r\n        drawArtBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await drawAsset(ctx, `frame/art-border-${foil}.png`, artBoxX, artBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawEffectBorderFoil: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await drawAsset(ctx, `frame/effect-border-${foil}.png`, effectBoxX, effectBoxY);\r\n            ctx.resetTransform();\r\n        },\r\n        drawLinkMapFoil: async (withBorder = artBorder, positionType: keyof typeof ArrowPositionMap) => {\r\n            return baseDrawLinkMapFoil(ctx, globalScale, foil, withBorder, positionType);\r\n        },\r\n\r\n        /** @summary FINISH section */\r\n\r\n        drawNameFinish: async () => {\r\n            if ((artBorder || nameBorder) && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'name',\r\n                    async type => {\r\n                        return drawAsset(ctx, `finish/finish-${type}-name.png`, 0, 0);\r\n                    },\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawAttributeFinish: async () => {\r\n            if (attribute !== NO_ATTRIBUTE && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(ctx, 'attribute', async type => drawAsset(ctx, `finish/finish-${type}-attribute.png`, 678, 55));\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawArtFinish: async () => {\r\n            if (applyArtFinish && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopArtFinish(\r\n                    ctx,\r\n                    'art',\r\n                    async (finishType, pendulumSuffix) => {\r\n                        return await drawAssetWithSize(\r\n                            ctx,\r\n                            `finish/art-finish-${finishType}${isPendulum ? pendulumSuffix : ''}.png`,\r\n                            artFinishX, artFinishY,\r\n                            artWidth, artWidth / artRatio,\r\n                        );\r\n                    },\r\n                    pendulumSize,\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        /**\r\n         * * ArtFinish: Controlled by `artFinish` attribute.\r\n         * * ArtOverlayFinish: Controlled by `finish` attribute, and therfore support multiple layers.\r\n         * \r\n         * * OverlayFinish type `art`: Apply only when art border is present, for example a dark finish will darken all the card EXCEPT the artwork. But when art border is no longer present (for example full-art card), it will darken the whole card.\r\n         * * OverlayFinish type `unart`: Apply only when art border is not present.\r\n         */\r\n        drawArtOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'art-overlay',\r\n                async type => {\r\n                    return drawAsset(\r\n                        ctx,\r\n                        'finish/finish'\r\n                        + `-${type}`\r\n                        + `-${applyArtFinish ? 'art' : 'unart'}`\r\n                        + '-overlay'\r\n                        + (isPendulum ? `-pendulum-${pendulumSize}` : '')\r\n                        + '.png',\r\n                        artFinishX, artFinishY,\r\n                    );\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawArtBorderFinish: async () => {\r\n            if (artBorder && ctx) {\r\n                ctx.scale(globalScale, globalScale);\r\n                await loopFinish(\r\n                    ctx,\r\n                    'art-border',\r\n                    async finishType => drawAsset(ctx, `finish/finish-${finishType}-art-border.png`, 0, 0),\r\n                );\r\n                ctx.resetTransform();\r\n            }\r\n        },\r\n        drawPendulumArtBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            if (artBorder) await loopFinish(\r\n                ctx,\r\n                'art-border-pendulum',\r\n                finishType => drawAsset(\r\n                    ctx,\r\n                    `finish/finish-${finishType}-art-border-pendulum-${pendulumSize}.png`,\r\n                    0, 0,\r\n                ),\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawBorderPendulumFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'border-pendulum',\r\n                async finishType => {\r\n                    const finishLinkBase = `finish/finish-${finishType}-border-pendulum-${pendulumSize}`;\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.blue === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        0, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                    await drawAssetWithSize(\r\n                        ctx,\r\n                        `${finishLinkBase}${pendulumFrameTypeMap.red === 'scaleless' ? '-scaleless' : ''}.png`,\r\n                        0 + cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                        cardWidth / 2, 0,\r\n                        cardWidth / 2, cardHeight,\r\n                    );\r\n                }\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame${isPendulum ? `-pendulum-${pendulumSize}` : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        drawFrameBackgroundFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'frame-background',\r\n                async type => {\r\n                    return drawAsset(ctx, `finish/finish-${type}-frame-background${isPendulum ? '-pendulum' : ''}.png`, 0, 0);\r\n                },\r\n            );\r\n            ctx.resetTransform();\r\n        },\r\n        /** Unlike total overlay, this finish layer lies below card text (name, effect, etc...) */\r\n        drawOverlayFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'overlay', async overlayType => drawAsset(ctx, `finish/finish-${overlayType}-overlay.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n        drawCardBorderFinish: async () => {\r\n            if (!ctx) return;\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(ctx, 'card-border', async type => drawAsset(ctx, `finish/finish-${type}-card-border.png`, 0, 0));\r\n            ctx.resetTransform();\r\n        },\r\n    };\r\n\r\n    return resultAPI;\r\n};","import {\r\n    DefaultFontSizeData,\r\n    NormalizeTextRegex,\r\n    NameFontDataMap,\r\n    NameStyle,\r\n    PatternMap,\r\n    TCG_LETTER_JOINLIST,\r\n    getDefaultNameStyle,\r\n} from 'src/model';\r\nimport { parsePalette, createFontGetter, condense, scaleFontData, scaleFontSizeData, applyEmboss } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAsset, drawAssetWithSize } from '../image';\r\nimport { setTextStyle } from '../canvas-util';\r\n\r\nconst getNameGradient = (\r\n    ctx: CanvasRenderingContext2D,\r\n    angleAsDegree: number,\r\n    colorStopList: { offset: string, color: string }[],\r\n    edge: number,\r\n    contentWidth: number,\r\n    baseline: number,\r\n    maxAscent: number,\r\n    maxDescent: number,\r\n) => {\r\n    /** Use the knowledge diagram to understand more about the geometry for this, but basically we want to create a rectangle to put the gradient in, this rectangle can be rotated, but no matter what the rotation angle is, it must be large just enough to contains all the card name inside, no more no less.\r\n     * \r\n     * This is deceptively hard because each letters has their own \"hanging\" or \"protruding\" part, magnified by the fact that the gradient is rotable. */\r\n    const baseKAF = angleAsDegree % 360;\r\n    const quarterSlot = `${Math.floor(baseKAF / 90)}`;\r\n    const KAF = baseKAF % 90;\r\n    const originWidth = contentWidth;\r\n    const originHeight = maxAscent + maxDescent;\r\n    // Testing only\r\n    // const originWidth = 16;\r\n    // const originHeight = 8;\r\n    // const edge = 0, baseline = 4, maxDescent = 4, maxAscent = 4;\r\n    const cx = edge + originWidth / 2;\r\n    const cy = baseline + (maxDescent - maxAscent) / 2;\r\n\r\n    let width = originWidth, height = originHeight;\r\n    if (quarterSlot === '1' || quarterSlot === '3') { width = originHeight; height = originWidth }\r\n\r\n    /**\r\n     * The coordinate system is put in the middle of the card name, with its origin lies exactly at the center, thanks to the information about its bounding from parameters.\r\n     * \r\n     * We avoid want to obtuse angle, so we only calculate one quarter, then mirror it vertically and horizontally to fill all fours.\r\n     */\r\n    const AD = Math.sqrt(width ** 2 / 4 + height ** 2 / 4);\r\n    if (AD > 0) {\r\n        const KAD = Math.asin((width / 2) / AD) * 180 / Math.PI;\r\n        const DAF = KAD - KAF;\r\n        const FDA = 90 - DAF;\r\n        const AF = Math.sin(FDA / 180 * Math.PI) * AD;\r\n        const AL = Math.sin(KAF / 180 * Math.PI) * AF;\r\n        const FL = Math.cos(KAF / 180 * Math.PI) * AF;\r\n        let offsetX = AL;\r\n        let offsetY = FL;\r\n        if (quarterSlot === '1') { offsetX = FL; offsetY = -AL }\r\n        if (quarterSlot === '2') { offsetX = -AL; offsetY = -FL }\r\n        if (quarterSlot === '3') { offsetX = -FL; offsetY = AL }\r\n\r\n        const topX = cx + offsetX;\r\n        const topY = cy - offsetY;\r\n        const botX = cx - offsetX;\r\n        const botY = cy + offsetY;\r\n        // console.info('metric', {\r\n        //     quarterSlot, baseKAF,\r\n        //     '\\n', width, height, cx, cy,\r\n        //     '\\n', KAF, KAD, DAF, FDA,\r\n        //     '\\n', AD, AF, AL, FL,\r\n        //     '\\n', maxAscent, maxDescent, baseline,\r\n        //     '\\n', topX, topY, botX, botY,\r\n        // });\r\n        const gradient = ctx.createLinearGradient(topX, topY, botX, botY);\r\n        colorStopList.forEach(({ color, offset }) => gradient.addColorStop(parseFloat(offset), color));\r\n\r\n        return gradient;\r\n    }\r\n    return undefined;\r\n};\r\n\r\n/**\r\n * Draw card name, while the foot text is affected by every custom method, head text ONLY affected by its own color.\r\n */\r\nexport const drawName = async (\r\n    canvas: HTMLCanvasElement,\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _trueBaseline: number,\r\n    _width: number,\r\n    style: Partial<NameStyle>,\r\n    option: {\r\n        frame: string,\r\n        cloneNode: HTMLCanvasElement | null | undefined,\r\n        format: string,\r\n        isSpeedSkill?: boolean,\r\n        furiganaHelper: boolean,\r\n        globalScale: number,\r\n    },\r\n) => {\r\n    const { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale } = option;\r\n    const edge = _edge * globalScale;\r\n    const trueBaseline = _trueBaseline * globalScale;\r\n    const width = _width * globalScale;\r\n    const cloneCtx = cloneNode?.getContext('2d');\r\n\r\n    if (!(ctx && cloneCtx && value)) return;\r\n    const {\r\n        embossPitch,\r\n        embossYaw,\r\n        embossThickness,\r\n        fillStyle,\r\n        font,\r\n        gradientAngle,\r\n        gradientColor,\r\n        hasEmboss,\r\n        hasGradient,\r\n        hasOutline,\r\n        hasShadow,\r\n        headTextFillStyle,\r\n        lineColor,\r\n        lineOffsetX,\r\n        lineOffsetY,\r\n        lineWidth,\r\n        shadowBlur,\r\n        shadowColor,\r\n        shadowOffsetX,\r\n        shadowOffsetY,\r\n        pattern,\r\n    } = { ...getDefaultNameStyle(), ...style };\r\n    const { patternImage, blendMode: patternBlendMode } = PatternMap[pattern ?? ''] ?? {};\r\n\r\n    ctx.textAlign = 'left';\r\n    const fontData = scaleFontData({\r\n        ...(NameFontDataMap[font as keyof typeof NameFontDataMap] ?? NameFontDataMap.Default).fontData,\r\n        headTextFillStyle,\r\n    }, globalScale);\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    const quoteConvertedValue = normalizeCardText(\r\n        value,\r\n        format,\r\n        { multiline: false, furiganaHelper, dictionaryType: 'rubyFormName' },\r\n    );\r\n\r\n    /** Calculate the bounding box that contains all card name's graphic, and passing it to gradient calculator. Beware - gradient does not apply to head text. */\r\n    const crudeTokenList = format === 'ocg'\r\n        ? [quoteConvertedValue]\r\n        : quoteConvertedValue.split(new RegExp(`([^${TCG_LETTER_JOINLIST}])`, 'g'));\r\n    const fontGetterForWidthCalculating = createFontGetter({\r\n        defaultFamily: fontData.font,\r\n        defaultSize: fontData.fontList[0].fontSize,\r\n        defaultWeight: fontData.weight,\r\n    });\r\n    const normalStyle = fontGetterForWidthCalculating.getFont();\r\n    const symbolStyle = fontGetterForWidthCalculating\r\n        .setSize(cur => cur * fontData.symbolFontRatio)\r\n        .setStyle('small-caps')\r\n        .setFamily(fontData.symbolFont)\r\n        .getFont();\r\n    let maxAscent = 0;\r\n    let maxDescent = 0;\r\n    crudeTokenList.forEach((cur, index) => {\r\n        ctx.font = index % 2 === 0 ? normalStyle : symbolStyle;\r\n\r\n        const textMetric = ctx.measureText(cur.replaceAll(NormalizeTextRegex, ''));\r\n        maxAscent = Math.max(maxAscent, textMetric.actualBoundingBoxAscent);\r\n        maxDescent = Math.max(maxDescent, textMetric.actualBoundingBoxDescent);\r\n    }, 0);\r\n\r\n    ctx.font = normalStyle;\r\n    /** Calculate fitting ratio like normal */\r\n    let actualLineWidth = 0;\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [quoteConvertedValue],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n\r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n\r\n    ctx.scale(xRatio, yRatio);\r\n    /** Calculate gradient and offset based on card's frame. */\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const offsetY = fontData.fontList[0].offsetY ?? scaledDefaultFontSizeData.offsetY;\r\n    const tokenList = tokenizeText(quoteConvertedValue);\r\n    const gradient = actualLineWidth > 0 && hasGradient\r\n        ? getNameGradient(\r\n            ctx,\r\n            gradientAngle,\r\n            parsePalette(gradientColor),\r\n            edge,\r\n            actualLineWidth,\r\n            trueBaseline,\r\n            maxAscent, maxDescent,\r\n        )\r\n        : undefined;\r\n\r\n    /**\r\n     * First iteration: Draw the name with color and gradient. We explicitly draw on base canvas here to avoid data loss from putImageData / drawImage method.\r\n     * \r\n     * If we use emboss, additional thickness will be added to the text to increase embossed area. We use stroke text so it can inherit color, gradient and pattern style.\r\n     */\r\n    let thickenEmboss = hasEmboss && typeof embossThickness === 'number' && embossThickness > 0;\r\n    let resetEmbossStroke = () => {};\r\n    if (thickenEmboss) {\r\n        resetEmbossStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: embossThickness,\r\n            lineColor: fillStyle,\r\n            lineColorGradient: gradient,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n    }\r\n    ctx.fillStyle = gradient ?? fillStyle;\r\n    const { tokenEdge } = drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        option: { drawHeadText: false },\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n            if (thickenEmboss) ctx.strokeText(letter, scaledEdge, scaledBaseline - (isSpeedSkill ? offsetY : 0));\r\n        },\r\n    });\r\n    resetEmbossStroke();\r\n\r\n    /** \r\n     * Second iteration: Draw pattern, we follow these steps.\r\n     *  * We create a second, temporary canvas node.\r\n     *  * We fill the node with pattern. The pattern is not skewed, but maybe scaled to fit exactly the bounding box of the card name (we reuse the same information when calculate gradient).\r\n     *  * We place the temporary node above the card name's canvas, using suitable blend mode, this way we essentially \"coating\" the pattern on top of the text, without damaging its surrounding.\r\n     */\r\n    if (patternImage) {\r\n        const patternCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const patternContext = patternCanvas.getContext('2d');\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n        /** Some patterns are partially transparent, so we need to draw the current frame under it first. */\r\n        patternContext.scale(globalScale, globalScale);\r\n        await drawAsset(patternContext, `frame/frame-${frame}.png`, 0, 0);\r\n        await drawAsset(patternContext, `background/background-name-${frame}.png`, 0, 0);\r\n        patternContext.globalCompositeOperation = patternBlendMode;\r\n        patternContext.resetTransform();\r\n        await drawAssetWithSize(\r\n            patternContext, `finish-name/${patternImage}.png`,\r\n            edge, trueBaseline - maxAscent,\r\n            width,\r\n            maxAscent + maxDescent,\r\n        );\r\n        ctx.globalCompositeOperation = 'source-in';\r\n        ctx.drawImage(patternCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        ctx.scale(xRatio, yRatio);\r\n    }\r\n\r\n    /** Third iteration: Apply emboss effect */\r\n    if (hasEmboss) {\r\n        const affectedWidthExtraPadding = 10;\r\n        const embossedImageData = applyEmboss({\r\n            inputCanvas: canvas,\r\n            lightPitch: embossPitch,\r\n            lightYaw: embossYaw,\r\n            minIntensity: -0.9,\r\n            maxIntensity: 0.9,\r\n            affectedWidth: Math.ceil(tokenEdge + affectedWidthExtraPadding),\r\n        });\r\n        ctx.putImageData(embossedImageData, 0, 0);\r\n    }\r\n\r\n    /**\r\n     * Fourth iteration: Apply \"outline\" to card name. We use stroke method to simulate outline behavior.\r\n     * \r\n     * We stroke the text behind the canvas to avoid polluting current effects. Because we already drawn a layer of outline if emboss thickness is applied, we will also increase outline thickness to compensate.\r\n     * */\r\n    if (hasOutline) {\r\n        const resetStroke = setTextStyle({\r\n            ctx,\r\n            lineWidth: lineWidth + embossThickness,\r\n            lineColor,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        drawLine({\r\n            ctx,\r\n            tokenList,\r\n            xRatio, yRatio,\r\n            trueEdge: edge, trueBaseline,\r\n            textData,\r\n            format,\r\n            globalScale,\r\n            option: { drawHeadText: false },\r\n            textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n                ctx.lineJoin = 'round';\r\n                ctx.strokeText(\r\n                    letter,\r\n                    scaledEdge + lineOffsetX,\r\n                    scaledBaseline + lineOffsetY - (isSpeedSkill ? offsetY : 0),\r\n                );\r\n            },\r\n        });\r\n        ctx.lineJoin = 'miter';\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetStroke();\r\n    }\r\n\r\n    /**\r\n     * Fifth iteration: We apply shadow here. As shadow is drawn around the text, not in it, we can use destination-over composition to apply it below the canvas text, accommodate for both outline and emboss thickness.\r\n     */\r\n    if (hasShadow) {\r\n        const shadowCanvas = canvas.cloneNode() as HTMLCanvasElement;\r\n        const shadowContext = shadowCanvas.getContext('2d');\r\n        const resetShadow = setTextStyle({\r\n            ctx: shadowContext,\r\n            x: shadowOffsetX,\r\n            y: shadowOffsetY,\r\n            shadowColor: shadowColor,\r\n            blur: shadowBlur,\r\n            globalScale,\r\n            useDefault: false,\r\n        });\r\n        ctx.scale(1 / xRatio, 1 / yRatio);\r\n        shadowContext.drawImage(canvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'destination-over';\r\n        ctx.drawImage(shadowCanvas, 0, 0);\r\n        ctx.globalCompositeOperation = 'source-over';\r\n        resetShadow();\r\n    }\r\n\r\n    /** Sixth iteration: Draw furigana, which is not affected by all other text style except furigana color. Again we draw it on base canvas for the same data loss reason. */\r\n    drawLine({\r\n        ctx,\r\n        tokenList,\r\n        xRatio, yRatio,\r\n        trueEdge: edge, trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: () => {},\r\n    });\r\n\r\n    const defaultTextStyle = getDefaultNameStyle();\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.fillStyle = defaultTextStyle.fillStyle;\r\n    ctx.lineJoin = 'miter';\r\n    ctx.globalCompositeOperation = 'source-over';\r\n};","import { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { condense, createFontGetter , checkLightFrame, checkSpeedSkill, scaleCoordinateData, scaleFontData } from 'src/util';\r\nimport { ST_ICON_SYMBOL, FontData, TypeAbilityCoordinateMap, getTypeAbilityFontData, NO_ICON, TypeAbilityCoordinateType } from 'src/model';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { drawAssetWithSize } from '../image';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\n/** Small and medium size are used for type / ability text in effect box. Large type is used for \"Spell/Trap type\" under card's name. */\r\nconst sizeMap: Record<TypeAbilityCoordinateType, number> = {\r\n    smaller: 0,\r\n    normal: 1,\r\n    large: 2,\r\n    highPendulumNormal: 1,\r\n    highPendulumSmaller: 0,\r\n};\r\nexport const drawTypeAbilityText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    metricMethod,\r\n    size,\r\n    furiganaHelper,\r\n    globalScale,\r\n}: {\r\n    ctx: CanvasRenderingContext2D,\r\n    value: string,\r\n    format: string,\r\n    metricMethod?: FontData['metricMethod'],\r\n    size: TypeAbilityCoordinateType,\r\n    furiganaHelper: boolean,\r\n    globalScale: number,\r\n}) => {\r\n    const {\r\n        edgeAlignment = 'left',\r\n        trueEdge,\r\n        trueBaseline,\r\n        trueWidth: width,\r\n    } = scaleCoordinateData(\r\n        TypeAbilityCoordinateMap[format]?.[size] ?? TypeAbilityCoordinateMap['tcg']['medium'],\r\n        globalScale,\r\n    );\r\n    const scaledBaseFontData = scaleFontData(getTypeAbilityFontData()[format], globalScale);\r\n    const fontData = {\r\n        ...scaledBaseFontData,\r\n        metricMethod: metricMethod ?? scaledBaseFontData.metricMethod,\r\n    };\r\n    const { font } = fontData;\r\n    const fontLevel = sizeMap[size];\r\n    const fontSizeData = fontData.fontList[fontLevel];\r\n    const fontGetter = createFontGetter({\r\n        defaultFamily: font,\r\n        defaultSize: `${fontSizeData.fontSize}px`,\r\n    });\r\n    const textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: fontGetter,\r\n    };\r\n    let actualLineWidth = 0;\r\n\r\n    ctx.font = fontGetter.getFont();\r\n    ctx.textAlign = 'left';\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper });\r\n    const internalEffectiveMedian = condense(\r\n        median => {\r\n            const { currentLineCount, currentLineList } = createLineList({\r\n                ctx,\r\n                median,\r\n                paragraphList: [normalizedText],\r\n                format, textData,\r\n                width,\r\n                globalScale,\r\n            });\r\n    \r\n            if (currentLineCount > 1) return false;\r\n            actualLineWidth = currentLineList[0].actualLineWidth;\r\n            return true;\r\n        },\r\n    );\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: edgeAlignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n    return {\r\n        ...result,\r\n        xRatio,\r\n    };\r\n};\r\n\r\nexport const drawTypeAbility = async ({\r\n    ctx,\r\n    globalScale,\r\n    typeAbility,\r\n    subFamily,\r\n    format,\r\n    frame,\r\n    size,\r\n    isMonster,\r\n    textStyle,\r\n    furiganaHelper,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    typeAbility: string,\r\n    subFamily: string,\r\n    format: string,\r\n    frame: string,\r\n    size: TypeAbilityCoordinateType,\r\n    isMonster: boolean,\r\n    textStyle: CanvasTextStyle,\r\n    furiganaHelper: boolean,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const willDrawTypeAbility = typeAbility.length > 0;\r\n    const willDrawIcon = subFamily !== NO_ICON && size === 'large';\r\n    const typeAbilityWithIcon = typeAbility\r\n        + (willDrawIcon ? ST_ICON_SYMBOL : '');\r\n    const normalizedTypeAbilityText = willDrawTypeAbility\r\n        ? format === 'tcg'\r\n            ? size === 'large'\r\n                ? `[  ${typeAbilityWithIcon}  ]`\r\n                : `[${typeAbilityWithIcon}]`\r\n            : `【${typeAbilityWithIcon}】`\r\n        : '';\r\n    if (!willDrawTypeAbility) return;\r\n\r\n    /** Special treatment for speed skill */\r\n    const defaultFillStyle = checkLightFrame(frame) && !checkSpeedSkill({ frame }) && size === 'large'\r\n        ? '#ffffff'\r\n        : '#000000';\r\n    const normalizedStyle = { color: defaultFillStyle, ...textStyle };\r\n    const resetStyle = setTextStyle({ ctx, ...normalizedStyle, globalScale });\r\n    const { iconPositionList, xRatio } = drawTypeAbilityText({\r\n        ctx,\r\n        format,\r\n        size,\r\n        value: normalizedTypeAbilityText,\r\n        metricMethod: !isMonster ? 'compact' : undefined,\r\n        furiganaHelper,\r\n        globalScale,\r\n    });\r\n    resetStyle();\r\n\r\n    let offsetY = format === 'ocg' ? -4 : 0;\r\n    let offsetX = format === 'ocg' ? -3 : 0;\r\n\r\n    if (willDrawIcon) {\r\n        const { edge, baseline } = iconPositionList[0];\r\n        await drawAssetWithSize(\r\n            ctx,\r\n            `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n            image => edge + (image.naturalWidth * 0.175 * xRatio + offsetX) * globalScale,\r\n            image => baseline - image.naturalWidth * 0.8 * globalScale + offsetY * globalScale,\r\n            image => globalScale * image.naturalWidth,\r\n            image => globalScale * image.naturalWidth,\r\n        );\r\n    } else {\r\n        /** Currently, draw icon in place of monster type is undesirable, as the icon seems out of place and user may not know how to turn them off properly if they want to. */\r\n        // await Promise.all(iconPositionList.map(({ edge, baseline, size }) => {\r\n        //     const iconSize = size * 0.9;\r\n\r\n        //     return drawAssetWithSize(\r\n        //         ctx,\r\n        //         `subfamily/subfamily-${subFamily.toLowerCase()}.png`,\r\n        //         () => edge + size * 0.125,\r\n        //         baseline - size * 0.850,\r\n        //         () => iconSize,\r\n        //         () => iconSize,\r\n        //     );\r\n        // }));\r\n    }\r\n};","import { CanvasTextStyle } from 'src/service';\r\nimport { fillTextLeftWithSpacing, fillTextRightWithSpacing, setTextStyle } from '../canvas-util';\r\n\r\nexport const drawScale = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    _fontSize: number,\r\n    globalScale: number,\r\n) => {\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    if (ctx && value) {\r\n        const fontSize = _fontSize * globalScale;\r\n        ctx.font = `${fontSize}px MatrixBoldSmallCaps`;\r\n        ctx.textAlign = 'left';\r\n\r\n        const exceptionDigitWidthRatio = 0.8;\r\n        const digitList = `${value}`.split('');\r\n        let totalWidth = 0;\r\n\r\n        digitList.forEach(digit => {\r\n            totalWidth += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n        let accLeft = edge - totalWidth / 2;\r\n\r\n        digitList.forEach(digit => {\r\n            ctx.fillText(\r\n                digit,\r\n                digit === '1' ? accLeft + 1 * globalScale : accLeft,\r\n                baseline + fontSize,\r\n            );\r\n            accLeft += ctx.measureText(digit).width * (digit === '1' ? exceptionDigitWidthRatio : 1);\r\n        });\r\n    }\r\n};\r\n\r\nexport const draw1stEdition = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    _edge = 99,\r\n    _baseline = 1150.93,\r\n    _baselineOffset = 0,\r\n    option: {\r\n        stroke?: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n        globalScale: number,\r\n    } = {\r\n        globalScale: 1,\r\n        stroke: false,\r\n    },\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { stroke = false, textStyle, globalScale } = option ?? {};\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const baselineOffset = _baselineOffset * globalScale;\r\n    const resetStyle = setTextStyle({\r\n        ctx,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n    const superTextOffset = 7.4 * globalScale;\r\n    ctx.font = `bold ${23.7 * globalScale}px palatino-linotype-bold`;\r\n\r\n    let left = edge;\r\n    ctx.fillText('1', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText('1', left, baseline);\r\n    left += ctx.measureText('1').width - 2 * globalScale;\r\n\r\n    ctx.font = `bold ${17.78 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText('st', left, baseline - superTextOffset + baselineOffset);\r\n    if (stroke) ctx.strokeText('st', left, baseline - superTextOffset);\r\n    left += ctx.measureText('st').width;\r\n\r\n    ctx.font = `bold ${22.22 * globalScale}px palatino-linotype-bold`;\r\n    ctx.fillText(' Edition', left, baseline + baselineOffset);\r\n    if (stroke) ctx.strokeText(' Edition', left, baseline);\r\n    resetStyle();\r\n};\r\n\r\nexport const drawStatText = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    ctx.scale(1, 0.98);\r\n    ctx.font = `bold ${35.73 * globalScale}px Matrix-Bold`;\r\n    const cursorEndOfATK = fillTextLeftWithSpacing(ctx, value, 0.075, edge, baseline / 0.98);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    ctx.scale(1, 1.01);\r\n    ctx.font = `bold ${34.74 * globalScale}px Matrix-Bold`;\r\n    fillTextLeftWithSpacing(ctx, '/', 0.15, cursorEndOfATK + 5 * globalScale, baseline / 1.01);\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n};\r\n\r\n/** Stats have two special case: \"?\" stat (\"Slifer the Sky Dragon\" TCG) and \"∞\" stat (\"Divine Serpent Geh\" Anime) */\r\nexport const drawStat = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string | number,\r\n    _edge: number,\r\n    _baseline: number,\r\n    globalScale: number,\r\n) => {\r\n    if (!ctx || value == null) return;\r\n\r\n    const edge = _edge * globalScale;\r\n    const baseline = _baseline * globalScale;\r\n    const statWidth = 73.97 * globalScale;\r\n    if (value === '∞') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${37 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else\r\n    if (value === '?') {\r\n        ctx.textAlign = 'right';\r\n        ctx.font = `bold ${34 * globalScale}px matrix`;\r\n        ctx.fillText(value, edge + statWidth, baseline);\r\n    } else {\r\n        ctx.textAlign = 'left';\r\n        const tokenizedText = `${value}`.split('?');\r\n\r\n        let totalWidth = tokenizedText.reduce((prev, curr, index) => {\r\n            ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n            let nextWidth = prev + ctx.measureText(curr).width;\r\n\r\n            if (index < tokenizedText.length - 1) {\r\n                ctx.font = `${37 * globalScale}px matrix`;\r\n                nextWidth += ctx.measureText('?').width;\r\n            }\r\n\r\n            return nextWidth;\r\n        }, 0);\r\n\r\n        if (totalWidth > 0) {\r\n            const condenseRatio = Math.min(statWidth / totalWidth, 1);\r\n\r\n            ctx.scale(condenseRatio, 1);\r\n            tokenizedText.reduce((prev, _, index, arr) => {\r\n                const curText = arr[arr.length - 1 - index];\r\n                let nextEdge = prev;\r\n                ctx.font = `${37 * globalScale}px MatrixBoldSmallCaps`;\r\n                nextEdge -= ctx.measureText(curText).width * condenseRatio;\r\n                ctx.fillText(curText, nextEdge / condenseRatio, baseline);\r\n\r\n                if (index < tokenizedText.length - 1) {\r\n                    ctx.font = `bold ${37 * globalScale}px matrix`;\r\n                    nextEdge -= ctx.measureText('?').width * condenseRatio;\r\n                    ctx.fillText('?', nextEdge / condenseRatio, baseline);\r\n                }\r\n\r\n                return nextEdge;\r\n            }, edge + statWidth);\r\n            ctx.scale(1 / condenseRatio, 1);\r\n        }\r\n    }\r\n};\r\n\r\nexport const drawSetId = (\r\n    ctx: CanvasRenderingContext2D | null | undefined,\r\n    value: string,\r\n    option: {\r\n        globalScale: number,\r\n        isPendulum: boolean,\r\n        isLink: boolean,\r\n        withShadow: boolean,\r\n        format: string,\r\n        lightFooter: boolean,\r\n        textStyle?: CanvasTextStyle,\r\n    }\r\n) => {\r\n    if (!ctx) return;\r\n\r\n    const { globalScale, isPendulum, isLink, withShadow, format, lightFooter, textStyle } = option;\r\n    let spacing = 0.125;\r\n    let offsetY = 0;\r\n    let xOffset = 0;\r\n    ctx.font = `${withShadow ? 'bold' : ''} ${22 * globalScale}px stone-serif-regular`;\r\n    if (format === 'ocg') {\r\n        spacing = 0.145;\r\n        offsetY = -1;\r\n        xOffset = -3;\r\n    }\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: (lightFooter && !isPendulum) ? '#ffffff' : '#000000',\r\n        shadowColor: withShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: withShadow && !isPendulum ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    if (isPendulum) {\r\n        fillTextLeftWithSpacing(ctx, value, spacing, (66.65 + xOffset) * globalScale, (1105.01 + offsetY) * globalScale);\r\n    } else if (isLink) {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (666.56 + xOffset) * globalScale, (872.94 + offsetY) * globalScale);\r\n    } else {\r\n        fillTextRightWithSpacing(ctx, value, spacing, (728.78 + xOffset) * globalScale, (871.50 + offsetY) * globalScale);\r\n    }\r\n    resetTextStyle();\r\n};","import { useCallback, useEffect, useMemo, useRef } from 'react';\r\nimport {\r\n    clearCanvas,\r\n    draw1stEdition,\r\n    drawCreatorText,\r\n    drawEffect,\r\n    drawName,\r\n    drawScale,\r\n    drawStat,\r\n    drawStatText,\r\n    drawSetId,\r\n    drawSticker,\r\n    getFinishIterator,\r\n    drawTypeAbility,\r\n    getEffectFontAndCoordinate,\r\n    drawAsset,\r\n    getLayoutDrawFunction,\r\n    drawLinkRatingText,\r\n    drawPredefinedMark,\r\n    setTextStyle,\r\n    drawPasswordText,\r\n    drawLimitedEditionMark,\r\n    baseDrawLinkArrowMap,\r\n    baseDrawLinkMapFoil,\r\n} from 'src/draw';\r\nimport {\r\n    CanvasConst,\r\n    MasterSeriesCanvas,\r\n    NO_ATTRIBUTE,\r\n    getArtCanvasCoordinate,\r\n    getDefaultCardOpacity,\r\n    PendulumEffectFontData,\r\n    PendulumEffectCoordinateMap,\r\n    FinishMap,\r\n    ArtFinishMap,\r\n    CardOpacity,\r\n    CardArtCanvasCoordinateMap,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    DEFAULT_EFFECT_NORMAL_SIZE,\r\n    DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n    PendulumNormalFontData,\r\n    PendulumSizeMap,\r\n    PendulumSize,\r\n    HALF_SCALE_WIDTH_OFFSET,\r\n    ArtFinishType,\r\n} from 'src/model';\r\nimport {\r\n    checkLightHeader,\r\n    checkLink,\r\n    checkMonster,\r\n    checkNormal,\r\n    checkSpeedSkill,\r\n    checkXyz,\r\n    createCanvas,\r\n    generateLayer,\r\n    resolveNameStyle,\r\n} from 'src/util';\r\nimport { useCard } from '../use-card';\r\nimport { prepareStyle } from './prepare-style';\r\nimport { LanguageDataDictionary } from '../use-i18n';\r\nimport { notification } from 'antd';\r\n\r\nconst {\r\n    height: CanvasHeight,\r\n    width: CanvasWidth,\r\n    finishTypeCardWidth,\r\n    finishTypeCardHeight,\r\n    stickerX,\r\n    stickerY,\r\n} = CanvasConst;\r\ntype DrawerProp = {\r\n    imageChangeCount: number,\r\n    isInitializing: boolean,\r\n    language: LanguageDataDictionary,\r\n    globalScale: number,\r\n};\r\ntype DrawingPipeline = {\r\n    name: string,\r\n    order: number,\r\n    rerun: number,\r\n    instructor: () => Promise<any>,\r\n};\r\n/**\r\n * To ensure correct layer order, each efffect that involve asynchronous image drawing will register an operation in `drawingPipeline` instead of immediately draw their part, these operations will be iterated sequentially by another effect when export.\r\n */\r\nexport const useMasterSeriDrawer = (active: boolean, canvasMap: MasterSeriesCanvas, props: DrawerProp) => {\r\n    const {\r\n        card,\r\n    } = useCard();\r\n    const {\r\n        exportCanvasRef,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        passwordCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        setIdCanvasRef,\r\n        statCanvasRef,\r\n        stickerCanvasRef,\r\n        cardIconCanvasRef,\r\n        typeCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    } = canvasMap;\r\n    const {\r\n        format,\r\n        hasBackground, backgroundType,\r\n        frame, foil, finish, artFinish, opacity,\r\n        name, nameStyle, nameStyleType,\r\n        effectTextStyle, pendulumTextStyle, typeTextStyle, statTextStyle, otherTextStyle,\r\n        effect,\r\n        effectStyle,\r\n        typeAbility,\r\n        isPendulum, pendulumFrame, pendulumEffect, pendulumScaleBlue, pendulumScaleRed, pendulumStyle, pendulumSize,\r\n        atk, def, linkMap,\r\n        attribute,\r\n        cardIcon, subFamily, star, starAlignment,\r\n        setId,\r\n        password, creator, sticker,\r\n        isLegacyCard,\r\n        isFirstEdition, isDuelTerminalCard, isSpeedCard, isLimitedEdition,\r\n        furiganaHelper,\r\n    } = card;\r\n\r\n    const drawingPipeline = useRef<Record<string, DrawingPipeline>>({\r\n        frame: {\r\n            name: 'frame',\r\n            order: 1,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        attribute: {\r\n            name: 'attribute',\r\n            order: 2,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        sticker: {\r\n            name: 'sticker',\r\n            order: 3,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        creator: {\r\n            name: 'creator',\r\n            order: 4,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        name: {\r\n            name: 'name',\r\n            order: 5,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        typeAbility: {\r\n            name: 'typeAbility',\r\n            order: 6,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n        overlay: {\r\n            name: 'overlay',\r\n            order: 7,\r\n            rerun: 0,\r\n            instructor: () => Promise.resolve(),\r\n        },\r\n    });\r\n\r\n    const bottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n\r\n    const condenseTolerant = effectStyle?.condenseTolerant;\r\n\r\n    const isNormal = checkNormal(card);\r\n    const isXyz = checkXyz(card);\r\n    const isLink = checkLink(card);\r\n    const isMonster = checkMonster(card);\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n\r\n    const { body = 100, boundless } = opacity;\r\n    const requireShadow = !!(body < 50 || boundless);\r\n    const lightFooter = ['xyz', 'dark-synchro', 'speed-skill', 'hamon', 'uria', 'raviel'].includes(bottomFrame);\r\n    const lightHeader = checkLightHeader(frame);\r\n    const {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n    } = useMemo(() => {\r\n        return prepareStyle({\r\n            lightFooter,\r\n            lightHeader,\r\n            requireShadow,\r\n            effectTextStyle,\r\n            pendulumTextStyle,\r\n            otherTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        });\r\n    }, [\r\n        lightFooter,\r\n        lightHeader,\r\n        requireShadow,\r\n        effectTextStyle,\r\n        pendulumTextStyle,\r\n        otherTextStyle,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    ]);\r\n\r\n    const normalizedSubFamily = subFamily.toUpperCase();\r\n    const normalizedTypeAbility = typeAbility.map(text => text.trim()).join(format === 'ocg' ? '／' : ' / ');\r\n    const statInEffect = !!(atk || def) || !!(isPendulum && setId);\r\n    const typeInEffect = normalizedTypeAbility.length > 0\r\n        ? cardIcon === 'auto'\r\n            ? (isMonster || isSpeedSkill)\r\n            : cardIcon !== 'st'\r\n        : false;\r\n    const withBlueScale = !((pendulumScaleBlue ?? '') === '');\r\n    const withRedScale = !((pendulumScaleRed ?? '') === '');\r\n    const useArtFinish = finish.includes(ArtFinishType);\r\n    const {\r\n        isInitializing,\r\n        imageChangeCount,\r\n        language,\r\n        globalScale,\r\n    } = props;\r\n    const readyToDraw = active && isInitializing === false;\r\n\r\n    const loopFinish = useMemo(() => getFinishIterator(finish, FinishMap), [finish]);\r\n    const loopArtFinish = useMemo(() => getFinishIterator([artFinish], ArtFinishMap), [artFinish]);\r\n\r\n    /** DRAW CARD STRUCTURE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.frame.rerun += 1;\r\n        drawingPipeline.current.frame.instructor = async () => {\r\n            const ctx = frameCanvasRef.current?.getContext('2d');\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            const backgroundCanvas = backgroundCanvasRef.current;\r\n\r\n            if (!clearCanvas(ctx) || !frameCanvasRef.current) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                artBorder: keepArtBorder,\r\n                body: opacityBody,\r\n                boundless,\r\n                baseFill,\r\n            } = normalizedOpacity;\r\n\r\n            /** Extremely weird bug in Chrome Mobile that make this frame draw twice and overlapping each other. The bug appear and disappear consistently with seemingly unrelated actions:\r\n             * * Choose a finish type with overlay finish fixex the problem, but draw the same overlay manually won't fix it.\r\n             * * Set default base fill to transparency fix the problem.\r\n             * \r\n             * Because the issue happens on mobile with limited debug capability, we can't quite figure out what is the root cause, but put the fillRect call inside a promise is the only consistent way to resolve this issue.\r\n             */\r\n            const fillBaseColor = (x: number, y: number, w: number, h: number, customFill?: string) => {\r\n                return new Promise(resolve => {\r\n                    setTimeout(() => {\r\n                        ctx.fillStyle = hasBackground\r\n                            ? (customFill ?? baseFill)\r\n                            : DEFAULT_BASE_FILL_COLOR;\r\n                        ctx.fillRect(x, y, w, h);\r\n                        resolve(true);\r\n                    }, 0);\r\n                });\r\n            };\r\n            const hasArtBorder = opacityBody > 0 ? true : keepArtBorder;\r\n\r\n            /** Base colored background so the card is not see-through even with transparent artwork */\r\n            await fillBaseColor(0, 0, globalScale * CanvasWidth, globalScale * CanvasHeight);\r\n\r\n            const {\r\n                drawAttribute,\r\n                drawBackground,\r\n                drawCardArt,\r\n                drawFrame,\r\n                drawLinkArrowMap,\r\n                drawPendulumScaleIcon,\r\n                drawStar,\r\n\r\n                drawNameBackground,\r\n                drawEffectBackground,\r\n\r\n                drawFrameBorder,\r\n                drawNameBorder,\r\n                drawArtBorder,\r\n                drawPendulumBorder,\r\n                drawBorderPendulumFinish,\r\n                drawEffectBorder,\r\n                drawCardBorder,\r\n                drawStatBorder,\r\n\r\n                drawAttributeFinish,\r\n                drawArtBorderFoil,\r\n                drawEffectBorderFoil,\r\n                drawLinkMapFoil,\r\n\r\n                drawNameFinish,\r\n                drawArtFinish,\r\n                drawArtOverlayFinish,\r\n                drawArtBorderFinish,\r\n                drawPendulumArtBorderFinish,\r\n                drawFrameFinish,\r\n                drawFrameBackgroundFinish,\r\n                drawOverlayFinish,\r\n                drawCardBorderFinish,\r\n\r\n                calculateCardArtRedrawCoordination,\r\n            } = getLayoutDrawFunction({\r\n                canvas: frameCanvasRef.current,\r\n                artworkCanvas, backgroundCanvas,\r\n                globalScale,\r\n                format,\r\n                frame, bottomFrame,\r\n                hasBackground,\r\n                backgroundType,\r\n                attribute,\r\n                cardIcon, star,\r\n                foil,\r\n                pendulumSize,\r\n                opacity: normalizedOpacity,\r\n                isLink, isSpeedSkill, isXyz,\r\n                isPendulum,\r\n                pendulumFrameTypeMap: {\r\n                    red: withRedScale ? 'normal' : 'scaleless',\r\n                    blue: withBlueScale ? 'normal' : 'scaleless',\r\n                },\r\n                useArtFinish,\r\n                loopFinish,\r\n                loopArtFinish,\r\n            });\r\n\r\n            /** Start with artwork at the bottom, then main frame, then outer card border. */\r\n            if (backgroundCanvas && ctx) drawBackground();\r\n            if (artworkCanvas && ctx && !boundless) drawCardArt();\r\n            await drawFrame();\r\n            await drawCardBorder();\r\n            await drawCardBorderFinish();\r\n\r\n            /** @summary Draw NON-PENDULUM card layout */\r\n            if (!isPendulum) {\r\n                if (!boundless) {\r\n                    await drawNameBackground();\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    /** Foil DOES NOT contains shadow, so it relies on the shadow of the border below. */\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawArtBorder();\r\n                await drawArtBorderFoil();\r\n                await drawArtBorderFinish();\r\n            }\r\n\r\n            /** @summary Draw PENDULUM-LIKE card layout. Does not apply to Link frame since it contains link arrows. */\r\n            if (isPendulum && !boundless) {\r\n                /** Since pendulum art boundary is wider, we cannot relies on the artwork under frame, instead we must draw the artwork again, this time with different size. */\r\n                if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                    const { width: artWidth, height: artHeight } = artworkCanvas;\r\n                    const {\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        offsetHeight,\r\n                        destinationX, destinationY,\r\n                        destinationWidth, destinationHeight,\r\n                        fillWidth, fillHeight,\r\n                    } = calculateCardArtRedrawCoordination(artworkCanvas);\r\n\r\n                    /** To avoid stacking transprency, we clear the area before redrawing */\r\n                    await fillBaseColor(\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * fillWidth, globalScale * fillHeight,\r\n                    );\r\n\r\n                    drawBackground('pendulum');\r\n                    ctx.drawImage(\r\n                        artworkCanvas,\r\n                        sourceOffsetX, sourceOffsetY,\r\n                        artWidth - sourceOffsetX * 2, artHeight - offsetHeight,\r\n                        globalScale * destinationX, globalScale * destinationY,\r\n                        globalScale * destinationWidth, globalScale * destinationHeight,\r\n                    );\r\n                }\r\n\r\n                await drawNameBackground();\r\n                await drawEffectBackground(true);\r\n            }\r\n\r\n            /** We must draw art finish first because pendulum's border have those little corners that spread into the artwork. */\r\n            await drawArtFinish();\r\n            await drawArtOverlayFinish();\r\n\r\n            /** Scale and pendulum border frame, these will be covered by extended artwork so we doesn't draw them if the artwork is boundless */\r\n            if (isPendulum && !boundless) {\r\n                await drawPendulumScaleIcon();\r\n                /** Draw normal border first so we got the shadow ready. Again foiled border DOES NOT have shadow by their own. */\r\n                await drawPendulumBorder(hasArtBorder, 'normal');\r\n                await drawPendulumBorder(hasArtBorder, foil);\r\n                await drawPendulumArtBorderFinish();\r\n                if (hasArtBorder) await drawBorderPendulumFinish();\r\n            }\r\n\r\n            if (!boundless) {\r\n                await drawFrameFinish();\r\n                await drawNameFinish();\r\n            }\r\n            if (hasArtBorder) await drawFrameBackgroundFinish();\r\n\r\n            /** Boundless art behavior here. If rigid frame is off, card image will extends beyond the current art border (on top of it). The extended card image is still below name, level, attribute, effect (both card and pendulum) and other predefined texts. */\r\n            if (boundless) {\r\n                if (isLink) {\r\n                    /** For link layout, the artwork is above the art border, but still below the link arrows */\r\n                    await drawArtBorderFinish();\r\n                } else if (isPendulum) {\r\n                    /** We want to fill the area inside pendulum border only, so that the outside frame remains intact. */\r\n                    const extraHeightRatio = CardArtCanvasCoordinateMap.fullCard.ratio\r\n                        / CardArtCanvasCoordinateMap.extendedPendulum.ratio;\r\n                    /** Fill area with base color before start draw overlay artwork. In this case we do not want to fill everywhere, we just need to fill exactly the area contains inside pendulum border frame. */\r\n                    if (artworkCanvas && ctx && artworkCanvas.height > 0) {\r\n                        const {\r\n                            destinationX, destinationY,\r\n                            destinationWidth, destinationHeight,\r\n                        } = calculateCardArtRedrawCoordination(\r\n                            artworkCanvas,\r\n                            { ...getDefaultCardOpacity(), ...opacity, body: 100, boundless: false },\r\n                            extraHeightRatio,\r\n                        );\r\n    \r\n                        await fillBaseColor(\r\n                            globalScale * destinationX, globalScale * destinationY,\r\n                            globalScale * destinationWidth, globalScale * destinationHeight,\r\n                        );\r\n                        drawBackground('pendulum');\r\n                    }\r\n                    if (hasArtBorder) {\r\n                        await drawPendulumBorder(hasArtBorder, 'normal');\r\n                        await drawPendulumBorder(hasArtBorder, foil);\r\n                    }\r\n                    await drawPendulumArtBorderFinish();\r\n                }\r\n                await drawNameBackground();\r\n                await drawNameFinish();\r\n                await drawNameBorder();\r\n                if (artworkCanvas && ctx) drawCardArt();\r\n                await drawArtOverlayFinish();\r\n\r\n                /** Redraw various part here because the extended artwork may overlap with those */\r\n                if (isPendulum) {\r\n                    await drawEffectBackground(true);\r\n                    await drawPendulumScaleIcon();\r\n                    await drawPendulumBorder(false, 'normal');\r\n                    await drawPendulumBorder(false, foil);\r\n                    await drawBorderPendulumFinish();\r\n                } else {\r\n                    await drawEffectBackground();\r\n                    await drawEffectBorder();\r\n                    await drawEffectBorderFoil();\r\n                }\r\n                await drawFrameFinish();\r\n            }\r\n\r\n            if (statInEffect) await drawStatBorder({\r\n                color: '#000000',\r\n                ...resolvedStatTextStyle,\r\n            });\r\n\r\n            await drawAttribute();\r\n            await drawAttributeFinish();\r\n            await drawStar({ style: levelStyle, starAlignment });\r\n            if (!boundless) await drawNameBorder();\r\n            await drawFrameBorder();\r\n            /** If we combine both link map and pendulum frame, link markers will be pushed outward and overlay on top of the card frame */\r\n            if (isLink && !isPendulum) {\r\n                await drawLinkArrowMap(linkMap, isPendulum ? 'pendulum' : 'normal');\r\n                await drawLinkMapFoil(false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n            await drawPredefinedMark({\r\n                canvas: frameCanvasRef.current,\r\n                globalScale,\r\n                type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                isDuelTerminalCard, isSpeedCard,\r\n                isLink, isPendulum,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            });\r\n            await drawOverlayFinish();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        frameCanvasRef,\r\n        frame,\r\n        format,\r\n        hasBackground,\r\n        backgroundType,\r\n        attribute,\r\n        bottomFrame,\r\n        foil,\r\n        star,\r\n        starAlignment,\r\n        cardIcon,\r\n        isDuelTerminalCard,\r\n        isLink,\r\n        isPendulum,\r\n        withBlueScale,\r\n        withRedScale,\r\n        isSpeedCard,\r\n        isSpeedSkill,\r\n        isXyz,\r\n        lightFooter,\r\n        linkMap,\r\n        resolvedStatTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        finish,\r\n        useArtFinish,\r\n        loopArtFinish,\r\n        loopFinish,\r\n        opacity,\r\n        pendulumSize,\r\n        statInEffect,\r\n        levelStyle,\r\n        imageChangeCount, // Special dependency, do not remove even though it is not used in the effect itself\r\n    ]);\r\n\r\n    /** DRAW PENDULUM SCALE */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumScaleCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { numberBlueX, numberRedX, numberY, fontSize } = PendulumSizeMap[pendulumSize];\r\n            if ((pendulumScaleBlue ?? '') !== '') drawScale(ctx, pendulumScaleBlue, numberBlueX, numberY, fontSize, globalScale);\r\n            if ((pendulumScaleRed ?? '') !== '') drawScale(ctx, pendulumScaleRed, numberRedX, numberY, fontSize, globalScale);\r\n        }\r\n    }, [readyToDraw, globalScale, isPendulum, pendulumSize, pendulumScaleBlue, pendulumScaleRed, pendulumScaleCanvasRef]);\r\n\r\n    /** DRAW NAME */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        drawingPipeline.current.name.rerun += 1;\r\n        drawingPipeline.current.name.instructor = async () => {\r\n            const ctx = nameCanvasRef.current?.getContext('2d');\r\n            const cloneNode = nameCanvasRef.current?.cloneNode() as HTMLCanvasElement | undefined;\r\n\r\n            if (!clearCanvas(ctx) || !cloneNode) return;\r\n\r\n            await drawName(\r\n                nameCanvasRef.current,\r\n                ctx,\r\n                name,\r\n                format === 'tcg' ? 60 : 68, 116,\r\n                attribute === NO_ATTRIBUTE\r\n                    ? (format === 'tcg' ? 688 : 674)\r\n                    : (format === 'tcg' ? 608 : 598),\r\n                resolveNameStyle({ format, frame, nameStyle, nameStyleType, foil }),\r\n                { isSpeedSkill, format, cloneNode, frame, furiganaHelper, globalScale },\r\n            );\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        attribute,\r\n        foil,\r\n        format,\r\n        frame,\r\n        furiganaHelper,\r\n        isSpeedSkill,\r\n        name,\r\n        nameCanvasRef,\r\n        nameStyle,\r\n        nameStyleType,\r\n    ]);\r\n\r\n    /** DRAW STAT (ATK / DEF) */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = statCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx) || !statInEffect) return;\r\n\r\n        const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n        drawStatText(ctx, 'ATK', 432.10, 1106.494, globalScale);\r\n        drawStat(ctx, atk.trim(), 508.824, 1106.494, globalScale);\r\n        if (!isLink) {\r\n            drawStatText(ctx, 'DEF', 600.85, 1106.494, globalScale);\r\n            drawStat(ctx, def.trim(), 673.865, 1106.494, globalScale);\r\n        }\r\n        resetStyle();\r\n    }, [readyToDraw, globalScale, atk, def, isLink, isMonster, resolvedStatTextStyle, statCanvasRef, statInEffect]);\r\n\r\n    /** DRAW SET ID */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = setIdCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        drawSetId(\r\n            ctx,\r\n            setId,\r\n            {\r\n                globalScale,\r\n                isLink, isPendulum,\r\n                withShadow: requireShadow && !isPendulum,\r\n                format,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n            }\r\n        );\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        format,\r\n        isLink,\r\n        isPendulum,\r\n        lightFooter,\r\n        setIdCanvasRef,\r\n        setId,\r\n        isSpeedSkill,\r\n        bottomFrame,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW FIRST EDITION NOTICE AND PASSWORD */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = passwordCanvasRef.current?.getContext('2d');\r\n        if (!clearCanvas(ctx)) return;\r\n\r\n        const isNumberPassword = /^[0-9]*$/.test(password);\r\n        const mayOffset = isNumberPassword && isPendulum && isLink;\r\n        const willOffset = mayOffset;\r\n        const {\r\n            rightEdge,\r\n        } = drawPasswordText({\r\n            ctx,\r\n            globalScale,\r\n            value: password,\r\n            lightFooter,\r\n            alignment: 'left',\r\n            edgeOffset: (willOffset ? 80 : 0) * globalScale,\r\n            format,\r\n            hasShadow: bottomFrame === 'zarc' || requireShadow,\r\n            textStyle: resolvedOtherEffectTextStyle,\r\n            fontLevel: !isNumberPassword ? 1 : 0\r\n        });\r\n        if (isFirstEdition) {\r\n            const willDraw = isPendulum\r\n                ? isNumberPassword ? true : false\r\n                : true;\r\n            const left = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? isLink ? 151 : 89\r\n                : Math.max(rightEdge / globalScale + 14.813, 142.2) - (format === 'ocg' ? 7 : 0);\r\n            const bottom = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 871\r\n                : 1150.93;\r\n            const bottomOffset = (isLegacyCard || !isNumberPassword) && !isPendulum\r\n                ? 0\r\n                : isSpeedSkill ? -2 : -1;\r\n\r\n            if (willDraw) draw1stEdition(\r\n                ctx,\r\n                left,\r\n                bottom,\r\n                bottomOffset,\r\n                {\r\n                    globalScale,\r\n                    textStyle: {\r\n                        color: lightFooter ? '#ffffff' : '#000000',\r\n                        ...resolvedOtherEffectTextStyle,\r\n                    }\r\n                },\r\n            );\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        isFirstEdition,\r\n        password,\r\n        passwordCanvasRef,\r\n        lightFooter,\r\n        format,\r\n        requireShadow,\r\n        isLink,\r\n        isSpeedSkill,\r\n        isPendulum,\r\n        isLegacyCard,\r\n        bottomFrame,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW CREATOR (COPYRIGHT) TEXT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = creatorCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.creator.rerun += 1;\r\n        drawingPipeline.current.creator.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            const normalizedOpacity = { ...getDefaultCardOpacity(), ...opacity };\r\n            const {\r\n                body: opacityBody,\r\n                boundless,\r\n            } = normalizedOpacity;\r\n            const endOfCreatorText = drawCreatorText({\r\n                ctx: creatorCanvasRef.current?.getContext('2d'),\r\n                format,\r\n                value: creator,\r\n                alignment: 'right',\r\n                baselineOffset: isSpeedSkill ? -2 : 0,\r\n                hasShadow: requireShadow,\r\n                lightFooter,\r\n                textStyle: resolvedOtherEffectTextStyle,\r\n                globalScale,\r\n            });\r\n            const compactThreshold = (format === 'tcg' ? 390 : 350) * globalScale;\r\n            const compactOffset = (format === 'tcg' ? 30 : 40) * globalScale;\r\n\r\n            if (isLimitedEdition && creatorCanvasRef.current) {\r\n                await drawLimitedEditionMark({\r\n                    canvas: creatorCanvasRef.current,\r\n                    ctx,\r\n                    globalScale,\r\n                    type: (lightFooter && !isPendulum) ? 'white' : 'black',\r\n                    bordered: (opacityBody < 50 || boundless) && !isPendulum,\r\n                    isLink, isPendulum,\r\n                    widthOffset: (endOfCreatorText?.leftEdge ?? compactThreshold) < compactThreshold\r\n                        ? compactOffset\r\n                        : 0,\r\n                    isLegacyCard,\r\n                    textStyle: resolvedOtherEffectTextStyle,\r\n                });\r\n            }\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        creator,\r\n        creatorCanvasRef,\r\n        effectCanvasRef,\r\n        format,\r\n        isLegacyCard,\r\n        isLimitedEdition,\r\n        isLink,\r\n        isPendulum,\r\n        isSpeedSkill,\r\n        lightFooter,\r\n        opacity,\r\n        requireShadow,\r\n        resolvedOtherEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW STICKER */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        drawingPipeline.current.sticker.rerun += 1;\r\n        drawingPipeline.current.sticker.instructor = async () => {\r\n            const ctx = stickerCanvasRef.current?.getContext('2d');\r\n            if (!clearCanvas(ctx)) return;\r\n            const {\r\n                canvas: stickerCanvas,\r\n                context: stickerContext,\r\n            } = createCanvas(CanvasWidth * globalScale, CanvasHeight * globalScale);\r\n            await drawSticker({\r\n                ctx: stickerContext,\r\n                sticker,\r\n                globalScale,\r\n                x: stickerX,\r\n                y: stickerY,\r\n            });\r\n            if (loopArtFinish && useArtFinish) {\r\n                const {\r\n                    canvas: stickerFinishCanvas,\r\n                    context: stickerFinishContext,\r\n                } = createCanvas(CanvasWidth, CanvasHeight);\r\n                stickerFinishContext.drawImage(stickerCanvas, 0, 0);\r\n                await loopArtFinish(\r\n                    stickerFinishContext,\r\n                    'art',\r\n                    async (finishType) => {\r\n                        return await drawAsset(\r\n                            stickerFinishContext,\r\n                            `finish/finish-typeart-${finishType}.png`,\r\n                            CanvasWidth - finishTypeCardWidth, CanvasHeight - finishTypeCardHeight,\r\n                        );\r\n                    },\r\n                );\r\n                stickerContext.globalCompositeOperation = 'source-in';\r\n                stickerContext.drawImage(stickerFinishCanvas, 0, 0);\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            } else {\r\n                ctx.drawImage(stickerCanvas, 0, 0);\r\n            }\r\n        };\r\n    }, [readyToDraw, globalScale, sticker, useArtFinish, stickerCanvasRef, loopArtFinish]);\r\n\r\n    /** DRAW CARD EFFECT + TYPE ABILITY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n\r\n        const ctx = effectCanvasRef.current?.getContext('2d');\r\n        const typeCtx = typeCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.typeAbility.rerun += 1;\r\n        drawingPipeline.current.typeAbility.instructor = async () => {\r\n            if (!clearCanvas(ctx) || !clearCanvas(typeCtx)) return;\r\n\r\n            const { condenseTolerant, upSize, fontStyle } = effectStyle ?? {};\r\n            const customizeEffectStyle = effectTextStyle[0];\r\n            const normalizedUpSize = customizeEffectStyle ? upSize : 0;\r\n            const useItalic = customizeEffectStyle\r\n                ? (isNormal && fontStyle === 'auto') || (format === 'tcg' && fontStyle === 'italic')\r\n                : isNormal;\r\n            const effectIndexSize = drawEffect({\r\n                ctx,\r\n                content: effect,\r\n                isNormal,\r\n                useItalic,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                ...getEffectFontAndCoordinate({\r\n                    format,\r\n                    statInEffect,\r\n                    typeInEffect,\r\n                    useItalic,\r\n                    frameType: (isPendulum && pendulumSize === 'large') ? 'pendulumLarge' : 'normal',\r\n                }),\r\n                textStyle: resolvedEffectTextStyle,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                },\r\n            });\r\n            await drawTypeAbility({\r\n                ctx: typeCtx,\r\n                globalScale,\r\n                format,\r\n                frame,\r\n                furiganaHelper,\r\n                isMonster,\r\n                textStyle: resolvedTypeTextStyle,\r\n                size: !typeInEffect\r\n                    ? 'large'\r\n                    : (isPendulum && pendulumSize === 'large')\r\n                        ? (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'highPendulumNormal' : 'highPendulumSmaller')\r\n                        : (effectIndexSize <= DEFAULT_EFFECT_NORMAL_SIZE ? 'normal' : 'smaller'),\r\n                subFamily: normalizedSubFamily,\r\n                typeAbility: normalizedTypeAbility,\r\n            });\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        typeInEffect,\r\n        statInEffect,\r\n        effectStyle,\r\n        effect,\r\n        effectTextStyle,\r\n        effectCanvasRef,\r\n        format,\r\n        frame,\r\n        isPendulum,\r\n        pendulumSize,\r\n        furiganaHelper,\r\n        isMonster,\r\n        isNormal,\r\n        resolvedTypeTextStyle,\r\n        resolvedEffectTextStyle,\r\n        normalizedSubFamily,\r\n        normalizedTypeAbility,\r\n        typeCanvasRef,\r\n    ]);\r\n\r\n    /** DRAW PENDULUM EFFECT */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = pendulumEffectCanvasRef.current?.getContext('2d');\r\n\r\n        if (!clearCanvas(ctx)) return;\r\n        if (isPendulum) {\r\n            const { upSize, fontStyle } = pendulumStyle ?? {};\r\n            const customPendulumStyle = pendulumTextStyle[0];\r\n            const normalizedUpSize = customPendulumStyle ? upSize : 0;\r\n            const useItalic = customPendulumStyle ? (format === 'tcg' && fontStyle === 'italic') : false;\r\n            const fontDataKey = `${format}-${pendulumSize}`;\r\n            const coordinateList = PendulumEffectCoordinateMap\r\n                [(withBlueScale && withRedScale) ? 'normal' : 'scaleless']\r\n                [pendulumSize];\r\n            /** Account for half scaleless frame */\r\n            const modifiedCoordinateList = (withBlueScale && withRedScale)\r\n                ? coordinateList\r\n                : coordinateList.map(({\r\n                    trueEdge, trueWidth, ...rest\r\n                }) => ({\r\n                    ...rest,\r\n                    trueEdge: trueEdge + (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                    trueWidth: trueWidth\r\n                        - (withBlueScale ? HALF_SCALE_WIDTH_OFFSET : 0)\r\n                        - (withRedScale ? HALF_SCALE_WIDTH_OFFSET : 0),\r\n                }));\r\n\r\n            drawEffect({\r\n                ctx,\r\n                content: pendulumEffect,\r\n                isNormal: false,\r\n                useItalic: useItalic,\r\n                fontData: (useItalic\r\n                    ? PendulumNormalFontData\r\n                    : PendulumEffectFontData)[fontDataKey],\r\n                fontDataKey,\r\n                textStyle: resolvedPendulumEffectTextStyle,\r\n                sizeList: modifiedCoordinateList,\r\n                condenseTolerant,\r\n                format,\r\n                furiganaHelper,\r\n                option: {\r\n                    forceRelaxCondenseLimit: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE,\r\n                    defaultSizeLevel: DEFAULT_PENDULUM_EFFECT_NORMAL_SIZE - normalizedUpSize,\r\n                    globalScale,\r\n                }\r\n            });\r\n        }\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        condenseTolerant,\r\n        format,\r\n        isPendulum,\r\n        withRedScale,\r\n        withBlueScale,\r\n        pendulumSize,\r\n        pendulumEffectCanvasRef,\r\n        pendulumEffect,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        furiganaHelper,\r\n        resolvedPendulumEffectTextStyle,\r\n    ]);\r\n\r\n    /** DRAW TOTAL OVERLAY */\r\n    useEffect(() => {\r\n        if (!readyToDraw) return;\r\n        const ctx = finishCanvasRef.current?.getContext('2d');\r\n\r\n        drawingPipeline.current.overlay.rerun += 1;\r\n        drawingPipeline.current.overlay.instructor = async () => {\r\n            if (!clearCanvas(ctx)) return;\r\n\r\n            if (isLink && isPendulum) {\r\n                await baseDrawLinkArrowMap(ctx, globalScale, linkMap, isPendulum ? 'pendulum' : 'normal', boundless);\r\n                await baseDrawLinkMapFoil(ctx, globalScale, foil, false, isPendulum ? 'pendulum' : 'normal');\r\n                const resetStyle = setTextStyle({ ctx, ...resolvedStatTextStyle, globalScale });\r\n                if (statInEffect) {\r\n                    await drawLinkRatingText(frameCanvasRef.current, linkMap ?? [], resolvedStatTextStyle, globalScale);\r\n                }\r\n                resetStyle();\r\n            }\r\n\r\n            ctx.scale(globalScale, globalScale);\r\n            await loopFinish(\r\n                ctx,\r\n                'total-overlay',\r\n                overlayType => drawAsset(ctx, `finish/finish-${overlayType}-total-overlay.png`, 0, 0),\r\n            );\r\n            ctx.resetTransform();\r\n        };\r\n    }, [\r\n        readyToDraw,\r\n        globalScale,\r\n        finishCanvasRef,\r\n        loopFinish,\r\n        name,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        boundless,\r\n        foil,\r\n        resolvedStatTextStyle,\r\n        statInEffect,\r\n        frameCanvasRef,\r\n    ]);\r\n\r\n\r\n    const drawHistory = useRef<Record<string, number>>({});\r\n    const onExport = useCallback(async (exportProps: {\r\n        isPendulum: boolean,\r\n        opacity: Partial<CardOpacity>,\r\n        pendulumSize: PendulumSize,\r\n        // isRelevant: () => boolean,\r\n    }) => {\r\n        const {\r\n            // isRelevant,\r\n            pendulumSize,\r\n            isPendulum = false,\r\n            opacity,\r\n        } = exportProps;\r\n        const exportCanvas = exportCanvasRef.current;\r\n        const exportCtx = exportCanvas?.getContext('2d');\r\n\r\n        if (exportCanvas && exportCtx) {\r\n            clearCanvas(exportCtx);\r\n            await Promise.all(Object\r\n                .values(drawingPipeline.current)\r\n                .sort((l, r) => l.order - r.order)\r\n                .map(({ instructor, rerun, name }) => {\r\n                    if (\r\n                        (rerun !== 0 && drawHistory.current[name] !== rerun)\r\n                        || !drawHistory.current[name]\r\n                    ) {\r\n                        drawHistory.current[name] = rerun;\r\n\r\n                        return instructor();\r\n                    }\r\n                    return Promise.resolve();\r\n                })).catch(e => {\r\n                    console.error(e);\r\n                    /** Ensure it does not fire repeatedly */\r\n                    const key = 'fail-to-draw-notification';\r\n                    notification.close(key);\r\n                    notification.error({\r\n                        key,\r\n                        message: language['error.draw.error.message'],\r\n                        description: language['error.draw.error.description'],\r\n                    });\r\n                });\r\n            // await generateLayer(frameCanvas, exportCtx);\r\n            const artworkCanvas = artworkCanvasRef.current;\r\n            if (artworkCanvas && exportCtx) {\r\n                const { artX, artY, artWidth } = getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize);\r\n                const { width: imageWidth, height: imageHeight } = artworkCanvas;\r\n\r\n                if (imageHeight > 0) {\r\n                    exportCtx.drawImage(\r\n                        artworkCanvas,\r\n                        0, 0,\r\n                        imageWidth, imageHeight,\r\n                        artX, artY,\r\n                        artWidth, artWidth / (imageWidth / imageHeight),\r\n                    );\r\n                }\r\n            }\r\n            /** It is not worth to use promise all here, just let them go sequentially to avoid too much blob generating call. */\r\n            await generateLayer(frameCanvasRef, exportCtx, 0);\r\n            await generateLayer(nameCanvasRef, exportCtx, 0);\r\n            await generateLayer(cardIconCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumScaleCanvasRef, exportCtx, 0);\r\n            await generateLayer(pendulumEffectCanvasRef, exportCtx, 0);\r\n            await generateLayer(typeCanvasRef, exportCtx, 0);\r\n            await generateLayer(effectCanvasRef, exportCtx, 0);\r\n            await generateLayer(statCanvasRef, exportCtx, 0);\r\n            await generateLayer(setIdCanvasRef, exportCtx, 0);\r\n            await generateLayer(passwordCanvasRef, exportCtx, 0);\r\n            await generateLayer(creatorCanvasRef, exportCtx, 0);\r\n            await generateLayer(stickerCanvasRef, exportCtx, 0);\r\n            await generateLayer(finishCanvasRef, exportCtx, 0);\r\n\r\n            lightboxRef.current?.draw(exportCanvas);\r\n            previewCanvasRef.current?.getContext('2d')?.drawImage(\r\n                exportCanvas,\r\n                0,\r\n                0,\r\n                exportCanvas.width,\r\n                exportCanvas.height,\r\n                0,\r\n                0,\r\n                CanvasWidth,\r\n                CanvasHeight,\r\n            );\r\n        }\r\n    }, [\r\n        language,\r\n        artworkCanvasRef, \r\n        cardIconCanvasRef, \r\n        creatorCanvasRef, \r\n        exportCanvasRef, \r\n        effectCanvasRef, \r\n        finishCanvasRef, \r\n        lightboxRef, \r\n        nameCanvasRef, \r\n        passwordCanvasRef, \r\n        pendulumEffectCanvasRef, \r\n        pendulumScaleCanvasRef, \r\n        setIdCanvasRef, \r\n        frameCanvasRef, \r\n        statCanvasRef, \r\n        stickerCanvasRef, \r\n        typeCanvasRef,\r\n        previewCanvasRef,\r\n    ]);\r\n\r\n    return {\r\n        drawingPipeline,\r\n        onExport,\r\n    };\r\n};\r\n\r\nexport * from './prepare-style';","import { TextStyle } from 'src/model';\r\n\r\nexport type CanvasTextStyle = {\r\n    x?: number,\r\n    y?: number,\r\n    blur?: number,\r\n    color?: string,\r\n    shadowColor?: string,\r\n    lineWidth?: number,\r\n    lineColor?: string,\r\n};\r\n\r\nexport const prepareStyle = ({\r\n    // lightFooter,\r\n    lightHeader,\r\n    requireShadow,\r\n    effectTextStyle,\r\n    pendulumTextStyle,\r\n    otherTextStyle,\r\n    statTextStyle,\r\n    typeTextStyle,\r\n}: {\r\n    requireShadow: boolean,\r\n    lightHeader: boolean,\r\n    lightFooter: boolean,\r\n    effectTextStyle: TextStyle,\r\n    pendulumTextStyle: TextStyle,\r\n    otherTextStyle: TextStyle,\r\n    statTextStyle: TextStyle,\r\n    typeTextStyle: TextStyle,\r\n}) => {\r\n    const levelColor = { color: lightHeader ? '#ffffff' : '#000000' };\r\n    const levelStyle = requireShadow\r\n        ? {\r\n            blur: 2,\r\n            y: 1,\r\n            shadowColor: lightHeader ? '#000000' : '#ffffff',\r\n            ...levelColor,\r\n        }\r\n        : levelColor;\r\n\r\n    const [customEffectText, effectTextFillStyle, effectHasShadow, effectTextShadow] = effectTextStyle;\r\n    const resolvedEffectTextStyle: CanvasTextStyle = customEffectText\r\n        ? {\r\n            ...(effectHasShadow ? { y: 0, blur: 4, shadowColor: effectTextShadow } : {}),\r\n            color: effectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customPendulumEffectText, pendulumEffectTextFillStyle, pendulumEffectHasShadow, pendulumEffectTextShadow] = pendulumTextStyle;\r\n    const resolvedPendulumEffectTextStyle: CanvasTextStyle = customPendulumEffectText\r\n        ? {\r\n            ...(pendulumEffectHasShadow ? { y: 0, blur: 4, shadowColor: pendulumEffectTextShadow } : {}),\r\n            color: pendulumEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customTypeText, typeTextFillStyle, typeHasShadow, typeTextShadow] = typeTextStyle;\r\n    const resolvedTypeTextStyle: CanvasTextStyle = customTypeText\r\n        ? {\r\n            ...(typeHasShadow ? { y: 1, blur: 1, shadowColor: typeTextShadow } : {}),\r\n            color: typeTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customStatText, statTextFillStyle, statHasShadow, statTextShadow] = statTextStyle;\r\n    const resolvedStatTextStyle: CanvasTextStyle = customStatText\r\n        ? {\r\n            ...(statHasShadow ? { y: 1, blur: 1, shadowColor: statTextShadow } : {}),\r\n            color: statTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    const [customOtherEffectText, otherEffectTextFillStyle, otherEffectHasShadow, otherEffectTextShadow] = otherTextStyle;\r\n    const resolvedOtherEffectTextStyle: CanvasTextStyle = customOtherEffectText\r\n        ? {\r\n            ...(otherEffectHasShadow ? { y: 0, blur: 0, shadowColor: otherEffectTextShadow } : {}),\r\n            color: otherEffectTextFillStyle,\r\n        }\r\n        : {};\r\n\r\n    return {\r\n        levelStyle,\r\n        resolvedEffectTextStyle,\r\n        resolvedOtherEffectTextStyle,\r\n        resolvedPendulumEffectTextStyle,\r\n        resolvedStatTextStyle,\r\n        resolvedTypeTextStyle,\r\n    };\r\n};","import { PasswordFontData, PasswordCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawPasswordText = ({\r\n    ctx,\r\n    globalScale,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    edgeOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    fontLevel,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    globalScale: number,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    edgeOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    fontLevel: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return {\r\n        rightEdge: 0,\r\n    };\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        x: 0,\r\n        y: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        PasswordCoordinateMap[format] ?? PasswordCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(PasswordFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    width,\r\n                    globalScale,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left'\r\n            ? trueEdge + edgeOffset\r\n            : (trueEdge - edgeOffset - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        rightEdge: result.tokenEdge,\r\n    };\r\n};","import { CreatorFontData, CreatorCoordinateMap, DefaultFontSizeData } from 'src/model';\r\nimport { condense, createFontGetter, scaleCoordinateData, scaleFontData, scaleFontSizeData } from 'src/util';\r\nimport { tokenizeText } from '../text-util';\r\nimport { drawLine } from '../text';\r\nimport { createLineList } from '../line';\r\nimport { normalizeCardText } from '../text-normalize';\r\nimport { clearCanvas, setTextStyle } from '../canvas-util';\r\nimport { CanvasTextStyle } from 'src/service';\r\n\r\nexport const drawCreatorText = ({\r\n    ctx,\r\n    value,\r\n    format,\r\n    alignment,\r\n    baselineOffset = 0,\r\n    lightFooter,\r\n    hasShadow,\r\n    textStyle,\r\n    globalScale,\r\n}: {\r\n    ctx?: CanvasRenderingContext2D | null,\r\n    value: string,\r\n    format: string,\r\n    alignment: 'left' | 'right',\r\n    baselineOffset?: number,\r\n    lightFooter: boolean,\r\n    hasShadow?: boolean,\r\n    textStyle?: CanvasTextStyle,\r\n    globalScale: number,\r\n}) => {\r\n    if (!clearCanvas(ctx)) return;\r\n\r\n    const resetTextStyle = setTextStyle({\r\n        ctx,\r\n        color: lightFooter ? '#ffffff' : '#000000',\r\n        shadowColor: hasShadow\r\n            ? lightFooter ? '#000000' : '#ffffff'\r\n            : '#000000',\r\n        y: 0,\r\n        x: 0,\r\n        blur: hasShadow ? 3 : 0,\r\n        globalScale,\r\n        ...textStyle,\r\n        ...(textStyle?.shadowColor ? { x: 0, y: 0, blur: 3 } : {}),\r\n    });\r\n\r\n    const { trueEdge, trueBaseline, trueWidth: width } = scaleCoordinateData(\r\n        CreatorCoordinateMap[format] ?? CreatorCoordinateMap['tcg'],\r\n        globalScale,\r\n    );\r\n    const fontData = scaleFontData(CreatorFontData[format], globalScale);\r\n    const { font } = fontData;\r\n    const normalizedText = normalizeCardText(value, format, { multiline: false, furiganaHelper: false });\r\n\r\n    /** Calculation */\r\n    let textData = {\r\n        fontLevel: 0,\r\n        fontData,\r\n        currentFont: createFontGetter(),\r\n    };\r\n    let actualLineWidth = 0;\r\n    let internalEffectiveMedian = 1000;\r\n    let fontSizeData = fontData.fontList[0];\r\n    for (let fontLevel = 0; fontLevel < fontData.fontList.length; fontLevel++) {\r\n        fontSizeData = fontData.fontList[fontLevel];\r\n        const fontGetter = createFontGetter({\r\n            defaultFamily: font,\r\n            defaultSize: `${fontSizeData.fontSize}px`,\r\n            defaultWeight: hasShadow ? 'bold' : '',\r\n        });\r\n        let internalTextData = {\r\n            fontLevel,\r\n            fontData,\r\n            currentFont: fontGetter,\r\n        };\r\n        let internalTrueWidth = 0;\r\n        ctx.font = fontGetter.getFont();\r\n        ctx.textAlign = 'left';\r\n        internalEffectiveMedian = condense(\r\n            median => {\r\n                const { currentLineCount, currentLineList } = createLineList({\r\n                    ctx,\r\n                    median,\r\n                    paragraphList: [normalizedText],\r\n                    format, textData: internalTextData,\r\n                    globalScale,\r\n                    width,\r\n                });\r\n        \r\n                if (currentLineCount > 1) return false;\r\n                internalTrueWidth = currentLineList[0].actualLineWidth;\r\n                return true;\r\n            },\r\n        );\r\n\r\n        actualLineWidth = internalTrueWidth;\r\n        textData = internalTextData;\r\n        if (internalEffectiveMedian >= 1000) break;\r\n    }\r\n\r\n    /** Drawing */\r\n    const xRatio = internalEffectiveMedian / 1000;\r\n    const yRatio = 1;\r\n    ctx.scale(xRatio, yRatio);\r\n    const scaledDefaultFontSizeData = scaleFontSizeData(DefaultFontSizeData, globalScale);\r\n    const result = drawLine({\r\n        ctx,\r\n        tokenList: tokenizeText(normalizedText),\r\n        xRatio, yRatio,\r\n        trueEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        trueBaseline: trueBaseline + (fontSizeData.offsetY ?? scaledDefaultFontSizeData.offsetY) + baselineOffset * globalScale,\r\n        textData,\r\n        format,\r\n        globalScale,\r\n        textDrawer: ({ ctx, letter, scaledEdge, scaledBaseline }) => {\r\n            ctx.fillText(letter, scaledEdge, scaledBaseline);\r\n        },\r\n    });\r\n    ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n    resetTextStyle();\r\n\r\n    return {\r\n        /** End edge is alignment insensitive */\r\n        leftEdge: alignment === 'left' ? trueEdge : (trueEdge - actualLineWidth * xRatio),\r\n        ...result,\r\n    };\r\n};","import { useCallback } from 'react';\r\nimport { create } from 'zustand';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst notificationLocalStorageKey = 'ygocarder-notification';\r\nexport type NotificationMemory = {\r\n    condenseReminder: boolean,\r\n    versionReminder: string,\r\n    faqReminder: boolean,\r\n};\r\nexport type NotificationStore = {\r\n    memory: NotificationMemory,\r\n    updateNotification: <Key extends keyof NotificationMemory>(\r\n        key: Key,\r\n        value: NotificationMemory[Key],\r\n    ) => void,\r\n    updateNotificationMemory: (transformerOrPayload: Partial<NotificationMemory>\r\n        | ((currentSetting: NotificationMemory) => NotificationMemory)) => void,\r\n};\r\nexport const useNotificationMemory = create<NotificationStore>((set) => {\r\n    const {\r\n        condenseReminder,\r\n        versionReminder,\r\n        faqReminder,\r\n    } = ((): Record<string, any> => {\r\n        try {\r\n            const cachedStore = JSON.parse(localStorage.getItem(notificationLocalStorageKey) ?? '{}');\r\n\r\n            if (cachedStore && typeof cachedStore === 'object' && !Array.isArray(cachedStore)) return cachedStore;\r\n            return {};\r\n        } catch (e) {\r\n            console.error('useNotificationMemory: Error when getting cached notification', e);\r\n            return {};\r\n        }\r\n    })();\r\n\r\n    return {\r\n        memory: {\r\n            faqReminder: typeof faqReminder === 'boolean' ? faqReminder : true,\r\n            condenseReminder: typeof condenseReminder === 'boolean' ? condenseReminder : false,\r\n            versionReminder: typeof versionReminder === 'string' ? versionReminder : '1.99.99',\r\n        },\r\n        updateNotification: (key, value) => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = { ...currentStore.memory, [key]: value };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        },\r\n        updateNotificationMemory: transformerOrPayload => {\r\n            set(currentStore => {\r\n                const newNotificationMemory = typeof transformerOrPayload === 'function'\r\n                    ? transformerOrPayload(currentStore.memory)\r\n                    : { ...currentStore.memory, ...transformerOrPayload };\r\n\r\n                localStorage.setItem(notificationLocalStorageKey, JSON.stringify(newNotificationMemory));\r\n\r\n                return {\r\n                    memory: newNotificationMemory,\r\n                };\r\n            });\r\n        }\r\n    };\r\n});\r\n\r\nexport const useNotification = <Key extends keyof NotificationMemory>(key: Key) => {\r\n    const {\r\n        targetMemory,\r\n        updateNotification,\r\n    } = useNotificationMemory(useShallow(({\r\n        memory,\r\n        updateNotification,\r\n    }) => ({\r\n        targetMemory: memory[key],\r\n        updateNotification,\r\n    })));\r\n\r\n    const updateTargetNotification = useCallback(\r\n        (value: NotificationMemory[Key]) => updateNotification(key, value),\r\n        [key, updateNotification],\r\n    );\r\n\r\n    return [targetMemory, updateTargetNotification] as const;\r\n};","import { Modal, notification, Tooltip } from 'antd';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { RetweetOutlined, ArrowRightOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport {\r\n    downloadBlob,\r\n    checkYgoCarderCard,\r\n    mergeClass,\r\n    ygoCarderToCardMakerData,\r\n    compressCardData,\r\n    checkCompactYgoCarderCard,\r\n} from 'src/util';\r\nimport JSZip from 'jszip';\r\n\r\nconst StyledBatchConverterModal = styled(Modal)`\r\n    .controller {\r\n        display: flex;\r\n        gap: var(--spacing);\r\n        align-items: center;\r\n        label {\r\n            background: var(--main-level-4);\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br);\r\n        }\r\n        .toggle-button {\r\n            padding: 0;\r\n            /** Alignemnt */\r\n            width: 26px;\r\n            height: 26px;\r\n            background-color: var(--main-primary);\r\n            border: var(--bw) solid var(--sub-primary);\r\n            border-radius: var(--br);\r\n            box-shadow: var(--bs-block);\r\n            cursor: pointer;\r\n            transform: rotate(0deg);\r\n            transition: transform 0.33s ease-in-out;\r\n            &.reverse{\r\n                transform: rotate(-180deg);\r\n                transition: transform 0.33s ease-in-out;\r\n            }\r\n            &:hover {\r\n                background-color: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .announce {\r\n        text-align: center;\r\n        .warning {\r\n            color: var(--main-danger);\r\n        }\r\n        .in-progress {\r\n            color: var(--main-info);\r\n        }\r\n    }\r\n    .file-panel {\r\n        margin-top: var(--spacing);\r\n        input {\r\n            width: 100%;\r\n            background: var(--main-level-4);\r\n            padding: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            cursor: pointer;\r\n            margin-bottom: var(--spacing-sm);\r\n        }\r\n        .file-list {\r\n            margin-top: var(--spacing-sm);\r\n            &:empty {\r\n                margin-top: 0;\r\n            }\r\n        }\r\n        .file-entry {\r\n            display: grid;\r\n            grid-template-columns: 1fr max-content;\r\n            gap: var(--spacing-xs);\r\n            background-color: var(--main-level-1);\r\n            border: 1px solid var(--sub-level-3);\r\n            padding: 0 var(--spacing-xs);\r\n            border-radius: var(--br-lg);\r\n            + .file-entry {\r\n                margin-top: var(--spacing-xxs);\r\n            }\r\n            .file-action {\r\n                .anticon:hover {\r\n                    color: var(--sub-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type BatchConverter = {\r\n    language: LanguageDataDictionary,\r\n}\r\nexport const BatchConverter = ({\r\n    language,\r\n}: BatchConverter) => {\r\n    const fileLimit = 50;\r\n    const [visible, setVisible] = useState(false);\r\n    const [isRunning, setRunning] = useState(false);\r\n    const [isReverse, setReverse] = useState(false);\r\n    const [fileList, setFileList] = useState<{ file: File, name: string }[]>([]);\r\n    const isExceedMaxAmount = fileList.length > fileLimit;\r\n\r\n    return <>\r\n        <StyledBatchConverterModal\r\n            visible={visible}\r\n            title={language['converter.header.label']}\r\n            okButtonProps={{\r\n                disabled: isExceedMaxAmount || isRunning,\r\n            }}\r\n            okText={language['converter.ok.label']}\r\n            cancelText={language['converter.cancel.label']}\r\n            onCancel={() => setVisible(false)}\r\n            onOk={async () => {\r\n                try {\r\n                    setRunning(true);\r\n                    /** Convert here */\r\n                    const convertedFileList = await Promise.all(fileList.map(({ file, name }) => {\r\n                        return new Promise<{ blob: Blob, name: string }>((resolve, reject) => {\r\n                            const reader = new FileReader();\r\n                            reader.onload = ({ target }) => {\r\n                                if (!target) {\r\n                                    reject('Not a valid target');\r\n                                    return;\r\n                                }\r\n\r\n                                const { result } = target;\r\n                                if (typeof result !== 'string') {\r\n                                    reject('Not a valid result');\r\n                                    return;\r\n                                }\r\n\r\n                                let resultObject = JSON.parse(result);\r\n                                /** Ensure compact mode, remember we only accept non-compress card data as a quality-of-life. Normal card data should always be in compact mode */\r\n                                if (checkYgoCarderCard(resultObject)) {\r\n                                    resultObject = compressCardData(resultObject);\r\n                                }\r\n\r\n                                const isYgoCarderCard = checkCompactYgoCarderCard(resultObject);\r\n                                let convertedCard: Record<string, any> | null = null;\r\n                                if (isReverse) {\r\n                                    /** Ygocarder into other vendor */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? ygoCarderToCardMakerData(decodeCard(resultObject).card).result\r\n                                        : resultObject;\r\n                                } else {\r\n                                    /** Other vendor into ygocarder */\r\n                                    convertedCard = isYgoCarderCard\r\n                                        ? resultObject\r\n                                        : compressCardData(decodeCard(resultObject).card);\r\n                                }\r\n\r\n                                if (!convertedCard) {\r\n                                    reject('Not a valid converted result');\r\n                                    return;\r\n                                }\r\n                                const blob = new Blob(\r\n                                    [`${JSON.stringify(convertedCard)}`],\r\n                                    { type: 'application/json' },\r\n                                );\r\n                                resolve({ blob, name });\r\n                            };\r\n                            reader.readAsText(file);\r\n                        });\r\n                    }));\r\n\r\n                    const zipObject = new JSZip();\r\n                    convertedFileList.forEach(({ blob, name }) => {\r\n                        zipObject.file(name, blob);\r\n                    });\r\n                    const zipBlob = await zipObject.generateAsync({\r\n                        type: 'blob',\r\n                    });\r\n                    downloadBlob(\r\n                        'convert-result.zip',\r\n                        zipBlob,\r\n                        'application/zip',\r\n                    );\r\n                    setRunning(false);\r\n                    setVisible(false);\r\n                } catch (e) {\r\n                    console.error(e);\r\n                    notification.error({\r\n                        message: language['error.convert.message'],\r\n                        description: language['error.convert.description'],\r\n                    });\r\n                    setRunning(false);\r\n                }\r\n            }}\r\n        >\r\n            <div className=\"controller\">\r\n                <label>YGOPro / DuelingNexus / NeoCardMaker</label>\r\n                <div>\r\n                    <button\r\n                        className={mergeClass('toggle-button', isReverse ? 'reverse' : '')}\r\n                        onClick={() => setReverse(cur => !cur)}\r\n                    >\r\n                        <ArrowRightOutlined />\r\n                    </button>\r\n                </div>\r\n                <label>Yugioh Carder</label>\r\n            </div>\r\n            <div className=\"file-panel\">\r\n                <input\r\n                    type=\"file\"\r\n                    accept=\"application/json\"\r\n                    multiple\r\n                    onChange={e => {\r\n                        const fileFromInput = e.target.files;\r\n\r\n                        if (fileFromInput) {\r\n                            const nextFileList: { file: File, name: string }[] = [];\r\n\r\n                            for (let cnt = 0; cnt <= fileFromInput.length; cnt++) {\r\n                                const targetFile = fileFromInput.item(cnt);\r\n                                if (targetFile) nextFileList.push({ file: targetFile, name: targetFile.name });\r\n                            }\r\n\r\n                            setFileList(nextFileList);\r\n                        }\r\n                    }}\r\n                />\r\n                <div className=\"announce\">\r\n                    {language['converter.header.information.label']}\r\n                    {isRunning && <div className=\"in-progress\">\r\n                        {language['converter.header.in-progress.label']}\r\n                    </div>}\r\n                    {isExceedMaxAmount && <div className=\"warning\">\r\n                        {language['converter.header.warning.label'](fileLimit)}\r\n                    </div>}\r\n                </div>\r\n                <div className=\"file-list\">\r\n                    {fileList.map(({ name }) => {\r\n                        return <div key={name} className=\"file-entry\">\r\n                            <div>{name}</div>\r\n                            <div className=\"file-action\">\r\n                                <CloseOutlined\r\n                                    disabled={isRunning}\r\n                                    onClick={() => setFileList(curList => {\r\n                                        return curList.filter(entry => entry.name !== name);\r\n                                    })}\r\n                                />\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </StyledBatchConverterModal>\r\n        <Tooltip overlay={language['converter.header.label']}>\r\n            <StyledActionIconButton\r\n                className=\"batch-converter\"\r\n                onClick={() => setVisible(true)}\r\n            >\r\n                <RetweetOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n};","import React, { ErrorInfo } from 'react';\r\nimport * as Sentry from '@sentry/react';\r\n\r\nexport type ErrorBoundaryProps = {\r\n    fallback?: React.ReactChild,\r\n};\r\nexport type ErrorBoundaryState = {\r\n    hasError: false,\r\n};\r\nexport class ErrorBoundary extends React.Component<ErrorBoundaryProps, ErrorBoundaryState> {\r\n    constructor(props: ErrorBoundaryProps) {\r\n        super(props);\r\n        this.state = { hasError: false };\r\n    }\r\n  \r\n    static getDerivedStateFromError(error: unknown) {\r\n        console.error('Boundary', error);\r\n        // Update state so the next render will show the fallback UI.\r\n        return { hasError: true };\r\n    }\r\n  \r\n    componentDidCatch(error: Error, info: ErrorInfo) {\r\n        // Example \"componentStack\":\r\n        //   in ComponentThatThrows (created by App)\r\n        //   in ErrorBoundary (created by App)\r\n        //   in div (created by App)\r\n        //   in App\r\n        Sentry.captureException(error, { data: info.componentStack });\r\n    }\r\n  \r\n    render() {\r\n        if (this.state.hasError) {\r\n            // You can render any custom fallback UI\r\n            return this.props.fallback;\r\n        }\r\n    \r\n        return this.props.children;\r\n    }\r\n  }","import { AnglePicker } from 'react-linear-gradient-picker';\r\nimport styled from 'styled-components';\r\n\r\n/** The container must contain this class to spread inner styling to angle picker component */\r\nexport const ANGLE_PICKER_CLASSNAME = 'controls-wrapper';\r\nconst AnglePickerContainer = styled.div`\r\n    .ap {\r\n        background-color: var(--color-heavy);\r\n        .apc {\r\n            width: 8px;\r\n        }\r\n        .aph {\r\n            width: 8px;\r\n            height: 8px;\r\n        }\r\n    }\r\n    .ai {\r\n        margin: 0;\r\n        margin-top: var(--spacing-sm);\r\n        background: var(--main-slider);\r\n        justify-content: space-between;\r\n        line-height: 1.4;\r\n        span {\r\n            background: var(--main-secondary);\r\n            padding-left: var(--spacing);\r\n            padding-right: var(--spacing);\r\n            &:hover {\r\n                background: var(--sub-secondary);\r\n            }\r\n        }\r\n        span,\r\n        input {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n`;\r\n\r\nexport type CircularAnglePicker = AnglePicker & {\r\n    children?: React.ReactChild,\r\n};\r\nexport const CircularAnglePicker = ({\r\n    children,\r\n    ...rest\r\n}: CircularAnglePicker) => {\r\n    return <AnglePickerContainer className=\"angle-picker-container\">\r\n        {children}\r\n        <AnglePicker {...rest} />\r\n    </AnglePickerContainer>;\r\n};","import { Popover } from 'antd';\r\nimport { ExclamationCircleOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledExplanationIcon = styled(ExclamationCircleOutlined)`\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    display: inline-block;\r\n`;\r\n\r\nexport type Explanation = {\r\n    iconProps?: ExtractProps<typeof ExclamationCircleOutlined>,\r\n} & ExtractProps<typeof Popover>;\r\nexport const Explanation = ({\r\n    overlayClassName,\r\n    iconProps,\r\n    ...rest\r\n}: Explanation) => {\r\n    const { className, ...restIconProps } = iconProps ?? {};\r\n\r\n    return <Popover overlayClassName={['explanation-overlay', overlayClassName ?? ''].join(' ')} {...rest}>\r\n        <StyledExplanationIcon className={['explanation-icon', className ?? ''].join(' ')} {...restIconProps} />\r\n    </Popover>;\r\n};","import { Tooltip } from 'antd';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { ExtractProps } from 'src/type';\r\nimport styled from 'styled-components';\r\nimport React from 'react';\r\n\r\nexport const StyledIconButtonContainer = styled.span`\r\n    display: inline-flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-left: var(--spacing-xs);\r\n    width: 24px;\r\n    height: 24px;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n\tcursor: pointer;\r\n\t&:hover {\r\n\t\tbackground-color: var(--sub-level-4);\r\n\t}\r\n`;\r\n\r\nexport type IconButton = {\r\n    Icon?: typeof SyncOutlined,\r\n    children?: React.ReactNode,\r\n    onClick?: () => void,\r\n    iconProps?: ExtractProps<typeof SyncOutlined>,\r\n    tooltipProps?: ExtractProps<typeof Tooltip>,\r\n    containerProps?: React.HTMLAttributes<HTMLSpanElement>,\r\n}\r\nexport const IconButton = ({\r\n    Icon,\r\n    children,\r\n    onClick,\r\n    iconProps,\r\n    tooltipProps,\r\n    containerProps,\r\n}: IconButton) => {\r\n    const { className, onClick: customOnClick, onKeyDown, ...restContainerProps } = containerProps ?? {};\r\n\r\n    return <Tooltip title={null} {...tooltipProps}>\r\n        <StyledIconButtonContainer\r\n            tabIndex={0}\r\n            {...restContainerProps}\r\n            onClick={e => {\r\n                onClick?.();\r\n                customOnClick?.(e);\r\n            }}\r\n            onKeyDown={e => {\r\n                onKeyDown?.(e);\r\n                if (e.key === 'Enter') {\r\n                    onClick?.();\r\n                }\r\n            }}\r\n            className={['icon-button', className ?? ''].join(' ')}\r\n        >\r\n            <>\r\n                {Icon && <Icon {...iconProps} />}{children}\r\n            </>\r\n        </StyledIconButtonContainer>\r\n    </Tooltip>;\r\n};\r\n\r\nexport const StyledHeaderButtonContainer = styled.div<{ $softMode?: boolean }>`\r\n    cursor: pointer;\r\n    .button-label {\r\n        display: grid;\r\n        label {\r\n            cursor: pointer;\r\n            line-height: 1;\r\n            font-size: var(--fs-xs);\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n    }\r\n    .anticon {\r\n        font-size: var(--fs-xl);\r\n        justify-self: center;\r\n    }\r\n    &:hover {\r\n        color: var(--main-active);\r\n        .anticon {\r\n            color: var(--sub-active);\r\n        }\r\n    }\r\n`;","import { css } from 'styled-components';\r\n\r\nexport const InputTrainStyle = css`\r\n    display: flex;\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n        display: flex;\r\n        flex: 1 1 auto;\r\n\t\t&:focus-visible {\r\n\t\t\t.radio-train-focused,\r\n\t\t\t.checkbox-train-focused {\r\n\t\t\t\tbackground-color: var(--main-level-3);\r\n\t\t\t}\r\n\t\t}\r\n    }\r\n    .ant-radio-button-wrapper {\r\n        user-select: none;\r\n    }\r\n    .ant-radio-button-wrapper:first-child,\r\n    .ant-radio-button-wrapper:last-child {\r\n        border-radius: 0;\r\n    }\r\n    .ant-radio-button-wrapper:not(.ant-radio-button-wrapper-checked):first-child {\r\n        border-left-color: var(--sub-level-1);\r\n    }\r\n`;","import styled from 'styled-components';\r\nimport { InputTrainStyle } from './input-train.styled';\r\nimport React, { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { Tooltip } from 'antd';\r\n\r\ndeclare module 'react' {\r\n    function forwardRef<T, P = {}>(\r\n        render: (props: P, ref: React.Ref<T>) => JSX.Element | null\r\n    ): (props: P & React.RefAttributes<T>) => JSX.Element | null;\r\n}\r\n\r\nconst StyledRadioTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type RadioTrainRef = {\r\n    focus: () => void,\r\n}\r\nexport type RadioTrain<Value = string | number> = {\r\n    className?: string,\r\n    strict?: boolean,\r\n    value: Value,\r\n    optionList: {\r\n        label: React.ReactNode,\r\n        value: Value,\r\n        tooltipProps?: React.ComponentProps<typeof Tooltip>,\r\n        props?: React.LabelHTMLAttributes<HTMLLabelElement>,\r\n    }[],\r\n    onChange: (value: Value) => void,\r\n    children?: React.ReactNode,\r\n    suffix?: React.ReactNode,\r\n}\r\nconst UnrefRadioTrain = <Value extends string | number = string | number>({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    suffix,\r\n    className,\r\n    strict = false,\r\n}: RadioTrain<Value>, ref: React.ForwardedRef<RadioTrainRef>) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const internalRef = useRef<HTMLDivElement>(null);\r\n    const optionLength = optionList.length;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => internalRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledRadioTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline radio-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div ref={internalRef}\r\n            className=\"radio-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        onChange(target.value);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map(({ value, props, label, tooltipProps }, index) => {\r\n                const { className } = props ?? {};\r\n                const isChecked = strict\r\n                    ? value === activeValue\r\n                    : `${value}` === `${activeValue}`;\r\n\r\n                return <Tooltip key={value} overlay={null} {...tooltipProps}>\r\n                    <label\r\n                        {...props}\r\n                        className={[\r\n                            'ant-radio-button-wrapper',\r\n                            isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                            className ?? '',\r\n                            focus === index ? 'radio-train-focused' : '',\r\n                        ].join(' ')}\r\n                        onClick={() => onChange(value)}\r\n                    >\r\n                        <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                            <span className=\"ant-radio-button-inner\"></span>\r\n                        </span>\r\n                        <span className=\"label\">{label}</span>\r\n                    </label>\r\n                </Tooltip>;\r\n            })}\r\n        </div>\r\n        {suffix}\r\n    </StyledRadioTrainContainer>;\r\n};\r\nexport const RadioTrain = forwardRef(UnrefRadioTrain);","import { Popover } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledCode = styled.span`\r\n    background: var(--main-level-1);\r\n    padding: var(--spacing-px) var(--spacing-xxs);\r\n    border: var(--bw) solid #4e84a4;\r\n    border-radius: var(--br);\r\n    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;\r\n`;\r\n\r\nexport const StyledMarkdown = styled.div`\r\n    padding: var(--spacing-xs);\r\n    background-color: var(--main-level-3);\r\n    font-size: var(--fs);\r\n    color: var(--color-heavy);\r\n    text-shadow: var(--ts);\r\n    p {\r\n        white-space: pre-line;\r\n    }\r\n    ul {\r\n        padding-inline-start: var(--spacing-2xl);\r\n        margin-block-end: 0;\r\n        li {\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    :last-child {\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const StyledPopMarkdown = styled(StyledMarkdown)`\r\n    max-width: 550px;\r\n    border-radius: var(--br-lg);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n`;\r\n\r\nexport const InternalPopover = ({\r\n    content,\r\n    children,\r\n    ...rest\r\n}: React.ComponentProps<typeof Popover>) => {\r\n    if (content) {\r\n        return <Popover content={content} {...rest}>{children}</Popover>;\r\n    }\r\n    return <>{children}</>;\r\n};\r\n\r\nexport const CardActionButton = styled.button`\r\n    --overlay-size: 36px;\r\n    background: var(--main-primary);\r\n    border-width: 0;\r\n    border-style: solid;\r\n    border-color: var(--main-active);\r\n    color: var(--color-heavy);\r\n    padding: var(--spacing-sm);\r\n    line-height: 1;\r\n    font-size: var(--fs-xl);\r\n    text-align: center;\r\n    width: var(--overlay-size);\r\n    height: var(--overlay-size);\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-1);\r\n    /* display: none; */\r\n    &:not(:disabled) {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n    &:disabled {\r\n        cursor: not-allowed;\r\n        filter: opacity(0.5);\r\n    }\r\n`;\r\n\r\nexport const CombinedSliderContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 60px 45px 12px;\r\n    &.inactive {\r\n        .slider-label,\r\n        .ant-slider,\r\n        .slider-padding {\r\n            background-color: var(--main-level-3);\r\n        }\r\n    }\r\n    .slider-label,\r\n    .ant-slider,\r\n    .slider-padding {\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        background-color: var(--main-level-4);\r\n    }\r\n    .slider-label {\r\n        display: inline-flex;\r\n        column-gap: var(--spacing-xs);\r\n        border-right: none;\r\n        padding: var(--spacing-xxs) var(--spacing-xs);\r\n        border-radius: var(--br) 0 0 var(--br);\r\n        box-shadow: var(--bs-input);\r\n        .ant-checkbox-wrapper {\r\n            transform: translateY(-1px); // Alignment\r\n        }\r\n    }\r\n    .ant-slider {\r\n        margin: 0;\r\n        border-left: none;\r\n        border-right: none;\r\n        height: 28px; // Alignment\r\n        padding-top: 11px; // Alignment\r\n    }\r\n    .slider-padding {\r\n        border-left: none;\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-slider-rail,\r\n    .ant-slider-track {\r\n        border-radius: 0 var(--br) var(--br) 0;\r\n    }\r\n    .ant-input-number.ant-input-number-sm {\r\n        height: 28px; // Alignment\r\n        width: unset;\r\n        border-radius: 0;\r\n        box-shadow: var(--bs-input);\r\n        .ant-input-number-input {\r\n            height: 26px; // Alignment\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PopoverButton = styled.div<{ $active?: boolean, $softMode: boolean }>`\r\n    display: inline-block;\r\n    background-color: var(--main-level-4);\r\n    ${({ $active }) => $active ? 'border: var(--bw) solid var(--main-active);' : 'border: var(--bw) solid var(--sub-level-1);'}\r\n    padding: var(--spacing-xxs) var(--spacing-xs);\r\n    margin: calc(-1 * var(--spacing-xxs)) 0;\r\n    border-radius: var(--br-lg);\r\n    box-shadow: var(--bs-button);\r\n    color: var(--color-heavy);\r\n    cursor: pointer;\r\n    ${({ $softMode, $active }) => {\r\n        return $softMode\r\n            ? `\r\n                border: var(--bw) solid var(--main-level-4);\r\n                ${$active ? 'outline: var(--bw) solid var(--main-active);' : ''}\r\n            `\r\n            : '';\r\n    }}\r\n    &:hover {\r\n        background-color: var(--sub-level-4);\r\n    }\r\n`;","import { useLanguage, useSetting } from 'src/service';\r\nimport { SettingFilled } from '@ant-design/icons';\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport { Checkbox, Popover, Tooltip } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { RadioTrain } from '../input-train';\r\nimport { ExportFormatList, ResolutionList, ResolutionMap } from 'src/model';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst rotate = keyframes`\r\n    to {\r\n        transform: rotate(360deg);\r\n    }\r\n`;\r\nconst StyledSettingPanel = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr;\r\n    gap: var(--spacing-sm);\r\n    background-color: var(--main-level-3);\r\n    padding: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    color: var(--color);\r\n    .list-option {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    .resolution-list {\r\n        &.radio-train {\r\n            .ant-radio-button-wrapper:first-child {\r\n                border-radius: var(--br) var(--br) 0 0;\r\n            }\r\n            .ant-radio-button-wrapper:last-child {\r\n                border-radius: 0 0 var(--br) var(--br);\r\n            }\r\n        }\r\n        .radio-train-input-group {\r\n            display: inline-grid;\r\n            flex: 0 1 auto;\r\n            .ant-radio-button-wrapper {\r\n                border-left-width: 1.02px;\r\n                &:before {\r\n                    content: none;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledSettingButtonContainer = styled(StyledHeaderButtonContainer)`\r\n    .anticon-setting {\r\n        > svg {\r\n            ${({ $softMode }) => $softMode ? '' : css`animation: ${rotate} 12s linear infinite;`}\r\n        }\r\n    }\r\n`;\r\nexport const SettingButton = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        setting,\r\n        updateSetting,\r\n    } = useSetting(({ setting, updateSetting }) => ({ setting, updateSetting }));\r\n    const {\r\n        exportFormat,\r\n        resolution,\r\n        allowHotkey,\r\n        reduceMotionColor,\r\n        showCreativeOption,\r\n        showExtraDecorativeOption,\r\n    } = setting;\r\n\r\n    return <StyledSettingButtonContainer className=\"setting-button\" $softMode={reduceMotionColor}>\r\n        <Popover\r\n            trigger={['click']}\r\n            overlayClassName=\"setting-button-overlay\"\r\n            content={<StyledSettingPanel>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={reduceMotionColor}\r\n                        onChange={e => updateSetting({ reduceMotionColor: e.target.checked })}\r\n                    >{language['setting.option.soft-mode.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showExtraDecorativeOption}\r\n                        onChange={e => updateSetting({ showExtraDecorativeOption: e.target.checked })}\r\n                    >{language['setting.option.extra-decorative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Checkbox\r\n                        checked={showCreativeOption}\r\n                        onChange={e => updateSetting({ showCreativeOption: e.target.checked })}\r\n                    >{language['setting.option.creative.label']}</Checkbox>\r\n                </div>\r\n                <div>\r\n                    <Tooltip title={language['setting.option.hotkey.tooltip']} placement=\"left\">\r\n                        <Checkbox\r\n                            checked={allowHotkey}\r\n                            onChange={e => updateSetting({ allowHotkey: e.target.checked })}\r\n                        >{language['setting.option.hotkey.label']}</Checkbox>\r\n                    </Tooltip>\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.resolution.label']}</div>\r\n                    <RadioTrain\r\n                        className=\"resolution-list\"\r\n                        value={`${resolution[0]}x${resolution[1]}`}\r\n                        optionList={ResolutionList.map(({ height, width, label, scale }) => ({\r\n                            value: `${width}x${height}`,\r\n                            label: scale > 1\r\n                                ? <Popover\r\n                                    overlayClassName=\"explanation-overlay\"\r\n                                    placement=\"left\"\r\n                                    content={<StyledPopMarkdown>\r\n                                        {language['setting.option.resolution.warning']}\r\n                                    </StyledPopMarkdown>}\r\n                                >\r\n                                    {label}\r\n                                </Popover>\r\n                                : label,\r\n                        }))}\r\n                        onChange={value => {\r\n                            const resolutionValue = ResolutionMap[value as keyof typeof ResolutionMap];\r\n\r\n                            if (resolutionValue) {\r\n                                updateSetting({\r\n                                    resolution: resolutionValue.settingValue,\r\n                                    globalScale: resolutionValue.scale,\r\n                                });\r\n                            }\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div className=\"list-option\">{language['setting.option.export-format.label']}</div>\r\n                    <RadioTrain\r\n                        value={exportFormat}\r\n                        optionList={ExportFormatList}\r\n                        onChange={value => {\r\n                            updateSetting({ exportFormat: value });\r\n                        }}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <small>{language['setting.alert']}</small>\r\n                </div>\r\n            </StyledSettingPanel>}\r\n        >\r\n            <div className=\"button-label\">\r\n                <SettingFilled />\r\n                <label>{language['setting.button.label']}</label>\r\n            </div>\r\n        </Popover>\r\n    </StyledSettingButtonContainer>;\r\n};","import styled, { css, keyframes } from 'styled-components';\r\n\r\nconst titlShaking = keyframes`\r\n    0% { transform: rotate(0deg); }\r\n    3% { transform: rotate(5deg); }\r\n    6% { transform: rotate(0eg); }\r\n    9% { transform: rotate(-5deg); }\r\n    12% { transform: rotate(0deg); }\r\n    100% { transform: rotate(0deg); }\r\n`;\r\nexport const VersionLogButtonLabel = styled.div<{ $animating: boolean }>`\r\n    text-align: center;\r\n    border: var(--bw) solid var(--main-level-3);\r\n    background-color: var(--main-level-1);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    cursor: pointer;\r\n    box-shadow: 0 0 2px 1px #222222 inset;\r\n    transition: background-color 250ms linear;\r\n    ${({ $animating }) => $animating ? css`animation: 2s linear 350ms 4 ${titlShaking};` : ''}\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            background: var(--main-warning);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background-color: var(--main-level-3);\r\n    }\r\n`;\r\nexport const FaqButtonLabel = styled(VersionLogButtonLabel)`\r\n    box-shadow: none;\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    background-color: var(--main-level-4);\r\n    border-radius: var(--br-lg);\r\n    padding: 0 var(--spacing-xs);\r\n    ${({ $animating }) => $animating\r\n        ? `\r\n            background: var(--main-info);\r\n            color: var(--color-contrast);\r\n            text-shadow: none;\r\n            box-shadow: 0 0 2px 0 #333333;\r\n        `\r\n        : ''}\r\n    &:hover {\r\n        background: var(--sub-info);\r\n    }\r\n`;\r\n\r\nexport const QuoteContainer = styled.div`\r\n    label {\r\n        font-weight: bold;\r\n        font-style: italic;\r\n        &:after {\r\n            content: \":\";\r\n        }\r\n    }\r\n    .question {\r\n        margin-left: var(--spacing);\r\n    }\r\n    .answer {\r\n        margin: var(--spacing) 0;\r\n    }\r\n    &:last-child {\r\n        .answer {\r\n            margin-bottom: 0;\r\n        }\r\n    }\r\n`;","import { Popover } from 'antd';\r\nimport { memo, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { useNotification } from 'src/service';\r\nimport { VersionLogButtonLabel } from './styled';\r\n\r\nconst LogSentence = styled.li`\r\n    img {\r\n        display: block;\r\n        max-width: 400px;\r\n        max-height: 200px;\r\n        margin: auto;\r\n        box-shadow: var(--bs-1);\r\n        margin-top: var(--spacing-xs);\r\n    }\r\n`;\r\n\r\ntype VersionLog = { version: string, logList: { content: string, image?: string }[] }[];\r\nconst VersionLogStore = (() => {\r\n    let isReady = false;\r\n    let versionLog: VersionLog = [];\r\n\r\n    return {\r\n        getLog: async () => {\r\n            if (isReady) return versionLog;\r\n            const response = await fetch(\r\n                `${process.env.PUBLIC_URL}/log/version.json`,\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Accept': 'application/json'\r\n                    }\r\n                }\r\n            );\r\n            try {\r\n                const responseLog = await response.json();\r\n                versionLog = responseLog;\r\n                isReady = true;\r\n\r\n                return versionLog;\r\n            } catch (e) {\r\n                console.error(e);\r\n            }\r\n            return [];\r\n        }\r\n    };\r\n})();\r\nexport const VersionLog = () => {\r\n    const [log, setLog] = useState<VersionLog>([]);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setLoading(true);\r\n            const log = await VersionLogStore.getLog();\r\n\r\n            setLoading(false);\r\n            setLog(log);\r\n        })();\r\n    }, []);\r\n\r\n    if (log.length === 0 && !loading) return <div>No changelogs</div>;\r\n    if (loading) return <div>Loading changelog...</div>;\r\n    return <div>\r\n        {log.map(({ logList, version }, index) => {\r\n            return <div key={`${version}-${index}`} className=\"log-section\">\r\n                <b>{version}</b><br />\r\n                <ul>\r\n                    {/* Using index as key here is safe as the component is stateless */}\r\n                    {logList.map(({ content, image }, index) => {\r\n                        return <LogSentence key={index}>\r\n                            {content}\r\n                            {image && <img src={image} alt={`version-${version}-illust`} />}\r\n                        </LogSentence>;\r\n                    })}\r\n                </ul>\r\n            </div>;\r\n        })}\r\n    </div>;\r\n};\r\n\r\nconst compareSemver = (a: string, b: string): boolean => {\r\n    const [majorA, minorA, patchA] = String(a).split('.').map(Number);\r\n    const [majorB, minorB, patchB] = String(b).split('.').map(Number);\r\n    \r\n    if (majorA !== majorB) {\r\n      return majorA > majorB;\r\n    }\r\n    \r\n    if (minorA !== minorB) {\r\n      return minorA > minorB;\r\n    }\r\n    \r\n    return patchA > patchB;\r\n};\r\n\r\nconst StyledVersionLog = styled(StyledPopMarkdown)`\r\n    overflow: auto;\r\n    width: 550px;\r\n    max-height: 300px;\r\n    width: 550px;\r\n    .log-section + .log-section {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nexport const VersionLogButton = memo(() => {\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        version,\r\n        setMemoizedVersion,\r\n    ] = useNotification('versionReminder');\r\n\r\n    useEffect(() => {\r\n        if (version) {\r\n            const currentSemver = process.env.REACT_APP_VERSION ?? '0.0.0';\r\n            const memoizedSemver = version;\r\n            if (process.env.REACT_APP_VERSION) setMemoizedVersion(process.env.REACT_APP_VERSION);\r\n\r\n            if (compareSemver(currentSemver, memoizedSemver)) {\r\n                setAnimating(true);\r\n                setTimeout(() => {\r\n                    setAnimating(false);\r\n                }, 8000);\r\n            }\r\n        }\r\n    }, [setMemoizedVersion, version]);\r\n\r\n    return <Popover\r\n        placement=\"bottom\"\r\n        content={<StyledVersionLog>\r\n            <VersionLog />\r\n        </StyledVersionLog>}\r\n    >\r\n        <VersionLogButtonLabel $animating={animating} className=\"app-log\" onMouseOver={() => setAnimating(false)}>\r\n            v{process.env.REACT_APP_VERSION ?? 'unknown'}\r\n        </VersionLogButtonLabel>\r\n    </Popover>;\r\n});","import { Modal, Tabs } from 'antd';\r\nimport { FaqButtonLabel, QuoteContainer } from './styled';\r\nimport { useNotification } from 'src/service';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ntype Quote = {\r\n    author?: string,\r\n    question: string,\r\n    children: React.ReactNode,\r\n}\r\nconst Quote = ({\r\n    author,\r\n    question,\r\n    children,\r\n}: Quote) => {\r\n    return <QuoteContainer>\r\n        <blockquote>\r\n            {author && <label>{author}</label>}\r\n            <div className=\"question\">{question}</div>\r\n        </blockquote>\r\n        <div className=\"answer\">{children}</div>\r\n    </QuoteContainer>;\r\n};\r\n\r\nexport const QuestionAndFeedback = () => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [animating, setAnimating] = useState(false);\r\n    const [\r\n        faqReminder,\r\n        setMemoizedReminder,\r\n    ] = useNotification('faqReminder');\r\n\r\n    useEffect(() => {\r\n        if (faqReminder) {\r\n            if (process.env.REACT_APP_VERSION) setMemoizedReminder(false);\r\n\r\n            setAnimating(true);\r\n            setTimeout(() => {\r\n                setAnimating(false);\r\n            }, 8000);\r\n        }\r\n    }, [setMemoizedReminder, faqReminder]);\r\n\r\n    return <>\r\n        <FaqButtonLabel $animating={animating} onClick={() => setVisible(cur => !cur)}>\r\n            {'FAQ'}\r\n        </FaqButtonLabel>\r\n        <Modal visible={visible} onCancel={() => setVisible(false)} footer={null}>\r\n            <Tabs>\r\n                <Tabs.TabPane key=\"faq\" tab=\"Frequently Asked Questions\">\r\n                    {[\r\n                        {\r\n                            question: 'Can you make the pendulum effect box semi-transparent? Just like real pendulum cards.',\r\n                            answer: 'Yes, both pendulum and default card effect box can be made semi-transparent. In \"Layout\" row you can find \"Pendulum\" and \"Effect\" slider, each control how transparent the effect box is (0 is fully see-through and 100 is fully solid).',\r\n                        },\r\n                    ].map(({ question, answer }, index) => {\r\n                        return <Quote key={index} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n                <Tabs.TabPane key=\"feedback\" tab=\"Feedbacks\">\r\n                    <div><i>Solved feedbacks are removed.</i></div>\r\n                    <br />\r\n                    {[\r\n                        {\r\n                            author: 'Anonymous User at Apr 28, 2025',\r\n                            question: 'Hello, can you add art finishes on attributes, stars, icons and sticker like a holographic overlay to it? It would be a great help! THANKS!!! :))',\r\n                            answer: 'I am not sure what you are aiming for, but I will try to add an option that allow apply art finish on other regions of the card. If you can provide me with a sample image of what you are looking for, it would be easier to see whether it is possible or not.',\r\n                        },\r\n                    ].map(({ author, question, answer }, index) => {\r\n                        return <Quote key={index} author={author} question={question}>\r\n                            {answer}\r\n                        </Quote>;\r\n                    })}\r\n                </Tabs.TabPane>\r\n            </Tabs>\r\n        </Modal>\r\n    </>;\r\n};","import { GithubFilled, DatabaseFilled } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Explanation } from '../explanation';\r\nimport { SettingButton } from '../setting';\r\nimport { useCardList, useI18N, useLanguage } from 'src/service';\r\nimport { Radio } from 'antd';\r\nimport { StyledHeaderButtonContainer } from '../icon-button';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { mergeClass } from 'src/util';\r\nimport { VersionLogButton } from './version-log';\r\nimport { StyledPopMarkdown } from '../atom';\r\nimport { QuestionAndFeedback } from './faq';\r\nimport './app-header.scss';\r\n\r\nexport const Affiliation = () => {\r\n    return <div className=\"affiliation\">\r\n        <div className=\"affiliation-link\">\r\n            <a href=\"https://github.com/lauqerm/ygocarder\" target=\"_blank\" rel=\"noreferrer\">\r\n                <GithubFilled />\r\n            </a>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\n\r\nconst StyledAppHeaderButtonContainer = styled.div`\r\n    align-content: center;\r\n    align-self: center;\r\n    border-left: var(--bw) dashed #b1b1b1;\r\n    padding-left: var(--spacing);\r\n    margin-left: var(--spacing);\r\n    height: 100%;\r\n    .button-label {\r\n        position: relative;\r\n    }\r\n    .manager-notice {\r\n        position: absolute;\r\n        color: var(--main-danger);\r\n        right: 0;\r\n        top: 0;\r\n        line-height: 1;\r\n    }\r\n`;\r\n/** @summary If possible, please don't remove this credit box. Show these artists the appreciation they deserve for their hard works. */\r\nexport const AppHeader = () => {\r\n    const {\r\n        language,\r\n        languageInfo,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    } = useI18N(({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }) => ({\r\n        languageInfo,\r\n        language,\r\n        languageMetadataMap,\r\n        changeLanguage,\r\n    }));\r\n    const {\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        isListDirty,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n\r\n    return <div className=\"app-header\">\r\n        <img alt=\"app-logo\" src={`${process.env.PUBLIC_URL}/logo192.png`} width={35} />\r\n        <div className=\"app-description\">\r\n            <div className=\"header-language\">\r\n                <h1>Yugioh Carder</h1>\r\n                <Radio.Group value={languageInfo.codeName} size=\"small\" className=\"language-option\">\r\n                    {Object.values(languageMetadataMap)\r\n                        .filter(({ active }) => active)\r\n                        .map(({ codeName, name }) => {\r\n                            return <Radio.Button key={codeName}\r\n                                value={codeName}\r\n                                onChange={e => changeLanguage(e.target.value)}\r\n                            >\r\n                                {name}\r\n                            </Radio.Button>;\r\n                        })}\r\n                </Radio.Group>\r\n                <span className=\"bug-report\">\r\n                    <div id=\"sentry-bug-report\">\r\n                        {language['contributor.bug-report.tooltip']}\r\n                    </div>\r\n                </span>\r\n                <QuestionAndFeedback />\r\n                <VersionLogButton />\r\n            </div>\r\n            <div className=\"app-contribution\">\r\n                <span className=\"app-creator\">\r\n                    {language['contributor.gui.label']}: <a\r\n                        href=\"https://github.com/lauqerm/ygocarder\"\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                    >\r\n                        <b>Lauqerm</b>\r\n                    </a>&nbsp;<Explanation\r\n                        content={<StyledPopMarkdown className=\"disclaimer\">\r\n                            <h2>{language['contributor.disclaimer.label']}</h2>\r\n                            <ul>\r\n                                <li>{language['contributor.disclaimer.line-1'](<a key=\"app-author\" href=\"https://lauqerm.github.io/ygocarder\">lauqerm.github.io/ygocarder</a>)}</li>\r\n                                <li>{language['contributor.disclaimer.line-2']}</li>\r\n                                <li>{language['contributor.disclaimer.line-3']}</li>\r\n                                <li>{language['contributor.disclaimer.line-4']}</li>\r\n                                <li>{language['contributor.disclaimer.line-5'](\r\n                                    <a key=\"template-maker-1\"\r\n                                        href=\"https://www.deviantart.com/grezar\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">Grezar</a>,\r\n                                    <a key=\"template-maker-2\"\r\n                                        href=\"https://www.deviantart.com/9558able\"\r\n                                        target=\"_blank\"\r\n                                        rel=\"noreferrer\">9558able</a>\r\n                                )}</li>\r\n                                <li>{language['contributor.disclaimer.line-6']}</li>\r\n                            </ul>\r\n                        </StyledPopMarkdown>}\r\n                    />\r\n                </span>\r\n                <span className=\"template-creator\">\r\n                    {language['contributor.template-maker'](\r\n                        <a key=\"artist-1\"\r\n                            href=\"https://www.deviantart.com/grezar/art/SKILL-UPDATE-Series-10-Card-Proxy-Template-686736691\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>Grezar</b></a>,\r\n                        <a key=\"artist-2\"\r\n                            href=\"https://www.deviantart.com/9558able/art/Yugioh-Series-10-Proxy-Template-DELUXE-EDITION-843282421\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>9558able</b></a>,\r\n                        <a key=\"artist-3\"\r\n                            href=\"https://www.deviantart.com/slackermagician\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>SlackerMagician</b></a>,\r\n                        <a key=\"artist-4\"\r\n                            href=\"https://www.deviantart.com/icycatelf\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer\"><b>icycatelf</b></a>,\r\n                    )}\r\n                </span>\r\n            </div>\r\n        </div>\r\n        <StyledAppHeaderButtonContainer className=\"app-setting\">\r\n            <SettingButton />\r\n        </StyledAppHeaderButtonContainer>\r\n        <StyledAppHeaderButtonContainer className=\"card-manager\">\r\n            <StyledHeaderButtonContainer\r\n                className={mergeClass('manager-button-label', visible ? 'manager-active' : '')}\r\n                onClick={() => toggleVisible()}\r\n            >\r\n                <div className=\"button-label\">\r\n                    <DatabaseFilled />\r\n                    <label>{language['manager.icon.title']}</label>\r\n                    {(isListDirty && cardList.length > 1) && <div className=\"manager-notice\">*</div>}\r\n                </div>\r\n            </StyledHeaderButtonContainer>\r\n        </StyledAppHeaderButtonContainer>\r\n    </div>;\r\n};\r\n\r\nexport const TaintedCanvasPanel = () => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledPopMarkdown className=\"disclaimer\">\r\n        <h2>{language['alert.explaination.tainted.first-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.first-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.second-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.second-answer']}</p>\r\n        <h2>{language['alert.explaination.tainted.third-question']}</h2>\r\n        <p>{language['alert.explaination.tainted.third-answer']}</p>\r\n    </StyledPopMarkdown>;\r\n};\r\n\r\nexport const TaintedCanvasWarning = () => {\r\n    return <Explanation\r\n        overlayClassName=\"disclaimer-overlay\"\r\n        content={<TaintedCanvasPanel />}\r\n    />;\r\n};","import { Button, Drawer } from 'antd';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { BulbFilled, SettingFilled } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport { StyledCode } from '../atom';\r\nimport './formatting-guide.scss';\r\n\r\nconst StyledContainer = styled.div`\r\n    white-space: pre-line;\r\n    h2 {\r\n        margin-top: var(--spacing);\r\n    }\r\n`;\r\nconst StyledImageSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 615fr 703fr;\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-sm) 0;\r\n    overflow: hidden;\r\n    .panel-box {\r\n        min-width: 0;\r\n        position: relative;\r\n        overflow: hidden;\r\n    }\r\n`;\r\nconst StyledImageWithCaptionContainer = styled.div`\r\n    min-width: 0;\r\n    position: relative;\r\n    overflow: hidden;\r\n    .caption {\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        padding: var(--spacing-px) var(--spacing-sm);\r\n        background: var(--main-level-5);\r\n        border-radius: var(--br-lg) 0 0 0;\r\n        box-shadow: var(--bs-block);\r\n    }\r\n    > img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-radius: var(--br-lg);\r\n    }\r\n`;\r\nexport type ImageWithCaption = {\r\n    caption?: React.ReactNode,\r\n    containerProps?: React.HTMLAttributes<HTMLDivElement>,\r\n} & React.ImgHTMLAttributes<HTMLImageElement>;\r\nexport const ImageWithCaption = ({\r\n    caption,\r\n    containerProps,\r\n    alt,\r\n    ...rest\r\n}: ImageWithCaption) => {\r\n    const { className } = containerProps ?? {};\r\n\r\n    return <StyledImageWithCaptionContainer className={`image-with-caption ${className}`}>\r\n        <img alt={alt} {...rest} />\r\n        <div className=\"caption\">{caption}</div>\r\n    </StyledImageWithCaptionContainer>;\r\n};\r\n\r\nexport const FormattingHelpDrawer = () => {\r\n    const [modalOpen, setDrawerOpen] = useState(false);\r\n    const language = useLanguage();\r\n\r\n    return <>\r\n        <Drawer\r\n            footer={null}\r\n            visible={modalOpen}\r\n            width={'60%'}\r\n            title={<div className=\"overlay-title\">{language['guide.format.label']} <Button\r\n                size=\"small\"\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                    setDrawerOpen(false);\r\n                }}\r\n            >{language['guide.format.close']}</Button></div>}\r\n            className=\"formattting-guide-overlay\"\r\n            onClose={() => {\r\n                setDrawerOpen(false);\r\n            }}\r\n        >\r\n            <StyledContainer>\r\n                <p>\r\n                    {language['guide.format.introduction'](<SettingFilled key=\"icon\" />)}.\r\n                </p>\r\n                <h2>{language['guide.format.section-1.label']}</h2>\r\n                {language['guide.format.section-1.content'](\r\n                    <StyledCode key=\"open-tag\">{'['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-1-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-6.label']}</h2>\r\n                {language['guide.format.section-6.content'](\r\n                    <StyledCode key=\"open-tag\">{'[['}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{']]'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-Shift-1'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-Shift-1'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'justified non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'justified non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-6-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-2.label']}</h2>\r\n                {language['guide.format.section-2.content'](\r\n                    <StyledCode key=\"open-tag\">{'{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-2'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-2'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-2-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-3.label']}</h2>\r\n                {language['guide.format.section-3.content'](\r\n                    <StyledCode key=\"separator\">{'|'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-3'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-3'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-3-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-4.label']}</h2>\r\n                {language['guide.format.section-4.content'](\r\n                    <StyledCode key=\"separator\">{'||'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-4'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-4'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-4-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n                <h2>{language['guide.format.section-5.label']}</h2>\r\n                {language['guide.format.section-5.content'](\r\n                    <StyledCode key=\"open-tag\">{'{{'}</StyledCode>,\r\n                    <StyledCode key=\"close-tag\">{'}}'}</StyledCode>,\r\n                    <StyledCode key=\"hotkey\">{'Ctrl-5'}</StyledCode>,\r\n                    <StyledCode key=\"hokey-alternative\">{'⌘-5'}</StyledCode>,\r\n                )}\r\n                <StyledImageSection className=\"panel-figure\">\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-raw' }}\r\n                        alt={'non-breakable line raw'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-raw.jpg`}\r\n                        caption={language['guide.format.caption.input']}\r\n                    />\r\n                    <ImageWithCaption\r\n                        containerProps={{ className: 'panel-box box-preview' }}\r\n                        alt={'non-breakable line preview'}\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/syntax/syntax-5-preview.jpg`}\r\n                        caption={language['guide.format.caption.output']}\r\n                    />\r\n                </StyledImageSection>\r\n            </StyledContainer>\r\n        </Drawer>\r\n        <Button\r\n            className=\"formatting-help-button\"\r\n            type=\"primary\"\r\n            onClick={() => {\r\n                setDrawerOpen(true);\r\n            }}\r\n        >\r\n            {language['guide.format.label']} <BulbFilled />\r\n        </Button>\r\n    </>;\r\n};","import { FrameInfo } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledFrameContainer = styled.div<{ $withPillar: boolean }>`\r\n    display: grid;\r\n    ${({ $withPillar }) => $withPillar ? 'grid-template-columns: max-content 1fr;' : 'grid-template-columns: 1fr;'}\r\n    > label {\r\n        cursor: pointer;\r\n        padding: 0 var(--spacing-xxs);\r\n        text-align: center;\r\n    }\r\n`;\r\nconst StyledFramePillar = styled.div`\r\n    display: inline-block;\r\n    width: 10px;\r\n`;\r\nexport const FrameInfoBlock = ({\r\n    nameKey,\r\n    labelBackgroundColor,\r\n    labelBackgroundColorList,\r\n    className,\r\n}: Omit<FrameInfo, 'name' | 'edition' | 'labelColor' | 'sortWeight'> & { className?: string }) => {\r\n    const language = useLanguage();\r\n\r\n    return <StyledFrameContainer\r\n        className={`frame-info-block ${className ?? ''}`}\r\n        $withPillar={!!(labelBackgroundColor || labelBackgroundColorList)}\r\n    >\r\n        {labelBackgroundColorList\r\n            ? <StyledFramePillar>\r\n                {labelBackgroundColorList.map(color => <div\r\n                    key={color} \r\n                    style={{ backgroundColor: color, height: `${100 / labelBackgroundColorList.length}%` }}\r\n                />)}\r\n            </StyledFramePillar>\r\n            : labelBackgroundColor\r\n                ? <StyledFramePillar style={{ backgroundColor: labelBackgroundColor }} />\r\n                : null}\r\n        <label className=\"frame-info-block-label\">{language[nameKey]}</label>\r\n    </StyledFrameContainer>;\r\n};\r\n","import { Modal } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { CanvasConst } from 'src/model';\r\nimport {\r\n    TransformWrapper,\r\n    TransformComponent,\r\n    ReactZoomPanPinchContentRef,\r\n} from 'react-zoom-pan-pinch';\r\nimport styled from 'styled-components';\r\nimport { ZoomInOutlined, ZoomOutOutlined, FullscreenExitOutlined, FullscreenOutlined } from '@ant-design/icons';\r\nimport { CardActionButton } from '../atom';\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nconst StyledLightboxContainer = styled.div`\r\n    width: ${CanvasWidth}px;\r\n    height: ${CanvasHeight}px;\r\n    overflow: hidden;\r\n    position: relative;\r\n    line-height: 0;\r\n    .card-lightbox-control {\r\n        position: absolute;\r\n        z-index: 1;\r\n        top: var(--spacing);\r\n        right: var(--spacing);\r\n        user-select: none;\r\n        text-align: right;\r\n        .action-list {\r\n            display: inline-flex;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .control-info {\r\n            background-color: var(--main-level-1);\r\n            padding: var(--spacing-xs);\r\n            margin-top: var(--spacing-xs);\r\n            border-radius: var(--br);\r\n            border: var(--bw) solid var(--sub-level-1);\r\n            line-height: 1;\r\n            box-shadow: var(--bs-1);\r\n        }\r\n    }\r\n    .card-lightbox-content {\r\n        cursor: grab;\r\n    }\r\n`;\r\n\r\nconst MAX_ZOOM = 4;\r\nconst Controls = ({\r\n    zoomIn,\r\n    zoomOut,\r\n    resetTransform,\r\n    setTransform,\r\n    scale,\r\n    globalScale,\r\n    width,\r\n    height,\r\n}: ReactZoomPanPinchContentRef & {\r\n    scale: number,\r\n    globalScale: number,\r\n    width: number,\r\n    height: number,\r\n}) => {\r\n    return <div className=\"control-container\">\r\n        <div className=\"action-list\">\r\n            <CardActionButton disabled={scale >= MAX_ZOOM} onClick={() => {\r\n                zoomIn();\r\n            }}>\r\n                <ZoomInOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton disabled={scale <= 1 / globalScale} onClick={() => {\r\n                zoomOut();\r\n            }}>\r\n                <ZoomOutOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                resetTransform();\r\n            }}>\r\n                <FullscreenExitOutlined />\r\n            </CardActionButton>\r\n            <CardActionButton onClick={() => {\r\n                setTransform(\r\n                    -Math.max(0, width - CanvasWidth) / 2,\r\n                    -Math.max(0, height - CanvasHeight) / 2,\r\n                    1,\r\n                );\r\n            }}>\r\n                <FullscreenOutlined />\r\n            </CardActionButton>\r\n        </div>\r\n        <div className=\"control-info\">\r\n            {scale && <>×{\r\n                scale < 1 ? `1/${Math.round(1 / scale * 10) / 10}` : (Math.round(scale * 10) / 10)\r\n            }</>}&nbsp;({width} × {height})\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport type Lightbox = {\r\n    globalScale: number,\r\n};\r\nexport type LightboxRef = {\r\n    setVisible: (dispatcher: (cur: boolean) => boolean) => void,\r\n    draw: (targetCanvas: HTMLCanvasElement) => void,\r\n    refresh: () => void,\r\n    getCanvasKey: () => number,\r\n};\r\nexport const Lightbox = forwardRef<LightboxRef, Lightbox>(({\r\n    globalScale,\r\n}, ref) => {\r\n    const [lightboxVisible, setLightboxVisible] = useState(false);\r\n    const [canvasKey, setCanvasKey] = useState(0);\r\n    const lightboxCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<ReactZoomPanPinchContentRef>(null);\r\n    const [scale, setScale] = useState(() => 1 / globalScale);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setVisible: setLightboxVisible,\r\n        draw: targetCanvas => {\r\n            lightboxCanvasRef.current?.getContext('2d')?.drawImage(\r\n                targetCanvas,\r\n                0,\r\n                0,\r\n            );\r\n        },\r\n        refresh: () => setCanvasKey(cnt => cnt + 1),\r\n        getCanvasKey: () => canvasKey,\r\n    }));\r\n\r\n    useEffect(() => {\r\n        lightboxRef.current?.resetTransform();\r\n    }, [globalScale]);\r\n\r\n    return <Modal\r\n        width={`${CanvasWidth + 15 * 2}px`}\r\n        wrapClassName=\"card-lightbox-overlay\"\r\n        visible={lightboxVisible}\r\n        forceRender={true}\r\n        onCancel={() => setLightboxVisible(false)}\r\n        footer={null}\r\n    >\r\n        <StyledLightboxContainer\r\n            className=\"card-lightbox-container\"\r\n        >\r\n            <TransformWrapper ref={lightboxRef}\r\n                initialScale={1 / globalScale}\r\n                initialPositionX={0}\r\n                initialPositionY={0}\r\n                minScale={1 / globalScale}\r\n                maxScale={MAX_ZOOM}\r\n                onTransformed={ref => {\r\n                    setScale(ref.state.scale);\r\n                }}\r\n            >\r\n                {({ ...utils }) => {\r\n                    return <>\r\n                        <div\r\n                            className=\"card-lightbox-control\"\r\n                        >\r\n                            <Controls\r\n                                {...utils}\r\n                                scale={scale}\r\n                                globalScale={globalScale}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </div>\r\n                        <TransformComponent\r\n                            wrapperClass=\"card-lightbox-content\"\r\n                            wrapperStyle={{ maxWidth: CanvasWidth, maxHeight: CanvasHeight, lineHeight: 0 }}\r\n                        >\r\n                            <canvas key={canvasKey + 0.1}\r\n                                id=\"lightbox-canvas\"\r\n                                ref={lightboxCanvasRef}\r\n                                width={CanvasWidth * globalScale}\r\n                                height={CanvasHeight * globalScale}\r\n                            />\r\n                        </TransformComponent>\r\n                    </>;\r\n                }}\r\n            </TransformWrapper>\r\n        </StyledLightboxContainer>\r\n    </Modal>;\r\n});","import { Menu, Popover } from 'antd';\r\nimport { ExportFormat, ExportFormatList, ResolutionList } from 'src/model';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StyledPopMarkdown } from '../atom';\r\n\r\nconst StyledDownloadDropdownLabel = styled(Menu.Item)`\r\n    color: var(--color);\r\n    padding: 1px 12px 5px 12px; // Alignment\r\n    font-size: var(--fs-sm);\r\n    border-bottom: var(--bw) solid var(--sub-level-4);\r\n    cursor: default;\r\n    &.ant-dropdown-menu-item.ant-dropdown-menu-item-disabled:hover {\r\n        cursor: default;\r\n        background: var(--main-level-3);\r\n    }\r\n`;\r\nconst StyledDownloadDropdownOption = styled(Menu.Item)`\r\n    &li.ant-dropdown-menu-item:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.active-setting {\r\n        background-color: var(--main-active);\r\n    }\r\n`;\r\nexport type ResolutionPicker = {\r\n    onChange?: (nextResolution: [number, number], nextScale: number) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ResolutionPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ResolutionPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        resolution,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.resolution.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ResolutionList.map(({ width, height, label, scale }) => {\r\n            return <StyledDownloadDropdownOption key={`${width}-${height}`}\r\n                className={resolution[0] === width && resolution[1] === height ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        resolution: [width, height],\r\n                        globalScale: scale,\r\n                    });\r\n                    onChange?.([width, height], scale);\r\n                }}\r\n            >\r\n                {scale > 1\r\n                    ? <Popover\r\n                        overlayClassName=\"explanation-overlay\"\r\n                        placement=\"left\"\r\n                        content={<StyledPopMarkdown>\r\n                            {language['setting.option.resolution.warning']}\r\n                        </StyledPopMarkdown>}\r\n                    >\r\n                        {label}\r\n                    </Popover>\r\n                    : label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};\r\n\r\nexport type ExportFormatPicker = {\r\n    onChange?: (nextFormat: ExportFormat) => void,\r\n} & React.ComponentProps<typeof Menu>;\r\nexport const ExportFormatPicker = ({\r\n    onChange,\r\n    ...rest\r\n}: ExportFormatPicker) => {\r\n    const language = useLanguage();\r\n    const {\r\n        exportFormat,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, exportFormat },\r\n        updateSetting,\r\n    }) => ({\r\n        allowHotkey,\r\n        exportFormat,\r\n        updateSetting,\r\n    })));\r\n\r\n    return <Menu onClick={e => e.domEvent.stopPropagation()} {...rest}>\r\n        <StyledDownloadDropdownLabel disabled onClick={e => e.domEvent.stopPropagation()}>\r\n            {language['setting.option.export-format.label']}\r\n        </StyledDownloadDropdownLabel>\r\n        {ExportFormatList.map(({ value, label }) => {\r\n            return <StyledDownloadDropdownOption key={label}\r\n                className={value === exportFormat ? 'active-setting' : ''}\r\n                onClick={() => {\r\n                    updateSetting({\r\n                        exportFormat: value,\r\n                    });\r\n                    onChange?.(value);\r\n                }}\r\n            >\r\n                {label}\r\n            </StyledDownloadDropdownOption>;\r\n        })}\r\n    </Menu>;\r\n};","import { Spin } from 'antd';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLoadingFullViewContainer = styled.div`\r\n    display: flex;\r\n\tposition: absolute;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(#fafafaaa, #fafafaaa);\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const Loading = () => {\r\n    return <Spin />;\r\n};\r\nLoading.FullView = () => {\r\n    return <StyledLoadingFullViewContainer className=\"loading-fullview\">\r\n        <Spin size=\"large\" />\r\n    </StyledLoadingFullViewContainer>;\r\n};","import { Empty, Input, Radio, Tooltip } from 'antd';\r\nimport React, { useState, useCallback, useRef, useEffect, useImperativeHandle, forwardRef } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\nimport { DownloadOutlined, FullscreenOutlined, VerticalAlignMiddleOutlined } from '@ant-design/icons';\r\nimport { Loading } from '../loading';\r\nimport { IconButton } from '../icon-button';\r\nimport { useLanguage } from 'src/service';\r\nimport { mergeClass } from 'src/util';\r\nimport 'react-image-crop/dist/ReactCrop.css';\r\nimport './image-cropper.scss';\r\n\r\nfunction generateDownload(canvas: HTMLCanvasElement | null, crop: ReactCrop.Crop | null) {\r\n    if (!crop || !canvas) return;\r\n    canvas.toBlob(\r\n        (blob) => {\r\n            if (blob !== null) {\r\n                const previewUrl = window.URL.createObjectURL(blob);\r\n\r\n                const anchor = document.createElement('a');\r\n                anchor.download = 'crop-preview.png';\r\n                anchor.href = URL.createObjectURL(blob);\r\n                anchor.click();\r\n\r\n                window.URL.revokeObjectURL(previewUrl);\r\n            }\r\n        },\r\n        'image/png',\r\n        1\r\n    );\r\n}\r\n\r\n/**\r\n * Historic reason: cropData initially used `px` as unit, but this create a hard link between cropData and size of the cropper (NOT the actual image). This means the cropData only match a specific cropper size, and will become incorrect if the size change (which is happening when we got to v2).\r\n * \r\n * So from now on every cropData with `px` unit in it (old data) will be converted into the new one that use `%` data, which is more tricky to calculate but remove the link entirely.\r\n */\r\nconst normalizeCrop = (crop: Partial<ReactCrop.Crop>, image: HTMLImageElement | null, ratio: number) => {\r\n    if (!image) return crop;\r\n    const { width: cropWidth, height: cropHeight, x = 0, y = 0, unit } = crop;\r\n\r\n    /** Migrate old unit */\r\n    if (unit === 'px') {\r\n        const oldHeightToWidthRatio = 300 / 375;\r\n        const newHeightToWidthRatio = 400 / 300;\r\n        const { width: imageWidth, height: imageHeight } = image;\r\n\r\n        const isHeightRestricted = (imageHeight / imageWidth) >= oldHeightToWidthRatio;\r\n        const scaleRatio = isHeightRestricted ? newHeightToWidthRatio : 1;\r\n        const nextX = Math.min((x ?? 0) * scaleRatio, imageWidth);\r\n        const nextY = Math.min((y ?? 0) * scaleRatio, imageHeight);\r\n        const newWidth = Math.min((cropWidth ?? 0) * scaleRatio, imageWidth);\r\n\r\n        return {\r\n            unit: '%' as 'px' | '%',\r\n            x: nextX / imageWidth * 100,\r\n            y: nextY / imageHeight * 100,\r\n            width: newWidth / imageWidth * 100,\r\n            height: newWidth / (ratio ?? 1) / imageHeight * 100,\r\n            aspect: ratio,\r\n        };\r\n    }\r\n\r\n    if (x < 0) return { ...crop, x: 0 };\r\n    if (y < 0) return { ...crop, y: 0 };\r\n    const { naturalHeight, naturalWidth } = image;\r\n    const width = cropWidth ?? 0;\r\n    const height = cropHeight ?? 0;\r\n    /** Avoid recalculate if current ratio is in acceptable limit, so we don't cascade calculation error */\r\n    const acceptableError = (naturalHeight > naturalWidth ? naturalHeight : naturalWidth) * 0.05;\r\n    const isRatioAcceptable = Math.abs(height * naturalHeight * ratio - width * naturalWidth) <= acceptableError;\r\n    const nextHeight = isRatioAcceptable\r\n        ? height\r\n        : width * image.naturalWidth /** Restore original size */\r\n            / ratio /** Get height with corresponding aspect ratio */\r\n            / image.naturalHeight /** Convert back to percent */;\r\n\r\n    /** If next height exceed the current image, we resize and center everything so it fit the current image */\r\n    const oversizeRatio = nextHeight / 100;\r\n    const normalizedHeight = oversizeRatio > 1\r\n        ? 100\r\n        : nextHeight;\r\n    const normalizedWidth = oversizeRatio > 1\r\n        ? width / oversizeRatio\r\n        : width;\r\n    const normalizedX = oversizeRatio > 1\r\n        ? (100 - normalizedWidth) / 2\r\n        : (x < 0 ? 0 : x);\r\n    const normalizedY = oversizeRatio > 1\r\n        ? 0\r\n        : (y < 0 ? 0 : y);\r\n\r\n    return {\r\n        ...crop,\r\n        x: normalizedX,\r\n        y: normalizedY,\r\n        height: normalizedHeight,\r\n        width: normalizedWidth,\r\n        aspect: ratio,\r\n    };\r\n};\r\n\r\nexport type ImageCropperRef = {\r\n    isLoading: () => boolean,\r\n    hasImage: () => boolean,\r\n    forceSource: (type: 'online' | 'offline', artLinkOrData: string, cropInfo: Partial<ReactCrop.Crop>) => void,\r\n}\r\nexport type ImageCropper = {\r\n    title?: React.ReactNode,\r\n    backgroundColor?: string,\r\n    className?: string,\r\n    /** Stretch or squeeze image so it fit with the provided ratio */\r\n    forceFit?: boolean,\r\n    defaultSourceType?: string,\r\n    defaultInternalSource?: string,\r\n    defaultExternalSource?: string,\r\n    receivingCanvas?: HTMLCanvasElement | null,\r\n    children?: React.ReactNode,\r\n    beforeCropper?: React.ReactNode,\r\n    defaultCropInfo: Partial<ReactCrop.Crop>,\r\n    ratio: number,\r\n    onSourceChange?: (sourceType: 'offline' | 'online', source: string) => void,\r\n    onSourceLoaded?: (crossorigin?: string) => void,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => void,\r\n    onTainted: () => void,\r\n    onMaxSizeExceeded: (size: number) => void,\r\n    onForceFitChange?: (status: boolean) => void,\r\n}\r\nexport const ImageCropper = forwardRef<ImageCropperRef, ImageCropper>(({\r\n    title,\r\n    backgroundColor,\r\n    className,\r\n    forceFit,\r\n    defaultSourceType,\r\n    defaultInternalSource = '',\r\n    defaultExternalSource = '',\r\n    receivingCanvas,\r\n    children,\r\n    beforeCropper,\r\n    defaultCropInfo,\r\n    ratio,\r\n    onSourceLoaded = () => { },\r\n    onSourceChange = () => { },\r\n    onCropChange = () => { },\r\n    onTainted = () => { },\r\n    onMaxSizeExceeded = () => { },\r\n    onForceFitChange = () => { },\r\n}: ImageCropper, forwardedRef) => {\r\n    const normalizedDefaultSource = defaultSourceType === 'offline'\r\n        ? 'offline'\r\n        : 'online';\r\n    const language = useLanguage();\r\n    const fileInputRef = useRef<Input>(null);\r\n    const [\r\n        crossorigin,\r\n        setCrossOrigin,\r\n    ] = useState<'anonymous' | 'use-credentials' | undefined>('anonymous');\r\n    const [redrawSignal, setRedrawSignal] = useState(0);\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [inputMode, setInputMode] = useState<'offline' | 'online'>(normalizedDefaultSource);\r\n    const [internalSource, setInternalSource] = useState(defaultInternalSource);\r\n    const [isLoading, setLoading] = useState(false);\r\n    const [error, setError] = useState<any>(null);\r\n    const [interacted, setInteracted] = useState(false);\r\n    const [externalSource, setExternalSource] = useState(defaultExternalSource);\r\n    const imgRef = useRef<HTMLImageElement | null>(null);\r\n    const [crop, setCrop] = useState({\r\n        current: defaultCropInfo,\r\n        completed: null as ReactCrop.Crop | null,\r\n    });\r\n    // const [completedCrop, setCompletedCrop] = useState<ReactCrop.Crop | null>(null);\r\n    const [isMigrated, setMigrated] = useState(defaultCropInfo.unit === '%');\r\n    const {\r\n        current: currentCrop,\r\n        completed: completedCrop,\r\n    } = crop;\r\n\r\n    const applyOfflineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files && e.target.files.length > 0) {\r\n            const targetFile = e.target.files[0];\r\n            const maxFileSize = 4;\r\n\r\n            if (targetFile.size < maxFileSize * 1024 * 1024) {\r\n                setLoading(true);\r\n                const reader = new FileReader();\r\n                reader.addEventListener('load', () => {\r\n                    if (typeof reader.result === 'string') {\r\n                        setCrossOrigin('anonymous');\r\n                        setInternalSource(reader.result);\r\n                        setSourceType('offline');\r\n                        setInputMode('offline');\r\n                        onSourceChange('offline', reader.result);\r\n                        setLoading(false);\r\n                    }\r\n                });\r\n                reader.readAsDataURL(targetFile);\r\n            } else {\r\n                onMaxSizeExceeded(maxFileSize);\r\n            }\r\n        } else alert(language['image-cropper.not-found-warning']);\r\n    };\r\n\r\n    const pendingCrop = useRef({\r\n        source: '',\r\n        crop: null as Partial<ReactCrop.Crop> | null,\r\n    });\r\n    const onLoad = useCallback((img: HTMLImageElement) => {\r\n        setLoading(false);\r\n        setError(null);\r\n        onSourceLoaded(crossorigin);\r\n        imgRef.current = img;\r\n        /** @todo Check if we really need timeout delay here */\r\n        if (img.src === pendingCrop.current.source && pendingCrop.current.crop) {\r\n            const internalId = pendingId.current;\r\n            setTimeout(() => {\r\n                if (internalId !== pendingId.current || !pendingCrop.current.crop) return;\r\n                const normalizedCrop = normalizeCrop(pendingCrop.current.crop, img, ratio);\r\n                setCrop({\r\n                    completed: normalizedCrop,\r\n                    current: normalizedCrop,\r\n                });\r\n                setMigrated(true);\r\n                pendingCrop.current = {\r\n                    source: '',\r\n                    crop: null,\r\n                };\r\n            }, 250);\r\n        } else {\r\n            setTimeout(() => {\r\n                setCrop(cur => {\r\n                    const normalizedCrop = normalizeCrop(cur.current, img, ratio);\r\n\r\n                    return {\r\n                        completed: normalizedCrop,\r\n                        current: normalizedCrop,\r\n                    };\r\n                });\r\n                setMigrated(true);\r\n            }, 250);\r\n        }\r\n    }, [crossorigin, onSourceLoaded, ratio]);\r\n\r\n    const applyOnlineSource = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const source = e.target.value;\r\n\r\n        setCrossOrigin('anonymous');\r\n        setLoading(true);\r\n        setSourceType('online');\r\n        setInputMode('online');\r\n        onSourceChange('online', source);\r\n        setExternalSource(source);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const image = imgRef.current;\r\n        if (!completedCrop || !receivingCanvas || !image) return;\r\n\r\n        const { aspect: ratio } = completedCrop;\r\n\r\n        /** Increase image size for a bit */\r\n        receivingCanvas.style.transform = 'scale(2)';\r\n        const ctx = receivingCanvas.getContext('2d');\r\n        if (!ctx || typeof ratio !== 'number' || ratio <= 0) return;\r\n\r\n        const { naturalHeight, naturalWidth } = image;\r\n        const zoomX = naturalWidth / image.width;\r\n        const zoomY = naturalHeight / image.height;\r\n        const cropUnit = completedCrop.unit ?? 'px';\r\n        const pixelRatio = window.devicePixelRatio;\r\n\r\n        ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n        /** Snap sizing into whole pixel for a more crispy image. */\r\n        let expectedDrawWidth = Math.floor((completedCrop.width ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100));\r\n        let drawWidth = Math.min(naturalWidth, expectedDrawWidth);\r\n        let expectedDrawHeight = Math.floor(expectedDrawWidth / ratio);\r\n        let drawHeight = Math.min(naturalHeight, expectedDrawHeight);\r\n        let drawCoordinateX = Math.min(\r\n            naturalWidth,\r\n            Math.floor((completedCrop.x ?? 0) * (cropUnit === 'px' ? zoomX : naturalWidth / 100))\r\n        );\r\n        let drawCoordinateY = Math.min(\r\n            naturalHeight,\r\n            Math.floor((completedCrop.y ?? 0) * (cropUnit === 'px' ? zoomY : naturalHeight / 100))\r\n        );\r\n        ctx.imageSmoothingQuality = 'high';\r\n        if (drawWidth <= 0 || drawHeight <= 0) return;\r\n\r\n        let fitCropData: Partial<ReactCrop.Crop> | undefined = undefined;\r\n        /** If the crop section is overflowed (mainly because change of ratio), we try to snap it back to the cropper. */\r\n        if (\r\n            // Size overflow\r\n            (drawCoordinateX + drawWidth) > naturalWidth\r\n            || (drawCoordinateY + drawHeight) > naturalHeight\r\n            // Edge overflow\r\n            || drawCoordinateX < 0\r\n            || drawCoordinateY < 0\r\n            // Ratio overflow\r\n            || Math.abs((expectedDrawWidth - drawWidth) / drawWidth) > 0.01\r\n            || Math.abs((expectedDrawHeight - drawHeight) / drawHeight) > 0.01\r\n        ) {\r\n            /** Try to maximize new crop section's area */\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            /**\r\n             * Automatically center current crop section.\r\n             * @todo For the best UX, it should actually be proportional based on the x and y before the snap.\r\n             * */\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n                drawCoordinateX = 0;\r\n                drawCoordinateY = (naturalHeight - drawHeight) / 2;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: 0,\r\n                    y: drawCoordinateY / naturalHeight * 100,\r\n                };\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n                drawCoordinateX = (naturalWidth - drawWidth) / 2;\r\n                drawCoordinateY = 0;\r\n                fitCropData = {\r\n                    unit: '%',\r\n                    aspect: ratio,\r\n                    height: drawHeight / naturalHeight * 100,\r\n                    width: drawWidth / naturalWidth * 100,\r\n                    x: drawCoordinateX / naturalWidth * 100,\r\n                    y: 0,\r\n                };\r\n            }\r\n        }\r\n        // const boundingWidth = Math.ceil(receivingCanvas.getBoundingClientRect().width);\r\n        // const boundingHeight = Math.ceil(receivingCanvas.getBoundingClientRect().height);\r\n\r\n        if (forceFit) {\r\n            const prominentSide = ratio * naturalHeight > naturalWidth ? 'width' : 'height';\r\n            if (prominentSide === 'width') {\r\n                drawWidth = naturalWidth;\r\n                drawHeight = drawWidth / ratio;\r\n            } else {\r\n                drawWidth = naturalHeight * ratio;\r\n                drawHeight = naturalHeight;\r\n            }\r\n            receivingCanvas.width = drawWidth;\r\n            receivingCanvas.height = drawHeight;\r\n            ctx.drawImage(\r\n                image,\r\n                0,\r\n                0,\r\n                naturalWidth,\r\n                naturalHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        } else {\r\n            receivingCanvas.width = (drawWidth ?? 0);\r\n            receivingCanvas.height = (drawHeight ?? 0);\r\n            ctx.drawImage(\r\n                image,\r\n                drawCoordinateX,\r\n                drawCoordinateY,\r\n                drawWidth,\r\n                drawHeight,\r\n                0,\r\n                0,\r\n                drawWidth,\r\n                drawHeight,\r\n            );\r\n        }\r\n        if (sourceType === 'offline' && (internalSource ?? '').length <= 0) { }\r\n        else if (ratio === completedCrop.aspect) {\r\n            onCropChange(completedCrop, sourceType, interacted);\r\n        }\r\n        if (fitCropData) {\r\n            setCrop(cur => ({ ...cur, current: fitCropData }));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [completedCrop, receivingCanvas, redrawSignal, forceFit]);\r\n\r\n    useEffect(() => {\r\n        setInteracted(false);\r\n        setCrop(cur => {\r\n            if (imgRef.current != null && cur.current) {\r\n                const newValue = normalizeCrop(cur.current, imgRef.current, ratio);\r\n                return {\r\n                    current: newValue,\r\n                    completed: newValue,\r\n                };\r\n            }\r\n            return cur;\r\n        });\r\n    }, [ratio]);\r\n\r\n    const pendingId = useRef(0);\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => isLoading,\r\n        hasImage: () => (typeof internalSource === 'string' && internalSource.length > 0 && sourceType === 'offline')\r\n            || (typeof externalSource === 'string' && externalSource.length > 0 && sourceType === 'online'),\r\n        forceSource: (type: 'online' | 'offline', source, cropInfo) => {\r\n            const currentSource = sourceType === 'offline' ? internalSource : externalSource;\r\n            setInteracted(false);\r\n            if (currentSource !== source) {\r\n                setLoading(true);\r\n                setSourceType(type);\r\n                setInputMode(type);\r\n                onSourceChange(type, source);\r\n                if (type === 'offline') {\r\n                    setInternalSource(source);\r\n                } else setExternalSource(source);\r\n            }\r\n            setCrossOrigin('anonymous');\r\n            setMigrated(cropInfo.unit === '%');\r\n            pendingId.current += 1;\r\n            pendingCrop.current = {\r\n                source,\r\n                crop: cropInfo,\r\n            };\r\n            setRedrawSignal(cur => cur + 1);\r\n        }\r\n    }));\r\n\r\n    const hasImage = (sourceType === 'offline' && (internalSource ?? '').length > 0)\r\n        || (sourceType === 'online' && (externalSource ?? '').length > 0);\r\n    const isDownloadable = receivingCanvas && hasImage && !isLoading && completedCrop?.width && completedCrop?.height;\r\n    return (\r\n        <div className={`card-image-cropper ${className}`}>\r\n            <div className=\"card-image-source-input\">\r\n                {children}\r\n                <div className=\"card-image-source-input-container\">\r\n                    <div className=\"card-image-source-input-title\">\r\n                        <span className=\"field-title\">\r\n                            {title} <IconButton\r\n                                Icon={DownloadOutlined}\r\n                                containerProps={{ className: isDownloadable ? '' : 'disabled' }}\r\n                                tooltipProps={{\r\n                                    overlay: isDownloadable\r\n                                        ? language['image-cropper.download']\r\n                                        : language['image-cropper.no-download']\r\n                                }}\r\n                                onClick={() => (isDownloadable && receivingCanvas) && generateDownload(receivingCanvas, completedCrop)}\r\n                            />\r\n                        </span>\r\n                        <Radio.Group\r\n                            className=\"card-image-source-type-input\"\r\n                            onChange={e => {\r\n                                const value = e.target.value;\r\n                                setInputMode(value);\r\n                                if (\r\n                                    ((internalSource ?? '').length > 0 && value === 'offline')\r\n                                    || ((externalSource ?? '').length > 0 && value === 'online')\r\n                                ) {\r\n                                    setSourceType(value);\r\n                                    if (value === 'offline') {\r\n                                        setCrossOrigin('anonymous');\r\n                                        onSourceChange('offline', internalSource);\r\n                                    } else {\r\n                                        onSourceChange('online', externalSource);\r\n                                    }\r\n                                    setLoading(true);\r\n                                }\r\n                            }}\r\n                            value={inputMode}\r\n                        >\r\n                            <Radio.Button value={'online'} checked={inputMode === 'online'}>\r\n                                {language['image-cropper.source.online.tooltip']}\r\n                            </Radio.Button>\r\n                            <Tooltip\r\n                                placement=\"topLeft\"\r\n                                title={<div className=\"image-warning\">\r\n                                    {language['image-cropper.offline-warning']}\r\n                                </div>}\r\n                            >\r\n                                <Radio.Button value={'offline'} checked={inputMode === 'offline'}>\r\n                                    {language['image-cropper.source.offline.tooltip']}\r\n                                </Radio.Button>\r\n                            </Tooltip>\r\n                        </Radio.Group>\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'online' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input key=\"key\"\r\n                            placeholder={language['image-cropper.placeholder']}\r\n                            value={externalSource}\r\n                            onChange={applyOnlineSource}\r\n                            maxLength={512}\r\n                            allowClear\r\n                        />\r\n                        {<div className=\"online-image-tip\">\r\n                            {language['image-cropper.online-tip']}\r\n                        </div>}\r\n                    </div>\r\n                    <div className={['card-image-input', inputMode === 'offline' ? '' : 'input-inactive'].join(' ')}>\r\n                        <Input ref={fileInputRef}\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            onChange={applyOfflineSource}\r\n                            onClick={() => fileInputRef.current?.setValue('')}\r\n                        />\r\n                        <hr />\r\n                        {language['image-cropper.offline-warning']}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {beforeCropper}\r\n            <div className=\"card-cropper\" onKeyDown={() => {\r\n                /** Nudge selection also count as user interaction */\r\n                setInteracted(true);\r\n            }}>\r\n                {isLoading && <Loading.FullView />}\r\n                {(hasImage && !error) && <div className=\"card-image-option\">\r\n                    <Tooltip\r\n                        placement=\"left\"\r\n                        overlay={forceFit\r\n                            ? language['image-cropper.button.use-crop.tooltip']\r\n                            : language['image-cropper.button.force-fit.tooltip']}\r\n                    >\r\n                        <div\r\n                            className={mergeClass('image-option force-fit-option', forceFit ? 'option-active' : '')}\r\n                            onClick={() => {\r\n                                setInteracted(true);\r\n                                onForceFitChange(!forceFit);\r\n                            }}\r\n                        >\r\n                            <FullscreenOutlined />\r\n                        </div>\r\n                    </Tooltip>\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-vertical.tooltip']}>\r\n                        <div className=\"image-option alignment-center-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { width, x } = cur.completed ?? {};\r\n\r\n                                if (typeof width !== 'number' || typeof x !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    x: (100 - width) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                    {!forceFit && <Tooltip placement=\"left\" overlay={language['image-cropper.button.center-horizontal.tooltip']}>\r\n                        <div className=\"image-option alignment-middle-option\" onClick={() => {\r\n                            setInteracted(true);\r\n                            setCrop(cur => {\r\n                                const { height, y } = cur.completed ?? {};\r\n\r\n                                if (typeof height !== 'number' || typeof y !== 'number') return cur;\r\n                                const newCrop: ReactCrop.Crop = {\r\n                                    ...cur.completed,\r\n                                    y: (100 - height) / 2,\r\n                                };\r\n\r\n                                return {\r\n                                    current: newCrop,\r\n                                    completed: newCrop,\r\n                                };\r\n                            });\r\n                        }}>\r\n                            <VerticalAlignMiddleOutlined />\r\n                        </div>\r\n                    </Tooltip>}\r\n                </div>}\r\n                {(!hasImage || (error && crossorigin === undefined)) && <Empty\r\n                    description={language['image-cropper.not-found-warning']}\r\n                    image={null}\r\n                />}\r\n                <ReactCrop key={`${sourceType}-${isMigrated}-${redrawSignal}`}\r\n                    src={sourceType === 'offline' ? internalSource : externalSource}\r\n                    disabled={forceFit}\r\n                    className={forceFit ? 'force-fitted' : ''}\r\n                    imageStyle={backgroundColor\r\n                        ? {\r\n                            backgroundColor,\r\n                        }\r\n                        : {\r\n                            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/transparent-tile.png\")`\r\n                        }}\r\n                    onImageLoaded={onLoad}\r\n                    onImageError={() => {\r\n                        pendingCrop.current = {\r\n                            source: '',\r\n                            crop: null,\r\n                        };\r\n                        if (!receivingCanvas) {\r\n                            setLoading(false);\r\n                            setError('No receiving canvas');\r\n                            onTainted();\r\n                        }\r\n                        else if (\r\n                            (sourceType === 'online' && (externalSource ?? '') === '')\r\n                            || (sourceType === 'offline' && (internalSource ?? '') === '')\r\n                        ) {\r\n                            const { width, height } = receivingCanvas;\r\n                            const ctx = receivingCanvas.getContext('2d');\r\n\r\n                            ctx?.clearRect(0, 0, width, height);\r\n                            if (completedCrop) onCropChange(completedCrop, sourceType, interacted);\r\n                            onSourceLoaded(crossorigin);\r\n                            setLoading(false);\r\n                            setError('Image not found');\r\n                        } else {\r\n                            setCrossOrigin(undefined);\r\n                            onTainted();\r\n                        }\r\n                        if (crossorigin === undefined) {\r\n                            setLoading(false);\r\n                            setError('Tainted canvas');\r\n                        }\r\n                    }}\r\n                    crop={currentCrop}\r\n                    onDragStart={() => {\r\n                        setInteracted(true);\r\n                    }}\r\n                    onChange={(pixelCropData, percentCropData) => {\r\n                        const image = imgRef.current;\r\n                        if (pendingCrop.current.crop) return;\r\n                        if (!isMigrated) {\r\n                            setMigrated(true);\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(pixelCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        } else {\r\n                            setCrop(cur => {\r\n                                return {\r\n                                    ...cur,\r\n                                    current: normalizeCrop(percentCropData, image, ratio)\r\n                                };\r\n                            });\r\n                        }\r\n                    }}\r\n                    onComplete={(_, percentData) => {\r\n                        if (!pendingCrop.current.crop) setCrop(cur => ({ ...cur, completed: percentData }));\r\n                    }}\r\n                    ruleOfThirds={true}\r\n                    crossorigin={crossorigin}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n","import { Checkbox, Tooltip } from 'antd';\r\nimport { useEffect, useState } from 'react';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { mergeClass } from 'src/util';\r\nimport { LinkRotateList } from 'src/model';\r\n\r\nconst StyledLinkMarkChooser = styled.div`\r\n    --link-arrow-icon-size: 16px;\r\n    --link-arrow-border-size: 8px;\r\n    --link-arrow-half-size: 13px;\r\n    --link-arrow-full-size: calc(var(--link-arrow-half-size) * 2);\r\n    --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n    --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n    font-weight: 500;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    padding: var(--spacing-sm);\r\n    background-color: var(--main-level-4);\r\n    box-shadow: var(--bs-block);\r\n    border-radius: var(--br-lg);\r\n    display: inline-block;\r\n    .title {\r\n        line-height: 0;\r\n        margin-bottom: var(--spacing-sm);\r\n    }\r\n    .container {\r\n        display: grid;\r\n        grid-template-columns: 1fr 1fr 1fr;\r\n        grid-template-rows: 1fr 1fr 1fr;\r\n        width: calc(3 * var(--link-arrow-full-size));\r\n        height: calc(3 * var(--link-arrow-full-size));\r\n        column-gap: 0;\r\n        row-gap: 0;\r\n        background-color: var(--main-level-1);\r\n        box-shadow: 0 0 2px 1px #141414 inset;\r\n        border-radius: var(--br-lg);\r\n        margin: auto;\r\n        .link-marker-icon {\r\n            display: flex;\r\n            align-items: center;\r\n            justify-content: center;\r\n            width: 0;\r\n            height: 0;\r\n            border-style: solid;\r\n            position: absolute;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n            border-color: transparent transparent #484848 transparent;\r\n            .anticon {\r\n                font-size: var(--link-arrow-icon-size);\r\n            }\r\n        }\r\n        .link-marker-button.marker-checked .link-marker-icon {\r\n            border-color: transparent transparent var(--sub-active) transparent;\r\n        }\r\n    }\r\n    .link-marker-reset {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    .marker-checked {\r\n        color: var(--sub-active);\r\n    }\r\n    &.chooser-disabled {\r\n        .container {\r\n            background-color: var(--main-level-4);\r\n            box-shadow: 0 0 0 1px var(--sub-level-4) inset;\r\n            .link-marker-icon {\r\n                border-color: transparent transparent #585858 transparent;\r\n            }\r\n            .link-marker-button.marker-checked .link-marker-icon {\r\n                border-color: transparent transparent var(--sub-disabled) transparent;\r\n            }\r\n            .link-marker-reset .anticon {\r\n                color: var(--main-level-4);\r\n            }\r\n        }\r\n    }\r\n    &.chooser-active {\r\n        .link-marker-reset,\r\n        .link-marker-button {\r\n            cursor: pointer;\r\n            border-radius: var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LinkMarkChooser = {\r\n    active: boolean,\r\n    defaultValue?: string[],\r\n    onChange?: (value: string[]) => void,\r\n    onStatusChange: (status: boolean) => void,\r\n};\r\nexport const LinkMarkChooser = ({\r\n    active,\r\n    defaultValue = [],\r\n    onChange = () => {},\r\n    onStatusChange,\r\n}: LinkMarkChooser) => {\r\n    const [choosenArrow, setChoosenArrow] = useState(defaultValue);\r\n    const language = useLanguage();\r\n\r\n    const literalChoosenArrow = JSON.stringify(choosenArrow);\r\n    useEffect(() => {\r\n        onChange(choosenArrow);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [literalChoosenArrow]);\r\n\r\n    return <StyledLinkMarkChooser className={mergeClass('link-marker-chooser', active ? 'chooser-active' : 'chooser-disabled')}>\r\n        <div className=\"title\">\r\n            <Checkbox\r\n                checked={active}\r\n                onChange={e => onStatusChange(e.target.checked)}\r\n            >{language['link-picker.label']}</Checkbox>\r\n        </div>\r\n        <div className=\"container\">\r\n            {[...Array(9)].map((_, index) => {\r\n                const normalizedIndex = `${index + 1}`;\r\n\r\n                if (normalizedIndex === '5') return <Tooltip\r\n                    key=\"5\"\r\n                    overlay={active ? language['link-picker.reset.tooltip'] : null}\r\n                >\r\n                    <div className=\"link-marker-reset\" onClick={() => {\r\n                        if (active) setChoosenArrow([]);\r\n                    }}>\r\n                        <CloseCircleOutlined />\r\n                    </div>\r\n                </Tooltip>;\r\n\r\n                return <div key={normalizedIndex}\r\n                    className={`link-marker-button marker-${index + 1} ${choosenArrow.includes(normalizedIndex) ? 'marker-checked' : ''}`}\r\n                    onClick={() => {\r\n                        if (active) setChoosenArrow(cur => {\r\n                            let newMap = [...cur];\r\n\r\n                            if (newMap.includes(normalizedIndex)) newMap = newMap.filter(entry => entry !== normalizedIndex);\r\n                            else newMap.push(normalizedIndex);\r\n\r\n                            return newMap;\r\n                        });\r\n                    }}\r\n                >\r\n                    <div\r\n                        className={`link-marker-icon link-marker-icon-${index + 1}`}\r\n                        style={{ transform: `rotate(${LinkRotateList[index]}deg) translateY(-1px)` }}\r\n                    />\r\n                </div>;\r\n            })}\r\n        </div>\r\n    </StyledLinkMarkChooser>;\r\n};","import styled from 'styled-components';\r\nimport { Slider } from 'antd';\r\nimport { ErrorBoundary } from './error-boundary';\r\n\r\nexport const GuardedSlider = (props: React.ComponentProps<typeof Slider>) => {\r\n    return <ErrorBoundary fallback={<></>}>\r\n        <Slider {...props} />\r\n    </ErrorBoundary>;\r\n};\r\n\r\nexport const StandaloneLabel = styled.div`\r\n    font-weight: 500;\r\n    border-color: transparent;\r\n    background-color: transparent;\r\n    color: var(--color-vendor);\r\n    text-shadow: var(--ts);\r\n    user-select: none;\r\n    display: inline-block;\r\n    height: 32px;\r\n    width: var(--width-label);\r\n    line-height: 30px;\r\n    position: relative;\r\n    min-width: var(--width-label);\r\n    text-align: right;\r\n    padding-right: var(--spacing-antd);\r\n`;\r\n\r\nexport const StyledDropdownOption = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    cursor: pointer;\r\n    &:hover {\r\n        background-color: var(--sub-active);\r\n    }\r\n    &.menu-active {\r\n        background-color: var(--main-active);\r\n        &:hover {\r\n            background-color: var(--sub-active);\r\n        }\r\n    }\r\n`;\r\nexport const StyledDropdownContainer = styled.div`\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br-lg);\r\n    background-color: var(--main-level-3);\r\n    box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05); // Mimic antd\r\n    padding: var(--spacing-xs) 0;\r\n    color: var(--color);\r\n`;\r\nexport const StyledDropdown = {\r\n    Container: StyledDropdownContainer,\r\n    Option: StyledDropdownOption,\r\n};\r\n\r\nexport * from './angle-picker';\r\nexport * from './app-header';\r\nexport * from './atom';\r\nexport * from './error-boundary';\r\nexport * from './explanation';\r\nexport * from './formatting-guide';\r\nexport * from './frame-info-block';\r\nexport * from './icon-button';\r\nexport * from './input-train';\r\nexport * from './lightbox';\r\nexport * from './setting';\r\nexport * from './setting-panel';\r\nexport type { ImageCropperRef } from './image-cropper';\r\nexport { ImageCropper } from './image-cropper';\r\nexport { LinkMarkChooser } from './link-marker';\r\nexport { Loading } from './loading';","import { Button, Dropdown, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useImperativeHandle, useRef, useState } from 'react';\r\nimport { MasterSeriesCanvas } from 'src/model';\r\nimport { useCardExport, useLanguage, useMasterSeriDrawer, useSetting } from 'src/service';\r\nimport { GatewayOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forceRefocus } from 'src/util';\r\nimport { ResolutionPicker } from 'src/component';\r\n\r\nexport const ResolutionButton = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n    height: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: var(--spacing-xs) var(--spacing);\r\n    border-left: var(--bw) solid var(--sub-secondary);\r\n    border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n    color: var(--color);\r\n    cursor: pointer;\r\n    .anticon {\r\n        font-size: var(--fs-2xl);\r\n        margin-left: 0;\r\n    }\r\n    .resolution-overlay {\r\n        position: absolute;\r\n        left: 50%;\r\n        bottom: 3px; // Alignment\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        transform: translateX(-50%);\r\n    }\r\n    .resolution-icon {\r\n        transform: translateY(-5px); // Alignment\r\n    }\r\n`;\r\nconst StyledDownloadButton = styled(Button)`\r\n    padding: 0;\r\n    .button-label {\r\n        height: 100%; // Alignment\r\n        align-content: center;\r\n        border-radius: var(--br-lg);\r\n        line-height: 1.5;\r\n        .label-content {\r\n            padding: 4px 15px;\r\n            border: var(--bw) solid transparent;\r\n            border-radius: var(--br-lg);\r\n            line-height: 29px; // Alignment\r\n        }\r\n    }\r\n`;\r\nexport type DownloadButtonRef = {\r\n    download: () => void,\r\n    isPipelineRunning: () => boolean,\r\n}\r\nexport type DownloadButton = {\r\n    isTainted: boolean,\r\n    isInitializing: boolean,\r\n    imageChangeCount: number,\r\n    globalScale: number,\r\n    canvasMap: MasterSeriesCanvas,\r\n    onDownloadError: () => void,\r\n};\r\nexport const DownloadButton = forwardRef<DownloadButtonRef, DownloadButton>(({\r\n    isTainted,\r\n    isInitializing,\r\n    imageChangeCount,\r\n    globalScale,\r\n    canvasMap,\r\n    onDownloadError,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey, resolution,\r\n    })));\r\n    const { onExport } = useMasterSeriDrawer(\r\n        true,\r\n        canvasMap,\r\n        {\r\n            imageChangeCount,\r\n            isInitializing,\r\n            language,\r\n            globalScale,\r\n        },\r\n    );\r\n    const {\r\n        exportCanvasRef,\r\n    } = canvasMap;\r\n    const exportRef = useRef({\r\n        currentPipeline: Promise.resolve(),\r\n        pipelineRunning: false,\r\n    });\r\n    const [isDownloading, setDownloading] = useState(false);\r\n    const onDownloadComplete = useCallback(() => {\r\n        setDownloading(false);\r\n    }, []);\r\n    const { onSave, isPipelineRunning } = useCardExport({\r\n        isTainted,\r\n        isInitializing,\r\n        exportCanvasRef,\r\n        exportRef,\r\n        onExport,\r\n        onDownloadError,\r\n        onDownloadComplete,\r\n    });\r\n\r\n    const download = (size?: [number, number]) => {\r\n        if (isDownloading) return;\r\n        if (isTainted) {\r\n            notification.error({\r\n                message: language['prompt.download.tainted.message'],\r\n            });\r\n            return;\r\n        }\r\n        setDownloading(true);\r\n        onSave(size);\r\n        return;\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        download,\r\n        isPipelineRunning,\r\n    }));\r\n\r\n    if (isTainted) return null;\r\n    return <div className=\"save-button-container\">\r\n        <div id=\"save-button-waiting\" />\r\n        <StyledDownloadButton className=\"save-button\" id=\"save-button-ready\">\r\n            <Tooltip overlay={allowHotkey ? <>Ctrl-S / ⌘-S</> : null}>\r\n                <div className=\"button-label\">\r\n                    <div className=\"label-content\" onClick={() => download()}>\r\n                        {isDownloading\r\n                            ? language['button.download.ongoing.label']\r\n                            : language['button.download.label']}\r\n                    </div>\r\n                </div>\r\n            </Tooltip>\r\n            <Dropdown\r\n                disabled={isDownloading}\r\n                className=\"save-button-dropdown\"\r\n                placement=\"bottomRight\"\r\n                overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n            >\r\n                <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                    <GatewayOutlined className=\"resolution-icon\" />\r\n                    <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                </ResolutionButton>\r\n            </Dropdown>\r\n        </StyledDownloadButton>\r\n    </div>;\r\n});","import { Dropdown, Input, Menu, Modal, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { InternalPopover, RadioTrain, ResolutionPicker, StyledPopMarkdown, TaintedCanvasPanel } from 'src/component';\r\nimport { LanguageDataDictionary, useCard, useLanguage, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledActionIconButton } from './styled';\r\nimport copy from 'copy-to-clipboard';\r\nimport { downloadBlob, mergeClass, normalizeCardName, ygoCarderToCardMakerData, ygoCarderToExportableData } from 'src/util';\r\nimport { DownloadOutlined, CheckOutlined, CopyOutlined, FileImageOutlined, LinkOutlined } from '@ant-design/icons';\r\nimport { Card } from 'src/model';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nconst StyledExportContainer = styled.div`\r\n    ${StyledActionIconButton} {\r\n        font-size: var(--fs);\r\n        padding-bottom: var(--spacing-sm);\r\n        .icon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        &.export-download-image {\r\n            border-radius: var(--br-lg) var(--br-lg) 0 0;\r\n            border-bottom: var(--bw) solid var(--sub-secondary);\r\n            &:disabled {\r\n                border-bottom: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n    .radio-train-input-group {\r\n        flex-wrap: wrap;\r\n    }\r\n    .export-container-result {\r\n        margin-top: var(--spacing-lg);\r\n        display: grid;\r\n        gap: var(--spacing-lg);\r\n        align-items: center;\r\n        grid-template-columns: 1fr 1fr 1fr 1fr;\r\n        &.mode_other {\r\n            grid-template-columns: 1fr 1fr;\r\n        }\r\n        button {\r\n            display: flex;\r\n            flex-direction: column;\r\n            justify-content: center;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        > div {\r\n            height: 100%;\r\n        }\r\n    }\r\n    .partial-alert {\r\n        margin-top: var(--spacing-lg);\r\n        padding-bottom: var(--spacing-sm);\r\n        border-bottom: var(--bw) solid var(--sub-secondary);\r\n        + .export-container-result {\r\n            margin-top: var(--spacing-sm);\r\n        }\r\n    }\r\n    .resolution-picker {\r\n        background-color: var(--main-level-4);\r\n        border-radius: 0 0 var(--br-lg) var(--br-lg);\r\n        padding: var(--spacing-xs);\r\n        line-height: 1;\r\n        text-align: center;\r\n        border: var(--bw) solid transparent;\r\n        cursor: pointer;\r\n    }\r\n    .export-input-raw {\r\n        grid-column: 1 / -1;\r\n    }\r\n`;\r\n\r\nconst StyledCardDataCopyButton = styled(StyledActionIconButton)`\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\ntype CardDataCopyButton = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n    withText?: boolean,\r\n    disabled: boolean,\r\n}\r\nconst CardDataCopyButton = ({\r\n    data,\r\n    children,\r\n    disabled,\r\n    withText,\r\n}: CardDataCopyButton) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledCardDataCopyButton\r\n        disabled={disabled}\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay\r\n            ? <div className=\"copiable-overlay\">\r\n                {withText\r\n                    ? <>Copied&nbsp;<CheckOutlined /></>\r\n                    : <CheckOutlined />}\r\n                </div>\r\n            : null}\r\n        {children}\r\n    </StyledCardDataCopyButton>;\r\n};\r\n\r\ntype ExportMode = 'ygocarder' | 'other';\r\nexport const getExportModeDataList = (language: LanguageDataDictionary) => [\r\n    {\r\n        label: language['button.import.for-ygocarder.label'],\r\n        value: 'ygocarder' as const,\r\n        converter: ygoCarderToExportableData,\r\n    },\r\n    {\r\n        label: language['button.import.for-other.label'],\r\n        value: 'other' as const,\r\n        converter: ygoCarderToCardMakerData as (card: Card, _artRef?: HTMLCanvasElement | null) => {\r\n            isPartial: boolean;\r\n            result: Record<string, any>;\r\n        },\r\n    },\r\n];\r\n\r\nexport type ExportPanelRef = {\r\n    setCardData: (card: Card, openModal?: boolean) => void,\r\n};\r\nexport type ExportPanel = {\r\n    tainted: boolean,\r\n    artworkCanvas: HTMLCanvasElement | null,\r\n    onRequireExportData: () => void,\r\n    onRequireDownload: () => void,\r\n    onClose: () => void,\r\n};\r\nexport const ExportPanel = forwardRef(({\r\n    tainted,\r\n    artworkCanvas,\r\n    onRequireExportData,\r\n    onRequireDownload,\r\n    onClose,\r\n}: ExportPanel, ref: React.ForwardedRef<ExportPanelRef>) => {\r\n    const [visible, setVisible] = useState(false);\r\n    const [mode, setMode] = useState<ExportMode>('ygocarder');\r\n    const [internalCardData, setInternalCardData] = useState<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>({\r\n        other: { name: '', data: '', isPartial: false },\r\n        ygocarder: { name: '', data: '', isPartial: false },\r\n    });\r\n    const {\r\n        allowHotkey,\r\n        resolution,\r\n    } = useSetting(useShallow(({\r\n        setting: { allowHotkey, resolution },\r\n    }) => ({\r\n        allowHotkey,\r\n        resolution,\r\n    })));\r\n    const language = useLanguage();\r\n    const inputId = 'export-input-raw';\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n    const downloadAsFile = (name: string, rawData: string) => {\r\n        const blob = new Blob([rawData], { type: 'application/json' });\r\n        downloadBlob(\r\n            normalizeCardName(name),\r\n            blob,\r\n            'application/json',\r\n        );\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setCardData: (card: Card, openModal = true) => {\r\n            if (openModal) setVisible(true);\r\n            setInternalCardData(getExportModeDataList(language)\r\n                .map(({ value, converter }) => {\r\n                    try {\r\n                        const {\r\n                            isPartial,\r\n                            result,\r\n                        } = converter(card, artworkCanvas);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial,\r\n                            name: normalizeCardName(card.name),\r\n                            data: `${JSON.stringify(result)}`,\r\n                        };\r\n                    } catch (e) {\r\n                        console.error(e);\r\n\r\n                        return {\r\n                            value,\r\n                            isPartial: false,\r\n                            name: 'Unknown',\r\n                            data: '',\r\n                        };\r\n                    }\r\n                })\r\n                .reduce<Record<ExportMode, { name: string, data: string, isPartial: boolean }>>((prev, { data, isPartial, value, name }) => {\r\n                    prev[value] = { name, data, isPartial };\r\n\r\n                    return prev;\r\n                }, { ...internalCardData })\r\n            );\r\n        },\r\n    }));\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible && mode === 'ygocarder') focusInput();\r\n        }, 100);\r\n    }, [mode, focusInput, visible]);\r\n\r\n    const {\r\n        data,\r\n        isPartial,\r\n        name,\r\n    } = internalCardData[mode];\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={language['button.export-modal.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={() => {\r\n                setVisible(false);\r\n                onClose();\r\n            }}\r\n            cancelText={language['converter.cancel.label']}\r\n            okButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            width={600}\r\n            destroyOnClose={false}\r\n        >\r\n            <StyledExportContainer>\r\n                <RadioTrain<ExportMode>\r\n                    optionList={getExportModeDataList(language)}\r\n                    onChange={mode => setMode(mode)}\r\n                    value={mode}\r\n                />\r\n                {(mode === 'other' && isPartial) && <div className=\"partial-alert\">\r\n                    <b>{language['service.decode.partial.message']}</b>\r\n                    <br />\r\n                    {language['service.decode.partial.description']}\r\n                </div>}\r\n                <div className={mergeClass('export-container-result', `mode_${mode}`)}>\r\n                    <InternalPopover content={(tainted && mode === 'other') ? <TaintedCanvasPanel /> : undefined}>\r\n                        <div>\r\n                            <StyledActionIconButton\r\n                                disabled={tainted && mode === 'other'}\r\n                                onClick={() => {\r\n                                    const blob = new Blob([data], { type: 'application/json' });\r\n                                    downloadBlob(\r\n                                        normalizeCardName(name),\r\n                                        blob,\r\n                                        'application/json',\r\n                                    );\r\n                                }}\r\n                            >\r\n                                <div className=\"icon\"><DownloadOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.download-button.label']}\r\n                                </div>\r\n                            </StyledActionIconButton>\r\n                        </div>\r\n                    </InternalPopover>\r\n                    {mode === 'ygocarder' && <InternalPopover\r\n                        content={isPartial\r\n                            ? <StyledPopMarkdown>\r\n                                {language['prompt.export.offline-warning.message']}\r\n                            </StyledPopMarkdown>\r\n                            : undefined}\r\n                    >\r\n                        <div>\r\n                            <CardDataCopyButton\r\n                                disabled={isPartial}\r\n                                data={internalCardData.ygocarder.data}\r\n                                withText\r\n                            >\r\n                                <div className=\"icon\"><CopyOutlined /></div>\r\n                                <div className=\"label\">\r\n                                    {language['button.export-modal.copy-button.label']}\r\n                                </div>\r\n                            </CardDataCopyButton>\r\n                        </div>\r\n                    </InternalPopover>}\r\n                    {mode === 'ygocarder' && <div>\r\n                        <CardDataCopyButton\r\n                            disabled={isPartial}\r\n                            data={window.location.href}\r\n                            withText\r\n                        >\r\n                            <div className=\"icon\"><LinkOutlined /></div>\r\n                            <div className=\"label\">\r\n                                {language['button.export-modal.share-button.label']}\r\n                            </div>\r\n                        </CardDataCopyButton>\r\n                    </div>}\r\n                    <div>\r\n                        <InternalPopover content={tainted ? <TaintedCanvasPanel /> : undefined}>\r\n                            <div>\r\n                                <StyledActionIconButton\r\n                                    disabled={tainted}\r\n                                    className=\"export-download-image\"\r\n                                    onClick={onRequireDownload}\r\n                                >\r\n                                    <div className=\"icon\"><FileImageOutlined /></div>\r\n                                    <div className=\"label\">\r\n                                        {language['button.export-modal.save-button.label']}\r\n                                    </div>\r\n                                </StyledActionIconButton>\r\n                            </div>\r\n                        </InternalPopover>\r\n                        <Dropdown overlay={<ResolutionPicker />}>\r\n                            <div className=\"resolution-picker\">\r\n                                {resolution[0]} × {resolution[1]}\r\n                            </div>\r\n                        </Dropdown>\r\n                    </div>\r\n                    {(mode === 'ygocarder' && !isPartial) && <Input.TextArea\r\n                        id={inputId}\r\n                        className=\"export-input-raw\"\r\n                        size=\"small\"\r\n                        value={internalCardData.ygocarder.data}\r\n                        rows={5}\r\n                    />}\r\n                </div>\r\n            </StyledExportContainer>\r\n        </Modal>\r\n        <Tooltip overlay={allowHotkey ? <>Ctrl-D / ⌘-D</> : null}>\r\n            <button className=\"primary-button export-button\" onClick={() => {\r\n                onRequireExportData();\r\n                setVisible(true);\r\n            }}>\r\n                {language['button.export.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Dropdown \r\n            overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                {getExportModeDataList(language).map(({ converter, label }, index) => {\r\n                    return <Menu.Item key={`${index}`}\r\n                        onClick={() => {\r\n                            try {\r\n                                const card = useCard.getState().card;\r\n                                const {\r\n                                    result,\r\n                                } = converter(card, artworkCanvas);\r\n\r\n                                downloadAsFile(\r\n                                    normalizeCardName(card.name),\r\n                                    `${JSON.stringify(result)}`,\r\n                                );\r\n                            } catch (e) {\r\n                                console.error(e);\r\n                                notification.error({\r\n                                    message: language['error.export.message'],\r\n                                    description: language['error.export.description'],\r\n                                });\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </Menu.Item>;\r\n                })}\r\n            </Menu>}\r\n        >\r\n            <StyledActionIconButton className=\"secondary-button export-custom\">\r\n                <DownloadOutlined />\r\n            </StyledActionIconButton>\r\n        </Dropdown>\r\n    </>;\r\n});","import { Menu, Dropdown, Tooltip, Modal, Input, notification } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport { decodeCard, LanguageDataDictionary, useCard } from 'src/service';\r\nimport { StyledActionIconButton } from './styled';\r\nimport { Card, getEmptyCard, YgoproDeckCard } from 'src/model';\r\nimport {\r\n    isYgoprodeckImage,\r\n    // uploadToImgur,\r\n} from 'src/util';\r\nimport { JSONUncrush } from 'src/3rd';\r\n\r\nconst StyledImportContainer = styled.div`\r\n    .prompt-alert {\r\n        margin-bottom: var(--spacing-sm);\r\n        .alert {\r\n            color: var(--main-danger);\r\n        }\r\n    }\r\n    .import-container-upload {\r\n        margin-top: var(--spacing-sm);\r\n        text-align: center;\r\n        .import-custom,\r\n        .import-empty {\r\n            font-size: var(--fs);\r\n        }\r\n        .import-custom {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .option-separator {\r\n            display: inline-block;\r\n            margin-right: var(--spacing);\r\n        }\r\n        ${StyledActionIconButton} {\r\n            background-color: var(--main-level-4);\r\n            border: var(--bw) solid var(--color-contrast);\r\n            &:hover {\r\n                background-color: var(--sub-level-4);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type ImportPanelRef = {\r\n    requestImport: (mode: 'replace' | 'merge' | 'new') => void,\r\n};\r\nexport type ImportPanel = {\r\n    language: LanguageDataDictionary,\r\n    allowHotkey: boolean,\r\n    onImport: (\r\n        data: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => void,\r\n    onClose: () => void,\r\n};\r\nexport const ImportPanel = forwardRef<ImportPanelRef, ImportPanel>(({\r\n    allowHotkey,\r\n    language,\r\n    onImport,\r\n    onClose,\r\n}, ref) => {\r\n    const directUploadId = 'import-direct-upload';\r\n    const uploadId = 'import-upload';\r\n    const inputId = 'import-textarea';\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const ygoCarderImportInputRef = useRef<HTMLInputElement>(null);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [mode, setMode] = useState<'merge' | 'replace' | 'new'>('replace');\r\n    const [visible, setVisible] = useState(false);\r\n    const [loading, setLoading] = useState(false);\r\n    const focusInput = useCallback(() => {\r\n        const target = document.getElementById(inputId) as HTMLTextAreaElement | null;\r\n        if (target) {\r\n            target.focus();\r\n            target.select();\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            if (visible) focusInput();\r\n        }, 100);\r\n    }, [focusInput, visible]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        requestImport: mode => {\r\n            setMode(mode);\r\n            setVisible(true);\r\n        }\r\n    }));\r\n\r\n    const cleanup = () => {\r\n        setInputKey(cur => cur + 1);\r\n        setVisible(false);\r\n        setLoading(false);\r\n        onClose();\r\n    };\r\n    const startImport = async (\r\n        cardData: string | Record<string, any> | null,\r\n        imageSurvey = false,\r\n    ) => {\r\n        try {\r\n            if (cardData) {\r\n                const {\r\n                    card: decodedCard,\r\n                    isPartial,\r\n                } = decodeCard(\r\n                    cardData,\r\n                    (mode === 'replace' || mode === 'new') ? undefined : useCard.getState().card,\r\n                );\r\n\r\n                if (isPartial) {\r\n                    notification.info({\r\n                        message: language['service.decode.partial.message'],\r\n                        description: language['service.decode.partial.description'],\r\n                    });\r\n                }\r\n\r\n                /**\r\n                 * Upload image into imgur for usable link. @todo Something need to consider here:\r\n                 * * The image link change each time even for the same card, so it's a huge waste of resource.\r\n                 * * The amount of cards is so large that keeping a dictionary to map them is not feasible, and may require constant update.\r\n                 * * The best method right now is build another dedicated server that can forward resource from YGOPRODeck as an usuable link, which is way more than the scope of this project.\r\n                 * \r\n                 * Disable imgur import for now, it is nowhere near enough capacity for current user base. We stick with the base import, as even though it taint the canvas, it is guarantee to have image available and also we can always purge the canvas when user swithching source.\r\n                 */\r\n                if (imageSurvey && decodedCard.artSource === 'online' && isYgoprodeckImage(decodedCard.art)) {\r\n                    const surveyedDecodedCard: Card = { ...decodedCard };\r\n                    // try {\r\n                    //     const imgurResponse = await uploadToImgur(decodedCard.art);\r\n                    //     if (imgurResponse.status !== 200) {\r\n                    //         surveyedDecodedCard.art = 'https://i.imgur.com/jjtCuG5.png';\r\n                    //         throw new Error('Imgur response status: ' + imgurResponse.status);\r\n                    //     }\r\n                    //     const imgurResponseData: { data: { link: string } } = await imgurResponse.json();\r\n\r\n                    //     surveyedDecodedCard.art = imgurResponseData.data.link;\r\n                    // } catch (e) {\r\n                    //     /** Failing the upload process does not terminate the import process */\r\n                    //     console.error('Upload error:', e);\r\n                    //     notification.error({\r\n                    //         message: language['prompt.import.imgur.message'],\r\n                    //         description: language['prompt.import.imgur.description'],\r\n                    //     });\r\n                    // }\r\n                    onImport(surveyedDecodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                } else {\r\n                    onImport(decodedCard, {\r\n                        forcePurityCheck: true,\r\n                        writeOnCurrentCard: mode === 'new' ? false : true,\r\n                        addToList: mode === 'new',\r\n                    });\r\n                }\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        }\r\n    };\r\n    const getFileAndImport = (fileList?: FileList | null) => {\r\n        if (fileList) {\r\n            for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                const targetFile = fileList.item(cnt);\r\n                if (!targetFile) continue;\r\n\r\n                const reader = new FileReader();\r\n                reader.onload = ({ target }) => {\r\n                    if (!target) return;\r\n\r\n                    const { result } = target;\r\n                    if (typeof result !== 'string') return;\r\n                    startImport(result);\r\n                };\r\n                reader.readAsText(targetFile);\r\n                break;\r\n            }\r\n        };\r\n    };\r\n    const startRequest = async () => {\r\n        try {\r\n            const target = document.getElementById(inputId) as HTMLInputElement;\r\n            if (target) {\r\n                const { value } = target;\r\n                const normalizedValue = value.trim() ?? '';\r\n                let uncrushedValue = '';\r\n                try {\r\n                    uncrushedValue = JSONUncrush(decodeURIComponent(normalizedValue));\r\n                } catch (e) {}\r\n                let cardData: string | null | Record<string, any> = null;\r\n\r\n                /** Potential JSON data */\r\n                if (normalizedValue.startsWith('{') && normalizedValue.endsWith('}')) {\r\n                    cardData = normalizedValue;\r\n                }\r\n                /** Potential crushed data */\r\n                else if (uncrushedValue.startsWith('{') && uncrushedValue.endsWith('}')) {\r\n                    cardData = JSON.parse(uncrushedValue);\r\n                }\r\n                else {\r\n                    const ygoproDeckApi = normalizedValue.startsWith('https://db.ygoprodeck.com/api')\r\n                        /** Potential ygopro deck API */\r\n                        ? normalizedValue\r\n                        /** Attempt to search as a valid card name, an avid user may found out that the text is append as-is, so it's possible to use a rather complex query */\r\n                        : `https://db.ygoprodeck.com/api/v7/cardinfo.php?fname=${normalizedValue}&num=10&offset=0&misc=yes`;\r\n                    setLoading(true);\r\n                    const response = await fetch(ygoproDeckApi);\r\n                    if (!response.ok) {\r\n                        throw new Error(`Response status: ${response.status}`);\r\n                    }\r\n\r\n                    const baseCardData: { data: YgoproDeckCard[] } = await response.json();\r\n                    /** We find full match here, as fuzzy search may not sort it on top, for example \"raigeki\" will match \"Anti Raigeki\" first, instead of the base \"Raigeki\", if no full match is available, we go for most popular result */\r\n                    cardData = baseCardData.data.find(({ name }) => name.toLowerCase() === normalizedValue.toLowerCase())\r\n                        ?? baseCardData.data.sort((l, r) => {\r\n                            const lMisc = l.misc_info?.[0];\r\n                            const rMisc = r.misc_info?.[0];\r\n\r\n                            if (!lMisc || !rMisc) return 0;\r\n\r\n                            /** We prioritize most recently popular card, then all-time popular card */\r\n                            const viewWeekRatio = (lMisc.viewsweek + 1) / (rMisc.viewsweek + 1);\r\n                            if (viewWeekRatio > 2) return rMisc.viewsweek - lMisc.viewsweek;\r\n\r\n                            return rMisc.views - lMisc.views;\r\n                        })[0];\r\n                }\r\n\r\n                await startImport(cardData, true);\r\n            }\r\n        } catch (e) {\r\n            console.error('Import error:', e);\r\n            notification.error({\r\n                message: language['error.import.error.message'],\r\n                description: language['error.import.error.description'],\r\n            });\r\n        } finally {\r\n            cleanup();\r\n        }\r\n    };\r\n\r\n    return <>\r\n        <Modal\r\n            visible={visible}\r\n            title={mode === 'merge'\r\n                ? language['button.import.merge.label']\r\n                : language['button.import.label']}\r\n            className=\"global-overlay\"\r\n            onCancel={cleanup}\r\n            okText={language['prompt.import.ok.label']}\r\n            confirmLoading={loading}\r\n            cancelButtonProps={{\r\n                style: { display: 'none' },\r\n            }}\r\n            destroyOnClose={false}\r\n            onOk={startRequest}\r\n        >\r\n            <StyledImportContainer>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"prompt-alert\">\r\n                        {language['prompt.import.instruction.line-1']}\r\n                        <br />\r\n                        {language['prompt.import.instruction.line-2']}\r\n                        <br />\r\n                        <span className=\"alert\">{language['prompt.import.instruction.alert.line-1']}</span>\r\n                    </div>\r\n                    : null}\r\n                <div className=\"import-container-input\">\r\n                    <Input.TextArea key={`input-${inputKey}`}\r\n                        id={inputId}\r\n                        className=\"import-input-raw\"\r\n                        size=\"small\"\r\n                        placeholder={language['prompt.import.message']}\r\n                        disabled={loading}\r\n                        onPressEnter={startRequest}\r\n                        rows={4}\r\n                    />\r\n                </div>\r\n                {mode !== 'merge'\r\n                    ? <div className=\"import-container-upload\">\r\n                        <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                        <StyledActionIconButton\r\n                            className=\"import-custom\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(uploadId);\r\n                                if (target) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`file-input-${inputKey}`} ref={ygoCarderImportInputRef}\r\n                                type=\"file\"\r\n                                id={uploadId}\r\n                                accept=\"application/json\"\r\n                                className=\"import-upload-input\"\r\n                                onChange={() => {\r\n                                    const fileList = ygoCarderImportInputRef.current?.files;\r\n\r\n                                    getFileAndImport(fileList);\r\n                                    cleanup();\r\n                                }}\r\n                            />\r\n                            {language['button.import.tooltip']}\r\n                        </StyledActionIconButton>\r\n                        {mode === 'new' && <>\r\n                            <span className=\"option-separator\">{language['prompt.import.alternative.label']}</span>\r\n                            <StyledActionIconButton\r\n                                className=\"import-empty\"\r\n                                onClick={() => {\r\n                                    startImport(getEmptyCard());\r\n                                    cleanup();\r\n                                }}\r\n                            >\r\n                                {language['button.empty.label']}\r\n                            </StyledActionIconButton>\r\n                        </>}\r\n                    </div>\r\n                    : null}\r\n            </StyledImportContainer>\r\n        </Modal>\r\n        <Tooltip\r\n            overlay={allowHotkey\r\n                ? <div className=\"center\">\r\n                    <div>Ctrl-E / ⌘-E</div>\r\n                    <div>Ctrl-G / ⌘-G{language['prompt.import.merge.tooltip']}</div>\r\n                </div>\r\n                : null}\r\n        >\r\n            <button\r\n                className=\"primary-button import-button\"\r\n                onClick={() => {\r\n                    setMode('replace');\r\n                    setVisible(true);\r\n                }}\r\n            >\r\n                {language['button.import.label']}\r\n            </button>\r\n        </Tooltip>\r\n        <Tooltip overlay={language['button.import.tooltip']}>\r\n            <StyledActionIconButton\r\n                className=\"secondary-button import-custom\"\r\n                onClick={() => {\r\n                    const target = document.getElementById(directUploadId);\r\n                    if (target) {\r\n                        target.click();\r\n                    }\r\n                }}\r\n            >\r\n                <input key={`direct-file-input-${inputKey}`} ref={ygoCarderImportDirectInputRef}\r\n                    type=\"file\"\r\n                    id={directUploadId}\r\n                    accept=\"application/json\"\r\n                    className=\"import-upload-input\"\r\n                    onChange={() => {\r\n                        const fileList = ygoCarderImportDirectInputRef.current?.files;\r\n\r\n                        getFileAndImport(fileList);\r\n                        cleanup();\r\n                    }}\r\n                />\r\n                <UploadOutlined />\r\n            </StyledActionIconButton>\r\n        </Tooltip>\r\n    </>;\r\n});\r\n\r\nexport const StyledImportDropdownOverlay = styled(Menu)`\r\n    .ant-dropdown-menu-item {\r\n        padding: 0;\r\n    }\r\n    .import-upload-button {\r\n        /** Mimic antd */\r\n        cursor: pointer;\r\n        padding: 5px 12px;\r\n        background: transparent;\r\n        border: none;\r\n        width: 100%;\r\n        text-align: left;\r\n    }\r\n    .import-upload-input {\r\n        display: none;\r\n    }\r\n`;\r\n/** Currently the importer can detect both ygocarder and other vendor data, so no need for user to pick. */\r\nexport type UnusedImportButton = ImportPanel & {\r\n    importData: (\r\n        event?: {\r\n            preventDefault: () => void;\r\n        },\r\n        fromHotkey?: boolean,\r\n        directData?: string,\r\n    ) => void,\r\n};\r\nexport const UnusedImportButton = ({\r\n    language,\r\n    importData,\r\n}: UnusedImportButton) => {\r\n    const ygoCarderImportDirectInputRef = useRef<HTMLInputElement>(null);\r\n    const otherVendorImportInputRef = useRef<HTMLInputElement>(null);\r\n\r\n    return <Dropdown\r\n        forceRender={true}\r\n        visible={true}\r\n        overlay={<StyledImportDropdownOverlay onClick={e => e.domEvent.stopPropagation()}>\r\n            {[\r\n                {\r\n                    label: language['button.import.for-ygocarder.label'],\r\n                    id: 'for-ygocarder',\r\n                    ref: ygoCarderImportDirectInputRef,\r\n                    // converter: undefined,\r\n                },\r\n                {\r\n                    label: language['button.import.for-other.label'],\r\n                    id: 'for-other',\r\n                    ref: otherVendorImportInputRef,\r\n                    // converter: ygoCarderToCardMakerData,\r\n                },\r\n            ].map(({ label, id, ref }) => {\r\n                return <Menu.Item key={`${id}`}>\r\n                    <input ref={ref}\r\n                        type=\"file\"\r\n                        id={id}\r\n                        accept=\"application/json\"\r\n                        className=\"import-upload-input\"\r\n                        onChange={() => {\r\n                            const fileList = ref.current?.files;\r\n                            if (fileList) {\r\n                                for (let cnt = 0; cnt <= fileList.length; cnt++) {\r\n                                    const targetFile = fileList.item(cnt);\r\n                                    if (!targetFile) continue;\r\n\r\n                                    const reader = new FileReader();\r\n                                    reader.onload = ({ target }) => {\r\n                                        if (!target) return;\r\n\r\n                                        const { result } = target;\r\n                                        if (typeof result !== 'string') return;\r\n                                        importData(undefined, false, result);\r\n                                    };\r\n                                    reader.readAsText(targetFile);\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <button\r\n                        className=\"import-upload-button\"\r\n                        type=\"button\"\r\n                        onClick={() => {\r\n                            const target = document.getElementById(id);\r\n                            if (target) {\r\n                                target.click();\r\n                            }\r\n                        }}\r\n                    >\r\n                        {label}\r\n                    </button>\r\n                </Menu.Item>;\r\n            })}\r\n        </StyledImportDropdownOverlay>}\r\n    >\r\n        <button className=\"secondary-button import-custom\">\r\n            <UploadOutlined />\r\n        </button>\r\n    </Dropdown>;\r\n};","import {\r\n    frameList,\r\n    IconList,\r\n    AttributeList,\r\n    StickerList,\r\n    getFoilList,\r\n    CondenseTolerantLabelMap,\r\n    NameFontDataMap,\r\n    NO_ATTRIBUTE,\r\n    NO_ICON,\r\n    ArtFinishMap,\r\n    FinishMap,\r\n    FoilDictionary,\r\n    NO_STICKER,\r\n    PendulumSizeMap,\r\n} from '../../model';\r\nimport { FrameInfoBlock } from 'src/component';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Tooltip } from 'antd';\r\n\r\nexport const FormatButtonList = [\r\n    {\r\n        label: 'OCG',\r\n        value: 'ocg',\r\n        props: {\r\n            className: 'ocg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n    {\r\n        label: 'TCG',\r\n        value: 'tcg',\r\n        props: {\r\n            className: 'tcg-button',\r\n            style: { fontWeight: 'bold' } as React.CSSProperties\r\n        },\r\n    },\r\n];\r\n\r\nexport const getFoilButtonList = (dictionary: FoilDictionary) => {\r\n    return getFoilList(dictionary).map(({ color, name, label }) => ({\r\n        label: name === 'normal' ? <CloseCircleOutlined /> : label,\r\n        value: name,\r\n        props: {\r\n            style: {\r\n                color,\r\n                fontWeight: 'bold',\r\n            } as React.CSSProperties,\r\n        }\r\n    }));\r\n};\r\n\r\nexport const getFinishList = (dictionary: Record<string, string>) => Object.values(FinishMap).map(({ value, label, labelKey, tooltipKey }) => ({\r\n    label: labelKey ? dictionary[labelKey] : label,\r\n    tooltip: tooltipKey ? dictionary[tooltipKey] : undefined,\r\n    value,\r\n}));\r\n\r\nexport const getNameFontOptionList = (dictionary: Record<string, string>) => Object.values(NameFontDataMap).map(({ value, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value,\r\n}));\r\n\r\nexport const ArtFinishButtonList = [\r\n    { value: 'normal', label: <CloseCircleOutlined /> },\r\n    ...Object.values(ArtFinishMap).map(({ value, label }) => ({\r\n        label,\r\n        value,\r\n    })),\r\n];\r\n\r\nexport const getFrameButtonList = () => frameList.map(({ name, nameKey, labelBackgroundColor, labelBackgroundColorList, edition }) => ({\r\n    label: <FrameInfoBlock\r\n        labelBackgroundColor={labelBackgroundColor}\r\n        labelBackgroundColorList={labelBackgroundColorList}\r\n        nameKey={nameKey}\r\n    />,\r\n    value: name,\r\n    edition,\r\n}));\r\n\r\nexport const getAttributeList = (format: string, dictionary: Record<string, string>, showCreativeOption: boolean) => AttributeList\r\n    .map(({ name, nameKey, isCreative, supportFormat }) => ({\r\n        label: name === NO_ATTRIBUTE\r\n            ? <CloseCircleOutlined />\r\n            : <Tooltip overlay={dictionary[nameKey]}>\r\n                <img\r\n                    alt={dictionary[nameKey]}\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${name.toLowerCase()}.png`}\r\n                />\r\n                </Tooltip>,\r\n        value: name,\r\n        isCreative,\r\n        supportFormat,\r\n    }))\r\n    .filter(({ isCreative, supportFormat }) => (isCreative === false || isCreative === showCreativeOption) && supportFormat.includes(format));\r\n\r\nexport const getSTIconButtonList = (dictionary: Record<string, string>) => IconList.map(({ value, nameKey }) => ({\r\n    label: value === NO_ICON\r\n        ? <CloseCircleOutlined />\r\n        : <Tooltip overlay={dictionary[nameKey]}>\r\n            <img\r\n                alt={dictionary[nameKey]}\r\n                src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${value.toLowerCase()}.png`}\r\n            />\r\n        </Tooltip>,\r\n    value,\r\n}));\r\n\r\nexport const StarButtonList = [...Array(14)].map((_, index) => ({ label: index, value: index }));\r\n\r\nexport const StickerButtonList = StickerList.map(({ value }) => ({\r\n    label: value === NO_STICKER\r\n        ? <CloseCircleOutlined />\r\n        : <img alt={value} src={`${process.env.PUBLIC_URL}/asset/image/sticker/sticker-${value.toLowerCase()}.png`} />,\r\n    value,\r\n}));\r\n\r\nexport const CondenseThresholdButtonList = Object\r\n    .entries(CondenseTolerantLabelMap)\r\n    .map(([key, { label, order }]) => {\r\n        return {\r\n            label,\r\n            value: key,\r\n            order\r\n        };\r\n    })\r\n    .sort((l, r) => l.order - r.order);\r\n\r\nexport const getPendulumSizeList = (dictionary: Record<string, string>) => Object.values(PendulumSizeMap).map(({ key, labelKey }) => ({\r\n    label: dictionary[labelKey],\r\n    value: key,\r\n}));","// import { useCallback, useEffect, useState } from 'react';\r\n// import Moveable from 'react-moveable';\r\n// import { EllipsisOutlined } from '@ant-design/icons';\r\nimport { Explanation, StyledPopMarkdown } from 'src/component';\r\nimport { useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\n\r\nexport function insertAtCursor(target: HTMLTextAreaElement, myValue: string) {\r\n    //IE support\r\n    if ((document as any).selection) {\r\n        target.focus();\r\n        const sel = (document as any).selection.createRange();\r\n        sel.text = myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n    //MOZILLA and others\r\n    else if (target.selectionStart || target.selectionStart === 0) {\r\n        const startPos = target.selectionStart;\r\n        const endPos = target.selectionEnd;\r\n        target.value = target.value.substring(0, startPos)\r\n            + myValue\r\n            + target.value.substring(endPos, target.value.length);\r\n        target.selectionStart = startPos + myValue.length;\r\n        target.selectionEnd = startPos + myValue.length;\r\n        target.focus();\r\n\r\n        return {\r\n            value: target.value,\r\n            position: startPos + myValue.length,\r\n        };\r\n    } else {\r\n        target.value += myValue;\r\n\r\n        return {\r\n            value: target.value,\r\n            position: 0,\r\n        };\r\n    }\r\n}\r\n\r\nconst StyledCharPickerContainer = styled.div`\r\n    z-index: 10;\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    align-items: center;\r\n    column-gap: var(--spacing-sm);\r\n\r\n    .char-picker {\r\n        z-index: 1;\r\n        display: grid;\r\n        grid-template-columns: repeat(auto-fit, minmax(30px, 1fr));\r\n        button.ant-btn {\r\n            padding: 0 var(--spacing-xs);\r\n        }\r\n        .handler,\r\n        .ant-btn {\r\n            background-color: var(--main-level-1);\r\n            color: var(--color-heavy);\r\n            text-shadow: var(--ts);\r\n            font-family: Segoe UI Symbol, sans-serif;\r\n            border: 1px solid var(--sub-level-1);\r\n            border-radius: 0;\r\n            padding: 0 var(--spacing);\r\n            + .ant-btn {\r\n                border-left-width: 0;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &:first-child {\r\n                border-radius: var(--br) 0 0 var(--br);\r\n            }\r\n            &:last-child {\r\n                border-radius: 0 var(--br) var(--br) 0;\r\n            }\r\n        }\r\n        /** Currently char picker no longer movable */\r\n        /* .handler {\r\n            cursor: grabbing;\r\n            background-color: var(--main-level-2);\r\n            height: unset;\r\n            font-size: var(--fs-xl);\r\n            height: var(--fs-xl);\r\n            line-height: 1;\r\n            padding: 0;\r\n            text-align: center;\r\n        } */\r\n    }\r\n    .moveable-control-box {\r\n        .moveable-control.moveable-origin,\r\n        .moveable-line.moveable-direction {\r\n            border-color: transparent;\r\n            background: none;\r\n        }\r\n    }\r\n`;\r\n\r\n/** The dragging experience is not good. Currently turn it off for now and glue it into effect's textarea. */\r\nexport type CharPicker = {\r\n    targetId: string,\r\n    onPick?: (value: string, letter: string) => void,\r\n}\r\nexport const CharPicker = ({\r\n    targetId = '',\r\n    onPick = () => {},\r\n}: CharPicker) => {\r\n    const language = useLanguage();\r\n    // const [target, setTarget] = useState<HTMLElement | null>(null);\r\n    const internalOnPick = (letter: string) => {\r\n        const inputTarget = document.getElementById(targetId) as HTMLTextAreaElement;\r\n        if (inputTarget) {\r\n            const { value } = insertAtCursor(inputTarget, letter);\r\n\r\n            onPick(value, letter);\r\n        }\r\n    };\r\n\r\n    // useEffect(() => {\r\n    //     setTarget(document.getElementById('char-picker'));\r\n    // }, []);\r\n\r\n    // const onDrag = useCallback(({\r\n    //     target,\r\n    //     left, top,\r\n    //     transform,\r\n    // }) => {\r\n    //     target!.style.left = `${left}px`;\r\n    //     target!.style.top = `${top}px`;\r\n    //     target!.style.transform = transform;\r\n    // }, []);\r\n\r\n    /** No tabIndex here because this is not an essential input, but rather a QoL component */\r\n    return <StyledCharPickerContainer tabIndex={-1} className=\"char-picker-container\">\r\n        {<div id={'char-picker'} className=\"char-picker\">\r\n            {/* <div className=\"handler\">\r\n                <EllipsisOutlined />\r\n            </div> */}\r\n            {[\r\n                '∞',\r\n                '☆',\r\n                '★',\r\n                '●',\r\n                '©',\r\n                '™',\r\n                'Ɐ',\r\n                'Я',\r\n                '∅',\r\n                '※',\r\n            ].map(entry => {\r\n                return <button key={entry}\r\n                    tabIndex={-1}\r\n                    className=\"ant-btn\"\r\n                    onClick={() => internalOnPick(entry)}\r\n                >{entry}</button>;\r\n            })}\r\n        </div>}\r\n        <div className=\"char-picker-guideline\">\r\n            <Explanation\r\n                content={<StyledPopMarkdown>\r\n                    {language['input.char-picker.guide.header']}\r\n                    <ul>\r\n                        <li>{language['input.char-picker.guide.instruction-1']}</li>\r\n                        <li>{language['input.char-picker.guide.instruction-2']}</li>\r\n                    </ul>\r\n                </StyledPopMarkdown>}\r\n            />\r\n        </div>\r\n        {/* <Moveable\r\n            target={target}\r\n            container={null}\r\n            edge={false}\r\n            draggable={true}\r\n            throttleDrag={0}\r\n            onDrag={onDrag}\r\n        /> */}\r\n    </StyledCharPickerContainer>;\r\n};","import { Button, InputNumber } from 'antd';\r\nimport { ForwardedRef, forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ColorPoint, GradientPicker } from 'react-linear-gradient-picker';\r\nimport { getDefaultGradientPalette, mergeClass, parsePalette, stringifyPalette } from 'src/util';\r\nimport debounce from 'lodash.debounce';\r\nimport { useLanguage } from 'src/service';\r\nimport { ANGLE_PICKER_CLASSNAME, CircularAnglePicker } from 'src/component';\r\nimport 'react-linear-gradient-picker/dist/index.css';\r\nimport './gradient-picker.scss';\r\n\r\ntype WrappedColorPicker = {\r\n    disabled?: boolean,\r\n    color?: string,\r\n    onSelect?: (color: string, opacity?: number) => void,\r\n    onOffsetChange?: (id: number, offset: string) => void,\r\n    onRemove?: (id: number) => void,\r\n    opacity?: number,\r\n};\r\ntype WrappedColorPickerRef = {\r\n    setColor: (stopColor: ColorPoint) => void,\r\n    setCurrentOffset: (id: number, offset: string) => void,\r\n};\r\nconst WrappedColorPicker = forwardRef(({\r\n    disabled,\r\n    color,\r\n    onSelect,\r\n    onOffsetChange,\r\n    onRemove,\r\n}: WrappedColorPicker, ref: ForwardedRef<WrappedColorPickerRef>) => {\r\n    const language = useLanguage();\r\n    const [internalColor, setInternalColor] = useState(color);\r\n    const [internalOffset, setInternalOffset] = useState(0);\r\n    const [internalId, setInternalId] = useState(-1);\r\n    const debouncedOnChange = useRef(debounce(setInternalOffset, 250)).current;\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setColor: colorInfo => {\r\n            if (colorInfo) {\r\n                const { color, offset, id } = colorInfo;\r\n                const { min, max, round } = Math;\r\n    \r\n                setInternalColor(color);\r\n                setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n                setInternalId(id);\r\n            }\r\n        },\r\n        setCurrentOffset: (id, offset) => {\r\n            const { min, max, round } = Math;\r\n\r\n            if (id === internalId) setInternalOffset(max(0, min(100, round(parseFloat(offset) * 100))));\r\n        }\r\n    }));\r\n\r\n    useEffect(() => {\r\n        if (internalId > 0) onOffsetChange?.(internalId, `${internalOffset / 100}`);\r\n    }, [internalId, internalOffset, onOffsetChange]);\r\n\r\n    return <div className=\"stop-point-control-panel\">\r\n        <div className=\"stop-point-offset-input\">\r\n            <div>\r\n                {language['input.name-style.gradient.color-stop.label']}: <InputNumber\r\n                    value={internalOffset}\r\n                    size=\"small\"\r\n                    max={100} min={0}\r\n                    onChange={value => debouncedOnChange(typeof value === 'string' ? parseInt(value) : value ?? 0)}\r\n                />\r\n            </div>\r\n            <Button className=\"remove-stop-color\" size=\"small\" disabled={disabled} onClick={() => onRemove?.(internalId)}>\r\n                {language['input.name-style.gradient.color-remove.label']}\r\n            </Button>\r\n        </div>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    }\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onSelect?.(color.hex);\r\n            }}\r\n        />\r\n    </div>;\r\n});\r\n\r\nconst MAX_STOP_POINT = 20;\r\nconst getPaletteInfo = (newColorList: ColorPoint[]) => {\r\n    return {\r\n        colorList: newColorList,\r\n        raw: stringifyPalette(newColorList),\r\n    };\r\n};\r\nexport type TextGradientPicker = {\r\n    palette?: string,\r\n    angle?: number,\r\n    memoizedOnChange: (palette: ColorPoint[], angle: number) => void,\r\n};\r\nexport const TextGradientPicker = ({\r\n    palette: externalPalette = stringifyPalette(getDefaultGradientPalette()),\r\n    angle: externalAngle = 180,\r\n    memoizedOnChange,\r\n}: TextGradientPicker) => {\r\n    const language = useLanguage();\r\n    const pickerRef = useRef<WrappedColorPickerRef>(null);\r\n    const [angle, setAngle] = useState(externalAngle);\r\n    const [palette, setPalette] = useState(() => {\r\n        const intialPalette = parsePalette(externalPalette);\r\n\r\n        return {\r\n            raw: externalPalette,\r\n            colorList: intialPalette,\r\n            currentControlId: intialPalette[0]?.id ?? -1,\r\n        };\r\n    });\r\n\r\n    const changePalette = useCallback((id: number, offset: string) => setPalette(cur => {\r\n        const nextColorList = cur.colorList.map(entry => entry.id === id ? { ...entry, offset } : entry);\r\n\r\n        return { ...cur, ...getPaletteInfo(nextColorList) };\r\n    }), []);\r\n\r\n    useEffect(() => {\r\n        setAngle(externalAngle);\r\n    }, [externalAngle]);\r\n\r\n    useEffect(() => {\r\n        const newPalette = parsePalette(externalPalette);\r\n\r\n        setPalette({\r\n            raw: externalPalette,\r\n            colorList: newPalette,\r\n            currentControlId: newPalette[0]?.id ?? -1,\r\n        });\r\n    }, [externalPalette]);\r\n\r\n    const setPickerOnMount = useRef(false);\r\n    useEffect(() => {\r\n        if (palette.colorList[0] && setPickerOnMount.current) {\r\n            setPickerOnMount.current = true;\r\n            pickerRef.current?.setColor(palette.colorList[0]);\r\n        }\r\n    }, [palette.colorList]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            const { colorList, currentControlId } = palette;\r\n            if (relevant && currentControlId >= 0) {\r\n                const targetColor = colorList.find(entry => entry.id === currentControlId);\r\n\r\n                if (targetColor) pickerRef.current?.setCurrentOffset(currentControlId, targetColor.offset);\r\n            }\r\n        }, 100);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette]);\r\n\r\n    /** @todo REMEMBER to memorize the callback (`memoizedOnChange`) before passing into this component */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                memoizedOnChange(palette.colorList, angle);\r\n            }\r\n        }, 200);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [palette, angle, memoizedOnChange]);\r\n\r\n    return <div className={mergeClass(ANGLE_PICKER_CLASSNAME, 'gradient-picker-container')}>\r\n        <div className=\"gradient-angle-control\">\r\n            <h2>\r\n                {language['input.name-style.gradient.color-point.label']}\r\n            </h2>\r\n            <Button\r\n                size=\"small\"\r\n                className=\"add-stop-color\"\r\n                disabled={(palette.colorList?.length ?? 10000) > MAX_STOP_POINT}\r\n                onClick={() => {\r\n                    setPalette(cur => {\r\n                        const nextColorList = [\r\n                            ...cur.colorList,\r\n                            { offset: '0.5', color: '#ffffff', id: cur.colorList.length + 1 },\r\n                        ].sort((l, r) => Number(l.offset) - Number(r.offset));\r\n\r\n                        return {\r\n                            ...cur,\r\n                            ...getPaletteInfo(nextColorList)\r\n                        };\r\n                    });\r\n                }}\r\n            >{language['input.name-style.gradient.add-point.label']} ({palette.colorList.length}/{MAX_STOP_POINT})</Button>\r\n            <CircularAnglePicker angle={angle} size={120} setAngle={setAngle}>\r\n                <h2>{language['input.name-style.gradient.gradient-direction.label']}</h2>\r\n            </CircularAnglePicker>\r\n        </div>\r\n        <div className=\"stop-color-picker-container\">\r\n            <GradientPicker {...{\r\n                width: 370,\r\n                paletteHeight: 32,\r\n                maxStops: MAX_STOP_POINT,\r\n                minStops: 2,\r\n                stopRemovalDrop: 99999,\r\n                palette: palette.colorList,\r\n                onPaletteChange: colorList => setPalette(cur => ({ ...cur, ...getPaletteInfo(colorList) })),\r\n                onColorStopSelect: stopColor => {\r\n                    setPalette(cur => ({ ...cur, currentControlId: stopColor.id }));\r\n                    pickerRef.current?.setColor(stopColor);\r\n                },\r\n            }}>\r\n                {/** Under the hood this children will be cloned with pre-populate props, so it seemingly work even though we do not pass anything here. */}\r\n                <WrappedColorPicker ref={pickerRef}\r\n                    disabled={palette.colorList.length <= 1}\r\n                    onOffsetChange={changePalette}\r\n                    onRemove={id => {\r\n                        setPalette(cur => {\r\n                            const nextColorList = cur.colorList.filter(entry => entry.id !== id);\r\n                            const nextId = nextColorList?.[0].id ?? -1;\r\n                            if (nextId > 0 && palette.colorList[nextId]) {\r\n                                pickerRef.current?.setColor(palette.colorList[nextId]);\r\n                            }\r\n\r\n                            return {\r\n                                ...getPaletteInfo(nextColorList),\r\n                                currentControlId: nextId,\r\n                            };\r\n                        });\r\n                    }}\r\n                />\r\n            </GradientPicker>\r\n        </div>\r\n    </div>;\r\n};","import { StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\n\r\nexport const StyledPatternContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 200px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    .alert {\r\n        grid-column: span 2;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n    }\r\n`;\r\nexport const StyledPatternOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    align-self: center;\r\n    text-align: center;\r\n    &:not(.menu-off) {\r\n        min-height: 23.2px;\r\n        &.menu-active {\r\n            outline: var(--bw-lg) solid var(--main-active);\r\n            &:hover {\r\n                outline: var(--bw-lg) solid var(--sub-active);\r\n            }\r\n        }\r\n        :hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.menu-off {\r\n        &:hover {\r\n            color: var(--main-link);\r\n            .anticon {\r\n                color: var(--main-link);\r\n            }\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n    }\r\n`;\r\n\r\nexport const StyledPredefinedContainer = styled(StyledDropdown.Container)`\r\n    display: grid;\r\n    grid-template-columns: repeat(4, 120px);\r\n    gap: var(--spacing-sm);\r\n    padding: var(--spacing-xs);\r\n    &:focus-visible {\r\n        outline: none;\r\n        box-shadow: 0 0 0 2px var(--focus) inset;\r\n    }\r\n`;\r\nexport const StyledPredefinedOption = styled.div`\r\n    line-height: 0;\r\n    cursor: pointer;\r\n    min-height: 26.13px;\r\n    &.menu-active {\r\n        outline: var(--bw-lg) solid var(--main-active);\r\n        &:hover {\r\n            outline: var(--bw-lg) solid var(--sub-active);\r\n        }\r\n    }\r\n    &.preset-item-focused {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    :hover {\r\n        outline: var(--bw-lg) solid var(--sub-active);\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n    }\r\n`;","import { InputNumber } from 'antd';\r\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport PowerSlider from 'react-input-slider';\r\nimport { GuardedSlider } from 'src/component';\r\nimport { DefaultColorList, NameStyle } from 'src/model';\r\nimport { useLanguage } from 'src/service';\r\n\r\nexport type GridSliderInputRef = {\r\n    setValue: (value: Partial<{\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }>) => void,\r\n};\r\nexport type GridSliderInput = {\r\n    className: string,\r\n    defaultValue: Partial<NameStyle>,\r\n    fieldMap: {\r\n        x: keyof NameStyle,\r\n        y: keyof NameStyle,\r\n        width: keyof NameStyle,\r\n        color: keyof NameStyle,\r\n    },\r\n    labelMap: Partial<Record<keyof NameStyle, React.ReactNode>>,\r\n    onChange: (value: {\r\n        x: number;\r\n        y: number;\r\n        width: number;\r\n        color: string;\r\n    }) => void,\r\n}\r\nexport const GridSliderInput = forwardRef<GridSliderInputRef, GridSliderInput>(({\r\n    className,\r\n    defaultValue,\r\n    fieldMap,\r\n    labelMap,\r\n    onChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        x: xField,\r\n        y: yField,\r\n        color: colorField,\r\n        width: widthField,\r\n    } = fieldMap;\r\n    const [value, setValue] = useState(() => {\r\n        const xValue = defaultValue[xField] as number;\r\n        const yValue = defaultValue[yField] as number;\r\n        const colorValue = defaultValue[colorField] as string;\r\n        const widthValue = defaultValue[widthField] as number;\r\n\r\n        return {\r\n            x: xValue ?? 0,\r\n            y: yValue ?? 0,\r\n            width: widthValue ?? 0,\r\n            color: colorValue,\r\n        };\r\n    });\r\n    const {\r\n        x,\r\n        y,\r\n        color,\r\n        width,\r\n    } = value;\r\n    const widthLabel = labelMap[widthField];\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(value);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on handler */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            const keyList = Object.keys(nextValue) as (keyof typeof value)[];\r\n\r\n            for (const key in keyList) {\r\n                if (nextValue[key as keyof typeof value] !== value[key as keyof typeof value]) {\r\n                    setValue(cur => ({ ...cur, ...nextValue }));\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n    }));\r\n\r\n    return <div className={className}>\r\n        <h2>{language['input.name-style.slider.position.label']}</h2>\r\n        <div className=\"line-position\">\r\n            <PowerSlider axis=\"xy\"\r\n                styles={{\r\n                    track: {\r\n                        backgroundColor: 'var(--main-slider)',\r\n                        width: 100,\r\n                        height: 100,\r\n                        gridRow: 'span 3',\r\n                        position: 'relative',\r\n                    },\r\n                    thumb: {\r\n                        backgroundColor: 'var(--sub-slider)',\r\n                        zIndex: 10,\r\n                    },\r\n                }}\r\n                xmax={8} xmin={-8}\r\n                ymax={8} ymin={-8}\r\n                x={x ?? 0}\r\n                y={y ?? 0}\r\n                onChange={({ x, y }) => setValue(cur => ({ ...cur, x, y }))} />\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.x-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={x}\r\n                    onChange={value => setValue(cur => ({ ...cur, x: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {language['input.name-style.slider.y-offset.label']}: <InputNumber\r\n                    size=\"small\"\r\n                    value={y}\r\n                    onChange={value => setValue(cur => ({ ...cur, y: typeof value === 'number' ? value : parseInt(value ?? '0') }))}\r\n                />\r\n            </div>\r\n            <div className=\"single-slider\">\r\n                {widthLabel}:&nbsp;<GuardedSlider\r\n                    value={width}\r\n                    min={1}\r\n                    max={10}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setValue(cur => ({ ...cur, width: value }));\r\n                        }\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        <h2>{language['input.name-style.slider.color.label']}</h2>\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => setValue(cur => ({ ...cur, color: color.hex }))}\r\n        />\r\n    </div>;\r\n});","import { forwardRef, useImperativeHandle, useRef, useState } from 'react';\r\nimport { StyledPredefinedContainer, StyledPredefinedOption } from './style-picker.styled';\r\nimport { NameStyle, PresetNameStyle, PresetNameStyleList } from 'src/model';\r\nimport { getNavigationProps, mergeClass } from 'src/util';\r\n// import { Tooltip } from 'antd';\r\n\r\nexport type PredefinedOptionGridRef = {\r\n    focus: () => void,\r\n};\r\nexport type PredefinedOptionGrid = {\r\n    active: boolean,\r\n    value: Partial<NameStyle>,\r\n    onClick: (value: {\r\n        key: PresetNameStyle,\r\n        label: string,\r\n        image: string,\r\n        value: Partial<NameStyle>,\r\n    }) => void,\r\n    onCancel?: () => void,\r\n};\r\nexport const PredefinedOptionGrid = forwardRef<PredefinedOptionGridRef, PredefinedOptionGrid>(({\r\n    active,\r\n    value,\r\n    onClick,\r\n    onCancel,\r\n}, ref) => {\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => containerRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPredefinedContainer ref={containerRef}\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: PresetNameStyleList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onClick(PresetNameStyleList[focus]);\r\n            },\r\n            onCancel: () => {\r\n                onCancel?.();\r\n            }\r\n        })}\r\n    >\r\n        {PresetNameStyleList.map((entry, index) => {\r\n            const { key, image, label } = entry;\r\n\r\n            return <StyledPredefinedOption key={key}\r\n                className={mergeClass(\r\n                    'preset-item',\r\n                    value.preset === key && active ? 'menu-active' : '',\r\n                    focus === index ? 'preset-item-focused' : '',\r\n                )}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                    onClick(entry);\r\n                }}\r\n            >\r\n                {/** Tooltip currently is not really helpful, and gives poor UX */}\r\n                {/* <Tooltip title={label} placement=\"right\"> */}\r\n                <img\r\n                    className=\"preset-preview\"\r\n                    src={`${process.env.PUBLIC_URL}/${image}`}\r\n                    alt={label}\r\n                />\r\n                {/* </Tooltip> */}\r\n            </StyledPredefinedOption>;\r\n        })}\r\n    </StyledPredefinedContainer>;\r\n});","import { InputNumber } from 'antd';\r\nimport React, { forwardRef, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { ANGLE_PICKER_CLASSNAME, GuardedSlider, CircularAnglePicker, CombinedSliderContainer } from 'src/component';\r\nimport { angleToVector, mergeClass, useRefresh } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { getDefaultNameStyle } from 'src/model';\r\n\r\nconst MaterialColor = styled.div<{ $color: string }>`\r\n    border: var(--bw) solid var(--sub-level-2);\r\n    display: inline-block;\r\n    width: 2rem;\r\n    height: 1em;\r\n    border-radius: var(--br-sm);\r\n    cursor: pointer;\r\n    ${({ $color }) => `background-color: ${$color};`}\r\n`;\r\nconst EmbossControlContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: max-content max-content;\r\n    color: var(--color);\r\n    .emboss-control-title {\r\n        grid-column: -1 / 1;\r\n        font-size: var(--fs-sm);\r\n        text-align: center;\r\n        padding: var(--spacing-sm);\r\n        padding-bottom: 0;\r\n    }\r\n    .emboss-control-left h2 {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .angle-picker-container {\r\n        text-align: center;\r\n    }\r\n    .emboss-control-right {\r\n        padding: var(--spacing-sm) 0;\r\n    }\r\n    .emboss-control-left {\r\n        padding: var(--spacing-sm);\r\n        padding-top: 0;\r\n    }\r\n    .slider-label {\r\n        padding: 0;\r\n        border: none;\r\n    }\r\n    .vertical-angle-control {\r\n        grid-template-columns: max-content 60px 85px 12px;\r\n    }\r\n    .reset-button {\r\n        cursor: pointer;\r\n        &:hover {\r\n            color: var(--color-heavy);\r\n        }\r\n    }\r\n    .navigate-button {\r\n        cursor: pointer;\r\n        color: var(--main-link);\r\n        &:hover {\r\n            color: var(--sub-link);\r\n        }\r\n    }\r\n    .thickness-row {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        column-gap: var(--spacing-sm);\r\n        align-items: center;\r\n        .ant-slider {\r\n            height: unset;\r\n            margin-top: var(--spacing-xs);\r\n            margin-bottom: var(--spacing-xs);\r\n        }\r\n    }\r\n`;\r\n\r\nconst VECTOR_VALUE_EPSILON = 0.01;\r\nconst DEFAULT_PITCH = 90;\r\nconst DEFAULT_YAW = 90;\r\nfunction hexToRgb(hex: string) {\r\n    const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n\r\n    return (result\r\n        ? [\r\n            parseInt(result[1], 16),\r\n            parseInt(result[2], 16),\r\n            parseInt(result[3], 16)\r\n        ]\r\n        : [0, 0, 0]) as [number, number, number];\r\n  }\r\n\r\nexport type EmbossControllerRef = {\r\n    setValue: (value: {\r\n        color?: string,\r\n        pitch?: number,\r\n        yaw?: number,\r\n        thickness?: number,\r\n    }) => void,\r\n};\r\nexport type EmbossController = {\r\n    defaultPitch?: number,\r\n    defaultYaw?: number,\r\n    defaultThickness?: number,\r\n    materialColor?: string,\r\n    children?: React.ReactNode,\r\n    language: LanguageDataDictionary,\r\n    onColorTabNavigate: () => void,\r\n    onChange: (value: {\r\n        lightColorVec: [number, number, number],\r\n        lightAngleVec: [number, number, number],\r\n        yaw: number,\r\n        pitch: number,\r\n        thickness: number,\r\n    }) => void,\r\n};\r\nconst defaultValue = getDefaultNameStyle();\r\nexport const EmbossController = forwardRef<EmbossControllerRef, EmbossController>(({\r\n    defaultPitch = defaultValue.embossPitch,\r\n    defaultYaw = defaultValue.embossYaw,\r\n    defaultThickness = defaultValue.embossThickness,\r\n    materialColor,\r\n    children,\r\n    language,\r\n    onColorTabNavigate,\r\n    onChange,\r\n}, ref) => {\r\n    const [requestUpdate, internalId] = useRefresh();\r\n    const [color, setColor] = useState('#ffffff');\r\n    const [thickness, setThickness] = useState(defaultThickness);\r\n    const [angle, setAngle] = useState(defaultYaw);\r\n    const [verticalAngle, setVerticalAngle] = useState(defaultPitch);\r\n    const currentColorVec = useRef<[number, number, number]>([255, 255, 255]);\r\n    const currentAngleVec = useRef<[number, number, number]>([0, 1, 0]);\r\n    const currentThickness = useRef(defaultThickness);\r\n    /** Currently we only allow pure white light to avoid confusion for user. */\r\n    const [allowPickColor] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        if (internalId) setTimeout(() => {\r\n            if (relevant) {\r\n                const nextAngle = angleToVector(angle, verticalAngle);\r\n                const nextColor = hexToRgb(color);\r\n\r\n                if (\r\n                    nextColor[0] !== currentColorVec.current[0]\r\n                    || nextColor[1] !== currentColorVec.current[1]\r\n                    || nextColor[2] !== currentColorVec.current[2]\r\n                    || (Math.abs(nextAngle[0] - currentAngleVec.current[0]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[1] - currentAngleVec.current[1]) > VECTOR_VALUE_EPSILON)\r\n                    || (Math.abs(nextAngle[2] - currentAngleVec.current[2]) > VECTOR_VALUE_EPSILON)\r\n                    || thickness !== currentThickness.current\r\n                ) {\r\n                    onChange({ lightColorVec: nextColor, lightAngleVec: nextAngle, yaw: angle, pitch: verticalAngle, thickness });\r\n                }\r\n                currentColorVec.current = nextColor;\r\n                currentAngleVec.current = nextAngle;\r\n                currentThickness.current = thickness;\r\n            }\r\n        }, 150);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [internalId, color, angle, verticalAngle, thickness]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ color, pitch, yaw, thickness }) => {\r\n            if (color) setColor(color);\r\n            if (pitch) setVerticalAngle(pitch);\r\n            if (yaw) setAngle(yaw);\r\n            if (typeof thickness === 'number') setAngle(thickness);\r\n        }\r\n    }));\r\n\r\n    return <EmbossControlContainer className={mergeClass(ANGLE_PICKER_CLASSNAME, 'emboss-control')}>\r\n        <div className=\"emboss-control-title\">\r\n            {children}\r\n        </div>\r\n        <div className=\"emboss-control-left\">\r\n            <h2>\r\n                {language['input.name-style.emboss.color.label']}&nbsp;&nbsp;<MaterialColor\r\n                    className=\"material-color\"\r\n                    onClick={onColorTabNavigate}\r\n                    $color={materialColor}\r\n                />\r\n            </h2>\r\n            {language['input.name-style.emboss.color.alert'](<span key=\"color-navigate\" className=\"navigate-button\" onClick={onColorTabNavigate}>\r\n                {language['input.name-style.color.label']}\r\n            </span>)}\r\n            <h2 className=\"thickness-row\">\r\n                <span>{language['input.name-style.emboss.thickness.label']}</span>\r\n                <GuardedSlider\r\n                    value={thickness}\r\n                    min={0}\r\n                    max={4}\r\n                    onChange={value => {\r\n                        if (typeof value === 'number') {\r\n                            setThickness(value);\r\n                            requestUpdate();\r\n                        }\r\n                    }}\r\n                />\r\n            </h2>\r\n            <h2>\r\n                {language['input.name-style.emboss.pitch.label']}&nbsp;&nbsp;<SyncOutlined\r\n                    className=\"reset-button\"\r\n                    onClick={() => {\r\n                        setVerticalAngle(DEFAULT_PITCH);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </h2>\r\n            <CombinedSliderContainer className=\"vertical-angle-control\">\r\n                <div className=\"slider-label\" />\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={-90}\r\n                    max={90}\r\n                    onChange={value => {\r\n                        setVerticalAngle(typeof value === 'string' ? parseInt(value) : value ?? 0);\r\n                        requestUpdate();\r\n                    }}\r\n                    value={verticalAngle}\r\n                />\r\n                <GuardedSlider\r\n                    min={-90}\r\n                    max={90}\r\n                    value={verticalAngle}\r\n                    onChange={value => {\r\n                        setVerticalAngle(value);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>\r\n            <h2>{language['input.name-style.emboss.yaw.label']}&nbsp;&nbsp;<SyncOutlined\r\n                className=\"reset-button\"\r\n                onClick={() => {\r\n                    setAngle(DEFAULT_YAW);\r\n                    requestUpdate();\r\n                }}\r\n            /></h2>\r\n            <div className=\"horizontal-angle-contorl\">\r\n                <CircularAnglePicker\r\n                    angle={angle}\r\n                    size={120}\r\n                    setAngle={angle => {\r\n                        setAngle(angle);\r\n                        requestUpdate();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n        {allowPickColor && <div className=\"emboss-control-right\">\r\n            <h2>Light color</h2>\r\n            <ChromePicker\r\n                styles={{\r\n                    default: {\r\n                        picker: {\r\n                            color: '#000000',\r\n                            background: 'var(--main-level-3)',\r\n                            boxShadow: 'none',\r\n                        },\r\n                        body: {\r\n                            padding: 'var(--spacing) var(--spacing)',\r\n                        }\r\n                    },\r\n                }}\r\n                disableAlpha={true}\r\n                color={color}\r\n                onChange={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n                onChangeComplete={color => {\r\n                    setColor(color.hex);\r\n                    requestUpdate();\r\n                }}\r\n            />\r\n        </div>}\r\n    </EmbossControlContainer>;\r\n});","import { useEffect, useState } from 'react';\r\nimport { ChromePicker, CompactPicker } from 'react-color';\r\nimport { DefaultColorList } from 'src/model';\r\nimport styled from 'styled-components';\r\n\r\nconst TextColorPickerContainer = styled.div`\r\n    .chrome-picker {\r\n        /** Target color format swapper in picker's body */\r\n        > div:nth-child(2) > .flexbox-fix:nth-child(2) {\r\n            display: none !important;\r\n        }\r\n    }\r\n`;\r\nexport type TextColorPicker = {\r\n    color: string,\r\n    onChange: (color: string) => void,\r\n};\r\nexport const TextColorPicker = ({\r\n    color,\r\n    onChange,\r\n}: TextColorPicker) => {\r\n    const [internalColor, setInternalColor] = useState(color);\r\n\r\n    useEffect(() => {\r\n        setInternalColor(color);\r\n    }, [color]);\r\n\r\n    return <TextColorPickerContainer>\r\n        <ChromePicker\r\n            styles={{\r\n                default: {\r\n                    picker: {\r\n                        color: '#000000',\r\n                        background: 'var(--main-level-3)',\r\n                        boxShadow: 'none',\r\n                        padding: 'var(--spacing-sm) var(--spacing)',\r\n                    },\r\n                    body: {\r\n                        padding: 'var(--spacing) var(--spacing)',\r\n                    },\r\n                },\r\n            }}\r\n            disableAlpha={true}\r\n            color={internalColor}\r\n            onChange={color => setInternalColor(color.hex)}\r\n            onChangeComplete={color => {\r\n                setInternalColor(color.hex);\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n        <CompactPicker\r\n            colors={DefaultColorList}\r\n            color={color}\r\n            onChangeComplete={color => {\r\n                onChange(color.hex);\r\n            }}\r\n        />\r\n    </TextColorPickerContainer>;\r\n};","import { Checkbox, Popover } from 'antd';\r\nimport { useCallback, useEffect, useRef, useState, forwardRef, useImperativeHandle, ForwardedRef, useMemo } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport { CaretDownOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport {\r\n    PresetNameStyleMap,\r\n    NameStyle,\r\n    NameStyleType,\r\n    PatternList,\r\n    FrameInfo,\r\n    DefaultColorList,\r\n} from '../../../model';\r\nimport debounce from 'lodash.debounce';\r\nimport { getNavigationProps, mergeClass, stringifyPalette, useRefresh } from 'src/util';\r\nimport { TextGradientPicker } from './gradient-picker';\r\nimport { getNameFontOptionList } from '../const';\r\nimport { StyledDropdown, PopoverButton } from 'src/component';\r\nimport {\r\n    StyledPatternContainer,\r\n    StyledPatternOption,\r\n} from './style-picker.styled';\r\nimport { useLanguage, useSetting } from 'src/service';\r\nimport { GridSliderInput, GridSliderInputRef } from './grid-slider-input';\r\nimport { PredefinedOptionGrid, PredefinedOptionGridRef } from './predefined-option-grid';\r\nimport { EmbossController, EmbossControllerRef } from './emboss-controller';\r\nimport { TextColorPicker } from './text-color-picker';\r\nimport './style-picker.scss';\r\n\r\nexport type NameStylePickerRef = {\r\n    setValue: (value: Partial<NameStyle>) => void,\r\n};\r\nexport type NameStylePicker = {\r\n    frameInfo?: FrameInfo,\r\n    defaultType: NameStyleType,\r\n    defaultValue: Partial<NameStyle>,\r\n    showExtraDecorativeOption: boolean,\r\n    onChange: (type: NameStyleType, style: Partial<NameStyle>) => void,\r\n};\r\nexport const NameStylePicker = forwardRef(({\r\n    frameInfo,\r\n    defaultType,\r\n    defaultValue,\r\n    showExtraDecorativeOption,\r\n    onChange: undebouncedOnChange,\r\n}: NameStylePicker, ref: ForwardedRef<NameStylePickerRef>) => {\r\n    const language = useLanguage();\r\n    const optionGridRef = useRef<PredefinedOptionGridRef>(null);\r\n    const [focus, setFocus] = useState(-1);\r\n    const [predefinedDropdownVisible, setPredefinedDropdownVisible] = useState(false);\r\n    const [type, setType] = useState(defaultType);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [requestUpdateCustomStyle, sendCustomStyleSignal] = useRefresh();\r\n    const onChange = useRef(debounce(undebouncedOnChange, 250)).current;\r\n    const memoizedOnGradientChange = useCallback((palette, gradientAngle) => {\r\n        setValue(cur => ({ ...cur, gradientAngle, gradientColor: stringifyPalette(palette) }));\r\n        requestUpdateCustomStyle();\r\n    }, [requestUpdateCustomStyle]);\r\n    const reduceColorMotion = useSetting(state => state.setting.reduceMotionColor);\r\n\r\n    const fontList = useMemo(() => getNameFontOptionList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        if (sendCustomStyleSignal !== 0) {\r\n            setType('custom');\r\n            onChange('custom', value);\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [sendCustomStyleSignal]);\r\n\r\n    const shadowPickeRef = useRef<GridSliderInputRef>(null);\r\n    const outlinePickeRef = useRef<GridSliderInputRef>(null);\r\n    const embossControllerRef = useRef<EmbossControllerRef>(null);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: nextValue => {\r\n            setValue(currentValue => ({ ...currentValue, ...nextValue }));\r\n\r\n            const {\r\n                lineColor, lineWidth, lineOffsetX, lineOffsetY,\r\n                shadowBlur, shadowColor, shadowOffsetX, shadowOffsetY,\r\n                embossPitch, embossYaw, embossThickness,\r\n            } = nextValue;\r\n            shadowPickeRef.current?.setValue({\r\n                x: shadowOffsetX, y: shadowOffsetY,\r\n                width: shadowBlur, color: shadowColor,\r\n            });\r\n            outlinePickeRef.current?.setValue({\r\n                x: lineOffsetX, y: lineOffsetY,\r\n                width: lineWidth, color: lineColor,\r\n            });\r\n            embossControllerRef.current?.setValue({\r\n                pitch: embossPitch,\r\n                yaw: embossYaw,\r\n                thickness: embossThickness,\r\n            });\r\n        },\r\n    }));\r\n    const {\r\n        fillStyle,\r\n        headTextFillStyle,\r\n        hasOutline,\r\n        hasShadow,\r\n        hasGradient, gradientColor, gradientAngle,\r\n        hasEmboss, embossPitch, embossYaw, embossThickness,\r\n        pattern,\r\n        font,\r\n    } = value;\r\n    const { labelBackgroundColor, labelBackgroundImage } = frameInfo ?? {};\r\n    const patternStyle = {\r\n        background: labelBackgroundColor,\r\n        backgroundImage: labelBackgroundImage,\r\n    };\r\n    const isStyleCustom = type === 'custom';\r\n    const isStylePredefined = type === 'predefined';\r\n    const optionInputContainerId = 'name-style-option-input-container';\r\n    const applyAutoStyle = () => {\r\n        setType('auto');\r\n        if (type !== 'auto') onChange('auto', value);\r\n    };\r\n    const applyPredefinedStyle = () => {\r\n        const presetValue = value.preset\r\n            ? PresetNameStyleMap[value.preset]?.value\r\n            : {};\r\n        setType('predefined');\r\n        setValue(cur => ({ ...cur, ...presetValue }));\r\n        onChange('predefined', { ...value, ...presetValue });\r\n    };\r\n    const applyCustomStyle = () => {\r\n        setType('custom');\r\n        if (type !== 'custom') onChange('custom', value);\r\n    };\r\n\r\n    const colorPickerButtonId = 'color-picker';\r\n    return <div className=\"ant-input-group-wrapper text-style-input\">\r\n        <span className=\"ant-input-wrapper ant-input-group\">\r\n            <span className=\"ant-input-group-addon\">{language['input.name-style.label']}</span>\r\n            <span className=\"name-style-input-container\">\r\n                <div\r\n                    id={optionInputContainerId}\r\n                    className=\"ant-radio-group ant-radio-group-outline name-style-option-input-container\"\r\n                    {...getNavigationProps({\r\n                        setFocus,\r\n                        optionLength: 3,\r\n                        onKeyPress: e => {\r\n                            if (focus === 1 && (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ')) {\r\n                                e.preventDefault();\r\n                                setFocus(1);\r\n                                setPredefinedDropdownVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    if (focus === 1) optionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        },\r\n                        onTrigger() {\r\n                            if (focus === 0) applyAutoStyle();\r\n                            if (focus === 1) applyPredefinedStyle();\r\n                            if (focus === 2) applyCustomStyle();\r\n                        },\r\n                    })}\r\n                >\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            type === 'auto' && 'ant-radio-wrapper-checked',\r\n                            focus === 0 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyAutoStyle()}\r\n                    >\r\n                        <span className={`ant-radio ${type === 'auto' ? 'ant-radio-checked' : ''}`}>\r\n                            <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"auto\" />\r\n                            <span className=\"ant-radio-inner\" />\r\n                        </span>\r\n                        <span className=\"ant-radio-label\">\r\n                            {language['input.name-style.type.auto.label']}\r\n                        </span>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStylePredefined && 'ant-radio-wrapper-checked',\r\n                            focus === 1 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyPredefinedStyle()}\r\n                    >\r\n                        <Popover\r\n                            visible={predefinedDropdownVisible}\r\n                            onVisibleChange={setPredefinedDropdownVisible}\r\n                            trigger={['hover', 'click']}\r\n                            placement=\"bottomLeft\"\r\n                            overlayClassName=\"predefined-picker-overlay\"\r\n                            content={<div className=\"overlay-event-absorber\">\r\n                                <PredefinedOptionGrid ref={optionGridRef}\r\n                                    active={isStylePredefined}\r\n                                    value={value}\r\n                                    onCancel={() => {\r\n                                        setPredefinedDropdownVisible(false);\r\n                                        document.getElementById(optionInputContainerId)?.focus();\r\n                                    }}\r\n                                    onClick={({ key }) => {\r\n                                        const presetValue = key\r\n                                            ? PresetNameStyleMap[key]?.value\r\n                                            : {};\r\n                                        setType('predefined');\r\n                                        setValue(cur => ({ ...cur, ...presetValue }));\r\n                                        onChange('predefined', { ...value, ...presetValue });\r\n                                    }}\r\n                                />\r\n                            </div>}\r\n                        >\r\n                            <span className=\"name-style-option-label\">\r\n                                <span className={`ant-radio ${isStylePredefined ? 'ant-radio-checked' : ''}`}>\r\n                                    <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"predefined\" />\r\n                                    <span className=\"ant-radio-inner\" />\r\n                                </span>\r\n                                <span className=\"ant-radio-label\">\r\n                                    {language['input.name-style.type.predefined.label']}\r\n                                </span>\r\n                            </span>\r\n                        </Popover>\r\n                    </label>\r\n                    <span className=\"name-style-option-break\" />\r\n                    <label\r\n                        className={mergeClass(\r\n                            'ant-radio-wrapper',\r\n                            isStyleCustom && 'ant-radio-wrapper-checked',\r\n                            focus === 2 && 'ant-radio-focused',\r\n                        )}\r\n                        onClick={() => applyCustomStyle()}\r\n                    >\r\n                        <span>\r\n                            <span className={`ant-radio ${isStyleCustom ? 'ant-radio-checked' : ''}`}>\r\n                                <input tabIndex={-1} type=\"radio\" className=\"ant-radio-input\" value=\"custom\" />\r\n                                <span className=\"ant-radio-inner\" />\r\n                            </span>\r\n                            <span className=\"ant-radio-label ant-radio-label-custom\">\r\n                                {language['input.name-style.type.custom.label']}\r\n                            </span>\r\n                        </span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"style-picker\">\r\n                    <Popover key=\"color-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.text.label']}\r\n                                    </h3>\r\n                                    <TextColorPicker\r\n                                        color={fillStyle}\r\n                                        onChange={hexColor => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, fillStyle: hexColor }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                                <hr />\r\n                                <div className=\"custom-style-text\">\r\n                                    <h3>\r\n                                        {language['input.name-style.color.ruby.label']}\r\n                                    </h3>\r\n                                    <CompactPicker\r\n                                        colors={DefaultColorList}\r\n                                        color={headTextFillStyle}\r\n                                        onChangeComplete={color => {\r\n                                            setType('custom');\r\n                                            setValue(cur => ({ ...cur, headTextFillStyle: color.hex }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            id={colorPickerButtonId}\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom}\r\n                            className=\"picker-dropdown color-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.color.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"shadow-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-shadow'} checked={hasShadow} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasShadow: !cur.hasShadow }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.shadow.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasShadow && <GridSliderInput ref={shadowPickeRef}\r\n                                    className=\"custom-style-shadow\"\r\n                                    fieldMap={{\r\n                                        color: 'shadowColor',\r\n                                        width: 'shadowBlur',\r\n                                        x: 'shadowOffsetX',\r\n                                        y: 'shadowOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        shadowBlur: language['input.name-style.slider.blur.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            shadowBlur: width,\r\n                                            shadowColor: color,\r\n                                            shadowOffsetX: x,\r\n                                            shadowOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasShadow}\r\n                            className=\"picker-dropdown shadow-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.shadow.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"outline-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-line'} checked={hasOutline} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasOutline: !cur.hasOutline }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.outline.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasOutline && <GridSliderInput ref={outlinePickeRef}\r\n                                    className=\"custom-style-line\"\r\n                                    fieldMap={{\r\n                                        color: 'lineColor',\r\n                                        width: 'lineWidth',\r\n                                        x: 'lineOffsetX',\r\n                                        y: 'lineOffsetY',\r\n                                    }}\r\n                                    labelMap={{\r\n                                        lineWidth: language['input.name-style.slider.thickness.label'],\r\n                                    }}\r\n                                    defaultValue={value}\r\n                                    onChange={({ color, width, x, y }) => {\r\n                                        setValue(cur => ({\r\n                                            ...cur,\r\n                                            lineWidth: width,\r\n                                            lineColor: color,\r\n                                            lineOffsetX: x,\r\n                                            lineOffsetY: y,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                />}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasOutline}\r\n                            className=\"picker-dropdown outline-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.outline.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"gradient-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className={'custom-style-picker'}>\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-gradient'} checked={hasGradient} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasGradient: !cur.hasGradient }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.gradient.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasGradient && <div className=\"custom-style-gradient\">\r\n                                    <TextGradientPicker\r\n                                        angle={gradientAngle}\r\n                                        palette={gradientColor}\r\n                                        memoizedOnChange={memoizedOnGradientChange}\r\n                                    />\r\n                                </div>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasGradient}\r\n                            className=\"picker-dropdown gradient-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.gradient.label']} <CaretDownOutlined />\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    {showExtraDecorativeOption && <Popover key=\"pattern-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledPatternContainer onClick={e => e.stopPropagation()}>\r\n                                <div className=\"alert\">\r\n                                    {language['input.name-style.pattern.alert']}\r\n                                </div>\r\n                                {PatternList.map(({ key, patternImage }) => {\r\n                                    return <StyledPatternOption key={key}\r\n                                        className={[\r\n                                            'pattern-option',\r\n                                            value.pattern === key ? 'menu-active' : '',\r\n                                            patternImage ? '' : 'menu-off',\r\n                                        ].join(' ')}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, pattern: key }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {patternImage\r\n                                            ? <img\r\n                                                style={patternImage ? patternStyle : {}}\r\n                                                className=\"pattern-image\"\r\n                                                src={`${process.env.PUBLIC_URL}/asset/image/finish-name/${patternImage}.png`}\r\n                                                alt={key}\r\n                                            />\r\n                                            : <>\r\n                                                <CloseCircleOutlined /> {language['input.name-style.pattern.no-pattern.label']}\r\n                                            </>}\r\n                                    </StyledPatternOption>;\r\n                                })}\r\n                            </StyledPatternContainer>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && typeof pattern === 'string' && pattern !== 'none'}\r\n                            className=\"picker-dropdown pattern-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.pattern.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                    <Popover key=\"font-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {fontList.map(({ value: fontValue, label }) => {\r\n                                    return <StyledDropdown.Option key={fontValue}\r\n                                        className={font === fontValue ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            setValue(cur => ({ ...cur, font: fontValue }));\r\n                                            requestUpdateCustomStyle();\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton $softMode={reduceColorMotion} className=\"picker-dropdown font-picker-dropdown\">\r\n                            {language['input.name-style.font.label']}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                    {showExtraDecorativeOption && <Popover key=\"emboss-picker\"\r\n                        trigger={['click']}\r\n                        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <div className=\"custom-style-picker\">\r\n                                <h3 className=\"custom-style-expand\">\r\n                                    <Checkbox value={'has-emboss'} checked={hasEmboss} onChange={() => {\r\n                                        setType('custom');\r\n                                        setValue(cur => ({ ...cur, hasEmboss: !cur.hasEmboss }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}>\r\n                                        {language['input.name-style.emboss.toggle.label']}\r\n                                    </Checkbox>\r\n                                </h3>\r\n                                {hasEmboss && <EmbossController ref={embossControllerRef}\r\n                                    language={language}\r\n                                    defaultPitch={embossPitch}\r\n                                    defaultYaw={embossYaw}\r\n                                    defaultThickness={embossThickness}\r\n                                    materialColor={fillStyle}\r\n                                    onColorTabNavigate={() => {\r\n                                        document.getElementById(colorPickerButtonId)?.click();\r\n                                    }}\r\n                                    onChange={({ thickness, yaw, pitch }) => {\r\n                                        setValue(cur => ({ ...cur,\r\n                                            embossPitch: pitch,\r\n                                            embossYaw: yaw,\r\n                                            embossThickness: thickness,\r\n                                        }));\r\n                                        requestUpdateCustomStyle();\r\n                                    }}\r\n                                >\r\n                                    <div className=\"alert\">{language['input.name-style.emboss.alert']}</div>\r\n                                </EmbossController>}\r\n                            </div>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={reduceColorMotion}\r\n                            $active={isStyleCustom && hasEmboss}\r\n                            className=\"picker-dropdown emboss-picker-dropdown\"\r\n                        >\r\n                            {language['input.name-style.emboss.label']}\r\n                        </PopoverButton>\r\n                    </Popover>}\r\n                </div>\r\n            </span>\r\n        </span>\r\n    </div>;\r\n});\r\n","import { css } from 'styled-components';\r\n\r\nexport const TrainGridStyle = css`\r\n    .checkbox-train-input-group,\r\n    .radio-train-input-group {\r\n\t\tdisplay: flex;\r\n\t\tflex-wrap: wrap;\r\n\t\tcolumn-gap: var(--spacing-xs);\r\n\t\trow-gap: var(--spacing-xs);\r\n\t\tbox-shadow: none;\r\n\t\tborder-radius: 0;\r\n\t\t&:focus-visible {\r\n\t\t\toutline: 3px solid var(--focus); // +1 width size to account for shadow\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper:first-child,\r\n\t\t.ant-radio-button-wrapper:last-child {\r\n\t\t\tborder-radius: 0;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1;\r\n\t\t\twhite-space: nowrap;\r\n\t\t\tborder: none;\r\n\t\t\tbox-shadow: var(--bs-1);\r\n\t\t\tpadding: 0;\r\n\t\t\tmin-width: 90px;\r\n\t\t\theight: 28px;\r\n\t\t\tline-height: 28px;\r\n\t\t\ttext-align: center;\r\n\t\t\ttext-shadow: none;\r\n\t\t\tfont-size: var(--fs-sm);\r\n\t\t\t&:hover {\r\n\t\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\t\toutline-offset: var(--bw);\r\n\t\t\t}\r\n\t\t\t&::before {\r\n\t\t\t\tdisplay: none;\r\n\t\t\t}\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper-checked {\r\n\t\t\toutline: var(--bw) solid var(--main-active);\r\n\t\t\toutline-offset: var(--bw);\r\n\t\t}\r\n\t}\r\n`;","import { useCard, useSetting } from 'src/service';\r\nimport { useCallback, useMemo } from 'react';\r\nimport { getFrameButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { NO_ATTRIBUTE, passwordSentenceMap, tcgToOCGTermMap } from 'src/model';\r\nimport { TrainGridStyle } from './input-train.styled';\r\nimport { RadioTrain } from 'src/component';\r\n\r\nconst StyledFrameTrain = styled(RadioTrain)`\r\n\t${TrainGridStyle}\r\n`;\r\n\r\nexport type FrameTrain = {\r\n    onSTFrameChange: (value: string[]) => void,\r\n    onPasswordChange: (value: string) => void,\r\n    onStatChange: (atk: string, def: string) => void,\r\n};\r\nexport const FrameTrain = ({\r\n    onSTFrameChange,\r\n    onPasswordChange,\r\n    onStatChange,\r\n}: FrameTrain) => {\r\n    const {\r\n        setting,\r\n    } = useSetting();\r\n    const { showExtraDecorativeOption } = setting;\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    const {\r\n        frame,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        frame: card.frame,\r\n        setCard,\r\n    })));\r\n    const changeFrame = useCallback((frameValue: number | string) => {\r\n        setCard(currentCard => {\r\n            const {\r\n                typeAbility,\r\n                attribute,\r\n                format,\r\n                password,\r\n                star,\r\n                atk,\r\n                def,\r\n            } = currentCard;\r\n            const nextFrame = `${frameValue}`;\r\n            const willBecomeST = nextFrame === 'spell' || nextFrame === 'trap';\r\n            const willRemoveStat = willBecomeST || nextFrame === 'speed-skill';\r\n            const termMap = format === 'tcg'\r\n                ? {\r\n                    'Spell Card': 'Spell Card',\r\n                    'Trap Card': 'Trap Card',\r\n                }\r\n                : tcgToOCGTermMap;\r\n            const nextTypeAbility = nextFrame === 'spell'\r\n                ? [termMap['Spell Card']]\r\n                : nextFrame === 'trap' ? [termMap['Trap Card']] : typeAbility;\r\n            const nextPassword = nextFrame === 'token'\r\n                ? passwordSentenceMap[format]\r\n                : password;\r\n            const nextAtk = willRemoveStat ? '' : atk;\r\n            const nextDef = willRemoveStat ? '' : def;\r\n            const nextStar = nextFrame === 'token'\r\n                ? 0\r\n                : star;\r\n\r\n            onPasswordChange(nextPassword);\r\n            if (willBecomeST) {\r\n                onSTFrameChange(nextTypeAbility);\r\n            }\r\n            if (willRemoveStat) {\r\n                onStatChange(nextAtk, nextDef);\r\n            }\r\n\r\n            return {\r\n                ...currentCard,\r\n                frame: nextFrame,\r\n                isLink: nextFrame === 'link' ? true : false,\r\n                attribute: nextFrame === 'token'\r\n                    ? NO_ATTRIBUTE\r\n                    : willBecomeST\r\n                        ? `${nextFrame}`.toUpperCase()\r\n                        : attribute,\r\n                star: nextStar,\r\n                typeAbility: nextTypeAbility,\r\n                password: nextPassword,\r\n                atk: nextAtk,\r\n                def: nextDef,\r\n            };\r\n        });\r\n    }, [setCard, onPasswordChange, onSTFrameChange, onStatChange]);\r\n\r\n    return <StyledFrameTrain className=\"frame-radio\" value={frame} onChange={changeFrame} optionList={frameList} />;\r\n};","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { getNavigationProps } from 'src/util';\r\nimport { InputTrainStyle } from 'src/component';\r\nimport { Tooltip } from 'antd';\r\n\r\nconst StyledCheckboxTrainContainer = styled.div`\r\n    ${InputTrainStyle}\r\n`;\r\nexport type CheckboxTrain = {\r\n    className?: string,\r\n    value: string[],\r\n    optionList: { label: React.ReactNode, value: string | number, tooltip?: string, props?: React.LabelHTMLAttributes<HTMLLabelElement> }[],\r\n    onChange: (value: (string | number)[]) => void,\r\n    children?: React.ReactNode,\r\n}\r\nexport const CheckboxTrain = ({\r\n    onChange,\r\n    value: activeValue,\r\n    optionList,\r\n    children,\r\n    className,\r\n}: CheckboxTrain) => {\r\n    const [focus, setFocus] = useState(-1);\r\n    const optionLength = optionList.length;\r\n\r\n    return <StyledCheckboxTrainContainer\r\n        className={['ant-radio-group ant-radio-group-outline checkbox-train', className].join(' ')}\r\n    >\r\n        {children && <label className=\"standalone-addon ant-input-group-addon\">{children}</label>}\r\n        <div\r\n            className=\"checkbox-train-input-group\"\r\n            {...getNavigationProps({\r\n                setFocus,\r\n                optionLength,\r\n                onTrigger: () => {\r\n                    const target = optionList[focus];\r\n                    if (target) {\r\n                        const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${target.value}`) : false;\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${target.value}` !== currentValue)\r\n                            : [...activeValue, `${target.value}`]);\r\n                    }\r\n                },\r\n            })}\r\n        >\r\n            {optionList.map((entry, index) => {\r\n                const { label, value, props, tooltip } = entry;\r\n                const isChecked = Array.isArray(activeValue) ? activeValue.includes(`${value}`) : false;\r\n                const children = <label key={value}\r\n                    {...props}\r\n                    className={[\r\n                        'ant-radio-button-wrapper',\r\n                        isChecked ? 'ant-radio-button-wrapper-checked' : '',\r\n                        focus === index ? 'checkbox-train-focused' : '',\r\n                    ].join(' ')}\r\n                    onClick={() => {\r\n                        onChange(isChecked\r\n                            ? activeValue.filter(currentValue => `${value}` !== currentValue)\r\n                            : [...activeValue, `${value}`]);\r\n                    }}\r\n                >\r\n                    <span className={`ant-radio-button ${isChecked ? 'ant-radio-button-checked' : ''}`}>\r\n                        <span className=\"ant-radio-button-inner\"></span>\r\n                    </span>\r\n                    <span className=\"label\">{label}</span>\r\n                </label>;\r\n\r\n                return tooltip\r\n                    ? <Tooltip title={tooltip}>{children}</Tooltip>\r\n                    : children;\r\n            })}\r\n        </div>\r\n    </StyledCheckboxTrainContainer>;\r\n};","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageCropper = styled(ImageCropper)`\r\n    display: grid;\r\n    grid-template-columns: max-content max-content;\r\n    align-items: start;\r\n    gap: 0;\r\n    .card-image-source-input {\r\n        display: flex;\r\n        flex-direction: column-reverse;\r\n        .online-image-tip {\r\n            text-align: center;\r\n        }\r\n    }\r\n    .card-cropper {\r\n        width: 375px;\r\n        text-align: center;\r\n    }\r\n`;\r\n\r\nexport type BackgroundInputGroupRef = {\r\n    hasImage: () => boolean,\r\n    setValue: (value: {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type BackgroundInputGroup = {\r\n    children?: React.ReactNode,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n} & Pick<ImageCropper, 'backgroundColor' | 'receivingCanvas' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const BackgroundInputGroup = forwardRef<BackgroundInputGroupRef, BackgroundInputGroup>(({\r\n    backgroundColor,\r\n    children,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n            isPendulum, pendulumSize,\r\n            opacity,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        background, backgroundCrop, backgroundType, backgroundData, backgroundSource, backgroundFit,\r\n        isPendulum, pendulumSize,\r\n        opacity,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeBackgroundSource = useMemo(() => getUpdater('backgroundSource'), [getUpdater]);\r\n    const changeBackground = useMemo(() => getUpdater('background'), [getUpdater]);\r\n    const changeBackgroundData = useMemo(() => getUpdater('backgroundData'), [getUpdater]);\r\n    const changeBackgroundFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            backgroundFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeBackgroundCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                backgroundCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        hasImage: () => imageCropperRef.current?.hasImage() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource }) => {\r\n            if (backgroundSource === 'offline') {\r\n                if (typeof backgroundData === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', backgroundData, backgroundCrop);\r\n                }\r\n            } else {\r\n                if (typeof background === 'string' && backgroundCrop) {\r\n                    imageCropperRef.current?.forceSource('online', background, backgroundCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <StyledImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.background-image.label']}\r\n        backgroundColor={backgroundColor}\r\n        defaultSourceType={backgroundSource}\r\n        defaultInternalSource={backgroundData}\r\n        defaultExternalSource={background}\r\n        defaultCropInfo={backgroundCrop}\r\n        receivingCanvas={receivingCanvas}\r\n        forceFit={backgroundFit}\r\n        onSourceChange={(type, data) => {\r\n            changeBackgroundSource(type);\r\n            if (type === 'offline') changeBackgroundData(data);\r\n            else changeBackground(data);\r\n        }}\r\n        onCropChange={changeBackgroundCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeBackgroundFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, backgroundType, pendulumSize).backgroundRatio}\r\n        beforeCropper={null}\r\n    >\r\n        {children}\r\n    </StyledImageCropper>;\r\n});","import { Checkbox, InputNumber, Popover, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { CompactPicker } from 'react-color';\r\nimport {\r\n    BackgroundType,\r\n    getBackgroundTypeList,\r\n    CardOpacity,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    OpacityList,\r\n    getDefaultCardOpacity,\r\n    DefaultColorList,\r\n} from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { BackgroundInputGroup, BackgroundInputGroupRef } from './background-input-group';\r\nimport { CombinedSliderContainer, GuardedSlider, ImageCropper, RadioTrain } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { BorderOuterOutlined } from '@ant-design/icons';\r\nimport './layout-picker.scss';\r\n\r\nconst StyledBoundlessOverlay = styled.span`\r\n    white-space: pre-line;\r\n`;\r\nconst StyledLayoutPickerContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    padding: 2px 0;\r\n    align-items: center;\r\n    .card-opacity-slider {\r\n        flex: 0 1 auto;\r\n    }\r\n    .background-preview {\r\n        display: inline-block;\r\n        line-height: 0;\r\n        width: 17px;\r\n        height: 17px; // Alignment\r\n        align-self: center;\r\n        border: 1px solid #333333;\r\n        cursor: pointer;\r\n        text-align: center;\r\n        user-select: none;\r\n        &:hover {\r\n            box-shadow: 0 0 2px 0 #222222;\r\n        }\r\n        .background-preview-callback-passer {\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n        .background-image-preview {\r\n            max-width: 15px;\r\n            max-height: 15px;\r\n        }\r\n        .no-background-icon {\r\n            font-size: 15px; // Alignment\r\n        }\r\n    }\r\n`;\r\nconst StyledBaseFillPickerContainer = styled.div`\r\n    --input-width: 315px;\r\n    &.overlay-no-background-image {\r\n        .card-image-cropper {\r\n            grid-template-columns: 1fr;\r\n        }\r\n        .card-cropper {\r\n            min-height: 0;\r\n            line-height: 0;\r\n            width: 0;\r\n            visibility: hidden;\r\n            position: absolute;\r\n        }\r\n        .card-image-source-input {\r\n            padding-right: 0;\r\n            margin-right: 0;\r\n            border-right: none;\r\n        }\r\n        i {\r\n            max-width: var(--input-width); // Alignment\r\n        }\r\n    }\r\n    i {\r\n        display: inline-block;\r\n        font-size: var(--fs-sm);\r\n        color: var(--color);\r\n        font-weight: normal;\r\n    }\r\n    .background-picker {\r\n        padding: var(--spacing-xs);\r\n        /** No display none here, again we want to keep card cropper painted, just not visible */\r\n        &.overlay-no-background {\r\n            visibility: hidden;\r\n            height: 0;\r\n            width: 0;\r\n            padding: 0;\r\n        }\r\n        .card-image-input {\r\n            text-align: center;\r\n            max-width: var(--input-width);\r\n        }\r\n    }\r\n    .card-image-source-input {\r\n        height: 100%;\r\n        justify-content: start;\r\n        padding-right: var(--spacing-xs);\r\n        margin-right: var(--spacing-xs);\r\n        border-right: var(--bw) solid var(--sub-level-4);\r\n        .type-section h2 {\r\n            margin-top: var(--spacing-xs);\r\n        }\r\n        .background-type-picker {\r\n            .radio-train-input-group {\r\n                display: grid;\r\n            }\r\n            .ant-radio-button-wrapper {\r\n                border-left: var(--bw) solid var(--sub-level-1);\r\n            }\r\n        }\r\n        .color-section h2 {\r\n            padding-top: 0;\r\n            padding-left: 0;\r\n        }\r\n    }\r\n    .color-section {\r\n        > h2 + div {\r\n            > div:first-child {\r\n                box-shadow: none !important; // Override inline style\r\n            }\r\n            > div:nth-child(2) {\r\n                border: var(--bw) solid var(--main-level-1);\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport type LayoutPicker = {\r\n    defaultValue: Partial<CardOpacity>,\r\n    onChange: (opacity: CardOpacity) => void,\r\n} & Pick<ImageCropper, 'receivingCanvas' | 'onTainted' | 'onCropChange' | 'onSourceLoaded'>;\r\nexport type OpacityPickerRef = {\r\n    setValue: (opacity: Partial<CardOpacity> & {\r\n        background?: string,\r\n        backgroundData?: string,\r\n        backgroundSource?: string,\r\n        backgroundCrop?: Partial<ReactCrop.Crop>,\r\n        backgroundType?: BackgroundType,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport const LayoutPicker = forwardRef<OpacityPickerRef, LayoutPicker>(({\r\n    receivingCanvas,\r\n    defaultValue,\r\n    onTainted,\r\n    onChange,\r\n    onSourceLoaded,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            background,\r\n            backgroundData,\r\n            backgroundSource,\r\n            backgroundType,\r\n            hasBackground,\r\n            isPendulum,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        background,\r\n        backgroundData,\r\n        backgroundSource,\r\n        backgroundType,\r\n        getUpdater,\r\n        hasBackground,\r\n        isPendulum,\r\n        setCard,\r\n    })));\r\n    const [backgroundInputVisible, setBackgroundInputVisible] = useState(true);\r\n    const [backgroundInputHidden, setBackgroundInputHidden] = useState(true);\r\n    const [opacity, setOpacity] = useState(() => ({ ...getDefaultCardOpacity(), ...defaultValue }));\r\n    const backgroundInputRef = useRef<BackgroundInputGroupRef>(null);\r\n\r\n    const changeBackgroundType = useMemo(() => getUpdater('backgroundType'), [getUpdater]);\r\n    const changeHasBackground = useCallback((e: any) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n\r\n        return { ...currentCard, hasBackground: nextValue };\r\n    }), [setCard]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                onChange(opacity);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [opacity]);\r\n\r\n    useEffect(() => {\r\n        /** Force render, otherwise we will miss the image */\r\n        setBackgroundInputVisible(false);\r\n        /** Avoid consecutive render here, so the popover does not \"flashing\" when close */\r\n        setTimeout(() => {\r\n            setBackgroundInputHidden(false);\r\n        }, 250);\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => backgroundInputRef.current?.isLoading() ?? false,\r\n        setValue: ({ background, backgroundCrop, backgroundData, backgroundSource, ...newValue }) => {\r\n            if ((typeof background === 'string' || typeof backgroundData === 'string') && backgroundCrop) {\r\n                backgroundInputRef.current?.setValue({ background, backgroundCrop, backgroundData, backgroundSource });\r\n            }\r\n            for (const key in newValue) {\r\n                if (newValue[key as keyof CardOpacity] !== opacity[key as keyof CardOpacity]) {\r\n                    setOpacity(cur => {\r\n                        return { ...cur, ...newValue };\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    const noBackground = (background ?? '').length === 0\r\n        && (backgroundInputRef.current?.hasImage() !== true);\r\n    return <StyledLayoutPickerContainer className=\"card-opacity-slider-container\">\r\n        <Tooltip\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n            title={<StyledBoundlessOverlay>\r\n                {language['input.opacity.boundless.tooltip']}\r\n            </StyledBoundlessOverlay>}\r\n        >\r\n            <Checkbox\r\n                className=\"art-frame\"\r\n                onChange={value => setOpacity(cur => ({ ...cur, boundless: value.target.checked }))}\r\n                checked={opacity.boundless}\r\n            >\r\n                {language['input.opacity.boundless.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        {OpacityList.map(({ labelKey, type, subType, tooltipKey }) => {\r\n            if (type === 'pendulum' && !isPendulum) return null;\r\n            const activable = !!subType;\r\n            const isActive = subType && opacity[subType];\r\n            return <CombinedSliderContainer key={type}\r\n                className={[\r\n                    'card-opacity-slider',\r\n                    isActive ? '' : 'inactive',\r\n                ].join(' ')}\r\n            >\r\n                <div className=\"slider-label\">\r\n                    {type === 'body' && <Popover\r\n                        visible={backgroundInputVisible}\r\n                        destroyTooltipOnHide={false}\r\n                        trigger={['click']}\r\n                        onVisibleChange={setBackgroundInputVisible}\r\n                        overlayClassName={[\r\n                            'global-input-overlay global-style-picker-overlay layout-picker-overlay',\r\n                            backgroundInputVisible ? 'picker-visible' : '',\r\n                            backgroundInputHidden ? 'picker-hidden' : '',\r\n                        ].join(' ')}\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledBaseFillPickerContainer\r\n                                className={[\r\n                                    'custom-style-picker',\r\n                                    noBackground ? 'overlay-no-background-image' : ''\r\n                                ].join(' ')}\r\n                            >\r\n                                <h3 className={`custom-style-expand ${hasBackground ? '' : 'inactive'}`}>\r\n                                    <Checkbox\r\n                                        checked={hasBackground}\r\n                                        onChange={e => {\r\n                                            changeHasBackground(e);\r\n                                        }}\r\n                                    >{language['input.background.toggle-label']}</Checkbox>\r\n                                    <br />\r\n                                    <i>{language['input.background.description']}</i>\r\n                                </h3>\r\n                                <div className={`background-picker ${hasBackground ? '' : 'overlay-no-background'}`}>\r\n                                    <BackgroundInputGroup\r\n                                        ref={backgroundInputRef}\r\n                                        receivingCanvas={receivingCanvas}\r\n                                        onSourceLoaded={onSourceLoaded}\r\n                                        onTainted={onTainted}\r\n                                        onCropChange={onCropChange}\r\n                                        backgroundColor={opacity.baseFill}\r\n                                    >\r\n                                        <div className=\"layout-picker-panel\">\r\n                                            <div className=\"layout-picker-subpanel color-section\">\r\n                                                <h2>{language['input.background-color.label']}</h2>\r\n                                                <CompactPicker\r\n                                                    colors={DefaultColorList}\r\n                                                    color={opacity.baseFill}\r\n                                                    onChangeComplete={color => {\r\n                                                        setOpacity(cur => ({ ...cur, baseFill: color.hex }));\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {!noBackground && <div className=\"layout-picker-subpanel type-section\">\r\n                                                <h2>{language['input.background-type.label']}</h2>\r\n                                                <RadioTrain\r\n                                                    className=\"background-type-picker\"\r\n                                                    onChange={changeBackgroundType}\r\n                                                    optionList={getBackgroundTypeList({\r\n                                                        fit: language['input.background-type.fit.label'],\r\n                                                        full: language['input.background-type.full.label'],\r\n                                                        frame: language['input.background-type.frame.label'],\r\n                                                    })}\r\n                                                    value={backgroundType}\r\n                                                />\r\n                                            </div>}\r\n                                        </div>\r\n                                    </BackgroundInputGroup>\r\n                                </div>\r\n                            </StyledBaseFillPickerContainer>\r\n                        </div>}\r\n                        placement=\"bottom\"\r\n                    >\r\n                        <div\r\n                            className=\"background-preview\"\r\n                            style={{ backgroundColor: hasBackground ? opacity.baseFill : DEFAULT_BASE_FILL_COLOR }}\r\n                        >\r\n                            <Tooltip overlay={language['input.background.toolip']}>\r\n                                <div className=\"background-preview-callback-passer\">\r\n                                    {hasBackground\r\n                                        ? background\r\n                                            ? <img\r\n                                                className=\"background-image-preview\"\r\n                                                src={backgroundSource === 'online'\r\n                                                    ? background\r\n                                                    : backgroundData}\r\n                                                alt=\"Background\"\r\n                                            />\r\n                                            : null\r\n                                        : <BorderOuterOutlined className=\"no-background-icon\" />}\r\n                                </div>\r\n                            </Tooltip>\r\n                        </div>\r\n                    </Popover>}\r\n                    {activable && <Tooltip\r\n                        title={tooltipKey\r\n                            ? language[tooltipKey] ?? null\r\n                            : null}\r\n                        overlayClassName=\"long-tooltip-overlay\"\r\n                    >\r\n                        <Checkbox\r\n                            checked={isActive}\r\n                            onChange={e => subType && setOpacity(cur => ({ ...cur, [subType]: e.target.checked }))}\r\n                        />\r\n                    </Tooltip>}\r\n                    {language[labelKey]}\r\n                </div>\r\n                <InputNumber\r\n                    size=\"small\"\r\n                    min={0}\r\n                    max={100}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: typeof value === 'number' ? value : 100 }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <GuardedSlider\r\n                    min={0}\r\n                    max={100}\r\n                    step={5}\r\n                    onChange={value => setOpacity(cur => ({ ...cur, [type]: value }))}\r\n                    value={opacity[type] ?? 100}\r\n                />\r\n                <div className=\"slider-padding\" />\r\n            </CombinedSliderContainer>;\r\n        })}\r\n    </StyledLayoutPickerContainer>;\r\n});","import { Input, Popover } from 'antd';\r\nimport { RadioTrain, StyledDropdown } from 'src/component';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo } from 'react';\r\nimport { CaretDownOutlined, AlignCenterOutlined, AlignLeftOutlined, AlignRightOutlined, CloseCircleOutlined } from '@ant-design/icons';\r\nimport { StarButtonList, getSTIconButtonList } from '../const';\r\nimport { getCardIconFromFrame } from 'src/util';\r\nimport styled from 'styled-components';\r\nimport { IconTypeList, IconTypeMap } from 'src/model';\r\n\r\nconst StyledIconDropdown = styled(StyledDropdown.Container)`\r\n    img.icon-image {\r\n        width: var(--fs-lg);\r\n    }\r\n`;\r\nconst StyledCheckboxStarTrain = styled(RadioTrain)`\r\n    .custom-star-input {\r\n        width: 7rem;\r\n    }\r\n    .checkbox-star-suffix {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        column-gap: var(--spacing-sm);\r\n        row-gap: var(--spacing-xxs);\r\n        margin-left: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type CardIconInputGroupRef = {}\r\nexport type CardIconInputGroup = {\r\n    showCreativeOption: boolean,\r\n};\r\nexport const CardIconInputGroup = forwardRef<CardIconInputGroupRef, CardIconInputGroup>(({\r\n    showCreativeOption,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            subFamily,\r\n            cardIcon,\r\n            star,\r\n            starAlignment,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        subFamily,\r\n        cardIcon,\r\n        star,\r\n        starAlignment,\r\n        getUpdater,\r\n    })));\r\n\r\n    const changeCardIcon = useMemo(() => getUpdater('cardIcon'), [getUpdater]);\r\n    const changeSubFamily = useMemo(() => getUpdater('subFamily'), [getUpdater]);\r\n    const changeStar = useMemo(() => getUpdater('star'), [getUpdater]);\r\n    const changeStarAlignment = useMemo(() => getUpdater('starAlignment'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({}));\r\n\r\n    const autoIconType = getCardIconFromFrame(frame);\r\n    const iconTypeData = cardIcon === 'auto'\r\n        ? IconTypeMap[autoIconType === 'none' ? 'auto' : autoIconType]\r\n        : IconTypeMap[cardIcon];\r\n    const iconDropdownText = language[iconTypeData.labelKey];\r\n    const IconDropdownLabel = showCreativeOption\r\n        ? <>{iconDropdownText} <CaretDownOutlined /></>\r\n        : iconDropdownText;\r\n    const IconDropdown = <Popover key=\"icon-type-picker\"\r\n        trigger={['click']}\r\n        overlayClassName=\"global-input-overlay pattern-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledIconDropdown>\r\n                {IconTypeList.map(({ fullLabelKey, value, icon }) => {\r\n                    return <StyledDropdown.Option key={value}\r\n                        className={value === cardIcon ? 'menu-active' : ''}\r\n                        onClick={() => changeCardIcon(value)}\r\n                    >\r\n                        {icon ? <>{icon}&nbsp;</> : null}{language[fullLabelKey]}\r\n                    </StyledDropdown.Option>;\r\n                })}\r\n            </StyledIconDropdown>\r\n        </div>}\r\n        placement=\"bottomRight\"\r\n    >\r\n        <span\r\n            className={`card-icon-dropdown ${cardIcon === 'auto' ? '' : 'active'} ${showCreativeOption ? '' : 'disabled'}`}\r\n        >\r\n            {IconDropdownLabel}\r\n        </span>\r\n    </Popover>;\r\n    const DropdownChildren = showCreativeOption\r\n        ? IconDropdown\r\n        : IconDropdownLabel;\r\n    return cardIcon === 'auto' && autoIconType === 'none'\r\n        ? showCreativeOption\r\n            ? <RadioTrain\r\n                className=\"fill-input-train\"\r\n                value={cardIcon}\r\n                onChange={changeCardIcon}\r\n                optionList={IconTypeList.map(({ icon, value, fullLabelKey }) => {\r\n                    return {\r\n                        label: icon ?? <CloseCircleOutlined />,\r\n                        value,\r\n                        tooltipProps: {\r\n                            title: language[fullLabelKey],\r\n                        },\r\n                    };\r\n                })}\r\n            >\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : null\r\n        : iconTypeData.value === 'st'\r\n            ? <RadioTrain className=\"fill-input-train\" value={subFamily} onChange={changeSubFamily} optionList={getSTIconButtonList(language)}>\r\n                {DropdownChildren}\r\n            </RadioTrain>\r\n            : <StyledCheckboxStarTrain\r\n                className=\"checkbox-star-train\"\r\n                value={star}\r\n                onChange={changeStar}\r\n                optionList={StarButtonList}\r\n                strict={true}\r\n                suffix={showCreativeOption && <div className=\"checkbox-star-suffix\">\r\n                    <Input\r\n                        className=\"custom-star-input\"\r\n                        value={typeof star === 'number' ? '' : star}\r\n                        allowClear\r\n                        onChange={changeStar}\r\n                        placeholder={language['input.icon-type.custom.placeholder']}\r\n                    />\r\n                    <RadioTrain\r\n                        value={starAlignment}\r\n                        onChange={changeStarAlignment}\r\n                        optionList={[\r\n                            {\r\n                                value: 'auto',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.auto'] },\r\n                                label: <CloseCircleOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'left',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.left'] },\r\n                                label: <AlignLeftOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'center',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.center'] },\r\n                                label: <AlignCenterOutlined />,\r\n                            },\r\n                            {\r\n                                value: 'right',\r\n                                tooltipProps: { overlay: language['input.icon-type.alignment.right'] },\r\n                                label: <AlignRightOutlined />,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </div>}\r\n            >\r\n                {DropdownChildren}\r\n            </StyledCheckboxStarTrain>;\r\n});","export const availableCommand = new Set(['1', '2', '3', '4', '5']);\r\nexport const resolveHotkey = (\r\n    value: string,\r\n    key: string,\r\n    selectionStart: number,\r\n    selectionEnd: number,\r\n    allowNewLine: boolean,\r\n    holdingShift: boolean,\r\n    onResult: (joinedText: string, newCursorPlacement: number) => void,\r\n) => {\r\n    const selectedText = value.substring(selectionStart, selectionEnd);\r\n    const nextLetter = value[selectionEnd];\r\n    const keepInline = nextLetter === '\\n' || !allowNewLine;\r\n    let wrappedText = selectedText;\r\n    let cursorOffset = 2;\r\n    switch (key) {\r\n        case '1': {\r\n            if (holdingShift) {\r\n                wrappedText = `[[${selectedText}]]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 4 : 5;\r\n            } else {\r\n                wrappedText = `[${selectedText}]${keepInline ? '' : '\\n'}`;\r\n                cursorOffset = keepInline ? 2 : 3;\r\n            }\r\n            break;\r\n        }\r\n        case '2': wrappedText = `{${selectedText}}`; break;\r\n        case '3': wrappedText = `{${selectedText}|}`; break;\r\n        case '4': wrappedText = `{${selectedText}||}`; cursorOffset = 3; break;\r\n        case '5': wrappedText = `{{${selectedText}}}`; cursorOffset = 4; break;\r\n    }\r\n    const joinedText = value.substring(0, selectionStart)\r\n        + `${wrappedText}`\r\n        + value.substring(selectionEnd, value.length);\r\n\r\n    onResult(joinedText, selectionEnd + cursorOffset);\r\n};\r\n\r\nexport const placeCursorInInput = ({\r\n    id,\r\n    placement,\r\n}: {\r\n    id: string;\r\n    placement: number;\r\n}) => {\r\n    if (id && placement >= 0) {\r\n        const target = document.querySelector(`#${id}`) as HTMLInputElement | null;\r\n\r\n        if (target && (target.selectionEnd ?? -1) >= 0) {\r\n            target.selectionEnd = placement;\r\n        }\r\n    }\r\n};","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { TextAreaProps } from 'antd/lib/input';\r\n\r\nconst { TextArea } = Input;\r\nexport type CardTextAreaRef = {\r\n    setValue: (nextValue: string) => void,\r\n    getPickerRef: () => null | {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    },\r\n};\r\nexport type CardTextArea = {\r\n    allowHotkey?: boolean,\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: { target: { value: string } }) => void,\r\n} & Partial<TextAreaProps>;\r\nexport const CardTextArea = forwardRef<CardTextAreaRef, CardTextArea>(({\r\n    id,\r\n    allowHotkey,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== immediateValue.current) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n        getPickerRef: () => id ? ({ id, setValue: externalSetValue }) : null,\r\n    }));\r\n\r\n    return <TextArea\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        spellCheck={false}\r\n        className={`card-textarea ${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    true,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={internalOnChange}\r\n        {...rest}\r\n    />;\r\n});","import { availableCommand, placeCursorInInput, resolveHotkey } from './util';\r\nimport { Input } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { InputProps } from 'antd/lib/input';\r\nimport { useSetting } from 'src/service';\r\n\r\nexport type CardTextInputRef = {\r\n    setValue: (nextValue: string) => void,\r\n};\r\nexport type CardTextInput = {\r\n    defaultValue: string,\r\n    onTakePicker?: (ref: {\r\n        id: string, \r\n        setValue: (nextValue: string) => void;\r\n    }) => void,\r\n    onChange: (e: {target: { value: string }}) => void,\r\n} & Partial<InputProps>;\r\nexport const CardTextInput = forwardRef<CardTextInputRef, CardTextInput>(({\r\n    id,\r\n    defaultValue,\r\n    onTakePicker,\r\n    onChange,\r\n    onKeyDown,\r\n    className,\r\n    ...rest\r\n}, ref) => {\r\n    const { setting } = useSetting();\r\n    const { allowHotkey } = setting;\r\n    const immediateValue = useRef(defaultValue);\r\n    const [value, setValue] = useState(defaultValue);\r\n    const [cursorData, setCursorData] = useState({ id: '', placement: -1 });\r\n    const internalOnChange = useCallback((eventOrValue: string | { target: { value: string }}) => {\r\n        const normalizedValue = typeof eventOrValue === 'string' ? eventOrValue : eventOrValue.target.value;\r\n        immediateValue.current = normalizedValue;\r\n        setValue(normalizedValue);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        placeCursorInInput(cursorData);\r\n    }, [cursorData]);\r\n\r\n    useEffect(() => {\r\n        onChange({ target: { value } });\r\n    /** No need to depend on callback */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [value]);\r\n\r\n    const externalSetValue = (nextValue: string) => {\r\n        if (nextValue !== value) {\r\n            internalOnChange(nextValue);\r\n        }\r\n    };\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: externalSetValue,\r\n    }));\r\n\r\n    return <Input\r\n        id={id}\r\n        autoComplete=\"off\"\r\n        onFocus={() => id && onTakePicker?.({ id, setValue: externalSetValue })}\r\n        allowClear\r\n        className={`${id}-input ${className}`}\r\n        value={value}\r\n        onKeyDown={ev => {\r\n            onKeyDown?.(ev);\r\n            if (!allowHotkey) return;\r\n            const { ctrlKey, key, metaKey } = ev;\r\n            const selectionStart = ev.currentTarget.selectionStart ?? -1;\r\n            const selectionEnd = ev.currentTarget.selectionEnd ?? -1;\r\n            if ((ctrlKey || metaKey) && id && selectionEnd !== selectionStart && availableCommand.has(key)) {\r\n                ev.preventDefault();\r\n                resolveHotkey(\r\n                    ev.currentTarget.value, key,\r\n                    selectionStart, selectionEnd,\r\n                    false,\r\n                    ev.shiftKey,\r\n                    (joinedText, placement) => {\r\n                        internalOnChange(joinedText);\r\n                        setCursorData({ id, placement });\r\n                    }\r\n                );\r\n            }\r\n        }}\r\n        onChange={ev => internalOnChange(ev.target.value)}\r\n        {...rest}\r\n    />;\r\n});","import { forwardRef, useEffect, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextArea, CardTextAreaRef } from '../input-text';\r\nimport { useCard } from 'src/service';\r\n\r\nexport type EffectInputGroupRef = {\r\n    setValue: (value: string) => void,\r\n};\r\nexport type EffectInputGroup = {} & Pick<CardTextArea, 'onTakePicker'>;\r\nexport const EffectInputGroup = forwardRef<EffectInputGroupRef, EffectInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const getUpdater = useCard(state => state.getUpdater);\r\n    const effectInputRef = useRef<CardTextAreaRef>(null);\r\n\r\n    const changeEffect = useMemo(() => getUpdater('effect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useEffect(() => {\r\n        const pickerRef = effectInputRef.current?.getPickerRef();\r\n\r\n        if (pickerRef) onTakePicker?.(pickerRef);\r\n    /** No need to depend on handler */\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: (value) => {\r\n            effectInputRef.current?.setValue(value);\r\n        }\r\n    }));\r\n\r\n    return <CardTextArea ref={effectInputRef}\r\n        id=\"effect\"\r\n        allowHotkey\r\n        defaultValue={useCard.getState().card.effect}\r\n        onChange={changeEffect}\r\n        onTakePicker={onTakePicker}\r\n        autoSize={{\r\n            minRows: 9,\r\n        }}\r\n    />;\r\n});","import { useCallback } from 'react';\r\nimport { Checkbox, Tooltip } from 'antd';\r\nimport { useCard, useLanguage } from '../../service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { Card } from 'src/model';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst StyledCheckboxGroup = styled.div`\r\n    align-self: center;\r\n    text-align: right;\r\n    .ant-checkbox + span {\r\n        user-select: none;\r\n    }\r\n`;\r\n\r\nexport type CardCheckboxGroup = {};\r\nexport const CardCheckboxGroup = (_: CardCheckboxGroup) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isDuelTerminalCard,\r\n        isFirstEdition,\r\n        isSpeedCard,\r\n        isLimitedEdition,\r\n        isLegacyCard,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card,\r\n        setCard,\r\n    }) => ({\r\n        isSpeedCard: card.isSpeedCard,\r\n        isDuelTerminalCard: card.isDuelTerminalCard,\r\n        isFirstEdition: card.isFirstEdition,\r\n        isLimitedEdition: card.isLimitedEdition,\r\n        isLegacyCard: card.isLegacyCard,\r\n        setCard,\r\n    })));\r\n\r\n    /** \r\n     * * In legacy mode: All marks stay at the bottom left of the artwork, and are mutually exclusive in this state.\r\n     * * In modern mode, Limited Edition and 1st Edition text are exclusive at the right of password. Duel Terminal and Speed Duel text are exclusive at the bottom left of the artwork.\r\n     */\r\n    const onFirstEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: true,\r\n                    isLimitedEdition: false,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isFirstEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLimitedEditionChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isLimitedEdition: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onDuelTerminalCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: true,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: false,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isSpeedCard: false,\r\n                    isDuelTerminalCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isDuelTerminalCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onSpeedCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        let updatedPart: Partial<Card>;\r\n\r\n        if (nextValue) {\r\n            if (isLegacyCard) {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isFirstEdition: false,\r\n                    isLimitedEdition: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            } else {\r\n                updatedPart = {\r\n                    isDuelTerminalCard: false,\r\n                    isSpeedCard: true,\r\n                };\r\n            }\r\n        } else updatedPart = {\r\n            isSpeedCard: false,\r\n        };\r\n\r\n        return { ...currentCard, ...updatedPart };\r\n    }), [setCard, isLegacyCard]);\r\n    const onLegacyCardChange = useCallback((e: CheckboxChangeEvent) => setCard(currentCard => {\r\n        const nextValue = e.target.checked;\r\n        const {\r\n            isDuelTerminalCard,\r\n            isFirstEdition,\r\n            isLimitedEdition,\r\n            isSpeedCard,\r\n        } = currentCard;\r\n        /**\r\n         * Resolve possible conflict here. Prefer 1st Edition and Speed Card if they are present. In legacy mode, 1st Eidition is always prefered.\r\n         */\r\n        let nextIsDuelTerminalCard = false;\r\n        let nextIsFirstEdition = false;\r\n        let nextIsLimitedEdition = false;\r\n        let nextIsSpeedCard = false;\r\n\r\n        if (nextValue) {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsSpeedCard = nextIsFirstEdition ? false : isSpeedCard;\r\n            nextIsDuelTerminalCard = (nextIsSpeedCard || nextIsFirstEdition) ? false : isDuelTerminalCard;\r\n            nextIsLimitedEdition = (nextIsDuelTerminalCard || nextIsFirstEdition || nextIsLimitedEdition)\r\n                ? false\r\n                : isLimitedEdition;\r\n        } else {\r\n            nextIsFirstEdition = isFirstEdition;\r\n            nextIsLimitedEdition = nextIsFirstEdition ? false : isLimitedEdition;\r\n\r\n            nextIsSpeedCard = isSpeedCard;\r\n            nextIsDuelTerminalCard = nextIsSpeedCard ? false : isDuelTerminalCard;\r\n        }\r\n\r\n        return {\r\n            ...currentCard,\r\n            isLegacyCard: nextValue,\r\n            isDuelTerminalCard: nextIsDuelTerminalCard,\r\n            isFirstEdition: nextIsFirstEdition,\r\n            isLimitedEdition: nextIsLimitedEdition,\r\n            isSpeedCard: nextIsSpeedCard,\r\n        };\r\n    }), [setCard]);\r\n\r\n    return <StyledCheckboxGroup className=\"checkbox-input\">\r\n        <Tooltip overlayClassName=\"long-tooltip-overlay\" overlay={language['input.legacy.tooltip']}>\r\n            <Checkbox\r\n                className=\"input-legacy\"\r\n                onChange={onLegacyCardChange}\r\n                checked={isLegacyCard}\r\n                tabIndex={0}\r\n            >\r\n                {language['input.legacy.label']}\r\n            </Checkbox>\r\n        </Tooltip>\r\n        <Checkbox\r\n            className=\"input-1st\"\r\n            onChange={onFirstEditionChange}\r\n            checked={isFirstEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.1st-edition.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-limited\"\r\n            onChange={onLimitedEditionChange}\r\n            checked={isLimitedEdition}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.limited-edition.label']}\r\n        </Checkbox>\r\n        {/** They overlap if draw together, so we make them mutually exclusive. Maybe it is not worth the effort. */}\r\n        <Checkbox\r\n            className=\"input-speed\"\r\n            onChange={onSpeedCardChange}\r\n            checked={isSpeedCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.speed-duel.label']}\r\n        </Checkbox>\r\n        <Checkbox\r\n            className=\"input-terminal\"\r\n            onChange={onDuelTerminalCardChange}\r\n            checked={isDuelTerminalCard}\r\n            tabIndex={0}\r\n        >\r\n            {language['input.duel-terminal.label']}\r\n        </Checkbox>\r\n    </StyledCheckboxGroup>;\r\n};","import { RadioTrain, StyledDropdown } from 'src/component';\r\nimport styled from 'styled-components';\r\nimport { TrainGridStyle } from './input-train';\r\n\r\nexport const StyledPendulumFrameContainer = styled(StyledDropdown.Container)`\r\n    padding: var(--spacing-xs);\r\n    .radio-train {\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        max-width: 550px;\r\n        .radio-train-input-group {\r\n            gap: var(--spacing);\r\n        }\r\n    }\r\n    .ant-checkbox-wrapper {\r\n        color: var(--color-heavy);\r\n    }\r\n    .frame-auto-checkbox {\r\n        margin-bottom: var(--spacing-xs);\r\n    }\r\n    ${TrainGridStyle}\r\n`;\r\n\r\nexport const StyledInputLabelWithButton = styled.div`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t.input-label {\r\n\t\tflex: 1;\r\n\t}\r\n`;\r\n\r\nexport const StyledNameSetIdInputContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    margin-top: var(--spacing-sm);\r\n    flex-wrap: wrap;\r\n    row-gap: var(--spacing-sm);\r\n`;\r\n\r\nexport const StyledFormatRadioTrain = styled(RadioTrain)`\r\n    &.radio-train {\r\n        .ant-radio-button-wrapper-checked {\r\n            &.ocg-button {\r\n                background-color: var(--main-red-scale);\r\n                border-color: var(--sub-red-scale);\r\n                &:not([class*=\" ant-radio-button-wrapper-disabled\"]).ant-radio-button-wrapper:first-child {\r\n                    border-right-color: var(--sub-red-scale);\r\n                }\r\n                &:not(.ant-radio-button-wrapper-disabled):first-child {\r\n                    border-color: var(--sub-red-scale);\r\n                }\r\n                &:hover {\r\n                    background-color: var(--sub-red-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n            &.tcg-button {\r\n                background-color: var(--main-blue-scale);\r\n                border-color: var(--sub-blue-scale);\r\n                &:hover {\r\n                    background-color: var(--sub-blue-scale);\r\n                    color: var(--color-heavy);\r\n                }\r\n            }\r\n        }\r\n        .ocg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-red-scale);\r\n            }\r\n        }\r\n        .tcg-button {\r\n            color: var(--color-heavy);\r\n            &:hover {\r\n                color: var(--sub-blue-scale);\r\n            }\r\n        }\r\n    }\r\n`;","import { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { IconButton, RadioTrain } from 'src/component';\r\nimport { CardCheckboxGroup } from '../input-checkbox-group';\r\nimport { randomPassword } from 'src/util';\r\nimport { SyncOutlined, UnorderedListOutlined } from '@ant-design/icons';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { StickerButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { copyrightMap } from 'src/model';\r\n\r\nconst StyledFooterInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-sm);\r\n    .checkbox-input {\r\n        align-self: center;\r\n        .ant-checkbox + span {\r\n            user-select: none;\r\n        }\r\n    }\r\n    .sticker-input,\r\n    .checkbox-input {\r\n        grid-column: span 2;\r\n    }\r\n    .sticker-input .ant-radio-button-wrapper {\r\n        padding-left: var(--spacing-sm);\r\n        padding-right: var(--spacing-sm);\r\n    }\r\n`;\r\n\r\nexport type FooterInputGroupRef = {\r\n    setValue: (value: { password?: string, creator?: string, atk?: string, def?: string }) => void,\r\n};\r\nexport type FooterInputGroup = {\r\n    isMonster: boolean,\r\n    showCreativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const FooterInputGroup = forwardRef<FooterInputGroupRef, FooterInputGroup>(({\r\n    isMonster,\r\n    showCreativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: { sticker, format },\r\n        getUpdater,\r\n    }) => ({\r\n        sticker,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const passwordInputRef = useRef<CardTextInputRef>(null);\r\n    const creatorInputRef = useRef<CardTextInputRef>(null);\r\n    const atkInputRef = useRef<CardTextInputRef>(null);\r\n    const defInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const copyrightList = (format && copyrightMap[format as keyof typeof copyrightMap])\r\n        ? copyrightMap[format as keyof typeof copyrightMap]\r\n        : copyrightMap.tcg;\r\n\r\n    const changeATK = useMemo(() => getUpdater('atk', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changeDEF = useMemo(() => getUpdater('def', value => typeof value === 'string' ? value : value), [getUpdater]);\r\n    const changePassword = useMemo(() => getUpdater('password', undefined, 'debounce'), [getUpdater]);\r\n    const onStickerChange = useMemo(() => getUpdater('sticker'), [getUpdater]);\r\n    const changeCreator = useMemo(() => getUpdater('creator', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ password, creator, atk, def }) => {\r\n            if (typeof atk === 'string') atkInputRef.current?.setValue(atk);\r\n            if (typeof def === 'string') defInputRef.current?.setValue(def);\r\n            if (typeof password === 'string') passwordInputRef.current?.setValue(password);\r\n            if (typeof creator === 'string') creatorInputRef.current?.setValue(creator);\r\n        }\r\n    }));\r\n\r\n    return <StyledFooterInputContainer className=\"card-footer-input\">\r\n        {(isMonster || showCreativeOption) && <>\r\n            <CardTextInput ref={atkInputRef}\r\n                id=\"atk\"\r\n                addonBefore={language['input.atk.label']}\r\n                defaultValue={useCard.getState().card.atk}\r\n                onChange={changeATK}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n            <CardTextInput ref={defInputRef}\r\n                id=\"def\"\r\n                addonBefore={language['input.def.label']}\r\n                defaultValue={useCard.getState().card.def}\r\n                onChange={changeDEF}\r\n                onTakePicker={onTakePicker}\r\n            />\r\n        </>}\r\n        <CardTextInput ref={passwordInputRef}\r\n            id=\"password\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.password.label']}</div>\r\n                <IconButton\r\n                    onClick={() => passwordInputRef.current?.setValue(randomPassword())}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.password}\r\n            onChange={changePassword}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={creatorInputRef}\r\n            id=\"creator\"\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">{language['input.copyright.label']}</div>\r\n                <Dropdown\r\n                    className=\"save-button-dropdown\"\r\n                    placement=\"topLeft\"\r\n                    arrow\r\n                    overlay={<Menu onClick={e => e.domEvent.stopPropagation()}>\r\n                        {copyrightList.map((text, index) => {\r\n                            return <Menu.Item key={`${index}`}\r\n                                onClick={() => {\r\n                                    creatorInputRef.current?.setValue(text);\r\n                                }}\r\n                            >\r\n                                {text}\r\n                            </Menu.Item>;\r\n                        })}\r\n                    </Menu>}\r\n                >\r\n                    <div>\r\n                    <IconButton\r\n                    onClick={() => {}}\r\n                        Icon={UnorderedListOutlined}\r\n                    />\r\n                    </div>\r\n                </Dropdown>\r\n            </StyledInputLabelWithButton>}\r\n            defaultValue={useCard.getState().card.creator}\r\n            onChange={changeCreator}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardCheckboxGroup />\r\n        <RadioTrain\r\n            className=\"sticker-input fill-input-train\"\r\n            value={sticker}\r\n            onChange={onStickerChange}\r\n            optionList={StickerButtonList}\r\n        >\r\n            <span>{language['input.sticker.label']}</span>\r\n        </RadioTrain>\r\n    </StyledFooterInputContainer>;\r\n});","import { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { ImageCropper, ImageCropperRef, LinkMarkChooser, RadioTrain } from 'src/component';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { ArtFinishButtonList } from '../const';\r\nimport { getArtCanvasCoordinate } from 'src/model';\r\nimport styled from 'styled-components';\r\nimport { notification } from 'antd';\r\n\r\nconst StyledImageRadioTrain = styled(RadioTrain)`\r\n    .ant-input-group-addon {\r\n        flex: 0;\r\n    }\r\n    .radio-train-input-group .ant-radio-button-wrapper {\r\n        min-width: unset;\r\n    }\r\n`;\r\n\r\nexport type ImageInputGroupRef = {\r\n    setValue: (value: {\r\n        art?: string,\r\n        artData?: string,\r\n        artSource?: string,\r\n        artCrop?: Partial<ReactCrop.Crop>,\r\n    }) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type ImageInputGroup = {\r\n    showExtraDecorativeOption: boolean,\r\n    receivingCanvas: HTMLCanvasElement | null,\r\n    onCropChange?: (cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online') => void,\r\n    onTainted: ImageCropper['onTainted'],\r\n    onSourceLoaded: ImageCropper['onSourceLoaded'],\r\n};\r\nexport const ImageInputGroup = forwardRef<ImageInputGroupRef, ImageInputGroup>(({\r\n    showExtraDecorativeOption,\r\n    receivingCanvas,\r\n    onSourceLoaded,\r\n    onTainted,\r\n    onCropChange,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            opacity,\r\n            artFinish,\r\n            linkMap,\r\n            isPendulum, pendulumSize,\r\n            isLink,\r\n            art, artCrop, artData, artSource, artFit,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        opacity,\r\n        artFinish,\r\n        linkMap,\r\n        isPendulum, pendulumSize,\r\n        isLink,\r\n        art, artCrop, artData, artSource, artFit,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const imageCropperRef = useRef<ImageCropperRef>(null);\r\n\r\n    const changeLinkMap = useMemo(() => getUpdater('linkMap'), [getUpdater]);\r\n    const changeLinkStatus = useCallback((willBecomeLink: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            isLink: willBecomeLink,\r\n        };\r\n    }), [setCard]);\r\n    const changeArt = useMemo(() => getUpdater('art'), [getUpdater]);\r\n    const changeArtData = useMemo(() => getUpdater('artData'), [getUpdater]);\r\n    const changeArtFit = useCallback((status: boolean) => setCard(currentCard => {\r\n        return {\r\n            ...currentCard,\r\n            artFit: status,\r\n        };\r\n    }), [setCard]);\r\n    const changeArtSource = useMemo(() => getUpdater('artSource'), [getUpdater]);\r\n    const changeArtFinish = useMemo(() => getUpdater('artFinish'), [getUpdater]);\r\n    const changeImageCrop = useCallback((cropInfo: Partial<ReactCrop.Crop>, sourceType: 'offline' | 'online', byUser?: boolean) => {\r\n        onCropChange?.(cropInfo, sourceType);\r\n        if (cropInfo) setCard(\r\n            curr => ({\r\n                ...curr,\r\n                artCrop: cropInfo,\r\n            }),\r\n            byUser,\r\n        );\r\n    }, [onCropChange, setCard]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        isLoading: () => imageCropperRef.current?.isLoading() ?? false,\r\n        setValue: ({ art, artCrop, artData, artSource }) => {\r\n            if (artSource === 'offline') {\r\n                if (typeof artData === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('offline', artData, artCrop);\r\n                }\r\n            } else {\r\n                if (typeof art === 'string' && artCrop) {\r\n                    imageCropperRef.current?.forceSource('online', art, artCrop);\r\n                }\r\n            }\r\n        }\r\n    }));\r\n\r\n    return <ImageCropper\r\n        ref={imageCropperRef}\r\n        title={language['input.card-art.label']}\r\n        defaultSourceType={artSource}\r\n        defaultExternalSource={art}\r\n        defaultInternalSource={artData}\r\n        defaultCropInfo={artCrop}\r\n        forceFit={artFit}\r\n        receivingCanvas={receivingCanvas}\r\n        onSourceChange={(type, data) => {\r\n            changeArtSource(type);\r\n            if (type === 'offline') changeArtData(data);\r\n            else changeArt(data);\r\n        }}\r\n        onCropChange={changeImageCrop}\r\n        onTainted={onTainted}\r\n        onSourceLoaded={onSourceLoaded}\r\n        onForceFitChange={changeArtFit}\r\n        onMaxSizeExceeded={size => {\r\n            notification.error({\r\n                description: language['error.max-size.description'](size),\r\n                message: language['error.max-size.message'],\r\n            });\r\n        }}\r\n        ratio={getArtCanvasCoordinate(isPendulum, opacity, undefined, pendulumSize).ratio}\r\n        beforeCropper={showExtraDecorativeOption\r\n            ? <StyledImageRadioTrain\r\n                className=\"art-finish-checkbox fill-input-train\"\r\n                value={artFinish}\r\n                onChange={changeArtFinish}\r\n                optionList={ArtFinishButtonList}\r\n            >\r\n                <span className=\"field-title\">{language['input.art-finish.label']}</span>\r\n            </StyledImageRadioTrain>\r\n            : null\r\n        }\r\n    >\r\n        <div>\r\n            <LinkMarkChooser key={`link-${JSON.stringify(linkMap)}`}\r\n                active={isLink === true}\r\n                defaultValue={linkMap}\r\n                onChange={changeLinkMap}\r\n                onStatusChange={changeLinkStatus}\r\n            />\r\n        </div>\r\n    </ImageCropper>;\r\n});","import { Tooltip } from 'antd';\r\nimport { IconButton } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { SyncOutlined } from '@ant-design/icons';\r\nimport { normalizeCardName, randomSetID } from 'src/util';\r\nimport { StyledInputLabelWithButton } from '../input-panel.styled';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledNameInputContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: var(--spacing-sm);\r\n    width: 100%;\r\n    .name-input {\r\n        flex: 3;\r\n        min-width: 400px;\r\n    }\r\n    .set-id-input {\r\n        flex: 1;\r\n        min-width: 250px;\r\n    }\r\n`;\r\nconst StyledCopyButton = styled.span`\r\n    cursor: pointer;\r\n`;\r\n\r\nexport type NameSetInputGroupRef = {\r\n    setValue: (value: { name?: string, setId?: string }) => void,\r\n}\r\nexport type NameSetInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const NameSetInputGroup = forwardRef<NameSetInputGroupRef, NameSetInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            name,\r\n            format,\r\n        },\r\n        getUpdater,\r\n    }) => ({\r\n        name,\r\n        format,\r\n        getUpdater,\r\n    })));\r\n    const nameInputRef = useRef<CardTextInputRef>(null);\r\n    const setIdInputRef = useRef<CardTextInputRef>(null);\r\n\r\n    const changeSetId = useMemo(() => getUpdater('setId'), [getUpdater]);\r\n    const changeName = useMemo(() => getUpdater('name', undefined, 'debounce'), [getUpdater]);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ name, setId }) => {\r\n            if (typeof name === 'string') nameInputRef.current?.setValue(name);\r\n            if (typeof setId === 'string') setIdInputRef.current?.setValue(setId);\r\n        }\r\n    }));\r\n\r\n    return <StyledNameInputContainer className=\"name-id-input\">\r\n        <CardTextInput ref={nameInputRef}\r\n            id=\"name\"\r\n            defaultValue={name}\r\n            addonBefore={<Tooltip title={language['input.name.tooltip']}>\r\n                <StyledCopyButton onClick={() => {\r\n                    navigator.clipboard.writeText(normalizeCardName(name));\r\n                }}>\r\n                    {language['input.name.label']}\r\n                </StyledCopyButton>\r\n            </Tooltip>}\r\n            onChange={changeName}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        <CardTextInput ref={setIdInputRef}\r\n            id=\"set-id\"\r\n            defaultValue={useCard.getState().card.setId}\r\n            addonBefore={<StyledInputLabelWithButton className=\"input-label-with-button\">\r\n                <div className=\"input-label\">\r\n                    {language['input.set-id.label']}\r\n                </div>\r\n                <IconButton\r\n                    onClick={() => setIdInputRef.current?.setValue(randomSetID(format))}\r\n                    Icon={SyncOutlined}\r\n                    tooltipProps={{ overlay: language['button.randomize.label'] }}\r\n                />\r\n            </StyledInputLabelWithButton>}\r\n            onChange={changeSetId}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n    </StyledNameInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { StyledPendulumFrameContainer } from '../input-panel.styled';\r\nimport { FrameInfoBlock, PopoverButton, RadioTrain, StyledDropdown } from 'src/component';\r\nimport { CardTextArea, CardTextAreaRef, CardTextInput } from '../input-text';\r\nimport { useCard, useLanguage, useSetting } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport { DEFAULT_PENDULUM_SIZE, FrameInfoMap, PendulumSizeMap } from 'src/model';\r\nimport { CaretDownOutlined } from '@ant-design/icons';\r\nimport { getFrameButtonList, getPendulumSizeList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { getNavigationProps } from 'src/util';\r\n\r\ntype BottomFrameOptionGridRef = {\r\n    focus: () => void,\r\n};\r\ntype BottomFrameOptionGrid = {\r\n    pendulumFrame: string,\r\n    frameList: ReturnType<typeof getFrameButtonList>,\r\n    onChange: (value: string | number) => void,\r\n    onCancel: () => void,\r\n};\r\nconst BottomFrameOptionGrid = forwardRef<BottomFrameOptionGridRef, BottomFrameOptionGrid>(({\r\n    frameList,\r\n    pendulumFrame,\r\n    onChange,\r\n    onCancel,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const inputRef = useRef<HTMLInputElement>(null);\r\n    const [focus, setFocus] = useState(0);\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        focus: () => inputRef.current?.focus(),\r\n    }));\r\n\r\n    return <StyledPendulumFrameContainer\r\n        className=\"pendulum-frame-picker\"\r\n        {...getNavigationProps({\r\n            stopPropagation: true,\r\n            optionLength: frameList.length,\r\n            setFocus,\r\n            onTrigger: () => {\r\n                if (focus >= 0) onChange(frameList[focus].value);\r\n            },\r\n            onCancel,\r\n        })}\r\n    >\r\n        <Checkbox ref={inputRef}\r\n            className=\"frame-auto-checkbox\"\r\n            checked={pendulumFrame === 'auto'}\r\n            onChange={e => {\r\n                onChange(e.target.checked ? 'auto' : recentCustomPendulumFrame.current);\r\n            }}\r\n        >{language['input.frame.auto']}</Checkbox>\r\n        <RadioTrain\r\n            className=\"frame-radio\"\r\n            value={pendulumFrame}\r\n            onChange={onChange}\r\n            optionList={frameList}\r\n        />\r\n    </StyledPendulumFrameContainer>;\r\n});\r\n\r\nconst StyledPendulumFrameInputContainer = styled.div`\r\n    display: inline-flex;\r\n    cursor: pointer;\r\n    box-shadow: var(--bs-input);\r\n    vertical-align: bottom;\r\n    box-shadow: var(--bs-button);\r\n    border-radius: var(--br-lg);\r\n    &:focus-visible {\r\n        outline: 2px solid var(--focus);\r\n    }\r\n    .pendulum-frame-info-block {\r\n        border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n        line-height: 2; // Alignment\r\n        background-color: var(--main-level-4);\r\n        min-width: 110px;\r\n        overflow: hidden;\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        .frame-info-block-label {\r\n            padding: var(--spacing-px) var(--spacing-xs);\r\n        }\r\n    }\r\n    .pendulum-frame-label {\r\n        display: inline-block;\r\n        background: var(--main-level-4);\r\n        border: var(--bw) solid var(--sub-level-1);\r\n        border-right: none;\r\n        padding: var(--spacing-px) var(--spacing-xs);\r\n        border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n        line-height: 2; // Alignment\r\n        &:last-child {\r\n            border-radius: var(--br-lg);\r\n            border-right: var(--bw) solid var(--sub-level-1);\r\n        }\r\n    }\r\n`;\r\nconst StyledPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    column-gap: var(--spacing-sm);\r\n    row-gap: var(--spacing-sm);\r\n    .red-scale {\r\n        color: var(--sub-red-scale);\r\n    }\r\n    .blue-scale {\r\n        color: var(--sub-blue-scale);\r\n    }\r\n    .pendulum-option {\r\n        display: grid;\r\n        grid-template-columns: var(--width-label) 1fr;\r\n        align-items: center;\r\n        .pendulum-frame-input,\r\n        .pendulum-checkbox {\r\n            flex: 0 0 auto;\r\n        }\r\n        .mirror-scale {\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            align-items: center;\r\n        }\r\n    }\r\n    .joined-row {\r\n        position: relative;\r\n        grid-column: span 2;\r\n        .standalone-label {\r\n            min-width: 0;\r\n            width: unset;\r\n            padding-left: var(--spacing-antd);\r\n        }\r\n        .pendulum-checkbox {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n            /** Alignment **/\r\n            line-height: 32px;\r\n            text-align: right;\r\n            font-weight: 500;\r\n            margin-right: 0;\r\n            padding-right: var(--spacing);\r\n            > span {\r\n                padding-right: 0;\r\n            }\r\n        }\r\n        .pendulum-checkbox-placeholder {\r\n            display: inline-block;\r\n            /** Alignment **/\r\n            width: var(--width-label);\r\n        }\r\n        .pendulum-frame-input {\r\n            margin-right: var(--spacing);\r\n        }\r\n        .pendulum-size {\r\n            display: inline-block;\r\n            line-height: 1.15; // Alignment\r\n            margin-right: var(--spacing);\r\n        }\r\n        .ant-checkbox-wrapper + .ant-checkbox-wrapper {\r\n            margin-left: 0;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PendulumInputGroupRef = {\r\n    setValue: (value: { pendulumEffect?: string }) => void,\r\n}\r\nexport type PendulumInputGroup = {\r\n    softMode: boolean,\r\n    showCreativeOption: boolean,\r\n    showExtraDecorativeOption: boolean,\r\n} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PendulumInputGroup = forwardRef<PendulumInputGroupRef, PendulumInputGroup>(({\r\n    softMode,\r\n    showCreativeOption,\r\n    showExtraDecorativeOption,\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            isPendulum,\r\n            pendulumFrame,\r\n            pendulumScaleBlue,\r\n            pendulumScaleRed,\r\n            pendulumSize,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        isPendulum,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        pendulumSize,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const {\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    } = useSetting(useShallow(({\r\n        setting: { mirrorPendulumScale },\r\n        updateSetting,\r\n    }) => ({\r\n        mirrorPendulumScale,\r\n        updateSetting,\r\n    })));\r\n    const containerRef = useRef<HTMLDivElement>(null);\r\n    const bottomFrameOptionGridRef = useRef<BottomFrameOptionGridRef>(null);\r\n    const pendulumEffectInputRef = useRef<CardTextAreaRef>(null);\r\n    const [frameDropdownVisible, setFrameDropdownVisibleVisible] = useState(false);\r\n    const recentCustomPendulumFrame = useRef(pendulumFrame === 'auto' ? 'spell' : pendulumFrame);\r\n    const changeToPendulum = (e: any) => setCard(currentCard => {\r\n        const willBecomePendulum = e.target.checked;\r\n        /** It is rather not desirable to seemingly reduce opacity of pendulum frame, even though it looks closer to real card */\r\n        // const currentOpacity = currentCard.opacity;\r\n        // const nextOpacity = willBecomePendulum && (currentOpacity.pendulum ?? 100) !== 85\r\n        //     ? { ...currentOpacity, pendulum: 85 }\r\n        //     : currentOpacity;\r\n\r\n        return {\r\n            ...currentCard,\r\n            // opacity: nextOpacity,\r\n            isPendulum: willBecomePendulum,\r\n        };\r\n    });\r\n    const changeBottomFrame = (value: string | number) => {\r\n        const normalizedValue = `${value}`;\r\n\r\n        if (normalizedValue !== 'auto') recentCustomPendulumFrame.current = normalizedValue;\r\n        setCard(currentCard => {\r\n            return { ...currentCard, pendulumFrame: normalizedValue };\r\n        });\r\n    };\r\n    const onRedScaleChange = useMemo(() => getUpdater('pendulumScaleRed'), [getUpdater]);\r\n    const onBlueScaleChange = useMemo(() => getUpdater('pendulumScaleBlue'), [getUpdater]);\r\n    const onPendulumSizeChange = useMemo(() => getUpdater('pendulumSize'), [getUpdater]);\r\n    const changePendulumEffect = useMemo(() => getUpdater('pendulumEffect', undefined, 'debounce'), [getUpdater]);\r\n\r\n    const pendulumSizeList = useMemo(() => getPendulumSizeList(language), [language]);\r\n    const frameList = useMemo(() => getFrameButtonList()\r\n        .filter(entry => {\r\n            return showExtraDecorativeOption || entry.edition === 'normal';\r\n        }),\r\n        [showExtraDecorativeOption],\r\n    );\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ pendulumEffect }) => {\r\n            if (pendulumEffect) pendulumEffectInputRef.current?.setValue(pendulumEffect);\r\n        }\r\n    }));\r\n\r\n    const currentPendulumFrame = FrameInfoMap[pendulumFrame];\r\n    return <StyledPendulumInputContainer\r\n        className=\"pendulum-input\"\r\n    >\r\n        <div className=\"joined-row pendulum-option\">\r\n            <div className=\"pendulum-checkbox\">\r\n                <Checkbox\r\n                    onChange={changeToPendulum}\r\n                    checked={isPendulum}\r\n                >{language['input.pendulum.label']}</Checkbox>\r\n            </div>\r\n            <div className=\"pendulum-option-container\">\r\n                {showCreativeOption && <Popover\r\n                    visible={frameDropdownVisible}\r\n                    onVisibleChange={setFrameDropdownVisibleVisible}\r\n                    trigger={['hover', 'click']}\r\n                    placement=\"bottom\"\r\n                    overlayClassName=\"pendulum-frame-picker-overlay\"\r\n                    content={<div className=\"overlay-event-absorber\">\r\n                        <BottomFrameOptionGrid ref={bottomFrameOptionGridRef}\r\n                            frameList={frameList}\r\n                            pendulumFrame={pendulumFrame}\r\n                            onCancel={() => {\r\n                                setFrameDropdownVisibleVisible(false);\r\n                                containerRef.current?.focus();\r\n                            }}\r\n                            onChange={changeBottomFrame}\r\n                        />\r\n                    </div>}\r\n                >\r\n                    <StyledPendulumFrameInputContainer ref={containerRef}\r\n                        className=\"pendulum-frame-input\"\r\n                        tabIndex={0}\r\n                        onKeyDown={e => {\r\n                            if (e.key === 'ArrowDown' || e.key === 'Enter' || e.key === '  ') {\r\n                                setFrameDropdownVisibleVisible(true);\r\n                                /** Popover takes time to mount / become visible */\r\n                                setTimeout(() => {\r\n                                    bottomFrameOptionGridRef.current?.focus();\r\n                                }, 200);\r\n\r\n                                return false;\r\n                            }\r\n                        }}\r\n                    >\r\n                        <span className=\"pendulum-frame-label\">{language['input.bottom-frame.label']} <CaretDownOutlined /></span>\r\n                        {currentPendulumFrame\r\n                            ? <FrameInfoBlock className=\"pendulum-frame-info-block\" {...currentPendulumFrame} />\r\n                            : <FrameInfoBlock className=\"pendulum-frame-info-block\" nameKey=\"input.frame.auto\" />}\r\n                    </StyledPendulumFrameInputContainer>\r\n                </Popover>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <div className=\"pendulum-size\">\r\n                    <Popover key=\"color-picker\"\r\n                        overlayClassName=\"global-input-overlay font-picker-overlay\"\r\n                        content={<div className=\"overlay-event-absorber\">\r\n                            <StyledDropdown.Container>\r\n                                {pendulumSizeList.map(({ value, label }) => {\r\n                                    return <StyledDropdown.Option key={value}\r\n                                        className={pendulumSize === value ? 'menu-active' : ''}\r\n                                        onClick={() => {\r\n                                            onPendulumSizeChange(value);\r\n                                        }}\r\n                                    >\r\n                                        {label}\r\n                                    </StyledDropdown.Option>;\r\n                                })}\r\n                            </StyledDropdown.Container>\r\n                        </div>}\r\n                        placement=\"bottomLeft\"\r\n                    >\r\n                        <PopoverButton\r\n                            $softMode={softMode}\r\n                            $active={pendulumSize !== DEFAULT_PENDULUM_SIZE}\r\n                        >\r\n                            {language[PendulumSizeMap[pendulumSize].labelKey]}\r\n                        </PopoverButton>\r\n                    </Popover>\r\n                </div>}\r\n                {(isPendulum && showCreativeOption)\r\n                    && <Checkbox\r\n                        className=\"mirror-scale\"\r\n                        onChange={e => {\r\n                            const willMirror = e.target.checked;\r\n\r\n                            updateSetting({ mirrorPendulumScale: willMirror });\r\n                            if (willMirror) onRedScaleChange(pendulumScaleBlue);\r\n                        }}\r\n                        checked={mirrorPendulumScale}\r\n                    >\r\n                        {language['input.mirror-scale.label']}\r\n                    </Checkbox>}\r\n            </div>\r\n        </div>\r\n        {isPendulum && <>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"blue-scale\"  className=\"blue-scale\">\r\n                                {language['input.scale.blue.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleBlue}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        onBlueScaleChange(e);\r\n                        if (mirrorPendulumScale) onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Input\r\n                    addonBefore={<span>\r\n                        {language['input.scale.label'](\r\n                            <span key=\"red-scale\" className=\"red-scale\">\r\n                                {language['input.scale.red.label']}\r\n                            </span>\r\n                        )}\r\n                    </span>}\r\n                    value={pendulumScaleRed}\r\n                    allowClear\r\n                    onChange={e => {\r\n                        if (mirrorPendulumScale) onBlueScaleChange(e);\r\n                        onRedScaleChange(e);\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className=\"joined-row\">\r\n                {/** Explicit label does not looks too good */}\r\n                {/* <StandaloneLabel className=\"standalone-label\">Pendulum Effect</StandaloneLabel> */}\r\n                <CardTextArea ref={pendulumEffectInputRef}\r\n                    id=\"pendulum-effect\"\r\n                    allowHotkey\r\n                    defaultValue={useCard.getState().card.pendulumEffect}\r\n                    onChange={changePendulumEffect}\r\n                    onTakePicker={onTakePicker}\r\n                    autoSize={{\r\n                        minRows: 5,\r\n                    }}\r\n                />\r\n            </div>\r\n        </>}\r\n    </StyledPendulumInputContainer>;\r\n});","import { Checkbox, Tooltip } from 'antd';\r\nimport { Explanation, FormattingHelpDrawer, RadioTrain, StyledPopMarkdown } from 'src/component';\r\nimport { CardTextInput, CardTextInputRef } from '../input-text';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { forwardRef, useCallback, useImperativeHandle, useMemo, useRef } from 'react';\r\nimport { CondenseType, IconTypeMap } from 'src/model';\r\nimport { CondenseThresholdButtonList } from '../const';\r\nimport styled from 'styled-components';\r\nimport { checkMonster } from 'src/util';\r\n\r\nconst StyledPostPendulumInputContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr max-content;\r\n    grid-template-areas:\r\n        \"type-input input-helper\"\r\n        \"condense-input help-button\";\r\n    gap: var(--spacing-sm);\r\n    align-items: center;\r\n    .formatting-help-button {\r\n        grid-area: help-button;\r\n        &:focus {\r\n            box-shadow: 0 0 0 2px var(--focus);\r\n        }\r\n    }\r\n    .input-kanji-helper {\r\n        grid-area: input-helper;\r\n    }\r\n    .type-ability-input {\r\n        grid-area: type-input;\r\n    }\r\n    .condense-input {\r\n        grid-area: condense-input;\r\n\t\t.standalone-addon.ant-input-group-addon {\r\n\t\t\twidth: unset;\r\n\t\t}\r\n\t\t.ant-radio-button-wrapper {\r\n\t\t\tflex: 1 1 90px;\r\n\t\t}\r\n\t}\r\n    &.variant-tcg {\r\n        .type-ability-input {\r\n            grid-column: span 2;\r\n        }\r\n    }\r\n`;\r\n\r\nexport type PostPendulumInputGroupRef = {\r\n    setValue: (value: { typeAbility?: string[] }) => void,\r\n}\r\nexport type PostPendulumInputGroup = {} & Pick<CardTextInput, 'onTakePicker'>;\r\nexport const PostPendulumInputGroup = forwardRef<PostPendulumInputGroupRef, PostPendulumInputGroup>(({\r\n    onTakePicker,\r\n}, ref) => {\r\n    const language = useLanguage();\r\n    const {\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            frame,\r\n            cardIcon,\r\n            format,\r\n            furiganaHelper,\r\n            effectStyle,\r\n        },\r\n        setCard,\r\n        getUpdater,\r\n    }) => ({\r\n        frame,\r\n        cardIcon,\r\n        format,\r\n        furiganaHelper,\r\n        condenseTolerant: effectStyle?.condenseTolerant,\r\n        setCard,\r\n        getUpdater,\r\n    })));\r\n    const typeAbilitySeparator = format === 'ocg' ? '／' : '/';\r\n    const typeAbilityInputRef = useRef<CardTextInputRef>(null);\r\n    const changeTypeAbility = useMemo(() => {\r\n        return getUpdater(\r\n            'typeAbility',\r\n            value => {\r\n                return typeof value !== 'string' ? [] : value.split(/／|\\//)\r\n                    .map(entry => `${entry}`.trim())\r\n                    .filter(entry => typeof entry === 'string' && entry.length > 0);\r\n            },\r\n            'debounce',\r\n        );\r\n    }, [getUpdater]);\r\n    const toggleFuriganaHelper = useCallback((e: any) => setCard(currentCard => {\r\n        return { ...currentCard, furiganaHelper: e.target.checked };\r\n    }), [setCard]);\r\n    const onCondenseTolerantChange = (value: CondenseType) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                effectStyle: {\r\n                    ...currentCard.effectStyle,\r\n                    condenseTolerant: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    useImperativeHandle(ref, () => ({\r\n        setValue: ({ typeAbility }) => {\r\n            if (typeAbility) typeAbilityInputRef.current?.setValue(typeAbility.join(typeAbilitySeparator));\r\n        }\r\n    }));\r\n\r\n    const typeLabel = cardIcon === 'auto'\r\n        ? checkMonster({ frame })\r\n            ? 'input.type.monster.label'\r\n            : 'input.type.st.label'\r\n        : IconTypeMap[cardIcon].value === 'st'\r\n            ? 'input.type.st.label'\r\n            : 'input.type.monster.label';\r\n    const isOCG = format === 'ocg';\r\n    return <StyledPostPendulumInputContainer className={`post-pendulum-input variant-${format}`}>\r\n        <CardTextInput ref={typeAbilityInputRef}\r\n            addonBefore={language[typeLabel]}\r\n            id=\"type-ability\"\r\n            defaultValue={useCard.getState().card.typeAbility.join(typeAbilitySeparator)}\r\n            onChange={changeTypeAbility}\r\n            onTakePicker={onTakePicker}\r\n        />\r\n        {isOCG && <Tooltip\r\n            overlay={language['input.furigana-helper.tooltip']}\r\n            overlayClassName=\"long-tooltip-overlay\"\r\n        >\r\n            <Checkbox\r\n                className=\"input-kanji-helper\"\r\n                onChange={toggleFuriganaHelper}\r\n                checked={furiganaHelper}\r\n            >\r\n                {language['input.furigana-helper.label']}\r\n            </Checkbox>\r\n        </Tooltip>}\r\n        <RadioTrain className=\"condense-input\" value={`${condenseTolerant}`}\r\n            onChange={value => onCondenseTolerantChange(value as CondenseType)}\r\n            optionList={CondenseThresholdButtonList}\r\n        >\r\n            <span>\r\n                {language['input.condense.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.condense.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </span>\r\n        </RadioTrain>\r\n        <FormattingHelpDrawer />\r\n    </StyledPostPendulumInputContainer>;\r\n});","import { Checkbox, Input, Popover } from 'antd';\r\nimport { CompactPicker } from 'react-color';\r\nimport { useCard, useLanguage } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { DefaultColorList } from 'src/model';\r\nimport { useEffect, useState } from 'react';\r\nimport { HexColorRegex, hexToRGBA } from 'src/util';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { RadioTrain } from 'src/component';\r\n\r\n/** Spacing in this component mimic react-color's */\r\nconst StyledInlineColorPickerContainer = styled.div`\r\n    color: var(--color);\r\n    text-shadow: var(--ts);\r\n    font-weight: 500;\r\n    padding: 5px;\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    gap: 3px;\r\n    .color-list {\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        gap: 3px;\r\n    }\r\n    .color-block {\r\n        height: 17px;\r\n        width: 17px;\r\n        cursor: pointer;\r\n        position: relative;\r\n        outline: none;\r\n        border: var(--bw) solid var(--sub-level-4);\r\n        &.static-block {\r\n            cursor: default;\r\n            height: 9px;\r\n            width: 9px;\r\n            margin: 4px 0;\r\n            border: none;\r\n        }\r\n    }\r\n    .active-dot {\r\n        position: absolute;\r\n        inset: var(--spacing-xs);\r\n        background: rgb(0, 0, 0);\r\n        border-radius: 50%;\r\n        opacity: 1;\r\n    }\r\n    .color-input {\r\n        display: grid;\r\n        grid-template-columns: max-content 1fr;\r\n        gap: 3px;\r\n        border-left: var(--bw-lg) solid var(--sub-level-4);\r\n        padding-left: 3px;\r\n        input {\r\n            width: 58px;\r\n            font-size: var(--fs-sm);\r\n            line-height: 1;\r\n            border: none;\r\n            padding: 0 5px;\r\n        }\r\n    }\r\n`;\r\nconst InlineColorList = [\r\n    { hex: '#FFFFFF', rgb: [255, 255, 255] },\r\n    { hex: '#000000', rgb: [0, 0, 0] },\r\n    { hex: '#FF0000', rgb: [255, 0, 0] },\r\n    { hex: '#FFFF00', rgb: [255, 255, 0] },\r\n    { hex: '#00FF00', rgb: [0, 255, 0] },\r\n    { hex: '#00FFFF', rgb: [0, 255, 255] },\r\n    { hex: '#0000FF', rgb: [0, 0, 255] },\r\n    { hex: '#FF00FF', rgb: [255, 0, 255] },\r\n];\r\ntype InlineColorPicker = {\r\n    value?: string,\r\n    onChange?: (hexValue: string) => void,\r\n}\r\nconst InlineColorPicker = ({\r\n    value = '',\r\n    onChange,\r\n}: InlineColorPicker) => {\r\n    const [currentText, setCurrentText] = useState(value);\r\n    const [internalValue, setInternalValue] = useState(() => {\r\n        return {\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        };\r\n    });\r\n\r\n    useEffect(() => {\r\n        const normalizedText = currentText.startsWith('#') ? currentText : `#${currentText}`;\r\n\r\n        if (HexColorRegex.test(normalizedText)) {\r\n            setCurrentText(normalizedText);\r\n            setInternalValue({\r\n                hex: normalizedText,\r\n                rgb: hexToRGBA(normalizedText, false),\r\n            });\r\n            onChange?.(normalizedText);\r\n        }\r\n        /** No need to depend on callback */\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currentText]);\r\n\r\n    useEffect(() => {\r\n        setCurrentText(value);\r\n        setInternalValue({\r\n            hex: HexColorRegex.test(value) ? value : '#000000',\r\n            rgb: hexToRGBA(value, false),\r\n        });\r\n    }, [value]);\r\n\r\n    return <StyledInlineColorPickerContainer>\r\n        <div className=\"color-list\">\r\n            {InlineColorList.map(({ hex, rgb }) => {\r\n                /** Contrast formula from google \\ :v / */\r\n                const dotColor = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000 >= 128\r\n                    ? '#000000'\r\n                    : '#FFFFFF';\r\n\r\n                return <div key={hex} className=\"color-block\" title={hex} style={{ backgroundColor: hex }} onClick={() => onChange?.(hex)}>\r\n                    {internalValue.hex.toUpperCase() === hex && <div\r\n                        className=\"active-dot\"\r\n                        style={{\r\n                            backgroundColor: dotColor,\r\n                        }}\r\n                    />}\r\n                </div>;\r\n            })}\r\n        </div>\r\n        <div className=\"color-input\">\r\n            <div className=\"color-block static-block\" style={{ backgroundColor: internalValue.hex }} />\r\n            <Input\r\n                size=\"small\"\r\n                value={currentText}\r\n                onChange={e => {\r\n                    setCurrentText(e.target.value);\r\n                }}\r\n            />\r\n        </div>\r\n    </StyledInlineColorPickerContainer>;\r\n};\r\n\r\nconst StyledTextStyleContainer = styled.div`\r\n    display: inline-grid;\r\n    grid-template-columns: 1fr max-content;\r\n    column-gap: var(--spacing-xxs);\r\n    padding: var(--spacing-px);\r\n    margin-right: var(--spacing-sm);\r\n    border: var(--bw) solid var(--sub-level-1);\r\n    border-radius: var(--br);\r\n    background-color: var(--main-level-4);\r\n    cursor: pointer;\r\n    &:hover {\r\n        border-color: var(--main-active);\r\n    }\r\n    .text-style-grid {\r\n        display: grid;\r\n        grid-template-columns: 25px 25px 25px;\r\n        grid-template-rows: 13px 13px; // Alignment\r\n        gap: var(--spacing-xxs);\r\n        font-size: var(--fs-xs);\r\n        text-align: center;\r\n        line-height: 1.5;\r\n    }\r\n    .text-style-preview-section {\r\n        border-radius: var(--br-sm);\r\n        box-shadow: 0 0 1px 1px var(--main-level-1) inset;\r\n    }\r\n    .text-style-label {\r\n        padding: var(--spacing-xxs);\r\n        line-height: 1.7;\r\n    }\r\n`;\r\nconst StyledTextStylePicker = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: var(--spacing-px);\r\n    &.custom-style-picker {\r\n        background-color: var(--sub-level-4); // Mimic border color\r\n    }\r\n    .style-section {\r\n        z-index: 1;\r\n        position: relative;\r\n        background-color: var(--main-level-3);\r\n    }\r\n    .style-picker-section {\r\n        overflow: hidden;\r\n        h2.size-picker,\r\n        h2.font-style-picker {\r\n            padding: var(--spacing-xs);\r\n        }\r\n        .inline-radio-train {\r\n            display: inline-flex;\r\n            padding-bottom: 0;\r\n            margin-left: var(--spacing-sm);\r\n        }\r\n        .shadow-checkbox .ant-checkbox {\r\n            transform: translateY(1px);\r\n        }\r\n        > .ant-checkbox-wrapper {\r\n            padding: var(--spacing-xs);\r\n        }\r\n    }\r\n    .custom-style-expand {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        column-gap: var(--spacing-xs);\r\n        .ant-checkbox-wrapper > span {\r\n            padding-right: 0;\r\n        }\r\n    }\r\n    .radio-train {\r\n        padding: var(--spacing-xs);\r\n        padding-top: 0;\r\n        .standalone-addon {\r\n            flex: 1 1 auto;\r\n            text-align: left;\r\n        }\r\n        .radio-train-input-group {\r\n            flex: 0 0 auto;\r\n        }\r\n        .ant-radio-button-wrapper {\r\n            height: 26px;\r\n            line-height: 24px;\r\n        }\r\n    }\r\n`;\r\nconst TextStyleInfoMap = {\r\n    effectTextStyle: {\r\n        keyName: 'effectTextStyle' as const,\r\n        extraKeyname: 'effectStyle' as const,\r\n        labelKey: 'input.text-style.section.effect.label',\r\n    },\r\n    pendulumTextStyle: {\r\n        keyName: 'pendulumTextStyle' as const,\r\n        extraKeyname: 'pendulumStyle' as const,\r\n        labelKey: 'input.text-style.section.pendulum.label',\r\n    },\r\n    statTextStyle: {\r\n        keyName: 'statTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.stat.label',\r\n    },\r\n    typeTextStyle: {\r\n        keyName: 'typeTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.type.label',\r\n    },\r\n    otherTextStyle: {\r\n        keyName: 'otherTextStyle' as const,\r\n        extraKeyname: undefined,\r\n        labelKey: 'input.text-style.section.other.label',\r\n    },\r\n};\r\nexport const TextStylePicker = () => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            effectStyle,\r\n            effectTextStyle,\r\n            otherTextStyle,\r\n            pendulumStyle,\r\n            pendulumTextStyle,\r\n            statTextStyle,\r\n            typeTextStyle,\r\n        },\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        effectStyle,\r\n        effectTextStyle,\r\n        otherTextStyle,\r\n        pendulumStyle,\r\n        pendulumTextStyle,\r\n        setCard,\r\n        statTextStyle,\r\n        typeTextStyle,\r\n    })));\r\n\r\n    const styleList = [\r\n        {\r\n            info: TextStyleInfoMap.effectTextStyle,\r\n            value: effectTextStyle,\r\n            extraValue: effectStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.pendulumTextStyle,\r\n            value: pendulumTextStyle,\r\n            extraValue: pendulumStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.statTextStyle,\r\n            value: statTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.typeTextStyle,\r\n            value: typeTextStyle,\r\n        },\r\n        {\r\n            info: TextStyleInfoMap.otherTextStyle,\r\n            value: otherTextStyle,\r\n        },\r\n    ];\r\n    return <Popover\r\n        trigger={['click']}\r\n        placement=\"bottomLeft\"\r\n        // visible={true}\r\n        overlayClassName=\"global-input-overlay global-style-picker-overlay\"\r\n        content={<div className=\"overlay-event-absorber\">\r\n            <StyledTextStylePicker className=\"custom-style-picker\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName, labelKey, extraKeyname } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName} className=\"style-section\">\r\n                        <h3 className={`custom-style-expand ${custom ? '' : 'inactive'}`}>\r\n                            <span>\r\n                                {language[labelKey]}\r\n                            </span>\r\n                            <Checkbox\r\n                                checked={custom}\r\n                                onChange={e => {\r\n                                    setCard(currentCard => {\r\n                                        const applyStyle = e.target.checked;\r\n\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [applyStyle, ...value.slice(1)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            >{language['input.text-style.custom.label']}</Checkbox>\r\n                        </h3>\r\n                        {custom && <div className=\"style-picker-section\">\r\n                            {(typeof fontStyle === 'string' && format === 'tcg') && <>\r\n                                <h2 className=\"font-style-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.font-style.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={fontStyle}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 'auto' },\r\n                                            { label: language['input.text-style.font-style.normal.label'], value: 'normal' },\r\n                                            { label: language['input.text-style.font-style.italic.label'], value: 'italic' },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.fontStyle = typeof value === 'string' ? value : 'auto';\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            {typeof upSize === 'number' && <>\r\n                                <h2 className=\"size-picker\">\r\n                                    <span className=\"label\">{language['input.text-style.extra-size.label']}</span>\r\n                                    <RadioTrain\r\n                                        className=\"inline-radio-train\"\r\n                                        value={upSize}\r\n                                        optionList={[\r\n                                            { label: <CloseCircleOutlined />, value: 0 },\r\n                                            { label: '+1', value: 1 },\r\n                                            { label: '+2', value: 2 },\r\n                                            { label: '+3', value: 3 },\r\n                                        ]}\r\n                                        onChange={value => {\r\n                                            setCard(currentCard => {\r\n                                                const newStyle = extraKeyname ? { ...currentCard[extraKeyname] } : undefined;\r\n                                                if (!newStyle || !extraKeyname) return currentCard;\r\n\r\n                                                newStyle.upSize = typeof value === 'number' ? value : 0;\r\n                                                return {\r\n                                                    ...currentCard,\r\n                                                    [extraKeyname]: newStyle,\r\n                                                };\r\n                                            });\r\n                                        }}\r\n                                    />\r\n                                </h2>\r\n                            </>}\r\n                            <h2>\r\n                                <Checkbox\r\n                                    className=\"shadow-checkbox\"\r\n                                    checked={hasShadow}\r\n                                    onChange={e => {\r\n                                        setCard(currentCard => {\r\n                                            const applyShadow = e.target.checked;\r\n\r\n                                            return {\r\n                                                ...currentCard,\r\n                                                [keyName]: [...value.slice(0, 2), applyShadow, value[3]],\r\n                                            };\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    <span className=\"label\">{language['input.text-style.shadow.label']}</span>\r\n                                </Checkbox>\r\n                            </h2>\r\n                            {hasShadow && <InlineColorPicker\r\n                                value={shadow}\r\n                                onChange={shadowValue => setCard(currentCard => {\r\n                                    return {\r\n                                        ...currentCard,\r\n                                        [keyName]: [...value.slice(0, 3), shadowValue],\r\n                                    };\r\n                                })}\r\n                            />}\r\n                            <h2>{language['input.text-style.color.label']}</h2>\r\n                            <CompactPicker\r\n                                colors={DefaultColorList}\r\n                                color={fillStyle ?? ''}\r\n                                onChangeComplete={color => {\r\n                                    setCard(currentCard => {\r\n                                        return {\r\n                                            ...currentCard,\r\n                                            [keyName]: [value[0], color.hex, ...value.slice(2, 4)],\r\n                                        };\r\n                                    });\r\n                                }}\r\n                            />\r\n                        </div>}\r\n                    </div>;\r\n                })}\r\n            </StyledTextStylePicker>\r\n        </div>}\r\n    >\r\n        <StyledTextStyleContainer className=\"text-style-preview\">\r\n            <div className=\"text-style-grid\">\r\n                {styleList.map(({ info, value, extraValue }) => {\r\n                    const { keyName } = info;\r\n                    const [custom, fillStyle, hasShadow, shadow] = value;\r\n                    const { upSize, fontStyle } = extraValue ?? {};\r\n\r\n                    return <div key={keyName}\r\n                        className=\"text-style-preview-section\"\r\n                        style={{\r\n                            background: custom ? '#eaeaea' : 'var(--sub-level-4)',\r\n                            color: (fillStyle ?? '').length === 0 || !custom ? '#000000' : fillStyle,\r\n                            textShadow: (custom && hasShadow) ? `0 0 2px ${shadow}` : 'none',\r\n                            fontStyle: (custom && fontStyle === 'italic') ? 'italic' : 'normal',\r\n                        }}\r\n                    >\r\n                        {(upSize && custom) ? <div>+{upSize}</div> : 'Auto'}\r\n                    </div>;\r\n                })}\r\n            </div>\r\n            <span className=\"text-style-label\">{language['input.text-style.custom-effect.label']}</span>\r\n        </StyledTextStyleContainer>\r\n    </Popover>;\r\n};","import { forwardRef, useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\r\nimport {\r\n    Card,\r\n    CardOpacity,\r\n    NameStyle,\r\n    NameStyleType,\r\n    FrameInfoMap,\r\n} from '../../model';\r\nimport {\r\n    Affiliation,\r\n    AppHeader,\r\n    RadioTrain,\r\n    StandaloneLabel,\r\n    StyledPopMarkdown,\r\n} from '../../component';\r\nimport {\r\n    checkMonster,\r\n} from '../../util';\r\nimport {\r\n    getFoilButtonList,\r\n    getAttributeList,\r\n    getFinishList,\r\n    FormatButtonList,\r\n} from './const';\r\nimport { CharPicker } from './char-picker';\r\nimport { NameStylePicker, NameStylePickerRef } from './name-style-picker';\r\nimport { CheckboxTrain, FrameTrain } from './input-train';\r\nimport { Explanation } from 'src/component/explanation';\r\nimport { changeCardFormat, useCard, useLanguage, useSetting } from '../../service';\r\nimport { LayoutPicker, OpacityPickerRef } from './layout-picker';\r\nimport {\r\n    CardIconInputGroup,\r\n    EffectInputGroup,\r\n    EffectInputGroupRef,\r\n    FooterInputGroup,\r\n    FooterInputGroupRef,\r\n    ImageInputGroup,\r\n    ImageInputGroupRef,\r\n    NameSetInputGroup,\r\n    NameSetInputGroupRef,\r\n    PendulumInputGroup,\r\n    PendulumInputGroupRef,\r\n    PostPendulumInputGroup,\r\n    PostPendulumInputGroupRef,\r\n} from './input-group';\r\nimport {\r\n    TextStylePicker,\r\n} from './text-style-picker';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    StyledFormatRadioTrain,\r\n    StyledNameSetIdInputContainer,\r\n} from './input-panel.styled';\r\nimport './input-panel.scss';\r\n\r\nexport type CardInputPanelRef = {\r\n    forceCardData: (card: Card) => void,\r\n    isLoading: () => boolean,\r\n};\r\nexport type CardInputPanel = {\r\n    artworkCanvas: ImageInputGroup['receivingCanvas'],\r\n    backgroundCanvas: ImageInputGroup['receivingCanvas'],\r\n} & Pick<ImageInputGroup, 'onCropChange' | 'onTainted' | 'onSourceLoaded'>;\r\nexport const CardInputPanel = forwardRef<CardInputPanelRef, CardInputPanel>(({\r\n    artworkCanvas,\r\n    backgroundCanvas,\r\n    onCropChange,\r\n    onTainted,\r\n    onSourceLoaded,\r\n}: CardInputPanel, forwardedRef) => {\r\n    const language = useLanguage();\r\n    const {\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    } = useCard(useShallow(({\r\n        card: {\r\n            format,\r\n            frame, foil, finish, opacity,\r\n            nameStyleType, nameStyle,\r\n            isPendulum,\r\n            isLink,\r\n            attribute,\r\n        },\r\n        getUpdater,\r\n        setCard,\r\n    }) => ({\r\n        format,\r\n        frame, foil, finish, opacity,\r\n        nameStyleType, nameStyle,\r\n        isPendulum,\r\n        isLink,\r\n        attribute,\r\n        getUpdater,\r\n        setCard,\r\n    })));\r\n    const { setting } = useSetting();\r\n    const { showCreativeOption, showExtraDecorativeOption, reduceMotionColor } = setting;\r\n\r\n    const stylePickerRef = useRef<NameStylePickerRef>(null);\r\n\r\n    const isMonster = checkMonster({ frame });\r\n    const [stylePickerResetCount, setStylePickerResetCount] = useState(0);\r\n    const foilButtonList = useMemo(() => getFoilButtonList({\r\n        normal: language['input.foil.normal.label'],\r\n        gold: language['input.foil.gold.label'],\r\n        platinum: language['input.foil.platinum.label'],\r\n    }), [language]);\r\n\r\n    const imageInputGroupRef = useRef<ImageInputGroupRef>(null);\r\n    const layoutPickerRef = useRef<OpacityPickerRef>(null);\r\n    const nameSetIdInputGroupRef = useRef<NameSetInputGroupRef>(null);\r\n    const pendulumInputGroupRef = useRef<PendulumInputGroupRef>(null);\r\n    const effectInputGroupRef = useRef<EffectInputGroupRef>(null);\r\n    const postPendulumInputGroupRef = useRef<PostPendulumInputGroupRef>(null);\r\n    const footerInputGroupRef = useRef<FooterInputGroupRef>(null);\r\n\r\n    const [pickerTarget, setPickerTarget] = useState<{\r\n        id: string,\r\n        setValue: (nextValue: string) => void,\r\n    }>({\r\n        id: '',\r\n        setValue: () => {},\r\n    });\r\n\r\n    const changeFormat = (formatValue: string | number) => {\r\n        setCard(currentCard => {\r\n            const nextFormat = `${formatValue}`;\r\n            const formatSwappedCard = changeCardFormat(currentCard, nextFormat);\r\n\r\n            const { name, setId, effect, typeAbility, password, creator, pendulumEffect } = formatSwappedCard;\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ creator, password });\r\n\r\n            return formatSwappedCard;\r\n        });\r\n    };\r\n    const changeFoil = useMemo(() => getUpdater('foil'), [getUpdater]);\r\n    const onFinishChange = useMemo(() => getUpdater('finish'), [getUpdater]);\r\n    const changeOpacity = useCallback((opacity: CardOpacity) => setCard(curr => ({ ...curr, opacity })), [setCard]);\r\n    const changeAttribute = useMemo(() => getUpdater('attribute'), [getUpdater]);\r\n    const changeNameStyle = useCallback((type: NameStyleType, value: Partial<NameStyle>) => {\r\n        setCard(currentCard => {\r\n            return {\r\n                ...currentCard,\r\n                nameStyleType: type,\r\n                nameStyle: value,\r\n            };\r\n        });\r\n    }, [setCard]);\r\n\r\n    const attributeList = useMemo(() => getAttributeList(format, language, showCreativeOption), [format, language, showCreativeOption]);\r\n    const finishList = useMemo(() => getFinishList(language), [language]);\r\n\r\n    useEffect(() => {\r\n        stylePickerRef.current?.setValue({ font: nameStyle.font });\r\n    }, [nameStyle]);\r\n\r\n    useEffect(() => {\r\n        layoutPickerRef.current?.setValue(opacity);\r\n    }, [opacity]);\r\n\r\n    useImperativeHandle(forwardedRef, () => ({\r\n        isLoading: () => (imageInputGroupRef.current?.isLoading() ?? false)\r\n            || (layoutPickerRef.current?.isLoading() ?? false),\r\n        forceCardData: card => {\r\n            setStylePickerResetCount(cnt => cnt + 1);\r\n            const {\r\n                name,\r\n                art, artCrop, artData, artSource,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n                opacity,\r\n                setId,\r\n                pendulumEffect,\r\n                typeAbility,\r\n                effect,\r\n                atk, def,\r\n                creator, password,\r\n            } = card;\r\n\r\n            imageInputGroupRef.current?.setValue({ art, artCrop, artData, artSource });\r\n            layoutPickerRef.current?.setValue({\r\n                ...opacity,\r\n                background, backgroundCrop, backgroundData, backgroundSource,\r\n            });\r\n            nameSetIdInputGroupRef.current?.setValue({ name, setId });\r\n            pendulumInputGroupRef.current?.setValue({ pendulumEffect });\r\n            effectInputGroupRef.current?.setValue(effect);\r\n            postPendulumInputGroupRef.current?.setValue({ typeAbility });\r\n            footerInputGroupRef.current?.setValue({ atk, def, creator, password });\r\n        }\r\n    }));\r\n\r\n    return <div\r\n        className={['card-info-panel', format === 'ocg' ? 'input-ocg' : 'input-tcg'].join(' ')}\r\n    >\r\n        <AppHeader />\r\n        <br />\r\n        <Affiliation />\r\n\r\n        <div className=\"card-overlay-input\">\r\n            <StyledFormatRadioTrain className=\"format-radio\" value={format} onChange={changeFormat} optionList={FormatButtonList}>\r\n                <span>{language['input.format.label']}</span>\r\n            </StyledFormatRadioTrain>\r\n            <RadioTrain className=\"foil-radio\" value={foil} onChange={changeFoil} optionList={foilButtonList}>\r\n                <span>{language['input.foil.label']}</span>\r\n            </RadioTrain>\r\n            {showExtraDecorativeOption && <CheckboxTrain\r\n                className=\"finish-checkbox\"\r\n                value={finish}\r\n                onChange={onFinishChange}\r\n                optionList={finishList}\r\n            >\r\n                <span>{language['input.finish.label']}</span>\r\n            </CheckboxTrain>}\r\n        </div>\r\n\r\n        {showCreativeOption && <div className=\"card-layout-input\">\r\n            <label className=\"standalone-addon ant-input-group-addon\">\r\n                {language['input.layout.label']} <Explanation\r\n                    content={<StyledPopMarkdown>{language['input.layout.tooltip']}</StyledPopMarkdown>}\r\n                />\r\n            </label>\r\n            <LayoutPicker ref={layoutPickerRef}\r\n                defaultValue={opacity}\r\n                receivingCanvas={backgroundCanvas}\r\n                onChange={changeOpacity}\r\n                onTainted={onTainted}\r\n                onCropChange={onCropChange}\r\n                onSourceLoaded={onSourceLoaded}\r\n            />\r\n        </div>}\r\n\r\n        <FrameTrain\r\n            onSTFrameChange={typeAbility => postPendulumInputGroupRef.current?.setValue({ typeAbility })}\r\n            onPasswordChange={password => footerInputGroupRef.current?.setValue({ password })}\r\n            onStatChange={(atk, def) => footerInputGroupRef.current?.setValue({ atk, def })}\r\n        />\r\n\r\n        <StyledNameSetIdInputContainer className=\"name-style-id-input\">\r\n            <NameSetInputGroup ref={nameSetIdInputGroupRef}\r\n                onTakePicker={setPickerTarget}\r\n            />\r\n            <NameStylePicker key={stylePickerResetCount} ref={stylePickerRef}\r\n                frameInfo={FrameInfoMap[frame as keyof typeof FrameInfoMap]}\r\n                defaultType={nameStyleType}\r\n                defaultValue={nameStyle}\r\n                showExtraDecorativeOption={showExtraDecorativeOption}\r\n                onChange={changeNameStyle}\r\n            />\r\n            <CardIconInputGroup\r\n                showCreativeOption={showCreativeOption}\r\n            />\r\n        </StyledNameSetIdInputContainer>\r\n        <div className=\"main-info\">\r\n            <div className=\"main-info-first\">\r\n                <RadioTrain\r\n                    className=\"fill-input-train attribute-input\"\r\n                    value={attribute}\r\n                    onChange={changeAttribute}\r\n                    optionList={attributeList}\r\n                >\r\n                    <span>{language['input.attribute.label']}</span>\r\n                </RadioTrain>\r\n\r\n                {(isPendulum || showCreativeOption)\r\n                    && <PendulumInputGroup ref={pendulumInputGroupRef}\r\n                        showCreativeOption={showCreativeOption}\r\n                        showExtraDecorativeOption={showExtraDecorativeOption}\r\n                        softMode={reduceMotionColor}\r\n                        onTakePicker={setPickerTarget}\r\n                    />}\r\n\r\n                <PostPendulumInputGroup ref={postPendulumInputGroupRef} onTakePicker={setPickerTarget} />\r\n\r\n                <div>\r\n                    <div className=\"card-effect-letter-helper\">\r\n                        <StandaloneLabel className=\"standalone-label\">\r\n                            {language['input.effect.label']}\r\n                        </StandaloneLabel>\r\n                        {showCreativeOption ? <TextStylePicker /> : <div />}\r\n                        <CharPicker\r\n                            targetId={pickerTarget.id}\r\n                            onPick={pickerTarget.setValue}\r\n                        />\r\n                    </div>\r\n                    <EffectInputGroup ref={effectInputGroupRef} onTakePicker={setPickerTarget} />\r\n                </div>\r\n\r\n                <FooterInputGroup ref={footerInputGroupRef}\r\n                    isMonster={isMonster}\r\n                    showCreativeOption={showCreativeOption}\r\n                    onTakePicker={setPickerTarget}\r\n                />\r\n            </div>\r\n            <div className=\"main-info-second\">\r\n                <ImageInputGroup ref={imageInputGroupRef}\r\n                    receivingCanvas={artworkCanvas}\r\n                    showExtraDecorativeOption={showExtraDecorativeOption}\r\n                    onSourceLoaded={onSourceLoaded}\r\n                    onTainted={onTainted}\r\n                    onCropChange={onCropChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    </div>;\r\n});","import {\r\n    CanvasConst,\r\n    CardArtCanvasCoordinate,\r\n    DEFAULT_BASE_FILL_COLOR,\r\n    FrameInfoMap,\r\n    getArtCanvasCoordinate,\r\n    InternalCard,\r\n    LinkIndentList,\r\n    LinkOffsetList,\r\n    LinkPendulumIndentList,\r\n    LinkPendulumOffsetList,\r\n    LinkRotateList,\r\n    NO_ICON,\r\n} from 'src/model';\r\nimport { checkSpeedSkill, getCardIconFromFrame, mergeClass, normalizeCardName } from 'src/util';\r\nimport { CopyOutlined, CloseOutlined } from '@ant-design/icons';\r\nimport styled from 'styled-components';\r\nimport { Popconfirm, Tooltip } from 'antd';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport ReactCrop from 'react-image-crop';\r\n\r\nconst THUMB_ART_SIZE = 56;\r\nexport const THUMB_SIZE = 68;\r\nconst {\r\n    height: cardHeight,\r\n    width: cardWidth,\r\n    cardBorder,\r\n} = CanvasConst;\r\nconst THUMB_TO_CARD_RATIO = THUMB_SIZE / cardWidth;\r\nconst StyledCardThumb = styled.div`\r\n    display: grid;\r\n    grid-template-columns: max-content 1fr;\r\n    border: var(--bw) solid var(--main-level-1);\r\n    border-top-color: transparent;\r\n    background-color: #333333;\r\n    cursor: pointer;\r\n    position: relative;\r\n    z-index: 1;\r\n    height: ${THUMB_SIZE}px;\r\n    font-size: var(--fs-thumb);\r\n    &.alternative-color {\r\n        background-color: #282828;\r\n    }\r\n    &.active {\r\n        background-color: #484848;\r\n        border-color: var(--main-active);\r\n        box-shadow: var(--bs-2);\r\n        z-index: 2;\r\n    }\r\n    &:hover {\r\n        border-color: var(--sub-active);\r\n    }\r\n    .right-slot {\r\n        display: grid;\r\n        grid-template-columns: 1fr;\r\n        row-gap: var(--spacing-xxs);\r\n        line-height: 1.25;\r\n        overflow: hidden;\r\n        padding: var(--spacing-xs);\r\n        border-left: var(--bw) solid var(--main-level-3);\r\n        .first-row {\r\n            &:empty:before {\r\n                content: \"\\\\00a0\";\r\n            }\r\n        }\r\n        .second-row {\r\n            display: flex;\r\n            column-gap: var(--spacing-xs);\r\n            align-items: center;\r\n            .padding {\r\n                flex: 1;\r\n            }\r\n            .card-icon {\r\n                width: 1em;\r\n            }\r\n            .attribute-icon {\r\n                width: 1em;\r\n            }\r\n            .star-content {\r\n                flex: 0 0 30px;\r\n                &.tuner {\r\n                    color: var(--main-online);\r\n                }\r\n            }\r\n        }\r\n        .third-row {\r\n            display: flex;\r\n            .set-id {\r\n                flex: 1;\r\n                text-align: right;\r\n            }\r\n        }\r\n    }\r\n    .left-slot {\r\n        --link-arrow-icon-size: 16px;\r\n        --link-arrow-border-size: 6px;\r\n        --link-arrow-container-size: 8px;\r\n        --link-arrow-half-size: 13px;\r\n        --link-arrow-margin-inline: calc(var(--link-arrow-half-size) - var(--link-arrow-icon-size) / 2);\r\n        --link-arrow-margin-block: calc(var(--link-arrow-half-size) - var(--link-arrow-border-size) / 2);\r\n        line-height: 0;\r\n        position: relative;\r\n        width: ${THUMB_SIZE}px;\r\n        overflow: hidden;\r\n        .card-art-container {\r\n            cursor: pointer;\r\n            display: inline-block;\r\n            max-height: ${THUMB_ART_SIZE}px;\r\n            overflow: hidden;\r\n            box-shadow: var(--bs-1);\r\n            position: relative;\r\n            z-index: 1;\r\n        }\r\n        .card-art {\r\n            display: inline-block;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n        }\r\n        .card-frame {\r\n            width: 100%;\r\n            height: 50%;\r\n            position: absolute;\r\n            left: 0;\r\n            &.top-frame {\r\n                top: 0;\r\n            }\r\n            &.bottom-frame {\r\n                top: 50%;\r\n            }\r\n        }\r\n        .thumb-link-marker-icon {\r\n            display: inline-block;\r\n            width: 0;\r\n            height: 0;\r\n            left: 21px;\r\n            border-style: solid;\r\n            position: absolute;\r\n            z-index: 3;\r\n            margin: var(--link-arrow-margin-block) var(--link-arrow-margin-inline);\r\n            border-width: 0 var(--link-arrow-container-size) var(--link-arrow-container-size) var(--link-arrow-container-size);\r\n            border-color: transparent transparent #dadada transparent;\r\n            &:after {\r\n                content: '';\r\n                display: inline-block;\r\n                position: absolute;\r\n                height: 0;\r\n                width: 0;\r\n                top: 0;\r\n                left: calc(-1 * var(--link-arrow-border-size));\r\n                border-style: solid;\r\n                border-width: 0 var(--link-arrow-border-size) var(--link-arrow-border-size) var(--link-arrow-border-size);\r\n                border-color: transparent transparent #484848 transparent;\r\n                transform: translateY(1px);\r\n                z-index: 2;\r\n            }\r\n            &.marker-checked:after {\r\n                border-color: transparent transparent var(--main-link-marker) transparent;\r\n            }\r\n        }\r\n        .pendulum-scale {\r\n            position: absolute;\r\n            bottom: 0;\r\n            text-align: center;\r\n            width: 18px;\r\n            line-height: 1;\r\n            z-index: 3;\r\n            font-size: var(--fs-sm);\r\n            background-color: #eaeaea;\r\n            box-shadow: var(--bs-1);\r\n            padding: var(--spacing-xxs) 0;\r\n            &.red-scale {\r\n                right: 0;\r\n                color: var(--main-red-scale);\r\n                border-radius: var(--br-lg) 0 0 0;\r\n            }\r\n            &.blue-scale {\r\n                left: 0;\r\n                color: var(--main-blue-scale);\r\n                border-radius: 0 var(--br-lg) 0 0;\r\n            }\r\n        }\r\n    }\r\n    .action-slot {\r\n        display: none;\r\n        padding: var(--spacing-xs);\r\n        position: absolute;\r\n        top: 0;\r\n        right: 0;\r\n        background: var(--main-level-3);\r\n        height: 100%;\r\n        box-shadow: 0 0 3px 0 #222222;\r\n        cursor: default;\r\n        &.force-visible {\r\n            display: block;\r\n        }\r\n        .action-container {\r\n            display: inline-grid;\r\n            grid-template-columns: max-content;\r\n            gap: var(--spacing-xs);\r\n        }\r\n        .action-button {\r\n            cursor: pointer;\r\n            &.action-duplicate:hover {\r\n                color: var(--main-active);\r\n            }\r\n            &.action-delete:hover {\r\n                color: var(--main-danger);\r\n            }\r\n            &.action-download:hover {\r\n                color: var(--main-online);\r\n            }\r\n        }\r\n    }\r\n    &:hover {\r\n        .action-slot {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport type CardThumb = {\r\n    index: number,\r\n    card: InternalCard,\r\n    active: boolean,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n    style?: React.CSSProperties,\r\n}\r\nexport const CardThumb = ({\r\n    index,\r\n    card,\r\n    active,\r\n    language,\r\n    onDuplicate,\r\n    onSelect,\r\n    onDelete,\r\n    // onDownload,\r\n    style,\r\n}: CardThumb) => {\r\n    const [actionVisible, setActionVisible] = useState<boolean>(false);\r\n    const {\r\n        art,\r\n        artCrop,\r\n        artData,\r\n        artFit,\r\n        artSource,\r\n        atk,\r\n        attribute,\r\n        background,\r\n        backgroundCrop,\r\n        backgroundData,\r\n        backgroundFit,\r\n        backgroundSource,\r\n        backgroundType,\r\n        cardIcon,\r\n        def,\r\n        format,\r\n        frame,\r\n        hasBackground,\r\n        isLink,\r\n        isPendulum,\r\n        linkMap,\r\n        name,\r\n        opacity,\r\n        pendulumFrame,\r\n        pendulumScaleBlue,\r\n        pendulumScaleRed,\r\n        setId,\r\n        star,\r\n        subFamily,\r\n        typeAbility,\r\n    } = card;\r\n    const normalizedCardName = normalizeCardName(name);\r\n    const normalizedBottomFrame = pendulumFrame === 'auto'\r\n        ? isPendulum\r\n            ? 'spell'\r\n            : frame\r\n        : pendulumFrame;\r\n    const normalizedCardArt = artSource === 'offline'\r\n        ? !art\r\n            ? 'https://i.imgur.com/jjtCuG5.png' // Placeholder\r\n            : artData\r\n        : art;\r\n    const normalizedBackgroundArt = backgroundSource === 'offline'\r\n        ? !background\r\n            ? 'https://imgur.com/pdSVzUZ.png' // Empty background\r\n            : backgroundData\r\n        : background;\r\n    const normalizedCardIconType = cardIcon === 'auto' ? getCardIconFromFrame(frame) : cardIcon;\r\n    const normalizedCardIcon = normalizedCardIconType === 'st'\r\n        ? subFamily\r\n        : normalizedCardIconType;\r\n    const isSpeedSkill = checkSpeedSkill(card);\r\n    const statInEffect = !!(atk || def || (isLink && linkMap.length));\r\n    const joinedTypeAbility = typeAbility.join(' / ');\r\n    const canvasCoordinate = getArtCanvasCoordinate(isPendulum, opacity);\r\n    const {\r\n        artFrameHeight,\r\n        artFrameWidth,\r\n    } = canvasCoordinate;\r\n\r\n    return <StyledCardThumb\r\n        className={mergeClass(\r\n            'truncate',\r\n            active ? 'active' : '',\r\n            index % 2 === 0 ? 'alternative-color' : '',\r\n        )}\r\n        onClick={() => onSelect(card)}\r\n        style={style}\r\n    >\r\n        <div\r\n            className=\"left-slot\"\r\n        >\r\n            <div className=\"card-frame top-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[frame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[frame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <div className=\"card-frame bottom-frame\"\r\n                style={{\r\n                    backgroundColor: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundColor,\r\n                    backgroundImage: FrameInfoMap[normalizedBottomFrame]?.labelBackgroundImage,\r\n                }}\r\n            />\r\n            <a\r\n                className=\"card-art-container\"\r\n                href={normalizedCardArt}\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                onClick={e => e.preventDefault()}\r\n                style={{\r\n                    width: artFrameWidth * THUMB_TO_CARD_RATIO,\r\n                    height: artFrameHeight * THUMB_TO_CARD_RATIO,\r\n                    top: (cardHeight - cardWidth) / 2 / 2 * THUMB_TO_CARD_RATIO,\r\n                    left: (cardWidth - artFrameWidth) / 2 * THUMB_TO_CARD_RATIO,\r\n                    backgroundColor: DEFAULT_BASE_FILL_COLOR,\r\n                }}\r\n            >\r\n                {hasBackground && <DelayedImage\r\n                    className=\"background-art\"\r\n                    artLink={normalizedBackgroundArt}\r\n                    name={normalizedCardName + ' - background'}\r\n                    fit={backgroundFit}\r\n                    crop={backgroundCrop}\r\n                    canvasCoordinate={getArtCanvasCoordinate(isPendulum, {\r\n                        ...opacity,\r\n                        boundless: backgroundType === 'fit' ? false : true,\r\n                    })}\r\n                />}\r\n                <DelayedImage\r\n                    className=\"foreground-art\"\r\n                    artLink={normalizedCardArt}\r\n                    name={normalizedCardName}\r\n                    fit={artFit}\r\n                    crop={artCrop}\r\n                    canvasCoordinate={canvasCoordinate}\r\n                />\r\n            </a>\r\n            {isLink && [...Array(9)].map((_, index) => {\r\n                if (index === 4) return null;\r\n                const indentList = isPendulum ? LinkPendulumIndentList : LinkIndentList;\r\n                const offsetList = isPendulum ? LinkPendulumOffsetList : LinkOffsetList;\r\n\r\n                return <div key={`link-${index}`}\r\n                    className={mergeClass(\r\n                        `thumb-link-marker-icon thumb-link-marker-icon-${index + 1}`,\r\n                        linkMap.includes(`${index + 1}`) ? 'marker-checked' : '',\r\n                    )}\r\n                    style={{\r\n                        top: isPendulum ? 16 : 19,\r\n                        transform: `rotate(${LinkRotateList[index]}deg) translateY(${indentList[index]}px) translateX(${offsetList[index]}px)`,\r\n                    }}\r\n                />;\r\n            })}\r\n            {(isPendulum && pendulumScaleBlue) && <div className=\"pendulum-scale blue-scale\">{pendulumScaleBlue}</div>}\r\n            {(isPendulum && pendulumScaleRed) && <div className=\"pendulum-scale red-scale\">{pendulumScaleRed}</div>}\r\n        </div>\r\n        <div className=\"right-slot truncate\">\r\n            <div className=\"first-row truncate\">\r\n                {normalizedCardName}\r\n            </div>\r\n            <div className=\"second-row truncate\">\r\n                {isSpeedSkill || attribute === 'NONE'\r\n                    ? null\r\n                    : <img className=\"attribute-icon\"\r\n                        src={`${process.env.PUBLIC_URL}/asset/image/attribute/attr-${format}-${attribute.toLowerCase()}.png`}\r\n                        alt=\"Icon\"\r\n                    />}\r\n                {typeAbility.length > 0 && <div className=\"truncate\">{joinedTypeAbility}</div>}\r\n                {normalizedCardIconType !== 'st' && <div className=\"padding\" />}\r\n                {(!isLink && normalizedCardIcon !== NO_ICON && normalizedCardIconType !== 'none') && <img\r\n                    className=\"card-icon\"\r\n                    src={`${process.env.PUBLIC_URL}/asset/image/subfamily/subfamily-${normalizedCardIcon.toLowerCase()}.png`}\r\n                    alt=\"Icon\"\r\n                />}\r\n                {(!isLink && !isSpeedSkill && normalizedCardIconType !== 'st') && <span\r\n                    className={mergeClass('star-content truncate', joinedTypeAbility.toLowerCase().includes('tuner') ? 'tuner' : '')}\r\n                >\r\n                    {typeof star === 'number'\r\n                        ? star\r\n                        : star !== ''\r\n                            ? `\"${star}\"`\r\n                            : ''}\r\n                </span>}\r\n            </div>\r\n            <div className=\"third-row truncate\">\r\n                {statInEffect && <div>\r\n                    {atk}\r\n                </div>}\r\n                {statInEffect ? <div>&nbsp;/&nbsp;</div> : <div>&nbsp;</div>}\r\n                {statInEffect && <div>\r\n                    {isLink ? `Link ${linkMap.length}` : def}\r\n                </div>}\r\n                {setId && <div className=\"set-id\">{setId}</div>}\r\n            </div>\r\n        </div>\r\n        <div className={mergeClass('action-slot', actionVisible ? 'force-visible' : '')} onClick={e => e.stopPropagation()}>\r\n            <div className=\"action-container\">\r\n                <Tooltip placement=\"left\" title={language['manager.button.duplicate.tooltip']}>\r\n                    <CopyOutlined className=\"action-button action-duplicate\" onClick={() => onDuplicate(card)} />\r\n                </Tooltip>\r\n                {/* <Tooltip placement=\"left\" title={language['manager.button.download.tooltip']}>\r\n                    <DownloadOutlined className=\"action-button action-download\" onClick={() => onDownload(card)} />\r\n                </Tooltip> */}\r\n                <Popconfirm\r\n                    placement=\"left\"\r\n                    title={language['manager.button.delete.label']}\r\n                    onVisibleChange={status => setActionVisible(status)}\r\n                    onConfirm={() => onDelete(card.id)}\r\n                    okText={language['manager.button.delete.confirm.label']}\r\n                    cancelText={language['manager.button.delete.cancel.label']}\r\n                >\r\n                    <Tooltip placement=\"left\" title={language['manager.button.delete.tooltip']}>\r\n                        <CloseOutlined className=\"action-button action-delete\" />\r\n                    </Tooltip>\r\n                </Popconfirm>\r\n            </div>\r\n        </div>\r\n    </StyledCardThumb>;\r\n};\r\n\r\nconst calculateThumbArtStyle = (\r\n    imageWidth: number,\r\n    imageHeight: number,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    baseCrop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n) => {\r\n    const {\r\n        artWidth,\r\n        artY,\r\n        ratio,\r\n        artFrameWidth,\r\n        artFrameY,\r\n    } = canvasCoordinate;\r\n    const {\r\n        width,\r\n        height,\r\n        x,\r\n        y,\r\n    } = (fit\r\n        ? { ...baseCrop, width: 100, height: 100, x: 0, y: 0 }\r\n        : baseCrop) ?? {};\r\n\r\n    const thumbArtXGap = artWidth === artFrameWidth\r\n        ? 0\r\n        : (cardWidth - artFrameWidth) / 2 - cardBorder;\r\n    const thumbArtYGap = artFrameY - artY;\r\n\r\n    const thumbArtWidth = artWidth * THUMB_TO_CARD_RATIO;\r\n    const thumbArtHeight = artWidth / ratio * THUMB_TO_CARD_RATIO;\r\n\r\n    const croppedWidth = imageWidth * ((width ?? 0) / 100);\r\n    const croppedHeight = imageHeight * ((height ?? 0) / 100);\r\n\r\n    const thumbToCroppedWidthRatio = thumbArtWidth / (croppedWidth <= 0 ? 1 : croppedWidth);\r\n    const thumbToCroppedHeightRatio = thumbArtHeight / (croppedHeight <= 0 ? 1 : croppedHeight);\r\n\r\n    const thumbImageWidth = imageWidth * thumbToCroppedWidthRatio;\r\n    const thumbImageHeight = imageHeight * thumbToCroppedHeightRatio;\r\n\r\n    const croppedLeft = -imageWidth * ((x ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n    const croppedTop = -imageHeight * ((y ?? 0) / 100) * thumbToCroppedWidthRatio;\r\n\r\n    return {\r\n        top: croppedTop,\r\n        left: croppedLeft,\r\n        width: thumbImageWidth,\r\n        height: fit ? thumbImageHeight : undefined,\r\n        transform: `translateX(${\r\n            - thumbArtXGap * THUMB_TO_CARD_RATIO\r\n        }px) translateY(${\r\n            - thumbArtYGap * THUMB_TO_CARD_RATIO\r\n        }px)`,\r\n    };\r\n};\r\n/** The image should not load instantly to avoid stagnant request when user scroll through their card list. Also to prevent sudden image change when cropper reconciliate. */\r\ntype DelayedImage = {\r\n    artLink: string,\r\n    name: string,\r\n    crop?: Partial<ReactCrop.Crop>,\r\n    fit?: boolean,\r\n    canvasCoordinate: CardArtCanvasCoordinate,\r\n    className?: string,\r\n    style?: React.CSSProperties,\r\n};\r\nconst DelayedImage = ({\r\n    artLink,\r\n    name,\r\n    crop: baseCrop,\r\n    className,\r\n    fit,\r\n    canvasCoordinate,\r\n    style,\r\n}: DelayedImage) => {\r\n    const [internalLink, setInternalLink] = useState('https://imgur.com/pdSVzUZ.png');\r\n    const imageRef = useRef<HTMLImageElement>(null);\r\n    const [calculatedStyle, setCalculatedStyle] = useState(() => calculateThumbArtStyle(\r\n        imageRef.current?.naturalWidth ?? 1,\r\n        imageRef.current?.naturalHeight ?? 1,\r\n        canvasCoordinate,\r\n        baseCrop,\r\n        fit,\r\n    ));\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setInternalLink(artLink);\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [artLink]);\r\n\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant) {\r\n                setCalculatedStyle(calculateThumbArtStyle(\r\n                    imageRef.current?.naturalWidth ?? 1,\r\n                    imageRef.current?.naturalHeight ?? 1,\r\n                    canvasCoordinate,\r\n                    baseCrop,\r\n                    fit,\r\n                ));\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [baseCrop, canvasCoordinate, fit]);\r\n\r\n    return <img ref={imageRef}\r\n        className={mergeClass('card-art', className)}\r\n        src={internalLink}\r\n        alt={name}\r\n        style={{\r\n            ...calculatedStyle,\r\n            ...style,\r\n        }}\r\n        onLoad={() => {\r\n            setCalculatedStyle(calculateThumbArtStyle(\r\n                imageRef.current?.naturalWidth ?? 1,\r\n                imageRef.current?.naturalHeight ?? 1,\r\n                canvasCoordinate,\r\n                baseCrop,\r\n                fit,\r\n            ));\r\n        }}\r\n    />;\r\n};","import { LanguageDataDictionary, useCardList } from 'src/service';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport { CardThumb, THUMB_SIZE } from './card-thumb';\r\nimport { useEffect, useState } from 'react';\r\nimport { getEmptyCard, InternalCard } from 'src/model';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styled from 'styled-components';\r\nimport { Button } from 'antd';\r\nimport AutoSizer from 'react-virtualized-auto-sizer';\r\nimport { ListChildComponentProps, FixedSizeList as List } from 'react-window';\r\n\r\nconst StyledManagerCardList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    position: relative;\r\n    .list-container {\r\n        flex: 1;\r\n        overflow: auto;\r\n    }\r\n    .no-card {\r\n        padding: var(--spacing);\r\n        text-align: center;\r\n        position: absolute;\r\n        width: 100%;\r\n        .reset-filter {\r\n            cursor: pointer;\r\n            color: var(--main-active);\r\n            &:hover {\r\n                color: var(--sub-active);\r\n            }\r\n        }\r\n    }\r\n    .add-card {\r\n        flex: 0;\r\n        width: 100%;\r\n        border-radius: 0;\r\n        background: var(--main-primary);\r\n        border-color: var(--main-active);\r\n        &:hover {\r\n            background: var(--sub-primary);\r\n        }\r\n    }\r\n`;\r\ntype CardThumbRowData = {\r\n    list: InternalCard[],\r\n    activeId: string,\r\n    language: LanguageDataDictionary,\r\n    onDuplicate: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDelete: (id: string) => void,\r\n}\r\nconst CardThumbRow = ({\r\n    data,\r\n    index,\r\n    style,\r\n}: ListChildComponentProps<CardThumbRowData>) => {\r\n    const {\r\n        activeId,\r\n        language,\r\n        list,\r\n        onDelete,\r\n        onDownload,\r\n        onDuplicate,\r\n        onSelect,\r\n    } = data;\r\n\r\n    return <CardThumb\r\n        index={index}\r\n        card={list[index]}\r\n        active={list[index].id === activeId}\r\n        language={language}\r\n        onDuplicate={onDuplicate}\r\n        onSelect={onSelect}\r\n        onDownload={onDownload}\r\n        onDelete={onDelete}\r\n        style={style}\r\n    />;\r\n};\r\n\r\n/**\r\n * Be careful, all callbacks for card thumb here must be memoized.\r\n */\r\nexport type ManagerCardList = {\r\n    language: LanguageDataDictionary,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const ManagerCardList = ({\r\n    language,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: ManagerCardList) => {\r\n    const {\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    } = useCardList(useShallow(({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    }) => ({\r\n        activeId,\r\n        cardDisplayList,\r\n        deleteCard,\r\n        duplicateCard,\r\n        resetFilter,\r\n    })));\r\n    const [reselectCnt, setReselectCnt] = useState(0);\r\n\r\n    const deleteAndReselect = (id: string) => {\r\n        deleteCard(id);\r\n        setReselectCnt(cnt => cnt + 1);\r\n    };\r\n    /** Throttle re-select after delete */\r\n    useEffect(() => {\r\n        let relevant = true;\r\n        setTimeout(() => {\r\n            if (relevant && reselectCnt > 0) {\r\n                const { activeId, cardList, setCardList } = useCardList.getState();\r\n                const nextCard = cardList.find(card => card.id === activeId);\r\n                if (nextCard) {\r\n                    onSelect(nextCard);\r\n                } else {\r\n                    /** Empty list, create placeholder card */\r\n                    const emptyCard = { id: uuid(), ...getEmptyCard() };\r\n                    setCardList([emptyCard], emptyCard.name);\r\n                }\r\n            }\r\n        }, 500);\r\n\r\n        return () => {\r\n            relevant = false;\r\n        };\r\n    }, [onSelect, reselectCnt]);\r\n\r\n    return <StyledManagerCardList\r\n        style={{\r\n            backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n        }}\r\n    >\r\n        <div className=\"list-container\">\r\n            <AutoSizer>\r\n                {({ height, width }) => (\r\n                    <List<CardThumbRowData>\r\n                        className=\"List\"\r\n                        height={height}\r\n                        itemCount={cardDisplayList.length}\r\n                        itemSize={THUMB_SIZE}\r\n                        itemData={{\r\n                            list: cardDisplayList,\r\n                            language,\r\n                            activeId,\r\n                            onDuplicate: duplicateCard,\r\n                            onSelect: onSelect,\r\n                            onDownload: onDownload,\r\n                            onDelete: deleteAndReselect,\r\n                        }}\r\n                        overscanCount={5}\r\n                        width={width}\r\n                    >\r\n                        {CardThumbRow}\r\n                    </List>\r\n                )}\r\n            </AutoSizer>\r\n        </div>\r\n        {cardDisplayList.length === 0 && <div className=\"no-card\">\r\n            <div>{language['manager.button.search.no-card.message']}</div>\r\n            <div className=\"reset-filter\" onClick={resetFilter}>\r\n                {language['manager.button.search.button.reset.label']}\r\n            </div>\r\n        </div>}\r\n        <Button\r\n            className=\"add-card\"\r\n            onClick={onRequestImport}\r\n        >\r\n            {language['manager.button.add.label']}\r\n        </Button>\r\n    </StyledManagerCardList>;\r\n};","import { Button, Collapse, Modal } from 'antd';\r\nimport { useState } from 'react';\r\nimport { CheckOutlined } from '@ant-design/icons';\r\nimport { LanguageDataDictionary } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { StyledCode } from 'src/component/atom';\r\nimport {\r\n    ArtFinishMap,\r\n    AttributeList,\r\n    CondenseTolerantMap,\r\n    FinishMap,\r\n    frameList,\r\n    getBackgroundTypeList,\r\n    getFoilList,\r\n    IconList,\r\n    IconTypeList,\r\n    PatternList,\r\n    PendulumSizeList,\r\n    PresetNameStyleMap,\r\n    StickerList,\r\n} from 'src/model';\r\nimport { FileTextOutlined } from '@ant-design/icons';\r\nimport copy from 'copy-to-clipboard';\r\n\r\nconst { Panel } = Collapse;\r\nconst StyledToggleButton = styled.div`\r\n    font-weight: normal;\r\n    letter-spacing: -0.75px;\r\n    font-size: var(--fs-lg);\r\n`;\r\nconst StyledMono = styled(StyledCode)`\r\n    display: inline-block;\r\n    font-size: var(--fs-sm);\r\n    border-color: var(--sub-level-1);\r\n    line-height: 1;\r\n    cursor: pointer;\r\n    position: relative;\r\n    .copiable-overlay {\r\n        align-items: center;\r\n        background-color: var(--color-contrast);\r\n        font-size: var(--fs);\r\n        font-weight: bold;\r\n        border-radius: var(--br);\r\n        color: var(--color);\r\n        display: flex;\r\n        height: 100%;\r\n        justify-content: center;\r\n        left: 0;\r\n        position: absolute;\r\n        top: 0;\r\n        width: 100%;\r\n        z-index: 999;\r\n    }\r\n`;\r\nconst StyledManagerSample = styled(Modal)`\r\n    .ant-modal-close-x {\r\n        display: none;\r\n    }\r\n    .ant-collapse > .ant-collapse-item > .ant-collapse-header {\r\n        padding: 0;\r\n        padding-left: 24px;\r\n        .ant-collapse-arrow {\r\n            top: 5px;\r\n            left: 0;\r\n        }\r\n    }\r\n    .ant-collapse-item > .ant-collapse-content > .ant-collapse-content-box {\r\n        padding: var(--spacing-sm) 0 0 0;\r\n    }\r\n    .download-button {\r\n        text-align: center;\r\n        margin: var(--spacing-sm) 0;\r\n        .ant-btn {\r\n            background: var(--main-primary);\r\n            border-color: var(--main-active);\r\n            &:hover {\r\n                background: var(--sub-primary);\r\n            }\r\n        }\r\n    }\r\n    .option-container {\r\n        width: 100%;\r\n        table-layout: fixed;\r\n        background-color: #494949;\r\n        th,\r\n        td {\r\n            border: var(--bw) solid var(--sub-level-4);\r\n            padding: var(--spacing-xs) var(--spacing-sm);\r\n            &:nth-child(1) {\r\n                width: 170px;\r\n            }\r\n            &:nth-child(2) {\r\n                ${StyledMono} {\r\n                    margin-right: var(--spacing-xs);\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\ntype CopiableCode = {\r\n    data: string,\r\n    children?: React.ReactNode,\r\n}\r\nconst CopiableCode = ({\r\n    data,\r\n    children,\r\n}: CopiableCode) => {\r\n    const [showFlashOverlay, setFlashOverlay] = useState(false);\r\n    const callFlashNotification = (copyingContent: string) => {\r\n        copy(copyingContent);\r\n        setFlashOverlay(true);\r\n        setTimeout(() => {\r\n            setFlashOverlay(false);\r\n        }, 1000);\r\n    };\r\n\r\n    return <StyledMono\r\n        onClick={e => {\r\n            e.stopPropagation();\r\n            callFlashNotification(data);\r\n        }}\r\n    >\r\n        {showFlashOverlay ? <div className=\"copiable-overlay\"><CheckOutlined /></div> : null}\r\n        {children}\r\n    </StyledMono>;\r\n};\r\nexport type ManagerSample = {\r\n    language: LanguageDataDictionary,\r\n};\r\nexport const ManagerSample = ({\r\n    language,\r\n}: ManagerSample) => {\r\n    const [visible, setVisible] = useState(false);\r\n\r\n    return <>\r\n        <StyledToggleButton className=\"manager-toggle-button\" onClick={() => setVisible(true)}>\r\n            {language['manager.header.button.template.label']}&nbsp;<FileTextOutlined />\r\n        </StyledToggleButton>\r\n        <StyledManagerSample\r\n            visible={visible}\r\n            onCancel={() => setVisible(false)}\r\n            okButtonProps={{\r\n                style: {\r\n                    display: 'none',\r\n                },\r\n            }}\r\n            cancelText={language['manager.template.button.cancel.label']}\r\n        >\r\n            <div className=\"sample-modal-container\">\r\n                <div>\r\n                    {language['manager.template.description.line-1']}\r\n                    <br />\r\n                    {language['manager.template.description.line-2']}\r\n                </div>\r\n                <div\r\n                    className=\"download-button\"\r\n                >\r\n                    <a\r\n                        href={process.env.REACT_APP_TEMPLATE_FILE}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                        download\r\n                    >\r\n                        <Button>{language['manager.template.download.label']}</Button>\r\n                    </a>\r\n                </div>\r\n                <Collapse ghost>\r\n                    <Panel\r\n                        key=\"sample-option\"\r\n                        header={<div>\r\n                            {language['manager.template.description.line-3']}\r\n                        </div>}\r\n                    >\r\n                        <table className=\"option-container\">\r\n                            <tr>\r\n                                <th><b>{language['manager.template.header.field.label']}</b></th>\r\n                                <th><b>{language['manager.template.header.value.label']}</b></th>\r\n                            </tr>\r\n                            {[\r\n                                {\r\n                                    field: 'Format',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'tcg',\r\n                                            'ocg',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Frame',\r\n                                    altField: 'Bottom Frame',\r\n                                    value: <div>\r\n                                        {frameList\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Attribute',\r\n                                    value: <div>\r\n                                        {AttributeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Spell/Trap Icon',\r\n                                    value: <div>\r\n                                        {IconList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Sticker',\r\n                                    value: <div>\r\n                                        {StickerList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Foil',\r\n                                    value: <div>\r\n                                        {getFoilList()\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ name }) => <CopiableCode key={name} data={name}>{name}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Finish',\r\n                                    value: <div>\r\n                                        {Object.values(FinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                        <div>{language['manager.template.description.joinable']}</div>\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Art Finish',\r\n                                    value: <div>\r\n                                        {Object.values(ArtFinishMap)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'number',\r\n                                            'text',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Star Alignment',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'left',\r\n                                            'center',\r\n                                            'right',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Card Icon Type',\r\n                                    value: <div>\r\n                                        {IconTypeList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Background Type',\r\n                                    value: <div>\r\n                                        {getBackgroundTypeList()\r\n                                            .map(({ value }) => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Condense Rate',\r\n                                    value: <div>\r\n                                        {Object.keys(CondenseTolerantMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style Type',\r\n                                    value: <div>\r\n                                        {[\r\n                                            'predefined',\r\n                                            'custom',\r\n                                        ].map(value => {\r\n                                            return <CopiableCode key={value} data={value}>{value}</CopiableCode>;\r\n                                        })}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Font',\r\n                                    value: <div>\r\n                                        <CopiableCode data={'Arial'}>Arial</CopiableCode>\r\n                                    </div>,\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Preset',\r\n                                    value: <div>\r\n                                        {Object.keys(PresetNameStyleMap)\r\n                                            .map(value => <CopiableCode key={value} data={value}>{value}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Name Style - Pattern',\r\n                                    value: <div>\r\n                                        {PatternList\r\n                                            .filter(({ isOption }) => isOption)\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                                {\r\n                                    field: 'Pendulum Size',\r\n                                    value: <div>\r\n                                        {PendulumSizeList\r\n                                            .map(({ key }) => <CopiableCode key={key} data={key}>{key}</CopiableCode>)}\r\n                                    </div>\r\n                                },\r\n                            ].map(({\r\n                                field,\r\n                                altField,\r\n                                value,\r\n                            }) => {\r\n                                return <tr key={field}>\r\n                                    <td>\r\n                                        <StyledMono>{field}</StyledMono>\r\n                                        {altField && <><br /><StyledMono>{altField}</StyledMono></>}\r\n                                    </td>\r\n                                    <td>{value}</td>\r\n                                </tr>;\r\n                            })}\r\n                        </table>\r\n                    </Panel>\r\n                </Collapse>\r\n                \r\n            </div>\r\n        </StyledManagerSample>\r\n    </>;\r\n};","import { Drawer, Dropdown, Input, Menu, notification, Tooltip } from 'antd';\r\nimport { forwardRef, useCallback, useEffect, useImperativeHandle, useRef, useState } from 'react';\r\nimport { csvToCardList, LanguageDataDictionary, SortFunctionMap, useCardList, useSetting } from 'src/service';\r\nimport styled from 'styled-components';\r\nimport { ManagerCardList } from './card-list';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport {\r\n    DownloadOutlined,\r\n    UploadOutlined,\r\n    CloseOutlined,\r\n    UnorderedListOutlined,\r\n    LoadingOutlined,\r\n    // FilterOutlined,\r\n} from '@ant-design/icons';\r\nimport { cardListToCsv } from 'src/service';\r\nimport { downloadBlob, getNaivePseudoRandomizer } from 'src/util';\r\nimport { InternalCard } from 'src/model';\r\nimport { ManagerSample } from './manager-sample';\r\nimport debounce from 'lodash.debounce';\r\nimport XLSX from 'xlsx';\r\n\r\nconst chanceToRemindBackup = getNaivePseudoRandomizer();\r\nconst StyledCardManagerPanel = styled.div`\r\n    position: absolute;\r\n    right: 0;\r\n    top: 125px;\r\n`;\r\nconst StyledCardManagerDrawer = styled(Drawer)`\r\n    .ant-drawer-header {\r\n        padding: 0;\r\n    }\r\n    .ant-drawer-content {\r\n        box-shadow: 0 0 3px 2px #202020;\r\n    }\r\n    .ant-drawer-body {\r\n        padding: 0;\r\n        height: 100%;\r\n    }\r\n    .ant-drawer-close {\r\n        display: none;\r\n    }\r\n    .ant-drawer-content {\r\n        background-color: #484848;\r\n    }\r\n\r\n    .manager-label-container {\r\n        padding: var(--spacing-sm) 0 0 var(--spacing-sm);\r\n    }\r\n    .manager-button-container {\r\n        padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\r\n        .manager-button {\r\n            cursor: pointer;\r\n            input {\r\n                display: none;\r\n            }\r\n            &:hover {\r\n                color: var(--main-active);\r\n                .anticon {\r\n                    color: var(--main-active);\r\n                }\r\n            }\r\n            &.close-button:hover {\r\n                .anticon {\r\n                    color: var(--main-danger);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    .card-manager-header {\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content;\r\n        .card-manager-filter {\r\n            grid-column: span 2;\r\n            padding: var(--spacing-xs);\r\n            .card-manager-search {\r\n                width: 100%;\r\n            }\r\n        }\r\n    }\r\n    .manager-button-container {\r\n        display: inline-flex;\r\n        gap: var(--spacing-sm);\r\n    }\r\n`;\r\nexport type CardManagerPanelRef = {};\r\nexport type CardManagerPanel = {\r\n    language: LanguageDataDictionary,\r\n    onVisibleChange: (status: boolean) => void,\r\n    onSelect: (card: InternalCard) => void,\r\n    onDownload: (card: InternalCard) => void,\r\n    onRequestImport: () => void,\r\n};\r\nexport const CardManagerPanel = forwardRef(({\r\n    language,\r\n    onVisibleChange,\r\n    onSelect,\r\n    onDownload,\r\n    onRequestImport,\r\n}: CardManagerPanel, ref: React.ForwardedRef<CardManagerPanelRef>) => {\r\n    const listUploadId = 'list-upload-id';\r\n    const listUploadRef = useRef<HTMLInputElement>(null);\r\n    const {\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    } = useCardList(useShallow(({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    }) => ({\r\n        cardList,\r\n        changeEditStatus,\r\n        pendingActiveCard,\r\n        setActiveId,\r\n        setCardList,\r\n        setFilterFunction,\r\n        setListName,\r\n        setPendingActiveCard,\r\n        sortList,\r\n        toggleVisible,\r\n        visible,\r\n    })));\r\n    const exportFormat = useSetting(state => state.setting.exportFormat);\r\n    const [inputKey, setInputKey] = useState(0);\r\n    const [readingFile, setReadingFile] = useState(false);\r\n    const [savingFile, setSavingFile] = useState(false);\r\n    const debounceSearch = debounce((e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setFilterFunction({ type: 'text', value: e.target.value });\r\n    }, 250);\r\n\r\n    const activeCard = useCallback((card: InternalCard) => {\r\n        onSelect(card);\r\n        setActiveId(card.id);\r\n    }, [onSelect, setActiveId]);\r\n\r\n    useEffect(() => {\r\n        if (pendingActiveCard) {\r\n            onSelect(pendingActiveCard);\r\n            setActiveId(pendingActiveCard.id);\r\n            setPendingActiveCard();\r\n        }\r\n    }, [onSelect, pendingActiveCard, setActiveId, setPendingActiveCard]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('manager-panel-visible', visible.toString());\r\n        onVisibleChange(visible);\r\n    }, [onVisibleChange, visible]);\r\n\r\n    useEffect(() => {\r\n        const unsub = useCardList.subscribe(\r\n            state => state.filterResetSignal,\r\n            nextSignal => {\r\n                if (nextSignal) {\r\n                    setInputKey(cnt => cnt + 1);\r\n                }\r\n            }\r\n        );\r\n\r\n        return () => {\r\n            unsub();\r\n        };\r\n    }, []);\r\n\r\n    /** Currently no need for direct control */\r\n    useImperativeHandle(ref, () => ({}), []);\r\n\r\n    return <StyledCardManagerPanel>\r\n        <StyledCardManagerDrawer\r\n            title={<div className=\"card-manager-header truncate\">\r\n                <CardManagerMonitor className=\"manager-label-container truncate\" language={language}>\r\n                    {cardList.length}\r\n                </CardManagerMonitor>\r\n                <div className=\"manager-button-container\">\r\n                    <div\r\n                        className=\"manager-button\"\r\n                    >\r\n                        <ManagerSample language={language} />\r\n                    </div>\r\n                    <Dropdown\r\n                        overlay={<Menu>\r\n                            {[\r\n                                {\r\n                                    value: SortFunctionMap.level.key,\r\n                                    label: language['manager.button.sort.level.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.name.key,\r\n                                    label: language['manager.button.sort.name.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.atk.key,\r\n                                    label: language['manager.button.sort.atk.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.def.key,\r\n                                    label: language['manager.button.sort.def.label'],\r\n                                },\r\n                                {\r\n                                    value: SortFunctionMap.set.key,\r\n                                    label: language['manager.button.sort.set-id.label'],\r\n                                },\r\n                            ].map(({ value, label }) => {\r\n                                return <Menu.Item key={value} onClick={() => sortList(value)}>\r\n                                    {label}\r\n                                </Menu.Item>;\r\n                            })}\r\n                        </Menu>}\r\n                    >\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <UnorderedListOutlined />\r\n                        </div>\r\n                    </Dropdown>\r\n                    {/* <Tooltip title={language['manager.header.button.filter.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                        >\r\n                            <FilterOutlined />\r\n                        </div>\r\n                    </Tooltip> */}\r\n                    <Tooltip title={language['manager.header.button.download.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={async () => {\r\n                                let wouldDownload = true;\r\n                                setSavingFile(true);\r\n                                if (chanceToRemindBackup.check()) {\r\n                                    wouldDownload = window.confirm(language['prompt.remind.backup.label']);\r\n                                }\r\n\r\n                                if (wouldDownload) {\r\n                                    try {\r\n                                        const {\r\n                                            error,\r\n                                            value: csvdata,\r\n                                        } = cardListToCsv(useCardList.getState().cardList);\r\n\r\n                                        if (error) {\r\n                                            let errorMessage = '';\r\n                                            let errorDescription = '';\r\n                                            switch (error) {\r\n                                                case 'offline-data': {\r\n                                                    errorMessage = language['error.export.offline-data.message'];\r\n                                                    errorDescription = language['error.export.offline-data.description'];\r\n                                                    break;\r\n                                                }\r\n                                            }\r\n\r\n                                            if (errorMessage || errorDescription) {\r\n                                                notification.error({\r\n                                                    message: errorMessage,\r\n                                                    description: errorDescription,\r\n                                                });\r\n                                            }\r\n                                        }\r\n                                        switch (exportFormat) {\r\n                                            case 'xlsx': {\r\n                                                const exportWorkbook = XLSX.read(csvdata, { type: 'string' });\r\n                                                XLSX.writeFile(exportWorkbook, `${useCardList.getState().listName}.xlsx`);\r\n                                                break;\r\n                                            }\r\n                                            default: {\r\n                                                downloadBlob(\r\n                                                    useCardList.getState().listName,\r\n                                                    new Blob([csvdata], { type: 'text/csv' }),\r\n                                                    'text/csv',\r\n                                                );\r\n                                            }\r\n                                        }\r\n                                        changeEditStatus('download');\r\n                                    } catch (e) {}\r\n                                }\r\n                                setSavingFile(false);\r\n                            }}\r\n                        >\r\n                            {savingFile ? <LoadingOutlined /> : <DownloadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <Tooltip key={`${readingFile}`} overlay={language['manager.header.button.upload.tooltip']}>\r\n                        <div\r\n                            className=\"manager-button\"\r\n                            onClick={() => {\r\n                                const target = document.getElementById(listUploadId);\r\n                                if (target && !readingFile) {\r\n                                    target.click();\r\n                                }\r\n                            }}\r\n                        >\r\n                            <input key={`upload-${inputKey}`} ref={listUploadRef}\r\n                                type=\"file\"\r\n                                id={listUploadId}\r\n                                accept={[\r\n                                    '.csv',\r\n                                    'application/vnd.ms-excel',\r\n                                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n                                ].join(',')}\r\n                                className=\"import-upload-input\"\r\n                                onChange={async (e) => {\r\n                                    const fileList = listUploadRef.current?.files;\r\n                                    const { isListDirty } = useCardList.getState();\r\n                                    const announceError = () => {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                        notification.error({\r\n                                            message: language['error.csv-import.message'],\r\n                                            description: language['error.csv-import.description'],\r\n                                        });\r\n                                    };\r\n                                    let willImport = true;\r\n\r\n                                    if (isListDirty) {\r\n                                        willImport = window.confirm(language['prompt.warning.on-import.label']);\r\n                                    }\r\n                                    if (willImport && fileList && fileList[0]) {\r\n                                        setReadingFile(true);\r\n                                        try {\r\n                                            const file = await fileList[0].arrayBuffer();\r\n                                            const fileName = fileList[0].name.replace(/\\.[^/.]+$/, '');\r\n\r\n                                            /** Assume data from only the very first sheet */\r\n                                            /** 65001 codepage allow display unicode characters such as japanese */\r\n                                            const workbook = XLSX.read(file, { codepage: 65001 });\r\n                                            const csvBook = XLSX.utils.sheet_to_json<string[]>(\r\n                                                workbook.Sheets[workbook.SheetNames[0]],\r\n                                                { header: 1, raw: false },\r\n                                            );\r\n                                            const nextCardList = csvToCardList(csvBook);\r\n\r\n                                            if (nextCardList.length > 0) {\r\n                                                setCardList(nextCardList, nextCardList[0].id);\r\n                                                setListName(fileName);\r\n                                                setInputKey(cnt => cnt + 1);\r\n                                                onSelect(nextCardList[0]);\r\n                                                setReadingFile(false);\r\n                                            } else {\r\n                                                announceError();\r\n                                            }\r\n                                        } catch (e) {\r\n                                            console.error(e);\r\n                                            announceError();\r\n                                        }\r\n                                    } else {\r\n                                        setInputKey(cnt => cnt + 1);\r\n                                        setReadingFile(false);\r\n                                    }\r\n                                }}\r\n                            />\r\n                            {readingFile ? <LoadingOutlined /> : <UploadOutlined />}\r\n                        </div>\r\n                    </Tooltip>\r\n                    <div\r\n                        className=\"manager-button close-button\"\r\n                        onClick={() => toggleVisible(false)}\r\n                    >\r\n                        <CloseOutlined />\r\n                    </div>\r\n                </div>\r\n                <div className=\"card-manager-filter\">\r\n                    <Input key={`search-${inputKey}`}\r\n                        className=\"card-manager-search\"\r\n                        placeholder={language['manager.button.search.text.placeholder']}\r\n                        onChange={debounceSearch}\r\n                        onPressEnter={e => setFilterFunction({ type: 'text', value: e.currentTarget.value })}\r\n                        allowClear\r\n                    />\r\n                </div>\r\n            </div>}\r\n            visible={visible}\r\n            maskClosable={false}\r\n            mask={false}\r\n            destroyOnClose={false}\r\n            forceRender={true}\r\n            closeIcon={() => null}\r\n            onClose={() => toggleVisible(false)}\r\n            width={280}\r\n        >\r\n            <ManagerCardList\r\n                language={language}\r\n                onSelect={activeCard}\r\n                onDownload={onDownload}\r\n                onRequestImport={onRequestImport}\r\n            />\r\n        </StyledCardManagerDrawer>\r\n    </StyledCardManagerPanel>;\r\n});\r\n\r\nconst StyledCardManagerMonitor = styled.div`\r\n    .header-warning {\r\n        color: var(--main-danger);\r\n    }\r\n`;\r\ntype CardManagerMonitor = {\r\n    language: LanguageDataDictionary,\r\n} & React.HTMLAttributes<HTMLDivElement>;\r\nconst CardManagerMonitor = ({\r\n    language,\r\n    children,\r\n    ...rest\r\n}: CardManagerMonitor) => {\r\n    const {\r\n        isListDirty,\r\n        cardList,\r\n    } = useCardList(useShallow(({\r\n        isListDirty,\r\n        cardList,\r\n    }) => ({\r\n        isListDirty,\r\n        cardList,\r\n    })));\r\n\r\n    useEffect(() => {\r\n        let confirmReload = (ev: Event) => {\r\n            ev.preventDefault();\r\n            return language['prompt.warning.on-leave.label'];\r\n        };\r\n        /** If card list only have 1 card, its data is saved on the url and therefore can be retreived after reload. */\r\n        if (isListDirty && cardList.length > 1) {\r\n            window.addEventListener('beforeunload', confirmReload);\r\n        }\r\n\r\n        return () => {\r\n            window.removeEventListener('beforeunload', confirmReload);\r\n        };\r\n    }, [cardList.length, isListDirty, language]);\r\n\r\n    return <StyledCardManagerMonitor {...rest}>\r\n        {children}{(isListDirty && cardList.length > 1) && <span className=\"header-warning\">&nbsp;*</span>}\r\n    </StyledCardManagerMonitor>;\r\n};","import styled from 'styled-components';\r\nimport { StyledActionIconButton } from './page';\r\nimport { CardActionButton } from './component';\r\n\r\nexport const StyledDataButtonPanelContainer = styled.div`\r\n    display: flex;\r\n    column-gap: var(--spacing);\r\n    border-radius: var(--br-lg);\r\n    font-size: var(--fs-4xl);\r\n    line-height: 1.5;\r\n    margin: auto;\r\n    max-width: var(--card-width);\r\n    min-height: 59px;\r\n    outline: none !important;   // Avoid default state styling\r\n    padding: var(--spacing);\r\n    padding-right: 0;\r\n    text-align: center;\r\n    text-shadow: 0 1px 2px black;\r\n    .anticon {\r\n        cursor: pointer;\r\n    }\r\n    button {\r\n        color: white;\r\n        border-radius: var(--br-lg);\r\n        outline: none !important;   // Avoid default state styling\r\n        cursor: pointer;\r\n    }\r\n    .save-button {\r\n        flex: 1;\r\n        font-size: var(--fs-xl);\r\n        border: none;\r\n        font-weight: 500;\r\n        box-shadow: var(--bs-button);\r\n        height: 39px; // Alignment\r\n        line-height: 1;\r\n        &:focus, &:active {\r\n            color: white;\r\n        }\r\n    }\r\n    #save-button-waiting {\r\n        cursor: wait;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 100%;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n    }\r\n    #save-button-ready {\r\n        cursor: pointer;\r\n        &:hover {\r\n            background-color: var(--sub-info);\r\n            box-shadow: none;\r\n        }\r\n    }\r\n    .save-button-container {\r\n        display: flex;\r\n        flex: 1;\r\n        font-size: var(--fs);\r\n        line-height: 1.35;\r\n        position: relative;\r\n    }\r\n    .save-button-tainted {\r\n        .alert-label {\r\n            flex: 1;\r\n            padding-top: var(--spacing-px);\r\n        }\r\n        .resolution-option {\r\n            position: relative;\r\n            border: none;\r\n            border-radius: var(--br-lg);\r\n            background: var(--main-primary);\r\n        }\r\n    }\r\n    .imexport {\r\n        flex: 0 0 200px;\r\n        display: grid;\r\n        grid-template-columns: 1fr max-content var(--spacing) 1fr max-content;\r\n        .primary-button {\r\n            align-content: center;\r\n            font-size: var(--fs);\r\n            background-color: var(--main-tertiary);\r\n            border: var(--bw) solid var(--sub-tertiary);\r\n            border-radius: var(--br-lg) 0 0 var(--br-lg);\r\n            &:hover {\r\n                background-color: var(--sub-tertiary);\r\n                box-shadow: none;\r\n            }\r\n        }\r\n        ${StyledActionIconButton} {\r\n            border-radius: 0 var(--br-lg) var(--br-lg) 0;\r\n            border-left: var(--bw) solid var(--sub-level-3);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CardPreviewContainer = styled.div`\r\n    position: relative;\r\n    display: block;\r\n    width: calc(var(--card-width) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    height: calc(var(--card-height) * var(--resize-ratio) * 1 / var(--global-scale));\r\n    margin: var(--spacing);\r\n    margin-top: 0;\r\n    .reset-button,\r\n    .lightbox-button {\r\n        display: none;\r\n    }\r\n    #preview-canvas {\r\n        display: none;\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n        transform: translateX(calc(var(--resize-percentage) / 2 - 50%))\r\n            translateY(calc(var(--resize-percentage) / 2 - 50%))\r\n            scale(var(--resize-ratio))\r\n            translateZ(0);\r\n        &.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n    }\r\n    &:hover {\r\n        .reset-button,\r\n        .lightbox-button {\r\n            display: block;\r\n        }\r\n    }\r\n`;\r\nexport const CardCanvasGroupContainer = styled.div`\r\n    width: var(--card-width);\r\n    height: var(--card-height);\r\n    margin-bottom: var(--spacing);\r\n    transform: translateX(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        translateY(calc(var(--resize-percentage) / 2 / var(--global-scale) - 50%))\r\n        scale(calc(var(--resize-ratio) / var(--global-scale)))\r\n        translateZ(0);\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    canvas {\r\n        position: absolute;\r\n        left: 0;\r\n        z-index: 1;\r\n        pointer-events: none;\r\n    }\r\n    &:hover {\r\n        #export-canvas.js-export-available {\r\n            display: inline-block !important;   // Override js-controlled inline style\r\n            cursor: default;\r\n        }\r\n        #export-canvas-guard {\r\n            display: flex;\r\n            cursor: wait;\r\n            transition: all 2s;\r\n        }\r\n    }\r\n    #export-canvas {\r\n        display: none;\r\n        z-index: 100;\r\n        pointer-events: all;\r\n    }\r\n    #export-canvas-guard {\r\n        position: absolute;\r\n        left: 0;\r\n        display: none;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 101;\r\n        // background-color: #ffffff08;\r\n        width: var(--card-width);\r\n        height: var(--card-height);\r\n        .anticon {\r\n            font-size: var(--fs-4xl);\r\n        }\r\n        .canvas-guard-alert {\r\n            position: absolute;\r\n            top: 0;\r\n            right: 0;\r\n            color: white;\r\n            padding: var(--spacing-xs) var(--spacing);\r\n            border-radius: 0 0 0 var(--br-lg);\r\n            background-color: var(--main-active);\r\n            box-shadow:\r\n                0 3px 6px rgba(0, 0, 0, 0.16),\r\n                0 3px 6px rgba(0, 0, 0, 0.23);\r\n        }\r\n        &.guard-on {\r\n            display: flex !important;   // Override js-controlled inline style\r\n        }\r\n    }\r\n    .crop-canvas {\r\n        position: relative;\r\n        /** Size here is just a placeholder, crop canvas constantly get its dimensions updated based on the current artwork */\r\n        width: 416px;\r\n        height: 416px;\r\n        z-index: 0;\r\n        top: 0;\r\n        left: 0;\r\n        visibility: hidden;\r\n    }\r\n`;\r\n\r\nexport const StyledAppLoading = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground-image: linear-gradient(45deg, #333, #333);\r\n\tz-index: 4000;\r\n\tcolor: white;\r\n\ttext-shadow:\r\n\t\t0 1px #333,\r\n\t\t0 2px #111;\r\n\tfont-size: var(--fs-3xl);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\n\r\nexport const StyledByMe = styled.div`\r\n\tposition: fixed;\r\n\tright: var(--spacing);\r\n\tbottom: 0;\r\n\tfont-size: var(--fs-xs);\r\n\topacity: 0.5;\r\n\tpadding: var(--spacing-px) var(--spacing-xs);\r\n\tcolor: var(--color-dim);\r\n    img {\r\n        height: 10px;\r\n        margin-left: 1px;\r\n    }\r\n`;\r\n\r\nexport const ErrorAlert = styled.span`\r\n    color: var(--main-danger);\r\n`;\r\n\r\nexport const OverlayButton = styled(CardActionButton)`\r\n    position: absolute;\r\n    z-index: 101;\r\n`;\r\n\r\nexport const LightboxButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: var(--spacing-xs);\r\n`;\r\n\r\nexport const ResetButton = styled(OverlayButton)`\r\n    top: var(--spacing-xs);\r\n    right: calc(var(--overlay-size) + 2 * var(--spacing-xs));\r\n`;","import { useCallback, useEffect, useMemo, useRef, useState } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './app.scss';\r\nimport './style/index.scss';\r\nimport './responsive.scss';\r\nimport './reduce-color-motion.scss';\r\nimport {\r\n    InternalCard,\r\n    CanvasConst,\r\n    Card,\r\n    getDefaultCard,\r\n} from './model';\r\nimport {\r\n    forceRefocus,\r\n    isMobileDevice,\r\n} from './util';\r\nimport {\r\n    BatchConverter,\r\n    CardInputPanel,\r\n    CardInputPanelRef,\r\n    CardManagerPanel,\r\n    DownloadButton,\r\n    DownloadButtonRef,\r\n    ExportPanel,\r\n    ExportPanelRef,\r\n    ImportPanel,\r\n    ImportPanelRef,\r\n    ResolutionButton,\r\n} from './page';\r\nimport WebFont from 'webfontloader';\r\nimport {\r\n    changeCardFormat,\r\n    getLanguage,\r\n    retrieveSavedCard,\r\n    useCard,\r\n    useCardList,\r\n    useI18N,\r\n    useOCGFont,\r\n    useSetting,\r\n} from './service';\r\nimport { Dropdown, notification, Tooltip } from 'antd';\r\nimport { Lightbox, LightboxRef, ResolutionPicker, TaintedCanvasWarning } from './component';\r\nimport { clearCanvas } from './draw';\r\nimport { ZoomInOutlined, ClearOutlined, GatewayOutlined } from '@ant-design/icons';\r\nimport {\r\n    CardPreviewContainer,\r\n    ErrorAlert,\r\n    LightboxButton,\r\n    ResetButton,\r\n    StyledAppLoading,\r\n    StyledByMe,\r\n    CardCanvasGroupContainer,\r\n    StyledDataButtonPanelContainer,\r\n} from './app.styled';\r\nimport { configure, HotKeys } from 'react-hotkeys';\r\nimport { useShallow } from 'zustand/react/shallow';\r\nimport * as Sentry from '@sentry/react';\r\n\r\n/** React hotkey setup */\r\nconfigure({\r\n    ignoreTags: [],\r\n});\r\nconst AppGlobalHotkeyMap = {\r\n    EXPORT: ['ctrl+d', 'command+d'],\r\n    IMPORT: ['ctrl+e', 'command+e'],\r\n    MERGE: ['ctrl+g', 'command+g'],\r\n    VIEW: ['ctrl+b', 'command+b'],\r\n    DOWNLOAD: ['ctrl+s', 'command+s'],\r\n};\r\n\r\nconst { height: CanvasHeight, width: CanvasWidth } = CanvasConst;\r\nfunction App() {\r\n    const {\r\n        allowHotkey,\r\n        softMode,\r\n        globalScale,\r\n        resolution,\r\n    } = useSetting(useShallow(({ setting: { allowHotkey, reduceMotionColor, globalScale, resolution } }) => ({\r\n        softMode: reduceMotionColor,\r\n        allowHotkey,\r\n        globalScale,\r\n        resolution,\r\n    })));\r\n    const {\r\n        isInitiating: isLanguageInitiating,\r\n        isLoading: isLanguageLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate: initiateI18N,\r\n        loadDefaultLanguage,\r\n    } = useI18N(useShallow(({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    }) => ({\r\n        isInitiating,\r\n        isLoading,\r\n        language,\r\n        isMetadataReady,\r\n        languageInfo,\r\n        initiate,\r\n        loadDefaultLanguage,\r\n    })));\r\n    const [isInitializing, setInitializing] = useState(true);\r\n    const [error, setError] = useState('');\r\n    const [sourceType, setSourceType] = useState<'offline' | 'online'>('online');\r\n    const [managerVisible, setManagerVisible] = useState(false);\r\n\r\n    const cardInputRef = useRef<CardInputPanelRef>(null);\r\n    const artworkCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const backgroundCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const exportCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const previewCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const frameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const cardIconCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumScaleCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const pendulumEffectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const typeCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const effectCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const nameCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const statCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const setIdCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const passwordCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const creatorCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const stickerCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const finishCanvasRef = useRef<HTMLCanvasElement>(null);\r\n    const lightboxRef = useRef<LightboxRef>(null);\r\n    const [canvasMap] = useState({\r\n        artworkCanvasRef,\r\n        backgroundCanvasRef,\r\n        exportCanvasRef,\r\n        frameCanvasRef,\r\n        cardIconCanvasRef,\r\n        pendulumScaleCanvasRef,\r\n        pendulumEffectCanvasRef,\r\n        typeCanvasRef,\r\n        effectCanvasRef,\r\n        nameCanvasRef,\r\n        statCanvasRef,\r\n        setIdCanvasRef,\r\n        passwordCanvasRef,\r\n        creatorCanvasRef,\r\n        stickerCanvasRef,\r\n        finishCanvasRef,\r\n        lightboxRef,\r\n        previewCanvasRef,\r\n    });\r\n\r\n    const downloadButtonRef = useRef<DownloadButtonRef>(null);\r\n    const exportPanelRef = useRef<ExportPanelRef>(null);\r\n    const importPanelRef = useRef<ImportPanelRef>(null);\r\n\r\n    const [imageChangeCount, setImageChangeCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        initiateI18N();\r\n    }, [initiateI18N]);\r\n    useEffect(() => {\r\n        if (isMetadataReady) loadDefaultLanguage();\r\n    }, [isMetadataReady, loadDefaultLanguage]);\r\n    /** Dynamic style, we force inline style into body because app component's style cannot affect overlay component. */\r\n    useEffect(() => {\r\n        const applyList = [\r\n            'font-family',\r\n            'letter-spacing',\r\n            '--width-label',\r\n        ];\r\n\r\n        applyList.forEach(styleName => {\r\n            document.body.style.setProperty(styleName, languageInfo.style?.[styleName] ?? '' as any);\r\n        });\r\n    }, [languageInfo]);\r\n\r\n    useEffect(() => {\r\n        const ctx = exportCanvasRef.current?.getContext('2d');\r\n        const setCard = useCard.getState().setCard;\r\n        if (ctx) {\r\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n            ctx.imageSmoothingQuality = 'high';\r\n            clearCanvas(ctx);\r\n        }\r\n\r\n        if (isLanguageInitiating === false) WebFont.load({\r\n            custom: {\r\n                families: [\r\n                    'Matrix-Bold',\r\n                    'MatrixBoldSmallCaps',\r\n                    'MatrixBook',\r\n                    'MatrixRegularSmallCaps',\r\n                    'RoGSanSrfStd-Bd',\r\n                    'StoneSerif-Italic',\r\n                    'YuGiOhITCStoneSerifBSc',\r\n                    'matrix',\r\n                    'palatino-linotype-bold',\r\n                    'stone-serif-bold',\r\n                    'stone-serif-regular',\r\n                ],\r\n                urls: ['asset/font.css'],\r\n            },\r\n            active: () => {\r\n                const retrievedCard = retrieveSavedCard();\r\n\r\n                setCard(retrievedCard);\r\n                useCardList.getState().setCardList([retrievedCard], retrievedCard.id);\r\n                setInitializing(false);\r\n            },\r\n            fontinactive(familyName, fvd) {\r\n                console.error('TCG fontinactive', familyName, fvd);\r\n                notification.error({\r\n                    message: getLanguage()['error.load.font.tcg'](familyName),\r\n                });\r\n            },\r\n            inactive: () => {\r\n                setError(getLanguage()['error.load.font.all-tcg']);\r\n                setInitializing(false);\r\n            },\r\n        });\r\n    }, [isLanguageInitiating]);\r\n\r\n    const {\r\n        styleContent: ocgStyleFile,\r\n    } = useOCGFont({\r\n        isLanguageInitiating,\r\n        onBeforeLoad: () => {\r\n            setInitializing(true);\r\n            const ctx = exportCanvasRef.current?.getContext('2d');\r\n            if (ctx) {\r\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n                ctx.imageSmoothingQuality = 'high';\r\n                clearCanvas(ctx);\r\n            }\r\n        },\r\n        onActive: () => {\r\n            setInitializing(false);\r\n        },\r\n        onInactive: () => {\r\n            setError(getLanguage()['error.load.font.all-ocg']);\r\n            setInitializing(false);\r\n        },\r\n        onFontInactive: (familyName, fvd) => {\r\n            console.error('OCG fontinactive', familyName, fvd);\r\n            notification.error({\r\n                message: getLanguage()['error.load.font.ocg'](familyName),\r\n            });\r\n        }\r\n    });\r\n\r\n    const [isTainted, setTainted] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const documentClassList = document.body.classList;\r\n\r\n        if (softMode) documentClassList.add('reduced-color-motion');\r\n        else documentClassList.remove('reduced-color-motion');\r\n    }, [softMode]);\r\n\r\n    const displayLightbox = useCallback((status?: boolean, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        lightboxRef.current?.setVisible(cur => typeof status === 'boolean' ? status : !cur);\r\n    }, [allowHotkey]);\r\n\r\n    const sentryInitialized = useRef(false);\r\n    const reportTarget = document.getElementById('sentry-bug-report');\r\n    useEffect(() => {\r\n        if (reportTarget && language && sentryInitialized.current === false && Sentry.isInitialized() === false) {\r\n            sentryInitialized.current = true;\r\n\r\n            Sentry.init({\r\n                dsn: 'https://32e20d849c5724b2e63eab9d0a57c165@o4508424630697984.ingest.us.sentry.io/4508424632401920',\r\n                integrations: [\r\n                    Sentry.browserTracingIntegration(),\r\n                    Sentry.replayIntegration(),\r\n                    Sentry.feedbackIntegration({\r\n                        colorScheme: 'system',\r\n                        autoInject: false,\r\n                    }).attachTo(reportTarget, {\r\n                        formTitle: language['contributor.bug-report.tooltip'],\r\n                        nameLabel: language['contributor.bug-report.name.label'],\r\n                        namePlaceholder: language['contributor.bug-report.name.placeholder'],\r\n                        isEmailRequired: false,\r\n                        showEmail: false,\r\n                        messageLabel: language['contributor.bug-report.message.label'],\r\n                        messagePlaceholder: language['contributor.bug-report.message.placeholder'],\r\n                        addScreenshotButtonLabel: language['contributor.bug-report.screenshot.label'],\r\n                        removeScreenshotButtonLabel: language['contributor.bug-report.remove-screenshot.label'],\r\n                        cancelButtonLabel: language['contributor.bug-report.cancel.label'],\r\n                        submitButtonLabel: language['contributor.bug-report.submit.label'],\r\n                        isRequiredLabel: language['contributor.bug-report.required.label'],\r\n                        successMessageText: language['contributor.bug-report.success.label'],\r\n                    }),\r\n                ],\r\n                /** @todo Should we enable dialog here? Because there is no way for us to contact the user back, we will have a very hard time fighting against false positive error. */\r\n                // beforeSend(event) {\r\n                //     // Check if it is an exception, and if so, show the report dialog\r\n                //     if (event.exception && event.event_id) {\r\n                //         Sentry.showReportDialog({\r\n                //             eventId: event.event_id,\r\n                //         });\r\n                //     }\r\n                //     return event;\r\n                // },\r\n                // Tracing\r\n                tracesSampleRate: 1.0, //  Capture 100% of the transactions\r\n                // Set 'tracePropagationTargets' to control for which URLs distributed tracing should be enabled\r\n                tracePropagationTargets: ['lauqerm.github.io'],\r\n                // Session Replay\r\n                replaysSessionSampleRate: 0.1, // This sets the sample rate at 10%. You may want to change it to 100% while in development and then sample at a lower rate in production.\r\n                replaysOnErrorSampleRate: 1.0, // If you're not already sampling the entire session, change the sample rate to 100% when sampling sessions where errors occur.\r\n            });\r\n        }\r\n    }, [language, reportTarget]);\r\n\r\n    const treatNewCard = useCallback((\r\n        decodedCard: Card,\r\n        option?: {\r\n            forcePurityCheck?: boolean,\r\n            writeOnCurrentCard?: boolean,\r\n            addToList?: boolean,\r\n        },\r\n    ) => {\r\n        const {\r\n            addToList,\r\n            forcePurityCheck,\r\n            writeOnCurrentCard,\r\n        } = option ?? {};\r\n\r\n        const { setCard, card } = useCard.getState();\r\n        const normalizedCard = writeOnCurrentCard\r\n            ? { ...decodedCard, id: card.id }\r\n            : decodedCard;\r\n\r\n        if (addToList) {\r\n            useCardList.getState().addCard(normalizedCard);\r\n        }\r\n        setCard(normalizedCard, forcePurityCheck);\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        cardInputRef.current?.forceCardData(normalizedCard);\r\n        /** Allow navigate input panel right away */\r\n        forceRefocus();\r\n    }, []);\r\n\r\n    const importData = useCallback(async (\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('replace');\r\n    }, [allowHotkey]);\r\n\r\n    const mergeData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        importPanelRef.current?.requestImport('merge');\r\n    }, [allowHotkey]);\r\n\r\n    const exportData = useCallback((\r\n        event?: { preventDefault: () => void },\r\n        fromHotkey = false,\r\n        data?: Card,\r\n    ) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        if (sourceType === 'online' && cardInputRef.current?.isLoading()) {\r\n            window.alert(language['error.export.image-loading.message']);\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const cardData = data ?? useCard.getState().card;\r\n\r\n            exportPanelRef.current?.setCardData(cardData);\r\n        } catch (e) {\r\n            console.error(e);\r\n            notification.error({\r\n                message: language['error.export.message'],\r\n                description: language['error.export.description'],\r\n            });\r\n        }\r\n    }, [allowHotkey, language, sourceType]);\r\n\r\n    const exportCardInList = useCallback((card: InternalCard) => {\r\n        const { id, ...exportableCard } = card;\r\n\r\n        exportData(undefined, false, exportableCard);\r\n    }, [exportData]);\r\n\r\n    const downloadFromHotkey = useCallback((event?: { preventDefault: () => void }, fromHotkey = false) => {\r\n        if (fromHotkey && !allowHotkey) return;\r\n\r\n        event?.preventDefault();\r\n        downloadButtonRef.current?.download();\r\n    }, [allowHotkey]);\r\n\r\n    const hotkeyHandlerMap = useMemo(() => {\r\n        return {\r\n            IMPORT: (event?: { preventDefault: () => void }) => importData(event, true),\r\n            MERGE: (event?: { preventDefault: () => void }) => mergeData(event, true),\r\n            EXPORT: (event?: { preventDefault: () => void }) => exportData(event, true),\r\n            VIEW: () => displayLightbox(true, true),\r\n            DOWNLOAD: (event?: { preventDefault: () => void }) => downloadFromHotkey(event, true),\r\n        };\r\n    }, [downloadFromHotkey, exportData, importData, mergeData, displayLightbox]);\r\n\r\n    const alertDownloadError = useCallback(() => {\r\n        setTainted(true);\r\n        alert(language['prompt.download.tainted.message']);\r\n    }, [language]);\r\n\r\n    const rerenderAllImage = useCallback((crossorigin?: string) => {\r\n        if (crossorigin === 'anonymous') {\r\n            setTainted(false);\r\n            lightboxRef.current?.refresh();\r\n        }\r\n        setImageChangeCount(cnt => cnt + 1);\r\n    }, []);\r\n\r\n    const rerenderCardImage: NonNullable<CardInputPanel['onCropChange']> = useCallback((_, sourceType) => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setSourceType(sourceType);\r\n    }, []);\r\n\r\n    const markTaintedImage = useCallback(() => {\r\n        setImageChangeCount(cnt => cnt + 1);\r\n        setTainted(true);\r\n    }, []);\r\n\r\n    const toggleManagerMode = useCallback((value: boolean) => {\r\n        setManagerVisible(value);\r\n    }, []);\r\n\r\n    const isLoading = isLanguageLoading || isInitializing;\r\n    return (\r\n        <HotKeys keyMap={AppGlobalHotkeyMap} handlers={hotkeyHandlerMap}>\r\n            <div id=\"app\"\r\n                /** Prevent accidentally replace the page when dragging image into card art input. */\r\n                onDrop={() => { }}\r\n                className={`language-${languageInfo.codeName} manager-${managerVisible ? 'visible' : 'hidden'}`}\r\n                style={{\r\n                    backgroundImage: `url(\"${\r\n                        process.env.PUBLIC_URL\r\n                    }/asset/image/texture/debut-dark.png\"), linear-gradient(180deg, #00000022, #00000044)`,\r\n                    height: isMobileDevice() ? '-webkit-fill-available' : '100vh',\r\n                    ...({\r\n                        '--card-height': `${CanvasHeight * globalScale}px`,\r\n                        '--card-width': `${CanvasWidth * globalScale}px`,\r\n                        '--global-scale': `${globalScale}`,\r\n                    }),\r\n                }}\r\n            >\r\n                {ocgStyleFile && <link rel=\"stylesheet\" type=\"text/css\" href={ocgStyleFile} />}\r\n                <div\r\n                    className={'app-container'}\r\n                    style={{\r\n                        backgroundImage: `url(\"${process.env.PUBLIC_URL}/asset/image/texture/dark-denim-3.png\")`,\r\n                    }}\r\n                >\r\n                    {isLoading && <StyledAppLoading className=\"app-loading\">\r\n                        {error.length > 0\r\n                            ? <ErrorAlert>\r\n                                {error}\r\n                            </ErrorAlert>\r\n                            : languageInfo.initialMessage ?? ''}\r\n                    </StyledAppLoading>}\r\n                    {/* <div className=\"card-filter-panel\"></div> */}\r\n                    <div className={`card-preview-panel ${isTainted ? 'export-tainted' : 'export-normal'}`}>\r\n                        <StyledDataButtonPanelContainer className=\"data-button-panel\">\r\n                            <div className=\"imexport\">\r\n                                <ExportPanel ref={exportPanelRef}\r\n                                    tainted={isTainted}\r\n                                    artworkCanvas={artworkCanvasRef.current}\r\n                                    onRequireExportData={exportData}\r\n                                    onRequireDownload={() => downloadButtonRef.current?.download()}\r\n                                    onClose={forceRefocus}\r\n                                />\r\n                                <div />\r\n                                <ImportPanel ref={importPanelRef}\r\n                                    onImport={treatNewCard}\r\n                                    onClose={forceRefocus}\r\n                                    allowHotkey={allowHotkey}\r\n                                    language={language}\r\n                                />\r\n                            </div>\r\n                            <BatchConverter language={language} />\r\n                            <DownloadButton ref={downloadButtonRef}\r\n                                canvasMap={canvasMap}\r\n                                imageChangeCount={imageChangeCount}\r\n                                isTainted={isTainted}\r\n                                isInitializing={isInitializing}\r\n                                globalScale={globalScale}\r\n                                onDownloadError={alertDownloadError}\r\n                            />\r\n                            {isTainted && <div id=\"save-button-tainted\" className=\"save-button-container save-button-tainted\">\r\n                                <div className=\"alert-label\">\r\n                                    {language['alert.download.tainted-first-line']}<br />\r\n                                    {language['alert.download.tainted-second-line']} <TaintedCanvasWarning />\r\n                                </div>\r\n                                <Dropdown\r\n                                    className=\"save-button-dropdown\"\r\n                                    placement=\"bottomRight\"\r\n                                    overlay={<ResolutionPicker onChange={() => forceRefocus()} />}\r\n                                >\r\n                                    <ResolutionButton className=\"resolution-option\" onClick={e => e.stopPropagation()}>\r\n                                        <GatewayOutlined className=\"resolution-icon\" />\r\n                                        <span className=\"resolution-overlay\">{resolution[1]}</span>\r\n                                    </ResolutionButton>\r\n                                </Dropdown>\r\n                            </div>}\r\n                        </StyledDataButtonPanelContainer>\r\n                        <CardPreviewContainer className=\"card-preview-container\">\r\n                            <Tooltip title={language['button.reset.tooltip']}>\r\n                                <ResetButton\r\n                                    className=\"reset-button\"\r\n                                    onClick={() => {\r\n                                        const consent = window.confirm(language['prompt.reset.message']);\r\n\r\n                                        if (consent) {\r\n                                            const { setCard, card } = useCard.getState();\r\n                                            const defaultCard = { id: card.id, ...getDefaultCard() };\r\n                                            const contextualDefaultCardData = card.format === 'tcg'\r\n                                                ? defaultCard\r\n                                                : changeCardFormat(defaultCard, 'ocg');\r\n\r\n                                            setCard(contextualDefaultCardData, true);\r\n                                            setImageChangeCount(cnt => cnt + 1);\r\n                                            cardInputRef.current?.forceCardData(contextualDefaultCardData);\r\n                                        }\r\n                                    }}\r\n                                >\r\n                                    <ClearOutlined />\r\n                                </ResetButton>\r\n                            </Tooltip>\r\n                            <Tooltip title={<div className=\"center\">\r\n                                {language['button.full-size.label']}\r\n                                {allowHotkey ? <><br />Ctrl-B / ⌘-B</> : null}\r\n                            </div>}>\r\n                                <LightboxButton className=\"lightbox-button\" onClick={() => displayLightbox()}>\r\n                                    <ZoomInOutlined />\r\n                                </LightboxButton>\r\n                            </Tooltip>\r\n                            {/** Preview canvas is used to display a presentable card for user, in contrast of the actual rendered card below.\r\n                             * The reason is because when the card become bigger, we must resize it down to display it fully, which lead to a blurry or too sharp image. Canvas resizing is better than css resizing, so we use a separate smaller canvas to preview, but forward all user-action through it so user can still copy the card as full-size.\r\n                             */}\r\n                            <canvas\r\n                                key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.2}\r\n                                id=\"preview-canvas\"\r\n                                ref={previewCanvasRef}\r\n                                width={CanvasWidth}\r\n                                height={CanvasHeight}\r\n                            />\r\n                            <CardCanvasGroupContainer className=\"card-canvas-group\">\r\n                                <canvas\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0) + 0.1}\r\n                                    id=\"export-canvas\"\r\n                                    ref={exportCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                {/** Overlay guarding seems very janky, cursor should suffix for now */}\r\n                                <div id=\"export-canvas-guard\" onContextMenu={e => e.preventDefault()}>\r\n                                    {/* <div className=\"canvas-guard-alert\">Generating...</div> */}\r\n                                </div>\r\n                                <canvas id=\"frameCanvas\"\r\n                                    key={(lightboxRef.current?.getCanvasKey() ?? 0)}\r\n                                    ref={frameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"nameCanvas\"\r\n                                    ref={nameCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={148 * globalScale}\r\n                                />\r\n                                <canvas id=\"cardIconCanvas\"\r\n                                    ref={cardIconCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={222 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumScaleCanvas\"\r\n                                    ref={pendulumScaleCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"pendulumEffectCanvas\"\r\n                                    ref={pendulumEffectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={920 * globalScale}\r\n                                />\r\n                                <canvas id=\"typeCanvas\"\r\n                                    ref={typeCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"effectCanvas\"\r\n                                    ref={effectCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"statCanvas\"\r\n                                    ref={statCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"setIdCanvas\"\r\n                                    ref={setIdCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"passwordCanvas\"\r\n                                    ref={passwordCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"creatorCanvas\"\r\n                                    ref={creatorCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"stickerCanvas\"\r\n                                    ref={stickerCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas id=\"finishCanvas\"\r\n                                    ref={finishCanvasRef}\r\n                                    width={CanvasWidth * globalScale}\r\n                                    height={CanvasHeight * globalScale}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={artworkCanvasRef}\r\n                                />\r\n                                <canvas className=\"crop-canvas\"\r\n                                    ref={backgroundCanvasRef}\r\n                                />\r\n                            </CardCanvasGroupContainer>\r\n                        </CardPreviewContainer>\r\n                    </div>\r\n                    {isLoading === false && <CardInputPanel\r\n                        ref={cardInputRef}\r\n                        artworkCanvas={artworkCanvasRef.current}\r\n                        backgroundCanvas={backgroundCanvasRef.current}\r\n                        onSourceLoaded={rerenderAllImage}\r\n                        onCropChange={rerenderCardImage}\r\n                        onTainted={markTaintedImage}\r\n                    />}\r\n                </div>\r\n                <CardManagerPanel\r\n                    language={language}\r\n                    onVisibleChange={toggleManagerMode}\r\n                    onDownload={exportCardInList}\r\n                    onSelect={treatNewCard}\r\n                    onRequestImport={() => {\r\n                        importPanelRef.current?.requestImport('new');\r\n                    }}\r\n                />\r\n                {/** Pixel perfect for card image */}\r\n                <Lightbox\r\n                    ref={lightboxRef}\r\n                    globalScale={globalScale}\r\n                />\r\n                <StyledByMe className=\"by-me\">\r\n                    Made by Lauqerm <img src=\"https://i.imgur.com/RY6IRqn.png\" alt=\"avatar\" />\r\n                </StyledByMe>\r\n            </div>\r\n        </HotKeys>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { useEffect, useRef, useState } from 'react';\r\nimport WebFont from 'webfontloader';\r\nimport { useCard } from './use-card';\r\nimport { useShallow } from 'zustand/react/shallow';\r\n\r\nexport type UseOCGFont = {\r\n    isLanguageInitiating: boolean,\r\n    onBeforeLoad: () => void,\r\n    onActive: () => void,\r\n    onInactive: () => void,\r\n    onFontInactive: (familyName: string, fvd: string) => void,\r\n}\r\nexport const useOCGFont = ({\r\n    isLanguageInitiating,\r\n    onActive,\r\n    onBeforeLoad,\r\n    onFontInactive,\r\n    onInactive,\r\n}: UseOCGFont) => {\r\n    const {\r\n        font,\r\n        format,\r\n    } = useCard(useShallow(state => ({\r\n        format: state.card.format,\r\n        font: state.card.nameStyle.font,\r\n    })));\r\n    const [styleContent, setStyleContent] = useState('');\r\n\r\n    const ocgReady = useRef(false);\r\n    const loadAttempt = useRef(0);\r\n    useEffect(() => {\r\n        if (\r\n            (format === 'ocg' || font === 'OCG')\r\n            && ocgReady.current === false\r\n            && loadAttempt.current <= 3\r\n            && isLanguageInitiating === false\r\n        ) {\r\n            loadAttempt.current += 1;\r\n            setStyleContent(`${process.env.PUBLIC_URL}/asset/ocg-font.css`);\r\n            onBeforeLoad();\r\n\r\n            WebFont.load({\r\n                custom: {\r\n                    families: [\r\n                        'DFHSGothic-W3-WIN-RKSJ-H',\r\n                        'DFKakuTaiHiStd-W4',\r\n                        'FOT-Rodin Pro M',\r\n                        'Yu-Gi-Oh! DF Leisho 3',\r\n                    ],\r\n                    urls: ['asset/ocg-font.css'],\r\n                },\r\n                active: () => {\r\n                    ocgReady.current = true;\r\n                    onActive();\r\n                },\r\n                inactive: () => {\r\n                    ocgReady.current = true;\r\n                    onInactive();\r\n                },\r\n                fontinactive: onFontInactive,\r\n            });\r\n        }\r\n    }, [format, font, isLanguageInitiating, onActive, onBeforeLoad, onFontInactive, onInactive]);\r\n\r\n    return {\r\n        styleContent,\r\n    };\r\n};","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}